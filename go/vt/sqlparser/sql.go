// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const ELSEIF = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const SHIFT_LEFT = 57513
const SHIFT_RIGHT = 57514
const DIV = 57515
const MOD = 57516
const UNARY = 57517
const COLLATE = 57518
const BINARY = 57519
const UNDERSCORE_ARMSCII8 = 57520
const UNDERSCORE_ASCII = 57521
const UNDERSCORE_BIG5 = 57522
const UNDERSCORE_BINARY = 57523
const UNDERSCORE_CP1250 = 57524
const UNDERSCORE_CP1251 = 57525
const UNDERSCORE_CP1256 = 57526
const UNDERSCORE_CP1257 = 57527
const UNDERSCORE_CP850 = 57528
const UNDERSCORE_CP852 = 57529
const UNDERSCORE_CP866 = 57530
const UNDERSCORE_CP932 = 57531
const UNDERSCORE_DEC8 = 57532
const UNDERSCORE_EUCJPMS = 57533
const UNDERSCORE_EUCKR = 57534
const UNDERSCORE_GB18030 = 57535
const UNDERSCORE_GB2312 = 57536
const UNDERSCORE_GBK = 57537
const UNDERSCORE_GEOSTD8 = 57538
const UNDERSCORE_GREEK = 57539
const UNDERSCORE_HEBREW = 57540
const UNDERSCORE_HP8 = 57541
const UNDERSCORE_KEYBCS2 = 57542
const UNDERSCORE_KOI8R = 57543
const UNDERSCORE_KOI8U = 57544
const UNDERSCORE_LATIN1 = 57545
const UNDERSCORE_LATIN2 = 57546
const UNDERSCORE_LATIN5 = 57547
const UNDERSCORE_LATIN7 = 57548
const UNDERSCORE_MACCE = 57549
const UNDERSCORE_MACROMAN = 57550
const UNDERSCORE_SJIS = 57551
const UNDERSCORE_SWE7 = 57552
const UNDERSCORE_TIS620 = 57553
const UNDERSCORE_UCS2 = 57554
const UNDERSCORE_UJIS = 57555
const UNDERSCORE_UTF16 = 57556
const UNDERSCORE_UTF16LE = 57557
const UNDERSCORE_UTF32 = 57558
const UNDERSCORE_UTF8 = 57559
const UNDERSCORE_UTF8MB4 = 57560
const UNDERSCORE_UTF8MB3 = 57561
const INTERVAL = 57562
const WINDOW_EXPR = 57563
const JSON_EXTRACT_OP = 57564
const JSON_UNQUOTE_EXTRACT_OP = 57565
const CREATE = 57566
const ALTER = 57567
const DROP = 57568
const RENAME = 57569
const ANALYZE = 57570
const ADD = 57571
const FLUSH = 57572
const CHANGE = 57573
const MODIFY = 57574
const DEALLOCATE = 57575
const REVERT = 57576
const QUERIES = 57577
const DECLARE = 57578
const FOUND = 57579
const HANDLER = 57580
const CONTINUE = 57581
const EXIT = 57582
const UNDO = 57583
const SQLEXCEPTION = 57584
const SQLSTATE = 57585
const SQLWARNING = 57586
const CONDITION = 57587
const SCHEMA = 57588
const TABLE = 57589
const INDEX = 57590
const VIEW = 57591
const TO = 57592
const IGNORE = 57593
const IF = 57594
const PRIMARY = 57595
const COLUMN = 57596
const SPATIAL = 57597
const FULLTEXT = 57598
const KEY_BLOCK_SIZE = 57599
const CHECK = 57600
const INDEXES = 57601
const ACTION = 57602
const CASCADE = 57603
const CONSTRAINT = 57604
const FOREIGN = 57605
const NO = 57606
const REFERENCES = 57607
const RESTRICT = 57608
const SIGNAL = 57609
const SHOW = 57610
const DESCRIBE = 57611
const EXPLAIN = 57612
const DATE = 57613
const ESCAPE = 57614
const REPAIR = 57615
const OPTIMIZE = 57616
const TRUNCATE = 57617
const COALESCE = 57618
const EXCHANGE = 57619
const REBUILD = 57620
const PARTITIONING = 57621
const REMOVE = 57622
const PREPARE = 57623
const EXECUTE = 57624
const MAXVALUE = 57625
const PARTITION = 57626
const REORGANIZE = 57627
const LESS = 57628
const THAN = 57629
const PROCEDURE = 57630
const TRIGGER = 57631
const VINDEX = 57632
const VINDEXES = 57633
const DIRECTORY = 57634
const NAME = 57635
const UPGRADE = 57636
const STATUS = 57637
const VARIABLES = 57638
const WARNINGS = 57639
const CASCADED = 57640
const DEFINER = 57641
const OPTION = 57642
const SQL = 57643
const UNDEFINED = 57644
const SEQUENCE = 57645
const MERGE = 57646
const TEMPORARY = 57647
const TEMPTABLE = 57648
const INVOKER = 57649
const SECURITY = 57650
const FIRST = 57651
const AFTER = 57652
const LAST = 57653
const VITESS_MIGRATION = 57654
const CANCEL = 57655
const RETRY = 57656
const LAUNCH = 57657
const COMPLETE = 57658
const CLEANUP = 57659
const THROTTLE = 57660
const UNTHROTTLE = 57661
const FORCE_CUTOVER = 57662
const CUTOVER_THRESHOLD = 57663
const EXPIRE = 57664
const RATIO = 57665
const VITESS_THROTTLER = 57666
const BEGIN = 57667
const START = 57668
const TRANSACTION = 57669
const COMMIT = 57670
const ROLLBACK = 57671
const SAVEPOINT = 57672
const RELEASE = 57673
const WORK = 57674
const CONSISTENT = 57675
const SNAPSHOT = 57676
const UNRESOLVED = 57677
const TRANSACTIONS = 57678
const BIT = 57679
const TINYINT = 57680
const SMALLINT = 57681
const MEDIUMINT = 57682
const INT = 57683
const INTEGER = 57684
const BIGINT = 57685
const INTNUM = 57686
const REAL = 57687
const DOUBLE = 57688
const FLOAT_TYPE = 57689
const FLOAT4_TYPE = 57690
const FLOAT8_TYPE = 57691
const DECIMAL_TYPE = 57692
const NUMERIC = 57693
const TIME = 57694
const TIMESTAMP = 57695
const DATETIME = 57696
const YEAR = 57697
const CHAR = 57698
const VARCHAR = 57699
const BOOL = 57700
const CHARACTER = 57701
const VARBINARY = 57702
const NCHAR = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const JSON_SCHEMA_VALID = 57713
const JSON_SCHEMA_VALIDATION_REPORT = 57714
const ENUM = 57715
const GEOMETRY = 57716
const POINT = 57717
const LINESTRING = 57718
const POLYGON = 57719
const GEOMCOLLECTION = 57720
const GEOMETRYCOLLECTION = 57721
const MULTIPOINT = 57722
const MULTILINESTRING = 57723
const MULTIPOLYGON = 57724
const ASCII = 57725
const UNICODE = 57726
const VECTOR = 57727
const NULLX = 57728
const AUTO_INCREMENT = 57729
const APPROXNUM = 57730
const SIGNED = 57731
const UNSIGNED = 57732
const ZEROFILL = 57733
const PURGE = 57734
const BEFORE = 57735
const CODE = 57736
const COLLATION = 57737
const COLUMNS = 57738
const DATABASES = 57739
const ENGINES = 57740
const EVENT = 57741
const EXTENDED = 57742
const FIELDS = 57743
const FULL = 57744
const FUNCTION = 57745
const GTID_EXECUTED = 57746
const KEYSPACES = 57747
const OPEN = 57748
const PLUGINS = 57749
const PRIVILEGES = 57750
const PROCESSLIST = 57751
const SCHEMAS = 57752
const TABLES = 57753
const TRIGGERS = 57754
const USER = 57755
const VGTID_EXECUTED = 57756
const VITESS_KEYSPACES = 57757
const VITESS_METADATA = 57758
const VITESS_MIGRATIONS = 57759
const VITESS_REPLICATION_STATUS = 57760
const VITESS_SHARDS = 57761
const VITESS_TABLETS = 57762
const VITESS_TARGET = 57763
const VSCHEMA = 57764
const VITESS_THROTTLED_APPS = 57765
const NAMES = 57766
const GLOBAL = 57767
const SESSION = 57768
const ISOLATION = 57769
const LEVEL = 57770
const READ = 57771
const WRITE = 57772
const ONLY = 57773
const REPEATABLE = 57774
const COMMITTED = 57775
const UNCOMMITTED = 57776
const SERIALIZABLE = 57777
const CLASS_ORIGIN = 57778
const SUBCLASS_ORIGIN = 57779
const MESSAGE_TEXT = 57780
const MYSQL_ERRNO = 57781
const CONSTRAINT_CATALOG = 57782
const CONSTRAINT_SCHEMA = 57783
const CONSTRAINT_NAME = 57784
const CATALOG_NAME = 57785
const SCHEMA_NAME = 57786
const TABLE_NAME = 57787
const COLUMN_NAME = 57788
const CURSOR_NAME = 57789
const ADDDATE = 57790
const CURRENT_TIMESTAMP = 57791
const DATABASE = 57792
const CURRENT_DATE = 57793
const CURDATE = 57794
const DATE_ADD = 57795
const DATE_SUB = 57796
const NOW = 57797
const SUBDATE = 57798
const CURTIME = 57799
const CURRENT_TIME = 57800
const LOCALTIME = 57801
const LOCALTIMESTAMP = 57802
const CURRENT_USER = 57803
const UTC_DATE = 57804
const UTC_TIME = 57805
const UTC_TIMESTAMP = 57806
const SYSDATE = 57807
const DAY = 57808
const DAY_HOUR = 57809
const DAY_MICROSECOND = 57810
const DAY_MINUTE = 57811
const DAY_SECOND = 57812
const HOUR = 57813
const HOUR_MICROSECOND = 57814
const HOUR_MINUTE = 57815
const HOUR_SECOND = 57816
const MICROSECOND = 57817
const MINUTE = 57818
const MINUTE_MICROSECOND = 57819
const MINUTE_SECOND = 57820
const MONTH = 57821
const QUARTER = 57822
const SECOND = 57823
const SECOND_MICROSECOND = 57824
const YEAR_MONTH = 57825
const WEEK = 57826
const SQL_TSI_DAY = 57827
const SQL_TSI_WEEK = 57828
const SQL_TSI_HOUR = 57829
const SQL_TSI_MINUTE = 57830
const SQL_TSI_MONTH = 57831
const SQL_TSI_QUARTER = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MICROSECOND = 57834
const SQL_TSI_YEAR = 57835
const REPLACE = 57836
const CONVERT = 57837
const CAST = 57838
const SUBSTR = 57839
const SUBSTRING = 57840
const MID = 57841
const SEPARATOR = 57842
const TIMESTAMPADD = 57843
const TIMESTAMPDIFF = 57844
const WEIGHT_STRING = 57845
const LTRIM = 57846
const RTRIM = 57847
const TRIM = 57848
const JSON_ARRAY = 57849
const JSON_OBJECT = 57850
const JSON_QUOTE = 57851
const JSON_DEPTH = 57852
const JSON_TYPE = 57853
const JSON_LENGTH = 57854
const JSON_VALID = 57855
const JSON_ARRAY_APPEND = 57856
const JSON_ARRAY_INSERT = 57857
const JSON_INSERT = 57858
const JSON_MERGE = 57859
const JSON_MERGE_PATCH = 57860
const JSON_MERGE_PRESERVE = 57861
const JSON_REMOVE = 57862
const JSON_REPLACE = 57863
const JSON_SET = 57864
const JSON_UNQUOTE = 57865
const COUNT = 57866
const AVG = 57867
const MAX = 57868
const MIN = 57869
const SUM = 57870
const GROUP_CONCAT = 57871
const BIT_AND = 57872
const BIT_OR = 57873
const BIT_XOR = 57874
const STD = 57875
const STDDEV = 57876
const STDDEV_POP = 57877
const STDDEV_SAMP = 57878
const VAR_POP = 57879
const VAR_SAMP = 57880
const VARIANCE = 57881
const ANY_VALUE = 57882
const REGEXP_INSTR = 57883
const REGEXP_LIKE = 57884
const REGEXP_REPLACE = 57885
const REGEXP_SUBSTR = 57886
const ExtractValue = 57887
const UpdateXML = 57888
const GET_LOCK = 57889
const RELEASE_LOCK = 57890
const RELEASE_ALL_LOCKS = 57891
const IS_FREE_LOCK = 57892
const IS_USED_LOCK = 57893
const LOCATE = 57894
const POSITION = 57895
const ST_GeometryCollectionFromText = 57896
const ST_GeometryFromText = 57897
const ST_LineStringFromText = 57898
const ST_MultiLineStringFromText = 57899
const ST_MultiPointFromText = 57900
const ST_MultiPolygonFromText = 57901
const ST_PointFromText = 57902
const ST_PolygonFromText = 57903
const ST_GeometryCollectionFromWKB = 57904
const ST_GeometryFromWKB = 57905
const ST_LineStringFromWKB = 57906
const ST_MultiLineStringFromWKB = 57907
const ST_MultiPointFromWKB = 57908
const ST_MultiPolygonFromWKB = 57909
const ST_PointFromWKB = 57910
const ST_PolygonFromWKB = 57911
const ST_AsBinary = 57912
const ST_AsText = 57913
const ST_Dimension = 57914
const ST_Envelope = 57915
const ST_IsSimple = 57916
const ST_IsEmpty = 57917
const ST_GeometryType = 57918
const ST_X = 57919
const ST_Y = 57920
const ST_Latitude = 57921
const ST_Longitude = 57922
const ST_EndPoint = 57923
const ST_IsClosed = 57924
const ST_Length = 57925
const ST_NumPoints = 57926
const ST_StartPoint = 57927
const ST_PointN = 57928
const ST_Area = 57929
const ST_Centroid = 57930
const ST_ExteriorRing = 57931
const ST_InteriorRingN = 57932
const ST_NumInteriorRings = 57933
const ST_NumGeometries = 57934
const ST_GeometryN = 57935
const ST_LongFromGeoHash = 57936
const ST_PointFromGeoHash = 57937
const ST_LatFromGeoHash = 57938
const ST_GeoHash = 57939
const ST_AsGeoJSON = 57940
const ST_GeomFromGeoJSON = 57941
const MATCH = 57942
const AGAINST = 57943
const BOOLEAN = 57944
const LANGUAGE = 57945
const WITH = 57946
const QUERY = 57947
const EXPANSION = 57948
const WITHOUT = 57949
const VALIDATION = 57950
const ROLLUP = 57951
const UNUSED = 57952
const ARRAY = 57953
const BYTE = 57954
const CUME_DIST = 57955
const DESCRIPTION = 57956
const DENSE_RANK = 57957
const EMPTY = 57958
const EXCEPT = 57959
const FIRST_VALUE = 57960
const GROUPING = 57961
const GROUPS = 57962
const JSON_TABLE = 57963
const LAG = 57964
const LAST_VALUE = 57965
const LATERAL = 57966
const LEAD = 57967
const NTH_VALUE = 57968
const NTILE = 57969
const OF = 57970
const OVER = 57971
const PERCENT_RANK = 57972
const RANK = 57973
const RECURSIVE = 57974
const ROW_NUMBER = 57975
const SYSTEM = 57976
const WINDOW = 57977
const ACTIVE = 57978
const ADMIN = 57979
const AUTOEXTEND_SIZE = 57980
const BUCKETS = 57981
const CLONE = 57982
const COLUMN_FORMAT = 57983
const COMPONENT = 57984
const DEFINITION = 57985
const ENFORCED = 57986
const ENGINE_ATTRIBUTE = 57987
const EXCLUDE = 57988
const FOLLOWING = 57989
const GET_MASTER_PUBLIC_KEY = 57990
const HISTOGRAM = 57991
const HISTORY = 57992
const INACTIVE = 57993
const INVISIBLE = 57994
const LOCKED = 57995
const MASTER_COMPRESSION_ALGORITHMS = 57996
const MASTER_PUBLIC_KEY_PATH = 57997
const MASTER_TLS_CIPHERSUITES = 57998
const MASTER_ZSTD_COMPRESSION_LEVEL = 57999
const NESTED = 58000
const NETWORK_NAMESPACE = 58001
const NOWAIT = 58002
const NULLS = 58003
const OJ = 58004
const OLD = 58005
const OPTIONAL = 58006
const ORDINALITY = 58007
const ORGANIZATION = 58008
const OTHERS = 58009
const PARTIAL = 58010
const PATH = 58011
const PERSIST = 58012
const PERSIST_ONLY = 58013
const PRECEDING = 58014
const PRIVILEGE_CHECKS_USER = 58015
const PROCESS = 58016
const RANDOM = 58017
const REFERENCE = 58018
const REQUIRE_ROW_FORMAT = 58019
const RESOURCE = 58020
const RESPECT = 58021
const RESTART = 58022
const RETAIN = 58023
const REUSE = 58024
const ROLE = 58025
const SECONDARY = 58026
const SECONDARY_ENGINE = 58027
const SECONDARY_ENGINE_ATTRIBUTE = 58028
const SECONDARY_LOAD = 58029
const SECONDARY_UNLOAD = 58030
const SIMPLE = 58031
const SKIP = 58032
const SRID = 58033
const THREAD_PRIORITY = 58034
const TIES = 58035
const UNBOUNDED = 58036
const VCPU = 58037
const VISIBLE = 58038
const RETURNING = 58039
const MANUAL = 58040
const PARALLEL = 58041
const QUALIFY = 58042
const TABLESAMPLE = 58043
const OUT = 58044
const INOUT = 58045
const FORMAT_BYTES = 58046
const FORMAT_PICO_TIME = 58047
const PS_CURRENT_THREAD_ID = 58048
const PS_THREAD_ID = 58049
const GTID_SUBSET = 58050
const GTID_SUBTRACT = 58051
const WAIT_FOR_EXECUTED_GTID_SET = 58052
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58053
const FORMAT = 58054
const TREE = 58055
const VITESS = 58056
const TRADITIONAL = 58057
const VTEXPLAIN = 58058
const VEXPLAIN = 58059
const PLAN = 58060
const LOCAL = 58061
const LOW_PRIORITY = 58062
const NO_WRITE_TO_BINLOG = 58063
const LOGS = 58064
const ERROR = 58065
const GENERAL = 58066
const HOSTS = 58067
const OPTIMIZER_COSTS = 58068
const USER_RESOURCES = 58069
const SLOW = 58070
const CHANNEL = 58071
const RELAY = 58072
const EXPORT = 58073
const CURRENT = 58074
const ROW = 58075
const ROWS = 58076
const AVG_ROW_LENGTH = 58077
const CONNECTION = 58078
const CHECKSUM = 58079
const DELAY_KEY_WRITE = 58080
const ENCRYPTION = 58081
const ENGINE = 58082
const INSERT_METHOD = 58083
const MAX_ROWS = 58084
const MIN_ROWS = 58085
const PACK_KEYS = 58086
const PASSWORD = 58087
const FIXED = 58088
const DYNAMIC = 58089
const COMPRESSED = 58090
const REDUNDANT = 58091
const COMPACT = 58092
const ROW_FORMAT = 58093
const STATS_AUTO_RECALC = 58094
const STATS_PERSISTENT = 58095
const STATS_SAMPLE_PAGES = 58096
const STORAGE = 58097
const MEMORY = 58098
const DISK = 58099
const PARTITIONS = 58100
const LINEAR = 58101
const RANGE = 58102
const LIST = 58103
const SUBPARTITION = 58104
const SUBPARTITIONS = 58105
const HASH = 58106

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"DECLARE",
	"FOUND",
	"HANDLER",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"SQLEXCEPTION",
	"SQLSTATE",
	"SQLWARNING",
	"CONDITION",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SIGNAL",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 109,
	17, 109,
	-2, 5,
	-1, 54,
	1, 224,
	782, 224,
	-2, 232,
	-1, 55,
	149, 232,
	192, 232,
	376, 232,
	-2, 592,
	-1, 63,
	38, 853,
	265, 853,
	276, 853,
	312, 867,
	313, 867,
	-2, 855,
	-1, 68,
	267, 891,
	-2, 889,
	-1, 130,
	1, 225,
	782, 225,
	-2, 232,
	-1, 141,
	150, 477,
	270, 477,
	-2, 581,
	-1, 160,
	149, 232,
	192, 232,
	376, 232,
	-2, 601,
	-1, 773,
	178, 101,
	-2, 103,
	-1, 982,
	95, 1729,
	-2, 1551,
	-1, 983,
	95, 1730,
	237, 1734,
	-2, 1552,
	-1, 984,
	237, 1733,
	-2, 102,
	-1, 1070,
	65, 965,
	-2, 978,
	-1, 1075,
	264, 1712,
	-2, 1621,
	-1, 1157,
	275, 1178,
	280, 1178,
	-2, 488,
	-1, 1245,
	1, 649,
	782, 649,
	-2, 232,
	-1, 1569,
	237, 1734,
	-2, 1552,
	-1, 1782,
	65, 966,
	-2, 982,
	-1, 1783,
	65, 967,
	-2, 983,
	-1, 1860,
	149, 232,
	192, 232,
	376, 232,
	-2, 527,
	-1, 1937,
	150, 477,
	270, 477,
	-2, 581,
	-1, 1946,
	275, 1179,
	280, 1179,
	-2, 489,
	-1, 2393,
	237, 1738,
	-2, 1732,
	-1, 2394,
	237, 1734,
	-2, 1730,
	-1, 2512,
	149, 232,
	192, 232,
	376, 232,
	-2, 528,
	-1, 2519,
	28, 253,
	-2, 255,
	-1, 2993,
	86, 159,
	96, 159,
	-2, 1045,
	-1, 3057,
	757, 771,
	-2, 745,
	-1, 3291,
	55, 1671,
	-2, 1665,
	-1, 3610,
	97, 1612,
	-2, 1617,
	-1, 4135,
	757, 771,
	-2, 759,
	-1, 4175,
	16, 109,
	17, 109,
	165, 90,
	-2, 879,
	-1, 4232,
	165, 91,
	-2, 109,
	-1, 4252,
	98, 703,
	104, 703,
	114, 703,
	194, 703,
	195, 703,
	196, 703,
	197, 703,
	198, 703,
	199, 703,
	200, 703,
	201, 703,
	202, 703,
	203, 703,
	204, 703,
	205, 703,
	206, 703,
	207, 703,
	208, 703,
	209, 703,
	210, 703,
	211, 703,
	212, 703,
	213, 703,
	214, 703,
	215, 703,
	216, 703,
	217, 703,
	218, 703,
	219, 703,
	220, 703,
	221, 703,
	222, 703,
	223, 703,
	224, 703,
	225, 703,
	226, 703,
	227, 703,
	228, 703,
	229, 703,
	230, 703,
	231, 703,
	232, 703,
	233, 703,
	234, 703,
	235, 703,
	-2, 2134,
	-1, 4325,
	163, 96,
	165, 96,
	-2, 109,
	-1, 4409,
	165, 95,
	-2, 109,
	-1, 4415,
	16, 109,
	17, 109,
	-2, 100,
}

const yyPrivate = 57344

const yyLast = 61471

var yyAct = [...]int{
	998, 3774, 3775, 89, 993, 4372, 4367, 3773, 985, 4356,
	4233, 4232, 2187, 4234, 946, 4385, 4117, 947, 805, 4373,
	3418, 4302, 4214, 2509, 4303, 4330, 4250, 2199, 3723, 3568,
	1314, 2066, 4167, 4374, 3432, 3343, 4379, 1863, 3350, 3396,
	87, 4019, 6, 2422, 4096, 2568, 2424, 3401, 3398, 3227,
	3416, 3358, 1312, 3397, 3711, 3415, 3395, 3400, 3399, 3304,
	2578, 3816, 777, 3308, 3305, 3622, 3608, 3827, 3141, 3387,
	3116, 127, 2966, 4094, 2463, 2483, 3644, 951, 986, 2480,
	43, 3302, 3292, 2953, 771, 3598, 2547, 772, 1068, 3027,
	89, 1189, 3098, 2938, 3439, 3054, 2552, 3028, 1127, 3029,
	169, 2497, 2609, 2978, 1962, 2484, 1095, 44, 1920, 2959,
	2442, 2485, 1068, 1102, 1065, 2911, 2927, 2379, 2347, 42,
	2937, 2221, 2133, 2183, 3089, 2346, 2587, 1137, 1944, 155,
	1074, 2472, 2554, 3020, 1147, 1852, 2995, 1000, 1832, 1817,
	774, 1094, 3633, 1800, 2487, 1152, 948, 3142, 3307, 2451,
	109, 1763, 1582, 2227, 105, 2158, 2147, 1507, 110, 1490,
	2062, 1951, 1134, 1131, 1135, 1067, 1153, 1071, 1158, 1154,
	1155, 2464, 2543, 1851, 782, 1837, 1112, 2544, 1114, 1090,
	3811, 1238, 1078, 2909, 1785, 1165, 104, 2235, 2254, 1097,
	1565, 1302, 3803, 1091, 787, 1541, 2074, 1073, 112, 11,
	3569, 1936, 138, 10, 775, 9, 2124, 1063, 133, 1072,
	173, 131, 132, 139, 1107, 1076, 111, 1586, 4230, 1288,
	1249, 1243, 764, 103, 4357, 3712, 1310, 86, 2580, 2581,
	2582, 1106, 3384, 2580, 4151, 707, 1591, 3045, 1237, 2624,
	96, 3077, 3076, 3704, 1062, 4274, 1819, 3106, 3107, 1191,
	2222, 1259, 4146, 4147, 2419, 2420, 2140, 140, 2139, 1082,
	4152, 1194, 1208, 1209, 1210, 134, 1213, 1214, 1215, 1216,
	1128, 2138, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 2137,
	2136, 2135, 1083, 1122, 2105, 1258, 1121, 765, 704, 3042,
	705, 1080, 2, 1064, 2028, 2907, 1144, 2676, 3288, 4125,
	2613, 3047, 4306, 1168, 1815, 1066, 1120, 1124, 950, 2955,
	3231, 4361, 3406, 3669, 4404, 1822, 4301, 767, 1169, 749,
	1524, 1139, 1195, 1198, 1199, 3403, 4347, 3778, 1820, 1143,
	3572, 134, 1142, 1141, 743, 1211, 4360, 116, 117, 118,
	1202, 121, 1096, 3778, 2612, 1823, 196, 3406, 197, 4147,
	3571, 699, 3067, 1504, 4278, 743, 1501, 98, 1821, 2460,
	3070, 2459, 4097, 762, 763, 1061, 2872, 999, 4276, 135,
	2145, 3458, 3404, 1056, 1057, 1058, 1059, 1145, 4229, 4277,
	1070, 1050, 749, 4015, 1075, 178, 988, 1051, 1002, 1003,
	1004, 989, 4014, 4275, 990, 991, 1193, 992, 1192, 134,
	3717, 3410, 4272, 3718, 4316, 4025, 1796, 3404, 3735, 1492,
	3724, 1109, 1110, 4211, 2569, 1005, 1006, 1120, 1124, 950,
	2606, 4024, 2192, 3777, 4255, 3484, 1520, 2453, 1853, 3004,
	1854, 743, 3003, 2908, 2611, 3005, 3410, 3339, 3734, 3777,
	3105, 3818, 4215, 3340, 3341, 175, 2504, 2505, 176, 2680,
	2683, 2117, 2118, 2503, 3088, 1278, 1508, 1054, 1053, 1307,
	1266, 1503, 4118, 2070, 3016, 1267, 743, 1279, 3436, 1521,
	1272, 1522, 1523, 88, 195, 738, 743, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 4219,
	2681, 1266, 3434, 723, 100, 88, 1267, 3407, 3466, 88,
	88, 3464, 90, 3163, 1265, 2421, 1264, 1283, 1284, 2263,
	2522, 2521, 2962, 2963, 1485, 2674, 721, 2116, 2563, 757,
	1113, 2120, 743, 2969, 761, 755, 98, 1242, 3440, 1250,
	1251, 744, 3407, 4260, 1508, 3437, 1280, 1502, 4307, 1273,
	3090, 3427, 2557, 1306, 1767, 1518, 3841, 3055, 2588, 1305,
	100, 2970, 744, 4258, 1491, 2018, 2933, 718, 2629, 4308,
	3274, 2443, 1253, 4265, 4266, 1212, 733, 4067, 3275, 4068,
	179, 2631, 3691, 3360, 3361, 2947, 2071, 2948, 98, 185,
	4259, 728, 98, 98, 1811, 2441, 1254, 1281, 1282, 3435,
	1299, 3619, 3048, 731, 1484, 2650, 741, 2651, 2443, 2652,
	2019, 2628, 2020, 1304, 742, 1287, 1246, 3999, 3093, 2591,
	2677, 3706, 2678, 3705, 2630, 2653, 1285, 1123, 1117, 1115,
	2255, 1218, 3428, 3429, 1217, 2257, 1286, 2632, 744, 2262,
	2258, 2627, 1148, 2259, 2260, 2261, 1149, 3782, 2256, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2481, 1149,
	1187, 1186, 1185, 1518, 1184, 1183, 1182, 1181, 1514, 1180,
	1175, 1506, 1770, 744, 708, 1929, 710, 724, 1188, 746,
	3362, 745, 714, 744, 712, 716, 725, 717, 1132, 711,
	3043, 722, 1130, 3164, 713, 726, 727, 730, 734, 735,
	736, 732, 729, 3359, 720, 747, 4405, 1132, 1311, 3382,
	1311, 1311, 1161, 1132, 1160, 3362, 2556, 4414, 3230, 170,
	1542, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340,
	4341, 4342, 4343, 2452, 1849, 2063, 1108, 3094, 1123, 1117,
	1115, 1241, 2617, 3455, 2616, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1551, 1550, 1552, 1553, 2059, 98, 1493, 744,
	1068, 1566, 1571, 1572, 2450, 1575, 1577, 1578, 1579, 1580,
	1581, 1205, 1584, 1585, 1587, 1587, 1514, 1587, 1587, 1592,
	1592, 1592, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1576, 1567, 1252, 4124,
	1719, 3046, 1721, 1722, 1723, 1724, 1725, 1300, 2610, 1819,
	3049, 1146, 1116, 3620, 1592, 1592, 1592, 1592, 1592, 1592,
	1262, 4170, 1268, 1269, 1270, 1271, 1482, 1483, 1481, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 743, 1563, 3733, 1308, 1309, 1559, 1560,
	1561, 1562, 4130, 3820, 3819, 2945, 3611, 3069, 1573, 1556,
	171, 3702, 1178, 1176, 4217, 3278, 3079, 183, 1850, 2048,
	4389, 1556, 1513, 1510, 1511, 1512, 1517, 1519, 1516, 2681,
	1515, 1167, 1588, 1276, 1589, 1590, 1167, 2467, 748, 1263,
	1509, 3408, 3409, 2030, 2029, 2031, 2032, 2033, 91, 1074,
	3556, 3068, 4216, 3776, 3412, 3097, 1593, 1594, 191, 739,
	1760, 2932, 3667, 3668, 3670, 2682, 1766, 2449, 1167, 3776,
	1500, 4298, 1197, 1116, 740, 1068, 3408, 3409, 1160, 1068,
	1885, 2448, 1196, 3065, 2444, 1068, 1756, 1950, 2060, 3412,
	1257, 2912, 2914, 4290, 698, 743, 4289, 1244, 3087, 4402,
	1244, 3086, 97, 2560, 1557, 1558, 3110, 172, 177, 174,
	180, 181, 182, 184, 186, 187, 188, 189, 2698, 1074,
	4378, 4270, 2608, 190, 192, 193, 194, 1204, 1757, 4113,
	1513, 1510, 1511, 1512, 1517, 1519, 1516, 3701, 1515, 2467,
	3658, 3640, 4264, 3000, 2561, 1166, 2965, 2884, 1509, 89,
	1166, 2559, 1774, 2195, 97, 1841, 1778, 1807, 97, 97,
	1810, 1814, 1067, 2638, 2634, 2636, 2637, 2635, 2639, 2640,
	2641, 2642, 1720, 1256, 1179, 1177, 1295, 3239, 1297, 3238,
	2960, 4262, 1166, 130, 1776, 2562, 4263, 3258, 109, 1074,
	706, 1923, 1777, 2510, 1556, 2558, 110, 2236, 1757, 1289,
	1726, 1727, 1728, 1729, 1730, 1731, 1553, 1949, 1764, 3338,
	2709, 3100, 2075, 1536, 2237, 1772, 3099, 1294, 1296, 2047,
	744, 1086, 1303, 1261, 3256, 1796, 43, 3456, 1818, 4381,
	1548, 1549, 1551, 1550, 1552, 1553, 112, 3100, 1872, 124,
	4138, 1190, 3099, 3697, 2465, 2466, 1926, 1927, 1928, 3632,
	1167, 2052, 2454, 2050, 2051, 2049, 2053, 2054, 2055, 1758,
	1275, 2129, 2056, 4387, 1942, 4408, 4388, 1855, 4386, 1798,
	1242, 1277, 1804, 1242, 1236, 4245, 2913, 4285, 2013, 1806,
	1805, 3137, 4368, 4396, 1775, 1761, 2228, 2228, 2718, 2943,
	1964, 1935, 1965, 1064, 1967, 1969, 4317, 2068, 1973, 1975,
	1977, 1979, 1981, 1813, 1954, 1523, 1801, 1803, 1995, 1311,
	2709, 3836, 1066, 2003, 2004, 1773, 1522, 1523, 125, 2009,
	2010, 2605, 744, 1811, 1808, 1956, 1167, 3675, 1292, 1254,
	2607, 3674, 1293, 1886, 1846, 1847, 1953, 2595, 1959, 1240,
	1958, 1915, 1298, 1948, 2603, 1178, 2465, 2466, 1176, 4309,
	2600, 1167, 1991, 3659, 2234, 1994, 4406, 1996, 1290, 1952,
	1952, 1081, 1932, 1933, 1166, 3730, 1203, 3731, 1945, 1524,
	1200, 2076, 4391, 2163, 1931, 2044, 1167, 2045, 1260, 1291,
	2046, 1779, 1245, 2151, 2152, 2688, 2689, 1999, 2164, 1554,
	1555, 2162, 2043, 2604, 2151, 2152, 2149, 2150, 1796, 1899,
	1902, 1903, 1904, 1905, 1906, 1907, 2233, 1908, 1909, 1911,
	1912, 1910, 1913, 1914, 1887, 1888, 1889, 1890, 1870, 1871,
	1900, 2148, 1873, 2064, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 4311, 4007, 1883, 1891, 1892, 1893, 1894,
	1166, 1895, 1896, 1897, 1898, 1170, 1160, 1884, 4006, 1239,
	1172, 1524, 4407, 4181, 1173, 1171, 1546, 1547, 1548, 1549,
	1551, 1550, 1552, 1553, 1143, 1166, 134, 1142, 1141, 1167,
	1170, 1160, 3997, 3018, 1241, 1172, 1174, 1241, 3346, 1173,
	1171, 2081, 1530, 1531, 1532, 1533, 1534, 1535, 1529, 1526,
	1166, 1311, 1311, 1524, 2077, 2078, 1160, 1163, 1164, 4105,
	1132, 2103, 4182, 98, 1157, 1161, 3747, 89, 2082, 3746,
	89, 3682, 3681, 2600, 2038, 2089, 2090, 2091, 1521, 196,
	1522, 1523, 1093, 2161, 3671, 2036, 1156, 4410, 3385, 3347,
	1002, 1003, 1004, 3378, 2079, 2102, 3025, 1524, 3024, 3023,
	2566, 2083, 135, 2085, 2086, 2087, 2088, 2039, 4106, 2125,
	2092, 3117, 2125, 2025, 3349, 2219, 2602, 1093, 178, 2023,
	2022, 2381, 2104, 2021, 2011, 2005, 2002, 2001, 2000, 1971,
	2383, 1771, 2190, 2190, 3344, 749, 2188, 2188, 1092, 1093,
	1542, 2191, 3109, 1166, 43, 2037, 997, 43, 3286, 1160,
	1163, 1164, 1849, 1132, 3360, 3361, 2035, 1157, 1161, 1524,
	1521, 3345, 1522, 1523, 3009, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1551, 1550, 1552, 1553, 1487, 1796, 175, 4345,
	3664, 176, 749, 4310, 2024, 2153, 4133, 1524, 1074, 4322,
	1796, 98, 3007, 4132, 749, 1524, 3351, 2576, 4109, 2575,
	1524, 2714, 1521, 4108, 1522, 1523, 3119, 195, 4107, 2755,
	1524, 4287, 2274, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1551, 1550, 1552, 1553, 1901, 1756, 2211, 2200, 2201, 2202,
	2203, 2213, 2204, 2205, 2206, 2218, 2214, 2207, 2208, 2215,
	2216, 2217, 2209, 2210, 2212, 2574, 1521, 2573, 1522, 1523,
	2166, 4002, 2168, 2169, 2170, 2171, 2172, 2173, 2175, 2177,
	2178, 2179, 2180, 2181, 2182, 1825, 2128, 1757, 3987, 2128,
	2126, 2223, 2127, 2126, 3359, 2127, 2130, 2110, 2111, 2713,
	3129, 3128, 3127, 1567, 3986, 3121, 3362, 3125, 1796, 3120,
	3835, 3118, 4320, 1796, 4126, 1524, 3123, 1925, 4358, 1524,
	2380, 2229, 2160, 1796, 2165, 3122, 3833, 2572, 1521, 2571,
	1522, 1523, 3743, 1755, 1826, 2167, 1754, 3139, 1752, 4297,
	1796, 2393, 2392, 1750, 3124, 3126, 2298, 2194, 1748, 1753,
	1584, 1749, 1747, 179, 1751, 3679, 1521, 2290, 1522, 1523,
	1925, 1796, 185, 2391, 1521, 3663, 1522, 1523, 1542, 1521,
	1087, 1522, 1523, 3441, 2238, 2239, 2240, 2241, 1088, 1521,
	1524, 1522, 1523, 3438, 1524, 1520, 1796, 2382, 2252, 1925,
	4210, 2759, 2273, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1551, 1550, 1552, 1553, 3381, 1830, 1524, 4225, 1796, 2757,
	2458, 4223, 1796, 1542, 3380, 2697, 3091, 1795, 1758, 1520,
	1796, 4034, 1092, 1093, 1925, 4191, 1524, 3034, 3348, 1925,
	4187, 2390, 2473, 2474, 2396, 2397, 3021, 2489, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1551, 1550, 1552, 1553, 1752,
	2745, 4087, 1796, 109, 3715, 4123, 4010, 1796, 4033, 106,
	1746, 110, 2393, 2478, 1521, 2288, 1522, 1523, 1521, 107,
	1522, 1523, 4221, 1796, 3991, 109, 1829, 2519, 2426, 1925,
	3998, 106, 2671, 110, 2391, 2438, 2663, 108, 3715, 1796,
	1542, 107, 170, 1544, 1545, 1546, 1547, 1548, 1549, 1551,
	1550, 1552, 1553, 1091, 2662, 2159, 1524, 2432, 2622, 2433,
	1137, 1925, 3713, 3990, 2491, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1551, 1550, 1552, 1553, 2600, 1796, 3473, 1521,
	1796, 1522, 1523, 1521, 2414, 1522, 1523, 2446, 1137, 2528,
	2529, 2530, 2531, 1082, 2621, 2371, 2372, 2373, 2374, 2375,
	2514, 2513, 1796, 3638, 1796, 1521, 2462, 1522, 1523, 2439,
	2495, 2427, 2395, 2839, 1796, 2398, 2399, 2523, 2106, 2524,
	2525, 2526, 2527, 1524, 2445, 1521, 2072, 1522, 1523, 1524,
	3371, 3370, 115, 2533, 2589, 2455, 2535, 2536, 2537, 2538,
	2034, 2549, 2026, 114, 115, 113, 2016, 2517, 2468, 1796,
	3617, 2416, 2555, 108, 2476, 114, 1542, 113, 108, 1538,
	1122, 1539, 1524, 1121, 2501, 2500, 2012, 2499, 2516, 1542,
	2008, 2515, 1524, 3368, 3369, 3056, 1540, 1554, 1555, 1537,
	2586, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1550,
	1552, 1553, 2565, 2007, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1551, 1550, 1552, 1553, 1521, 1524, 1522, 1523, 3366,
	3367, 2707, 2006, 1524, 1827, 4080, 1796, 2594, 1796, 2550,
	2597, 2706, 2598, 1796, 2564, 2546, 2539, 2541, 2542, 1301,
	1796, 2967, 3352, 2614, 3366, 3365, 3356, 2975, 1796, 2681,
	3078, 1919, 3059, 3355, 3052, 3053, 2193, 1796, 3635, 2550,
	2593, 1168, 2596, 1524, 2592, 4312, 2930, 114, 2219, 2996,
	2996, 1524, 2615, 2618, 4078, 1796, 1169, 2619, 2620, 3333,
	108, 2967, 1521, 3039, 1522, 1523, 1952, 3357, 1521, 2681,
	1522, 1523, 3353, 1925, 1924, 2601, 2686, 3354, 1919, 1918,
	1861, 1860, 3303, 171, 2626, 1068, 1068, 1068, 4075, 1796,
	183, 1524, 2974, 3631, 2625, 4057, 1796, 2518, 2975, 3631,
	1520, 1521, 4165, 1522, 1523, 1577, 3634, 1577, 4137, 1925,
	4101, 1521, 2975, 1522, 1523, 2705, 1524, 2997, 2997, 3576,
	1524, 1520, 3368, 2701, 2928, 1524, 3261, 2999, 2681, 2502,
	2839, 191, 2742, 1524, 2741, 3597, 1796, 1524, 3631, 2600,
	1069, 2600, 2583, 3590, 1796, 1521, 1524, 1522, 1523, 2471,
	2457, 2656, 1521, 2975, 1522, 1523, 2393, 2392, 1812, 2211,
	2200, 2201, 2202, 2203, 2213, 2204, 2205, 2206, 2218, 2214,
	2207, 2208, 2215, 2216, 2217, 2209, 2210, 2212, 2704, 2417,
	172, 177, 174, 180, 181, 182, 184, 186, 187, 188,
	189, 100, 1521, 2193, 1522, 1523, 190, 192, 193, 194,
	1521, 1524, 1522, 1523, 3683, 2673, 2131, 2115, 3587, 1796,
	1524, 2058, 3585, 1796, 1848, 1828, 1151, 3548, 1796, 2679,
	1150, 1524, 4268, 98, 3388, 3546, 1796, 1524, 3031, 3542,
	1796, 1524, 4193, 1987, 2694, 2687, 2696, 1524, 3539, 1796,
	1521, 1524, 1522, 1523, 4021, 2699, 1524, 2700, 2693, 3988,
	3848, 128, 1524, 3696, 3693, 3677, 1524, 3489, 3488, 2665,
	2666, 3684, 3685, 3686, 2668, 1521, 1921, 1522, 1523, 1521,
	2702, 1522, 1523, 2669, 1521, 2548, 1522, 1523, 3390, 2690,
	2691, 2692, 1521, 3386, 1522, 1523, 1521, 2160, 1522, 1523,
	1988, 1989, 1990, 3537, 1796, 1521, 3284, 1522, 1523, 2695,
	3060, 3030, 3535, 1796, 2545, 2540, 2534, 1524, 2532, 2041,
	2717, 1947, 1244, 3533, 1796, 1943, 1917, 1524, 3433, 3531,
	1796, 126, 2883, 3529, 1796, 1524, 3645, 3646, 4353, 3527,
	1796, 4022, 1524, 3525, 1796, 2563, 2430, 4141, 3523, 1796,
	4351, 4304, 1524, 4145, 3521, 1796, 4062, 3648, 3519, 1796,
	1521, 3616, 1522, 1523, 2915, 3031, 1524, 3615, 3614, 1521,
	3687, 1522, 1523, 2190, 2108, 3303, 2753, 2188, 3279, 2657,
	1521, 2918, 1522, 1523, 1983, 3802, 1521, 3801, 1522, 1523,
	1521, 3651, 1522, 1523, 3650, 3322, 1521, 1068, 1522, 1523,
	1521, 3325, 1522, 1523, 3321, 1521, 3326, 1522, 1523, 3517,
	1796, 1521, 2916, 1522, 1523, 1521, 1524, 1522, 1523, 3515,
	1796, 2972, 2973, 3688, 3689, 3690, 2724, 3513, 1796, 4023,
	2489, 2461, 1524, 1068, 2992, 4122, 703, 1984, 1985, 1986,
	3800, 2109, 3323, 2739, 3511, 1796, 3327, 3324, 2984, 2985,
	1824, 4295, 1524, 2919, 2436, 2921, 3639, 3266, 3509, 1796,
	1084, 1074, 1524, 2971, 3265, 2871, 1521, 1524, 1522, 1523,
	1074, 1524, 3293, 3295, 4104, 3624, 1521, 2952, 1522, 1523,
	2159, 3296, 1524, 3623, 1521, 3826, 1522, 1523, 3828, 3627,
	3290, 1521, 2057, 1522, 1523, 1052, 1524, 2936, 43, 3364,
	3014, 1521, 1764, 1522, 1523, 2990, 1524, 2989, 4029, 2906,
	2991, 1085, 766, 3035, 2649, 1521, 2961, 1522, 1523, 1207,
	2648, 2236, 1524, 2647, 3495, 1796, 2156, 2154, 2155, 2935,
	2646, 2931, 2926, 1101, 2934, 1818, 1524, 2950, 2237, 3017,
	3019, 2645, 3064, 1524, 3471, 1796, 2644, 1100, 1524, 1757,
	2964, 2643, 1206, 3010, 2904, 1796, 106, 2994, 3449, 2902,
	1796, 106, 108, 2877, 1796, 1521, 107, 1522, 1523, 1524,
	3030, 107, 3103, 2998, 2854, 1796, 4293, 1524, 3001, 3629,
	1486, 1521, 3075, 1522, 1523, 1524, 3008, 2555, 3033, 3994,
	4327, 2949, 3066, 3036, 3037, 135, 2473, 2474, 2846, 1796,
	3011, 1521, 108, 1522, 1523, 4383, 3283, 2660, 3022, 4329,
	4228, 1521, 1524, 1522, 1523, 3698, 1521, 1524, 1522, 1523,
	1521, 1524, 1522, 1523, 4017, 3363, 3032, 2988, 2837, 1796,
	2456, 1521, 1524, 1522, 1523, 2835, 1796, 1138, 3264, 3040,
	2822, 1796, 4328, 113, 3599, 1521, 3263, 1522, 1523, 2416,
	2685, 3072, 2114, 1935, 4086, 1521, 1524, 1522, 1523, 2113,
	1524, 2820, 1796, 4085, 3061, 3062, 4065, 3113, 3114, 2818,
	1796, 1521, 3834, 1522, 1523, 3812, 3832, 2816, 1796, 4354,
	3831, 3071, 3813, 3694, 3628, 1521, 3626, 1522, 1523, 3391,
	2584, 1930, 1521, 1524, 1522, 1523, 115, 1521, 1099, 1522,
	1523, 1524, 114, 3073, 2814, 1796, 1524, 114, 3609, 2812,
	1796, 1524, 3092, 2810, 1796, 2967, 3786, 3130, 1521, 3095,
	1522, 1523, 2930, 1524, 3653, 3111, 1521, 1524, 1522, 1523,
	4355, 4354, 4355, 1524, 1521, 3167, 1522, 1523, 3148, 3149,
	3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 2808, 1796,
	2743, 2428, 2806, 1796, 1524, 1842, 1834, 4110, 3165, 119,
	120, 1521, 3662, 1522, 1523, 3, 1521, 115, 1522, 1523,
	1521, 3131, 1522, 1523, 102, 1, 115, 1524, 114, 1060,
	113, 1521, 3115, 1522, 1523, 2804, 1796, 114, 108, 113,
	3132, 1489, 4174, 2802, 1796, 5, 1488, 3666, 2800, 1796,
	1524, 4257, 719, 2798, 1796, 1521, 2418, 1522, 1523, 1521,
	1762, 1522, 1523, 3225, 4305, 2796, 1796, 4253, 4254, 2794,
	1796, 3169, 2027, 2017, 3101, 2792, 1796, 3102, 3725, 2345,
	4018, 3814, 3815, 2380, 3817, 2380, 3394, 2590, 3692, 2553,
	1797, 1799, 1521, 3112, 1522, 1523, 2790, 1796, 1159, 160,
	1521, 2511, 1522, 1523, 2512, 1521, 3051, 1522, 1523, 4205,
	1521, 123, 1522, 1523, 1125, 122, 3234, 1162, 1274, 2788,
	1796, 2489, 1521, 2585, 1522, 1523, 1521, 3243, 1522, 1523,
	3716, 3015, 1521, 2520, 1522, 1523, 1867, 3158, 1865, 1866,
	1864, 1869, 2783, 1796, 1868, 4169, 3457, 2744, 3205, 3555,
	2382, 3133, 2382, 1521, 2119, 1522, 1523, 756, 2987, 750,
	198, 3310, 1856, 89, 1835, 2112, 2489, 2489, 2489, 2489,
	2489, 3215, 3216, 3217, 3218, 3219, 1521, 1524, 1522, 1523,
	1201, 1524, 709, 3233, 3372, 3235, 2489, 2623, 715, 2489,
	3268, 1574, 2107, 3262, 3002, 3242, 3270, 1119, 2491, 1521,
	1524, 1522, 1523, 1074, 1524, 1111, 1089, 2429, 3243, 2920,
	3260, 1118, 3232, 1524, 3995, 3311, 3254, 1524, 3621, 3289,
	3291, 2068, 2954, 1524, 3315, 3294, 3287, 3332, 4103, 3825,
	1524, 4326, 3269, 3267, 4192, 3012, 3277, 1831, 3575, 1524,
	1071, 2716, 2226, 2491, 2491, 2491, 2491, 2491, 3411, 1564,
	3280, 3281, 3282, 781, 2488, 952, 3297, 3298, 3419, 1816,
	3781, 3334, 1524, 2491, 3335, 2146, 2491, 779, 3314, 3592,
	1073, 3316, 3424, 3588, 3319, 3423, 3420, 778, 3317, 3318,
	3328, 3320, 1072, 3207, 776, 3209, 109, 1524, 3255, 3257,
	3259, 3336, 2779, 1796, 110, 2922, 2777, 1796, 3300, 2968,
	3342, 3220, 3221, 3222, 3223, 3554, 3306, 1524, 1528, 2770,
	1796, 3306, 3376, 3377, 1527, 2768, 1796, 3375, 3374, 3373,
	987, 2910, 3550, 1843, 2979, 2977, 1521, 2976, 1522, 1523,
	1521, 3486, 1522, 1523, 2658, 2496, 3647, 3643, 4249, 2490,
	2486, 3392, 2929, 2555, 938, 937, 3413, 788, 780, 1521,
	770, 1522, 1523, 1521, 3485, 1522, 1523, 3430, 1524, 1001,
	936, 935, 1521, 1524, 1522, 1523, 1521, 1050, 1522, 1523,
	1093, 3421, 1521, 1051, 1522, 1523, 3445, 3442, 3444, 1521,
	3026, 1522, 1523, 2189, 3422, 2944, 1809, 3452, 1521, 4294,
	1522, 1523, 3393, 3285, 2946, 3013, 3273, 1505, 3462, 3477,
	1781, 1784, 3478, 3479, 3480, 3481, 3482, 2437, 1802, 3454,
	4128, 1521, 2684, 1522, 1523, 3483, 3459, 3460, 1780, 3461,
	4135, 3402, 3463, 3710, 3465, 3383, 3467, 1577, 1524, 3057,
	2577, 1577, 71, 47, 4095, 4166, 1521, 930, 1522, 1523,
	927, 3783, 3784, 3785, 3228, 3229, 4148, 3600, 4149, 3602,
	3475, 926, 4150, 2283, 1499, 2900, 1521, 1524, 1522, 1523,
	1496, 3041, 3610, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 3453, 2121, 1521, 1524, 1522,
	1523, 101, 1521, 37, 1522, 1523, 36, 35, 34, 1524,
	2899, 33, 27, 1524, 2489, 26, 25, 1524, 24, 23,
	3607, 1524, 30, 3601, 20, 3603, 3605, 3660, 3309, 22,
	21, 19, 4365, 3447, 3448, 4366, 4395, 4231, 1524, 2895,
	4171, 3424, 1524, 3405, 3423, 3420, 4300, 3661, 1524, 4382,
	129, 3618, 1524, 4331, 3625, 3570, 1524, 3577, 4292, 3579,
	3580, 3581, 3574, 4291, 4242, 1524, 3630, 1521, 3642, 1522,
	1523, 1524, 3414, 4371, 4237, 1524, 3649, 57, 54, 1524,
	52, 3652, 137, 1524, 136, 55, 53, 3656, 3657, 3655,
	2894, 2491, 3654, 51, 1524, 2231, 1521, 50, 1522, 1523,
	2232, 2893, 1247, 1524, 48, 2892, 99, 32, 31, 2891,
	1524, 18, 17, 2890, 16, 15, 14, 13, 1524, 12,
	3678, 8, 3680, 7, 40, 39, 38, 29, 3672, 3673,
	2881, 28, 41, 4, 2880, 3044, 2579, 0, 2294, 0,
	2879, 1524, 0, 0, 2878, 1524, 0, 1521, 2875, 1522,
	1523, 0, 1524, 0, 0, 0, 0, 2870, 1521, 1524,
	1522, 1523, 1521, 2863, 1522, 1523, 1521, 2862, 1522, 1523,
	1521, 2861, 1522, 1523, 0, 2860, 3703, 0, 0, 0,
	3707, 3708, 3709, 3722, 3720, 3721, 2859, 1521, 1524, 1522,
	1523, 1521, 0, 1522, 1523, 2858, 0, 1521, 0, 1522,
	1523, 1521, 2857, 1522, 1523, 1521, 0, 1522, 1523, 0,
	2856, 0, 0, 0, 1521, 3737, 1522, 1523, 2377, 0,
	1521, 1524, 1522, 1523, 1521, 0, 1522, 1523, 1521, 0,
	1522, 1523, 1521, 2855, 1522, 1523, 0, 2849, 1524, 3748,
	0, 1758, 1524, 1521, 2848, 1522, 1523, 0, 2408, 1524,
	0, 2847, 1521, 0, 1522, 1523, 0, 0, 0, 1521,
	1524, 1522, 1523, 0, 1524, 1797, 2415, 1521, 0, 1522,
	1523, 1524, 0, 0, 0, 0, 0, 0, 0, 3799,
	2844, 0, 3806, 0, 3808, 3789, 0, 3790, 3791, 3792,
	1521, 0, 1522, 1523, 1521, 0, 1522, 1523, 0, 0,
	1524, 1521, 0, 1522, 1523, 3742, 2440, 3779, 1521, 0,
	1522, 1523, 0, 2843, 0, 3310, 0, 0, 89, 0,
	3310, 0, 0, 0, 0, 0, 0, 0, 3809, 0,
	2842, 0, 0, 1524, 2840, 0, 0, 1521, 2190, 1522,
	1523, 2833, 2188, 0, 0, 1524, 3850, 0, 0, 1524,
	0, 0, 2830, 0, 3810, 1524, 2828, 0, 1074, 0,
	3842, 0, 3840, 2826, 0, 0, 0, 3830, 3829, 0,
	1521, 0, 1522, 1523, 1524, 0, 3837, 0, 3839, 0,
	1524, 0, 0, 4001, 0, 0, 0, 1521, 0, 1522,
	1523, 1521, 2785, 1522, 1523, 43, 0, 0, 1521, 0,
	1522, 1523, 3699, 3700, 0, 3854, 0, 3851, 3852, 1521,
	0, 1522, 1523, 1521, 0, 1522, 1523, 0, 0, 0,
	1521, 0, 1522, 1523, 0, 2765, 0, 0, 0, 3992,
	2567, 0, 0, 0, 0, 3993, 4008, 2764, 0, 0,
	0, 2760, 0, 0, 0, 4012, 4013, 2758, 0, 1521,
	0, 1522, 1523, 0, 0, 4059, 4060, 4020, 3306, 0,
	0, 0, 0, 2190, 0, 0, 2750, 2188, 3844, 0,
	0, 4063, 2721, 0, 0, 3807, 4003, 4004, 4005, 0,
	0, 3770, 1521, 0, 1522, 1523, 2980, 2983, 2984, 2985,
	2981, 0, 2982, 2986, 1521, 0, 1522, 1523, 1521, 0,
	1522, 1523, 0, 0, 1521, 0, 1522, 1523, 2980, 2983,
	2984, 2985, 2981, 4066, 2982, 2986, 0, 4069, 3645, 3646,
	0, 4111, 3310, 1521, 0, 1522, 1523, 0, 0, 1521,
	3846, 1522, 1523, 0, 0, 0, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1715,
	1716, 1717, 1718, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 4114, 4115, 4064,
	4112, 4093, 4083, 4092, 1786, 0, 0, 0, 0, 4089,
	4129, 4091, 0, 0, 0, 0, 0, 0, 1794, 0,
	0, 1787, 3309, 0, 0, 0, 0, 3309, 89, 0,
	0, 0, 2703, 0, 0, 0, 2708, 0, 3996, 0,
	0, 0, 0, 0, 0, 0, 2434, 2435, 1793, 1791,
	1792, 1788, 0, 1789, 0, 0, 0, 0, 0, 2711,
	4131, 2712, 0, 0, 0, 0, 0, 2720, 1074, 4119,
	4136, 2722, 2723, 0, 4099, 4134, 1790, 0, 0, 0,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	4000, 2740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 43, 0, 0, 0, 0,
	0, 89, 0, 0, 2746, 2747, 2748, 2749, 0, 2751,
	2752, 4173, 2754, 0, 4172, 0, 2756, 0, 0, 4189,
	2761, 2762, 0, 2763, 1524, 0, 2766, 2767, 2769, 2771,
	2772, 2773, 2774, 2775, 2776, 2778, 2780, 2781, 2782, 2784,
	4180, 2786, 2787, 2789, 2791, 2793, 2795, 2797, 2799, 2801,
	2803, 2805, 2807, 2809, 2811, 2813, 2815, 2817, 2819, 2821,
	2823, 2824, 2825, 4179, 2827, 4218, 2829, 4164, 2831, 2832,
	4183, 2834, 2836, 2838, 0, 4197, 89, 2841, 43, 4204,
	4116, 2845, 4203, 4202, 4199, 2850, 2851, 2852, 2853, 4198,
	4020, 4207, 4196, 4201, 4200, 4194, 0, 0, 2864, 2865,
	2866, 2867, 2868, 2869, 0, 1098, 2873, 2874, 1104, 1104,
	4226, 0, 4244, 2876, 4154, 4243, 2715, 4155, 2882, 3309,
	0, 0, 0, 2885, 2886, 2887, 2888, 2889, 4256, 4284,
	4218, 4261, 4248, 89, 2896, 2897, 0, 2898, 4273, 1524,
	2901, 2903, 2440, 4286, 2905, 4271, 0, 0, 0, 1786,
	0, 0, 1758, 43, 2917, 4185, 0, 3306, 0, 0,
	4283, 4190, 0, 1794, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 1521, 4288, 1522, 1523, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 2951, 0, 89, 4299,
	0, 1782, 1783, 1793, 1791, 1792, 1788, 0, 1789, 4325,
	4315, 2068, 4314, 0, 0, 2190, 0, 4318, 4143, 2188,
	43, 0, 0, 4349, 4324, 0, 4153, 0, 0, 4344,
	4121, 1790, 0, 4348, 4346, 4352, 89, 4350, 4369, 0,
	0, 2710, 4218, 0, 0, 0, 4286, 0, 0, 0,
	4359, 0, 3424, 1925, 0, 3423, 3420, 0, 4370, 4380,
	0, 0, 0, 4139, 0, 0, 0, 0, 0, 0,
	4279, 0, 0, 0, 0, 43, 4384, 0, 4392, 0,
	0, 4390, 89, 4397, 0, 0, 0, 4127, 0, 0,
	1758, 0, 0, 0, 0, 4400, 0, 0, 1521, 0,
	1522, 1523, 0, 0, 0, 0, 4403, 89, 0, 0,
	0, 0, 0, 43, 0, 0, 0, 4412, 4409, 2190,
	89, 89, 0, 2188, 0, 4417, 89, 4413, 4418, 4060,
	4286, 4416, 4415, 196, 0, 0, 4286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1872, 0, 0, 4184, 0, 0, 135, 0, 157, 43,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 43, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 43, 43, 0,
	0, 0, 0, 43, 0, 0, 168, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 4236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 145, 167,
	166, 195, 3143, 3144, 3145, 3146, 3147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4313, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 0, 1908,
	1909, 1911, 1912, 1910, 1913, 1914, 1887, 1888, 1889, 1890,
	1870, 1871, 1900, 0, 1873, 0, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 0, 0, 1883, 1891, 1892,
	1893, 1894, 0, 1895, 1896, 1897, 1898, 0, 0, 1884,
	0, 0, 0, 0, 161, 142, 164, 149, 141, 0,
	162, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 153, 151, 146, 147, 148, 152, 3050, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	135, 0, 157, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 176,
	3312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 3330, 0,
	0, 1938, 1939, 167, 166, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1525, 0, 0, 0, 0, 1901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 161, 1940,
	164, 0, 1937, 0, 162, 163, 3451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 3468, 3469,
	185, 3470, 3472, 3474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3487,
	0, 0, 0, 0, 3490, 0, 3492, 3493, 3494, 3496,
	3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506,
	3507, 3508, 3510, 3512, 3514, 3516, 3518, 3520, 3522, 3524,
	3526, 3528, 3530, 3532, 3534, 3536, 3538, 3540, 3541, 3543,
	3544, 3545, 3547, 158, 0, 3549, 159, 3551, 3552, 3553,
	0, 0, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564,
	3565, 3566, 3567, 0, 0, 0, 0, 0, 0, 0,
	0, 3573, 0, 0, 0, 3578, 0, 171, 0, 3582,
	3583, 0, 3584, 3586, 183, 3589, 3591, 0, 3593, 3594,
	3595, 3596, 0, 0, 0, 0, 0, 0, 3604, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3636, 3637,
	0, 0, 3641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 177, 174, 180, 181, 182,
	184, 186, 187, 188, 189, 0, 0, 0, 0, 0,
	190, 192, 193, 194, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1922,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 983, 3732, 0, 0, 3736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 3749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 171, 201, 0, 0, 0, 754, 0, 183, 0,
	0, 760, 0, 2073, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 3772, 0, 1050, 0, 0, 0, 191,
	988, 1051, 1002, 1003, 1004, 989, 3780, 0, 990, 991,
	0, 992, 0, 3787, 0, 0, 760, 201, 760, 0,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 1005,
	1006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 177,
	174, 180, 181, 182, 184, 186, 187, 188, 189, 0,
	0, 0, 0, 0, 190, 192, 193, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 4219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4009, 0,
	0, 0, 0, 0, 0, 0, 0, 4016, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4026, 4027, 4028, 0,
	4030, 0, 4031, 4032, 0, 3427, 0, 0, 4035, 4036,
	4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046,
	4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056,
	0, 4058, 4061, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2141, 2142, 2143, 2144, 0, 4070, 4071, 4072,
	4073, 4074, 4076, 4077, 4079, 4081, 4082, 4084, 2157, 0,
	0, 4088, 0, 0, 0, 4090, 0, 0, 0, 0,
	0, 0, 4100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3428, 3429, 0, 0,
	0, 0, 0, 2196, 2197, 0, 0, 0, 0, 2220,
	0, 0, 2224, 2225, 0, 0, 0, 2230, 0, 0,
	0, 4120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 0, 2253, 0, 0, 0, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2284, 0, 2289, 0, 2291,
	2292, 2293, 0, 2295, 2296, 2297, 0, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 0, 0, 0, 0,
	0, 2376, 0, 2378, 0, 2384, 2385, 2386, 2387, 2388,
	2389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 0, 2409, 2410, 2411, 2412, 2413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1104, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 4159, 0, 1934, 0, 0, 0, 4162, 0, 4163,
	0, 2469, 2470, 0, 0, 135, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 4188, 0, 2508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4212, 4213, 0, 0, 0, 168, 0, 0, 0, 0,
	201, 156, 201, 0, 4220, 4222, 4224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4217, 0,
	0, 175, 0, 0, 176, 0, 0, 0, 0, 2551,
	0, 0, 4247, 0, 0, 0, 0, 0, 0, 760,
	0, 760, 760, 4269, 0, 0, 1938, 1939, 167, 166,
	195, 0, 1872, 0, 0, 0, 4216, 0, 0, 0,
	0, 0, 0, 760, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1569, 0, 0, 0, 0, 4296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4319, 4321,
	4323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1886, 0, 0,
	0, 0, 0, 161, 1940, 164, 0, 1937, 0, 162,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4364, 1050, 0, 0, 179, 0, 988, 1051,
	1002, 1003, 1004, 989, 0, 185, 990, 991, 0, 992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1005, 1006, 0,
	4393, 4394, 0, 1899, 1902, 1903, 1904, 1905, 1906, 1907,
	0, 1908, 1909, 1911, 1912, 1910, 1913, 1914, 1887, 1888,
	1889, 1890, 1870, 1871, 1900, 0, 1873, 0, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 4411, 0, 1883,
	1891, 1892, 1893, 1894, 0, 1895, 1896, 1897, 1898, 0,
	0, 1884, 0, 0, 1765, 0, 0, 0, 0, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2719, 0, 0, 0, 0, 1055, 0, 0, 0, 0,
	2725, 2726, 2727, 2728, 0, 201, 0, 0, 0, 760,
	760, 0, 0, 3427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1133, 0, 0, 0, 0, 1583, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 0, 0, 201,
	0, 0, 88, 45, 46, 90, 0, 0, 0, 0,
	0, 760, 0, 165, 0, 0, 0, 0, 201, 0,
	0, 95, 760, 0, 0, 49, 78, 79, 0, 76,
	80, 0, 0, 0, 3428, 3429, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 760, 0, 760,
	0, 0, 0, 100, 0, 0, 0, 760, 0, 0,
	1569, 760, 0, 0, 760, 760, 760, 760, 1901, 760,
	0, 760, 760, 64, 760, 760, 760, 760, 760, 760,
	0, 0, 0, 0, 0, 98, 0, 1569, 760, 760,
	1569, 760, 1569, 201, 760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 159, 760, 0, 201, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 760, 0, 0, 760, 0, 0, 201, 201,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 183, 0, 201, 0, 0, 0, 0,
	0, 0, 201, 1833, 0, 0, 0, 0, 0, 0,
	0, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 56, 59, 58, 61, 0, 75, 0, 0,
	84, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 177, 174, 180, 181, 182, 184,
	186, 187, 188, 189, 982, 0, 0, 0, 0, 190,
	192, 193, 194, 0, 0, 63, 94, 93, 0, 0,
	73, 74, 60, 0, 0, 0, 0, 0, 82, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 65, 66, 759, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 3108, 759,
	0, 759, 0, 759, 0, 0, 0, 0, 201, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3134, 3135, 3136, 0, 0,
	3138, 0, 0, 3140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3159, 3160, 3161, 0, 0, 760, 0,
	0, 0, 3166, 0, 0, 0, 0, 3168, 1569, 0,
	3170, 3171, 3172, 0, 0, 0, 3173, 3174, 0, 0,
	3175, 0, 3176, 0, 0, 0, 1569, 0, 0, 3177,
	0, 3178, 0, 0, 0, 3179, 0, 3180, 0, 0,
	3181, 0, 3182, 0, 3183, 0, 3184, 0, 3185, 0,
	3186, 91, 3187, 0, 3188, 0, 3189, 0, 3190, 0,
	3191, 0, 3192, 0, 3193, 0, 3194, 0, 3195, 0,
	3196, 0, 3197, 0, 3198, 0, 0, 0, 3199, 0,
	3200, 0, 3201, 0, 0, 3202, 0, 3203, 0, 3204,
	0, 2348, 3206, 0, 0, 3208, 0, 0, 3210, 3211,
	3212, 3213, 0, 1248, 0, 1255, 3214, 2348, 2348, 2348,
	2348, 2348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3224, 0, 0, 0, 0, 0, 0, 0,
	3237, 0, 0, 3241, 0, 0, 0, 0, 0, 0,
	0, 0, 3244, 3245, 3246, 3247, 3248, 3249, 0, 0,
	0, 3250, 3251, 0, 3252, 0, 3253, 0, 0, 0,
	0, 97, 2394, 0, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 1050, 0,
	0, 0, 760, 0, 1051, 0, 0, 0, 0, 3301,
	0, 0, 0, 0, 2189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3331, 0, 760, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 72, 0, 201, 0, 0, 0,
	760, 0, 0, 2394, 201, 0, 201, 0, 201, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3389, 0, 0, 760, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 0, 0, 0, 0, 760,
	760, 3476, 0, 760, 0, 760, 0, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 0, 0, 0,
	0, 760, 0, 0, 0, 760, 760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 201, 0, 0, 201, 0, 201, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 759, 1480, 759, 759, 201, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1568, 1997, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1569, 0, 2394, 3695, 0,
	0, 2042, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2069, 0, 0, 0, 0, 0, 0, 0,
	0, 3719, 0, 0, 0, 0, 0, 0, 2080, 0,
	0, 0, 0, 0, 0, 2084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3738, 0, 3739, 0, 3740, 0, 3741,
	0, 0, 0, 0, 0, 0, 0, 3744, 3745, 0,
	0, 0, 0, 0, 0, 0, 0, 3750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3751, 0, 3752, 0, 3753, 0, 3754, 0, 3755,
	0, 3756, 0, 3757, 0, 3758, 0, 3759, 0, 3760,
	0, 3761, 0, 3762, 0, 3763, 0, 3764, 0, 3765,
	0, 3766, 0, 0, 3767, 0, 0, 0, 3768, 0,
	3769, 0, 0, 0, 0, 0, 3771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3788, 0,
	0, 0, 0, 0, 0, 0, 0, 3793, 0, 3794,
	3795, 0, 3796, 0, 3797, 0, 0, 0, 0, 3798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 759, 759, 0, 0, 0, 0, 760, 0,
	0, 0, 0, 0, 3838, 0, 0, 0, 0, 0,
	760, 760, 760, 201, 0, 0, 0, 3847, 0, 0,
	3849, 0, 0, 0, 0, 0, 760, 0, 0, 0,
	0, 2134, 3853, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3989,
	0, 201, 0, 0, 759, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 939, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 1568, 759, 0, 0, 759, 759, 759,
	759, 0, 759, 0, 759, 759, 0, 759, 759, 759,
	759, 759, 759, 0, 0, 760, 0, 0, 0, 0,
	1568, 759, 759, 1568, 759, 1568, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 0, 0, 0,
	0, 758, 0, 760, 0, 0, 0, 760, 760, 0,
	0, 0, 760, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 1569, 760,
	0, 0, 0, 0, 4098, 759, 0, 0, 759, 201,
	201, 201, 201, 201, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1129, 0, 1136, 0,
	1140, 0, 0, 0, 0, 0, 0, 0, 201, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2475,
	0, 0, 0, 0, 0, 0, 0, 2479, 0, 2482,
	0, 0, 2134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 760, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 4156, 0, 0,
	4157, 0, 4158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 760, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 201, 201, 201, 0, 201, 0, 0, 0,
	0, 1568, 0, 0, 0, 0, 0, 0, 0, 0,
	2198, 0, 0, 0, 0, 0, 0, 0, 0, 1568,
	0, 0, 0, 0, 0, 0, 0, 760, 0, 0,
	0, 1569, 0, 0, 760, 760, 1569, 201, 201, 201,
	201, 201, 0, 0, 0, 0, 0, 0, 4235, 201,
	0, 0, 0, 0, 0, 201, 0, 201, 0, 0,
	201, 201, 201, 0, 0, 4267, 2134, 0, 0, 0,
	0, 0, 2633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2654, 2655, 0, 0, 2659, 0, 0,
	0, 0, 0, 4280, 0, 4281, 0, 4282, 0, 2664,
	0, 0, 0, 0, 0, 0, 2667, 0, 0, 0,
	0, 0, 0, 0, 760, 0, 0, 1569, 0, 0,
	0, 0, 760, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 2670, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 201, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4362, 0, 4363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 45, 46, 90, 0, 0, 0, 0, 0, 759,
	4398, 4399, 0, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 49, 78, 79, 0, 76, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 759, 0, 0, 759, 0, 0, 0,
	0, 100, 0, 0, 0, 0, 0, 760, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 0, 0,
	0, 64, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 98, 4401, 0, 0, 0, 0, 1313,
	0, 1313, 1313, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 201, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 0, 0, 0, 0, 0,
	759, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 0, 0,
	0, 0, 759, 759, 0, 0, 759, 0, 759, 0,
	0, 0, 0, 0, 759, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 759, 0, 0, 0, 759, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 760, 0, 0, 0, 0, 0, 92,
	56, 59, 58, 61, 0, 75, 0, 0, 84, 81,
	0, 4177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4176, 0, 0,
	0, 0, 0, 0, 0, 760, 760, 760, 760, 0,
	0, 0, 4178, 63, 94, 93, 0, 0, 73, 74,
	60, 0, 0, 0, 0, 940, 82, 83, 0, 2993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 0, 0, 0, 0, 0,
	4175, 66, 0, 67, 68, 69, 70, 0, 0, 0,
	0, 0, 0, 199, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 62, 1568, 0,
	759, 0, 1105, 1105, 0, 0, 0, 0, 0, 1768,
	1769, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3080, 3081, 3082, 3083, 3084, 3085, 0, 0,
	0, 0, 760, 0, 760, 0, 201, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 201, 201, 201, 0,
	0, 2134, 3096, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 1569, 0, 0, 0, 201, 0, 0,
	760, 1857, 760, 0, 0, 0, 3104, 0, 0, 0,
	0, 0, 1916, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 0, 0, 0, 0, 0, 1129, 0, 1946,
	0, 0, 0, 0, 0, 0, 0, 1955, 0, 0,
	0, 1957, 0, 0, 1960, 1961, 1963, 1963, 760, 1963,
	0, 1963, 1963, 0, 1972, 1963, 1963, 1963, 1963, 1963,
	0, 201, 0, 0, 760, 0, 0, 0, 1992, 1993,
	0, 1129, 0, 0, 1998, 0, 760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 0, 0, 2065, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 760, 0,
	760, 759, 0, 0, 0, 0, 0, 0, 0, 760,
	1313, 0, 0, 759, 759, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 45, 46, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 3006, 49, 78, 79, 0,
	76, 80, 72, 0, 0, 0, 0, 3272, 0, 3276,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 0, 0, 759, 0,
	0, 0, 0, 0, 0, 0, 98, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 759, 0, 0, 0,
	759, 759, 0, 0, 0, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 1568, 759, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 1313, 1313, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4368, 0, 2122, 0, 0,
	0, 0, 0, 760, 201, 0, 0, 0, 0, 0,
	3417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3443,
	0, 0, 3446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2184, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 760,
	0, 0, 92, 56, 59, 58, 61, 0, 75, 760,
	0, 84, 81, 0, 4177, 0, 0, 0, 0, 0,
	0, 0, 1569, 760, 0, 760, 0, 0, 0, 0,
	4176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 4178, 63, 94, 93, 760,
	2394, 73, 74, 60, 0, 0, 0, 0, 0, 82,
	83, 0, 0, 0, 702, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 760, 0, 4175, 66, 0, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 3606, 0, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 3612, 3613, 0, 1570, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 0, 0, 0,
	759, 0, 2431, 0, 0, 0, 0, 0, 0, 760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2447, 3676, 0, 0,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 0, 0, 1568, 0, 0, 759, 759, 1568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 91, 1313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 0, 0, 0, 0, 0,
	3379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 759, 0, 0,
	1568, 0, 0, 0, 0, 759, 0, 0, 0, 0,
	0, 1136, 0, 0, 0, 0, 0, 2570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1129, 0, 0, 0, 0, 0, 1136,
	1955, 0, 97, 1955, 0, 1955, 0, 0, 0, 0,
	0, 2599, 3450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 702,
	0, 0, 0, 0, 0, 0, 1129, 0, 0, 0,
	0, 2184, 0, 0, 0, 2184, 2184, 0, 0, 0,
	0, 0, 0, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 45, 46, 90, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 702, 95, 0, 0, 0, 49, 78,
	79, 0, 76, 80, 0, 0, 3821, 0, 0, 3822,
	3823, 3824, 702, 0, 77, 72, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 64, 0, 0, 0,
	0, 0, 0, 0, 1570, 0, 0, 0, 98, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1570, 0, 0, 1570, 0, 1570, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 702, 0, 0, 0, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 3665, 0, 0, 702,
	0, 0, 0, 0, 0, 0, 702, 0, 0, 0,
	0, 0, 0, 0, 0, 2093, 2094, 702, 702, 702,
	702, 702, 702, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 759, 0, 0, 0,
	0, 0, 0, 0, 92, 56, 59, 58, 61, 0,
	75, 0, 0, 84, 81, 0, 4177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4176, 0, 0, 0, 0, 0, 759, 759,
	759, 759, 0, 0, 0, 0, 0, 4178, 63, 94,
	93, 0, 0, 73, 74, 60, 0, 0, 0, 0,
	0, 82, 83, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4175, 66, 0, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2923, 0,
	0, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	2939, 2940, 2941, 0, 0, 759, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 2956, 4140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1568, 0, 0, 0,
	0, 0, 0, 759, 0, 759, 0, 0, 0, 0,
	0, 0, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1570, 0, 0, 0, 91, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3038, 0, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 1140, 0, 0, 0,
	0, 0, 0, 3058, 0, 0, 0, 1955, 1955, 0,
	0, 0, 3063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 759, 0, 2067, 0, 0, 0,
	0, 759, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 759, 0, 0, 0, 0, 0, 2184,
	0, 0, 0, 0, 0, 0, 0, 1105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 72, 1079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 0, 0, 0, 2067, 702, 0,
	702, 0, 702, 2498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3226, 0, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1568, 759, 1313, 759, 0,
	0, 0, 0, 0, 3313, 1963, 0, 702, 0, 0,
	0, 0, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 759, 702, 702, 0, 0, 702, 0,
	2661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 0, 0, 0, 0, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 702, 759, 0, 0, 0, 0, 0,
	2672, 0, 0, 0, 1129, 0, 0, 0, 0, 0,
	0, 0, 1140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 0, 0, 0, 0, 0, 1570,
	0, 2067, 0, 0, 0, 0, 0, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 0, 0, 0, 0, 98, 0,
	0, 1050, 0, 0, 0, 0, 988, 1051, 1002, 1003,
	1004, 989, 0, 0, 990, 991, 0, 992, 0, 0,
	0, 0, 0, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 997, 0, 1005, 1006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1916, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3425, 3426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3427, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2942, 0, 0,
	0, 0, 1140, 1140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	702, 0, 3428, 3429, 0, 3726, 3727, 3728, 3729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 953,
	0, 0, 0, 0, 0, 957, 0, 0, 0, 954,
	955, 0, 0, 0, 956, 958, 0, 0, 0, 0,
	0, 0, 1570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 702, 702, 702, 702, 702, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 3804, 0, 3804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3843, 0, 3845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4011, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3804, 0, 0, 0, 0, 0, 0, 3804, 0,
	3804, 0, 0, 0, 0, 0, 0, 0, 0, 4102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1105, 0, 702, 3271, 702, 0,
	702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1570, 0, 0, 0, 0,
	1570, 702, 702, 702, 702, 702, 0, 0, 0, 0,
	0, 0, 0, 3329, 0, 0, 0, 0, 0, 2014,
	0, 702, 0, 0, 702, 3337, 2067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1140, 1570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 702, 0, 0, 0, 0,
	0, 0, 0, 1140, 0, 0, 0, 0, 0, 0,
	702, 0, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1140, 0, 4186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1313,
	1313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4238,
	4246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4251, 0, 0, 0, 0, 0, 0, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 702, 702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3875, 3877, 3876, 3942, 3943,
	3944, 3945, 3946, 3947, 3948, 3878, 3879, 830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 702,
	1140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1916, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 4251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3883, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3891, 3892, 0, 0,
	3967, 3966, 3965, 0, 0, 3963, 3964, 3962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 0, 0, 0, 0, 0, 702, 0, 0,
	702, 702, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1570, 0, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3968, 953, 0, 806, 807, 3969, 3970,
	957, 3971, 809, 810, 954, 955, 0, 804, 808, 956,
	958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2014, 3872, 3873, 3874, 3880,
	3881, 3882, 3893, 3940, 3941, 3949, 3951, 909, 3950, 3952,
	3953, 3954, 3957, 3958, 3959, 3960, 3955, 3956, 3961, 3855,
	3859, 3856, 3857, 3858, 3870, 3860, 3861, 3862, 3863, 3864,
	3865, 3866, 3867, 3868, 3869, 3871, 3972, 3973, 3974, 3975,
	3976, 3977, 3886, 3890, 3889, 3887, 3888, 3884, 3885, 3912,
	3911, 3913, 3914, 3915, 3916, 3917, 3918, 3920, 3919, 3921,
	3922, 3923, 3924, 3925, 3926, 3894, 3895, 3898, 3899, 3897,
	3896, 3900, 3909, 3910, 3901, 3902, 3903, 3904, 3905, 3906,
	3908, 3907, 3927, 3928, 3929, 3930, 3931, 3933, 3932, 3936,
	3937, 3935, 3934, 3939, 3938, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 959, 0,
	960, 0, 0, 964, 0, 0, 0, 966, 965, 0,
	967, 929, 928, 0, 0, 961, 962, 0, 963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3978,
	3979, 3980, 3981, 3982, 3983, 3984, 3985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 1463, 1442,
	550, 0, 1383, 1466, 1348, 1369, 1476, 1372, 1375, 1420,
	1323, 1398, 435, 1366, 1352, 1318, 1360, 1319, 1350, 1385,
	284, 1347, 1444, 1402, 1465, 382, 281, 1325, 1316, 210,
	527, 1353, 450, 1371, 209, 1423, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	1472, 386, 1408, 0, 519, 419, 1570, 0, 0, 1449,
	1448, 1376, 1387, 1454, 1396, 1435, 1381, 1422, 1335, 1407,
	1467, 1367, 1417, 1468, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 4206, 4208, 529, 984, 0, 0,
	0, 0, 4209, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 1363, 1414, 634, 1461,
	1364, 1416, 279, 337, 286, 278, 605, 1473, 1453, 1322,
	1395, 1460, 1390, 621, 2014, 0, 236, 1464, 1389, 0,
	1419, 0, 1479, 1317, 1410, 0, 1320, 1324, 1475, 1458,
	1356, 1357, 289, 0, 0, 0, 0, 0, 0, 0,
	1386, 1397, 1432, 1436, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 1406, 0, 0, 0, 1329,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 1334, 0,
	1355, 1433, 0, 1315, 311, 1326, 420, 271, 0, 474,
	1346, 317, 331, 1332, 1361, 1462, 1450, 1451, 1452, 1331,
	1440, 1457, 1380, 654, 1459, 1378, 1377, 1427, 1330, 1447,
	1370, 381, 1328, 346, 203, 231, 0, 1368, 431, 482,
	494, 1446, 1445, 1351, 1362, 267, 1359, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 1405, 1425, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 1327, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 1345, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 1441, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 1430, 1478, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 1339, 1344, 1337, 0, 268, 269, 1411,
	598, 1340, 1338, 1400, 1401, 1341, 1469, 1470, 1471, 1455,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 1434, 1333,
	0, 1342, 1343, 416, 1443, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 1404, 202, 227, 384, 1474, 475,
	302, 675, 643, 505, 638, 212, 229, 1336, 276, 1349,
	1358, 0, 1365, 1373, 1374, 1388, 1391, 1392, 1393, 1394,
	1412, 1413, 1415, 1424, 1426, 1429, 1431, 1438, 1456, 1477,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 1421, 1382, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 1403, 1409, 397, 295, 320, 336,
	1418, 642, 524, 234, 487, 304, 263, 1437, 1439, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 1399, 1428, 392, 599, 600, 332, 413,
	0, 0, 0, 0, 0, 0, 1463, 1442, 550, 0,
	1383, 1466, 1348, 1369, 1476, 1372, 1375, 1420, 1323, 1398,
	435, 1366, 1352, 1318, 1360, 1319, 1350, 1385, 284, 1347,
	1444, 1402, 1465, 382, 281, 1325, 1316, 210, 527, 1353,
	450, 1371, 209, 1423, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 1472, 386,
	1408, 0, 519, 419, 0, 0, 0, 1449, 1448, 1376,
	1387, 1454, 1396, 1435, 1381, 1422, 1335, 1407, 1467, 1367,
	1417, 1468, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 0, 0, 529, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 1363, 1414, 634, 1461, 1364, 1416,
	279, 337, 286, 278, 605, 1473, 1453, 1322, 1395, 1460,
	1390, 621, 0, 0, 236, 1464, 1389, 0, 1419, 0,
	1479, 1317, 1410, 0, 1320, 1324, 1475, 1458, 1356, 1357,
	289, 0, 0, 0, 0, 0, 0, 0, 1386, 1397,
	1432, 1436, 1379, 0, 0, 0, 0, 0, 0, 3338,
	0, 1354, 0, 1406, 0, 0, 0, 1329, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1384, 0, 0, 0, 0, 1334, 0, 1355, 1433,
	0, 1315, 311, 1326, 420, 271, 0, 474, 1346, 317,
	331, 1332, 1361, 1462, 1450, 1451, 1452, 1331, 1440, 1457,
	1380, 654, 1459, 1378, 1377, 1427, 1330, 1447, 1370, 381,
	1328, 346, 203, 231, 0, 1368, 431, 482, 494, 1446,
	1445, 1351, 1362, 267, 1359, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 1405, 1425, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 1327, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 1345,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 1441, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 1430, 1478, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 1339, 1344, 1337, 0, 268, 269, 1411, 598, 1340,
	1338, 1400, 1401, 1341, 1469, 1470, 1471, 1455, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 1434, 1333, 0, 1342,
	1343, 416, 1443, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 1404, 202, 227, 384, 1474, 475, 302, 675,
	643, 505, 638, 212, 229, 1336, 276, 1349, 1358, 0,
	1365, 1373, 1374, 1388, 1391, 1392, 1393, 1394, 1412, 1413,
	1415, 1424, 1426, 1429, 1431, 1438, 1456, 1477, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 1421, 1382, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 1403, 1409, 397, 295, 320, 336, 1418, 642,
	524, 234, 487, 304, 263, 1437, 1439, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 1399, 1428, 392, 599, 600, 332, 413, 0, 0,
	0, 0, 0, 0, 1463, 1442, 550, 0, 1383, 1466,
	1348, 1369, 1476, 1372, 1375, 1420, 1323, 1398, 435, 1366,
	1352, 1318, 1360, 1319, 1350, 1385, 284, 1347, 1444, 1402,
	1465, 382, 281, 1325, 1316, 210, 527, 1353, 450, 1371,
	209, 1423, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 1472, 386, 1408, 0,
	519, 419, 0, 0, 0, 1449, 1448, 1376, 1387, 1454,
	1396, 1435, 1381, 1422, 1335, 1407, 1467, 1367, 1417, 1468,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 0, 529, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 1363, 1414, 634, 1461, 1364, 1416, 279, 337,
	286, 278, 605, 1473, 1453, 1322, 1395, 1460, 1390, 621,
	0, 0, 236, 1464, 1389, 0, 1419, 0, 1479, 1317,
	1410, 0, 1320, 1324, 1475, 1458, 1356, 1357, 289, 0,
	0, 0, 0, 0, 0, 0, 1386, 1397, 1432, 1436,
	1379, 0, 0, 0, 0, 0, 0, 3299, 0, 1354,
	0, 1406, 0, 0, 0, 1329, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 0, 1334, 0, 1355, 1433, 0, 1315,
	311, 1326, 420, 271, 0, 474, 1346, 317, 331, 1332,
	1361, 1462, 1450, 1451, 1452, 1331, 1440, 1457, 1380, 654,
	1459, 1378, 1377, 1427, 1330, 1447, 1370, 381, 1328, 346,
	203, 231, 0, 1368, 431, 482, 494, 1446, 1445, 1351,
	1362, 267, 1359, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 1405, 1425, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 1327,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 1345, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	1441, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 1430,
	1478, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 1339,
	1344, 1337, 0, 268, 269, 1411, 598, 1340, 1338, 1400,
	1401, 1341, 1469, 1470, 1471, 1455, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 1434, 1333, 0, 1342, 1343, 416,
	1443, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	1404, 202, 227, 384, 1474, 475, 302, 675, 643, 505,
	638, 212, 229, 1336, 276, 1349, 1358, 0, 1365, 1373,
	1374, 1388, 1391, 1392, 1393, 1394, 1412, 1413, 1415, 1424,
	1426, 1429, 1431, 1438, 1456, 1477, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 1421, 1382, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	1403, 1409, 397, 295, 320, 336, 1418, 642, 524, 234,
	487, 304, 263, 1437, 1439, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 1399,
	1428, 392, 599, 600, 332, 413, 0, 0, 0, 0,
	0, 0, 1463, 1442, 550, 0, 1383, 1466, 1348, 1369,
	1476, 1372, 1375, 1420, 1323, 1398, 435, 1366, 1352, 1318,
	1360, 1319, 1350, 1385, 284, 1347, 1444, 1402, 1465, 382,
	281, 1325, 1316, 210, 527, 1353, 450, 1371, 209, 1423,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 1472, 386, 1408, 0, 519, 419,
	0, 0, 0, 1449, 1448, 1376, 1387, 1454, 1396, 1435,
	1381, 1422, 1335, 1407, 1467, 1367, 1417, 1468, 339, 260,
	341, 208, 432, 520, 300, 0, 0, 0, 0, 0,
	529, 984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	1363, 1414, 634, 1461, 1364, 1416, 279, 337, 286, 278,
	605, 1473, 1453, 1322, 1395, 1460, 1390, 621, 0, 0,
	236, 1464, 1389, 0, 1419, 0, 1479, 1317, 1410, 0,
	1320, 1324, 1475, 1458, 1356, 1357, 289, 0, 0, 0,
	0, 0, 0, 0, 1386, 1397, 1432, 1436, 1379, 0,
	0, 0, 0, 0, 0, 2477, 0, 1354, 0, 1406,
	0, 0, 0, 1329, 1321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 0,
	0, 0, 1334, 0, 1355, 1433, 0, 1315, 311, 1326,
	420, 271, 0, 474, 1346, 317, 331, 1332, 1361, 1462,
	1450, 1451, 1452, 1331, 1440, 1457, 1380, 654, 1459, 1378,
	1377, 1427, 1330, 1447, 1370, 381, 1328, 346, 203, 231,
	0, 1368, 431, 482, 494, 1446, 1445, 1351, 1362, 267,
	1359, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 1405, 1425, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 1327, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 1345, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 1441, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 1430, 1478, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 1339, 1344, 1337,
	0, 268, 269, 1411, 598, 1340, 1338, 1400, 1401, 1341,
	1469, 1470, 1471, 1455, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 1434, 1333, 0, 1342, 1343, 416, 1443, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 1404, 202,
	227, 384, 1474, 475, 302, 675, 643, 505, 638, 212,
	229, 1336, 276, 1349, 1358, 0, 1365, 1373, 1374, 1388,
	1391, 1392, 1393, 1394, 1412, 1413, 1415, 1424, 1426, 1429,
	1431, 1438, 1456, 1477, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	1421, 1382, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 1403, 1409,
	397, 295, 320, 336, 1418, 642, 524, 234, 487, 304,
	263, 1437, 1439, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 1399, 1428, 392,
	599, 600, 332, 413, 0, 0, 0, 0, 0, 0,
	1463, 1442, 550, 0, 1383, 1466, 1348, 1369, 1476, 1372,
	1375, 1420, 1323, 1398, 435, 1366, 1352, 1318, 1360, 1319,
	1350, 1385, 284, 1347, 1444, 1402, 1465, 382, 281, 1325,
	1316, 210, 527, 1353, 450, 1371, 209, 1423, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 1472, 386, 1408, 0, 519, 419, 0, 0,
	0, 1449, 1448, 1376, 1387, 1454, 1396, 1435, 1381, 1422,
	1335, 1407, 1467, 1367, 1417, 1468, 339, 260, 341, 208,
	432, 520, 300, 0, 98, 0, 0, 0, 529, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 1363, 1414,
	634, 1461, 1364, 1416, 279, 337, 286, 278, 605, 1473,
	1453, 1322, 1395, 1460, 1390, 621, 0, 0, 236, 1464,
	1389, 0, 1419, 0, 1479, 1317, 1410, 0, 1320, 1324,
	1475, 1458, 1356, 1357, 289, 0, 0, 0, 0, 0,
	0, 0, 1386, 1397, 1432, 1436, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 1406, 0, 0,
	0, 1329, 1321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1384, 0, 0, 0, 0,
	1334, 0, 1355, 1433, 0, 1315, 311, 1326, 420, 271,
	0, 474, 1346, 317, 331, 1332, 1361, 1462, 1450, 1451,
	1452, 1331, 1440, 1457, 1380, 654, 1459, 1378, 1377, 1427,
	1330, 1447, 1370, 381, 1328, 346, 203, 231, 0, 1368,
	431, 482, 494, 1446, 1445, 1351, 1362, 267, 1359, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 1405,
	1425, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 1327, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 1345, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 1441, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 1430, 1478, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 1339, 1344, 1337, 0, 268,
	269, 1411, 598, 1340, 1338, 1400, 1401, 1341, 1469, 1470,
	1471, 1455, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	1434, 1333, 0, 1342, 1343, 416, 1443, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 1404, 202, 227, 384,
	1474, 475, 302, 675, 643, 505, 638, 212, 229, 1336,
	276, 1349, 1358, 0, 1365, 1373, 1374, 1388, 1391, 1392,
	1393, 1394, 1412, 1413, 1415, 1424, 1426, 1429, 1431, 1438,
	1456, 1477, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 1421, 1382,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 1403, 1409, 397, 295,
	320, 336, 1418, 642, 524, 234, 487, 304, 263, 1437,
	1439, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 1399, 1428, 392, 599, 600,
	332, 413, 0, 0, 0, 0, 0, 0, 1463, 1442,
	550, 0, 1383, 1466, 1348, 1369, 1476, 1372, 1375, 1420,
	1323, 1398, 435, 1366, 1352, 1318, 1360, 1319, 1350, 1385,
	284, 1347, 1444, 1402, 1465, 382, 281, 1325, 1316, 210,
	527, 1353, 450, 1371, 209, 1423, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	1472, 386, 1408, 0, 519, 419, 0, 0, 0, 1449,
	1448, 1376, 1387, 1454, 1396, 1435, 1381, 1422, 1335, 1407,
	1467, 1367, 1417, 1468, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 0, 0, 529, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 1363, 1414, 634, 1461,
	1364, 1416, 279, 337, 286, 278, 605, 1473, 1453, 1322,
	1395, 1460, 1390, 621, 0, 0, 236, 1464, 1389, 0,
	1419, 0, 1479, 1317, 1410, 0, 1320, 1324, 1475, 1458,
	1356, 1357, 289, 0, 0, 0, 0, 0, 0, 0,
	1386, 1397, 1432, 1436, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 1406, 0, 0, 0, 1329,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 1334, 0,
	1355, 1433, 0, 1315, 311, 1326, 420, 271, 0, 474,
	1346, 317, 331, 1332, 1361, 1462, 1450, 1451, 1452, 1331,
	1440, 1457, 1380, 654, 1459, 1378, 1377, 1427, 1330, 1447,
	1370, 381, 1328, 346, 203, 231, 0, 1368, 431, 482,
	494, 1446, 1445, 1351, 1362, 267, 1359, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 1405, 1425, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 1327, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 1345, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 1441, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 1430, 1478, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 1339, 1344, 1337, 0, 268, 269, 1411,
	598, 1340, 1338, 1400, 1401, 1341, 1469, 1470, 1471, 1455,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 1434, 1333,
	0, 1342, 1343, 416, 1443, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 1404, 202, 227, 384, 1474, 475,
	302, 675, 643, 505, 638, 212, 229, 1336, 276, 1349,
	1358, 0, 1365, 1373, 1374, 1388, 1391, 1392, 1393, 1394,
	1412, 1413, 1415, 1424, 1426, 1429, 1431, 1438, 1456, 1477,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 1421, 1382, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 1403, 1409, 397, 295, 320, 336,
	1418, 642, 524, 234, 487, 304, 263, 1437, 1439, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 1399, 1428, 392, 599, 600, 332, 413,
	0, 0, 0, 0, 0, 0, 1463, 1442, 550, 0,
	1383, 1466, 1348, 1369, 1476, 1372, 1375, 1420, 1323, 1398,
	435, 1366, 1352, 1318, 1360, 1319, 1350, 1385, 284, 1347,
	1444, 1402, 1465, 382, 281, 1325, 1316, 210, 527, 1353,
	450, 1371, 209, 1423, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 1472, 386,
	1408, 0, 519, 419, 0, 0, 0, 1449, 1448, 1376,
	1387, 1454, 1396, 1435, 1381, 1422, 1335, 1407, 1467, 1367,
	1417, 1468, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 0, 0, 529, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 1363, 1414, 634, 1461, 1364, 1416,
	279, 337, 286, 278, 605, 1473, 1453, 1322, 1395, 1460,
	1390, 621, 0, 0, 236, 1464, 1389, 0, 1419, 0,
	1479, 1317, 1410, 0, 1320, 1324, 1475, 1458, 1356, 1357,
	289, 0, 0, 0, 0, 0, 0, 0, 1386, 1397,
	1432, 1436, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 1354, 0, 1406, 0, 0, 0, 1329, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1384, 0, 0, 0, 0, 1334, 0, 1355, 1433,
	0, 1315, 311, 1326, 420, 271, 0, 474, 1346, 317,
	331, 1332, 1361, 1462, 1450, 1451, 1452, 1331, 1440, 1457,
	1380, 654, 1459, 1378, 1377, 1427, 1330, 1447, 1370, 381,
	1328, 346, 203, 231, 0, 1368, 431, 482, 494, 1446,
	1445, 1351, 1362, 267, 1359, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 1405, 1425, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 1327, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 1345,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 1441, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 1430, 1478, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 1339, 1344, 1337, 0, 268, 269, 1411, 598, 1340,
	1338, 1400, 1401, 1341, 1469, 1470, 1471, 1455, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 1434, 1333, 0, 1342,
	1343, 416, 1443, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 1404, 202, 227, 384, 1474, 475, 302, 675,
	643, 505, 638, 212, 229, 1336, 276, 1349, 1358, 0,
	1365, 1373, 1374, 1388, 1391, 1392, 1393, 1394, 1412, 1413,
	1415, 1424, 1426, 1429, 1431, 1438, 1456, 1477, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 1421, 1382, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 1403, 1409, 397, 295, 320, 336, 1418, 642,
	524, 234, 487, 304, 263, 1437, 1439, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 1399, 1428, 392, 599, 600, 332, 413, 0, 0,
	0, 0, 0, 0, 1463, 1442, 550, 0, 1383, 1466,
	1348, 1369, 1476, 1372, 1375, 1420, 1323, 1398, 435, 1366,
	1352, 1318, 1360, 1319, 1350, 1385, 284, 1347, 1444, 1402,
	1465, 382, 281, 1325, 1316, 210, 527, 1353, 450, 1371,
	209, 1423, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 1472, 386, 1408, 0,
	519, 419, 0, 0, 0, 1449, 1448, 1376, 1387, 1454,
	1396, 1435, 1381, 1422, 1335, 1407, 1467, 1367, 1417, 1468,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 0, 529, 984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 1363, 1414, 634, 1461, 1364, 1416, 279, 337,
	286, 278, 605, 1473, 1453, 1322, 1395, 1460, 1390, 621,
	0, 0, 236, 1464, 1389, 0, 1419, 0, 1479, 1317,
	1410, 0, 1320, 1324, 1475, 1458, 1356, 1357, 289, 0,
	0, 0, 0, 0, 0, 0, 1386, 1397, 1432, 1436,
	1379, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 1406, 0, 0, 0, 1329, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1384,
	0, 0, 0, 0, 1334, 0, 1355, 1433, 0, 1315,
	311, 1326, 420, 271, 0, 474, 1346, 317, 331, 1332,
	1361, 1462, 1450, 1451, 1452, 1331, 1440, 1457, 1380, 654,
	1459, 1378, 1377, 1427, 1330, 1447, 1370, 381, 1328, 346,
	203, 231, 0, 1368, 431, 482, 494, 1446, 1445, 1351,
	1362, 267, 1359, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 1405, 1425, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 1327,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 1345, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	1441, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 1430,
	1478, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 1339,
	1344, 1337, 0, 268, 269, 1411, 598, 1340, 1338, 1400,
	1401, 1341, 1469, 1470, 1471, 1455, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 1434, 1333, 0, 1342, 1343, 416,
	1443, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	1404, 202, 227, 384, 1474, 475, 302, 675, 643, 505,
	638, 212, 229, 1336, 276, 1349, 1358, 0, 1365, 1373,
	1374, 1388, 1391, 1392, 1393, 1394, 1412, 1413, 1415, 1424,
	1426, 1429, 1431, 1438, 1456, 1477, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 1421, 1382, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	1403, 1409, 397, 295, 320, 336, 1418, 642, 524, 234,
	487, 304, 263, 1437, 1439, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 1399,
	1428, 392, 599, 600, 332, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 550, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	789, 0, 0, 0, 284, 794, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 801, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 796, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 98, 0, 0, 1050,
	529, 984, 773, 950, 988, 1051, 1002, 1003, 1004, 989,
	0, 247, 990, 991, 254, 992, 0, 949, 832, 834,
	833, 899, 900, 901, 902, 903, 904, 905, 835, 836,
	830, 997, 634, 1005, 1006, 0, 279, 337, 286, 278,
	605, 0, 0, 2285, 2286, 2287, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 769, 786,
	0, 800, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 783, 784, 0, 0, 0, 0, 944,
	0, 785, 0, 0, 793, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 943, 0, 0, 654, 0, 0,
	941, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 994,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	995, 996, 270, 677, 840, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 848,
	849, 294, 322, 925, 924, 923, 321, 323, 921, 922,
	920, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 931, 953, 942, 806,
	807, 932, 933, 957, 934, 809, 810, 954, 955, 803,
	804, 808, 956, 958, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 945, 792, 791, 0, 798, 799, 0, 828,
	829, 831, 837, 838, 839, 850, 897, 898, 906, 908,
	909, 907, 910, 911, 912, 915, 916, 917, 918, 913,
	914, 919, 811, 815, 812, 813, 814, 826, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 827, 968,
	969, 970, 971, 972, 973, 843, 847, 846, 844, 845,
	841, 842, 869, 868, 870, 871, 872, 873, 874, 875,
	877, 876, 878, 879, 880, 881, 882, 883, 851, 852,
	855, 856, 854, 853, 857, 866, 867, 858, 859, 860,
	861, 862, 863, 865, 864, 884, 885, 886, 887, 888,
	890, 889, 893, 894, 892, 891, 896, 895, 790, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 959, 276, 960, 0, 0, 964, 0, 0, 0,
	966, 965, 0, 967, 929, 928, 0, 0, 961, 962,
	0, 963, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 974, 975, 976, 977, 978, 979, 980, 981,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 1049, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 789, 0, 0, 0, 284, 794, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 801, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	796, 797, 0, 0, 0, 0, 0, 0, 2506, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 98, 0,
	0, 1050, 529, 984, 773, 950, 988, 1051, 1002, 1003,
	1004, 989, 0, 247, 990, 991, 254, 992, 0, 949,
	832, 834, 833, 899, 900, 901, 902, 903, 904, 905,
	835, 836, 830, 997, 634, 1005, 1006, 2507, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	769, 786, 0, 800, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 783, 784, 0, 0, 0,
	0, 944, 0, 785, 0, 0, 793, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 654,
	0, 0, 941, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 994, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 995, 996, 270, 677, 840, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 848, 849, 294, 322, 925, 924, 923, 321, 323,
	921, 922, 920, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 931, 953,
	942, 806, 807, 932, 933, 957, 934, 809, 810, 954,
	955, 803, 804, 808, 956, 958, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 945, 792, 791, 0, 798, 799,
	0, 828, 829, 831, 837, 838, 839, 850, 897, 898,
	906, 908, 909, 907, 910, 911, 912, 915, 916, 917,
	918, 913, 914, 919, 811, 815, 812, 813, 814, 826,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	827, 968, 969, 970, 971, 972, 973, 843, 847, 846,
	844, 845, 841, 842, 869, 868, 870, 871, 872, 873,
	874, 875, 877, 876, 878, 879, 880, 881, 882, 883,
	851, 852, 855, 856, 854, 853, 857, 866, 867, 858,
	859, 860, 861, 862, 863, 865, 864, 884, 885, 886,
	887, 888, 890, 889, 893, 894, 892, 891, 896, 895,
	790, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 959, 276, 960, 0, 0, 964, 0,
	0, 0, 966, 965, 0, 967, 929, 928, 0, 0,
	961, 962, 0, 963, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 974, 975, 976, 977, 978, 979,
	980, 981, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 1049, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 88, 550, 0,
	802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 789, 0, 0, 0, 284, 794,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 1759, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 796, 797, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	98, 0, 0, 1050, 529, 984, 773, 950, 988, 1051,
	1002, 1003, 1004, 989, 0, 247, 990, 991, 254, 992,
	0, 949, 832, 834, 833, 899, 900, 901, 902, 903,
	904, 905, 835, 836, 830, 997, 634, 1005, 1006, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 769, 786, 0, 800, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 783, 784, 0,
	0, 0, 0, 944, 0, 785, 0, 0, 793, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 943, 0,
	0, 654, 0, 0, 941, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 994, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 995, 996, 270, 677, 840, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 848, 849, 294, 322, 925, 924, 923,
	321, 323, 921, 922, 920, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	931, 953, 942, 806, 807, 932, 933, 957, 934, 809,
	810, 954, 955, 803, 804, 808, 956, 958, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 945, 792, 791, 0,
	798, 799, 0, 828, 829, 831, 837, 838, 839, 850,
	897, 898, 906, 908, 909, 907, 910, 911, 912, 915,
	916, 917, 918, 913, 914, 919, 811, 815, 812, 813,
	814, 826, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 827, 968, 969, 970, 971, 972, 973, 843,
	847, 846, 844, 845, 841, 842, 869, 868, 870, 871,
	872, 873, 874, 875, 877, 876, 878, 879, 880, 881,
	882, 883, 851, 852, 855, 856, 854, 853, 857, 866,
	867, 858, 859, 860, 861, 862, 863, 865, 864, 884,
	885, 886, 887, 888, 890, 889, 893, 894, 892, 891,
	896, 895, 790, 202, 227, 384, 97, 475, 302, 675,
	643, 505, 638, 212, 229, 959, 276, 960, 0, 0,
	964, 0, 0, 0, 966, 965, 0, 967, 929, 928,
	0, 0, 961, 962, 0, 963, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 974, 975, 976, 977,
	978, 979, 980, 981, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 1049, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 789, 0, 0, 0,
	284, 794, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	801, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 797, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 98, 0, 0, 1050, 529, 984, 773, 950,
	988, 1051, 1002, 1003, 1004, 989, 0, 247, 990, 991,
	254, 992, 0, 949, 832, 834, 833, 899, 900, 901,
	902, 903, 904, 905, 835, 836, 830, 997, 634, 1005,
	1006, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 769, 786, 0, 800, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 783,
	784, 0, 0, 0, 0, 944, 0, 785, 0, 0,
	793, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 795, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 654, 0, 0, 941, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 994, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 4195, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 995, 996, 270, 677,
	840, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 848, 849, 294, 322, 925,
	924, 923, 321, 323, 921, 922, 920, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 931, 953, 942, 806, 807, 932, 933, 957,
	934, 809, 810, 954, 955, 803, 804, 808, 956, 958,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 945, 792,
	791, 0, 798, 799, 0, 828, 829, 831, 837, 838,
	839, 850, 897, 898, 906, 908, 909, 907, 910, 911,
	912, 915, 916, 917, 918, 913, 914, 919, 811, 815,
	812, 813, 814, 826, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 827, 968, 969, 970, 971, 972,
	973, 843, 847, 846, 844, 845, 841, 842, 869, 868,
	870, 871, 872, 873, 874, 875, 877, 876, 878, 879,
	880, 881, 882, 883, 851, 852, 855, 856, 854, 853,
	857, 866, 867, 858, 859, 860, 861, 862, 863, 865,
	864, 884, 885, 886, 887, 888, 890, 889, 893, 894,
	892, 891, 896, 895, 790, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 959, 276, 960,
	0, 0, 964, 0, 0, 0, 966, 965, 0, 967,
	929, 928, 0, 0, 961, 962, 0, 963, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 974, 975,
	976, 977, 978, 979, 980, 981, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 1049, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 789, 0,
	0, 0, 284, 794, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 801, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 796, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 98, 0, 1796, 1050, 529, 984,
	773, 950, 988, 1051, 1002, 1003, 1004, 989, 0, 247,
	990, 991, 254, 992, 0, 949, 832, 834, 833, 899,
	900, 901, 902, 903, 904, 905, 835, 836, 830, 997,
	634, 1005, 1006, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 769, 786, 0, 800,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 783, 784, 0, 0, 0, 0, 944, 0, 785,
	0, 0, 793, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 943, 0, 0, 654, 0, 0, 941, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 994, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 995, 996,
	270, 677, 840, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 848, 849, 294,
	322, 925, 924, 923, 321, 323, 921, 922, 920, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 931, 953, 942, 806, 807, 932,
	933, 957, 934, 809, 810, 954, 955, 803, 804, 808,
	956, 958, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	945, 792, 791, 0, 798, 799, 0, 828, 829, 831,
	837, 838, 839, 850, 897, 898, 906, 908, 909, 907,
	910, 911, 912, 915, 916, 917, 918, 913, 914, 919,
	811, 815, 812, 813, 814, 826, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 827, 968, 969, 970,
	971, 972, 973, 843, 847, 846, 844, 845, 841, 842,
	869, 868, 870, 871, 872, 873, 874, 875, 877, 876,
	878, 879, 880, 881, 882, 883, 851, 852, 855, 856,
	854, 853, 857, 866, 867, 858, 859, 860, 861, 862,
	863, 865, 864, 884, 885, 886, 887, 888, 890, 889,
	893, 894, 892, 891, 896, 895, 790, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 959,
	276, 960, 0, 0, 964, 0, 0, 0, 966, 965,
	0, 967, 929, 928, 0, 0, 961, 962, 0, 963,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	974, 975, 976, 977, 978, 979, 980, 981, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 1049,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	789, 0, 0, 0, 284, 794, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 801, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 796, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 98, 0, 0, 1050,
	529, 984, 773, 950, 988, 1051, 1002, 1003, 1004, 989,
	0, 247, 990, 991, 254, 992, 0, 949, 832, 834,
	833, 899, 900, 901, 902, 903, 904, 905, 835, 836,
	830, 997, 634, 1005, 1006, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 769, 786,
	0, 800, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 783, 784, 1103, 0, 0, 0, 944,
	0, 785, 0, 0, 793, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 943, 0, 0, 654, 0, 0,
	941, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 994,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	995, 996, 270, 677, 840, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 848,
	849, 294, 322, 925, 924, 923, 321, 323, 921, 922,
	920, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 931, 953, 942, 806,
	807, 932, 933, 957, 934, 809, 810, 954, 955, 803,
	804, 808, 956, 958, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 945, 792, 791, 0, 798, 799, 0, 828,
	829, 831, 837, 838, 839, 850, 897, 898, 906, 908,
	909, 907, 910, 911, 912, 915, 916, 917, 918, 913,
	914, 919, 811, 815, 812, 813, 814, 826, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 827, 968,
	969, 970, 971, 972, 973, 843, 847, 846, 844, 845,
	841, 842, 869, 868, 870, 871, 872, 873, 874, 875,
	877, 876, 878, 879, 880, 881, 882, 883, 851, 852,
	855, 856, 854, 853, 857, 866, 867, 858, 859, 860,
	861, 862, 863, 865, 864, 884, 885, 886, 887, 888,
	890, 889, 893, 894, 892, 891, 896, 895, 790, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 959, 276, 960, 0, 0, 964, 0, 0, 0,
	966, 965, 0, 967, 929, 928, 0, 0, 961, 962,
	0, 963, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 974, 975, 976, 977, 978, 979, 980, 981,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 1049, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 789, 0, 0, 0, 284, 794, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 801, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	796, 797, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 98, 0,
	0, 1050, 529, 984, 773, 950, 988, 1051, 1002, 1003,
	1004, 989, 0, 247, 990, 991, 254, 992, 0, 949,
	832, 834, 833, 899, 900, 901, 902, 903, 904, 905,
	835, 836, 830, 997, 634, 1005, 1006, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	769, 786, 0, 800, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 783, 784, 0, 0, 0,
	0, 944, 0, 785, 0, 0, 793, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 795,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 654,
	0, 0, 941, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 994, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 995, 996, 270, 677, 840, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 848, 849, 294, 322, 925, 924, 923, 321, 323,
	921, 922, 920, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 931, 953,
	942, 806, 807, 932, 933, 957, 934, 809, 810, 954,
	955, 803, 804, 808, 956, 958, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 945, 792, 791, 0, 798, 799,
	0, 828, 829, 831, 837, 838, 839, 850, 897, 898,
	906, 908, 909, 907, 910, 911, 912, 915, 916, 917,
	918, 913, 914, 919, 811, 815, 812, 813, 814, 826,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	827, 968, 969, 970, 971, 972, 973, 843, 847, 846,
	844, 845, 841, 842, 869, 868, 870, 871, 872, 873,
	874, 875, 877, 876, 878, 879, 880, 881, 882, 883,
	851, 852, 855, 856, 854, 853, 857, 866, 867, 858,
	859, 860, 861, 862, 863, 865, 864, 884, 885, 886,
	887, 888, 890, 889, 893, 894, 892, 891, 896, 895,
	790, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 959, 276, 960, 0, 0, 964, 0,
	0, 0, 966, 965, 0, 967, 929, 928, 0, 0,
	961, 962, 0, 963, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 974, 975, 976, 977, 978, 979,
	980, 981, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 1049, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 789, 0, 0, 0, 284, 794,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 801, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 796, 797, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	98, 0, 0, 1050, 529, 984, 773, 950, 988, 1051,
	1002, 1003, 1004, 989, 0, 247, 990, 991, 254, 992,
	0, 949, 832, 834, 833, 899, 900, 901, 902, 903,
	904, 905, 835, 836, 830, 997, 634, 1005, 1006, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 769, 786, 0, 800, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 783, 784, 0,
	0, 0, 0, 944, 0, 785, 0, 0, 793, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 3240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 943, 0,
	0, 654, 0, 0, 941, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 994, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 995, 996, 270, 677, 840, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 848, 849, 294, 322, 925, 924, 923,
	321, 323, 921, 922, 920, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	931, 953, 942, 806, 807, 932, 933, 957, 934, 809,
	810, 954, 955, 803, 804, 808, 956, 958, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 945, 792, 791, 0,
	798, 799, 0, 828, 829, 831, 837, 838, 839, 850,
	897, 898, 906, 908, 909, 907, 910, 911, 912, 915,
	916, 917, 918, 913, 914, 919, 811, 815, 812, 813,
	814, 826, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 827, 968, 969, 970, 971, 972, 973, 843,
	847, 846, 844, 845, 841, 842, 869, 868, 870, 871,
	872, 873, 874, 875, 877, 876, 878, 879, 880, 881,
	882, 883, 851, 852, 855, 856, 854, 853, 857, 866,
	867, 858, 859, 860, 861, 862, 863, 865, 864, 884,
	885, 886, 887, 888, 890, 889, 893, 894, 892, 891,
	896, 895, 790, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 959, 276, 960, 0, 0,
	964, 0, 0, 0, 966, 965, 0, 967, 929, 928,
	0, 0, 961, 962, 0, 963, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 974, 975, 976, 977,
	978, 979, 980, 981, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 1049, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 789, 0, 0, 0,
	284, 794, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	801, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 796, 797, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 98, 0, 0, 1050, 529, 984, 773, 950,
	988, 1051, 1002, 1003, 1004, 989, 0, 247, 990, 991,
	254, 992, 0, 949, 832, 834, 833, 899, 900, 901,
	902, 903, 904, 905, 835, 836, 830, 997, 634, 1005,
	1006, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 769, 786, 0, 800, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 783,
	784, 0, 0, 0, 0, 944, 0, 785, 0, 0,
	793, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 3236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 654, 0, 0, 941, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 994, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 995, 996, 270, 677,
	840, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 848, 849, 294, 322, 925,
	924, 923, 321, 323, 921, 922, 920, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 931, 953, 942, 806, 807, 932, 933, 957,
	934, 809, 810, 954, 955, 803, 804, 808, 956, 958,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 945, 792,
	791, 0, 798, 799, 0, 828, 829, 831, 837, 838,
	839, 850, 897, 898, 906, 908, 909, 907, 910, 911,
	912, 915, 916, 917, 918, 913, 914, 919, 811, 815,
	812, 813, 814, 826, 816, 817, 818, 819, 820, 821,
	822, 823, 824, 825, 827, 968, 969, 970, 971, 972,
	973, 843, 847, 846, 844, 845, 841, 842, 869, 868,
	870, 871, 872, 873, 874, 875, 877, 876, 878, 879,
	880, 881, 882, 883, 851, 852, 855, 856, 854, 853,
	857, 866, 867, 858, 859, 860, 861, 862, 863, 865,
	864, 884, 885, 886, 887, 888, 890, 889, 893, 894,
	892, 891, 896, 895, 790, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 959, 276, 960,
	0, 0, 964, 0, 0, 0, 966, 965, 0, 967,
	929, 928, 0, 0, 961, 962, 0, 963, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 974, 975,
	976, 977, 978, 979, 980, 981, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 1049, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 789, 0,
	0, 0, 284, 794, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 801, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 796, 797, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 98, 0, 0, 1050, 529, 984,
	1124, 950, 988, 1051, 1002, 1003, 1004, 989, 0, 247,
	990, 991, 254, 992, 0, 949, 832, 834, 833, 899,
	900, 901, 902, 903, 904, 905, 835, 836, 830, 997,
	634, 1005, 1006, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 786, 0, 800,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 783, 784, 0, 0, 0, 0, 944, 0, 785,
	0, 0, 793, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 943, 0, 0, 654, 0, 0, 941, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 994, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 995, 996,
	270, 677, 840, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 848, 849, 294,
	322, 925, 924, 923, 321, 323, 921, 922, 920, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 931, 953, 942, 806, 807, 932,
	933, 957, 934, 809, 810, 954, 955, 803, 804, 808,
	956, 958, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	945, 792, 791, 0, 798, 799, 0, 828, 829, 831,
	837, 838, 839, 850, 897, 898, 906, 908, 909, 907,
	910, 911, 912, 915, 916, 917, 918, 913, 914, 919,
	811, 815, 812, 813, 814, 826, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 827, 968, 969, 970,
	971, 972, 973, 843, 847, 846, 844, 845, 841, 842,
	869, 868, 870, 871, 872, 873, 874, 875, 877, 876,
	878, 879, 880, 881, 882, 883, 851, 852, 855, 856,
	854, 853, 857, 866, 867, 858, 859, 860, 861, 862,
	863, 865, 864, 884, 885, 886, 887, 888, 890, 889,
	893, 894, 892, 891, 896, 895, 790, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 959,
	276, 960, 0, 0, 964, 0, 0, 0, 966, 965,
	0, 967, 929, 928, 0, 0, 961, 962, 0, 963,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	974, 975, 976, 977, 978, 979, 980, 981, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 1049,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	789, 0, 0, 0, 284, 794, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 801, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 796, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 98, 0, 0, 1050,
	529, 984, 1124, 950, 988, 1051, 1002, 1003, 1004, 989,
	0, 247, 990, 991, 254, 992, 0, 949, 832, 834,
	833, 899, 900, 901, 902, 903, 904, 905, 835, 836,
	830, 997, 634, 1005, 1006, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 786,
	0, 800, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 783, 784, 0, 0, 0, 0, 944,
	0, 785, 0, 0, 793, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 2176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 943, 0, 0, 654, 0, 0,
	941, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 994,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	995, 996, 270, 677, 840, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 848,
	849, 294, 322, 925, 924, 923, 321, 323, 921, 922,
	920, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 931, 953, 942, 806,
	807, 932, 933, 957, 934, 809, 810, 954, 955, 803,
	804, 808, 956, 958, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 945, 792, 791, 0, 798, 799, 0, 828,
	829, 831, 837, 838, 839, 850, 897, 898, 906, 908,
	909, 907, 910, 911, 912, 915, 916, 917, 918, 913,
	914, 919, 811, 815, 812, 813, 814, 826, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 827, 968,
	969, 970, 971, 972, 973, 843, 847, 846, 844, 845,
	841, 842, 869, 868, 870, 871, 872, 873, 874, 875,
	877, 876, 878, 879, 880, 881, 882, 883, 851, 852,
	855, 856, 854, 853, 857, 866, 867, 858, 859, 860,
	861, 862, 863, 865, 864, 884, 885, 886, 887, 888,
	890, 889, 893, 894, 892, 891, 896, 895, 790, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 959, 276, 960, 0, 0, 964, 0, 0, 0,
	966, 965, 0, 967, 929, 928, 0, 0, 961, 962,
	0, 963, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 974, 975, 976, 977, 978, 979, 980, 981,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 1049, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 789, 0, 0, 0, 284, 794, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 801, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	796, 797, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 98, 0,
	0, 1050, 529, 984, 1124, 950, 988, 1051, 1002, 1003,
	1004, 989, 0, 247, 990, 991, 254, 992, 0, 949,
	832, 834, 833, 899, 900, 901, 902, 903, 904, 905,
	835, 836, 830, 997, 634, 1005, 1006, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 786, 0, 800, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 783, 784, 0, 0, 0,
	0, 944, 0, 785, 0, 0, 793, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 2174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 654,
	0, 0, 941, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 994, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 995, 996, 270, 677, 840, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 848, 849, 294, 322, 925, 924, 923, 321, 323,
	921, 922, 920, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 931, 953,
	942, 806, 807, 932, 933, 957, 934, 809, 810, 954,
	955, 803, 804, 808, 956, 958, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 945, 792, 791, 0, 798, 799,
	0, 828, 829, 831, 837, 838, 839, 850, 897, 898,
	906, 908, 909, 907, 910, 911, 912, 915, 916, 917,
	918, 913, 914, 919, 811, 815, 812, 813, 814, 826,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	827, 968, 969, 970, 971, 972, 973, 843, 847, 846,
	844, 845, 841, 842, 869, 868, 870, 871, 872, 873,
	874, 875, 877, 876, 878, 879, 880, 881, 882, 883,
	851, 852, 855, 856, 854, 853, 857, 866, 867, 858,
	859, 860, 861, 862, 863, 865, 864, 884, 885, 886,
	887, 888, 890, 889, 893, 894, 892, 891, 896, 895,
	790, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 959, 276, 960, 0, 0, 964, 0,
	0, 0, 966, 965, 0, 967, 929, 928, 0, 0,
	961, 962, 0, 963, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 974, 975, 976, 977, 978, 979,
	980, 981, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 1049, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 0, 0, 529, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1166, 654, 0, 0, 0, 0, 0, 1163, 1164, 381,
	1132, 346, 203, 231, 1157, 1161, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 88,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	100, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 98, 0, 0, 0, 529, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 97, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 2493, 0, 0, 2492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 0, 529, 749,
	0, 0, 0, 0, 4378, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 4376, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 4377, 4245,
	4375, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 88, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 100, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 98, 0, 1796, 0,
	529, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	0, 0, 634, 0, 0, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 267,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 0, 0, 0,
	0, 268, 269, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 0, 0, 0, 0, 0, 416, 0, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 0, 202,
	227, 384, 97, 475, 302, 675, 643, 505, 638, 212,
	229, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 0, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 1836, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 1838, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 0, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 1840, 529, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 0, 0, 634, 0, 0, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 1521, 0, 1522, 1523,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 267, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 0,
	0, 0, 0, 268, 269, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 0, 0, 0, 0, 0, 416,
	0, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	0, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 0, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 0, 0, 529, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 4239, 4240, 4241, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	0, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 98, 0, 0, 0, 529, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 2493, 0, 0, 2492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 2425, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 2015, 529, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	2423, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 0, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 0, 0, 0, 0,
	529, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	0, 0, 634, 0, 0, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 1126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 381, 1132, 346, 203, 231,
	1130, 0, 431, 482, 494, 0, 0, 0, 0, 267,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 0, 0, 0,
	0, 268, 269, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 0, 0, 0, 0, 0, 416, 0, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 0, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 0, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 2425, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 0, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 2015, 529, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 0, 0, 634, 0, 0, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 267, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 0,
	0, 0, 0, 268, 269, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 0, 0, 0, 0, 0, 416,
	0, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	0, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 0, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 1796, 0, 529, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 3805, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	0, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 0, 2185, 529, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 2957, 529, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 0, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 0, 0, 0, 0,
	529, 749, 0, 0, 0, 0, 2924, 0, 0, 0,
	0, 247, 0, 0, 254, 2925, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	0, 0, 634, 0, 0, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 267,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 0, 0, 0,
	0, 268, 269, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 0, 0, 0, 0, 0, 416, 0, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 0, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 0, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 284, 1859, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 0, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 1858, 529, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 0, 0, 634, 0, 0, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 267, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 0,
	0, 0, 0, 268, 269, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 0, 0, 0, 0, 0, 416,
	0, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	0, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 0, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 0, 0, 529, 751, 752, 753, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	0, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 0, 0, 529, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 4245, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 0, 529, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 4161,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 0, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 0, 0, 0, 2015,
	529, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	0, 0, 634, 0, 0, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 267,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 0, 0, 0,
	0, 268, 269, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 0, 0, 0, 0, 0, 416, 0, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 0, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 0, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 0, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 0, 529, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 0, 0, 634, 0, 0, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 3805, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 267, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 0,
	0, 0, 0, 268, 269, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 0, 0, 0, 0, 0, 416,
	0, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	0, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 0, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	98, 0, 0, 0, 529, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 0, 0, 0, 2494, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	0, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 0, 0, 529, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 1840, 529, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 0, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 0, 0, 0, 0,
	529, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	0, 0, 634, 0, 0, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 267,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 0, 0, 0,
	0, 268, 269, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 0, 0, 0, 0, 0, 416, 0, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 0, 202,
	227, 384, 2132, 475, 302, 675, 643, 505, 638, 212,
	229, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 0, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 0, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 2123, 529, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 0, 0, 634, 0, 0, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 267, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 0,
	0, 0, 0, 268, 269, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 0, 0, 0, 0, 0, 416,
	0, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	0, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 0, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 1982, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 0, 0, 529, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 1980, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	0, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 0, 0, 529, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	1978, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 0, 529, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 382,
	281, 0, 1976, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 0, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 0, 0, 0, 0,
	529, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	0, 0, 634, 0, 0, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 267,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 0, 0, 0,
	0, 268, 269, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 0, 0, 0, 0, 0, 416, 0, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 0, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 0, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 382, 281, 0, 1974, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 0, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 0, 529, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 0, 0, 634, 0, 0, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 267, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 0,
	0, 0, 0, 268, 269, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 0, 0, 0, 0, 0, 416,
	0, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	0, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 0, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 1970, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 0, 0, 529, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 1968, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	0, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 0, 0, 529, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	1966, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 0, 529, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 0, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 1941, 0, 0, 0,
	529, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	0, 0, 634, 0, 0, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 267,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 0, 0, 0,
	0, 268, 269, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 0, 0, 0, 0, 0, 416, 0, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 0, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 0, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 1844, 284, 0, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 0, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 0, 529, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 0, 0, 634, 0, 0, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 267, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 0,
	0, 0, 0, 268, 269, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 0, 0, 0, 0, 0, 416,
	0, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	0, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 428, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 0, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	98, 0, 0, 0, 529, 984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	0, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 0, 0, 529, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 1497, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 0, 529, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 413, 0, 392, 599, 600,
	332, 0, 0, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 435, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 0, 0, 382,
	281, 0, 0, 210, 527, 0, 450, 0, 209, 0,
	508, 266, 393, 390, 608, 296, 287, 283, 262, 333,
	402, 447, 540, 441, 0, 386, 0, 0, 519, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 260,
	341, 208, 432, 520, 300, 0, 0, 0, 0, 0,
	529, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 254, 0, 0, 0, 367, 376,
	375, 355, 356, 358, 360, 366, 373, 379, 352, 361,
	0, 0, 634, 0, 0, 0, 279, 337, 286, 278,
	605, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	420, 271, 0, 474, 0, 317, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 700, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 381, 0, 346, 203, 231,
	0, 0, 431, 482, 494, 0, 0, 0, 0, 267,
	0, 492, 445, 629, 241, 298, 479, 452, 490, 460,
	301, 0, 0, 491, 388, 610, 470, 626, 655, 656,
	277, 425, 640, 544, 648, 673, 232, 274, 439, 528,
	632, 516, 414, 606, 607, 345, 515, 309, 207, 385,
	661, 230, 500, 387, 251, 239, 612, 637, 313, 265,
	303, 477, 668, 219, 539, 623, 248, 504, 0, 0,
	676, 256, 526, 635, 624, 221, 619, 525, 410, 342,
	343, 220, 0, 478, 282, 307, 0, 0, 272, 434,
	614, 615, 270, 677, 235, 647, 226, 0, 646, 427,
	609, 620, 411, 399, 225, 618, 409, 398, 350, 371,
	372, 294, 322, 467, 391, 468, 321, 323, 422, 421,
	423, 213, 633, 651, 0, 214, 0, 521, 636, 678,
	472, 218, 242, 243, 246, 0, 293, 297, 305, 308,
	318, 319, 328, 383, 438, 466, 462, 471, 0, 603,
	627, 641, 653, 659, 660, 662, 663, 664, 665, 666,
	669, 667, 426, 326, 517, 349, 389, 0, 0, 444,
	493, 249, 631, 518, 238, 597, 415, 424, 257, 259,
	258, 233, 509, 602, 244, 264, 205, 0, 0, 0,
	0, 268, 269, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 674, 530, 536, 531, 532, 533, 534, 535,
	0, 537, 0, 0, 0, 0, 0, 416, 0, 616,
	617, 697, 400, 507, 628, 351, 365, 368, 357, 377,
	0, 378, 353, 354, 359, 362, 363, 364, 369, 370,
	374, 380, 261, 216, 407, 417, 601, 327, 222, 223,
	224, 546, 547, 548, 549, 644, 645, 649, 211, 483,
	484, 485, 486, 306, 639, 324, 489, 488, 347, 348,
	395, 469, 562, 564, 575, 579, 581, 583, 589, 592,
	563, 565, 576, 580, 582, 584, 590, 593, 552, 554,
	556, 558, 571, 570, 567, 595, 596, 573, 578, 557,
	569, 574, 587, 594, 591, 551, 555, 559, 568, 586,
	585, 566, 577, 588, 572, 560, 553, 561, 0, 202,
	227, 384, 0, 475, 302, 675, 643, 505, 638, 212,
	229, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 240, 245,
	252, 275, 290, 292, 299, 312, 325, 334, 335, 338,
	344, 396, 403, 404, 405, 406, 428, 429, 430, 433,
	436, 437, 440, 442, 443, 446, 451, 455, 456, 457,
	459, 461, 463, 476, 481, 495, 496, 497, 498, 499,
	502, 503, 510, 511, 512, 513, 514, 522, 523, 538,
	611, 613, 630, 650, 657, 501, 401, 449, 473, 604,
	0, 0, 315, 316, 464, 465, 329, 330, 671, 672,
	314, 625, 658, 622, 670, 652, 458, 394, 0, 0,
	397, 295, 320, 336, 0, 642, 524, 234, 487, 304,
	263, 0, 0, 217, 255, 237, 273, 288, 291, 340,
	408, 418, 448, 454, 310, 285, 253, 480, 250, 506,
	541, 542, 543, 545, 412, 280, 453, 413, 0, 392,
	599, 600, 332, 0, 0, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 382, 281, 0, 0, 210, 527, 0, 450, 0,
	209, 0, 508, 266, 393, 390, 608, 296, 287, 283,
	262, 333, 402, 447, 540, 441, 0, 386, 0, 0,
	519, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 260, 341, 208, 432, 520, 300, 0, 0, 0,
	0, 0, 529, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 254, 0, 0, 0,
	367, 376, 375, 355, 356, 358, 360, 366, 373, 379,
	352, 361, 0, 0, 634, 0, 0, 0, 279, 337,
	286, 278, 605, 0, 0, 0, 0, 0, 0, 621,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 420, 271, 0, 474, 0, 317, 331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 0, 0, 0, 0, 0, 381, 0, 346,
	203, 231, 0, 0, 431, 482, 494, 0, 0, 0,
	0, 267, 0, 492, 445, 629, 241, 298, 479, 452,
	490, 460, 301, 0, 0, 491, 388, 610, 470, 626,
	655, 656, 277, 425, 640, 544, 648, 673, 232, 274,
	439, 528, 632, 516, 414, 606, 607, 345, 515, 309,
	207, 385, 661, 230, 500, 387, 251, 239, 612, 637,
	313, 265, 303, 477, 668, 219, 539, 623, 248, 504,
	0, 0, 676, 256, 526, 635, 624, 221, 619, 525,
	410, 342, 343, 220, 0, 478, 282, 307, 0, 0,
	272, 434, 614, 615, 270, 677, 235, 647, 226, 0,
	646, 427, 609, 620, 411, 399, 225, 618, 409, 398,
	350, 371, 372, 294, 322, 467, 391, 468, 321, 323,
	422, 421, 423, 213, 633, 651, 0, 214, 0, 521,
	636, 678, 472, 218, 242, 243, 246, 0, 293, 297,
	305, 308, 318, 319, 328, 383, 438, 466, 462, 471,
	0, 603, 627, 641, 653, 659, 660, 662, 663, 664,
	665, 666, 669, 667, 426, 326, 517, 349, 389, 0,
	0, 444, 493, 249, 631, 518, 238, 597, 415, 424,
	257, 259, 258, 233, 509, 602, 244, 264, 205, 0,
	0, 0, 0, 268, 269, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 674, 530, 536, 531, 532, 533,
	534, 535, 0, 537, 0, 0, 0, 0, 0, 416,
	0, 616, 617, 697, 400, 507, 628, 351, 365, 368,
	357, 377, 0, 378, 353, 354, 359, 362, 363, 364,
	369, 370, 374, 380, 261, 216, 407, 417, 601, 327,
	222, 223, 224, 546, 547, 548, 549, 644, 645, 649,
	211, 483, 484, 485, 486, 306, 639, 324, 489, 488,
	347, 348, 395, 469, 562, 564, 575, 579, 581, 583,
	589, 592, 563, 565, 576, 580, 582, 584, 590, 593,
	552, 554, 556, 558, 571, 570, 567, 595, 596, 573,
	578, 557, 569, 574, 587, 594, 591, 551, 555, 559,
	568, 586, 585, 566, 577, 588, 572, 560, 553, 561,
	0, 202, 227, 384, 0, 475, 302, 675, 643, 505,
	638, 212, 229, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	240, 245, 252, 275, 290, 292, 299, 312, 325, 334,
	335, 338, 344, 396, 403, 404, 405, 406, 4252, 429,
	430, 433, 436, 437, 440, 442, 443, 446, 451, 455,
	456, 457, 459, 461, 463, 476, 481, 495, 496, 497,
	498, 499, 502, 503, 510, 511, 512, 513, 514, 522,
	523, 538, 611, 613, 630, 650, 657, 501, 401, 449,
	473, 604, 0, 0, 315, 316, 464, 465, 329, 330,
	671, 672, 314, 625, 658, 622, 670, 652, 458, 394,
	0, 0, 397, 295, 320, 336, 0, 642, 524, 234,
	487, 304, 263, 0, 0, 217, 255, 237, 273, 288,
	291, 340, 408, 418, 448, 454, 310, 285, 253, 480,
	250, 506, 541, 542, 543, 545, 412, 280, 453, 413,
	0, 392, 599, 600, 332, 0, 0, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	435, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 382, 281, 0, 0, 210, 527, 0,
	450, 0, 209, 0, 508, 266, 393, 390, 608, 296,
	287, 283, 262, 333, 402, 447, 540, 441, 0, 386,
	0, 0, 519, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 260, 341, 208, 432, 520, 300, 0,
	0, 0, 0, 0, 529, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 254, 0,
	0, 0, 367, 376, 375, 355, 356, 358, 360, 366,
	373, 379, 352, 361, 0, 0, 634, 0, 0, 0,
	279, 337, 286, 278, 605, 0, 0, 0, 0, 0,
	0, 621, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 420, 271, 0, 474, 0, 317,
	331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 381,
	0, 346, 203, 231, 0, 0, 431, 482, 494, 0,
	0, 0, 0, 267, 0, 492, 445, 629, 241, 298,
	479, 452, 490, 460, 301, 0, 0, 491, 388, 610,
	470, 626, 655, 656, 277, 425, 640, 544, 648, 673,
	232, 274, 439, 528, 632, 516, 414, 606, 607, 345,
	515, 309, 207, 385, 661, 230, 500, 387, 251, 239,
	612, 637, 313, 265, 303, 477, 668, 219, 539, 623,
	248, 504, 0, 0, 676, 256, 526, 635, 624, 221,
	619, 525, 410, 342, 343, 220, 0, 478, 282, 307,
	0, 0, 272, 434, 614, 615, 270, 677, 235, 647,
	226, 0, 646, 427, 609, 620, 411, 399, 225, 618,
	409, 398, 350, 371, 372, 294, 322, 467, 391, 468,
	321, 323, 422, 421, 423, 213, 633, 651, 0, 214,
	0, 521, 636, 678, 472, 218, 242, 243, 246, 0,
	293, 297, 305, 308, 318, 319, 328, 383, 438, 466,
	462, 471, 0, 603, 627, 641, 653, 659, 660, 662,
	663, 664, 665, 666, 669, 667, 426, 326, 517, 349,
	389, 0, 0, 444, 493, 249, 631, 518, 238, 597,
	415, 424, 257, 259, 258, 233, 509, 602, 244, 264,
	205, 0, 0, 0, 0, 268, 269, 0, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 674, 530, 536, 531,
	532, 533, 534, 535, 0, 537, 0, 0, 0, 0,
	0, 416, 0, 616, 617, 697, 400, 507, 628, 351,
	365, 368, 357, 377, 0, 378, 353, 354, 359, 362,
	363, 364, 369, 370, 374, 380, 261, 216, 407, 417,
	601, 327, 222, 223, 224, 546, 547, 548, 549, 644,
	645, 649, 211, 483, 484, 485, 486, 306, 639, 324,
	489, 488, 347, 348, 395, 469, 562, 564, 575, 579,
	581, 583, 589, 592, 563, 565, 576, 580, 582, 584,
	590, 593, 552, 554, 556, 558, 571, 570, 567, 595,
	596, 573, 578, 557, 569, 574, 587, 594, 591, 551,
	555, 559, 568, 586, 585, 566, 577, 588, 572, 560,
	553, 561, 0, 202, 227, 384, 0, 475, 302, 675,
	643, 505, 638, 212, 229, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 240, 245, 252, 275, 290, 292, 299, 312,
	325, 334, 335, 338, 344, 396, 403, 404, 405, 406,
	428, 429, 430, 433, 436, 437, 440, 442, 443, 446,
	451, 455, 456, 457, 459, 461, 463, 476, 481, 495,
	496, 497, 498, 499, 502, 503, 510, 511, 512, 513,
	514, 522, 523, 538, 611, 613, 630, 650, 657, 501,
	401, 449, 473, 604, 0, 0, 315, 316, 464, 465,
	329, 330, 671, 672, 314, 625, 658, 622, 670, 652,
	458, 394, 0, 0, 397, 295, 320, 336, 0, 642,
	524, 234, 487, 304, 263, 0, 0, 217, 255, 237,
	273, 288, 291, 340, 408, 418, 448, 454, 310, 285,
	253, 480, 250, 506, 541, 542, 543, 545, 412, 280,
	453, 413, 0, 392, 599, 600, 332, 0, 0, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 0, 0, 0, 382, 281, 0, 0, 210,
	527, 0, 450, 0, 209, 0, 508, 266, 393, 390,
	608, 296, 287, 283, 262, 333, 402, 447, 540, 441,
	0, 386, 0, 0, 519, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 260, 341, 208, 432, 520,
	300, 0, 0, 0, 0, 0, 529, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	254, 0, 0, 0, 367, 376, 375, 355, 356, 358,
	360, 366, 373, 379, 352, 361, 0, 0, 634, 0,
	0, 0, 279, 337, 286, 278, 605, 0, 0, 0,
	0, 0, 0, 621, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 420, 271, 0, 474,
	0, 317, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 381, 0, 346, 203, 231, 0, 0, 431, 482,
	494, 0, 0, 0, 0, 267, 0, 492, 445, 629,
	241, 298, 479, 452, 490, 460, 301, 0, 0, 491,
	388, 610, 470, 626, 655, 656, 277, 425, 640, 544,
	648, 673, 232, 274, 439, 528, 632, 516, 414, 606,
	607, 345, 515, 309, 207, 385, 661, 230, 500, 387,
	251, 239, 612, 637, 313, 265, 303, 477, 668, 219,
	539, 623, 248, 504, 0, 0, 676, 256, 526, 635,
	624, 221, 619, 525, 410, 342, 343, 220, 0, 478,
	282, 307, 0, 0, 272, 434, 614, 615, 270, 677,
	235, 647, 226, 0, 646, 427, 609, 620, 411, 399,
	225, 618, 409, 398, 350, 371, 372, 294, 322, 467,
	391, 468, 321, 323, 422, 421, 423, 213, 633, 651,
	0, 214, 0, 521, 636, 678, 472, 218, 242, 243,
	246, 0, 293, 297, 305, 308, 318, 319, 328, 383,
	438, 466, 462, 471, 0, 603, 627, 641, 653, 659,
	660, 662, 663, 664, 665, 666, 669, 667, 426, 326,
	517, 349, 389, 0, 0, 444, 493, 249, 631, 518,
	238, 597, 415, 424, 257, 259, 258, 233, 509, 602,
	244, 264, 205, 0, 0, 0, 0, 268, 269, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 674, 530,
	536, 531, 532, 533, 534, 535, 0, 537, 0, 0,
	0, 0, 0, 416, 0, 616, 617, 697, 400, 507,
	628, 351, 365, 368, 357, 377, 0, 378, 353, 354,
	359, 362, 363, 364, 369, 370, 374, 380, 261, 216,
	407, 417, 601, 327, 222, 223, 224, 546, 547, 548,
	549, 644, 645, 649, 211, 483, 484, 485, 486, 306,
	639, 324, 489, 488, 347, 348, 395, 469, 562, 564,
	575, 579, 581, 583, 589, 592, 563, 565, 576, 580,
	582, 584, 590, 593, 552, 554, 556, 558, 571, 570,
	567, 595, 596, 573, 578, 557, 569, 574, 587, 594,
	591, 551, 555, 559, 568, 586, 585, 566, 577, 588,
	572, 560, 553, 561, 0, 202, 227, 384, 0, 475,
	302, 675, 643, 505, 638, 212, 229, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 240, 245, 252, 275, 290, 292,
	299, 312, 325, 334, 335, 338, 344, 396, 403, 404,
	405, 406, 428, 429, 430, 433, 436, 437, 440, 442,
	443, 446, 451, 455, 456, 457, 459, 461, 463, 476,
	481, 495, 496, 497, 498, 499, 502, 503, 510, 511,
	512, 513, 514, 522, 523, 538, 611, 613, 630, 650,
	657, 501, 401, 449, 473, 604, 0, 0, 315, 316,
	464, 465, 329, 330, 671, 672, 314, 625, 658, 622,
	670, 652, 458, 394, 0, 0, 397, 295, 320, 336,
	0, 642, 524, 234, 487, 304, 263, 0, 0, 217,
	255, 237, 273, 288, 291, 340, 408, 418, 448, 454,
	310, 285, 253, 480, 250, 506, 541, 542, 543, 545,
	412, 280, 453, 413, 0, 392, 599, 600, 332, 0,
	0, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 0, 382, 281, 0,
	0, 210, 527, 0, 450, 0, 209, 0, 508, 266,
	393, 390, 608, 296, 287, 283, 262, 333, 402, 447,
	540, 441, 0, 386, 0, 0, 519, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 260, 341, 208,
	432, 520, 300, 0, 0, 0, 0, 0, 529, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 254, 0, 0, 0, 367, 376, 375, 355,
	356, 358, 360, 366, 373, 379, 352, 361, 0, 0,
	634, 0, 0, 0, 279, 337, 286, 278, 605, 0,
	0, 0, 0, 0, 0, 621, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 420, 271,
	0, 474, 0, 317, 331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 654, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 346, 203, 231, 0, 0,
	431, 482, 494, 0, 0, 0, 0, 267, 0, 492,
	445, 629, 241, 298, 479, 452, 490, 460, 301, 0,
	0, 491, 388, 610, 470, 626, 655, 656, 277, 425,
	640, 544, 648, 673, 232, 274, 439, 528, 632, 516,
	414, 606, 607, 345, 515, 309, 207, 385, 661, 230,
	500, 387, 251, 239, 612, 637, 313, 265, 303, 477,
	668, 219, 539, 623, 248, 504, 0, 0, 676, 256,
	526, 635, 624, 221, 619, 525, 410, 342, 343, 220,
	0, 478, 282, 307, 0, 0, 272, 434, 614, 615,
	270, 677, 235, 647, 226, 0, 646, 427, 609, 620,
	411, 399, 225, 618, 409, 398, 350, 371, 372, 294,
	322, 467, 391, 468, 321, 323, 422, 421, 423, 213,
	633, 651, 0, 214, 0, 521, 636, 678, 472, 218,
	242, 243, 246, 0, 293, 297, 305, 308, 318, 319,
	328, 383, 438, 466, 462, 471, 0, 603, 627, 641,
	653, 659, 660, 662, 663, 664, 665, 666, 669, 667,
	426, 326, 517, 349, 389, 0, 0, 444, 493, 249,
	631, 518, 238, 597, 415, 424, 257, 259, 258, 233,
	509, 602, 244, 264, 205, 0, 0, 0, 0, 268,
	269, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	674, 530, 536, 531, 532, 533, 534, 535, 0, 537,
	0, 0, 0, 0, 0, 416, 0, 616, 617, 697,
	400, 507, 628, 351, 365, 368, 357, 377, 0, 378,
	353, 354, 359, 362, 363, 364, 369, 370, 374, 380,
	261, 216, 407, 417, 601, 327, 222, 223, 224, 546,
	547, 548, 549, 644, 645, 649, 211, 483, 484, 485,
	486, 306, 639, 324, 489, 488, 347, 348, 395, 469,
	562, 564, 575, 579, 581, 583, 589, 592, 563, 565,
	576, 580, 582, 584, 590, 593, 552, 554, 556, 558,
	571, 570, 567, 595, 596, 573, 578, 557, 569, 574,
	587, 594, 591, 551, 555, 559, 568, 586, 585, 566,
	577, 588, 572, 560, 553, 561, 0, 202, 227, 384,
	0, 475, 302, 675, 643, 505, 638, 212, 229, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 240, 245, 252, 275,
	290, 292, 299, 312, 325, 334, 335, 338, 344, 396,
	403, 404, 405, 406, 428, 429, 430, 433, 436, 437,
	440, 442, 443, 446, 451, 455, 456, 457, 459, 461,
	463, 476, 481, 495, 496, 497, 498, 499, 502, 503,
	510, 511, 512, 513, 514, 522, 523, 538, 611, 613,
	630, 650, 657, 501, 401, 449, 473, 604, 0, 0,
	315, 316, 464, 465, 329, 330, 671, 672, 314, 625,
	658, 622, 670, 652, 458, 394, 0, 0, 397, 295,
	320, 336, 0, 642, 524, 234, 487, 304, 263, 0,
	0, 217, 255, 237, 273, 288, 291, 340, 408, 418,
	448, 454, 310, 285, 253, 480, 250, 506, 541, 542,
	543, 545, 412, 280, 453, 0, 0, 392, 599, 600,
	332,
}

var yyPact = [...]int{
	-1000, -1000, 6380, -1000, -559, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2590, 2816, -1000, -1000, -1000, -1000, 2803, -1000,
	1134, -1000, 2296, 2226, 2621, 4412, -1000, 60689, 820, -1000,
	57601, -438, 987, 292, 39845, -1000, 221, -1000, 210, 59145,
	217, -1000, -1000, -1000, -1000, -438, 23633, 2505, 40, 39,
	60689, -1000, -1000, -1000, -1000, -378, 2745, 2198, -1000, 471,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 56829, -1000, -1000,
	-1000, 1242, -1000, -1000, 2630, 2595, 2504, 1034, 1732, -1000,
	2679, 2198, -1000, 23633, 2735, 2566, 22861, 22861, 498, -1000,
	-1000, 216, -1000, -1000, 34441, 60689, 43705, 2669, 59145, -1000,
	2621, -1000, -1000, -1000, 195, -1000, 375, 2194, -1000, 2190,
	-1000, 1215, 1165, 399, 864, 863, 398, 396, 395, 394,
	393, 391, 390, 389, 412, -1000, 1065, 1065, -217, -219,
	345, 797, 473, 473, 1089, 534, 2574, 2541, -1000, -1000,
	1065, 1065, 1065, 413, 1065, 1065, 1065, 1065, 355, 352,
	1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
	1065, 1065, 1065, 1065, 1065, 1065, 1065, 1000, 2621, 335,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60689, 304,
	60689, -1000, 926, 816, -1000, -1000, -444, 1194, 1194, 118,
	1194, 1194, 1194, 1194, 168, 985, 37, -1000, 165, 315,
	235, 333, 1171, 902, -1000, -1000, 317, 1171, 1991, -1000,
	1038, 331, 161, -1000, 1194, 1194, -1000, 15889, 229, 15889,
	15889, 322, 201, -1000, 2605, -1000, -1000, -1000, -1000, -1000,
	1505, -1000, -1000, -1000, -1000, -27, 521, -1000, -1000, -1000,
	-1000, 59145, 56057, 325, -1000, -1000, 273, 2074, 1437, 23633,
	1306, 1025, -1000, -1000, 1862, 992, -1000, -1000, -1000, -1000,
	-1000, 855, -1000, 25949, 25949, 25949, 25949, -1000, -1000, 1526,
	55285, 1526, 1526, 25949, 1526, 25949, 1526, 1526, 1526, 1526,
	23633, 1526, 1526, 1526, 1526, -1000, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, -1000, -1000, -1000, -1000, 1526,
	925, 1526, 1526, 1526, 1526, 1526, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1526, 1526, 1526, 1526, 1526, 1526, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, -1000, -1000, -1000, 1772, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1650, 1661, 1648, 1645, -1000, 20545, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1526,
	-1000, -1000, -1000, 60689, -1000, 1526, 255, 59145, 59145, 404,
	1456, -1000, -1000, 2679, 2198, -1000, 2745, 2825, 471, -1000,
	4222, 1981, 1865, 1510, 2198, 997, 2132, 60689, -1000, 2226,
	199, -1000, -1000, -1000, -339, -352, 2443, 1646, 1976, 2189,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1790, 23633,
	-1000, -1000, 2798, -1000, 31353, 908, 2797, 54513, -1000, 498,
	498, 2188, 664, -6, -1000, -1000, -1000, -1000, 1091, 39073,
	-1000, -1000, -1000, -1000, -1000, 2054, 60689, -1000, -1000, 5839,
	59145, -1000, 2291, -1000, 2052, -1000, 2241, 23633, 471, 2047,
	-1000, -1000, -1000, -1000, 1065, 1065, 1065, -1000, 409, 2728,
	4412, 5891, -1000, -1000, -1000, 53741, 2290, 59145, -1000, 2286,
	-1000, 1182, 927, 875, 875, 59145, -1000, -1000, 59917, 59145,
	1179, 1177, 59145, 59145, 59145, 59145, -1000, 52969, -1000, 52197,
	51425, 1454, 59145, 50653, 49881, 49109, 48337, 47565, -1000, 2410,
	-1000, 2269, -1000, -1000, -1000, 59917, 59145, 59145, 59917, 59145,
	59917, 60689, 59145, -1000, -1000, 337, -1000, -1000, 1453, 1452,
	1451, 1065, 1065, 1450, 1974, 1955, 1932, 1065, 1065, 1449,
	1928, 42161, 1908, 314, 1448, 1445, 1444, 1509, 1904, 270,
	1902, 1481, 1470, 1432, 59145, 2284, 60689, -1000, 308, 1124,
	911, -1000, -1000, -1000, 1086, 2621, 2502, 2185, 519, 814,
	59145, 496, 496, 59145, -1000, -1000, 16667, 60689, 206, -1000,
	1888, 23633, -1000, 1184, 1171, 1171, -1000, -1000, -1000, -1000,
	-1000, -1000, 1194, 60689, 1184, -1000, -1000, -1000, 1171, 1194,
	60689, 1194, 1194, 1194, 1194, 1171, 1171, 1171, 1194, 60689,
	60689, 60689, 60689, 60689, 60689, 60689, 60689, 60689, 15889, 1038,
	1194, -445, -1000, 1880, -1000, -1000, -1000, 2416, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	15889, 15889, -1000, -1000, 2693, 2686, -1000, -1000, -1000, 2181,
	-1000, 207, 14, 214, -1000, 46793, 527, 1085, -1000, 527,
	-1000, -1000, -1000, -1000, -1000, 2180, 46021, -1000, -448, -449,
	-450, -468, -1000, -1000, -1000, -481, -483, -1000, -1000, -1000,
	23633, 23633, 23633, 23633, -265, -1000, 1254, 25949, 2545, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23633, 1398, 1204, 25949,
	25949, 25949, 25949, 25949, 25949, 25949, 27493, 26721, 25949, 25949,
	25949, 25949, 25949, 25949, -1000, -1000, 36757, 6950, 6950, 992,
	992, 992, 992, -1000, -186, 2167, 59917, -1000, -1000, -1000,
	906, 23633, 23633, 992, -1000, 1465, 1746, 20545, 23633, 23633,
	23633, 23633, 1116, 1437, 59917, 23633, -1000, 1510, -1000, -1000,
	-1000, -1000, 1291, -1000, -1000, 1160, 2554, 2554, 2554, 2554,
	23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	2554, 23633, 177, 177, 1173, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 19001, 23633, 23633, 25949, 23633, 23633, 23633,
	1510, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	1510, 23633, 1446, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	18223, 23633, 23633, 23633, 23633, 23633, -1000, -1000, -1000, -1000,
	-1000, -1000, 23633, 23633, 23633, 23633, 23633, 23633, 23633, 23633,
	1510, 23633, 23633, 23633, 23633, 23633, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1993, 1843, 1699, 1526,
	23633, -1000, 2153, -1000, -192, 33669, 23633, 1873, 2793, 2320,
	59145, -1000, -1000, -1000, -1000, 2679, -1000, 2679, 1993, 3967,
	2449, 22861, -1000, -1000, 3967, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1986, -1000,
	320, 810, 2292, 308, 59145, 806, 792, 529, 494, -1000,
	-74, 1076, 60689, 2132, 2662, -1000, 2124, -1000, -1000, 1526,
	-1000, -299, -1000, -301, 2423, 1868, 936, -1000, 1468, 23633,
	23633, 2123, -1000, 1812, 60689, -1000, -265, -1000, 45249, -1000,
	-1000, 15111, 60689, 387, 60689, -1000, 32897, 44477, 327, -1000,
	-6, 2103, -1000, 18, 9, 19773, 991, -1000, -1000, -1000,
	345, 28265, 2070, 991, 144, -1000, -1000, -1000, 2241, -1000,
	2241, 2241, 2241, 2241, 936, 936, 936, 936, -1000, -1000,
	-1000, -1000, -1000, 2283, 2241, 2281, -1000, 2241, 2241, 2241,
	2241, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2280, 2280,
	2280, 2279, 2279, 2250, 2250, 468, -1000, 23633, 472, 43705,
	2626, 1425, 1636, -197, -1000, 59145, 1639, 1577, 1529, -1000,
	-548, 2116, -1000, -1000, 2727, -1000, -1000, 1308, 1199, 1196,
	1190, 59145, 262, 348, -1000, 462, -1000, 43705, 59145, 1176,
	875, 59145, -1000, 59145, -1000, -1000, -1000, -1000, -1000, 59145,
	-1000, -1000, 2115, -1000, 2113, 1407, 1195, 1244, 1172, 2115,
	-1000, -1000, -191, 2115, -1000, 2115, -1000, 2115, -1000, 2115,
	-1000, 2115, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1077, 287, -359, 59145, 262, 507, -1000, 505, 36757,
	-1000, -1000, -1000, 36757, 36757, -1000, -1000, -1000, -1000, 1856,
	1820, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-533, 60689, -1000, 283, 364, 334, 347, 60689, 823, 2570,
	2565, 2560, 2549, 2542, 2539, 2533, 316, 346, 60689, 60689,
	496, 2354, 60689, 2638, 60689, -1000, -1000, -1000, -1000, -1000,
	1816, 1798, -1000, 1437, 60689, -1000, -1000, 1194, 1194, -1000,
	-1000, 60689, 1194, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 60689, -1000, -1000,
	-1000, -1000, 1794, -1000, 60689, -27, 204, -1000, -1000, 59145,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -80,
	-1000, 381, 13, 434, -1000, -1000, -1000, -1000, -1000, 2684,
	-1000, 1437, 1151, 1139, -1000, 1526, -1000, -1000, 1243, -1000,
	-1000, -1000, -1000, -1000, 1526, 1526, 1526, -1000, -1000, -1000,
	-1000, -1000, 1398, 25949, 25949, 25949, 1669, 819, 1875, 1464,
	1723, 1264, 1264, 1036, 25949, 1036, 25949, 1007, 1007, 1007,
	1007, 1007, -1000, -1000, -1000, -1000, -1000, -1000, 1772, -1000,
	1761, -1000, 1526, 59917, 2010, 18223, 2157, 1985, 1510, 1018,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4235, 1510, 2074, 1510, 1613, 4120, 1115, -1000, 23633, 1510,
	3696, -1000, -1000, 1510, 1510, 23633, -1000, -1000, 23633, 23633,
	23633, 23633, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 23633, 1636, 2108, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2106, 2792, 1832, 1636, 1636, 1636, 1636,
	3690, 1636, 1636, 23633, 1621, -1000, -1000, -1000, 1733, 3671,
	1624, 3665, 1636, 1636, -1000, 1636, 3661, 3649, 1510, 3029,
	3023, 1636, 1636, 1636, 1636, 1636, 3010, 3006, 1636, 1636,
	2856, 1636, 3616, 1636, 2833, 2810, 2789, 2783, 2779, 2767,
	2762, 2757, 2749, 2716, 2712, 2677, 2673, 2668, 2641, 2633,
	2625, 2604, 1636, 1636, 1636, 3587, 1636, 3580, 1636, 3576,
	1636, 1636, 3565, 2599, 2592, 1510, 2104, -1000, 3558, 1636,
	3554, 3537, 3504, 2562, 3475, 3468, 3461, 1636, 1636, 1636,
	2538, 3457, 3434, 3426, 3419, 3410, 3399, 3395, 3391, 3387,
	1636, 1699, 1699, 1699, 1699, 1699, 3381, -270, 1636, 1510,
	-1000, -1000, -1000, -1000, 3372, 2527, 3368, 3364, 3358, 3354,
	1510, 1526, 900, -1000, -1000, 1699, 1510, 1510, 1699, 1699,
	3337, 3333, 3329, 3325, 3314, 3263, 1636, 1636, -1000, 1636,
	3234, 3169, 2523, 2518, 1510, -1000, 1699, 60689, -1000, -431,
	-1000, -4, 998, 1526, -1000, 42161, 1510, -1000, 3079, -1000,
	1411, -1000, -1000, -1000, -1000, -1000, 38301, 2098, -1000, -1000,
	-1000, 494, 785, 271, 494, 308, 283, 2319, 59145, 59145,
	59145, 60689, 1122, -1000, 517, -1000, 1526, -504, 22089, -1000,
	-1000, -1000, 936, 57, 37529, 977, 977, 152, -1000, 1437,
	1437, 23633, -1000, -1000, -1000, -1000, -1000, -1000, 899, 2756,
	528, 1526, -1000, 2127, 3731, -1000, -1000, -1000, 2659, 29037,
	-1000, -1000, 1526, 1526, 60689, 2102, 2101, -1000, 896, -1000,
	1482, 2103, -6, -7, -1000, -1000, -1000, -1000, 1437, -1000,
	1524, 388, 1498, -1000, 443, -1000, -1000, -1000, -1000, 2514,
	66, -1000, -1000, -1000, 834, 936, -1000, -1000, -1000, -1000,
	-1000, -1000, 1748, -1000, 1748, -1000, -1000, -1000, -1000, -1000,
	1424, -1000, -1000, -1000, -1000, 1423, -1000, -1000, 1421, -1000,
	-1000, 3093, 2335, 472, -1000, -1000, 1065, 1739, -1000, -1000,
	2528, 1065, 1065, 59145, -1000, -1000, 2036, 2626, -1000, -16,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -538, 160, 537,
	-1000, -1000, -1000, 4686, 59145, 2008, -1000, 260, -1000, 1938,
	-1000, 59145, -1000, 2005, 2275, 59145, 59145, -1000, -1000, -1000,
	59145, 1526, -1000, -1000, -1000, -1000, 809, 2618, 328, -1000,
	-1000, -291, -1000, -1000, 262, 260, 59917, 59145, 991, -1000,
	-1000, -1000, -1000, -1000, -532, 2003, 740, 60689, 60689, 60689,
	60689, 60689, 60689, 845, -1000, -1000, 28, -1000, -1000, 241,
	-1000, -1000, 1728, -1000, -1000, -1000, -1000, 241, -1000, -1000,
	-1000, -1000, -1000, 338, 500, -1000, 60689, 60689, 949, -1000,
	-1000, -1000, -1000, -1000, 1171, -1000, -1000, 1171, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2596, 60689, 4, -501, -1000, -498, 23633, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1416, 807, 1875, 25949, 25949, 1746,
	1746, 25949, -1000, -1000, -1000, 1348, 1348, 36757, -1000, 25949,
	23633, -1000, -1000, 23633, 23633, 23633, 1106, -1000, 23633, 1585,
	-1000, 23633, -1000, -270, 1699, 1636, 1636, 1636, 1636, -270,
	-270, -270, -270, -270, -270, -270, -270, -270, -270, 2095,
	-1000, 23633, 23633, 23633, 1510, 350, -1000, -1000, -1000, -270,
	23633, -1000, -1000, 2777, -1000, 23633, -1000, 36757, 23633, 23633,
	23633, -1000, -1000, -1000, 23633, 23633, -1000, -1000, 23633, -1000,
	23633, -1000, -1000, -1000, -1000, -1000, -1000, 23633, -1000, 23633,
	-1000, -1000, -1000, 23633, -1000, 23633, -1000, -1000, 23633, -1000,
	23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000,
	23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000,
	23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000,
	23633, -1000, 23633, -1000, -1000, -1000, 23633, -1000, 23633, -1000,
	23633, -1000, -1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633,
	23633, -1000, 23633, 23633, 23633, -1000, 23633, 23633, 23633, 23633,
	-1000, -1000, -1000, -1000, 23633, 23633, 23633, 23633, 23633, 23633,
	23633, 23633, 23633, 23633, -1000, -1000, -1000, -1000, -1000, -1000,
	23633, -1000, 43705, 52, -270, 1446, 52, 1446, 25177, 933,
	931, 24405, -1000, 23633, 17445, -1000, -1000, -1000, -1000, -1000,
	23633, 23633, 23633, 23633, 23633, 23633, -1000, -1000, -1000, 23633,
	23633, -1000, 23633, -1000, 23633, -1000, -1000, -1000, -1000, -1000,
	998, -1000, 907, 870, 875, 59145, -1000, -1000, -1000, -1000,
	2100, -1000, 2680, -1000, 2461, 2454, 2764, 2756, 22861, -1000,
	32897, 60689, 60689, 284, 60689, 283, 739, 2353, -1000, 2319,
	2319, 2319, -1000, 2637, -1000, 2271, 1477, -1000, -1000, -1000,
	-1000, -1000, -421, -1000, 2498, 2479, 977, 977, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14333, 2679, 23633, 2350, 59917,
	1526, -1000, 30581, 59145, 59917, 32897, 32897, 32897, 32897, 32897,
	-1000, 2389, 2380, -1000, 2427, 2386, 2431, 60689, -1000, 1993,
	2001, -1000, 23633, 35213, 2043, 32897, -1000, -1000, 32897, 60689,
	13555, -1000, -1000, 1, 3, -1000, -1000, -1000, -1000, 345,
	-1000, -1000, 1434, 2657, 2512, -1000, -1000, -1000, -1000, -1000,
	1998, -1000, 1973, 2096, 1937, 1894, 287, -1000, 2208, 2594,
	1065, 1065, -1000, 1418, -1000, 1465, 1726, 1716, -1000, -1000,
	-1000, 464, -1000, -1000, -547, 1413, 2258, 2204, 23633, 2253,
	2726, 2083, 59145, -1000, -1000, 59917, -1000, 272, -1000, 472,
	59145, -1000, -1000, -1000, 348, 60689, -1000, 10863, -1000, -1000,
	-1000, 260, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60689,
	2302, -1000, -1000, -1000, -1000, -1000, 225, 171, 1695, 228,
	1685, -1000, 228, -1000, 60689, 923, 2335, 60689, -1000, -1000,
	-1000, 1194, 1194, -1000, -1000, 2582, -1000, 1465, 1636, 25949,
	25949, -1000, 992, -1000, -1000, 596, -247, 2241, 2241, -1000,
	2241, 2250, -1000, 2241, 182, 2241, 179, 2241, -1000, -1000,
	1510, 1510, -1000, 1699, 2508, 1912, 3164, -1000, 1437, 23633,
	3113, -1000, -1000, -270, -270, -270, -270, -270, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -82, 3068,
	3045, 1636, -1000, 2233, 2232, -1000, 1636, 23633, 1636, 1510,
	2488, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 2422, 2408, 2391, 2383, 2373, 2322, 2318,
	2312, 2307, 2303, 2297, 2293, 2287, 2276, 2267, 2212, 1636,
	1636, 2203, 1636, 2199, 2191, -1000, 1437, 1699, 3036, 1699,
	1636, 1636, 3019, 326, 1636, 1877, 1877, 1877, 1877, 1877,
	1699, 1699, 1699, 1699, 1636, 59145, -1000, -270, -1000, -1000,
	-318, -338, -1000, 1510, -270, 2093, 25949, 1636, 25949, 25949,
	25949, 1636, 1510, -1000, 2186, 2182, 2987, 2117, 1636, 2983,
	1636, 1636, 1636, 2109, -1000, 2678, 1526, 2678, 1526, 2678,
	1840, 1411, 60689, -1000, -1000, -1000, -1000, 2756, 2748, -1000,
	2086, 1526, -1000, -1000, -1000, -1000, -1000, 730, 60689, 60689,
	2343, 2342, 2336, -1000, 1913, -1000, -1000, 57, 574, -1000,
	2482, 2479, -1000, 2723, 2494, 2721, -1000, -1000, -1000, -1000,
	-1000, 1437, -1000, 2606, 2067, -1000, 1073, 2080, -1000, -1000,
	22089, 1867, 2453, 894, 1840, 2112, 3731, 2311, 2332, 3753,
	-1000, -1000, -1000, -1000, 2379, -1000, 2376, -1000, -1000, 2226,
	-1000, 2688, 387, 32897, 2072, 2072, -1000, 893, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1213, 10863, 2806, -1000, 1677,
	-1000, 1512, 289, 1409, -1000, -1000, 1065, 1065, -1000, 1170,
	1166, -1000, 60689, 2230, -1000, 936, 1667, 936, 1397, -1000,
	-1000, 1396, -1000, -1000, -1000, -1000, 2240, 2396, -1000, -1000,
	-1000, -1000, 295, 2229, 2720, -1000, 23633, 2228, 1067, 2578,
	59145, 59145, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 824, 1065, -514, 344, 342, 1065, 1065,
	1065, -554, -1000, -1000, 1825, 1802, -1000, -211, -1000, 23633,
	-1000, -1000, -1000, -1000, -1000, 1415, 1415, 1661, 1648, 1645,
	-1000, 2226, -201, 59145, 59145, 59145, 59145, -1000, -1000, -1000,
	1250, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 992, 1510, 366, -204, 1510, -1000, -1000,
	936, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23633, -1000, 23633, -1000, 23633, 1437, 23633, -1000, -1000,
	-1000, -1000, -1000, 2679, 1644, 23633, 23633, -1000, 1394, 1391,
	-270, 1636, -1000, -1000, -1000, 23633, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23633,
	-1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633,
	-1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633,
	-1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633, -1000, 23633,
	-1000, -1000, 23633, -1000, -1000, -1000, 23633, -1000, 23633, -1000,
	23633, -1000, -1000, -1000, 23633, 319, 1348, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1510, 376,
	-1000, -1000, -1000, 2758, -1000, 1510, 23633, 1746, -1000, 1746,
	1746, 1746, -1000, -1000, -1000, 23633, -1000, 23633, 23633, -1000,
	23633, -1000, 23633, -1000, -1000, -1000, -1000, 23633, 1526, 2425,
	42933, 1526, 42933, 1526, 35213, -1000, -1000, 2748, 2714, 2719,
	274, 60689, -1000, -1000, 60689, 60689, 60689, -1000, 2486, 2490,
	2490, 2482, -1000, 2717, 2713, -1000, 1638, 2709, 1622, 1150,
	-1000, 59917, 23633, -1000, 1526, 42161, -1000, 523, 59145, 1526,
	59145, -1000, 2740, -1000, -1000, 23633, 2225, -1000, 23633, -1000,
	-1000, -1000, -1000, 6950, 2756, 2072, -1000, -1000, 1015, -1000,
	23633, -1000, 11928, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1616, 1600, -1000, -1000, 2224, 23633, -1000, -1000,
	-1000, 1826, 1787, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 348, -543, 2552, 59145, 1357, -1000, 1793,
	2083, 343, 1526, 1583, 1065, 1065, 1065, 1333, 1319, 42161,
	1770, -1000, 59145, 428, -1000, 348, -1000, -223, -232, 1636,
	-1000, -1000, 2656, -1000, 17445, -1000, -1000, 2219, 2315, -1000,
	-1000, -1000, -1000, 2421, -189, -208, -1000, -1000, 1636, 1636,
	1636, 2472, 1510, -1000, 1636, 1636, 1771, 1734, -1000, -1000,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636, 1636,
	1699, 2069, -1000, 319, 1510, 2331, -1000, -1000, 6950, -1000,
	-1000, 2740, 2703, 52, -1000, -1000, 281, 52, 1437, 1118,
	1510, 1510, 1118, 2062, 1636, 2028, 1979, 1636, 1636, 35985,
	-1000, 2700, 2691, 1765, -1000, -1000, 42933, 1765, 42933, 998,
	2714, -280, 23633, 23633, 1510, 2084, -1000, 59145, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2474, 1404, -1000, -1000, -1000,
	-1000, 1540, 1535, -1000, 1530, -1000, 2801, -1000, 1437, -1000,
	1526, 1526, -1000, 882, 2080, -1000, 2679, 1437, 59145, 1437,
	59, 2740, -1000, 1636, -1000, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526, 1526,
	1526, 1526, 1526, 1526, 1526, 1526, -1000, -1000, 59145, 2398,
	-1000, -1000, 1768, 158, -1000, 1627, 2083, -1000, -1000, 692,
	-1000, 23633, -1000, 42161, 1525, 1518, -1000, -1000, -1000, -1000,
	-554, -1000, -1000, -1000, -1000, -1000, -1000, 471, 2082, -1000,
	1064, 59145, 60689, -1000, 2339, -1000, -1000, -1000, -1000, 23633,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23633, -1000, 1510,
	2328, -1000, -381, -1000, -517, 23633, -270, -1000, -1000, -270,
	-1000, -1000, -1000, -1000, -1000, 23633, -1000, -1000, 23633, -1000,
	23633, -1000, -1000, 1765, -1000, -1000, -1000, 41389, -1000, 1765,
	-1000, 1765, -1000, -280, -1000, 2076, -1000, 59145, 1437, 340,
	9813, 274, 5839, -1000, 1358, -1000, -1000, -1000, -1000, -1000,
	59917, 59145, 2080, 59145, -1000, -1000, 1743, 1510, 1526, 2679,
	-1000, 1738, -1000, -1000, 2207, 2204, -1000, -1000, -1000, 21317,
	-1000, -1000, -1000, -1000, -1000, 307, -197, 17445, 12777, 1703,
	-1000, -198, 1636, 1699, -1000, -487, -1000, -1000, -1000, -1000,
	293, -1000, -1000, 2074, -1000, -1000, 1786, 1725, 1721, -1000,
	-1000, -1000, -1000, -1000, -1000, -280, -1000, -1000, 2642, -1000,
	-238, -1000, -564, -1000, -1000, 9813, 23633, 32125, 40617, -1000,
	-1000, -1000, -1000, 2073, 1674, -1000, -1000, -1000, 35213, 58373,
	-1000, -183, 463, 23633, 2197, 1510, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 874, -1000, -1000, -1000,
	2302, -210, -1000, -1000, -1000, 5287, -505, -286, -300, 25949,
	-1000, 23633, -1000, 23633, -1000, 23633, -1000, 59145, 1526, -1000,
	-1000, 1102, 9813, -1000, -564, 1479, 4247, 831, 821, -1000,
	-1000, -1000, 2601, -1000, -1000, 2445, -1000, -1000, -1000, 1653,
	-1000, 1035, -360, 2326, -1000, -107, -1000, -1000, -1000, 1209,
	1515, -1000, 1318, -1000, -1000, -1000, -1000, 2018, 59145, -1000,
	16667, -201, -209, 1130, -1000, -1000, -1000, -1000, -1000, 1746,
	1626, 1523, 1636, -1000, 59145, -1000, -1000, 9813, 2616, 2676,
	2643, -1000, 298, 298, 1511, -1000, -1000, 58373, -346, 991,
	6950, -1000, 2325, 2313, 2774, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -556, 1631, -1000, -1000, -1000, 5287, -343, -1000,
	23633, -1000, 23633, -1000, 1510, 9131, -1000, 10863, 29809, 1005,
	-1000, 1053, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2636, 59,
	-1000, 2776, -1000, 2722, 975, 975, -1000, 1257, -556, -1000,
	-1000, -1000, 1636, 1636, -1000, 1110, 1108, -1000, 23633, 23633,
	-1000, 8438, -1000, -1000, -1000, -1000, 835, -1000, -1000, -1000,
	-1000, 6055, -362, -1000, -1000, -1000, -1000, -1000, 459, 1312,
	-1000, -1000, -1000, -1000, -1000, 1090, 9813, -1000, 1355, 1636,
	-1000, 29809, -1000, -1000, 6950, -1000, -1000, -1000, 478, 9813,
	9813, -1000, -1000, 303, -1000, 9813, 303, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3456, 3455, 69, 9, 58, 57, 2852, 3453, 3452,
	3451, 206, 3447, 3446, 3445, 3444, 3443, 3441, 205, 203,
	199, 3439, 3437, 3436, 3435, 3434, 3432, 3431, 3428, 3427,
	42, 107, 77, 119, 227, 240, 3426, 3424, 40, 182,
	215, 3422, 3417, 3413, 3406, 3405, 129, 201, 97, 99,
	213, 3404, 3402, 89, 3400, 3398, 3397, 3394, 3393, 5,
	19, 36, 33, 3384, 3383, 3378, 25, 3373, 212, 211,
	208, 1173, 3370, 210, 126, 60, 3369, 3366, 3363, 3360,
	13, 10, 3357, 11, 3356, 6, 3355, 3352, 3351, 3350,
	3349, 3344, 3342, 3339, 3338, 3336, 3335, 3332, 3331, 3328,
	3327, 3326, 3323, 301, 3321, 3316, 45, 3271, 92, 3270,
	3264, 3263, 3262, 3261, 22, 3258, 3256, 29, 147, 68,
	3255, 3254, 49, 3253, 3252, 3251, 3250, 3247, 32, 3245,
	44, 3244, 73, 3243, 3242, 134, 3240, 3239, 3235, 54,
	3233, 3231, 3230, 27, 188, 3228, 3225, 157, 3222, 3220,
	3219, 187, 216, 3218, 2496, 3217, 113, 3211, 3210, 3207,
	184, 181, 221, 3206, 110, 3205, 3204, 3203, 3199, 143,
	3196, 3195, 4091, 3194, 3181, 17, 20, 140, 3171, 3170,
	204, 14, 78, 3169, 8, 12, 3160, 3158, 18, 87,
	3157, 117, 3155, 3154, 116, 75, 3152, 105, 111, 3150,
	3149, 26, 16, 3148, 1, 7, 2, 76, 3147, 3146,
	122, 3145, 3144, 3137, 103, 3135, 3134, 6244, 3133, 101,
	144, 115, 85, 3131, 183, 72, 3130, 3124, 3118, 3109,
	3105, 3094, 62, 3087, 3077, 3075, 155, 250, 121, 3070,
	3069, 148, 377, 137, 63, 139, 3065, 194, 3064, 146,
	95, 3063, 190, 3059, 3052, 153, 152, 3051, 3048, 66,
	180, 207, 3047, 114, 138, 131, 141, 106, 154, 3045,
	3044, 3041, 67, 83, 3039, 3038, 3036, 3035, 195, 3032,
	3030, 82, 3029, 65, 3028, 186, 3025, 331, 71, 3024,
	192, 174, 3021, 84, 179, 3019, 3017, 3016, 79, 104,
	81, 59, 3015, 173, 178, 135, 171, 3007, 3004, 64,
	3003, 3002, 3001, 214, 319, 2998, 2997, 251, 191, 160,
	149, 102, 2994, 220, 2992, 2990, 2975, 30, 5281, 7801,
	200, 52, 175, 2974, 2972, 8735, 31, 46, 43, 2970,
	219, 2969, 142, 2968, 2967, 2964, 222, 226, 123, 176,
	70, 2959, 2957, 2956, 2955, 37, 2954, 2951, 2950, 2949,
	2948, 2946, 56, 53, 48, 108, 236, 74, 23, 109,
	177, 172, 86, 2943, 2941, 2940, 133, 98, 2933, 169,
	166, 145, 185, 2928, 196, 161, 128, 2927, 91, 47,
	2925, 2924, 2921, 2919, 100, 2914, 2911, 2909, 2908, 164,
	162, 132, 93, 2899, 96, 120, 168, 163, 55, 2898,
	50, 2897, 2896, 39, 202, 61, 2894, 2892, 2891, 41,
	2890, 28, 118, 125, 2889, 6654, 2888, 34, 238, 170,
	2883, 2882, 15, 21, 24, 2878, 2877, 2874, 2870, 151,
	2866, 2862, 2861, 2857, 38, 51, 35, 4, 124, 156,
	94, 2856, 2851, 159, 2839, 2835, 2834, 0, 1827, 136,
	2825, 217,
}

//line sql.y:9248
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) compoundStatementsUnion() CompoundStatements {
	v, _ := st.union.(CompoundStatements)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) elseIfUnion() *ElseIfBlock {
	v, _ := st.union.(*ElseIfBlock)
	return v
}

func (st *yySymType) elseIfsUnion() []*ElseIfBlock {
	v, _ := st.union.([]*ElseIfBlock)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) handlerActionUnion() HandlerAction {
	v, _ := st.union.(HandlerAction)
	return v
}

func (st *yySymType) handlerConditionUnion() HandlerCondition {
	v, _ := st.union.(HandlerCondition)
	return v
}

func (st *yySymType) handlerConditionsUnion() []HandlerCondition {
	v, _ := st.union.([]HandlerCondition)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) signalConditionNameUnion() SignalConditionName {
	v, _ := st.union.(SignalConditionName)
	return v
}

func (st *yySymType) signalSetUnion() *SignalSet {
	v, _ := st.union.(*SignalSet)
	return v
}

func (st *yySymType) signalSetsUnion() []*SignalSet {
	v, _ := st.union.([]*SignalSet)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 455, 456, 456, 8, 8, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 80, 80, 80, 80, 80, 80, 80, 64,
	64, 65, 65, 66, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 57, 57, 57, 58,
	58, 60, 60, 63, 63, 61, 62, 59, 59, 59,
	59, 59, 168, 168, 271, 271, 271, 81, 79, 79,
	82, 82, 83, 83, 84, 84, 87, 87, 86, 86,
	85, 293, 425, 291, 291, 29, 98, 38, 38, 37,
	37, 40, 40, 39, 32, 32, 32, 33, 33, 33,
	33, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	30, 30, 30, 30, 31, 31, 31, 31, 31, 36,
	36, 16, 17, 35, 35, 35, 18, 18, 133, 133,
	19, 20, 20, 20, 20, 459, 459, 212, 212, 210,
	210, 211, 211, 298, 298, 21, 302, 302, 304, 304,
	304, 304, 292, 292, 292, 22, 22, 303, 303, 305,
	305, 305, 308, 308, 308, 308, 349, 349, 349, 23,
	23, 23, 23, 23, 23, 153, 427, 427, 426, 421,
	421, 420, 420, 419, 424, 424, 423, 423, 422, 43,
	42, 44, 44, 44, 45, 54, 54, 54, 54, 55,
	56, 428, 428, 390, 72, 72, 71, 71, 71, 71,
	71, 71, 73, 73, 69, 69, 68, 68, 70, 70,
	392, 392, 378, 378, 391, 391, 391, 391, 391, 391,
	391, 377, 377, 165, 165, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 443, 443, 443, 443, 442, 442, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 176, 176, 188,
	188, 188, 188, 188, 188, 174, 174, 175, 173, 173,
	173, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 187,
	187, 182, 182, 182, 184, 184, 183, 183, 183, 185,
	185, 444, 444, 444, 444, 355, 355, 355, 355, 358,
	358, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	357, 357, 357, 357, 357, 357, 357, 359, 359, 359,
	359, 359, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 361,
	361, 361, 361, 361, 361, 361, 361, 376, 376, 365,
	365, 370, 370, 371, 371, 372, 372, 372, 373, 373,
	373, 374, 374, 367, 367, 367, 367, 367, 367, 367,
	367, 367, 369, 369, 368, 368, 368, 379, 404, 404,
	403, 403, 401, 401, 401, 401, 401, 401, 401, 401,
	388, 388, 398, 398, 398, 398, 398, 387, 387, 383,
	383, 383, 384, 384, 385, 385, 382, 382, 386, 386,
	400, 400, 399, 399, 380, 380, 381, 381, 406, 445,
	445, 445, 445, 445, 446, 446, 407, 435, 437, 437,
	437, 436, 436, 433, 434, 432, 432, 432, 432, 432,
	108, 108, 108, 321, 321, 322, 322, 396, 396, 395,
	395, 395, 397, 397, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 316, 316, 316, 431, 431,
	431, 431, 431, 431, 430, 430, 430, 393, 393, 393,
	393, 429, 429, 74, 74, 250, 250, 448, 448, 450,
	450, 450, 51, 51, 51, 51, 51, 51, 50, 50,
	50, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 52, 52, 47, 47, 47, 47, 47, 47,
	47, 47, 47, 47, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 135, 135,
	136, 136, 136, 136, 138, 138, 138, 409, 409, 75,
	75, 3, 3, 200, 202, 203, 203, 201, 201, 201,
	201, 201, 201, 77, 77, 76, 76, 205, 204, 206,
	206, 206, 1, 1, 2, 2, 4, 4, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 414, 414, 414, 414, 414, 414, 414, 414, 414,
	375, 375, 375, 408, 408, 410, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 141, 140, 140, 139,
	142, 142, 142, 142, 142, 142, 142, 142, 412, 412,
	412, 78, 78, 413, 362, 363, 364, 5, 6, 389,
	411, 149, 149, 25, 41, 41, 26, 26, 26, 26,
	27, 27, 88, 91, 91, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 326, 326, 315, 315, 324, 324, 314, 314, 340,
	340, 340, 317, 317, 317, 318, 318, 441, 441, 441,
	311, 311, 90, 90, 90, 341, 341, 341, 341, 93,
	93, 451, 451, 452, 452, 453, 453, 453, 94, 95,
	95, 344, 344, 345, 345, 96, 97, 109, 109, 109,
	109, 109, 110, 110, 110, 110, 110, 110, 134, 134,
	134, 11, 11, 11, 11, 105, 105, 105, 10, 10,
	12, 92, 92, 99, 438, 438, 439, 440, 440, 440,
	440, 100, 102, 28, 28, 28, 28, 28, 28, 159,
	159, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 154, 154, 154, 148, 148, 460, 103,
	104, 104, 152, 152, 152, 145, 145, 145, 151, 151,
	151, 13, 13, 14, 296, 296, 15, 15, 158, 158,
	157, 157, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 155, 155, 156, 156, 156, 156, 333,
	333, 333, 332, 332, 194, 194, 196, 195, 195, 197,
	197, 198, 198, 198, 198, 248, 248, 220, 220, 288,
	288, 289, 289, 287, 287, 295, 295, 290, 290, 290,
	290, 299, 299, 199, 199, 199, 199, 207, 207, 208,
	208, 209, 209, 343, 343, 338, 338, 338, 337, 337,
	213, 213, 213, 215, 214, 214, 214, 214, 216, 216,
	218, 218, 217, 217, 219, 224, 224, 223, 223, 221,
	221, 221, 221, 221, 221, 222, 222, 222, 222, 225,
	225, 172, 172, 172, 172, 172, 172, 172, 172, 449,
	449, 186, 186, 186, 186, 186, 186, 186, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 278,
	278, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 253, 253, 252, 252, 111, 111, 111, 112, 112,
	113, 113, 113, 113, 113, 114, 114, 114, 114, 114,
	114, 114, 116, 116, 115, 115, 239, 239, 330, 330,
	117, 118, 118, 119, 119, 122, 122, 121, 120, 120,
	126, 126, 123, 123, 125, 125, 124, 127, 127, 128,
	129, 129, 312, 312, 226, 226, 235, 235, 235, 235,
	227, 227, 228, 228, 228, 228, 228, 228, 236, 236,
	236, 247, 237, 237, 233, 233, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	191, 191, 191, 191, 258, 258, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 179, 179, 192, 192, 192, 192, 193, 193, 193,
	193, 193, 193, 193, 351, 351, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 461, 461, 366, 366, 366, 234,
	234, 234, 234, 234, 150, 150, 150, 150, 150, 348,
	348, 348, 352, 352, 352, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 350,
	353, 353, 256, 256, 146, 146, 254, 254, 255, 257,
	257, 249, 249, 249, 249, 251, 251, 230, 230, 230,
	259, 259, 354, 354, 260, 260, 130, 131, 131, 132,
	132, 261, 261, 263, 262, 262, 264, 265, 265, 265,
	266, 266, 267, 267, 267, 53, 53, 53, 53, 53,
	48, 48, 48, 48, 49, 49, 49, 49, 161, 161,
	162, 162, 162, 164, 164, 163, 163, 106, 106, 107,
	107, 107, 418, 418, 417, 417, 415, 416, 416, 416,
	416, 169, 169, 170, 171, 171, 171, 166, 166, 167,
	167, 285, 285, 285, 285, 285, 285, 285, 268, 268,
	268, 268, 297, 297, 294, 294, 276, 276, 276, 272,
	272, 274, 274, 274, 275, 275, 275, 273, 282, 282,
	284, 284, 283, 283, 279, 279, 280, 280, 281, 281,
	281, 277, 277, 229, 229, 229, 229, 229, 286, 286,
	286, 286, 342, 342, 342, 300, 300, 240, 240, 241,
	241, 245, 245, 244, 244, 242, 243, 246, 246, 190,
	301, 301, 309, 306, 306, 307, 307, 334, 334, 334,
	310, 310, 323, 323, 319, 319, 320, 320, 313, 313,
	325, 325, 325, 101, 238, 238, 405, 405, 402, 329,
	329, 331, 331, 335, 335, 339, 339, 336, 336, 9,
	454, 454, 454, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 457, 458, 346, 347, 347, 347,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 8, 4, 6, 5, 3, 0,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 1,
	2, 1, 0, 1, 0, 4, 2, 2, 1, 1,
	0, 1, 1, 2, 0, 2, 0, 1, 2, 1,
	4, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 3,
	3, 5, 7, 10, 9, 1, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 6, 5, 2, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 10,
	6, 6, 8, 7, 4, 7, 8, 8, 8, 5,
	3, 1, 1, 5, 0, 1, 1, 1, 1, 2,
	2, 2, 0, 1, 4, 4, 4, 4, 4, 4,
	2, 4, 1, 3, 1, 1, 3, 4, 3, 3,
	3, 5, 10, 0, 2, 0, 2, 3, 5, 3,
	4, 2, 3, 2, 3, 3, 3, 3, 2, 2,
	4, 4, 1, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 3, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 2, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 6, 10,
	7, 5, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 6, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 4, 5, 5, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 2, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 5, 3,
	5, 0, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 3, 2, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 4, 4,
	4, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 1, 2, 3, 7, 0,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 5, 5, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 3, 6, 1,
	1, 3, 4, 3, 4, 4, 4, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 5, 5, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 5, 6, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 4,
	2, 4, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 1, 0, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 2, 2, 5, 6, 6, 6, 6, 6,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	8, 4, 8, 8, 6, 5, 4, 4, 4, 5,
	7, 4, 4, 7, 4, 4, 6, 6, 6, 8,
	6, 6, 4, 4, 3, 4, 6, 6, 4, 4,
	6, 4, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 4, 4, 4, 6, 4, 6, 4, 4,
	6, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 4, 4, 6, 4, 6, 4, 8, 6,
	4, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	4, 6, 8, 6, 4, 6, 6, 8, 10, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 5, 9, 6, 9,
	8, 6, 8, 8, 8, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 4, 4, 3, 4, 6, 6, 4,
	6, 4, 6, 8, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 4, 0, 2, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 1,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 1, 1, 3, 3, 0, 1, 1,
	1, 0, 1, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 3, 4, 2, 3, 4, 4, 9, 3,
	5, 2, 3, 1, 1, 1, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 3, 1, 6, 5, 4, 1, 3,
	3, 5, 0, 2, 5, 0, 5, 1, 3, 1,
	3, 1, 3, 1, 2, 3, 4, 1, 1, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -455, -103, -460, -8, -7, -30, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -27, -88,
	-91, -89, -90, -93, -94, -95, -96, -97, -10, -12,
	-92, -28, -29, -98, -99, -100, -101, -102, -13, -14,
	-15, -9, -33, -32, -31, 13, 14, -133, -37, 35,
	-42, -43, -54, -44, -55, -45, 242, -56, 244, 243,
	292, 245, 409, 285, 83, 342, 343, 345, 346, 347,
	348, -134, 734, 290, 291, 247, 39, 51, 36, 37,
	40, 251, 298, 299, 250, 145, -34, -38, 12, -457,
	15, 511, 241, 287, 286, 31, -35, 621, 95, -36,
	63, -104, -456, 782, -285, -268, 26, 36, 32, -267,
	-263, -152, -268, 24, 22, 11, -103, -103, -103, 16,
	17, -103, -390, -392, 95, 174, 95, -288, 95, -72,
	-71, -69, -68, -70, -73, 34, -51, -52, -414, -50,
	-47, 246, 243, 302, 135, 136, 292, 293, 294, 245,
	275, 291, 295, 290, 311, -46, 90, 36, 621, 624,
	-397, 242, 248, 249, 244, 512, 138, 137, 84, -394,
	404, 655, 752, -73, 754, 110, 113, 753, 50, 265,
	755, 756, 757, 662, 758, 274, 759, 760, 761, 762,
	768, 703, 769, 770, 771, 139, 11, -103, -339, -335,
	100, -328, 618, 277, 653, 465, 654, 327, 90, 47,
	42, 557, 628, 400, 404, 655, 542, 752, 410, 342,
	360, 354, 547, 548, 549, 383, 375, 619, 656, 629,
	330, 278, 315, 460, 746, 373, 149, 754, 453, 334,
	657, 293, 411, 412, 463, 658, 413, 110, 345, 450,
	767, 333, 659, 765, 113, 753, 350, 457, 459, 458,
	88, 541, 57, 749, 464, 338, 50, 288, 470, 471,
	371, 250, 367, 755, 316, 660, 631, 309, 138, 135,
	774, 39, 363, 56, 33, 764, 137, 55, 756, 165,
	661, 757, 662, 415, 390, 740, 54, 416, 294, 663,
	93, 299, 623, 339, 748, 417, 562, 364, 418, 326,
	763, 247, 664, 337, 729, 721, 722, 254, 419, 420,
	741, 395, 391, 396, 564, 665, 442, 546, 421, 725,
	726, 255, 781, 58, 666, 667, 742, 136, 668, 87,
	758, 89, 358, 359, 669, 324, 276, 567, 568, 444,
	387, 524, 127, 531, 532, 120, 121, 527, 122, 533,
	123, 128, 534, 535, 536, 525, 124, 117, 526, 537,
	538, 388, 389, 125, 539, 119, 118, 528, 530, 126,
	540, 274, 38, 422, 620, 328, 64, 332, 303, 445,
	52, 393, 778, 51, 736, 569, 670, 739, 386, 382,
	521, 715, 59, 671, 672, 673, 674, 543, 759, 385,
	357, 381, 773, 4, 321, 455, 516, 544, 760, 68,
	249, 398, 397, 399, 456, 310, 441, 378, 675, 676,
	677, 281, 91, 678, 368, 25, 679, 680, 423, 317,
	681, 62, 682, 683, 448, 291, 684, 60, 761, 716,
	45, 685, 296, 775, 762, 686, 687, 688, 735, 689,
	298, 690, 425, 691, 723, 724, 424, 392, 394, 570,
	305, 426, 409, 717, 252, 622, 692, 340, 362, 295,
	766, 693, 282, 558, 559, 560, 561, 747, 566, 565,
	297, 302, 290, 449, 283, 694, 695, 696, 697, 698,
	331, 714, 699, 700, 346, 626, 768, 522, 49, 461,
	701, 702, 703, 704, 705, 325, 320, 443, 452, 67,
	92, 406, 706, 707, 745, 356, 351, 43, 318, 99,
	502, 504, 505, 506, 507, 508, 503, 510, 708, 343,
	61, 769, 770, 771, 312, 772, 550, 551, 552, 553,
	13, 604, 587, 615, 588, 605, 589, 598, 590, 606,
	614, 616, 571, 579, 572, 580, 610, 593, 607, 599,
	592, 591, 613, 596, 600, 573, 581, 611, 597, 574,
	582, 575, 583, 576, 584, 609, 608, 601, 612, 577,
	585, 603, 578, 586, 602, 594, 595, 454, 473, 779,
	780, 545, 462, 428, 718, 139, 322, 323, 53, 379,
	304, 709, 335, 710, 369, 370, 518, 519, 384, 355,
	380, 146, 732, 344, 353, 730, 306, 429, 523, 292,
	711, 451, 319, 401, 131, 352, 407, 336, 627, 563,
	311, 430, 744, 625, 554, 555, 377, 374, 313, 556,
	712, 402, 734, 431, 266, 307, 308, 713, 731, 432,
	433, 329, 434, 435, 436, 437, 438, 440, 341, 439,
	733, 727, 728, 314, 501, 624, 349, 372, 408, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 520, 264, -103,
	264, -217, -335, -154, 736, 738, 193, -306, 412, -324,
	414, 427, 422, 432, 420, -315, 423, 425, 305, -441,
	442, 264, 429, 241, 415, 424, 433, 434, 329, 440,
	435, 341, 439, 314, 436, 437, 438, -425, 193, 757,
	772, 344, 352, 149, 376, 419, 417, 443, 736, 100,
	-341, 100, 101, 102, -328, 344, -344, 349, -329, -425,
	-328, 347, -103, -103, -346, -346, -154, -237, -172, 157,
	-186, -293, -189, 101, -177, -180, -231, -232, -233, -234,
	-187, -251, -291, 182, 183, 190, 158, -247, -190, 29,
	617, 513, 512, 193, 34, 236, 77, 78, 515, 516,
	160, 63, 15, 478, 479, -188, 468, 469, 480, 474,
	475, 541, 543, 544, 545, 542, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 546, 557, 518, 519,
	129, 520, 117, 119, 118, 127, 128, 521, 522, 523,
	373, 569, 570, 564, 567, 568, 566, 565, 388, 389,
	524, 587, 588, 592, 591, 589, 590, 593, 596, 597,
	598, 599, 600, 601, 603, 602, 594, 595, 572, 571,
	573, 574, 575, 576, 577, 578, 580, 579, 581, 582,
	583, 584, 585, 586, 604, 605, 606, 607, 608, 610,
	609, 614, 613, 611, 612, 616, 615, 525, 526, 120,
	121, 122, 123, 124, 125, 126, 527, 530, 528, 529,
	531, 532, 533, 538, 539, 534, 535, 536, 537, 540,
	399, 397, 398, 394, 393, 392, -113, -126, 644, 643,
	-127, 465, 470, 471, 473, -178, -179, -192, -193, -329,
	-335, 269, 467, 263, 188, 511, -181, -175, -249, 116,
	102, -32, -246, 466, 476, 477, 481, 472, 482, 630,
	632, 647, 648, 650, 635, 640, 639, 642, 558, 559,
	560, 561, 562, 563, 721, 722, 723, 724, 725, 726,
	727, 728, -425, -328, 100, -184, -182, -226, 103, 108,
	111, 112, 114, -447, 288, 369, 370, 130, -457, -242,
	-243, -183, 105, 106, 107, 132, 133, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 234, 235, 750,
	98, 104, 50, 428, 428, -217, -103, -103, -103, -103,
	-454, 753, 622, -261, -152, -263, -34, -32, -457, 12,
	-103, -32, -33, -31, -38, -103, -40, 649, -39, -335,
	-103, 109, -268, -285, 16, 67, 177, 48, 56, -297,
	-294, -293, 100, 101, -266, -267, -35, -32, -172, 23,
	41, 27, -156, 184, -172, -335, -156, -313, 268, -103,
	-103, -302, -349, 344, -304, 443, 736, 442, -292, -307,
	100, -291, -306, 441, 101, -391, 174, -377, -381, -329,
	279, -407, 275, -217, -400, -399, -329, -457, 28, -287,
	-329, -68, -69, -70, -306, 192, 756, -135, 297, 301,
	96, 96, -381, -380, -379, -429, 301, 279, -406, -398,
	271, 280, -387, 272, 273, -382, 265, 151, -429, -382,
	270, 280, 275, 279, 301, 301, 139, 301, 139, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 296, -388,
	166, -388, 625, 625, -394, -429, 275, 265, -429, -429,
	271, -325, -382, 267, 28, 267, 38, 38, -388, -388,
	-388, -306, 192, -388, -388, -388, -388, 309, 309, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, 264, -428, -161, 439,
	329, 467, 263, -162, 90, -71, 311, -41, -217, -323,
	265, 266, -428, 298, 322, -217, 237, 264, 739, -317,
	174, 19, -317, -314, 428, 426, 413, 418, -317, -317,
	-317, -317, 312, 411, -383, 265, 38, 276, 428, 312,
	411, 312, 313, 312, 313, 421, 431, 312, -340, 18,
	177, 467, 416, 420, 305, 264, 306, 266, 430, 313,
	-340, 98, -318, 174, 312, 428, 422, 308, -317, -317,
	-347, -457, -331, -329, -327, 246, 41, 156, 28, 30,
	159, 193, 142, 23, 160, 40, 248, 376, 275, 192,
	271, 262, 256, 512, 241, 81, 630, 468, 475, 466,
	474, 478, 514, 515, 467, 414, 253, 34, 17, 632,
	31, 286, 27, 44, 186, 243, 163, 164, 633, 289,
	29, 257, 287, 129, 133, 635, 26, 84, 280, 18,
	273, 46, 20, 636, 637, 21, 74, 269, 268, 177,
	265, 79, 720, 15, 236, 32, 173, 75, 638, 151,
	145, 639, 640, 641, 642, 143, 77, 174, 24, 776,
	476, 477, 36, 737, 617, 300, 188, 82, 65, 738,
	157, 472, 643, 644, 130, 645, 134, 85, 743, 153,
	22, 719, 80, 48, 646, 301, 647, 270, 777, 648,
	446, 649, 175, 244, 511, 78, 176, 750, 650, 751,
	263, 427, 12, 517, 35, 285, 284, 272, 73, 72,
	259, 260, 261, 141, 76, 482, 651, 264, 162, 267,
	144, 132, 258, 11, 150, 37, 16, 83, 86, 479,
	480, 481, 63, 140, 621, 161, 19, 652, 447, 155,
	-425, 739, -347, -347, 312, 353, 35, 101, -451, -452,
	-453, 621, 446, 267, -329, -217, -109, 729, 245, -110,
	735, 41, 252, 146, 38, -159, 428, -147, 193, 757,
	740, 741, 742, 739, 425, 747, 745, 743, 312, 744,
	96, 153, 155, 156, 4, -172, 173, -227, -228, 172,
	166, 167, 168, 169, 170, 171, 178, 177, 157, 159,
	174, -278, 154, 179, 180, 181, 182, 183, 184, 185,
	187, 186, 188, 189, 175, 176, 192, 239, 240, -180,
	-180, -180, -180, -247, -253, -252, -457, -249, -425, -328,
	-335, -457, -457, -180, -312, -457, -177, -457, -457, -457,
	-457, -457, -256, -172, -457, -457, -461, -457, -461, -461,
	-461, -366, -457, -366, -366, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, -457, -457, -457, -457,
	237, -457, -457, -457, -457, -457, -366, -366, -366, -366,
	-366, -366, -457, -457, -457, -457, -457, -457, -457, -457,
	-457, -457, -457, -457, -457, -457, 98, 112, 108, 111,
	103, 114, 98, 98, 98, 98, -32, -33, -237, 63,
	-457, -346, -438, -439, -220, -217, -457, 329, -329, -329,
	298, 105, -266, -35, -32, -261, -267, -263, -32, -103,
	-145, -158, 69, 70, -157, -160, 27, 44, 74, 76,
	99, 72, 73, 71, 41, -458, 97, -458, -285, -458,
	-169, -323, -153, -162, 265, 273, 272, 150, -428, -170,
	153, 316, 96, -40, -288, 115, -240, -245, -243, 750,
	677, 707, 677, 707, 67, 49, 98, 98, 96, 96,
	25, -262, -264, -172, 18, -333, 4, -332, 28, -329,
	98, 237, 18, -218, 32, -217, -313, -313, 96, 100,
	344, -303, -305, 444, 446, 166, -334, -329, 98, 34,
	97, 96, -217, -355, -358, -360, -359, -361, -356, -357,
	373, 374, 193, 377, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 390, 402, 35, 288, 369, 370, 371,
	372, 391, 392, 393, 394, 396, 397, 398, 399, 354,
	375, 619, 355, 356, 357, 358, 359, 360, 362, 363,
	366, 364, 365, 367, 368, -330, -329, 95, 97, 96,
	-365, 95, -172, -30, 97, 96, -388, -388, -388, 296,
	23, -50, -47, -414, 22, -46, -47, 246, 135, 136,
	243, 95, -377, 95, -386, -330, -329, 95, 151, 270,
	150, -385, -382, -385, -386, -329, -249, -329, 151, 151,
	-329, -329, -299, -329, -299, -299, 41, -299, 41, -299,
	41, 105, -329, -299, 41, -299, 41, -299, 41, -299,
	41, -299, 41, 34, 87, 88, 89, 34, 91, 92,
	93, -249, -329, -329, -249, -377, -249, -217, -329, -306,
	105, 105, 105, -388, -388, 105, 98, 98, 98, -388,
	-388, 105, 98, -337, -335, 98, 98, -430, 281, 326,
	328, 105, 105, 105, 105, 34, 98, -431, 34, 764,
	763, 765, 766, 767, 98, 105, 34, 105, 34, 105,
	-329, 95, -217, -169, 241, 243, 246, 85, 98, 334,
	332, 333, 330, 335, 336, 337, 166, 50, 96, 267,
	264, -329, -319, 269, -319, -329, -336, -335, -327, -217,
	267, 410, 98, -172, -384, 18, 177, -340, -340, -317,
	-217, -384, -340, -317, -217, -317, -317, -317, -317, -340,
	-340, -340, -317, -335, -335, -217, -217, -217, -217, -217,
	-217, -217, -347, -318, -317, 739, 98, -311, 18, 85,
	-347, -347, -326, 26, 26, 96, 350, 447, 448, -345,
	347, -105, -329, 98, -11, -30, -19, -18, -20, 166,
	-11, 96, 621, -210, -217, 739, 739, 739, 739, 739,
	739, -172, -172, -172, -172, 645, -235, -449, 157, 132,
	133, 130, 131, -189, 42, 43, 41, -172, -236, -242,
	-247, 115, 177, 159, 174, -278, -177, -180, -177, -177,
	-177, -177, -177, -177, 236, -177, 236, -177, -177, -177,
	-177, -177, -177, -348, -329, 98, 193, -185, -184, 114,
	-447, -185, 618, 96, -252, 237, -172, -172, -425, -143,
	484, 485, 486, 487, 489, 490, 491, 494, 495, 499,
	500, 483, 501, 488, 493, 496, 497, 498, 492, 372,
	-172, -238, -237, -238, -172, -172, -254, -255, 161, -249,
	-172, -458, -458, 105, 184, -151, 27, 44, -151, -151,
	-151, -151, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -151, -172, -144, 483, 501, 488, 493, 496,
	497, 498, 492, 372, 502, 503, 504, 505, 506, 507,
	508, 509, 510, -144, -143, -172, -172, -172, -172, -172,
	-172, -172, -172, -111, -172, 142, 143, 144, -237, -172,
	-177, -172, -172, -172, -458, -172, -172, -172, -238, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -424, -423, -422, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -237, -237, -237, -237, -237, -172, -458, -172, -191,
	-175, 105, -293, 114, -172, -172, -172, -172, -172, -172,
	-238, -331, -336, -327, -328, -237, -238, -238, -237, -237,
	-172, -172, -172, -172, -172, -172, -172, -172, -458, -172,
	-172, -172, -172, -172, -285, -458, -237, 96, -440, 446,
	447, 737, -338, 301, -337, 28, -238, 98, 18, -296,
	86, -329, -266, -266, 69, 70, 65, -155, -156, -160,
	-458, 305, -164, 318, 264, -161, -169, -329, 265, 265,
	265, -320, 269, 511, 166, -39, 28, 96, -457, 670,
	670, 68, 98, -367, -306, 400, 401, 193, -294, -172,
	-172, 96, -265, 30, 31, -217, -332, 184, -336, -217,
	-298, 301, -217, -195, -197, -198, -199, -220, -248, -457,
	-200, -32, 641, 638, 18, -210, -211, -219, -335, -304,
	-349, -303, 96, 445, 447, 448, 85, 134, -172, -368,
	192, -396, -395, -394, -377, -379, -380, -381, 97, -368,
	-373, 407, 406, -365, -365, -365, -365, -365, -367, -367,
	-367, -367, 95, -365, 95, -365, -365, -365, -365, -370,
	95, -370, -370, -371, -370, 95, -371, -372, 95, -372,
	-407, -172, -404, -403, -401, -402, 274, 110, 713, 669,
	621, 662, 703, 86, -399, -265, 105, -458, -106, 621,
	-329, 100, 98, 100, 98, 100, 98, -136, -75, -1,
	776, 777, 778, 96, 23, -378, -377, -74, 326, -410,
	-411, 301, -406, -400, -386, 151, -385, -386, -386, -329,
	96, 32, 139, 139, 139, 139, 621, 243, 35, -321,
	661, 157, 713, 669, -377, -74, 267, 267, -348, -348,
	-348, 98, 98, -316, 772, -210, -164, 307, 307, 264,
	320, 264, 320, -217, 331, 334, 332, 333, 330, 335,
	336, 337, 338, 41, 41, 41, 41, 41, 41, 41,
	319, 321, 323, 309, -217, -217, -319, 85, -212, -217,
	29, -335, 98, 98, -217, -317, -317, -217, -317, -317,
	-217, 98, -335, -453, 351, -329, 387, 730, 732, -147,
	446, 96, 621, 26, -148, 26, -457, -449, 132, 133,
	-247, -247, -247, -236, -177, -180, -177, 156, 289, -177,
	-177, -457, -249, -458, -331, 28, 96, 86, -458, 182,
	96, -458, -458, 96, 18, 96, -257, -255, 163, -172,
	-458, 96, -458, -458, -237, -172, -172, -172, -172, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -237,
	-458, 96, 96, 18, -352, 28, -458, -458, -458, -458,
	96, -458, -458, -256, -458, 18, -458, 86, 96, 177,
	96, -458, -458, -458, 96, 96, -458, -458, 96, -458,
	96, -458, -458, -458, -458, -458, -458, 96, -458, 96,
	-458, -458, -458, 96, -458, 96, -458, -458, 96, -458,
	96, -458, 96, -458, 96, -458, 96, -458, 96, -458,
	96, -458, 96, -458, 96, -458, 96, -458, 96, -458,
	96, -458, 96, -458, 96, -458, 96, -458, 96, -458,
	96, -458, 96, -458, -458, -458, 96, -458, 96, -458,
	96, -458, -458, 96, -458, 96, -458, 96, -458, 96,
	96, -458, 96, 96, 96, -458, 96, 96, 96, 96,
	-458, -458, -458, -458, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, -458, -458, -458, -458, -458, -458,
	96, -118, 646, -458, -458, 96, -458, 96, 96, 96,
	96, 96, -458, -457, 237, -458, -458, -458, -458, -458,
	96, 96, 96, 96, 96, 96, -458, -458, -458, 96,
	96, -458, 96, -458, 96, -458, -439, 736, 447, -224,
	-223, -221, 83, 268, 84, -457, -337, -458, -185, -293,
	-295, -293, -230, -329, 105, 114, -268, -194, 96, -196,
	18, -320, 266, 325, -320, -169, -164, -405, -402, -329,
	-329, -329, -335, 157, -171, 478, -166, 98, 100, -247,
	-245, -458, -367, -273, -279, -314, -329, 98, 193, -369,
	193, -369, 400, 401, -264, 237, -225, 19, -229, 35,
	63, -30, -457, -457, 35, 96, -213, -215, -214, -216,
	75, 79, 81, 76, 77, 78, 82, -343, 28, -32,
	-195, -32, -457, -217, -210, -459, 18, 86, -459, 96,
	237, -305, -308, 449, 446, 452, -425, 98, -135, 96,
	-394, -381, -269, -165, 46, -374, 408, -367, 629, -367,
	-376, 98, -376, 105, 105, 105, 97, -53, -48, -49,
	36, 90, -401, -388, 98, 45, -388, -388, -329, 97,
	-265, -107, 315, 736, -2, 775, 781, 151, 95, 413,
	22, -287, 96, 97, -250, 327, 97, -137, -329, 97,
	95, -386, -386, -329, -457, 264, 34, 34, 713, 669,
	661, -74, -250, -249, -329, -368, 774, 773, 97, 266,
	-217, -217, -217, -217, -217, -217, 246, 243, 436, -448,
	339, 98, -448, 310, 267, -210, -217, 96, -108, 283,
	278, -340, -340, 36, -217, 446, 748, 746, -172, 156,
	289, -189, -180, -143, -143, -177, -350, 193, 373, 288,
	371, 367, 387, 378, 406, 369, 407, 364, 363, 362,
	-350, -348, -177, -237, -172, -172, -172, 165, -172, 162,
	-172, -119, -118, -458, -458, -458, -458, -458, -119, -119,
	-119, -119, -119, -119, -119, -119, -119, -119, -261, -172,
	-172, -172, -458, 193, 373, -119, -172, 18, -172, -348,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -422, -172, -237, -172, -237,
	-172, -172, -172, -172, -172, -423, -423, -423, -423, -423,
	-237, -237, -237, -237, -172, -457, -329, -122, -121, -120,
	696, 268, -118, -191, -122, -191, 236, -172, 236, 236,
	236, -172, -238, -331, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -221, -382, 307, -382, 307, -382,
	-299, 96, -310, 26, 18, 63, 63, -194, -225, -156,
	-195, -335, -217, -163, 316, 324, -217, -164, 266, 85,
	-405, -405, -405, 29, 95, -167, 101, -276, 729, -282,
	52, -280, -281, 53, -277, 54, 62, -369, -369, 184,
	-266, -172, -300, 85, -301, -309, -249, -241, -244, -242,
	-457, -286, -458, -329, -299, -301, -197, -198, -198, -197,
	-198, 75, 75, 75, 80, 75, 80, 75, -214, -335,
	-458, -172, -338, 86, -195, -195, -219, -335, 184, 446,
	450, 451, -394, -446, 130, 157, 34, 85, 404, 110,
	-444, 192, 658, 708, 713, 669, 662, 703, -445, 270,
	150, 151, 282, 28, 47, 97, 96, 97, 96, 97,
	97, 96, -322, -321, -49, -48, -388, -388, 105, -425,
	98, 98, 275, -138, 779, 105, 95, -3, 90, -172,
	95, 23, -377, -249, -412, -362, -413, -363, -364, -5,
	-6, -389, -141, 63, 110, -78, 50, 265, 759, 760,
	139, -457, 772, -404, -287, -408, -410, -217, -176, -457,
	-188, -174, -173, -175, -181, 182, 183, 288, 369, 370,
	-250, -217, -427, 86, 307, 404, 307, 404, 98, -450,
	340, 98, -450, -217, -108, -53, -217, -317, -317, 36,
	-425, -458, -189, -180, -150, 177, 621, -353, 628, -365,
	-365, -365, -372, -365, 359, -365, 359, -365, -458, -458,
	-458, 96, -458, 26, -458, 96, -172, 96, -119, -119,
	-119, -119, -119, -146, 517, 96, 96, -458, 95, 95,
	-458, -172, -458, -458, -458, 96, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, 96,
	-458, 96, -458, 96, -458, 96, -458, 96, -458, 96,
	-458, 96, -458, 96, -458, 96, -458, 96, -458, 96,
	-458, 96, -458, 96, -458, 96, -458, 96, -458, 96,
	-458, -458, 96, -458, -458, -458, 96, -458, 96, -458,
	96, -458, -458, -458, 96, -351, 714, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -117, -330,
	-118, 678, 678, -458, -118, -258, 96, -177, -458, -177,
	-177, -177, -458, -458, -458, 96, -458, 96, 96, -458,
	96, -458, 96, -458, -458, -458, -458, 96, -222, 26,
	-457, -222, -457, -222, -458, -293, -217, -225, -259, 20,
	-457, 266, -217, -217, 85, 85, 85, 97, -273, 57,
	379, -284, -283, 61, 53, -281, 23, 55, 23, 33,
	-300, 96, 166, -342, 96, 28, -458, -458, 96, 63,
	237, -458, -225, -208, -207, 85, 86, -209, 85, -207,
	75, 75, -288, 96, -298, -195, -225, -225, 237, 130,
	-457, -176, 16, 98, 98, -425, -443, 763, 764, 34,
	765, 105, -388, -388, 151, 151, -217, 95, -367, 98,
	-367, 105, 105, 34, 91, 92, 93, 34, 87, 88,
	89, 317, -409, 95, 23, -172, 95, 166, 97, -287,
	-287, 303, 177, -388, 757, 309, 309, -388, -388, -388,
	-140, -139, 779, 97, -458, 96, -375, 621, 624, -172,
	-182, -182, -288, -421, 621, -426, -329, -329, -329, -329,
	105, 107, -458, 619, 82, 622, -458, -367, -172, -172,
	-172, -172, -266, 98, -172, -172, 105, 105, -119, -458,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-237, -172, -458, -205, -204, -206, 740, 130, 34, -350,
	-458, -239, 301, -125, -124, -123, 18, -458, -172, -143,
	-143, -143, -143, -172, -172, -172, -172, -172, -172, -457,
	75, 22, 20, -290, -329, 270, -457, -290, -457, -338,
	-259, -260, 21, 23, -418, -417, -415, -416, 177, 720,
	719, -217, -217, -217, -217, -274, 59, -272, 58, -272,
	-283, 23, 23, 98, 23, 98, 151, -309, -172, -244,
	-337, 63, -30, -329, -241, -329, -261, -172, 95, -172,
	-185, -225, -225, -172, -232, 541, 543, 544, 545, 542,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	546, 557, 518, 519, 520, 117, 119, 118, 127, 128,
	521, 522, 523, 373, 569, 570, 564, 567, 568, 566,
	565, 388, 389, 524, 587, 588, 592, 591, 589, 590,
	593, 596, 597, 598, 599, 600, 601, 603, 602, 594,
	595, 572, 571, 573, 574, 575, 576, 577, 578, 580,
	579, 581, 582, 583, 584, 585, 586, 604, 605, 606,
	607, 608, 610, 609, 614, 613, 611, 612, 616, 615,
	525, 526, 120, 121, 122, 123, 124, 125, 126, 527,
	530, 528, 531, 532, 533, 538, 539, 534, 535, 536,
	537, 540, 399, 397, 398, 394, 393, 392, 465, 470,
	471, 473, 558, 559, 560, 561, 562, 563, 721, 722,
	723, 724, 725, 726, 727, 728, 98, 98, 95, -172,
	97, 97, -408, -75, 97, -289, -287, 105, 97, 304,
	-242, -457, 98, -388, -388, -388, 105, 105, -337, -458,
	96, -329, -445, -410, 625, 625, -458, 28, -420, -419,
	-331, 95, 86, 68, 620, 623, -458, -458, -458, 96,
	-458, -458, -458, 97, 97, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, 96, -458, -204,
	-206, -458, 85, -185, -261, 23, -122, 326, 328, -122,
	-458, -458, -458, -458, -458, 96, -458, -458, 96, -458,
	96, -458, -458, -290, -458, 23, 23, 96, -458, -290,
	-458, -290, -224, -260, -132, -131, -130, 652, -172, -237,
	-458, 96, -329, -275, 60, 85, 134, 98, 98, 98,
	16, -457, -241, 237, -342, -266, -287, -202, 413, -261,
	-458, -287, 97, 97, 781, 151, 97, -242, -149, -457,
	300, -337, 98, 98, -139, -142, -30, 96, 166, -287,
	-217, 68, -172, -237, -458, 85, 633, 740, -116, -115,
	-112, 751, 777, -237, -118, -118, -172, -172, -172, -458,
	-329, 270, -458, -458, -132, 96, -129, -128, -329, -354,
	621, -79, -80, -81, -7, 342, 269, 253, 284, -415,
	-355, 85, 134, -301, -287, -342, -329, 97, -458, -457,
	-266, 97, -270, 95, -3, 300, -362, -413, -363, -364,
	-5, -6, -389, -106, -419, -393, -335, -331, 98, 105,
	97, 621, -458, -458, -114, 159, 749, 711, -181, 236,
	-458, 96, -458, 96, -458, 96, -130, 96, 28, 626,
	782, -82, -83, -81, -80, -172, -287, -57, -329, 256,
	257, 258, -63, -61, -62, 260, -329, -458, -338, -203,
	-201, -329, 675, -436, -435, 617, -446, -442, 130, 157,
	110, -444, 708, 713, 669, 140, 141, -172, 95, -458,
	237, -427, 622, -114, 750, 689, 664, 689, 664, -177,
	-172, -172, -172, -128, -457, 165, -81, 162, -355, 255,
	262, -64, -65, 35, -168, 66, -458, 96, 26, -355,
	-77, 686, -433, -434, 85, -437, 419, 685, 706, 130,
	98, 105, 97, -287, -336, -421, 623, 156, -143, -458,
	96, -458, 96, -458, -117, -83, -271, 34, 26, 26,
	-66, -67, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, -66, 98, -201, 682, -368, -185,
	-434, 85, -433, 85, 17, 16, -4, 780, 97, -114,
	689, 664, -172, -172, -458, -87, -86, -85, 164, -457,
	-176, -58, -59, -60, -62, 261, 157, 259, 105, -61,
	-60, 166, -76, 29, -202, -432, 283, 278, 281, 35,
	-432, 105, -4, -458, -458, -84, 163, -85, -172, -172,
	-80, 96, 254, -181, 686, 277, 34, 130, 165, -83,
	162, -458, -59, -185, 269, -83, -205, -204, -204,
}

var yyDef = [...]int{
	958, -2, -2, 960, 2, 4, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 130, 132, 133, 958, 958, 958, 0, 958,
	0, 191, 0, 1019, -2, -2, 958, 1735, 0, 958,
	0, 953, 0, -2, 873, 879, 0, 888, -2, 0,
	0, 958, 958, 2406, 2406, 953, 0, 0, 0, 0,
	0, 958, 958, 958, 958, 1740, 1571, 110, 958, 0,
	148, 149, 958, 908, 909, 910, 125, 0, 2404, 145,
	958, 959, 1, 3, 131, 135, 0, 0, 0, 118,
	1580, 0, 138, 0, 0, 962, 0, 0, 1718, 958,
	958, 0, 189, 190, 0, 0, 0, 0, 0, 194,
	-2, 226, 227, 228, 0, 233, 678, 595, 647, 593,
	632, -2, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 598, 470, 470, 0, 0,
	-2, 581, 581, 581, 1720, 0, 0, 0, 629, 532,
	470, 470, 470, 0, 470, 470, 470, 470, 0, 0,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 1598, 232, 1736,
	1733, 1734, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945,
	1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975,
	1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
	1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995,
	1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005,
	2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025,
	2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035,
	2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045,
	2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055,
	2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065,
	2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075,
	2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 0, 1712,
	0, 791, 1062, 0, 954, 955, 0, 862, 862, 0,
	862, 862, 862, 862, 0, 0, 0, 805, 0, 0,
	0, 0, 859, 0, 821, 822, 0, 859, 0, 828,
	865, 0, 0, 835, 862, 862, 838, 2407, 0, 2407,
	2407, 0, 0, 1703, 0, 856, 854, 868, 869, 102,
	872, 875, 876, 877, 878, 881, 0, 892, 895, 1729,
	1730, 0, 897, 902, 921, 922, 0, 105, 1222, 0,
	1086, 0, 1097, -2, 1108, 1125, 1126, 1127, 1128, 1129,
	1131, 1132, 1133, 0, 0, 0, 0, 1138, 1139, 0,
	0, 0, 0, 0, 1202, 0, 0, 0, 0, 2122,
	1542, 0, 0, 1504, 1504, 1238, 1504, 1504, 1506, 1506,
	1506, 1967, 2113, 2123, 2307, 1922, 1928, 1929, 1930, 2252,
	2253, 2254, 2255, 2350, 2351, 2355, 2033, 1917, 2322, 2323,
	0, 2403, 2073, 2081, 2082, 2058, 2067, 2106, 2213, 2334,
	1941, 2101, 2175, 2030, 2053, 2054, 2194, 2195, 2077, 2078,
	2057, 2258, 2260, 2276, 2277, 2262, 2264, 2273, 2279, 2284,
	2263, 2275, 2280, 2293, 2297, 2300, 2301, 2302, 2270, 2268,
	2281, 2285, 2287, 2289, 2295, 2298, 2271, 2269, 2282, 2286,
	2288, 2290, 2296, 2299, 2257, 2261, 2265, 2274, 2292, 2272,
	2291, 2266, 2278, 2283, 2294, 2267, 2259, 2071, 2074, 2061,
	2062, 2064, 2066, 2072, 2079, 2085, 2063, 2084, 2083, 0,
	2059, 2060, 2065, 2076, 2080, 2068, 2069, 2070, 2075, 2086,
	2129, 2128, 2127, 2174, 2097, 2173, 0, 0, 0, 0,
	0, 1911, 1974, 1975, 2304, 1426, 1427, 1428, 1429, 0,
	0, 0, 0, 0, 0, 0, 359, 360, 1555, 1556,
	104, 1221, 1699, 1506, 1506, 1506, 1506, 1506, 1506, 1160,
	1161, 1162, 1163, 1164, 1190, 1191, 1197, 1198, 2189, 2190,
	2191, 2192, 2012, 2345, 2021, 2022, 2170, 2171, 2035, 2036,
	2377, 2378, -2, -2, -2, 301, 302, 303, 304, 305,
	306, 307, 308, 0, 1973, 2320, 2321, 297, 0, 1697,
	1698, 364, 361, 362, 363, 1204, 1205, 317, 318, 319,
	320, 321, 322, 323, 324, 325, 326, 327, 328, 329,
	330, 331, 332, 333, 334, 335, 336, 337, 338, 339,
	340, 341, 342, 343, 344, 345, 346, 347, 348, 349,
	350, 351, 352, 353, 354, 355, 356, 357, 358, 0,
	366, 367, 2406, 0, 931, 0, 0, 0, 0, 0,
	0, 1741, 1742, 1580, 0, 1572, 1571, 123, 0, 958,
	-2, 0, 0, 0, 0, -2, 107, 0, 112, 1019,
	0, 961, 137, 136, 1631, 1634, 0, 0, 0, 1641,
	1643, 1644, 1645, 101, 119, 1581, 127, 129, 1582, 0,
	963, 964, 0, 995, 999, 0, 0, 0, 1719, 1718,
	1718, 165, 0, 0, 166, 186, 187, 188, 0, 0,
	172, 173, 1705, 1706, 103, 0, 0, 244, 245, 0,
	1178, 497, 0, 240, 0, 490, 429, 0, 0, 0,
	1023, 229, 230, 231, 470, 470, 470, 644, 0, 0,
	232, 232, 602, 603, 604, 0, 0, -2, 495, 0,
	582, 0, 0, 484, 484, 488, 486, 487, 0, 0,
	0, 0, 0, 0, 0, 0, 621, 0, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 0,
	471, 0, 642, 643, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 1721, 1722, 0, 619, 620, 0, 0,
	0, 470, 470, 0, 0, 0, 0, 470, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 1621, 0,
	0, 221, 222, 1599, 0, -2, 0, 783, 0, 0,
	0, 1714, 1714, 0, 1713, 790, 0, 0, 0, 795,
	0, 0, 796, 0, 859, 859, 857, 858, 798, 799,
	800, 801, 862, 0, 0, 479, 480, 481, 859, 862,
	0, 862, 862, 862, 862, 859, 859, 859, 862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2407, 865,
	862, 0, 829, 0, 830, 831, 832, 833, 836, 837,
	839, 2408, 2409, 1731, 1732, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	2407, 2407, 843, 847, 851, 849, 1704, 874, 880, 882,
	883, 0, 0, 893, 896, 915, 109, 2020, 901, 109,
	903, 904, 905, 906, 907, 933, 934, 939, 0, 0,
	0, 0, 945, 946, 947, 0, 0, 950, 951, 952,
	0, 0, 0, 0, 0, 1084, 0, 0, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1109, 1110, 0, 0, 0, 1134,
	1135, 1136, 1137, 1140, 0, 1151, 0, 1153, 1551, -2,
	0, 0, 0, 1145, 1146, 0, 0, 0, 1724, 1724,
	0, 0, 0, 1543, 0, 0, 1236, 0, 1237, 1239,
	1240, 1241, 0, 1242, 1243, 968, 968, 968, 968, 968,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 1724, 1724, 0, 0, 289, 290, 291, 292,
	293, 294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 309, 310, 311,
	312, 313, 368, 314, 315, 316, 1221, 0, 0, 958,
	0, 106, 923, 924, 0, 1045, 1724, 0, 0, 974,
	0, 1739, 117, 126, 128, 1580, 121, 1580, 0, 978,
	0, 0, -2, -2, 979, 980, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 114, 2405, 115, 0, 134,
	1603, 0, 1598, 1621, 0, 0, 0, 0, 1716, 1622,
	0, 0, 0, 108, 0, 139, 140, 1687, 1691, 0,
	1632, 0, 1635, 0, 0, 0, 443, 1639, 0, 0,
	0, 1573, 1574, 1577, 0, 996, 2119, 1000, 0, 1002,
	1003, 0, 0, 163, 0, 1061, 0, 0, 0, 174,
	0, 176, 177, 0, 0, 0, 454, 1707, 1708, 1709,
	-2, 477, 0, 454, 438, 376, 377, 378, 429, 380,
	429, 429, 429, 429, 443, 443, 443, 443, 411, 412,
	413, 414, 415, 0, 429, 0, 397, 429, 429, 429,
	429, 419, 420, 421, 422, 423, 424, 425, 426, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 431, 431,
	431, 431, 431, 435, 435, 0, 1179, 0, 458, 0,
	1577, 0, 0, 1607, 1020, 0, 0, 0, 0, 645,
	689, 596, 633, 646, 0, 599, 600, -2, 0, 0,
	581, 0, 583, 0, 478, 0, -2, 0, 488, 0,
	484, 488, 485, 488, 476, 489, 623, 624, 625, 0,
	627, 628, 719, 1031, 0, 0, 0, 0, 0, 725,
	726, 727, 0, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 634, 635, 636, 637, 638, 639, 640,
	641, 0, 0, 0, 0, 583, 0, 630, 0, 0,
	534, 535, 536, 0, 0, 539, 540, 541, 542, 0,
	0, 545, 546, 547, 1048, 1049, 548, 549, 574, 575,
	576, 550, 551, 552, 553, 554, 555, 556, 568, 569,
	570, 571, 572, 573, 557, 558, 559, 560, 561, 562,
	565, 0, 214, 1603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 0, 0, 0, 0, 977, 1063, 1737, 1738, 792,
	0, 0, 863, 864, 0, 482, 483, 862, 862, 802,
	844, 0, 862, 806, 845, 807, 809, 808, 810, 823,
	824, 862, 813, 860, 861, 814, 815, 816, 817, 818,
	819, 820, 840, 825, 826, 827, 866, 0, 870, 871,
	841, 842, 0, 852, 0, 0, 0, 886, 887, 0,
	894, 918, 916, 917, 919, 911, 912, 913, 914, 0,
	920, 0, 0, 936, 159, 941, 942, 943, 944, 956,
	949, 1223, 1081, 1082, 1083, 0, 1085, 1091, 0, 1206,
	1208, 1089, 1090, 1093, 0, 0, 0, 1087, 1098, 1218,
	1219, 1220, 0, 0, 0, 0, 0, 1102, 1106, 1111,
	1112, 1113, 1114, 1115, 0, 1116, 0, 1119, 1120, 1121,
	1122, 1123, 1124, 1130, 1519, 1520, 1521, 1149, 369, 370,
	0, 1150, 0, 0, 0, 0, 0, 0, 0, 0,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1222, 0, 1725, 0, 0, 0, 1549, 1546, 0, 0,
	0, 1505, 1507, 0, 0, 0, 969, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 1155, 1156, 1157, 0, 0,
	0, 0, 0, 0, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1430, 1431, 1432, 1433, 0, 0, 0, 0, 0, 0,
	0, 1553, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1455, 0,
	0, 0, 0, 0, 0, 1695, 0, 0, 926, 927,
	929, 0, 1065, 0, 1046, 0, 0, 932, 0, 973,
	0, 976, 120, 122, 982, 983, 0, 1004, 993, 981,
	116, 1716, 0, 0, 1716, 1621, 1603, 1726, 0, 0,
	0, 0, 0, 195, 0, 111, 0, 0, 0, 1633,
	1636, 1637, 443, 1664, 0, 452, 452, 449, 1642, 1583,
	1584, 0, 1576, 1578, 1579, 141, 1001, 997, 0, 1079,
	0, 0, 1060, 0, 1007, 1009, 1010, 1011, 1043, 0,
	1014, 1015, 0, 0, 0, 0, 0, 161, 1062, 167,
	0, 175, 0, 0, 180, 181, 168, 169, 170, 171,
	0, 678, -2, 529, 246, 248, 249, 250, 241, -2,
	441, 439, 440, 379, 443, 443, 405, 406, 407, 408,
	409, 410, 0, 417, 0, 398, 399, 400, 401, 390,
	0, 391, 392, 393, 433, 0, 394, 395, 0, 396,
	496, 0, 1585, 459, 460, 462, 470, 0, 465, 466,
	0, 470, 470, 0, 491, 492, 0, 1577, 193, 1609,
	1024, 234, 235, 236, 237, 238, 239, 714, 0, 0,
	690, 712, 713, 232, 0, 0, 242, 585, 584, 0,
	746, 0, 494, 0, 0, 488, 488, 473, 474, 626,
	0, 0, 721, 722, 723, 724, 0, 0, 0, 612,
	523, 0, 613, 614, 583, 585, 0, 0, 454, 537,
	538, 543, 544, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 662, 664, 667, 669, 587,
	673, 675, 0, 663, 666, 668, 670, 587, 674, 676,
	1600, 1601, 1602, 0, 0, 784, 0, 0, 520, 157,
	1715, 789, 793, 794, 859, 812, 846, 859, 804, 811,
	834, 848, 850, 884, 885, 890, 898, 899, 900, 940,
	0, 0, 0, 0, 948, 0, 0, 1092, 1207, 1209,
	1094, 1095, 1096, 1099, 0, 1103, 1107, 0, 0, 0,
	0, 0, 1154, 1152, 1553, 0, 0, 0, 1203, 0,
	0, 1226, 1227, 0, 0, 0, 0, 1547, 0, 0,
	1234, 0, 1508, 1184, 0, 0, 0, 0, 0, 1184,
	1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184, 1571,
	1261, 0, 0, 0, 0, 0, 1266, 1267, 1268, 1184,
	0, 1271, 1272, 0, 1274, 0, 1275, 0, 0, 0,
	0, 1282, 1283, 1285, 0, 0, 1288, 1289, 0, 1291,
	0, 1293, 1294, 1295, 1296, 1297, 1298, 0, 1300, 0,
	1302, 1303, 1304, 0, 1306, 0, 1308, 1309, 0, 1311,
	0, 1313, 0, 1316, 0, 1319, 0, 1322, 0, 1325,
	0, 1328, 0, 1331, 0, 1334, 0, 1337, 0, 1340,
	0, 1343, 0, 1346, 0, 1349, 0, 1352, 0, 1355,
	0, 1358, 0, 1361, 1362, 1363, 0, 1365, 0, 1367,
	0, 1370, 1371, 0, 1373, 0, 1376, 0, 1379, 0,
	0, 1380, 0, 0, 0, 1384, 0, 0, 0, 0,
	1393, 1394, 1395, 1396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 1408, 1409, 1410, 1411, 1412,
	0, 1414, 0, 1185, 0, 0, 1185, 0, 0, 0,
	0, 0, 1224, 1724, 0, 1509, 1510, 1511, 1512, 1513,
	0, 0, 0, 0, 0, 0, 1453, 1454, 1456, 0,
	0, 1459, 0, 1461, 0, 1696, 925, 928, 930, 1017,
	1066, 1067, 0, 0, 0, 0, 1047, 1723, 971, 972,
	975, 1025, 0, 1557, 0, 0, 1004, 1079, 0, 1005,
	0, 0, 0, 0, 0, 1603, 0, 0, 1727, 1726,
	1726, 1726, 219, 0, 1623, 1624, 1629, 1627, 1628, 113,
	1688, 1692, 1646, 1640, 1658, 1671, 452, 452, 446, 447,
	453, 448, 450, 451, 1575, 0, 1580, 0, 1685, 0,
	958, 1674, 0, 0, 0, 0, 0, 0, 0, 0,
	1050, 0, 0, 1053, 0, 0, 0, 0, 1044, 1015,
	0, 1016, 0, -2, 0, 0, 155, 156, 0, 0,
	0, 178, 179, 0, 0, 185, 455, 456, 223, 232,
	531, 247, 504, 0, 0, 375, 442, 402, 403, 404,
	0, 427, 0, 0, 0, 0, 525, 192, 1589, 1588,
	470, 470, 461, 0, 464, 0, 0, 0, 1728, 430,
	493, 0, 1610, 1611, 684, 0, 0, 691, 0, 0,
	0, 594, 0, 605, 606, 0, 718, -2, 780, 458,
	0, 472, 475, 1032, 0, 0, 607, 0, 610, 611,
	524, 585, 616, 617, 631, 618, 566, 567, 564, 0,
	196, 652, 654, 658, 653, 657, 0, 0, 0, 589,
	0, 677, 589, 650, 0, 520, 1585, 0, 788, 521,
	522, 862, 862, 935, 160, 0, 938, 0, 0, 0,
	0, 1100, 1104, 1117, 1118, 1514, 1540, 429, 429, 1527,
	429, 435, 1530, 429, 1532, 429, 1535, 429, 1538, 1539,
	0, 0, 1147, 0, 0, 0, 0, 1233, 1550, 0,
	0, 1244, 1183, 1184, 1184, 1184, 1184, 1184, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1544, 0,
	0, 0, 1265, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 0, 0, 0,
	0, 0, 0, 1464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 1182, 0, 1186, 1187,
	0, 0, 1416, 0, 0, 1434, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1068, 1075, 0, 1075, 0, 1075,
	0, 0, 0, 1710, 1711, 1558, 1559, 1079, 1560, 994,
	1006, 0, 211, 1604, 1605, 1606, 210, 0, 0, 0,
	0, 0, 0, 1717, 0, 1626, 1630, 1664, 0, 1657,
	0, -2, 1666, 0, 0, 0, 1672, 444, 445, 998,
	142, 1080, 146, 0, 1685, 1700, 0, 1682, 1689, 1693,
	0, 0, 0, 1678, 0, 1079, 1008, 1039, 1041, 0,
	1036, 1051, 1052, 1054, 0, 1056, 0, 1058, 1059, 1019,
	1013, 0, 163, 0, 1079, 1079, 162, 0, 1064, 182,
	183, 184, 530, 251, 256, 0, 0, 0, 261, 0,
	263, 0, 0, 0, 268, 269, 470, 470, 505, 0,
	372, 374, 0, 0, 254, 443, 0, 443, 0, 434,
	436, 0, 506, 526, 1586, 1587, 0, 0, 463, 467,
	468, 469, 0, 687, 0, 715, 0, 0, 0, 0,
	0, 0, 243, 586, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 0, 470, 0, 0, 0, 470, 470,
	470, 0, 772, 457, 0, 0, 743, 740, 608, 0,
	287, 288, 295, 296, 298, 0, 0, 0, 0, 0,
	615, 1019, 199, 0, 0, 0, 0, 660, 665, 671,
	0, 588, 672, 785, 786, 787, 158, 797, 803, 937,
	957, 1088, 1101, 1105, 0, 0, 0, 0, 1541, 1525,
	443, 1528, 1529, 1531, 1533, 1534, 1536, 1537, 1143, 1144,
	1148, 0, 1230, 0, 1232, 0, 1548, 0, 1245, 1246,
	1247, 1248, 1249, 1580, 0, 0, 0, 1264, 0, 0,
	1184, 0, 1277, 1276, 1278, 0, 1280, 1281, 1286, 1287,
	1290, 1292, 1299, 1301, 1305, 1307, 1310, 1312, 1314, 0,
	1317, 0, 1320, 0, 1323, 0, 1326, 0, 1329, 0,
	1332, 0, 1335, 0, 1338, 0, 1341, 0, 1344, 0,
	1347, 0, 1350, 0, 1353, 0, 1356, 0, 1359, 0,
	1364, 1366, 0, 1369, 1372, 1374, 0, 1377, 0, 1381,
	0, 1383, 1385, 1386, 0, 0, 0, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1413, 0, 1176,
	1415, 1188, 1189, 1194, 1418, 0, 0, 0, 1421, 0,
	0, 0, 1425, 1225, 1436, 0, 1441, 0, 0, 1447,
	0, 1451, 0, 1457, 1458, 1460, 1462, 0, 0, 0,
	0, 0, 0, 0, 1045, 1026, 124, 1560, 1564, 0,
	-2, 0, 213, 215, 0, 0, 0, 1625, 1651, 1649,
	1649, 1659, 1660, 0, 0, 1667, 0, 0, 0, 0,
	147, 0, 0, 1673, 0, 0, 1694, 0, 0, 0,
	0, 164, 1571, 1033, 1040, 0, 0, 1034, 0, 1035,
	1055, 1057, 1012, 0, 1079, 1079, 153, 154, 0, 257,
	0, 259, 0, 262, 264, 265, 266, 272, 273, 274,
	275, 267, 0, 0, 371, 373, 0, 0, 416, 428,
	418, 0, 0, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1608, 679, 0, 689, 0, 1021, 0, 682, 0,
	597, 0, 0, 0, 470, 470, 470, 0, 0, 0,
	0, 757, 0, 0, 720, 0, 728, 0, 0, 0,
	299, 300, 0, 651, 0, 197, 198, 0, 0, 656,
	590, 591, 1141, 0, 0, 0, 1142, 1526, 0, 0,
	0, 0, 0, 1545, 0, 0, 0, 0, 1270, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1389, 0, 0, 0, 709, 710, 0, 1465,
	1181, 1571, 0, 1185, 1195, 1196, 0, 1185, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1076, 0, 0, 0, 1027, 1028, 0, 0, 0, 1065,
	1564, 1569, 0, 0, 0, 1613, 1614, 0, 1618, 1619,
	1620, 212, 216, 217, 218, 1654, 0, 1647, 1650, 1648,
	1661, 0, 0, 1668, 0, 1670, 0, 1701, 1702, 1690,
	1683, 958, 1677, 1680, 1682, 1679, 1580, 1037, 0, 1042,
	0, 1571, 152, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 271, 0, 0,
	432, 437, 0, 0, 680, 0, 1022, 692, 683, 0,
	770, 0, 774, 0, 0, 0, 777, 778, 779, 756,
	0, 760, 498, 744, 741, 742, 609, 0, 200, 201,
	0, 0, 0, 1515, 0, 1518, 1228, 1231, 1229, 0,
	1260, 1262, 1263, 1523, 1524, 1279, 1315, 1318, 1321, 1324,
	1327, 1330, 1333, 1336, 1339, 1342, 1345, 1348, 1351, 1354,
	1357, 1360, 1368, 1375, 1378, 1382, 1387, 0, 1390, 0,
	0, 1391, 0, 711, 1172, 0, 0, 1192, 1193, 0,
	1420, 1422, 1423, 1424, 1437, 0, 1442, 1443, 0, 1448,
	0, 1452, 1463, 0, 1070, 1077, 1078, 0, 1073, 0,
	1074, 0, 1018, 1569, 144, 1570, 1567, 0, 1565, 1562,
	109, 1617, 0, 1638, 0, 1652, 1653, 1662, 1663, 1669,
	0, 0, 1682, 0, 1676, 150, 0, 0, 0, 1580,
	258, 0, 278, 688, 0, 691, 681, 768, 769, 0,
	781, 773, 775, 776, 758, -2, 1607, 0, 0, 0,
	659, 1516, 0, 0, 1392, 0, 707, 708, 1180, 1173,
	0, 1158, 1159, 1177, 1417, 1419, 0, 0, 0, 1069,
	1029, 1030, 1071, 1072, 143, 0, 1566, 1200, 0, 1561,
	0, 209, 88, 89, 42, -2, 0, 0, 0, 1615,
	1616, 1655, 1656, 1686, 0, 1675, 1681, 1038, 1045, 0,
	151, 511, 504, 0, 0, 0, 761, 762, 763, 764,
	765, 766, 767, 648, 202, 203, 0, 578, 579, 580,
	196, 0, 1235, 1388, 1174, 0, 0, 0, 0, 0,
	1438, 0, 1444, 0, 1449, 0, 1568, 0, 0, 1563,
	87, 0, -2, 92, 0, 0, 0, 0, 1023, 66,
	67, 68, 49, 73, 74, 82, 76, 1684, 693, 0,
	695, 0, -2, 499, 512, 0, 252, 279, 280, 0,
	0, 283, 0, 285, 286, 276, 277, 0, 0, 782,
	0, 199, 0, 0, 1165, 1166, 1167, 1168, 1170, 0,
	0, 0, 0, 1201, 1178, 43, 93, 109, 84, 0,
	0, 48, 50, 0, 0, 83, 694, 0, 0, 454,
	0, 704, 500, 501, 0, 507, 508, 509, 510, 281,
	282, 284, 716, 0, 577, 655, 1517, 0, 0, 1439,
	0, 1445, 0, 1450, 0, -2, 45, 0, 0, 0,
	51, 0, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 52, 75, 696, 697, 705, 0,
	502, 0, 503, 0, 0, 0, 685, 0, 716, 1175,
	1169, 1171, 0, 0, 1199, 94, 97, 99, 0, 0,
	86, 109, 70, 77, 78, 79, 0, 81, 71, 72,
	47, 0, 0, 706, 702, 513, 515, 516, 0, 0,
	514, 717, 686, 1440, 1446, 0, 109, 98, 0, 0,
	46, 0, 80, 53, 0, 517, 518, 519, 0, -2,
	109, 85, 69, 698, 44, -2, 699, 700, 701,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 187, 179, 3,
	95, 97, 184, 182, 96, 183, 237, 185, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 782,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 189, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 190,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 180,
	181, 186, 188, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 58083, 758, 58084, 759,
	58085, 760, 58086, 761, 58087, 762, 58088, 763, 58089, 764,
	58090, 765, 58091, 766, 58092, 767, 58093, 768, 58094, 769,
	58095, 770, 58096, 771, 58097, 772, 58098, 773, 58099, 774,
	58100, 775, 58101, 776, 58102, 777, 58103, 778, 58104, 779,
	58105, 780, 58106, 781, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:680
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:684
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:688
		{
			setParseTree(yylex, nil)
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:735
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:739
		{
			yyLOCAL = &BeginEndStatement{Statements: yyDollar[2].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:743
		{
			yyLOCAL = &IfStatement{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion(), ElseIfBlocks: yyDollar[5].elseIfsUnion(), ElseStatements: yyDollar[6].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:747
		{
			yyDollar[3].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			yyLOCAL = &DeclareVar{VarNames: yyDollar[2].columnsUnion(), Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:752
		{
			yyLOCAL = &DeclareHandler{Action: yyDollar[2].handlerActionUnion(), Conditions: yyDollar[5].handlerConditionsUnion(), Statement: yyDollar[6].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:756
		{
			yyLOCAL = &DeclareCondition{Name: yyDollar[2].identifierCI, Condition: yyDollar[5].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:760
		{
			yyLOCAL = &Signal{Condition: yyDollar[2].handlerConditionUnion(), SetValues: yyDollar[3].signalSetsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*SignalSet
//line sql.y:765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yySLICE := (*[]*SignalSet)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].signalSetUnion())
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*SignalSet
//line sql.y:776
		{
			yyLOCAL = []*SignalSet{yyDollar[2].signalSetUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SignalSet
//line sql.y:782
		{
			yyLOCAL = &SignalSet{ConditionName: yyDollar[1].signalConditionNameUnion(), Value: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:788
		{
			yyLOCAL = ClassOriginType
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:792
		{
			yyLOCAL = SubclassOriginType
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:796
		{
			yyLOCAL = MessageTextType
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:800
		{
			yyLOCAL = MySQLErrNoType
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:804
		{
			yyLOCAL = ConstraintCatalogType
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:808
		{
			yyLOCAL = ConstraintSchemaType
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:812
		{
			yyLOCAL = ConstraintNameType
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:816
		{
			yyLOCAL = CatalogNameType
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:820
		{
			yyLOCAL = SchemaNameType
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:824
		{
			yyLOCAL = TableNameType
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:828
		{
			yyLOCAL = ColumnNameType
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SignalConditionName
//line sql.y:832
		{
			yyLOCAL = CursorNameType
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:838
		{
			yyLOCAL = ContinueAction
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:842
		{
			yyLOCAL = ExitAction
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerAction
//line sql.y:846
		{
			yyLOCAL = UndoAction
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yySLICE := (*[]HandlerCondition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].handlerConditionUnion())
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []HandlerCondition
//line sql.y:856
		{
			yyLOCAL = []HandlerCondition{yyDollar[1].handlerConditionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:862
		{
			yyLOCAL = &HandlerConditionErrorCode{ErrorCode: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:866
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:876
		{
			yyLOCAL = &HandlerConditionSQLState{SQLStateValue: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:882
		{
			yyLOCAL = &HandlerConditionNamed{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:888
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:892
		{
			yyLOCAL = yyDollar[1].handlerConditionUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:896
		{
			yyLOCAL = &HandlerConditionSQLWarning{}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:900
		{
			yyLOCAL = &HandlerConditionNotFound{}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL HandlerCondition
//line sql.y:904
		{
			yyLOCAL = &HandlerConditionSQLException{}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:909
		{
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:917
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:921
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[2].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:927
		{
			yyLOCAL = yyDollar[1].compoundStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:940
		{
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:946
		{
			yyLOCAL = CompoundStatements{yyDollar[1].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:950
		{
			yySLICE := (*CompoundStatements)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].compoundStatementUnion())
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:959
		{
			yyLOCAL = yyDollar[2].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:968
		{
			yyLOCAL = yyDollar[1].elseIfsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:974
		{
			yySLICE := (*[]*ElseIfBlock)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].elseIfUnion())
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:978
		{
			yyLOCAL = []*ElseIfBlock{yyDollar[1].elseIfUnion()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ElseIfBlock
//line sql.y:984
		{
			yyLOCAL = &ElseIfBlock{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:990
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1002
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1006
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1018
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:1024
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:1028
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:1033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:1037
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1043
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:1047
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:1053
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1059
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1063
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1067
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1090
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1096
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1101
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1107
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1114
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1120
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 124:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1131
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1137
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1141
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1145
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1149
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1153
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1159
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1163
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1168
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1172
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1178
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1182
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1187
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1193
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1199
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1206
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1210
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1216
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1222
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1230
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1234
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1238
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1244
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1256
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1268
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1272
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1278
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1284
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1288
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1292
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1296
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1302
		{
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1306
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1316
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1326
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1339
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1345
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1351
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1355
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1361
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1365
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1369
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1373
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1379
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), NoScope)
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1383
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1387
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1393
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1397
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1403
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1413
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1417
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1421
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1427
		{
			yyVAL.str = RepeatableReadStr
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1431
		{
			yyVAL.str = ReadCommittedStr
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = SerializableStr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1445
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1449
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1453
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1459
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1465
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1472
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1476
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1485
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1492
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1505
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1509
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1520
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1525
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1531
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1551
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1557
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1561
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1567
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 209:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1573
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Statement: yyDollar[10].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1579
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1595
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1599
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1603
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1610
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1617
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1622
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1627
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1632
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1639
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1646
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1657
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1668
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1674
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1678
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1682
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1686
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1690
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1694
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1700
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1704
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1710
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1714
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1720
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1724
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1730
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1734
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1740
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1744
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1750
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1754
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1760
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1765
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1770
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1774
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1779
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1787
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1798
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1807
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = ""
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1829
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1833
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1838
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1843
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1848
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1854
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1859
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1864
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1869
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1874
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1878
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1883
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1887
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1892
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1897
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1902
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1906
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1912
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1916
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1920
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1924
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1930
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1934
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1939
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1943
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1948
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1953
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1958
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1963
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1968
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1973
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1978
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1985
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1992
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1996
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2000
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2004
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2008
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2012
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2022
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2029
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2033
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2039
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2043
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2047
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2051
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2055
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2059
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2063
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2067
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2071
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2075
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2079
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2083
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2087
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2092
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2096
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2100
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = Armscii8Str
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = ASCIIStr
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = Big5Str
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = UBinaryStr
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = Cp1250Str
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = Cp1251Str
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = Cp1256Str
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = Cp1257Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = Cp850Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = Cp852Str
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.str = Cp866Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = Cp932Str
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = Dec8Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = EucjpmsStr
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = EuckrStr
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = Gb18030Str
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = Gb2312Str
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.str = GbkStr
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = Geostd8Str
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = GreekStr
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = HebrewStr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = Hp8Str
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.str = Keybcs2Str
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = Koi8rStr
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = Koi8uStr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = Latin1Str
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = Latin2Str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = Latin5Str
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = Latin7Str
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = MacceStr
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = MacromanStr
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = SjisStr
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = Swe7Str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = Tis620Str
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = Ucs2Str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = UjisStr
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = Utf16Str
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = Utf16leStr
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = Utf32Str
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = Utf8mb3Str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = Utf8mb4Str
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = Utf8mb3Str
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2280
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2284
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2288
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2294
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2298
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2304
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2308
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2312
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2318
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2322
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2328
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2332
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2336
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2340
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2357
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2362
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2450
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2539
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2545
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2549
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2565
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2584
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2593
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2598
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2602
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2615
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2622
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2632
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2640
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2653
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2657
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2662
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2666
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2674
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2678
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2683
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2693
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2698
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2704
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2713
		{
			yyVAL.str = ""
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2727
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2732
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2736
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2742
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2752
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2756
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2761
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2765
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2769
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2773
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2777
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2781
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2787
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2797
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2801
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2805
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2809
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2813
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2818
		{
			yyVAL.str = ""
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2822
		{
			yyVAL.str = yyDollar[2].str
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.str = yyDollar[1].str
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2880
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2890
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2894
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2900
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2904
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2910
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2914
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2920
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2926
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2930
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2934
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2938
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2942
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2951
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2957
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2963
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2969
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2973
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2977
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2982
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2986
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2992
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2998
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3004
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3008
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3012
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3016
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:3020
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3025
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3043
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3048
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3052
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3057
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3061
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3067
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3071
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3075
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:3081
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3085
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3091
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3095
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3099
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3103
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3107
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3111
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3115
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3119
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3123
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3127
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3131
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3135
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3139
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3143
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3147
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3151
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3155
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3159
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3163
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3167
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3171
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3175
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3179
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3183
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3187
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3191
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3195
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3199
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3203
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3207
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3211
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3216
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3220
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3247
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3251
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3255
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3260
		{
			yyVAL.str = ""
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3266
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3270
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3279
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3284
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3297
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3301
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3310
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3314
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3318
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3326
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3332
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3336
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3340
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3346
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3350
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3354
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3358
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3362
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3366
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3370
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3374
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3378
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3382
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3386
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3390
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3394
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3398
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3402
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3406
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3410
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3414
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3418
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3422
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3426
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3430
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3434
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3438
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3442
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3446
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3450
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3454
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3458
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3462
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3466
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3472
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3482
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3486
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3490
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3494
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3498
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3502
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3506
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3510
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3514
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3518
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3545
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3587
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3597
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3601
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3628
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3636
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3661
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3668
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3674
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3681
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3689
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3695
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3702
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3708
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3730
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3751
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3764
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3777
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3786
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3794
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3803
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3810
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3818
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3822
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3831
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3842
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3846
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3851
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3855
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3860
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3864
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3870
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3876
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3882
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3886
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3892
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3896
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3902
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3908
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3914
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3920
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3926
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3930
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3944
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3950
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3956
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3960
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3964
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3970
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3974
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3979
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3983
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3988
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3992
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3998
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4002
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4006
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4010
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4014
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4018
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4022
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4026
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4030
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4034
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4038
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4042
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4046
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4050
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4054
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4058
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4062
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4066
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4070
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4074
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4078
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:4082
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4087
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4091
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4095
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:4101
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4111
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4116
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4120
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4125
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4130
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4135
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4140
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4145
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4150
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4155
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:4160
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4166
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:4172
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4176
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4182
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4187
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4191
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4196
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4201
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4206
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4211
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4216
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4221
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4228
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4235
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4242
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4250
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4254
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4260
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4266
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4272
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4278
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4284
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4290
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4302
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4312
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4324
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4328
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 786:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4334
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4338
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4347
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4351
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4357
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4361
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4367
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4373
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4377
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4383
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4387
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4391
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4403
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4407
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4411
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4415
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4419
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4423
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4427
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4431
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4435
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4439
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4443
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4447
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4451
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4455
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4467
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4471
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4475
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4479
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4487
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4491
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4495
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4503
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4507
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4523
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4527
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4547
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4551
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4566
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4586
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4590
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4594
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4606
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4611
		{
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4617
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.str = "extended "
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4627
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4631
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4647
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4651
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4665
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4669
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4679
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4685
		{
			yyVAL.empty = struct{}{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4689
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.empty = struct{}{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4709
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4713
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4717
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4743
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4747
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4752
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4756
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4762
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4766
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4772
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4776
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4780
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4787
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4793
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4797
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4802
		{
			yyVAL.empty = struct{}{}
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4804
		{
			yyVAL.empty = struct{}{}
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4807
		{
			yyVAL.empty = struct{}{}
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.empty = struct{}{}
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4813
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4819
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4824
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4828
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4832
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4836
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4840
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4845
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4849
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4853
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4857
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4861
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4865
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = yyDollar[1].str
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = yyDollar[1].str
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = yyDollar[1].str
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4885
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4889
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4893
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4897
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4902
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4906
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4910
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4916
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4920
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4926
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4932
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4936
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4942
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4948
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4952
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4958
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4964
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4968
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4972
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4976
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4982
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4988
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4994
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4998
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5002
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5006
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5010
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5014
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5020
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5030
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5034
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5038
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5042
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5062
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5079
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5083
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5087
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5092
		{
			yyVAL.str = ""
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5096
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5101
		{
			setAllowComments(yylex, true)
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5105
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5111
		{
			yyVAL.strs = nil
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5115
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5121
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5125
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5129
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5134
		{
			yyVAL.str = ""
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5138
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5142
		{
			yyVAL.str = SQLCacheStr
		}
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5161
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5165
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5175
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5184
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5190
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5194
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5199
		{
			yyVAL.strs = nil
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5213
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5219
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5223
		{
			yyVAL.str = SQLCacheStr
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5227
		{
			yyVAL.str = DistinctStr
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.str = DistinctStr
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5235
		{
			yyVAL.str = HighPriorityStr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5239
		{
			yyVAL.str = StraightJoinHint
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5243
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5247
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.str = SQLBigResultStr
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5255
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5259
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5265
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5269
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5277
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5281
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5285
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5289
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5294
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5302
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5309
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5314
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5318
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5324
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5330
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5334
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5344
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5348
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5352
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5356
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5362
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5366
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5372
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5376
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5385
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5400
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5404
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5410
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5414
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5420
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5424
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5428
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5432
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5438
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5442
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5455
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5459
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5463
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5467
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5473
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5475
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5479
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5485
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5487
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5490
		{
			yyVAL.empty = struct{}{}
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5492
		{
			yyVAL.empty = struct{}{}
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5495
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5499
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5503
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5516
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5520
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5524
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5530
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5536
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5540
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5544
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5548
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5554
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5558
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5568
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5572
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5582
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5588
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5597
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5603
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5607
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5613
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5617
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5621
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5625
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5629
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5633
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5638
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5642
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5646
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5650
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5660
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5667
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5671
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5679
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5683
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5701
		{
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5704
		{
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5725
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5733
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5759
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5763
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5785
		{
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5788
		{
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5872
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5884
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5888
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5892
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5962
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5966
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5972
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5976
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5982
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5986
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5990
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5996
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:6000
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6007
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6011
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6015
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6019
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:6023
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6029
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6033
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6037
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6041
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6045
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6049
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:6053
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6062
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6068
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:6072
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6081
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6086
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6090
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:6096
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6102
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6106
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6112
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:6116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6121
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:6128
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6134
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:6138
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6144
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:6148
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6154
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:6158
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:6170
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6176
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6180
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6186
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6192
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6196
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6202
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6206
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6212
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6216
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6223
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6227
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6231
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6235
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6241
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6245
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6251
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6255
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6259
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6263
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6267
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6271
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6277
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6281
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6285
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6292
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6298
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6302
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6805
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6809
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6813
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6817
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6833
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6837
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6841
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6845
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6849
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6853
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6857
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6861
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6865
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6873
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6877
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6881
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6885
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6897
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6901
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6905
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6909
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6929
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6933
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6937
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6941
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6945
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6949
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6953
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6957
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6961
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6965
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6969
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6973
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6977
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6981
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6985
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6989
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6993
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6997
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7001
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7005
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7009
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7013
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7017
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7021
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7025
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7029
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7033
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7037
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7041
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7045
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7049
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7053
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7057
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7061
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7065
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7069
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7073
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7081
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7085
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7089
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7093
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7097
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7101
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7105
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7109
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7113
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7117
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7121
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7125
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7129
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7133
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7143
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7147
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7151
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7155
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7164
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7170
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7174
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7178
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7182
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7186
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7191
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7195
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7199
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7203
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7207
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7211
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7216
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7220
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7224
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7228
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7235
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7239
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7245
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7249
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7253
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7257
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7263
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7267
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7271
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7275
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7279
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7283
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7287
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7296
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7302
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7306
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7310
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7314
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7318
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7322
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7326
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7330
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7334
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7338
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7342
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7346
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7350
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7354
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7358
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7362
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7366
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7370
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7374
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7378
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7384
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7388
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7392
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7396
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7400
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7404
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7408
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7412
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7416
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7420
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7424
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7428
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7432
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7436
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7440
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7444
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7448
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7452
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7462
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7466
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7470
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7480
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7484
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7488
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7492
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7496
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7502
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7506
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7510
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7514
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7518
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7524
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7528
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7532
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7542
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7546
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7552
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7556
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7560
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7564
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7568
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7574
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7578
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7594
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7598
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7602
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7606
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7610
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7620
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7629
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7634
		{
			yyVAL.str = string("")
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7638
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7644
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7648
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7654
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7659
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7663
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7669
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7673
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7677
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7681
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7687
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7691
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7697
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7706
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7710
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7719
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7738
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7744
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7750
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7754
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7763
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7772
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7778
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7784
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7788
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7794
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7799
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7803
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7807
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7812
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7816
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7822
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7826
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7830
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7839
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7843
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7847
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7851
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7858
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7862
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7866
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7870
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7876
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7880
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7884
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7888
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7893
		{
			yyVAL.str = ""
		}
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7900
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7904
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7908
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7913
		{
			yyVAL.str = ""
		}
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7917
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7923
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7927
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7932
		{
			yyVAL.str = ""
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7936
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7941
		{
			yyVAL.str = "cascaded"
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7945
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7949
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7958
		{
			yyLOCAL = yyDollar[1].procParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7964
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7968
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:7974
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7979
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7983
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7987
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7991
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8003
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8009
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8015
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:8021
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8030
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8034
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8039
		{
			yyVAL.str = ""
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8043
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8049
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8053
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8057
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8061
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8065
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8069
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:8073
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8079
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8083
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8087
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:8091
		{
			yyLOCAL = &SelectInto{Type: IntoVariables, VarList: yyDollar[2].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8097
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:8101
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:8107
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:8111
		{
			yyLOCAL = &Variable{Name: createIdentifierCI(yyDollar[1].str), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8116
		{
			yyVAL.str = ""
		}
	case 1647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8120
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8124
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8129
		{
			yyVAL.str = ""
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8133
		{
			yyVAL.str = " header"
		}
	case 1651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8138
		{
			yyVAL.str = ""
		}
	case 1652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8142
		{
			yyVAL.str = " manifest on"
		}
	case 1653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8146
		{
			yyVAL.str = " manifest off"
		}
	case 1654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8151
		{
			yyVAL.str = ""
		}
	case 1655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8155
		{
			yyVAL.str = " overwrite on"
		}
	case 1656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8159
		{
			yyVAL.str = " overwrite off"
		}
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8165
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8170
		{
			yyVAL.str = ""
		}
	case 1659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8174
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8180
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8184
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8190
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8194
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8199
		{
			yyVAL.str = ""
		}
	case 1665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8203
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8209
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8213
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8219
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8223
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8227
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8232
		{
			yyVAL.str = ""
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8236
		{
			yyVAL.str = " optionally"
		}
	case 1673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8249
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8253
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8257
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8261
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8265
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8271
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8275
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8279
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8283
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8288
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8292
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8296
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8305
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8311
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8315
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8321
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8325
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8331
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8335
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8341
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8345
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8351
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8357
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8367
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8377
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8381
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8387
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8394
		{
			yyVAL.str = "charset"
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8404
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8408
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8412
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8423
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8426
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8428
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8431
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8441
		{
			yyVAL.empty = struct{}{}
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8443
		{
			yyVAL.empty = struct{}{}
		}
	case 1722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8445
		{
			yyVAL.empty = struct{}{}
		}
	case 1723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8449
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8458
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8463
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8465
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8469
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8475
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8479
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8486
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8492
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8496
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8502
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8506
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8513
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8519
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8525
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8529
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8533
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9223
		{
		}
	case 2405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9228
		{
		}
	case 2406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9232
		{
			skipToEnd(yylex)
		}
	case 2407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9237
		{
			skipToEnd(yylex)
		}
	case 2408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9241
		{
			skipToEnd(yylex)
		}
	case 2409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9245
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
