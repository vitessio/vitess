// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const WITHOUT = 57819
const VALIDATION = 57820
const UNUSED = 57821
const ARRAY = 57822
const BYTE = 57823
const CUME_DIST = 57824
const DESCRIPTION = 57825
const DENSE_RANK = 57826
const EMPTY = 57827
const EXCEPT = 57828
const FIRST_VALUE = 57829
const GROUPING = 57830
const GROUPS = 57831
const JSON_TABLE = 57832
const LAG = 57833
const LAST_VALUE = 57834
const LATERAL = 57835
const LEAD = 57836
const NTH_VALUE = 57837
const NTILE = 57838
const OF = 57839
const OVER = 57840
const PERCENT_RANK = 57841
const RANK = 57842
const RECURSIVE = 57843
const ROW_NUMBER = 57844
const SYSTEM = 57845
const WINDOW = 57846
const ACTIVE = 57847
const ADMIN = 57848
const AUTOEXTEND_SIZE = 57849
const BUCKETS = 57850
const CLONE = 57851
const COLUMN_FORMAT = 57852
const COMPONENT = 57853
const DEFINITION = 57854
const ENFORCED = 57855
const ENGINE_ATTRIBUTE = 57856
const EXCLUDE = 57857
const FOLLOWING = 57858
const GEOMCOLLECTION = 57859
const GET_MASTER_PUBLIC_KEY = 57860
const HISTOGRAM = 57861
const HISTORY = 57862
const INACTIVE = 57863
const INVISIBLE = 57864
const LOCKED = 57865
const MASTER_COMPRESSION_ALGORITHMS = 57866
const MASTER_PUBLIC_KEY_PATH = 57867
const MASTER_TLS_CIPHERSUITES = 57868
const MASTER_ZSTD_COMPRESSION_LEVEL = 57869
const NESTED = 57870
const NETWORK_NAMESPACE = 57871
const NOWAIT = 57872
const NULLS = 57873
const OJ = 57874
const OLD = 57875
const OPTIONAL = 57876
const ORDINALITY = 57877
const ORGANIZATION = 57878
const OTHERS = 57879
const PARTIAL = 57880
const PATH = 57881
const PERSIST = 57882
const PERSIST_ONLY = 57883
const PRECEDING = 57884
const PRIVILEGE_CHECKS_USER = 57885
const PROCESS = 57886
const RANDOM = 57887
const REFERENCE = 57888
const REQUIRE_ROW_FORMAT = 57889
const RESOURCE = 57890
const RESPECT = 57891
const RESTART = 57892
const RETAIN = 57893
const REUSE = 57894
const ROLE = 57895
const SECONDARY = 57896
const SECONDARY_ENGINE = 57897
const SECONDARY_ENGINE_ATTRIBUTE = 57898
const SECONDARY_LOAD = 57899
const SECONDARY_UNLOAD = 57900
const SIMPLE = 57901
const SKIP = 57902
const SRID = 57903
const THREAD_PRIORITY = 57904
const TIES = 57905
const UNBOUNDED = 57906
const VCPU = 57907
const VISIBLE = 57908
const RETURNING = 57909
const FORMAT = 57910
const TREE = 57911
const VITESS = 57912
const TRADITIONAL = 57913
const LOCAL = 57914
const LOW_PRIORITY = 57915
const NO_WRITE_TO_BINLOG = 57916
const LOGS = 57917
const ERROR = 57918
const GENERAL = 57919
const HOSTS = 57920
const OPTIMIZER_COSTS = 57921
const USER_RESOURCES = 57922
const SLOW = 57923
const CHANNEL = 57924
const RELAY = 57925
const EXPORT = 57926
const CURRENT = 57927
const ROW = 57928
const ROWS = 57929
const AVG_ROW_LENGTH = 57930
const CONNECTION = 57931
const CHECKSUM = 57932
const DELAY_KEY_WRITE = 57933
const ENCRYPTION = 57934
const ENGINE = 57935
const INSERT_METHOD = 57936
const MAX_ROWS = 57937
const MIN_ROWS = 57938
const PACK_KEYS = 57939
const PASSWORD = 57940
const FIXED = 57941
const DYNAMIC = 57942
const COMPRESSED = 57943
const REDUNDANT = 57944
const COMPACT = 57945
const ROW_FORMAT = 57946
const STATS_AUTO_RECALC = 57947
const STATS_PERSISTENT = 57948
const STATS_SAMPLE_PAGES = 57949
const STORAGE = 57950
const MEMORY = 57951
const DISK = 57952
const PARTITIONS = 57953
const LINEAR = 57954
const RANGE = 57955
const LIST = 57956
const SUBPARTITION = 57957
const SUBPARTITIONS = 57958
const HASH = 57959

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	635, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 739,
	235, 739,
	246, 739,
	281, 753,
	282, 753,
	-2, 741,
	-1, 60,
	237, 766,
	-2, 764,
	-1, 114,
	234, 1388,
	-2, 119,
	-1, 116,
	1, 146,
	635, 146,
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 752,
	218, 1409,
	-2, 1405,
	-1, 753,
	218, 1410,
	-2, 1406,
	-1, 829,
	59, 834,
	-2, 849,
	-1, 866,
	148, 1833,
	-2, 112,
	-1, 867,
	148, 1667,
	-2, 113,
	-1, 873,
	148, 1754,
	-2, 1382,
	-1, 1023,
	148, 1593,
	-2, 1379,
	-1, 1064,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1148,
	1, 554,
	635, 554,
	-2, 153,
	-1, 1412,
	59, 835,
	-2, 854,
	-1, 1413,
	59, 836,
	-2, 855,
	-1, 1466,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1545,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1554,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1887,
	218, 1414,
	-2, 1408,
	-1, 1977,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 1984,
	25, 174,
	-2, 176,
	-1, 2261,
	87, 39,
	-2, 891,
	-1, 2318,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2386,
	610, 666,
	-2, 640,
	-1, 2545,
	49, 1349,
	-2, 1343,
	-1, 2785,
	87, 39,
	-2, 892,
	-1, 2823,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 3155,
	610, 666,
	-2, 654,
	-1, 3245,
	22, 1756,
	32, 1756,
	174, 1756,
	257, 1756,
	315, 1756,
	316, 1756,
	317, 1756,
	318, 1756,
	319, 1756,
	320, 1756,
	321, 1756,
	323, 1756,
	324, 1756,
	325, 1756,
	326, 1756,
	327, 1756,
	328, 1756,
	329, 1756,
	330, 1756,
	331, 1756,
	332, 1756,
	333, 1756,
	334, 1756,
	336, 1756,
	338, 1756,
	339, 1756,
	340, 1756,
	341, 1756,
	342, 1756,
	343, 1756,
	344, 1756,
	345, 1756,
	346, 1756,
	349, 1756,
	350, 1756,
	351, 1756,
	352, 1756,
	353, 1756,
	354, 1756,
	355, 1756,
	356, 1756,
	357, 1756,
	489, 1756,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 46474

var yyAct = [...]int{
	752, 761, 3317, 3136, 2928, 755, 2489, 2929, 3329, 2927,
	652, 3223, 3286, 3243, 2762, 3287, 754, 2900, 1469, 1927,
	1974, 3188, 2694, 3211, 3120, 2600, 2607, 1907, 2203, 1211,
	2657, 3072, 2558, 2648, 2662, 2659, 2658, 731, 37, 2656,
	2887, 1909, 2661, 2660, 3118, 639, 732, 822, 1390, 2223,
	3, 186, 2561, 2955, 186, 2249, 600, 186, 3108, 2508,
	2615, 844, 615, 2677, 186, 2044, 635, 2559, 2676, 2562,
	2289, 2794, 186, 2960, 2488, 1427, 2788, 660, 2487, 729,
	2679, 2446, 2814, 632, 1947, 2546, 2312, 186, 2556, 1931,
	2276, 2007, 2715, 2780, 631, 2351, 2699, 2429, 633, 730,
	2383, 1523, 2012, 2352, 2032, 2353, 1963, 155, 2075, 615,
	2301, 1952, 615, 186, 615, 826, 627, 830, 1026, 871,
	845, 36, 1951, 38, 2282, 824, 2268, 1160, 1414, 2251,
	1072, 1096, 1773, 1874, 1848, 847, 1570, 1881, 868, 1763,
	2031, 2421, 1939, 2091, 141, 1721, 2014, 2345, 1059, 1054,
	1847, 2053, 1189, 1552, 1458, 1436, 2320, 1954, 95, 644,
	91, 1394, 1670, 96, 1296, 1781, 1232, 1740, 1559, 1666,
	1033, 1030, 2029, 1650, 1065, 1034, 2003, 1060, 1061, 1457,
	836, 1441, 1455, 1264, 1844, 1209, 1062, 1203, 1675, 1518,
	1544, 858, 834, 124, 125, 1144, 97, 622, 98, 85,
	76, 831, 1789, 832, 1899, 1303, 1299, 3145, 2376, 89,
	3318, 2046, 2047, 2048, 159, 2888, 119, 2645, 3173, 2046,
	1932, 117, 2374, 118, 2405, 2404, 2089, 833, 77, 2843,
	2880, 8, 7, 6, 87, 852, 3270, 857, 604, 126,
	87, 90, 1635, 87, 3174, 767, 768, 769, 1743, 2437,
	2438, 838, 3168, 1884, 1101, 3169, 1728, 2932, 1727, 1076,
	1027, 1233, 120, 623, 188, 189, 190, 1904, 1905, 1726,
	1233, 1725, 1724, 823, 1723, 1098, 571, 102, 825, 1052,
	2932, 2667, 1706, 3264, 625, 1111, 626, 1715, 1114, 1115,
	1116, 865, 1119, 1120, 1121, 1122, 839, 846, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1075, 2247, 2542, 104, 105,
	2751, 108, 182, 3290, 114, 2079, 2512, 183, 2278, 872,
	566, 120, 2667, 1050, 1102, 1105, 1106, 1421, 1049, 2665,
	1048, 1051, 2931, 3169, 3274, 2664, 121, 1043, 1038, 3272,
	818, 819, 820, 821, 3340, 2396, 829, 3285, 3308, 164,
	2767, 2671, 2766, 2077, 2399, 2931, 3121, 733, 1243, 2078,
	3273, 2224, 1733, 2716, 87, 3271, 3068, 1243, 3067, 2893,
	1117, 1100, 2894, 3337, 860, 861, 1099, 3221, 3321, 2133,
	2665, 767, 768, 769, 182, 3164, 78, 78, 3299, 120,
	2901, 3212, 2334, 604, 2072, 3220, 3163, 2445, 3248, 2734,
	1533, 3253, 2671, 1047, 78, 1153, 1154, 161, 121, 162,
	143, 2292, 2248, 3150, 2413, 3251, 2329, 78, 2412, 2328,
	80, 164, 2330, 1042, 3257, 3258, 1044, 2596, 3224, 181,
	2436, 605, 2617, 2618, 2130, 1935, 2293, 1156, 1968, 3252,
	2597, 2598, 1969, 1970, 2131, 1265, 1906, 1459, 1206, 1460,
	1184, 1185, 153, 2973, 1179, 816, 815, 1239, 142, 3137,
	1231, 1045, 2668, 1180, 87, 87, 1239, 3077, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1274, 1273, 1275, 1276, 161,
	1167, 162, 87, 2377, 1173, 1168, 2341, 1987, 1986, 2285,
	2286, 1167, 2477, 2791, 3291, 87, 1168, 130, 131, 152,
	151, 181, 1147, 733, 1166, 2696, 1165, 2724, 604, 2722,
	613, 1714, 617, 2668, 2603, 3292, 611, 1716, 1717, 1718,
	2700, 1143, 604, 1047, 2422, 1039, 1625, 3098, 1398, 3099,
	2384, 2054, 1041, 1040, 604, 2408, 2689, 2092, 3320, 2616,
	165, 2023, 1651, 1656, 2690, 1186, 1182, 1183, 1181, 171,
	2097, 2619, 1200, 1149, 1205, 1187, 186, 1188, 186, 2604,
	2109, 186, 2110, 1118, 2111, 2882, 2017, 2424, 2096, 1174,
	1626, 2881, 1627, 1196, 2112, 1198, 1935, 2698, 3265, 1046,
	1124, 1045, 1123, 2094, 3052, 2606, 3297, 2878, 1401, 2057,
	2697, 615, 1213, 615, 615, 1537, 605, 2936, 1085, 2601,
	147, 128, 154, 135, 127, 2098, 148, 149, 615, 615,
	2095, 1055, 165, 1195, 1197, 1056, 2617, 2618, 2447, 1933,
	1934, 171, 136, 2602, 1948, 2103, 2100, 2102, 2101, 2104,
	2105, 1083, 1056, 1094, 1093, 1092, 139, 137, 132, 133,
	134, 138, 1091, 1090, 2511, 1089, 2619, 37, 129, 1095,
	2478, 1088, 1087, 1082, 1047, 1142, 2608, 140, 1031, 3341,
	1225, 1279, 2131, 1068, 1031, 3333, 156, 1279, 1029, 1238,
	1235, 1236, 1237, 1242, 1244, 1241, 1031, 1240, 1238, 1235,
	1236, 1237, 1242, 1244, 1241, 1177, 1240, 1234, 1558, 1067,
	1163, 1667, 1169, 1170, 1171, 1172, 1234, 3144, 2375, 1046,
	2877, 2449, 2030, 1104, 859, 1053, 2425, 2083, 2016, 1067,
	1193, 605, 1663, 1103, 1194, 1207, 1208, 1219, 1107, 1146,
	2638, 3226, 2407, 2616, 1199, 605, 1113, 1531, 2428, 1282,
	1283, 1284, 1285, 1074, 1201, 2619, 1530, 605, 156, 1290,
	2410, 764, 3225, 2076, 1086, 1529, 2441, 764, 1192, 1657,
	764, 2394, 2145, 1658, 1659, 1664, 1527, 1214, 570, 2343,
	1933, 1934, 565, 2420, 2074, 2378, 2419, 2459, 2458, 2457,
	2451, 3133, 2455, 1975, 2450, 2830, 2448, 1084, 1215, 1216,
	2792, 2453, 1280, 1281, 2252, 2254, 2810, 2325, 2288, 2234,
	2452, 1388, 1898, 116, 1445, 1557, 1286, 1383, 1364, 3078,
	1158, 2283, 1279, 1655, 2841, 2842, 186, 2454, 2456, 2930,
	615, 615, 3162, 1276, 2595, 1145, 150, 1637, 1636, 1638,
	1639, 1640, 1370, 2431, 1190, 1676, 186, 841, 2430, 157,
	1046, 1204, 2930, 3158, 1073, 1074, 169, 77, 3256, 2669,
	2670, 1228, 1226, 1227, 2605, 615, 1074, 81, 2132, 186,
	1097, 1404, 2673, 2398, 615, 1408, 1301, 1074, 1302, 1305,
	615, 826, 2873, 1405, 2804, 111, 2093, 3226, 144, 86,
	86, 145, 1660, 1461, 1402, 1389, 1162, 1229, 177, 1782,
	2464, 3331, 3255, 868, 3332, 1176, 3330, 86, 3225, 2431,
	2669, 2670, 1164, 1790, 2430, 2367, 1178, 2397, 1247, 1248,
	86, 157, 3300, 2673, 1155, 1152, 1248, 1791, 169, 2969,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 1782, 2848, 2158, 1074, 2847, 176, 178, 179, 180,
	1371, 1372, 1373, 1374, 1375, 112, 1073, 1406, 1112, 1389,
	2061, 95, 1407, 1074, 2071, 2069, 96, 1073, 2253, 1652,
	177, 1653, 1077, 1067, 1654, 2020, 2073, 1079, 1073, 1567,
	1745, 1080, 1078, 1395, 1067, 1070, 1071, 1566, 1031, 1191,
	1677, 1556, 1064, 1068, 1746, 1277, 1278, 1744, 1148, 1085,
	1083, 98, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 1063, 3293, 2021, 2831, 1446, 176, 178,
	179, 180, 1392, 2019, 1271, 1272, 1274, 1273, 1275, 1276,
	2609, 1249, 823, 1403, 2613, 2066, 186, 1161, 1426, 1249,
	1519, 3190, 2612, 2066, 825, 1073, 1423, 3335, 1456, 1249,
	1528, 1067, 1070, 1071, 1788, 1031, 2907, 2022, 2908, 1064,
	1068, 3060, 1451, 1452, 1073, 1249, 3059, 2018, 3050, 1077,
	1067, 2920, 2070, 615, 1079, 1554, 2614, 3126, 1080, 1078,
	2068, 2610, 2919, 1563, 3191, 2855, 2611, 1565, 1940, 1941,
	1568, 1569, 615, 615, 872, 615, 3294, 615, 615, 1081,
	615, 615, 615, 615, 615, 615, 1269, 1270, 1271, 1272,
	1274, 1273, 1275, 1276, 1600, 1601, 1409, 615, 2854, 2844,
	3127, 186, 1606, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1251, 1564, 3304, 1421, 1645, 1735, 1737, 1738, 186, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1274, 1273, 1275, 1276,
	2646, 615, 2634, 186, 2137, 2138, 2139, 863, 1599, 1736,
	3342, 1602, 2349, 1246, 1665, 1247, 1248, 615, 2348, 186,
	1249, 1246, 2466, 1247, 1248, 1421, 767, 768, 769, 1620,
	1830, 1246, 1786, 1247, 1248, 186, 1787, 2026, 1643, 1646,
	1630, 1550, 186, 1534, 1535, 1536, 1629, 1246, 1644, 1247,
	1248, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	615, 1560, 1560, 1543, 1267, 1268, 1269, 1270, 1271, 1272,
	1274, 1273, 1275, 1276, 615, 615, 188, 189, 190, 1572,
	2838, 1573, 1632, 1575, 1577, 1603, 1562, 1581, 1583, 1585,
	1587, 1589, 186, 1526, 1628, 3343, 1618, 188, 189, 190,
	1561, 2332, 1642, 3302, 1421, 1612, 1609, 1249, 1540, 1610,
	1611, 1541, 1539, 1608, 1553, 1616, 1617, 1607, 1822, 1811,
	1812, 1813, 1814, 1824, 1815, 1816, 1817, 1829, 1825, 1818,
	1819, 1826, 1827, 1828, 1820, 1821, 1823, 1579, 1672, 3153,
	615, 3152, 1770, 1770, 2693, 3130, 1631, 1767, 1771, 3129,
	1249, 3128, 1246, 1776, 1247, 1248, 1249, 1768, 1768, 3055,
	3040, 1680, 188, 189, 190, 3039, 2042, 1741, 1684, 2968,
	1686, 1687, 1688, 1689, 2730, 2966, 2916, 1693, 1678, 1679,
	2852, 1532, 2837, 615, 615, 1668, 1430, 2701, 1604, 1705,
	3235, 1421, 1683, 188, 189, 190, 1218, 2040, 1249, 1690,
	1691, 1692, 1421, 2637, 1783, 1249, 1748, 1739, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1877, 1749, 120, 1682, 1050, 2184, 188, 189, 190,
	1049, 615, 1048, 3233, 1421, 2636, 1431, 2358, 2346, 1246,
	1421, 1247, 1248, 1845, 1385, 1703, 1265, 753, 1704, 1261,
	2087, 1262, 2086, 1930, 1885, 1912, 1707, 186, 1673, 1711,
	1712, 1641, 615, 1633, 1623, 1263, 1277, 1278, 1260, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1274, 1273, 1275, 1276,
	1742, 2204, 1246, 1619, 1247, 1248, 186, 3085, 1246, 615,
	1247, 1248, 1249, 188, 189, 190, 1615, 2038, 187, 186,
	1901, 187, 1614, 615, 187, 1747, 1845, 1613, 186, 616,
	186, 187, 186, 186, 615, 1432, 1249, 615, 1202, 187,
	1875, 2274, 3319, 3281, 1421, 2274, 3218, 1917, 615, 1918,
	1246, 3084, 1247, 1248, 187, 1885, 3044, 1246, 101, 1247,
	1248, 2274, 3198, 868, 1887, 3043, 868, 92, 2899, 100,
	1984, 99, 2590, 1249, 94, 2385, 616, 2290, 93, 616,
	187, 616, 2131, 2192, 1889, 1890, 101, 2363, 1249, 95,
	1792, 1793, 1794, 1795, 96, 3231, 1421, 100, 1249, 99,
	2274, 3194, 1983, 615, 1806, 3181, 1421, 1886, 94, 95,
	2033, 2034, 2035, 92, 96, 2037, 2039, 2041, 1950, 3107,
	1421, 1772, 2803, 1923, 93, 94, 1249, 1777, 1778, 2067,
	615, 2274, 3146, 1421, 2891, 3143, 615, 1563, 87, 1421,
	1563, 1249, 1563, 2290, 1246, 1887, 1247, 1248, 2065, 2298,
	1993, 1994, 1995, 1996, 1978, 1245, 1988, 1421, 1989, 1990,
	1991, 1992, 1911, 2805, 838, 3186, 1979, 1421, 1246, 2557,
	1247, 1248, 1421, 3157, 1999, 2000, 2001, 2002, 1961, 1421,
	2803, 3105, 1421, 615, 1421, 615, 1925, 2066, 1945, 2009,
	2274, 615, 615, 100, 1249, 2055, 1982, 2747, 1421, 1888,
	3063, 1421, 1891, 1892, 1943, 1246, 2015, 1247, 1248, 3102,
	1421, 2274, 3051, 2297, 1966, 2803, 1965, 2891, 1421, 2298,
	1246, 2771, 1247, 1248, 2825, 1981, 1980, 2274, 2889, 186,
	1246, 2747, 1247, 1248, 2066, 1421, 186, 2625, 1249, 2808,
	1421, 1245, 1421, 186, 186, 1922, 2025, 186, 2052, 186,
	1249, 2197, 1421, 2530, 872, 1967, 186, 872, 1246, 1076,
	1247, 1248, 1245, 186, 2649, 2627, 2626, 2150, 2298, 1560,
	2010, 2005, 2006, 1246, 2146, 1247, 1248, 2149, 2024, 2197,
	2028, 2623, 2624, 2623, 2622, 2036, 2355, 2298, 1421, 186,
	2060, 2181, 1249, 2063, 615, 2064, 1249, 2146, 1421, 2131,
	2406, 2080, 1522, 2388, 2180, 2010, 2059, 2062, 2058, 1249,
	2381, 2382, 2066, 1249, 1265, 1075, 2440, 2270, 1249, 2274,
	2273, 3088, 1421, 1249, 2082, 1265, 1246, 2144, 1247, 1248,
	2084, 2085, 94, 2779, 1421, 2081, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1274, 1273, 1275, 1276, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1274, 1273, 1275, 1276, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1274, 1273, 1275, 1276,
	1246, 1741, 1247, 1248, 2090, 2776, 1421, 1249, 2049, 2774,
	1421, 1938, 1246, 1425, 1247, 1248, 2122, 2123, 1249, 1902,
	2146, 2125, 2728, 1421, 1434, 1249, 2229, 1421, 2155, 2321,
	2126, 2212, 1421, 1719, 2321, 1522, 1521, 3295, 1662, 2141,
	1249, 2143, 1467, 1466, 2115, 1249, 1453, 2856, 2164, 1058,
	1249, 1057, 3261, 3201, 1246, 2142, 1247, 1248, 1246, 3074,
	1247, 1248, 1249, 1147, 1428, 2179, 188, 189, 190, 828,
	3041, 1246, 1876, 1247, 1248, 1246, 1878, 1247, 1248, 2980,
	1246, 2872, 1247, 1248, 1595, 1246, 1249, 1247, 1248, 2695,
	1433, 1249, 2322, 762, 2869, 2850, 2129, 2322, 2857, 2858,
	2859, 2154, 2324, 2739, 1249, 2738, 3314, 2131, 1524, 3141,
	1249, 2008, 2148, 186, 1742, 2691, 1249, 2651, 2647, 2389,
	1249, 186, 2140, 2004, 3048, 1770, 615, 3075, 1998, 2874,
	2258, 1249, 615, 2777, 1997, 1596, 1597, 1598, 2244, 1246,
	1768, 1247, 1248, 615, 1249, 2262, 2350, 87, 1648, 1249,
	1246, 1555, 1247, 1248, 1551, 1520, 2157, 1246, 113, 1247,
	1248, 2023, 2256, 187, 3312, 187, 1249, 186, 187, 2749,
	1915, 186, 1246, 1709, 1247, 1248, 2354, 1246, 3288, 1247,
	1248, 3167, 1246, 3093, 1247, 1248, 2331, 2745, 2821, 2815,
	2816, 2818, 1921, 2736, 1246, 37, 1247, 1248, 616, 2735,
	616, 616, 2643, 2243, 2314, 2642, 2641, 2557, 2294, 1249,
	2860, 2368, 2190, 2116, 2242, 616, 616, 2579, 1246, 1249,
	1247, 1248, 2580, 1246, 2355, 1247, 1248, 2241, 1887, 2820,
	2275, 2576, 2240, 2575, 615, 1710, 1246, 1249, 1247, 1248,
	186, 1249, 1246, 3267, 1247, 1248, 3219, 186, 1246, 2227,
	1247, 1248, 1246, 1929, 1247, 1248, 1249, 2861, 2862, 2863,
	1420, 615, 2271, 1246, 1429, 1247, 1248, 1249, 615, 2284,
	1395, 1886, 1563, 1563, 2246, 2809, 1246, 615, 1247, 1248,
	2380, 1246, 2577, 1247, 1248, 2535, 1591, 2578, 2313, 2342,
	2344, 2534, 2221, 2267, 2403, 2335, 2272, 3125, 1246, 2959,
	1247, 1248, 2220, 2796, 2287, 186, 186, 186, 186, 186,
	2961, 2795, 1249, 2402, 2799, 2581, 2319, 2307, 2308, 2544,
	2219, 2547, 2549, 842, 2218, 2621, 186, 186, 2015, 2323,
	2550, 843, 2326, 1592, 1593, 1594, 2333, 1661, 2336, 2217,
	814, 1246, 186, 1247, 1248, 2339, 2231, 2232, 2359, 1109,
	2216, 1246, 1108, 1247, 1248, 2950, 2347, 2949, 2357, 2709,
	1790, 615, 2354, 2360, 2361, 2434, 1419, 1415, 92, 1246,
	2356, 1247, 1248, 1246, 1791, 1247, 1248, 1217, 2395, 93,
	2364, 1416, 2365, 121, 2369, 2370, 2371, 92, 1246, 2801,
	1247, 1248, 2401, 94, 94, 2215, 1940, 1941, 93, 1246,
	3327, 1247, 1248, 2639, 1543, 2948, 1919, 1920, 1418, 2119,
	1417, 3240, 1249, 187, 1770, 3142, 1770, 616, 616, 1770,
	1249, 3070, 2620, 2311, 1770, 2390, 2391, 1926, 2533, 1768,
	2108, 1768, 2107, 187, 1768, 615, 2532, 2472, 1877, 1768,
	1877, 2460, 2400, 2106, 1246, 615, 1247, 1248, 2781, 2442,
	1249, 101, 616, 2135, 2443, 99, 187, 3113, 2490, 2423,
	2490, 616, 100, 2490, 99, 100, 615, 616, 2490, 2290,
	3112, 2426, 3096, 94, 2520, 850, 851, 2502, 2503, 2504,
	2505, 186, 2967, 101, 2432, 615, 2513, 2433, 2965, 2444,
	2964, 2957, 2495, 2492, 100, 2214, 99, 2496, 2515, 615,
	2461, 2870, 2800, 2213, 2798, 2652, 615, 615, 2050, 186,
	186, 186, 186, 186, 1538, 849, 2303, 2306, 2307, 2308,
	2304, 186, 2305, 2309, 1249, 2956, 186, 2789, 2520, 186,
	1249, 186, 2940, 2207, 186, 186, 186, 1875, 2270, 1875,
	2569, 2479, 2483, 830, 1246, 2182, 1247, 1248, 2560, 2537,
	2563, 101, 1246, 2560, 1247, 1248, 2589, 1419, 1415, 3316,
	3315, 2554, 100, 1408, 2314, 1913, 1447, 2538, 1438, 3315,
	2635, 2514, 1416, 2516, 2497, 2498, 2499, 2500, 2501, 186,
	1249, 2519, 1246, 3316, 1247, 1248, 3131, 1249, 103, 2836,
	2525, 840, 615, 2526, 2527, 2528, 88, 1412, 1413, 1418,
	615, 1417, 2529, 1, 2536, 186, 2840, 2206, 106, 107,
	2539, 3250, 1249, 2205, 2551, 2552, 583, 2591, 186, 2675,
	2592, 2571, 2572, 187, 2574, 1903, 1393, 831, 3289, 832,
	2582, 2570, 3246, 3247, 2573, 1634, 186, 1624, 2902, 186,
	2654, 2593, 1846, 2568, 3071, 95, 1249, 2586, 2587, 2710,
	96, 2655, 2599, 2056, 2868, 1672, 1246, 2013, 1247, 1248,
	616, 1066, 1246, 2202, 1247, 1248, 146, 2631, 2630, 2629,
	2201, 1976, 1249, 1977, 3214, 110, 1024, 109, 1069, 616,
	616, 1249, 616, 1175, 616, 616, 2683, 616, 616, 616,
	616, 616, 616, 2051, 2892, 2200, 2632, 2633, 2340, 1985,
	1473, 2674, 1471, 2015, 616, 1472, 2682, 1470, 187, 1475,
	2653, 2686, 1246, 1474, 1247, 1248, 2183, 615, 2750, 1246,
	1713, 1247, 1248, 612, 2744, 187, 2310, 184, 1462, 2198,
	2702, 1439, 2763, 2705, 2704, 1110, 573, 2628, 616, 2088,
	187, 615, 186, 579, 1246, 2712, 1247, 1248, 1291, 1708,
	2713, 2531, 2327, 2720, 616, 2194, 187, 869, 862, 2717,
	2718, 1914, 2719, 2726, 2193, 2721, 2260, 2723, 2765, 2725,
	2707, 2708, 187, 2565, 2793, 2769, 2543, 2545, 1246, 187,
	1247, 1248, 2277, 2548, 2541, 3124, 2958, 3199, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 616, 2337, 1435,
	2770, 186, 2156, 1780, 1246, 1955, 1247, 1248, 2935, 1734,
	637, 616, 616, 1246, 636, 1247, 1248, 2787, 634, 2839,
	2263, 2291, 1252, 756, 2250, 1448, 2302, 2300, 2299, 187,
	186, 2782, 2783, 2303, 2306, 2307, 2308, 2304, 2117, 2305,
	2309, 2797, 2790, 2815, 2816, 1962, 2817, 2813, 3242, 186,
	2812, 1957, 186, 186, 186, 1953, 2269, 2802, 645, 638,
	630, 721, 615, 615, 2833, 2681, 2819, 3227, 2409, 2822,
	2692, 2411, 2828, 2829, 2338, 2688, 1230, 616, 1411, 624,
	1037, 2875, 2876, 3076, 2826, 3148, 2134, 2827, 2733, 1410,
	1809, 2834, 1810, 2683, 2835, 3155, 2663, 2886, 2644, 2386,
	2896, 2897, 2043, 63, 41, 3119, 615, 615, 615, 615,
	3187, 720, 717, 2682, 2937, 2938, 2939, 2509, 2510, 3170,
	616, 616, 2851, 3171, 2853, 716, 3172, 1837, 619, 3263,
	1221, 856, 32, 31, 30, 29, 28, 23, 22, 21,
	20, 19, 25, 18, 17, 16, 2666, 3284, 3326, 115,
	50, 47, 45, 123, 122, 2845, 2846, 1770, 48, 1770,
	44, 1150, 42, 27, 26, 15, 14, 13, 616, 12,
	11, 10, 1768, 2898, 1768, 9, 5, 4, 35, 34,
	33, 1224, 24, 2, 2373, 2045, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 186, 0, 0, 0, 616,
	0, 2490, 0, 2490, 0, 2915, 0, 2879, 2909, 0,
	0, 2883, 2884, 2885, 0, 0, 0, 0, 2911, 615,
	0, 615, 2953, 187, 0, 0, 616, 0, 0, 0,
	0, 0, 2924, 0, 2923, 0, 187, 1770, 0, 0,
	616, 0, 2982, 2933, 0, 187, 0, 187, 0, 187,
	187, 616, 1768, 0, 616, 37, 0, 0, 0, 2560,
	0, 0, 2563, 0, 0, 616, 2563, 0, 2974, 0,
	2978, 0, 2976, 0, 2954, 2963, 2962, 0, 0, 0,
	0, 2970, 0, 615, 0, 2972, 0, 0, 0, 0,
	0, 0, 1422, 1424, 0, 0, 186, 0, 0, 615,
	0, 0, 3049, 0, 0, 0, 0, 2983, 2984, 0,
	0, 0, 615, 2986, 0, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3053, 0, 3061, 0, 0,
	0, 3073, 3090, 0, 1770, 3091, 3047, 616, 3046, 3094,
	3045, 0, 0, 616, 0, 0, 0, 0, 615, 1768,
	3065, 0, 615, 615, 0, 3066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 615, 0, 3095, 0, 0, 0, 0, 0, 0,
	616, 0, 616, 0, 0, 0, 0, 3097, 616, 616,
	3135, 3100, 0, 0, 0, 0, 3123, 0, 3117, 3116,
	3114, 3115, 3056, 3057, 3058, 0, 0, 0, 0, 0,
	2563, 0, 0, 0, 0, 0, 3132, 0, 0, 0,
	0, 3138, 0, 0, 0, 0, 187, 0, 0, 0,
	3134, 0, 615, 187, 0, 0, 0, 0, 0, 0,
	187, 187, 0, 0, 187, 0, 187, 186, 0, 0,
	0, 3140, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 615, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3159, 0, 187, 0, 3151, 3147,
	0, 616, 0, 0, 3154, 0, 0, 0, 37, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3156, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3175, 0, 3176, 0, 0,
	3177, 0, 0, 0, 0, 0, 0, 0, 615, 615,
	0, 0, 3185, 0, 3192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2560, 3228, 3202,
	37, 0, 615, 3229, 0, 0, 3205, 3073, 3215, 3213,
	3210, 3207, 3206, 3200, 3222, 3204, 186, 615, 3209, 3208,
	3197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3241, 3259, 3249, 3254, 0, 0, 0,
	3228, 0, 0, 0, 0, 3229, 3269, 0, 0, 0,
	615, 3266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3278, 615, 3283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	615, 3296, 615, 0, 3298, 0, 1770, 0, 0, 0,
	187, 3310, 0, 0, 3306, 3307, 0, 0, 187, 0,
	3313, 1768, 3311, 616, 3309, 0, 3228, 0, 0, 616,
	0, 3229, 3322, 0, 3328, 0, 0, 0, 0, 0,
	616, 0, 3336, 0, 0, 3334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 187, 0, 0, 3344, 187, 3346,
	3347, 1784, 0, 3091, 3345, 1785, 0, 1768, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 143, 1872,
	0, 616, 0, 0, 0, 0, 0, 187, 0, 164,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 0,
	1422, 1900, 0, 0, 0, 616, 0, 0, 0, 0,
	153, 0, 0, 0, 616, 0, 142, 0, 0, 0,
	0, 0, 848, 0, 0, 854, 0, 854, 0, 0,
	0, 0, 0, 0, 1924, 0, 0, 161, 0, 162,
	0, 0, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 1546, 1547, 152, 151, 181,
	0, 0, 0, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 121, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 142, 0, 0, 147, 1548,
	154, 0, 1545, 0, 148, 149, 0, 0, 0, 0,
	165, 0, 616, 0, 0, 0, 161, 0, 162, 171,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1546, 1547, 152, 151, 181, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 616, 616, 0, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 187, 0, 0, 187, 0, 187, 0,
	0, 187, 187, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 147, 1548, 154,
	0, 1545, 0, 148, 149, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 187, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	0, 0, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 150, 0, 187, 0, 0, 0,
	182, 0, 0, 2147, 0, 0, 0, 2151, 2152, 2153,
	0, 0, 0, 0, 2160, 0, 0, 2161, 2162, 2163,
	0, 0, 0, 0, 121, 0, 0, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 164, 0, 0,
	0, 188, 189, 190, 0, 0, 144, 0, 0, 145,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 2185, 2186, 2187, 2188, 2189, 0, 2191,
	0, 0, 0, 0, 616, 2195, 0, 2196, 0, 157,
	0, 2199, 0, 0, 604, 0, 169, 0, 0, 2208,
	2209, 2210, 2211, 0, 0, 161, 0, 162, 616, 187,
	0, 0, 2222, 0, 2225, 2226, 0, 0, 0, 0,
	0, 2228, 2230, 0, 0, 0, 0, 181, 0, 2235,
	2236, 2237, 2238, 2239, 0, 0, 601, 0, 177, 0,
	1924, 0, 2245, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 2257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 1250, 0, 587, 0, 176, 178, 179, 180,
	0, 0, 0, 0, 0, 144, 585, 187, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 187,
	187, 187, 0, 0, 0, 0, 0, 0, 157, 616,
	616, 0, 0, 0, 0, 169, 582, 0, 165, 0,
	0, 0, 0, 0, 0, 596, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 616, 616, 616, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 572,
	0, 574, 588, 0, 607, 0, 606, 578, 0, 576,
	580, 589, 581, 0, 575, 0, 586, 0, 0, 577,
	590, 591, 594, 597, 598, 599, 595, 593, 0, 584,
	608, 0, 187, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 616, 0, 616, 0,
	0, 0, 0, 0, 0, 2259, 0, 0, 765, 766,
	0, 0, 1437, 0, 1769, 2467, 2468, 2469, 2470, 2471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2491, 0, 0, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 616, 0, 0, 0,
	0, 0, 2517, 2518, 0, 0, 0, 0, 0, 616,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 0, 0, 0, 616, 0, 157, 0, 616,
	616, 0, 0, 0, 169, 0, 2566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 609, 0, 2584, 2585, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 1525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 616,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 616, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	0, 0, 2727, 2729, 2731, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 1674, 2737, 0, 0, 0,
	0, 2741, 2742, 2743, 0, 0, 0, 0, 2746, 0,
	0, 0, 0, 0, 2748, 616, 616, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 0, 0, 0,
	0, 0, 0, 0, 0, 2768, 0, 0, 0, 616,
	2772, 0, 2773, 2775, 0, 2778, 0, 0, 0, 0,
	2784, 0, 0, 187, 616, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 1730,
	1731, 1732, 0, 0, 0, 2806, 2807, 0, 0, 2811,
	0, 0, 0, 0, 0, 0, 0, 616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2823, 2824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 616,
	854, 1774, 1775, 0, 0, 0, 854, 854, 1779, 0,
	0, 0, 0, 0, 0, 0, 0, 616, 0, 616,
	0, 0, 0, 0, 1796, 1797, 1798, 1799, 1800, 1801,
	1802, 1803, 1804, 1805, 0, 0, 0, 0, 1831, 1832,
	1833, 1834, 1835, 1836, 1838, 1842, 1843, 0, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 0, 1873, 3282, 1879, 1880, 854, 2890, 854, 854,
	854, 854, 854, 1490, 0, 0, 0, 0, 0, 1894,
	1895, 1896, 1897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2910, 0, 0, 0,
	0, 0, 0, 0, 854, 0, 0, 2912, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2921, 0, 0, 0, 2922, 1936, 1937, 0, 0,
	0, 2926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 766, 2934, 0, 0, 0, 1769, 0, 0,
	0, 2941, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1478, 0, 0, 0, 0,
	0, 0, 0, 2011, 0, 0, 0, 870, 0, 0,
	1028, 0, 1035, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 0, 0, 3062, 0, 0,
	0, 0, 0, 0, 0, 0, 3069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1491, 0,
	0, 0, 0, 0, 3079, 3080, 3081, 0, 3082, 3083,
	0, 0, 0, 0, 3086, 0, 3087, 0, 3089, 3092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3101, 3103, 3104, 3106, 3109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1507, 1508, 1509,
	1510, 1511, 1512, 0, 1513, 1514, 1515, 1516, 1517, 1492,
	1493, 1494, 1495, 1476, 1477, 1505, 3139, 1479, 0, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 0, 0,
	1489, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 0,
	3004, 3006, 3005, 3015, 3016, 3017, 3018, 3019, 3020, 3021,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 763, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3166, 0, 0, 0, 2159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2165, 2166, 2167, 2168, 3182,
	0, 827, 0, 79, 0, 3183, 3184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 827, 0, 0, 0, 0, 0, 3195, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 1036, 0, 0,
	1297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3230,
	3232, 3234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 854, 854, 0, 0, 0,
	0, 0, 0, 0, 3262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3280, 0, 0, 0, 0, 0, 0,
	0, 1437, 3010, 3011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3301, 3303, 3305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3325, 0, 0,
	0, 0, 0, 734, 0, 661, 738, 663, 735, 736,
	0, 659, 662, 737, 3338, 3339, 0, 0, 0, 870,
	0, 870, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1220, 1222, 0, 680,
	681, 3003, 3007, 3008, 3009, 3012, 3013, 3014, 3022, 3024,
	705, 3023, 3025, 3026, 3027, 3030, 3031, 3032, 3033, 3028,
	3029, 3034, 2987, 2991, 2988, 2989, 2990, 3002, 2992, 2993,
	2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3035, 3036,
	3037, 3038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 0, 740, 0, 0, 744,
	0, 0, 0, 746, 745, 0, 747, 719, 718, 0,
	0, 741, 742, 0, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 854,
	0, 0, 0, 0, 0, 0, 0, 2462, 2463, 0,
	0, 2465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1386, 0, 0, 2473, 2474, 2475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2480, 2481, 2482, 0, 0,
	1849, 2484, 0, 2485, 2486, 0, 0, 0, 2493, 2494,
	0, 0, 0, 0, 0, 0, 1849, 1849, 1849, 1849,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 854, 0, 1399, 1400,
	0, 0, 0, 2521, 2522, 2523, 2524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1443, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 0, 0, 1463, 0,
	0, 0, 0, 2555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2588, 0, 0, 0, 1210, 0, 1210, 1210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 1287, 1288, 1289, 0, 1292, 0, 1293, 1294, 1295,
	2650, 1298, 1300, 1300, 0, 1300, 1304, 1304, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1478, 1363, 0, 1365, 1366,
	1367, 1368, 1369, 0, 0, 0, 0, 0, 1304, 1304,
	1304, 1304, 1304, 0, 0, 0, 0, 0, 0, 2732,
	0, 0, 1376, 1377, 1378, 1379, 0, 0, 0, 0,
	0, 1028, 2740, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 0, 1386, 0, 0, 0, 0, 0,
	1571, 1571, 0, 1571, 0, 1571, 1571, 0, 1580, 1571,
	1571, 1571, 1571, 1571, 0, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 1386, 1028, 0, 0, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1397, 0, 0, 0, 0, 0, 827, 0, 0,
	0, 827, 0, 0, 0, 0, 0, 827, 0, 1647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1504, 1507, 1508, 1509,
	1510, 1511, 1512, 0, 1513, 1514, 1515, 1516, 1517, 1492,
	1493, 1494, 1495, 1476, 1477, 1505, 0, 1479, 0, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 870, 0,
	1489, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 0,
	0, 0, 870, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1764, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2913, 0, 2914, 0, 0, 0, 0, 2917, 2918,
	0, 1807, 1808, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2925, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2942, 0, 0, 2943, 0, 2944,
	2945, 0, 2946, 870, 0, 0, 0, 0, 0, 1893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1396, 0, 0, 0, 0, 2971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2979, 0,
	1916, 2981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1928, 0, 0,
	0, 0, 0, 3042, 0, 0, 568, 0, 0, 0,
	0, 1443, 0, 0, 870, 0, 618, 0, 0, 0,
	0, 0, 870, 0, 817, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 39, 40, 80,
	0, 0, 0, 0, 0, 1032, 0, 0, 0, 0,
	0, 0, 0, 1210, 0, 0, 84, 0, 0, 0,
	43, 69, 70, 0, 67, 71, 0, 1210, 1210, 0,
	0, 1035, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3122,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 0,
	0, 0, 56, 0, 1035, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1028, 0, 1764, 0, 0, 0, 0, 0, 1764,
	1764, 185, 0, 0, 569, 0, 0, 610, 0, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 855, 0, 855, 0, 0, 0, 0,
	0, 3165, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3178, 0, 0, 3179, 0,
	3180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	46, 49, 52, 51, 54, 0, 66, 0, 0, 75,
	72, 0, 2128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 83, 82, 0, 0, 64, 65, 53,
	0, 0, 0, 0, 0, 73, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 1956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3260, 57, 58, 0, 59, 60,
	61, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3275, 0, 3276, 0, 3277, 0,
	0, 0, 0, 0, 0, 0, 1036, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3323, 0, 3324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1928, 0, 81, 0, 0, 0,
	2264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1151, 0,
	1157, 0, 0, 1159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 757, 765, 766, 767, 768, 769, 758,
	760, 0, 0, 0, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 762, 770, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1928,
	0, 0, 0, 0, 2684, 2685, 2387, 0, 0, 0,
	0, 0, 0, 0, 0, 2392, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 569, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1386, 0, 1386, 0, 0, 1386, 0, 0, 0,
	0, 1386, 2255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2507, 0, 0, 0, 0, 0, 0,
	827, 0, 0, 870, 0, 0, 87, 0, 0, 0,
	0, 1450, 757, 765, 766, 767, 768, 769, 758, 760,
	0, 2295, 2296, 759, 1571, 0, 0, 0, 0, 0,
	2315, 0, 2316, 2317, 0, 0, 762, 770, 771, 0,
	0, 0, 0, 2540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 1386, 0, 0, 2567, 1571, 1386, 0, 0, 734,
	0, 0, 738, 0, 735, 736, 0, 0, 0, 737,
	0, 0, 0, 2684, 2685, 0, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 0, 0, 0,
	0, 2393, 0, 0, 0, 0, 569, 0, 0, 0,
	1028, 0, 0, 1386, 0, 0, 0, 0, 1928, 0,
	0, 0, 0, 0, 0, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 2506, 2540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 0, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2564, 0, 79,
	0, 0, 1956, 1956, 1956, 1956, 1956, 0, 0, 0,
	0, 0, 0, 0, 1722, 0, 0, 0, 0, 2315,
	827, 0, 0, 0, 1956, 0, 0, 1956, 0, 0,
	0, 0, 0, 0, 0, 0, 1387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 1928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1387, 0, 0, 1387, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 0,
	2672, 0, 0, 0, 2903, 2904, 2905, 2906, 0, 0,
	2680, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 569, 0, 1386, 0, 1386, 0, 0, 2714,
	0, 1694, 1695, 569, 569, 569, 569, 569, 569, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1386, 0, 0, 0, 0, 2975, 0, 2977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1942, 0, 0, 0, 0, 0, 0, 0, 0,
	1946, 0, 1949, 0, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 855, 0,
	0, 0, 0, 0, 855, 855, 0, 0, 0, 1387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3064, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 0,
	870, 0, 0, 0, 0, 0, 0, 2832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 855, 1671, 855, 855, 855, 855,
	855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3110, 0, 0, 0,
	3110, 3110, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 855, 0, 0, 0, 0, 0, 0, 1928,
	0, 0, 0, 0, 0, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 1671, 0, 569, 0,
	569, 0, 569, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 0, 0, 2099, 0,
	1928, 0, 0, 0, 0, 2113, 2114, 0, 0, 2118,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 2124, 0, 0, 0, 0,
	0, 0, 0, 1928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2947, 0, 2951, 2952, 0, 0,
	0, 2127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2564,
	0, 79, 0, 2564, 0, 0, 0, 0, 0, 0,
	3189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1386, 0, 3193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 870, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3236, 0, 3054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 569, 569, 0, 0, 569, 0, 2120,
	0, 0, 0, 0, 0, 0, 569, 0, 3189, 0,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 2564, 2764, 0,
	3244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1376,
	1377, 1378, 1379, 2318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3196, 0, 855, 855, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1671,
	0, 0, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 1621, 0, 0, 0, 0, 0, 2414, 2415, 2416,
	2417, 2418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 2427,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2435, 0, 0, 569, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 2372, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 569, 569, 569, 569, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1387, 0, 1387, 0, 0, 1387, 0,
	0, 0, 0, 1387, 0, 0, 0, 2678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2687, 0, 0, 0, 855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2703, 0,
	0, 2706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1387, 0, 0, 0, 0, 1387, 569,
	569, 569, 569, 569, 0, 0, 0, 0, 0, 0,
	0, 2583, 0, 0, 0, 0, 569, 0, 0, 1621,
	0, 569, 0, 0, 569, 2594, 1671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2864, 0, 0, 2865, 2866, 2867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 569,
	0, 0, 569, 569, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1387, 0, 1387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 371, 0, 0, 1006, 991,
	482, 0, 934, 1009, 903, 922, 1019, 925, 928, 970,
	882, 948, 390, 919, 875, 907, 877, 914, 878, 905,
	936, 258, 902, 993, 952, 1008, 343, 255, 884, 908,
	404, 924, 197, 972, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 1015, 347,
	958, 0, 462, 375, 0, 0, 1621, 938, 997, 946,
	984, 933, 971, 892, 957, 1010, 920, 967, 1011, 304,
	238, 306, 196, 387, 463, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 3216, 0, 3217, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 328, 337, 336, 317,
	318, 320, 322, 327, 334, 340, 916, 964, 1005, 917,
	966, 253, 302, 260, 252, 487, 1016, 996, 881, 945,
	1004, 0, 0, 220, 1007, 940, 0, 969, 0, 1022,
	876, 960, 0, 879, 883, 1018, 1000, 911, 263, 0,
	0, 0, 0, 0, 0, 0, 937, 947, 981, 985,
	931, 0, 0, 0, 0, 0, 0, 0, 909, 0,
	956, 0, 0, 0, 888, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 935, 0,
	0, 0, 0, 891, 0, 910, 982, 0, 874, 284,
	885, 376, 245, 0, 989, 999, 932, 526, 1003, 930,
	929, 976, 889, 995, 923, 342, 887, 311, 192, 216,
	0, 921, 386, 429, 439, 994, 906, 915, 243, 913,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	955, 974, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 1212, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 332, 333,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	901, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 990, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 979, 1021, 399, 438, 231, 508, 461, 896,
	900, 894, 961, 895, 950, 951, 897, 1012, 1013, 1014,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 983,
	890, 0, 898, 899, 992, 1001, 1002, 564, 359, 451,
	505, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 239, 202,
	365, 373, 485, 295, 207, 208, 209, 478, 479, 480,
	481, 518, 519, 523, 430, 431, 432, 433, 954, 191,
	212, 345, 1017, 422, 276, 542, 517, 513, 198, 214,
	893, 250, 904, 912, 0, 918, 926, 927, 939, 941,
	942, 943, 944, 962, 963, 965, 973, 975, 978, 980,
	987, 998, 1020, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 383, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 953, 959, 356, 269, 289, 301, 968, 516, 467,
	218, 434, 278, 241, 986, 988, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	949, 977, 352, 483, 484, 297, 371, 0, 0, 1006,
	991, 482, 0, 934, 1009, 903, 922, 1019, 925, 928,
	970, 882, 948, 390, 919, 875, 907, 877, 914, 878,
	905, 936, 258, 902, 993, 952, 1008, 343, 255, 884,
	908, 404, 924, 197, 972, 452, 242, 353, 350, 490,
	270, 261, 257, 240, 298, 360, 402, 472, 396, 1015,
	347, 958, 0, 462, 375, 0, 0, 0, 938, 997,
	946, 984, 933, 971, 892, 957, 1010, 920, 967, 1011,
	304, 238, 306, 196, 387, 463, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 328, 337, 336,
	317, 318, 320, 322, 327, 334, 340, 916, 964, 1005,
	917, 966, 253, 302, 260, 252, 487, 1016, 996, 881,
	945, 1004, 0, 0, 220, 1007, 940, 0, 969, 0,
	1022, 876, 960, 0, 879, 883, 1018, 1000, 911, 263,
	0, 0, 0, 0, 0, 0, 0, 937, 947, 981,
	985, 931, 0, 0, 0, 0, 0, 2595, 0, 909,
	0, 956, 0, 0, 0, 888, 880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 935,
	0, 0, 0, 0, 891, 0, 910, 982, 0, 874,
	284, 885, 376, 245, 0, 989, 999, 932, 526, 1003,
	930, 929, 976, 889, 995, 923, 342, 887, 311, 192,
	216, 0, 921, 386, 429, 439, 994, 906, 915, 243,
	913, 437, 400, 506, 224, 272, 426, 406, 435, 413,
	275, 955, 974, 436, 348, 492, 420, 503, 527, 528,
	251, 380, 514, 476, 522, 541, 217, 248, 394, 469,
	509, 459, 372, 488, 489, 310, 458, 282, 195, 346,
	533, 215, 445, 233, 222, 494, 512, 277, 424, 204,
	471, 501, 230, 449, 0, 0, 543, 206, 499, 468,
	368, 307, 308, 205, 0, 425, 256, 280, 246, 389,
	496, 497, 244, 544, 219, 521, 211, 1212, 520, 382,
	491, 500, 369, 358, 210, 498, 367, 357, 313, 332,
	333, 268, 291, 418, 351, 419, 292, 378, 377, 379,
	199, 510, 0, 200, 0, 464, 511, 545, 225, 226,
	228, 901, 267, 271, 279, 281, 287, 288, 296, 344,
	393, 417, 415, 421, 990, 486, 504, 515, 525, 531,
	532, 534, 535, 536, 537, 538, 540, 539, 381, 294,
	460, 312, 349, 979, 1021, 399, 438, 231, 508, 461,
	896, 900, 894, 961, 895, 950, 951, 897, 1012, 1013,
	1014, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 0,
	983, 890, 0, 898, 899, 992, 1001, 1002, 564, 359,
	451, 505, 314, 326, 329, 319, 338, 0, 339, 315,
	316, 321, 323, 324, 325, 330, 331, 335, 341, 239,
	202, 365, 373, 485, 295, 207, 208, 209, 478, 479,
	480, 481, 518, 519, 523, 430, 431, 432, 433, 954,
	191, 212, 345, 1017, 422, 276, 542, 517, 513, 198,
	214, 893, 250, 904, 912, 0, 918, 926, 927, 939,
	941, 942, 943, 944, 962, 963, 965, 973, 975, 978,
	980, 987, 998, 1020, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 285, 290, 293, 299, 300,
	303, 309, 355, 361, 362, 363, 364, 383, 384, 385,
	388, 391, 392, 395, 397, 398, 401, 405, 409, 410,
	411, 412, 414, 416, 423, 428, 440, 441, 442, 443,
	444, 447, 448, 453, 454, 455, 456, 457, 465, 466,
	470, 493, 495, 507, 524, 529, 446, 286, 502, 530,
	0, 354, 953, 959, 356, 269, 289, 301, 968, 516,
	467, 218, 434, 278, 241, 986, 988, 203, 237, 221,
	247, 262, 265, 305, 366, 374, 403, 408, 283, 259,
	235, 427, 232, 450, 473, 474, 475, 477, 370, 254,
	407, 949, 977, 352, 483, 484, 297, 371, 0, 0,
	1006, 991, 482, 0, 934, 1009, 903, 922, 1019, 925,
	928, 970, 882, 948, 390, 919, 875, 907, 877, 914,
	878, 905, 936, 258, 902, 993, 952, 1008, 343, 255,
	884, 908, 404, 924, 197, 972, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	1015, 347, 958, 0, 462, 375, 0, 0, 0, 938,
	997, 946, 984, 933, 971, 892, 957, 1010, 920, 967,
	1011, 304, 238, 306, 196, 387, 463, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 328, 337,
	336, 317, 318, 320, 322, 327, 334, 340, 916, 964,
	1005, 917, 966, 253, 302, 260, 252, 487, 1016, 996,
	881, 945, 1004, 0, 0, 220, 1007, 940, 0, 969,
	0, 1022, 876, 960, 0, 879, 883, 1018, 1000, 911,
	263, 0, 0, 0, 0, 0, 0, 0, 937, 947,
	981, 985, 931, 0, 0, 0, 0, 0, 2553, 0,
	909, 0, 956, 0, 0, 0, 888, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	935, 0, 0, 0, 0, 891, 0, 910, 982, 0,
	874, 284, 885, 376, 245, 0, 989, 999, 932, 526,
	1003, 930, 929, 976, 889, 995, 923, 342, 887, 311,
	192, 216, 0, 921, 386, 429, 439, 994, 906, 915,
	243, 913, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 955, 974, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 1212, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	332, 333, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 901, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 990, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 979, 1021, 399, 438, 231, 508,
	461, 896, 900, 894, 961, 895, 950, 951, 897, 1012,
	1013, 1014, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 983, 890, 0, 898, 899, 992, 1001, 1002, 564,
	359, 451, 505, 314, 326, 329, 319, 338, 0, 339,
	315, 316, 321, 323, 324, 325, 330, 331, 335, 341,
	239, 202, 365, 373, 485, 295, 207, 208, 209, 478,
	479, 480, 481, 518, 519, 523, 430, 431, 432, 433,
	954, 191, 212, 345, 1017, 422, 276, 542, 517, 513,
	198, 214, 893, 250, 904, 912, 0, 918, 926, 927,
	939, 941, 942, 943, 944, 962, 963, 965, 973, 975,
	978, 980, 987, 998, 1020, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 953, 959, 356, 269, 289, 301, 968,
	516, 467, 218, 434, 278, 241, 986, 988, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 949, 977, 352, 483, 484, 297, 371, 0,
	0, 1006, 991, 482, 0, 934, 1009, 903, 922, 1019,
	925, 928, 970, 882, 948, 390, 919, 875, 907, 877,
	914, 878, 905, 936, 258, 902, 993, 952, 1008, 343,
	255, 884, 908, 404, 924, 197, 972, 452, 242, 353,
	350, 490, 270, 261, 257, 240, 298, 360, 402, 472,
	396, 1015, 347, 958, 0, 462, 375, 0, 0, 0,
	938, 997, 946, 984, 933, 971, 892, 957, 1010, 920,
	967, 1011, 304, 238, 306, 196, 387, 463, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 328,
	337, 336, 317, 318, 320, 322, 327, 334, 340, 916,
	964, 1005, 917, 966, 253, 302, 260, 252, 487, 1016,
	996, 881, 945, 1004, 0, 0, 220, 1007, 940, 0,
	969, 0, 1022, 876, 960, 0, 879, 883, 1018, 1000,
	911, 263, 0, 0, 0, 0, 0, 0, 0, 937,
	947, 981, 985, 931, 0, 0, 0, 0, 0, 1944,
	0, 909, 0, 956, 0, 0, 0, 888, 880, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 935, 0, 0, 0, 0, 891, 0, 910, 982,
	0, 874, 284, 885, 376, 245, 0, 989, 999, 932,
	526, 1003, 930, 929, 976, 889, 995, 923, 342, 887,
	311, 192, 216, 0, 921, 386, 429, 439, 994, 906,
	915, 243, 913, 437, 400, 506, 224, 272, 426, 406,
	435, 413, 275, 955, 974, 436, 348, 492, 420, 503,
	527, 528, 251, 380, 514, 476, 522, 541, 217, 248,
	394, 469, 509, 459, 372, 488, 489, 310, 458, 282,
	195, 346, 533, 215, 445, 233, 222, 494, 512, 277,
	424, 204, 471, 501, 230, 449, 0, 0, 543, 206,
	499, 468, 368, 307, 308, 205, 0, 425, 256, 280,
	246, 389, 496, 497, 244, 544, 219, 521, 211, 1212,
	520, 382, 491, 500, 369, 358, 210, 498, 367, 357,
	313, 332, 333, 268, 291, 418, 351, 419, 292, 378,
	377, 379, 199, 510, 0, 200, 0, 464, 511, 545,
	225, 226, 228, 901, 267, 271, 279, 281, 287, 288,
	296, 344, 393, 417, 415, 421, 990, 486, 504, 515,
	525, 531, 532, 534, 535, 536, 537, 538, 540, 539,
	381, 294, 460, 312, 349, 979, 1021, 399, 438, 231,
	508, 461, 896, 900, 894, 961, 895, 950, 951, 897,
	1012, 1013, 1014, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 0, 983, 890, 0, 898, 899, 992, 1001, 1002,
	564, 359, 451, 505, 314, 326, 329, 319, 338, 0,
	339, 315, 316, 321, 323, 324, 325, 330, 331, 335,
	341, 239, 202, 365, 373, 485, 295, 207, 208, 209,
	478, 479, 480, 481, 518, 519, 523, 430, 431, 432,
	433, 954, 191, 212, 345, 1017, 422, 276, 542, 517,
	513, 198, 214, 893, 250, 904, 912, 0, 918, 926,
	927, 939, 941, 942, 943, 944, 962, 963, 965, 973,
	975, 978, 980, 987, 998, 1020, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 285, 290, 293,
	299, 300, 303, 309, 355, 361, 362, 363, 364, 383,
	384, 385, 388, 391, 392, 395, 397, 398, 401, 405,
	409, 410, 411, 412, 414, 416, 423, 428, 440, 441,
	442, 443, 444, 447, 448, 453, 454, 455, 456, 457,
	465, 466, 470, 493, 495, 507, 524, 529, 446, 286,
	502, 530, 0, 354, 953, 959, 356, 269, 289, 301,
	968, 516, 467, 218, 434, 278, 241, 986, 988, 203,
	237, 221, 247, 262, 265, 305, 366, 374, 403, 408,
	283, 259, 235, 427, 232, 450, 473, 474, 475, 477,
	370, 254, 407, 949, 977, 352, 483, 484, 297, 371,
	0, 0, 1006, 991, 482, 0, 934, 1009, 903, 922,
	1019, 925, 928, 970, 882, 948, 390, 919, 875, 907,
	877, 914, 878, 905, 936, 258, 902, 993, 952, 1008,
	343, 255, 884, 908, 404, 924, 197, 972, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 1015, 347, 958, 0, 462, 375, 0, 0,
	0, 938, 997, 946, 984, 933, 971, 892, 957, 1010,
	920, 967, 1011, 304, 238, 306, 196, 387, 463, 274,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	916, 964, 1005, 917, 966, 253, 302, 260, 252, 487,
	1016, 996, 881, 945, 1004, 0, 0, 220, 1007, 940,
	0, 969, 0, 1022, 876, 960, 0, 879, 883, 1018,
	1000, 911, 263, 0, 0, 0, 0, 0, 0, 0,
	937, 947, 981, 985, 931, 0, 0, 0, 0, 0,
	0, 0, 909, 0, 956, 0, 0, 0, 888, 880,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 935, 0, 0, 0, 0, 891, 0, 910,
	982, 0, 874, 284, 885, 376, 245, 0, 989, 999,
	932, 526, 1003, 930, 929, 976, 889, 995, 923, 342,
	887, 311, 192, 216, 0, 921, 386, 429, 439, 994,
	906, 915, 243, 913, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 955, 974, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	1212, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 901, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 990, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 979, 1021, 399, 438,
	231, 508, 461, 896, 900, 894, 961, 895, 950, 951,
	897, 1012, 1013, 1014, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 983, 890, 0, 898, 899, 992, 1001,
	1002, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 954, 191, 212, 345, 1017, 422, 276, 542,
	517, 513, 198, 214, 893, 250, 904, 912, 0, 918,
	926, 927, 939, 941, 942, 943, 944, 962, 963, 965,
	973, 975, 978, 980, 987, 998, 1020, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 953, 959, 356, 269, 289,
	301, 968, 516, 467, 218, 434, 278, 241, 986, 988,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 949, 977, 352, 483, 484, 297,
	371, 0, 0, 1006, 991, 482, 0, 934, 1009, 903,
	922, 1019, 925, 928, 970, 882, 948, 390, 919, 875,
	907, 877, 914, 878, 905, 936, 258, 902, 993, 952,
	1008, 343, 255, 884, 908, 404, 924, 197, 972, 452,
	242, 353, 350, 490, 270, 261, 257, 240, 298, 360,
	402, 472, 396, 1015, 347, 958, 0, 462, 375, 0,
	0, 0, 938, 997, 946, 984, 933, 971, 892, 957,
	1010, 920, 967, 1011, 304, 238, 306, 196, 387, 463,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 328, 337, 336, 317, 318, 320, 322, 327, 334,
	340, 916, 964, 1005, 917, 966, 253, 302, 260, 252,
	487, 1016, 996, 881, 945, 1004, 0, 0, 220, 1007,
	940, 0, 969, 0, 1022, 876, 960, 0, 879, 883,
	1018, 1000, 911, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 947, 981, 985, 931, 0, 0, 0, 0,
	0, 0, 0, 909, 0, 956, 0, 0, 0, 888,
	880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 935, 0, 0, 0, 0, 891, 0,
	910, 982, 0, 874, 284, 885, 376, 245, 0, 989,
	999, 932, 526, 1003, 930, 929, 976, 889, 995, 923,
	342, 887, 311, 192, 216, 0, 921, 386, 429, 439,
	994, 906, 915, 243, 913, 437, 400, 506, 224, 272,
	426, 406, 435, 413, 275, 955, 974, 436, 348, 492,
	420, 503, 527, 528, 251, 380, 514, 476, 522, 541,
	217, 248, 394, 469, 509, 459, 372, 488, 489, 310,
	458, 282, 195, 346, 533, 215, 445, 233, 222, 494,
	512, 277, 424, 204, 471, 501, 230, 449, 0, 0,
	543, 206, 499, 468, 368, 307, 308, 205, 0, 425,
	256, 280, 246, 389, 496, 497, 244, 544, 219, 521,
	211, 1212, 520, 382, 491, 500, 369, 358, 210, 498,
	367, 357, 313, 332, 333, 268, 291, 418, 351, 419,
	292, 378, 377, 379, 199, 510, 0, 200, 0, 464,
	511, 545, 225, 226, 228, 901, 267, 271, 279, 281,
	287, 288, 296, 344, 393, 417, 415, 421, 990, 486,
	504, 515, 525, 531, 532, 534, 535, 536, 537, 538,
	540, 539, 381, 294, 460, 312, 349, 979, 1021, 399,
	438, 231, 508, 461, 896, 900, 894, 961, 895, 950,
	951, 897, 1012, 1013, 1014, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 0, 983, 890, 0, 898, 899, 992,
	1001, 1002, 564, 359, 451, 505, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 239, 202, 365, 373, 485, 295, 207,
	208, 209, 478, 479, 480, 481, 518, 519, 523, 430,
	431, 432, 433, 954, 191, 212, 345, 1017, 422, 276,
	542, 517, 513, 198, 214, 893, 250, 904, 912, 0,
	918, 926, 927, 939, 941, 942, 943, 944, 962, 963,
	965, 973, 975, 978, 980, 987, 998, 1020, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 285,
	290, 293, 299, 300, 303, 309, 355, 361, 362, 363,
	364, 383, 384, 385, 388, 391, 392, 395, 397, 398,
	401, 405, 409, 410, 411, 412, 414, 416, 423, 428,
	440, 441, 442, 443, 444, 447, 448, 453, 454, 455,
	456, 457, 465, 466, 470, 493, 495, 507, 524, 529,
	446, 286, 502, 530, 0, 354, 953, 959, 356, 269,
	289, 301, 968, 516, 467, 218, 434, 278, 241, 986,
	988, 203, 237, 221, 247, 262, 265, 305, 366, 374,
	403, 408, 283, 259, 235, 427, 232, 450, 473, 474,
	475, 477, 370, 254, 407, 949, 977, 352, 483, 484,
	297, 371, 0, 0, 1006, 991, 482, 0, 934, 1009,
	903, 922, 1019, 925, 928, 970, 882, 948, 390, 919,
	875, 907, 877, 914, 878, 905, 936, 258, 902, 993,
	952, 1008, 343, 255, 884, 908, 404, 924, 197, 972,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 1015, 347, 958, 0, 462, 375,
	0, 0, 0, 938, 997, 946, 984, 933, 971, 892,
	957, 1010, 920, 967, 1011, 304, 238, 306, 196, 387,
	463, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 328, 337, 336, 317, 318, 320, 322, 327,
	334, 340, 916, 964, 1005, 917, 966, 253, 302, 260,
	252, 487, 1016, 996, 881, 945, 1004, 0, 0, 1023,
	1007, 940, 0, 969, 0, 1022, 876, 960, 0, 879,
	883, 1018, 1000, 911, 263, 0, 0, 0, 0, 0,
	0, 0, 937, 947, 981, 985, 931, 0, 0, 0,
	0, 0, 0, 0, 909, 0, 956, 0, 0, 0,
	888, 880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 935, 0, 0, 0, 0, 891,
	0, 910, 982, 0, 874, 284, 885, 376, 245, 0,
	989, 999, 932, 526, 1003, 930, 929, 976, 889, 995,
	923, 342, 887, 311, 192, 216, 0, 921, 386, 429,
	439, 994, 906, 915, 243, 913, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 955, 974, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 886, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 332, 333, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 901, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 990,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 873, 867, 866, 312, 349, 979, 1021,
	399, 438, 231, 508, 461, 896, 900, 894, 961, 895,
	950, 951, 897, 1012, 1013, 1014, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 983, 890, 0, 898, 899,
	992, 1001, 1002, 564, 359, 451, 505, 314, 326, 329,
	319, 338, 0, 339, 315, 316, 321, 323, 324, 325,
	330, 331, 335, 341, 239, 202, 365, 373, 485, 295,
	207, 208, 209, 478, 479, 480, 481, 518, 519, 523,
	430, 431, 432, 433, 954, 191, 212, 345, 1017, 422,
	276, 542, 517, 513, 198, 214, 893, 250, 904, 912,
	0, 918, 926, 927, 939, 941, 942, 943, 944, 962,
	963, 965, 973, 975, 978, 980, 987, 998, 1020, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 953, 959, 356,
	269, 289, 301, 968, 516, 467, 218, 434, 278, 241,
	986, 988, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 949, 977, 352, 483,
	484, 297, 371, 0, 0, 1006, 991, 482, 0, 934,
	1009, 903, 922, 1019, 925, 928, 970, 882, 948, 390,
	919, 875, 907, 877, 914, 878, 905, 936, 258, 902,
	993, 952, 1008, 343, 255, 884, 908, 404, 924, 197,
	972, 452, 242, 353, 350, 490, 270, 261, 257, 240,
	298, 360, 402, 472, 396, 1015, 347, 958, 0, 462,
	375, 0, 0, 0, 938, 997, 946, 984, 933, 971,
	892, 957, 1010, 920, 967, 1011, 304, 238, 306, 196,
	387, 463, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 328, 337, 336, 317, 318, 320, 322,
	327, 334, 340, 916, 964, 1005, 917, 966, 253, 302,
	260, 252, 487, 1016, 996, 881, 945, 1004, 0, 0,
	1023, 1007, 940, 0, 969, 0, 1022, 876, 960, 0,
	879, 883, 1018, 1000, 911, 263, 0, 0, 0, 0,
	0, 0, 0, 937, 947, 981, 985, 931, 0, 0,
	0, 0, 0, 0, 0, 909, 0, 956, 0, 0,
	0, 888, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 935, 0, 0, 0, 0,
	891, 0, 910, 982, 0, 874, 284, 885, 376, 245,
	0, 989, 999, 932, 526, 1003, 930, 929, 976, 889,
	995, 923, 342, 887, 311, 192, 216, 0, 921, 386,
	429, 439, 994, 906, 915, 243, 913, 437, 400, 506,
	224, 272, 426, 406, 435, 413, 275, 955, 974, 436,
	348, 492, 420, 503, 527, 528, 251, 380, 514, 476,
	522, 541, 217, 248, 394, 469, 509, 459, 372, 488,
	489, 310, 458, 282, 195, 346, 533, 215, 445, 233,
	222, 494, 512, 277, 424, 204, 471, 1454, 230, 449,
	0, 0, 543, 206, 499, 468, 368, 307, 308, 205,
	0, 425, 256, 280, 246, 389, 496, 497, 244, 544,
	219, 521, 211, 886, 520, 382, 491, 500, 369, 358,
	210, 498, 367, 357, 313, 332, 333, 268, 291, 418,
	351, 419, 292, 378, 377, 379, 199, 510, 0, 200,
	0, 464, 511, 545, 225, 226, 228, 901, 267, 271,
	279, 281, 287, 288, 296, 344, 393, 417, 415, 421,
	990, 486, 504, 515, 525, 531, 532, 534, 535, 536,
	537, 538, 540, 539, 873, 867, 866, 312, 349, 979,
	1021, 399, 438, 231, 508, 461, 896, 900, 894, 961,
	895, 950, 951, 897, 1012, 1013, 1014, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 0, 983, 890, 0, 898,
	899, 992, 1001, 1002, 564, 359, 451, 505, 314, 326,
	329, 319, 338, 0, 339, 315, 316, 321, 323, 324,
	325, 330, 331, 335, 341, 239, 202, 365, 373, 485,
	295, 207, 208, 209, 478, 479, 480, 481, 518, 519,
	523, 430, 431, 432, 433, 954, 191, 212, 345, 1017,
	422, 276, 542, 517, 513, 198, 214, 893, 250, 904,
	912, 0, 918, 926, 927, 939, 941, 942, 943, 944,
	962, 963, 965, 973, 975, 978, 980, 987, 998, 1020,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 285, 290, 293, 299, 300, 303, 309, 355, 361,
	362, 363, 364, 383, 384, 385, 388, 391, 392, 395,
	397, 398, 401, 405, 409, 410, 411, 412, 414, 416,
	423, 428, 440, 441, 442, 443, 444, 447, 448, 453,
	454, 455, 456, 457, 465, 466, 470, 493, 495, 507,
	524, 529, 446, 286, 502, 530, 0, 354, 953, 959,
	356, 269, 289, 301, 968, 516, 467, 218, 434, 278,
	241, 986, 988, 203, 237, 221, 247, 262, 265, 305,
	366, 374, 403, 408, 283, 259, 235, 427, 232, 450,
	473, 474, 475, 477, 370, 254, 407, 949, 977, 352,
	483, 484, 297, 371, 0, 0, 1006, 991, 482, 0,
	934, 1009, 903, 922, 1019, 925, 928, 970, 882, 948,
	390, 919, 875, 907, 877, 914, 878, 905, 936, 258,
	902, 993, 952, 1008, 343, 255, 884, 908, 404, 924,
	197, 972, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 1015, 347, 958, 0,
	462, 375, 0, 0, 0, 938, 997, 946, 984, 933,
	971, 892, 957, 1010, 920, 967, 1011, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 916, 964, 1005, 917, 966, 253,
	302, 260, 252, 487, 1016, 996, 881, 945, 1004, 0,
	0, 1023, 1007, 940, 0, 969, 0, 1022, 876, 960,
	0, 879, 883, 1018, 1000, 911, 263, 0, 0, 0,
	0, 0, 0, 0, 937, 947, 981, 985, 931, 0,
	0, 0, 0, 0, 0, 0, 909, 0, 956, 0,
	0, 0, 888, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 935, 0, 0, 0,
	0, 891, 0, 910, 982, 0, 874, 284, 885, 376,
	245, 0, 989, 999, 932, 526, 1003, 930, 929, 976,
	889, 995, 923, 342, 887, 311, 192, 216, 0, 921,
	386, 429, 439, 994, 906, 915, 243, 913, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 955, 974,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 864, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 886, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 901, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 990, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 873, 867, 866, 312, 349,
	979, 1021, 399, 438, 231, 508, 461, 896, 900, 894,
	961, 895, 950, 951, 897, 1012, 1013, 1014, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 983, 890, 0,
	898, 899, 992, 1001, 1002, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 954, 191, 212, 345,
	1017, 422, 276, 542, 517, 513, 198, 214, 893, 250,
	904, 912, 0, 918, 926, 927, 939, 941, 942, 943,
	944, 962, 963, 965, 973, 975, 978, 980, 987, 998,
	1020, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 953,
	959, 356, 269, 289, 301, 968, 516, 467, 218, 434,
	278, 241, 986, 988, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 949, 977,
	352, 483, 484, 297, 371, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 1882, 0, 646, 0, 0, 0,
	258, 651, 0, 0, 0, 343, 255, 0, 1883, 404,
	0, 197, 0, 452, 242, 353, 350, 490, 270, 261,
	257, 240, 298, 360, 402, 472, 396, 657, 347, 0,
	0, 462, 375, 0, 0, 0, 0, 0, 653, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 238,
	306, 196, 387, 463, 274, 0, 87, 0, 0, 188,
	189, 190, 757, 765, 766, 767, 768, 769, 758, 760,
	0, 0, 229, 759, 236, 684, 686, 685, 695, 696,
	697, 698, 699, 700, 701, 682, 762, 770, 771, 0,
	253, 302, 260, 252, 487, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	629, 643, 0, 656, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 641, 853, 0, 0, 0, 727,
	0, 642, 0, 0, 650, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	376, 245, 0, 726, 0, 0, 526, 0, 0, 724,
	0, 0, 0, 0, 342, 0, 311, 192, 216, 0,
	0, 386, 429, 439, 0, 0, 0, 243, 0, 437,
	400, 506, 224, 272, 426, 406, 435, 413, 275, 0,
	0, 436, 348, 492, 420, 503, 527, 528, 251, 380,
	514, 476, 522, 541, 217, 248, 394, 469, 509, 459,
	372, 488, 489, 310, 458, 282, 195, 346, 533, 215,
	445, 233, 222, 494, 512, 277, 424, 204, 471, 501,
	230, 449, 0, 0, 543, 206, 499, 468, 368, 307,
	308, 205, 0, 425, 256, 280, 246, 389, 496, 497,
	244, 544, 219, 521, 211, 0, 520, 382, 491, 500,
	369, 358, 210, 498, 367, 357, 313, 690, 691, 268,
	291, 418, 351, 419, 292, 378, 377, 379, 199, 510,
	0, 200, 0, 464, 511, 545, 225, 226, 228, 0,
	267, 271, 279, 281, 287, 288, 296, 344, 393, 417,
	415, 421, 0, 486, 504, 515, 525, 531, 532, 534,
	535, 536, 537, 538, 540, 539, 381, 294, 460, 312,
	349, 0, 0, 399, 438, 231, 508, 461, 734, 725,
	661, 738, 663, 735, 736, 658, 659, 662, 737, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 0, 728, 649,
	648, 0, 655, 0, 680, 681, 683, 687, 688, 689,
	692, 693, 694, 702, 704, 705, 703, 706, 707, 708,
	711, 712, 713, 714, 709, 710, 715, 664, 668, 665,
	666, 667, 679, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 748, 749, 750, 751, 647, 191, 212,
	345, 0, 422, 276, 542, 517, 513, 198, 214, 739,
	250, 740, 0, 0, 744, 0, 0, 0, 746, 745,
	0, 747, 719, 718, 0, 0, 741, 742, 0, 743,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 285, 290, 293, 299, 300, 303, 309,
	355, 361, 362, 363, 364, 383, 384, 385, 388, 391,
	392, 395, 397, 398, 401, 405, 409, 410, 411, 412,
	414, 416, 423, 428, 440, 441, 442, 443, 444, 447,
	448, 453, 454, 455, 456, 457, 465, 466, 470, 493,
	495, 507, 524, 529, 446, 286, 502, 530, 0, 354,
	0, 0, 356, 269, 289, 301, 0, 516, 467, 218,
	434, 278, 241, 764, 0, 203, 237, 221, 247, 262,
	265, 305, 366, 374, 403, 408, 283, 259, 235, 427,
	232, 450, 473, 474, 475, 477, 370, 254, 407, 0,
	371, 352, 483, 484, 297, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 646, 0, 0, 0, 258, 651, 0, 0,
	0, 343, 255, 0, 0, 404, 0, 197, 0, 452,
	242, 353, 350, 490, 270, 261, 257, 240, 298, 360,
	402, 472, 396, 657, 347, 0, 0, 462, 375, 0,
	0, 0, 0, 0, 653, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 238, 306, 196, 387, 463,
	274, 0, 87, 0, 0, 188, 189, 190, 757, 765,
	766, 767, 768, 769, 758, 760, 0, 0, 229, 759,
	236, 684, 686, 685, 695, 696, 697, 698, 699, 700,
	701, 682, 762, 770, 771, 0, 253, 302, 260, 252,
	487, 0, 0, 1839, 1840, 1841, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 629, 643, 0, 656,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	641, 0, 0, 0, 0, 727, 0, 642, 0, 0,
	650, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 376, 245, 0, 726,
	0, 0, 526, 0, 0, 724, 0, 0, 0, 0,
	342, 0, 311, 192, 216, 0, 0, 386, 429, 439,
	0, 0, 0, 243, 0, 437, 400, 506, 224, 272,
	426, 406, 435, 413, 275, 0, 0, 436, 348, 492,
	420, 503, 527, 528, 251, 380, 514, 476, 522, 541,
	217, 248, 394, 469, 509, 459, 372, 488, 489, 310,
	458, 282, 195, 346, 533, 215, 445, 233, 222, 494,
	512, 277, 424, 204, 471, 501, 230, 449, 0, 0,
	543, 206, 499, 468, 368, 307, 308, 205, 0, 425,
	256, 280, 246, 389, 496, 497, 244, 544, 219, 521,
	211, 0, 520, 382, 491, 500, 369, 358, 210, 498,
	367, 357, 313, 690, 691, 268, 291, 418, 351, 419,
	292, 378, 377, 379, 199, 510, 0, 200, 0, 464,
	511, 545, 225, 226, 228, 0, 267, 271, 279, 281,
	287, 288, 296, 344, 393, 417, 415, 421, 0, 486,
	504, 515, 525, 531, 532, 534, 535, 536, 537, 538,
	540, 539, 381, 294, 460, 312, 349, 0, 0, 399,
	438, 231, 508, 461, 734, 725, 661, 738, 663, 735,
	736, 658, 659, 662, 737, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 0, 728, 649, 648, 0, 655, 0,
	680, 681, 683, 687, 688, 689, 692, 693, 694, 702,
	704, 705, 703, 706, 707, 708, 711, 712, 713, 714,
	709, 710, 715, 664, 668, 665, 666, 667, 679, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 748,
	749, 750, 751, 647, 191, 212, 345, 0, 422, 276,
	542, 517, 513, 198, 214, 739, 250, 740, 0, 0,
	744, 0, 0, 0, 746, 745, 0, 747, 719, 718,
	0, 0, 741, 742, 0, 743, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 285,
	290, 293, 299, 300, 303, 309, 355, 361, 362, 363,
	364, 383, 384, 385, 388, 391, 392, 395, 397, 398,
	401, 405, 409, 410, 411, 412, 414, 416, 423, 428,
	440, 441, 442, 443, 444, 447, 448, 453, 454, 455,
	456, 457, 465, 466, 470, 493, 495, 507, 524, 529,
	446, 286, 502, 530, 0, 354, 0, 0, 356, 269,
	289, 301, 0, 516, 467, 218, 434, 278, 241, 764,
	0, 203, 237, 221, 247, 262, 265, 305, 366, 374,
	403, 408, 283, 259, 235, 427, 232, 450, 473, 474,
	475, 477, 370, 254, 407, 0, 371, 352, 483, 484,
	297, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 646, 0,
	0, 0, 258, 651, 0, 0, 0, 343, 255, 0,
	0, 404, 0, 197, 0, 452, 242, 353, 350, 490,
	270, 261, 257, 240, 298, 360, 402, 472, 396, 657,
	347, 0, 0, 462, 375, 0, 0, 0, 0, 0,
	653, 654, 0, 0, 0, 0, 0, 0, 1971, 0,
	304, 238, 306, 196, 387, 463, 274, 0, 87, 0,
	0, 188, 189, 190, 757, 765, 766, 767, 768, 769,
	758, 760, 0, 0, 229, 759, 236, 684, 686, 685,
	695, 696, 697, 698, 699, 700, 701, 682, 762, 770,
	771, 1972, 253, 302, 260, 252, 487, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 629, 643, 0, 656, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 641, 0, 0, 0,
	0, 727, 0, 642, 0, 0, 650, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 733,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 376, 245, 0, 726, 0, 0, 526, 0,
	0, 724, 0, 0, 0, 0, 342, 0, 311, 192,
	216, 0, 0, 386, 429, 439, 0, 0, 0, 243,
	0, 437, 400, 506, 224, 272, 426, 406, 435, 413,
	275, 0, 0, 436, 348, 492, 420, 503, 527, 528,
	251, 380, 514, 476, 522, 541, 217, 248, 394, 469,
	509, 459, 372, 488, 489, 310, 458, 282, 195, 346,
	533, 215, 445, 233, 222, 494, 512, 277, 424, 204,
	471, 501, 230, 449, 0, 0, 543, 206, 499, 468,
	368, 307, 308, 205, 0, 425, 256, 280, 246, 389,
	496, 497, 244, 544, 219, 521, 211, 0, 520, 382,
	491, 500, 369, 358, 210, 498, 367, 357, 313, 690,
	691, 268, 291, 418, 351, 419, 292, 378, 377, 379,
	199, 510, 0, 200, 0, 464, 511, 545, 225, 226,
	228, 0, 267, 271, 279, 281, 287, 288, 296, 344,
	393, 417, 415, 421, 0, 486, 504, 515, 525, 531,
	532, 534, 535, 536, 537, 538, 540, 539, 381, 294,
	460, 312, 349, 0, 0, 399, 438, 231, 508, 461,
	734, 725, 661, 738, 663, 735, 736, 658, 659, 662,
	737, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 0,
	728, 649, 648, 0, 655, 0, 680, 681, 683, 687,
	688, 689, 692, 693, 694, 702, 704, 705, 703, 706,
	707, 708, 711, 712, 713, 714, 709, 710, 715, 664,
	668, 665, 666, 667, 679, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 748, 749, 750, 751, 647,
	191, 212, 345, 0, 422, 276, 542, 517, 513, 198,
	214, 739, 250, 740, 0, 0, 744, 0, 0, 0,
	746, 745, 0, 747, 719, 718, 0, 0, 741, 742,
	0, 743, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 285, 290, 293, 299, 300,
	303, 309, 355, 361, 362, 363, 364, 383, 384, 385,
	388, 391, 392, 395, 397, 398, 401, 405, 409, 410,
	411, 412, 414, 416, 423, 428, 440, 441, 442, 443,
	444, 447, 448, 453, 454, 455, 456, 457, 465, 466,
	470, 493, 495, 507, 524, 529, 446, 286, 502, 530,
	0, 354, 0, 0, 356, 269, 289, 301, 0, 516,
	467, 218, 434, 278, 241, 764, 0, 203, 237, 221,
	247, 262, 265, 305, 366, 374, 403, 408, 283, 259,
	235, 427, 232, 450, 473, 474, 475, 477, 370, 254,
	407, 0, 0, 352, 483, 484, 297, 371, 0, 0,
	0, 78, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 646,
	0, 0, 0, 258, 651, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	657, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 87,
	0, 0, 188, 189, 190, 757, 765, 766, 767, 768,
	769, 758, 760, 0, 0, 229, 759, 236, 684, 686,
	685, 695, 696, 697, 698, 699, 700, 701, 682, 762,
	770, 771, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 629, 643, 0, 656, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 641, 0, 0,
	0, 0, 727, 0, 642, 0, 0, 650, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 726, 0, 0, 526,
	0, 0, 724, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	690, 691, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 734, 725, 661, 738, 663, 735, 736, 658, 659,
	662, 737, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 728, 649, 648, 0, 655, 0, 680, 681, 683,
	687, 688, 689, 692, 693, 694, 702, 704, 705, 703,
	706, 707, 708, 711, 712, 713, 714, 709, 710, 715,
	664, 668, 665, 666, 667, 679, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 748, 749, 750, 751,
	647, 191, 212, 345, 86, 422, 276, 542, 517, 513,
	198, 214, 739, 250, 740, 0, 0, 744, 0, 0,
	0, 746, 745, 0, 747, 719, 718, 0, 0, 741,
	742, 0, 743, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 764, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 646, 0, 0, 0, 258,
	651, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 657, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 653, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 87, 0, 0, 188, 189,
	190, 757, 765, 766, 767, 768, 769, 758, 760, 0,
	0, 229, 759, 236, 684, 686, 685, 695, 696, 697,
	698, 699, 700, 701, 682, 762, 770, 771, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 629,
	643, 0, 656, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 641, 0, 0, 0, 0, 727, 0,
	642, 0, 0, 650, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 726, 0, 0, 526, 0, 0, 724, 0,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 3203, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 690, 691, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 734, 725, 661,
	738, 663, 735, 736, 658, 659, 662, 737, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 728, 649, 648,
	0, 655, 0, 680, 681, 683, 687, 688, 689, 692,
	693, 694, 702, 704, 705, 703, 706, 707, 708, 711,
	712, 713, 714, 709, 710, 715, 664, 668, 665, 666,
	667, 679, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 748, 749, 750, 751, 647, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 739, 250,
	740, 0, 0, 744, 0, 0, 0, 746, 745, 0,
	747, 719, 718, 0, 0, 741, 742, 0, 743, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 764, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 646, 0, 0, 0, 258, 651, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 657, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 653, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 87, 0, 1421, 188, 189, 190, 757, 765, 766,
	767, 768, 769, 758, 760, 0, 0, 229, 759, 236,
	684, 686, 685, 695, 696, 697, 698, 699, 700, 701,
	682, 762, 770, 771, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 629, 643, 0, 656, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 641,
	0, 0, 0, 0, 727, 0, 642, 0, 0, 650,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	812, 813, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 726, 0,
	0, 526, 0, 0, 724, 0, 0, 0, 0, 342,
	0, 311, 192, 216, 0, 0, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 690, 691, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 734, 725, 661, 738, 663, 735, 736,
	658, 659, 662, 737, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 728, 649, 648, 0, 655, 0, 680,
	681, 683, 687, 688, 689, 692, 693, 694, 702, 704,
	705, 703, 706, 707, 708, 711, 712, 713, 714, 709,
	710, 715, 664, 668, 665, 666, 667, 679, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 748, 749,
	750, 751, 647, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 739, 250, 740, 0, 0, 744,
	0, 0, 0, 746, 745, 0, 747, 719, 718, 0,
	0, 741, 742, 0, 743, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 764, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 371, 352, 483, 484, 297,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 646, 0, 0,
	0, 258, 651, 0, 0, 0, 343, 255, 0, 0,
	404, 0, 197, 0, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 657, 347,
	0, 0, 462, 375, 0, 0, 0, 0, 0, 653,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	238, 306, 196, 387, 463, 274, 0, 87, 0, 0,
	188, 189, 190, 757, 765, 766, 767, 768, 769, 758,
	760, 0, 0, 229, 759, 236, 684, 686, 685, 695,
	696, 697, 698, 699, 700, 701, 682, 762, 770, 771,
	0, 253, 302, 260, 252, 487, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 629, 643, 0, 656, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 640, 641, 853, 0, 0, 0,
	727, 0, 642, 0, 0, 650, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 376, 245, 0, 726, 0, 0, 526, 0, 0,
	724, 0, 0, 0, 0, 342, 0, 311, 192, 216,
	0, 0, 386, 429, 439, 0, 0, 0, 243, 0,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	0, 0, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 0, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 690, 691,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	0, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 0, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 0, 0, 399, 438, 231, 508, 461, 734,
	725, 661, 738, 663, 735, 736, 658, 659, 662, 737,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 728,
	649, 648, 0, 655, 0, 680, 681, 683, 687, 688,
	689, 692, 693, 694, 702, 704, 705, 703, 706, 707,
	708, 711, 712, 713, 714, 709, 710, 715, 664, 668,
	665, 666, 667, 679, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 748, 749, 750, 751, 647, 191,
	212, 345, 0, 422, 276, 542, 517, 513, 198, 214,
	739, 250, 740, 0, 0, 744, 0, 0, 0, 746,
	745, 0, 747, 719, 718, 0, 0, 741, 742, 0,
	743, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 383, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 0, 0, 356, 269, 289, 301, 0, 516, 467,
	218, 434, 278, 241, 764, 0, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	0, 371, 352, 483, 484, 297, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 646, 0, 0, 0, 258, 651, 0,
	0, 0, 343, 255, 0, 0, 404, 0, 197, 0,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 657, 347, 0, 0, 462, 375,
	0, 0, 0, 0, 0, 653, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 238, 306, 196, 387,
	463, 274, 0, 87, 0, 0, 188, 189, 190, 757,
	765, 766, 767, 768, 769, 758, 760, 0, 0, 229,
	759, 236, 684, 686, 685, 695, 696, 697, 698, 699,
	700, 701, 682, 762, 770, 771, 0, 253, 302, 260,
	252, 487, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 629, 643, 0,
	656, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 641, 0, 0, 0, 0, 727, 0, 642, 0,
	0, 650, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 376, 245, 0,
	726, 0, 0, 526, 0, 0, 724, 0, 0, 0,
	0, 342, 0, 311, 192, 216, 0, 0, 386, 429,
	439, 0, 0, 0, 243, 0, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 0, 0, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 0, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 690, 691, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 0, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 0,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 381, 294, 460, 312, 349, 0, 0,
	399, 438, 231, 508, 461, 734, 725, 661, 738, 663,
	735, 736, 658, 659, 662, 737, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 728, 649, 648, 0, 655,
	0, 680, 681, 683, 687, 688, 689, 692, 693, 694,
	702, 704, 705, 703, 706, 707, 708, 711, 712, 713,
	714, 709, 710, 715, 664, 668, 665, 666, 667, 679,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	748, 749, 750, 751, 647, 191, 212, 345, 0, 422,
	276, 542, 517, 513, 198, 214, 739, 250, 740, 0,
	0, 744, 0, 0, 0, 746, 745, 0, 747, 719,
	718, 0, 0, 741, 742, 0, 743, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 0, 0, 356,
	269, 289, 301, 0, 516, 467, 218, 434, 278, 241,
	764, 0, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 0, 371, 352, 483,
	484, 297, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 646,
	0, 0, 0, 258, 651, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	657, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 653, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 87,
	0, 0, 188, 189, 190, 757, 765, 766, 767, 768,
	769, 758, 760, 0, 0, 229, 759, 236, 684, 686,
	685, 695, 696, 697, 698, 699, 700, 701, 682, 762,
	770, 771, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 0, 656, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 641, 0, 0,
	0, 0, 727, 0, 642, 0, 0, 650, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 726, 0, 0, 526,
	0, 0, 724, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	690, 691, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 734, 725, 661, 738, 663, 735, 736, 658, 659,
	662, 737, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 728, 649, 648, 0, 655, 0, 680, 681, 683,
	687, 688, 689, 692, 693, 694, 702, 704, 705, 703,
	706, 707, 708, 711, 712, 713, 714, 709, 710, 715,
	664, 668, 665, 666, 667, 679, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 748, 749, 750, 751,
	647, 191, 212, 345, 0, 422, 276, 542, 517, 513,
	198, 214, 739, 250, 740, 0, 0, 744, 0, 0,
	0, 746, 745, 0, 747, 719, 718, 0, 0, 741,
	742, 0, 743, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 764, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 765, 766, 0, 0, 0, 0, 1769, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 0, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	0, 0, 0, 0, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 1074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 0, 0,
	1073, 526, 0, 0, 0, 0, 0, 1070, 1071, 342,
	1031, 311, 192, 216, 1064, 1068, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 0, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 0, 352, 483, 484, 297,
	371, 0, 0, 0, 78, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 343, 255, 0, 0, 404, 0, 197, 0, 452,
	242, 353, 350, 490, 270, 261, 257, 240, 298, 360,
	402, 472, 396, 0, 347, 0, 0, 462, 375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 238, 306, 196, 387, 463,
	274, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 328, 337, 336, 317, 318, 320, 322, 327, 334,
	340, 0, 0, 0, 0, 0, 253, 302, 260, 252,
	487, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 376, 245, 0, 0,
	0, 0, 526, 0, 0, 0, 0, 0, 0, 0,
	342, 0, 311, 192, 216, 0, 0, 386, 429, 439,
	0, 0, 0, 243, 0, 437, 400, 506, 224, 272,
	426, 406, 435, 413, 275, 0, 0, 436, 348, 492,
	420, 503, 527, 528, 251, 380, 514, 476, 522, 541,
	217, 248, 394, 469, 509, 459, 372, 488, 489, 310,
	458, 282, 195, 346, 533, 215, 445, 233, 222, 494,
	512, 277, 424, 204, 471, 501, 230, 449, 0, 0,
	543, 206, 499, 468, 368, 307, 308, 205, 0, 425,
	256, 280, 246, 389, 496, 497, 244, 544, 219, 521,
	211, 0, 520, 382, 491, 500, 369, 358, 210, 498,
	367, 357, 313, 332, 333, 268, 291, 418, 351, 419,
	292, 378, 377, 379, 199, 510, 0, 200, 0, 464,
	511, 545, 225, 226, 228, 0, 267, 271, 279, 281,
	287, 288, 296, 344, 393, 417, 415, 421, 0, 486,
	504, 515, 525, 531, 532, 534, 535, 536, 537, 538,
	540, 539, 381, 294, 460, 312, 349, 0, 0, 399,
	438, 231, 508, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 359, 451, 505, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 239, 202, 365, 373, 485, 295, 207,
	208, 209, 478, 479, 480, 481, 518, 519, 523, 430,
	431, 432, 433, 0, 191, 212, 345, 86, 422, 276,
	542, 517, 513, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 285,
	290, 293, 299, 300, 303, 309, 355, 361, 362, 363,
	364, 383, 384, 385, 388, 391, 392, 395, 397, 398,
	401, 405, 409, 410, 411, 412, 414, 416, 423, 428,
	440, 441, 442, 443, 444, 447, 448, 453, 454, 455,
	456, 457, 465, 466, 470, 493, 495, 507, 524, 529,
	446, 286, 502, 530, 0, 354, 0, 0, 356, 269,
	289, 301, 0, 516, 467, 218, 434, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 305, 366, 374,
	403, 408, 283, 259, 235, 427, 232, 450, 473, 474,
	475, 477, 370, 254, 407, 0, 1440, 352, 483, 484,
	297, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 1442, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 343, 255, 0,
	0, 404, 0, 197, 0, 452, 242, 353, 350, 490,
	270, 261, 257, 240, 298, 360, 402, 472, 396, 0,
	347, 0, 0, 462, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 238, 306, 196, 387, 463, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 1444, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 328, 337, 336,
	317, 318, 320, 322, 327, 334, 340, 0, 0, 0,
	0, 0, 253, 302, 260, 252, 487, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 1246, 0,
	1247, 1248, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 376, 245, 0, 0, 0, 0, 526, 0,
	0, 0, 0, 0, 0, 0, 342, 0, 311, 192,
	216, 0, 0, 386, 429, 439, 0, 0, 0, 243,
	0, 437, 400, 506, 224, 272, 426, 406, 435, 413,
	275, 0, 0, 436, 348, 492, 420, 503, 527, 528,
	251, 380, 514, 476, 522, 541, 217, 248, 394, 469,
	509, 459, 372, 488, 489, 310, 458, 282, 195, 346,
	533, 215, 445, 233, 222, 494, 512, 277, 424, 204,
	471, 501, 230, 449, 0, 0, 543, 206, 499, 468,
	368, 307, 308, 205, 0, 425, 256, 280, 246, 389,
	496, 497, 244, 544, 219, 521, 211, 0, 520, 382,
	491, 500, 369, 358, 210, 498, 367, 357, 313, 332,
	333, 268, 291, 418, 351, 419, 292, 378, 377, 379,
	199, 510, 0, 200, 0, 464, 511, 545, 225, 226,
	228, 0, 267, 271, 279, 281, 287, 288, 296, 344,
	393, 417, 415, 421, 0, 486, 504, 515, 525, 531,
	532, 534, 535, 536, 537, 538, 540, 539, 381, 294,
	460, 312, 349, 0, 0, 399, 438, 231, 508, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 359,
	451, 505, 314, 326, 329, 319, 338, 0, 339, 315,
	316, 321, 323, 324, 325, 330, 331, 335, 341, 239,
	202, 365, 373, 485, 295, 207, 208, 209, 478, 479,
	480, 481, 518, 519, 523, 430, 431, 432, 433, 0,
	191, 212, 345, 0, 422, 276, 542, 517, 513, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 285, 290, 293, 299, 300,
	303, 309, 355, 361, 362, 363, 364, 383, 384, 385,
	388, 391, 392, 395, 397, 398, 401, 405, 409, 410,
	411, 412, 414, 416, 423, 428, 440, 441, 442, 443,
	444, 447, 448, 453, 454, 455, 456, 457, 465, 466,
	470, 493, 495, 507, 524, 529, 446, 286, 502, 530,
	0, 354, 0, 0, 356, 269, 289, 301, 0, 516,
	467, 218, 434, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 305, 366, 374, 403, 408, 283, 259,
	235, 427, 232, 450, 473, 474, 475, 477, 370, 254,
	407, 0, 371, 352, 483, 484, 297, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 343, 255, 0, 0, 404, 0, 197,
	0, 452, 242, 353, 350, 490, 270, 261, 257, 240,
	298, 360, 402, 472, 396, 0, 347, 0, 0, 462,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 238, 306, 196,
	387, 463, 274, 0, 0, 0, 0, 188, 189, 190,
	1382, 1385, 0, 0, 0, 0, 1381, 1384, 0, 0,
	229, 1380, 236, 328, 337, 336, 317, 318, 320, 322,
	327, 334, 340, 0, 0, 0, 0, 0, 253, 302,
	260, 252, 487, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 376, 245,
	0, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 311, 192, 216, 0, 0, 386,
	429, 439, 0, 0, 0, 243, 0, 437, 400, 506,
	224, 272, 426, 406, 435, 413, 275, 0, 0, 436,
	348, 492, 420, 503, 527, 528, 251, 380, 514, 476,
	522, 541, 217, 248, 394, 469, 509, 459, 372, 488,
	489, 310, 458, 282, 195, 346, 533, 215, 445, 233,
	222, 494, 512, 277, 424, 204, 471, 501, 230, 449,
	0, 0, 543, 206, 499, 468, 368, 307, 308, 205,
	0, 425, 256, 280, 246, 389, 496, 497, 244, 544,
	219, 521, 211, 0, 520, 382, 491, 500, 369, 358,
	210, 498, 367, 357, 313, 332, 333, 268, 291, 418,
	351, 419, 292, 378, 377, 379, 199, 510, 0, 200,
	0, 464, 511, 545, 225, 226, 228, 0, 267, 271,
	279, 281, 287, 288, 296, 344, 393, 417, 415, 421,
	0, 486, 504, 515, 525, 531, 532, 534, 535, 536,
	537, 538, 540, 539, 381, 294, 460, 312, 349, 0,
	0, 399, 438, 231, 508, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 359, 451, 505, 314, 326,
	329, 319, 338, 0, 339, 315, 316, 321, 323, 324,
	325, 330, 331, 335, 341, 239, 202, 365, 373, 485,
	295, 207, 208, 209, 478, 479, 480, 481, 518, 519,
	523, 430, 431, 432, 433, 0, 191, 212, 345, 0,
	422, 276, 542, 517, 513, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 285, 290, 293, 299, 300, 303, 309, 355, 361,
	362, 363, 364, 383, 384, 385, 388, 391, 392, 395,
	397, 398, 401, 405, 409, 410, 411, 412, 414, 416,
	423, 428, 440, 441, 442, 443, 444, 447, 448, 453,
	454, 455, 456, 457, 465, 466, 470, 493, 495, 507,
	524, 529, 446, 286, 502, 530, 0, 354, 0, 0,
	356, 269, 289, 301, 0, 516, 467, 218, 434, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 305,
	366, 374, 403, 408, 283, 259, 235, 427, 232, 450,
	473, 474, 475, 477, 370, 254, 407, 0, 0, 352,
	483, 484, 297, 371, 0, 0, 0, 78, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 87, 0, 1421, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	86, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 0, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	0, 0, 0, 0, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 311, 192, 216, 0, 0, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 0, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 371, 352, 483, 484, 297,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 1910, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 343, 255, 0, 0,
	404, 0, 197, 0, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 0, 347,
	0, 0, 462, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	238, 306, 196, 387, 463, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 328, 337, 336, 317,
	318, 320, 322, 327, 334, 340, 0, 0, 0, 0,
	0, 253, 302, 260, 252, 487, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 376, 245, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 311, 192, 216,
	0, 0, 386, 429, 439, 0, 0, 0, 243, 0,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	0, 1908, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 0, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 332, 333,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	0, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 0, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 0, 0, 399, 438, 231, 508, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 359, 451,
	505, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 239, 202,
	365, 373, 485, 295, 207, 208, 209, 478, 479, 480,
	481, 518, 519, 523, 430, 431, 432, 433, 0, 191,
	212, 345, 0, 422, 276, 542, 517, 513, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 383, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 0, 0, 356, 269, 289, 301, 0, 516, 467,
	218, 434, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	0, 371, 352, 483, 484, 297, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 343, 255, 0, 0, 404, 0, 197, 0,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 0, 347, 0, 0, 462, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 238, 306, 196, 387,
	463, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 328, 337, 336, 317, 318, 320, 322, 327,
	334, 340, 0, 0, 0, 0, 0, 253, 302, 260,
	252, 487, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 376, 245, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 342, 1031, 311, 192, 216, 1029, 0, 386, 429,
	439, 0, 0, 0, 243, 0, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 0, 0, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 0, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 332, 333, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 0, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 0,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 381, 294, 460, 312, 349, 0, 0,
	399, 438, 231, 508, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 359, 451, 505, 314, 326, 329,
	319, 338, 0, 339, 315, 316, 321, 323, 324, 325,
	330, 331, 335, 341, 239, 202, 365, 373, 485, 295,
	207, 208, 209, 478, 479, 480, 481, 518, 519, 523,
	430, 431, 432, 433, 0, 191, 212, 345, 0, 422,
	276, 542, 517, 513, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 0, 0, 356,
	269, 289, 301, 0, 516, 467, 218, 434, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 0, 371, 352, 483,
	484, 297, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 1910, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	0, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 328, 337,
	336, 317, 318, 320, 322, 327, 334, 340, 0, 0,
	0, 0, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	332, 333, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	359, 451, 505, 314, 326, 329, 319, 338, 0, 339,
	315, 316, 321, 323, 324, 325, 330, 331, 335, 341,
	239, 202, 365, 373, 485, 295, 207, 208, 209, 478,
	479, 480, 481, 518, 519, 523, 430, 431, 432, 433,
	0, 191, 212, 345, 0, 422, 276, 542, 517, 513,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 1421, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 3111,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 0, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	0, 0, 0, 0, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 311, 192, 216, 0, 0, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 0, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 371, 352, 483, 484, 297,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 343, 255, 0, 0,
	404, 0, 197, 0, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 0, 347,
	0, 0, 462, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	238, 306, 196, 387, 463, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 2280, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 328, 337, 336, 317,
	318, 320, 322, 327, 334, 340, 0, 0, 0, 0,
	0, 253, 302, 260, 252, 487, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 376, 245, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 311, 192, 216,
	0, 0, 386, 429, 439, 0, 0, 0, 243, 0,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	0, 0, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 0, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 332, 333,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	0, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 0, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 0, 0, 399, 438, 231, 508, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 359, 451,
	505, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 239, 202,
	365, 373, 485, 295, 207, 208, 209, 478, 479, 480,
	481, 518, 519, 523, 430, 431, 432, 433, 0, 191,
	212, 345, 0, 422, 276, 542, 517, 513, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 383, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 0, 0, 356, 269, 289, 301, 0, 516, 467,
	218, 434, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	0, 371, 352, 483, 484, 297, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 343, 255, 0, 0, 404, 0, 197, 0,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 0, 347, 0, 0, 462, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 238, 306, 196, 387,
	463, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 2265, 0, 0, 0, 2266, 0, 0, 229,
	0, 236, 328, 337, 336, 317, 318, 320, 322, 327,
	334, 340, 0, 0, 0, 0, 0, 253, 302, 260,
	252, 487, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 376, 245, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 311, 192, 216, 0, 0, 386, 429,
	439, 0, 0, 0, 243, 0, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 0, 0, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 0, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 332, 333, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 0, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 0,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 381, 294, 460, 312, 349, 0, 0,
	399, 438, 231, 508, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 359, 451, 505, 314, 326, 329,
	319, 338, 0, 339, 315, 316, 321, 323, 324, 325,
	330, 331, 335, 341, 239, 202, 365, 373, 485, 295,
	207, 208, 209, 478, 479, 480, 481, 518, 519, 523,
	430, 431, 432, 433, 0, 191, 212, 345, 0, 422,
	276, 542, 517, 513, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 0, 0, 356,
	269, 289, 301, 0, 516, 467, 218, 434, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 0, 371, 352, 483,
	484, 297, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 1465, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	0, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 1464, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 328, 337,
	336, 317, 318, 320, 322, 327, 334, 340, 0, 0,
	0, 0, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	332, 333, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	359, 451, 505, 314, 326, 329, 319, 338, 0, 339,
	315, 316, 321, 323, 324, 325, 330, 331, 335, 341,
	239, 202, 365, 373, 485, 295, 207, 208, 209, 478,
	479, 480, 481, 518, 519, 523, 430, 431, 432, 433,
	0, 191, 212, 345, 0, 422, 276, 542, 517, 513,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 3237,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 0, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	0, 0, 0, 0, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 311, 192, 216, 0, 0, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 0, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 371, 352, 483, 484, 297,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 343, 255, 0, 0,
	404, 0, 197, 0, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 0, 347,
	0, 0, 462, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	238, 306, 196, 387, 463, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 328, 337, 336, 317,
	318, 320, 322, 327, 334, 340, 0, 0, 0, 0,
	0, 253, 302, 260, 252, 487, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 376, 245, 0, 0, 0, 0, 526, 0, 0,
	0, 3111, 0, 0, 0, 342, 0, 311, 192, 216,
	0, 0, 386, 429, 439, 0, 0, 0, 243, 0,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	0, 0, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 0, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 332, 333,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	0, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 0, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 0, 0, 399, 438, 231, 508, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 359, 451,
	505, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 239, 202,
	365, 373, 485, 295, 207, 208, 209, 478, 479, 480,
	481, 518, 519, 523, 430, 431, 432, 433, 0, 191,
	212, 345, 0, 422, 276, 542, 517, 513, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 383, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 0, 0, 356, 269, 289, 301, 0, 516, 467,
	218, 434, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	0, 371, 352, 483, 484, 297, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 343, 255, 0, 0, 404, 0, 197, 0,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 0, 347, 0, 0, 462, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 238, 306, 196, 387,
	463, 274, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 328, 337, 336, 317, 318, 320, 322, 327,
	334, 340, 0, 0, 0, 0, 0, 253, 302, 260,
	252, 487, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 376, 245, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 311, 192, 216, 0, 0, 386, 429,
	439, 0, 0, 0, 243, 0, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 0, 0, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 0, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 332, 333, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 0, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 0,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 381, 294, 460, 312, 349, 0, 0,
	399, 438, 231, 508, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 359, 451, 505, 314, 326, 329,
	319, 338, 0, 339, 315, 316, 321, 323, 324, 325,
	330, 331, 335, 341, 239, 202, 365, 373, 485, 295,
	207, 208, 209, 478, 479, 480, 481, 518, 519, 523,
	430, 431, 432, 433, 0, 191, 212, 345, 0, 422,
	276, 542, 517, 513, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 0, 0, 356,
	269, 289, 301, 0, 516, 467, 218, 434, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 0, 371, 352, 483,
	484, 297, 482, 0, 0, 0, 0, 1960, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	0, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 328, 337,
	336, 317, 318, 320, 322, 327, 334, 340, 0, 0,
	0, 0, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	332, 333, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	359, 451, 505, 314, 326, 329, 319, 338, 0, 339,
	315, 316, 321, 323, 324, 325, 330, 331, 335, 341,
	239, 202, 365, 373, 485, 295, 207, 208, 209, 478,
	479, 480, 481, 518, 519, 523, 430, 431, 432, 433,
	0, 191, 212, 345, 0, 422, 276, 542, 517, 513,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 1444, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 0, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	0, 0, 0, 0, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 311, 192, 216, 0, 0, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 0, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 371, 352, 483, 484, 297,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 343, 255, 0, 0,
	404, 0, 197, 0, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 0, 347,
	0, 0, 462, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	238, 306, 196, 387, 463, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 328, 337, 336, 317,
	318, 320, 322, 327, 334, 340, 0, 0, 0, 0,
	0, 253, 302, 260, 252, 487, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 376, 245, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 311, 192, 216,
	0, 0, 386, 429, 439, 0, 0, 0, 243, 0,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	0, 0, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 0, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 332, 333,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	0, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 0, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 0, 0, 399, 438, 231, 508, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 359, 451,
	505, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 239, 202,
	365, 373, 485, 295, 207, 208, 209, 478, 479, 480,
	481, 518, 519, 523, 430, 431, 432, 433, 0, 191,
	212, 345, 1720, 422, 276, 542, 517, 513, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 383, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 0, 0, 356, 269, 289, 301, 0, 516, 467,
	218, 434, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	0, 371, 352, 483, 484, 297, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	1590, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 343, 255, 0, 0, 404, 0, 197, 0,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 0, 347, 0, 0, 462, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 238, 306, 196, 387,
	463, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 328, 337, 336, 317, 318, 320, 322, 327,
	334, 340, 0, 0, 0, 0, 0, 253, 302, 260,
	252, 487, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 376, 245, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 311, 192, 216, 0, 0, 386, 429,
	439, 0, 0, 0, 243, 0, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 0, 0, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 0, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 332, 333, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 0, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 0,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 381, 294, 460, 312, 349, 0, 0,
	399, 438, 231, 508, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 359, 451, 505, 314, 326, 329,
	319, 338, 0, 339, 315, 316, 321, 323, 324, 325,
	330, 331, 335, 341, 239, 202, 365, 373, 485, 295,
	207, 208, 209, 478, 479, 480, 481, 518, 519, 523,
	430, 431, 432, 433, 0, 191, 212, 345, 0, 422,
	276, 542, 517, 513, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 0, 0, 356,
	269, 289, 301, 0, 516, 467, 218, 434, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 0, 371, 352, 483,
	484, 297, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 1588, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	0, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 328, 337,
	336, 317, 318, 320, 322, 327, 334, 340, 0, 0,
	0, 0, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	332, 333, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	359, 451, 505, 314, 326, 329, 319, 338, 0, 339,
	315, 316, 321, 323, 324, 325, 330, 331, 335, 341,
	239, 202, 365, 373, 485, 295, 207, 208, 209, 478,
	479, 480, 481, 518, 519, 523, 430, 431, 432, 433,
	0, 191, 212, 345, 0, 422, 276, 542, 517, 513,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 1586, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 1584, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 0, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	0, 0, 0, 0, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 311, 192, 216, 0, 0, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 0, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 371, 352, 483, 484, 297,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 1582, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 343, 255, 0, 0,
	404, 0, 197, 0, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 0, 347,
	0, 0, 462, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	238, 306, 196, 387, 463, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 328, 337, 336, 317,
	318, 320, 322, 327, 334, 340, 0, 0, 0, 0,
	0, 253, 302, 260, 252, 487, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 376, 245, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 311, 192, 216,
	0, 0, 386, 429, 439, 0, 0, 0, 243, 0,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	0, 0, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 0, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 332, 333,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	0, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 0, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 0, 0, 399, 438, 231, 508, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 359, 451,
	505, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 239, 202,
	365, 373, 485, 295, 207, 208, 209, 478, 479, 480,
	481, 518, 519, 523, 430, 431, 432, 433, 0, 191,
	212, 345, 0, 422, 276, 542, 517, 513, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 383, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 0, 0, 356, 269, 289, 301, 0, 516, 467,
	218, 434, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	0, 371, 352, 483, 484, 297, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	1578, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 343, 255, 0, 0, 404, 0, 197, 0,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 0, 347, 0, 0, 462, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 238, 306, 196, 387,
	463, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 328, 337, 336, 317, 318, 320, 322, 327,
	334, 340, 0, 0, 0, 0, 0, 253, 302, 260,
	252, 487, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 376, 245, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 311, 192, 216, 0, 0, 386, 429,
	439, 0, 0, 0, 243, 0, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 0, 0, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 0, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 332, 333, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 0, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 0,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 381, 294, 460, 312, 349, 0, 0,
	399, 438, 231, 508, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 359, 451, 505, 314, 326, 329,
	319, 338, 0, 339, 315, 316, 321, 323, 324, 325,
	330, 331, 335, 341, 239, 202, 365, 373, 485, 295,
	207, 208, 209, 478, 479, 480, 481, 518, 519, 523,
	430, 431, 432, 433, 0, 191, 212, 345, 0, 422,
	276, 542, 517, 513, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 0, 0, 356,
	269, 289, 301, 0, 516, 467, 218, 434, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 0, 371, 352, 483,
	484, 297, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 1576, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	0, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 328, 337,
	336, 317, 318, 320, 322, 327, 334, 340, 0, 0,
	0, 0, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	332, 333, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	359, 451, 505, 314, 326, 329, 319, 338, 0, 339,
	315, 316, 321, 323, 324, 325, 330, 331, 335, 341,
	239, 202, 365, 373, 485, 295, 207, 208, 209, 478,
	479, 480, 481, 518, 519, 523, 430, 431, 432, 433,
	0, 191, 212, 345, 0, 422, 276, 542, 517, 513,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 1574, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 0, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 1549, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	0, 0, 0, 0, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 311, 192, 216, 0, 0, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 0, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 371, 352, 483, 484, 297,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 0,
	1449, 258, 0, 0, 0, 0, 343, 255, 0, 0,
	404, 0, 197, 0, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 0, 347,
	0, 0, 462, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	238, 306, 196, 387, 463, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 328, 337, 336, 317,
	318, 320, 322, 327, 334, 340, 0, 0, 0, 0,
	0, 253, 302, 260, 252, 487, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 376, 245, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 311, 192, 216,
	0, 0, 386, 429, 439, 0, 0, 0, 243, 0,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	0, 0, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 0, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 332, 333,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	0, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 0, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 0, 0, 399, 438, 231, 508, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 359, 451,
	505, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 239, 202,
	365, 373, 485, 295, 207, 208, 209, 478, 479, 480,
	481, 518, 519, 523, 430, 431, 432, 433, 0, 191,
	212, 345, 0, 422, 276, 542, 517, 513, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 383, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 0, 0, 356, 269, 289, 301, 0, 516, 467,
	218, 434, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	0, 371, 352, 483, 484, 297, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 343, 255, 0, 0, 404, 0, 197, 0,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 0, 347, 0, 0, 462, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 238, 306, 196, 387,
	463, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	1223, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 328, 337, 336, 317, 318, 320, 322, 327,
	334, 340, 0, 0, 0, 0, 0, 253, 302, 260,
	252, 487, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 376, 245, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 311, 192, 216, 0, 0, 386, 429,
	439, 0, 0, 0, 243, 0, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 0, 0, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 0, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 332, 333, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 0, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 0,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 381, 294, 460, 312, 349, 0, 0,
	399, 438, 231, 508, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 359, 451, 505, 314, 326, 329,
	319, 338, 0, 339, 315, 316, 321, 323, 324, 325,
	330, 331, 335, 341, 239, 202, 365, 373, 485, 295,
	207, 208, 209, 478, 479, 480, 481, 518, 519, 523,
	430, 431, 432, 433, 0, 191, 212, 345, 0, 422,
	276, 542, 517, 513, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 0, 0, 356,
	269, 289, 301, 0, 516, 467, 218, 434, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 0, 371, 352, 483,
	484, 297, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	0, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 328, 337,
	336, 317, 318, 320, 322, 327, 334, 340, 0, 0,
	0, 0, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	332, 333, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	359, 451, 505, 314, 326, 329, 319, 338, 0, 339,
	315, 316, 321, 323, 324, 325, 330, 331, 335, 341,
	239, 202, 365, 373, 485, 295, 207, 208, 209, 478,
	479, 480, 481, 518, 519, 523, 430, 431, 432, 433,
	0, 191, 212, 345, 0, 422, 276, 542, 517, 513,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 835, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 621, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 620, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 371,
	352, 483, 484, 297, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	343, 255, 0, 0, 404, 0, 197, 0, 452, 242,
	353, 350, 490, 270, 261, 257, 240, 298, 360, 402,
	472, 396, 0, 347, 0, 0, 462, 375, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 238, 306, 196, 387, 463, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	328, 337, 336, 317, 318, 320, 322, 327, 334, 340,
	0, 0, 0, 0, 0, 253, 302, 260, 252, 487,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 376, 245, 0, 0, 567,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 342,
	0, 311, 192, 216, 0, 0, 386, 429, 439, 0,
	0, 0, 243, 0, 437, 400, 506, 224, 272, 426,
	406, 435, 413, 275, 0, 0, 436, 348, 492, 420,
	503, 527, 528, 251, 380, 514, 476, 522, 541, 217,
	248, 394, 469, 509, 459, 372, 488, 489, 310, 458,
	282, 195, 346, 533, 215, 445, 233, 222, 494, 512,
	277, 424, 204, 471, 501, 230, 449, 0, 0, 543,
	206, 499, 468, 368, 307, 308, 205, 0, 425, 256,
	280, 246, 389, 496, 497, 244, 544, 219, 521, 211,
	0, 520, 382, 491, 500, 369, 358, 210, 498, 367,
	357, 313, 332, 333, 268, 291, 418, 351, 419, 292,
	378, 377, 379, 199, 510, 0, 200, 0, 464, 511,
	545, 225, 226, 228, 0, 267, 271, 279, 281, 287,
	288, 296, 344, 393, 417, 415, 421, 0, 486, 504,
	515, 525, 531, 532, 534, 535, 536, 537, 538, 540,
	539, 381, 294, 460, 312, 349, 0, 0, 399, 438,
	231, 508, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 359, 451, 505, 314, 326, 329, 319, 338,
	0, 339, 315, 316, 321, 323, 324, 325, 330, 331,
	335, 341, 239, 202, 365, 373, 485, 295, 207, 208,
	209, 478, 479, 480, 481, 518, 519, 523, 430, 431,
	432, 433, 0, 191, 212, 345, 0, 422, 276, 542,
	517, 513, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 285, 290,
	293, 299, 300, 303, 309, 355, 361, 362, 363, 364,
	383, 384, 385, 388, 391, 392, 395, 397, 398, 401,
	405, 409, 410, 411, 412, 414, 416, 423, 428, 440,
	441, 442, 443, 444, 447, 448, 453, 454, 455, 456,
	457, 465, 466, 470, 493, 495, 507, 524, 529, 446,
	286, 502, 530, 0, 354, 0, 0, 356, 269, 289,
	301, 0, 516, 467, 218, 434, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 305, 366, 374, 403,
	408, 283, 259, 235, 427, 232, 450, 473, 474, 475,
	477, 370, 254, 407, 0, 371, 352, 483, 484, 297,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 343, 255, 0, 0,
	404, 0, 197, 0, 452, 242, 353, 350, 490, 270,
	261, 257, 240, 298, 360, 402, 472, 396, 0, 347,
	0, 0, 462, 375, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	238, 306, 196, 387, 463, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 328, 337, 336, 317,
	318, 320, 322, 327, 334, 340, 0, 0, 0, 0,
	0, 253, 302, 260, 252, 487, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 376, 245, 0, 0, 0, 0, 526, 0, 0,
	0, 0, 0, 0, 0, 342, 0, 311, 192, 216,
	0, 0, 386, 429, 439, 0, 0, 0, 243, 0,
	437, 400, 506, 224, 272, 426, 406, 435, 413, 275,
	0, 0, 436, 348, 492, 420, 503, 527, 528, 251,
	380, 514, 476, 522, 541, 217, 248, 394, 469, 509,
	459, 372, 488, 489, 310, 458, 282, 195, 346, 533,
	215, 445, 233, 222, 494, 512, 277, 424, 204, 471,
	501, 230, 449, 0, 0, 543, 206, 499, 468, 368,
	307, 308, 205, 0, 425, 256, 280, 246, 389, 496,
	497, 244, 544, 219, 521, 211, 0, 520, 382, 491,
	500, 369, 358, 210, 498, 367, 357, 313, 332, 333,
	268, 291, 418, 351, 419, 292, 378, 377, 379, 199,
	510, 0, 200, 0, 464, 511, 545, 225, 226, 228,
	0, 267, 271, 279, 281, 287, 288, 296, 344, 393,
	417, 415, 421, 0, 486, 504, 515, 525, 531, 532,
	534, 535, 536, 537, 538, 540, 539, 381, 294, 460,
	312, 349, 0, 0, 399, 438, 231, 508, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 359, 451,
	505, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 239, 202,
	365, 373, 485, 295, 207, 208, 209, 478, 479, 480,
	481, 518, 519, 523, 430, 431, 432, 433, 0, 191,
	212, 345, 0, 422, 276, 542, 517, 513, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 285, 290, 293, 299, 300, 303,
	309, 355, 361, 362, 363, 364, 3245, 384, 385, 388,
	391, 392, 395, 397, 398, 401, 405, 409, 410, 411,
	412, 414, 416, 423, 428, 440, 441, 442, 443, 444,
	447, 448, 453, 454, 455, 456, 457, 465, 466, 470,
	493, 495, 507, 524, 529, 446, 286, 502, 530, 0,
	354, 0, 0, 356, 269, 289, 301, 0, 516, 467,
	218, 434, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 305, 366, 374, 403, 408, 283, 259, 235,
	427, 232, 450, 473, 474, 475, 477, 370, 254, 407,
	0, 371, 352, 483, 484, 297, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 343, 255, 0, 0, 404, 0, 197, 0,
	452, 242, 353, 350, 490, 270, 261, 257, 240, 298,
	360, 402, 472, 396, 0, 347, 0, 0, 462, 375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 238, 306, 196, 387,
	463, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 328, 337, 336, 317, 318, 320, 322, 327,
	334, 340, 0, 0, 0, 0, 0, 253, 302, 260,
	252, 487, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 376, 245, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	0, 342, 0, 311, 192, 216, 0, 0, 386, 429,
	439, 0, 0, 0, 243, 0, 437, 400, 506, 224,
	272, 426, 406, 435, 413, 275, 0, 0, 436, 348,
	492, 420, 503, 527, 528, 251, 380, 514, 476, 522,
	541, 217, 248, 394, 469, 509, 459, 372, 488, 489,
	310, 458, 282, 195, 346, 533, 215, 445, 233, 222,
	494, 512, 277, 424, 204, 471, 501, 230, 449, 0,
	0, 543, 206, 499, 468, 368, 307, 308, 205, 0,
	425, 256, 280, 246, 389, 496, 497, 244, 544, 219,
	521, 211, 0, 520, 382, 491, 500, 369, 358, 210,
	498, 367, 357, 313, 332, 333, 268, 291, 418, 351,
	419, 292, 378, 377, 379, 199, 510, 0, 200, 0,
	464, 511, 545, 225, 226, 228, 0, 267, 271, 279,
	281, 287, 288, 296, 344, 393, 417, 415, 421, 0,
	486, 504, 515, 525, 531, 532, 534, 535, 536, 537,
	538, 540, 539, 381, 294, 460, 312, 349, 0, 0,
	399, 438, 231, 508, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 359, 451, 505, 314, 326, 329,
	319, 338, 0, 339, 315, 316, 321, 323, 324, 325,
	330, 331, 335, 341, 239, 202, 365, 373, 485, 295,
	207, 208, 209, 478, 479, 480, 481, 518, 519, 523,
	430, 431, 432, 433, 0, 191, 212, 345, 0, 422,
	276, 542, 517, 513, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	285, 290, 293, 299, 300, 303, 309, 355, 361, 362,
	363, 364, 383, 384, 385, 388, 391, 392, 395, 397,
	398, 401, 405, 409, 410, 411, 412, 414, 416, 423,
	428, 440, 441, 442, 443, 444, 447, 448, 453, 454,
	455, 456, 457, 465, 466, 470, 493, 495, 507, 524,
	529, 446, 286, 502, 530, 0, 354, 0, 0, 356,
	269, 289, 301, 0, 516, 467, 218, 434, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 305, 366,
	374, 403, 408, 283, 259, 235, 427, 232, 450, 473,
	474, 475, 477, 370, 254, 407, 0, 371, 352, 483,
	484, 297, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 343, 255,
	0, 0, 404, 0, 197, 0, 452, 242, 353, 350,
	490, 270, 261, 257, 240, 298, 360, 402, 472, 396,
	0, 347, 0, 0, 462, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 238, 306, 196, 387, 463, 274, 0, 0,
	0, 0, 188, 2785, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 328, 337,
	336, 317, 318, 320, 322, 327, 334, 340, 0, 0,
	0, 0, 0, 253, 302, 260, 252, 487, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 376, 245, 0, 0, 0, 0, 526,
	0, 0, 0, 0, 0, 0, 0, 342, 0, 311,
	192, 216, 0, 0, 386, 429, 439, 0, 0, 0,
	243, 0, 437, 400, 506, 224, 272, 426, 406, 435,
	413, 275, 0, 0, 436, 348, 492, 420, 503, 527,
	528, 251, 380, 514, 476, 522, 541, 217, 248, 394,
	469, 509, 459, 372, 488, 489, 310, 458, 282, 195,
	346, 533, 215, 445, 233, 222, 494, 512, 277, 424,
	204, 471, 501, 230, 449, 0, 0, 543, 206, 499,
	468, 368, 307, 308, 205, 0, 425, 256, 280, 246,
	389, 496, 497, 244, 544, 219, 521, 211, 0, 520,
	382, 491, 500, 369, 358, 210, 498, 367, 357, 313,
	332, 333, 268, 291, 418, 351, 419, 292, 378, 377,
	379, 199, 510, 0, 200, 0, 464, 511, 545, 225,
	226, 228, 0, 267, 271, 279, 281, 287, 288, 296,
	344, 393, 417, 415, 421, 0, 486, 504, 515, 525,
	531, 532, 534, 535, 536, 537, 538, 540, 539, 381,
	294, 460, 312, 349, 0, 0, 399, 438, 231, 508,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	359, 451, 505, 314, 326, 329, 319, 338, 0, 339,
	315, 316, 321, 323, 324, 325, 330, 331, 335, 341,
	239, 202, 365, 373, 485, 295, 207, 208, 209, 478,
	479, 480, 481, 518, 519, 523, 430, 431, 432, 433,
	0, 191, 212, 345, 0, 422, 276, 542, 517, 513,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 285, 290, 293, 299,
	300, 303, 309, 355, 361, 362, 363, 364, 383, 384,
	385, 388, 391, 392, 395, 397, 398, 401, 405, 409,
	410, 411, 412, 414, 416, 423, 428, 440, 441, 442,
	443, 444, 447, 448, 453, 454, 455, 456, 457, 465,
	466, 470, 493, 495, 507, 524, 529, 446, 286, 502,
	530, 0, 354, 0, 0, 356, 269, 289, 301, 0,
	516, 467, 218, 434, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 305, 366, 374, 403, 408, 283,
	259, 235, 427, 232, 450, 473, 474, 475, 477, 370,
	254, 407, 0, 371, 352, 483, 484, 297, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 343, 255, 0, 0, 404, 0,
	197, 0, 452, 242, 353, 350, 490, 270, 261, 257,
	240, 298, 360, 402, 472, 396, 0, 347, 0, 0,
	462, 375, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 238, 306,
	196, 387, 463, 274, 0, 0, 0, 0, 188, 2261,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 253,
	302, 260, 252, 487, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 376,
	245, 0, 0, 0, 0, 526, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 311, 192, 216, 0, 0,
	386, 429, 439, 0, 0, 0, 243, 0, 437, 400,
	506, 224, 272, 426, 406, 435, 413, 275, 0, 0,
	436, 348, 492, 420, 503, 527, 528, 251, 380, 514,
	476, 522, 541, 217, 248, 394, 469, 509, 459, 372,
	488, 489, 310, 458, 282, 195, 346, 533, 215, 445,
	233, 222, 494, 512, 277, 424, 204, 471, 501, 230,
	449, 0, 0, 543, 206, 499, 468, 368, 307, 308,
	205, 0, 425, 256, 280, 246, 389, 496, 497, 244,
	544, 219, 521, 211, 0, 520, 382, 491, 500, 369,
	358, 210, 498, 367, 357, 313, 332, 333, 268, 291,
	418, 351, 419, 292, 378, 377, 379, 199, 510, 0,
	200, 0, 464, 511, 545, 225, 226, 228, 0, 267,
	271, 279, 281, 287, 288, 296, 344, 393, 417, 415,
	421, 0, 486, 504, 515, 525, 531, 532, 534, 535,
	536, 537, 538, 540, 539, 381, 294, 460, 312, 349,
	0, 0, 399, 438, 231, 508, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 359, 451, 505, 314,
	326, 329, 319, 338, 0, 339, 315, 316, 321, 323,
	324, 325, 330, 331, 335, 341, 239, 202, 365, 373,
	485, 295, 207, 208, 209, 478, 479, 480, 481, 518,
	519, 523, 430, 431, 432, 433, 0, 191, 212, 345,
	0, 422, 276, 542, 517, 513, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 285, 290, 293, 299, 300, 303, 309, 355,
	361, 362, 363, 364, 383, 384, 385, 388, 391, 392,
	395, 397, 398, 401, 405, 409, 410, 411, 412, 414,
	416, 423, 428, 440, 441, 442, 443, 444, 447, 448,
	453, 454, 455, 456, 457, 465, 466, 470, 493, 495,
	507, 524, 529, 446, 286, 502, 530, 0, 354, 0,
	0, 356, 269, 289, 301, 0, 516, 467, 218, 434,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	305, 366, 374, 403, 408, 283, 259, 235, 427, 232,
	450, 473, 474, 475, 477, 370, 254, 407, 0, 0,
	352, 483, 484, 297,
}

var yyPact = [...]int{
	6258, -1000, -426, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2155, 2234, -1000, -1000,
	-1000, -1000, 2386, -1000, 789, 1862, -1000, 2142, 387, -1000,
	44587, 538, -1000, 43335, 534, 3772, 44587, -1000, 217, -1000,
	206, 44587, 210, 42709, -1000, -1000, -305, 19537, 2086, 83,
	82, 44587, -1000, -1000, -1000, -1000, 2334, 1851, -1000, 388,
	-1000, -1000, -1000, -1000, -1000, -1000, 42083, -1000, -1000, -1000,
	2154, 2136, 2369, 678, 2071, -1000, 2225, 1851, -1000, 19537,
	2286, 2242, 18911, -1000, 18911, 476, -1000, -1000, 14519, -1000,
	-1000, 25807, 44587, 32067, 300, -1000, 2142, -1000, -1000, -1000,
	106, -1000, 355, 1754, -1000, 1752, -1000, 733, 819, 393,
	517, 484, 392, 391, 385, 383, 382, 375, 374, 373,
	394, -1000, 712, 712, -109, -114, 3813, 478, 458, 458,
	491, 2107, 2104, -1000, 711, -1000, 712, 712, 712, 400,
	712, 712, 712, 712, 314, 312, 712, 712, 712, 712,
	712, 712, 712, 712, 712, 712, 712, 712, 712, 712,
	712, 712, 712, 431, 2142, 283, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 44587, 180, 44587, -1000, 592,
	44587, 871, 871, 133, 871, 871, 871, 871, 213, 660,
	81, -1000, 192, 275, 179, 286, 820, 349, -1000, -1000,
	280, 820, 1365, -1000, 685, 181, -1000, 871, 871, -1000,
	11995, 175, 11995, 11995, -1000, 2135, -1000, -1000, -1000, -1000,
	1246, -1000, 490, -1000, -1000, -1000, -1000, 44587, 41457, 419,
	739, -1000, -1000, -1000, 87, -1000, -1000, 1488, 1025, 19537,
	965, -1000, 1249, 639, -1000, -1000, -1000, -1000, -1000, 572,
	20163, 20163, 20163, 20163, -1000, -1000, 1472, 1472, 1472, 1472,
	20163, 1472, -1000, 1472, 1472, 1472, 19537, 1472, 1472, 1472,
	-1000, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, -1000, 1472, 590, 1472, 1472, 1472, 1472, 1472, -1000,
	-1000, -1000, -1000, 20163, 1472, 1472, 1472, 1472, 1472, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1472, 1472,
	1472, 1472, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23298, -1000, 17033, 1472, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 44587, -1000, 1472, 240, 44587,
	44587, 331, 2225, 1851, -1000, 2334, 2266, 388, -1000, 2324,
	1499, 1465, 1254, 1851, 1716, 44587, -1000, 1768, -1000, -1000,
	-1000, 1993, 1283, 1362, -1000, -1000, -1000, -1000, 1793, 19537,
	-1000, -1000, 2344, -1000, 22672, 586, 906, 2342, 40831, -1000,
	476, 476, 1749, 13888, 58, -1000, -1000, -1000, 735, 29563,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2135, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1745, 44587, -1000, -1000, 5631, 1278,
	-1000, 1859, -1000, 1738, -1000, 1812, 19537, 1772, 532, 1278,
	520, 511, 502, -1000, -28, -1000, -1000, -1000, -1000, -1000,
	-1000, 712, 712, 712, -1000, 340, 2285, 387, 3514, -1000,
	-1000, -1000, 40205, 1858, 1278, -1000, 1855, -1000, 847, 565,
	609, 609, 1278, -1000, -1000, 44587, 1278, 843, 835, 1278,
	1278, 44587, 44587, -1000, 39579, -1000, 38953, 38327, 1182, 44587,
	37701, 37075, 36449, 35823, 35197, -1000, 2045, -1000, 1843, -1000,
	-1000, -1000, 44587, 1278, 1278, 44587, 44587, 386, -1000, -1000,
	44587, 1278, -1000, -1000, 1162, 1158, 1151, 712, 712, 1150,
	1354, 1349, 1343, 712, 712, 1141, 1330, 30815, 1311, 285,
	1139, 1091, 1085, 1191, 1310, 211, 1308, 1147, 1093, 1084,
	44587, 1852, 44587, -1000, 267, 737, 460, 734, 2142, 2083,
	1741, 485, 531, 1278, 462, 462, 44587, -1000, 12626, -1000,
	-1000, 1305, 19537, -1000, 821, 820, 820, -1000, -1000, -1000,
	-1000, -1000, -1000, 871, 44587, 821, -1000, -1000, -1000, 820,
	871, 44587, 871, 871, 871, 871, 820, 820, 820, 871,
	44587, 44587, 44587, 44587, 44587, 44587, 44587, 44587, 44587, 11995,
	685, 871, -310, -1000, 1303, -1000, 1949, -1000, -1000, -1000,
	-1000, -1000, -1000, 11995, 11995, -1000, -1000, -1000, -1000, 209,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -59,
	1736, 34571, -1000, -318, -320, -321, -323, -1000, -1000, -1000,
	-334, -336, -1000, -1000, -1000, 19537, 19537, 19537, 19537, -142,
	-1000, 1009, 20163, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	148, 828, 20163, 20163, 20163, 20163, 20163, 20163, 20163, 20163,
	20163, 20163, 20163, 20163, 20163, 20163, 20163, -1000, -1000, 27685,
	4718, 4718, 639, 639, 639, 639, -1000, 18911, 19537, 19537,
	639, -1000, 1278, 18911, 18911, 19537, 745, 1025, 44587, -1000,
	1254, -1000, -1000, -1000, 1077, -1000, 879, 2126, 2126, 2126,
	2126, 19537, 19537, 19537, 19537, 19537, 19537, 19537, 19537, 19537,
	19537, 2126, 44587, 44587, 839, 19537, 19537, 19537, 19537, 19537,
	19537, 15776, 19537, 19537, 19537, 19537, 19537, 19537, 19537, 19537,
	19537, 19537, 19537, 19537, 19537, 19537, 19537, 19537, 19537, 19537,
	19537, 19537, 19537, 19537, 19537, 19537, 19537, 19537, 1254, 19537,
	1767, 19537, 19537, 15150, 12626, 18911, 18911, 18911, 18911, 18911,
	33945, -1000, -1000, -1000, -1000, -1000, 19537, 19537, 19537, 19537,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 584, 1471, 1511,
	1574, 19537, -1000, 1722, -1000, -134, 25181, 19537, 1302, 2341,
	1883, 44587, -1000, -1000, -1000, 2225, -1000, 2225, 1471, 2133,
	1923, 18911, -1000, -1000, 2133, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1516, -1000, 44587, 1716, 2192, 44587, 1981,
	1300, 412, -1000, 19537, 19537, 1714, -1000, 1051, 44587, -1000,
	-142, -1000, 33319, -1000, -1000, 11364, -1000, 44587, 364, 44587,
	-1000, 24555, 32693, 13257, 58, -1000, 13257, 1588, -1000, 48,
	50, 16402, 610, -1000, -1000, -1000, 3813, 21415, 1434, 610,
	134, -1000, -1000, -1000, 1812, -1000, 1812, 1812, 1812, 1812,
	412, 412, 412, 412, -1000, -1000, -1000, -1000, -1000, 1838,
	1832, -1000, 1812, 1812, 1812, 1812, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1827, 1827, 1827, 1815, 1815, 441, -1000,
	19537, 474, 32067, 2159, 1082, 1504, 267, 473, 1874, 1278,
	1278, 1278, 473, -1000, 1344, 1244, 1213, -1000, -418, 1711,
	-1000, -1000, 2279, -1000, -1000, 800, 866, 865, 722, 44587,
	246, 329, -1000, 423, -1000, 32067, 1278, 816, 609, 1278,
	-1000, 1278, -1000, -1000, -1000, -1000, -1000, 1278, -1000, -1000,
	1645, -1000, 1520, 946, 831, 938, 830, 1645, -1000, -1000,
	-87, 1645, -1000, 1645, -1000, 1645, -1000, 1645, -1000, 1645,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 742,
	223, -214, 44587, 246, 27685, -1000, 480, -1000, -1000, -1000,
	27685, 27685, -1000, -1000, -1000, -1000, 1299, 1297, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -399, 44587, -1000,
	260, 728, 317, 344, 326, 44587, 336, 2210, 2199, 2197,
	282, 306, 44587, 44587, 462, 1927, 44587, 2173, 44587, -1000,
	-1000, -1000, -1000, -1000, 1025, 44587, -1000, -1000, 871, 871,
	-1000, -1000, 44587, 871, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 871, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 44587, -1000,
	-1000, -1000, -1000, 44587, -1000, -1000, -1000, -1000, -1000, 96,
	43, 367, -1000, -1000, -1000, -1000, -1000, 2221, -1000, 1025,
	770, 777, -1000, 1472, -1000, -1000, 1028, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 148, 20163, 20163, 20163, 1608, 504,
	1619, 969, 1043, 933, 933, 849, 849, 653, 653, 653,
	653, 653, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1291, -1000, 1630, -1000, 1877, 1610, 1254, 1630, 1630, 1804,
	787, -1000, 19537, 1254, -1000, -1000, 1254, 1254, 1254, 19537,
	-1000, -1000, 19537, 19537, 19537, 19537, 1504, 1504, 1504, 1504,
	1504, 1504, 1504, 1504, 1504, 1504, 19537, 1637, 1624, 2321,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1341, 1504, 1504, 1504, 1504, 1504, 19537, 1489, -1000,
	-1000, -1000, 2467, 2458, 1254, 1488, 1254, 1612, -1000, 2432,
	1504, 2398, 2373, 2366, 1334, 2316, 2310, 2236, 1504, 1504,
	1504, 1734, 2206, 2198, 2098, 2053, 2042, 2027, 2023, 2005,
	1995, 1504, -144, 1504, 1254, -1000, -1000, -1000, -1000, 1952,
	1729, 1254, 18911, 18911, 1607, 1472, 581, -1000, 1630, 1254,
	1254, 1630, 1630, -1000, 1935, 1930, 1917, 1906, 12626, 1254,
	-1000, 1574, 44587, -1000, -273, -1000, 20, 720, 1472, -1000,
	30815, 1254, -1000, 4115, -1000, 45839, -1000, -1000, -1000, -1000,
	-1000, 28937, 1723, 2133, -1000, -1000, 1472, 1652, -1000, -1000,
	412, 122, 28311, 637, 637, 141, 1025, 1025, 19537, -1000,
	-1000, -1000, -1000, -1000, -1000, 580, 2244, 389, 1472, -1000,
	1601, 2240, -1000, -1000, -1000, 2188, 22046, -1000, 1472, 1472,
	44587, 1810, 1805, -1000, 579, -1000, 1588, 58, 25, -1000,
	-1000, -1000, -1000, 1025, -1000, 1148, 372, 315, -1000, 429,
	-1000, -1000, -1000, -1000, 2095, 131, -1000, -1000, -1000, 271,
	412, -1000, -1000, -1000, -1000, -1000, -1000, 1285, 1285, -1000,
	-1000, -1000, -1000, -1000, 1063, -1000, -1000, -1000, 1057, -1000,
	-1000, 1848, 1933, 474, -1000, -1000, 712, 1284, -1000, -1000,
	2099, 712, 712, 44587, -1000, -1000, 1419, 2159, 260, 44587,
	765, 1925, -1000, 1874, 1874, 1874, 44587, -1000, -1000, -1000,
	-1000, -1000, -1000, -406, 74, 407, -1000, -1000, -1000, 3375,
	44587, 1643, -1000, 244, -1000, 1407, -1000, 44587, -1000, 1635,
	1823, 1278, 1278, -1000, -1000, -1000, 44587, 1472, -1000, -1000,
	-1000, -1000, 527, 2137, 324, -1000, -1000, -166, -1000, -1000,
	246, 244, 610, 1278, -1000, -1000, -1000, -1000, -1000, -402,
	1632, 496, 251, 335, 44587, 44587, 44587, 44587, 44587, 549,
	-1000, -1000, -1000, -1000, 229, -1000, -1000, 229, -1000, -1000,
	-1000, -1000, 298, 479, -1000, 44587, 44587, 651, -1000, -1000,
	-1000, 820, -1000, -1000, 820, -1000, -1000, -1000, -1000, -1000,
	2122, 44587, 39, -352, -1000, -349, 19537, -1000, -1000, -1000,
	-1000, 1597, 498, 1619, 20163, 20163, 18911, -81, 454, 454,
	27685, -1000, -1000, -1000, 19537, 19537, 743, -1000, 19537, 1017,
	-1000, -1000, -1000, -1000, 1574, 1504, 1504, 1504, 1504, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1595,
	19537, 19537, 19537, 1254, 328, -1000, -1000, -1000, -1000, -1000,
	2317, -1000, 19537, 19537, 19537, -1000, -1000, 19537, 19537, -1000,
	19537, 19537, 20789, 1254, 20789, 19537, 19537, 20789, -1000, -1000,
	-1000, -1000, 20789, 19537, 19537, 19537, 19537, 19537, 19537, 19537,
	19537, 19537, -1000, -1000, 32067, 88, -144, 1767, 88, 1767,
	-1000, 1630, 1630, 18911, 12626, -1000, -1000, -1000, -1000, -1000,
	19537, 19537, 19537, 19537, -1000, -1000, -1000, -1000, -1000, -1000,
	720, -1000, 609, 609, 609, 44587, -1000, -1000, -1000, -1000,
	-1000, -1000, 1586, 2204, -1000, 2024, 2018, 2314, 2244, -1000,
	24555, 2133, -1000, -1000, 44587, -268, -1000, 2063, 2064, 637,
	637, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10733, 2225,
	19537, 1921, 44587, 157, -1000, 23929, 44587, 44587, 24555, 24555,
	24555, 24555, 24555, -1000, 1957, 1955, -1000, 2006, 1941, 2039,
	44587, -1000, 1620, 1254, 2266, 22046, 388, 19537, 26433, 1415,
	24555, -1000, -1000, 24555, 44587, 10102, -1000, -1000, 36, 45,
	-1000, -1000, -1000, -1000, 3813, -1000, -1000, 493, 2187, 2074,
	-1000, -1000, -1000, -1000, -1000, 1616, -1000, 1614, 1570, 1598,
	223, -1000, 1625, 2119, 712, 712, -1000, 1047, -1000, 1278,
	1282, 1250, -1000, -1000, -1000, 494, -1000, 2167, 44587, 1920,
	1919, 1916, -1000, -415, 1045, 1822, 1603, 19537, 1821, 2276,
	1523, 44587, -1000, -1000, 44587, -1000, 288, -1000, 474, 44587,
	-1000, -1000, -1000, 329, 44587, -1000, 6930, -1000, -1000, -1000,
	244, -1000, -1000, -1000, -1000, -1000, -1000, 44587, 261, -1000,
	1819, 1194, -1000, -1000, 1802, -1000, -1000, -1000, -1000, 239,
	311, 224, 1234, 224, -1000, 44587, 585, 1933, 44587, -1000,
	-1000, -1000, 871, 871, -1000, -1000, 2116, -1000, 1278, 1504,
	20163, 20163, -1000, 639, -1000, 1472, -124, 1812, 1812, -1000,
	1812, 1815, -1000, 1812, 199, 1812, 197, 1812, -1000, -1000,
	-124, 1254, 1725, 1292, -1000, 1025, 19537, -1000, -1000, -1000,
	-1000, -1000, -34, 1902, 1896, 1504, -1000, 1809, 1807, 19537,
	1504, 1504, 1504, -1000, 1025, 1334, 1890, 1530, -1000, -1000,
	-1000, -1000, 1564, 1504, 1872, -264, 1254, 1584, 1584, 1584,
	1584, 1584, 1574, 1574, 1574, 1574, 44587, -1000, -144, -1000,
	-1000, -186, -188, -1000, 1254, -144, 1554, -1000, -1000, 1254,
	-1000, 1712, 1708, 1836, 1666, -1000, 2216, 2216, 2216, 1567,
	45213, 44587, -1000, -1000, -1000, -1000, 2244, 2301, 1552, -1000,
	-1000, 122, 452, -1000, 2046, 2064, -1000, 2275, 2055, 2273,
	-1000, -1000, -1000, -1000, -1000, 1025, -1000, 2149, 1513, -1000,
	726, 1496, -1000, -1000, 18285, 1572, 2008, 578, 1567, 1548,
	2240, 1903, 1905, 2557, -1000, -1000, -1000, -1000, 1953, -1000,
	1912, -1000, -1000, 1768, -1000, -1000, 1511, 1254, 1557, 364,
	24555, 1482, 1482, -1000, 567, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 890, 6671, 2367, -1000, 1229, -1000, 1127, 198,
	1014, -1000, -1000, 712, 712, -1000, 801, 798, -1000, 44587,
	1799, -1000, 412, 1227, 412, 1013, -1000, 980, -1000, -1000,
	-1000, -1000, 1806, 1969, -1000, -1000, -1000, -1000, 44587, -1000,
	-1000, 44587, 44587, 44587, 1798, 2272, -1000, 19537, 1785, 724,
	1831, 44587, 44587, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 438, 712, -380, 303, 297, 712,
	712, 712, -417, -1000, -1000, 1560, 1550, -1000, -112, -1000,
	19537, -1000, -1000, -1000, 1071, 1071, -1000, 1768, -1000, -1000,
	-1000, 1400, -1000, -1000, -91, 44587, 44587, 44587, 44587, -1000,
	951, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 639, 20163, 1254, -1000, -1000, 412, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1254, -1000, 19537, -1000,
	19537, -1000, 1025, 2225, 1223, 19537, 19537, -1000, 977, 966,
	1504, -1000, -1000, -1000, 1254, 20789, -1000, 20789, -1000, 19537,
	249, 454, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1254, 337, -1000, -1000, -1000, -1000, 2308, -1000,
	1254, 19537, -1000, -1000, 19537, -1000, 19537, 19537, -1000, 19537,
	1472, 2129, 1472, 1472, 26433, -1000, -1000, 2301, 2298, 2262,
	2036, 2048, 2048, 2046, -1000, 2261, 2259, -1000, 1222, 2253,
	1216, 785, -1000, 44587, 19537, 157, -1000, 406, 44587, 157,
	44587, -1000, 2237, -1000, -1000, 19537, 1783, -1000, 19537, -1000,
	-1000, -1000, -1000, -1000, -1000, 4718, 2244, 1482, -1000, -1000,
	659, -1000, 19537, -1000, -1000, -1000, 4955, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1212, 1207, -1000, -1000, 1774,
	19537, -1000, -1000, -1000, 1397, 1388, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1768, -1000, -1000, -1000, -1000, 329,
	-410, 1826, 44587, 963, -1000, 1544, 1523, 321, 157, 1206,
	712, 712, 712, 961, 956, 30815, 1533, -1000, 44587, 404,
	-1000, 329, -1000, -117, -119, 1504, -1000, -1000, 2186, -1000,
	-1000, 12626, -1000, -1000, 1763, 1840, -1000, -1000, -1000, 318,
	-1000, -1000, -1000, 1504, 1504, 1254, -1000, 1504, 1504, 1383,
	1339, -1000, -1000, 1530, -1000, 1654, -1000, 249, 1254, 1897,
	-1000, -1000, 4718, -1000, -1000, 2237, 2243, 88, -1000, -1000,
	242, 88, 1025, 1542, 1504, 1514, 1452, 27059, -1000, 2241,
	2228, 31441, 31441, 720, 2298, -155, 19537, 19537, 2033, 991,
	-1000, -1000, -1000, -1000, 1198, 1196, -1000, 1192, -1000, 2364,
	-1000, 1025, -1000, 157, -1000, 563, 1496, -1000, 2225, 1025,
	44587, 1025, 101, 2237, -1000, 1504, -1000, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, -1000,
	-1000, 44587, 1811, -1000, -1000, 2180, 1467, 73, -1000, 1464,
	-1000, -1000, 154, -1000, 19537, -1000, 30815, 1188, 1186, -1000,
	-1000, -1000, -1000, -417, -1000, -1000, -1000, -1000, -1000, -1000,
	388, 1506, -1000, 695, 44587, 44587, 1254, 333, -97, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19537, -1000,
	1254, 1895, -1000, -250, -1000, -386, 19537, -144, -1000, -1000,
	-144, -1000, 19537, -1000, -1000, 19537, -1000, 19537, 1438, -1000,
	-1000, -1000, -1000, -1000, 1438, 1438, -1000, -155, -1000, 1498,
	-1000, 44587, 1025, 1488, -1000, 955, -1000, -1000, -1000, -1000,
	-1000, 44587, 1496, 44587, -1000, 1433, 1254, 1472, 2225, -1000,
	1394, -1000, 388, -1000, 1757, 1603, -1000, -1000, -1000, 17659,
	-1000, -1000, -1000, -1000, -1000, 237, -90, 12626, 9471, 1378,
	-1000, -1000, 1974, -85, -106, 1334, -1000, -338, -1000, -1000,
	-1000, -1000, 296, -1000, -1000, 1488, -1000, -1000, 1428, 1286,
	1243, 30189, -1000, -1000, -1000, -1000, -155, -1000, -1000, 2176,
	-1000, -1000, 1455, -1000, -1000, 26433, 43961, -1000, -79, 309,
	-90, 19537, 1756, 1254, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1, -1000, -1000, -1000, -1000, -1000, 1802, -1000,
	1971, -1000, 1254, -1000, 150, -367, -184, -189, -1000, -1000,
	-1000, 19537, -1000, 19537, -1000, 19537, -1000, -1000, -1000, 44587,
	1472, -1000, 1376, -1000, 4701, -199, 1892, -1000, -51, -1000,
	-1000, -1000, 888, 993, -1000, -1000, -1000, -1000, -1000, -1000,
	1739, 44587, -1000, 351, -1000, -1000, -91, -93, -1000, 773,
	-1000, -1000, -1000, -1000, -1000, 1156, 1035, 1504, -1000, 44587,
	-1000, 43961, -194, 610, 4718, -1000, 1878, 1820, 2337, -1000,
	-1000, -1000, -1000, -1000, -1000, -423, 1374, 262, -1000, -104,
	150, -1000, 19537, -1000, 19537, -1000, 1254, -1000, -1000, 2164,
	101, -1000, 2361, -1000, 2346, 643, 643, -1000, 942, -423,
	-1000, -110, -1000, 1504, 1504, -1000, -202, -1000, -1000, -1000,
	-1000, -1000, 422, 1119, -1000, -1000, -1000, -1000, -1000, -1000,
	4718, -1000, -1000, -1000, 226, 226, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2775, 2774, 33, 2, 43, 42, 2773, 37, 121,
	200, 50, 199, 123, 2772, 2771, 2770, 2769, 2768, 2767,
	2766, 233, 232, 231, 2765, 2761, 2760, 2759, 2757, 2756,
	2755, 2754, 2753, 2752, 227, 180, 192, 2751, 2750, 2748,
	144, 190, 103, 105, 194, 2744, 2743, 95, 2742, 2741,
	2740, 223, 221, 216, 803, 2739, 214, 151, 65, 2738,
	2737, 2736, 2735, 2734, 2733, 2732, 2731, 2730, 2729, 2728,
	2727, 2726, 2725, 2724, 2723, 2722, 277, 2721, 2720, 23,
	2719, 97, 2718, 2717, 2716, 2715, 11, 2713, 2709, 14,
	49, 2708, 2707, 59, 2706, 2705, 2704, 2702, 2701, 21,
	2700, 24, 2695, 44, 2694, 2693, 149, 2692, 2689, 2688,
	40, 2687, 2686, 2685, 2682, 2680, 2679, 2678, 166, 2676,
	2675, 2673, 202, 196, 2670, 2669, 253, 137, 132, 2668,
	2666, 128, 195, 2665, 143, 2664, 2661, 2660, 173, 2658,
	3362, 2657, 2655, 80, 99, 2654, 83, 2651, 10, 98,
	79, 5, 16, 6, 2650, 2649, 77, 94, 2648, 133,
	126, 86, 2646, 122, 111, 2645, 2641, 13, 3, 2638,
	4, 9, 7, 82, 2637, 2636, 145, 2635, 2628, 2618,
	110, 2617, 2616, 6162, 2615, 106, 157, 129, 93, 2614,
	55, 70, 2613, 2612, 2611, 2610, 2608, 66, 2604, 2600,
	2599, 167, 48, 184, 2598, 52, 46, 69, 159, 2595,
	45, 100, 2593, 165, 164, 2592, 2590, 76, 53, 47,
	2589, 125, 155, 142, 61, 120, 160, 2588, 2577, 73,
	90, 2576, 2575, 2574, 2573, 183, 2572, 2567, 85, 2566,
	71, 2564, 204, 2563, 19, 2556, 75, 58, 2551, 84,
	136, 88, 32, 2548, 220, 2547, 67, 182, 154, 179,
	2542, 2541, 2539, 2538, 191, 328, 2533, 2529, 127, 187,
	169, 172, 108, 2527, 348, 2526, 2525, 119, 1387, 4778,
	2522, 29, 181, 2521, 2518, 6340, 162, 41, 27, 2517,
	152, 2516, 2513, 2510, 197, 185, 139, 1038, 81, 2508,
	2506, 92, 18, 2503, 2499, 2497, 2495, 2492, 2490, 101,
	39, 36, 35, 205, 89, 20, 124, 176, 91, 2489,
	2488, 2484, 147, 118, 2483, 178, 177, 148, 130, 2473,
	188, 168, 153, 2468, 131, 34, 2467, 2466, 2465, 2464,
	107, 2463, 2461, 2456, 2451, 175, 170, 146, 104, 2447,
	102, 140, 174, 171, 68, 2444, 63, 2443, 2441, 30,
	193, 31, 2434, 17, 74, 78, 28, 134, 150, 2432,
	0, 2428, 22, 189, 347, 186, 2427, 2425, 8, 12,
	15, 2423, 2422, 2418, 2416, 161, 2415, 2406, 2401, 2396,
	26, 60, 25, 1, 141, 96, 2393, 2386, 5083, 2050,
	156, 2378, 206,
}

//line sql.y:7619
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 396, 397, 397, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 370, 370,
	370, 373, 373, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	400, 400, 178, 178, 176, 176, 177, 177, 249, 249,
	24, 25, 25, 259, 259, 258, 258, 258, 260, 260,
	260, 260, 297, 297, 26, 26, 26, 26, 26, 124,
	124, 372, 372, 371, 363, 363, 362, 362, 361, 369,
	369, 368, 368, 367, 38, 39, 48, 48, 48, 48,
	49, 50, 374, 374, 336, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 338, 338, 324, 324, 337, 337, 337, 337, 337,
	337, 337, 323, 323, 135, 135, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 389, 389, 389, 388, 388, 228, 228,
	228, 228, 228, 228, 228, 228, 145, 145, 156, 156,
	156, 156, 156, 143, 143, 144, 142, 142, 142, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 155, 155, 151, 151, 151, 152, 152,
	152, 153, 153, 390, 390, 390, 390, 302, 302, 302,
	302, 305, 305, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 304, 304, 304, 304, 304, 306, 306, 306,
	306, 306, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 308, 308,
	308, 308, 308, 308, 308, 308, 322, 322, 309, 309,
	317, 317, 318, 318, 318, 319, 319, 319, 320, 320,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 316,
	316, 315, 315, 315, 325, 350, 350, 349, 349, 347,
	347, 347, 347, 347, 347, 347, 347, 334, 334, 344,
	344, 344, 344, 344, 333, 333, 329, 329, 329, 330,
	330, 331, 331, 328, 328, 332, 332, 346, 346, 345,
	345, 326, 326, 327, 327, 352, 391, 391, 391, 391,
	391, 392, 392, 353, 381, 383, 383, 383, 382, 382,
	379, 380, 378, 378, 378, 378, 378, 81, 81, 81,
	272, 272, 273, 273, 342, 342, 341, 341, 341, 343,
	343, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 267, 267, 267, 377, 377, 377, 377, 377,
	377, 376, 376, 376, 339, 339, 339, 375, 375, 57,
	57, 211, 211, 394, 394, 395, 395, 395, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 106, 106, 107, 107, 107, 107, 109,
	109, 109, 355, 355, 58, 58, 3, 3, 166, 168,
	169, 169, 167, 167, 167, 167, 167, 167, 60, 60,
	59, 59, 171, 170, 172, 172, 172, 1, 1, 2,
	2, 4, 4, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 321, 321, 321, 354, 354,
	356, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 112, 111, 111, 110, 113, 113, 113, 113, 113,
	113, 113, 113, 358, 358, 358, 61, 61, 359, 310,
	311, 312, 5, 6, 335, 357, 120, 120, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 266,
	266, 275, 275, 265, 265, 290, 290, 290, 268, 268,
	268, 269, 269, 387, 387, 387, 262, 262, 64, 64,
	64, 66, 66, 67, 68, 68, 292, 292, 293, 293,
	69, 70, 82, 82, 82, 82, 82, 82, 105, 105,
	105, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 384, 384, 385, 386, 386, 386, 386,
	73, 75, 31, 31, 31, 31, 31, 31, 130, 130,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 125, 125, 125, 119, 119, 401, 76, 77,
	77, 123, 123, 123, 116, 116, 116, 122, 122, 122,
	16, 16, 17, 248, 248, 18, 18, 127, 127, 129,
	129, 129, 129, 129, 131, 131, 131, 131, 131, 131,
	131, 126, 126, 128, 128, 128, 128, 283, 283, 283,
	282, 282, 160, 160, 162, 161, 161, 163, 163, 164,
	164, 164, 164, 209, 209, 186, 186, 246, 246, 244,
	244, 245, 245, 247, 247, 247, 247, 250, 250, 165,
	165, 165, 165, 173, 173, 174, 174, 175, 175, 291,
	291, 288, 288, 288, 287, 287, 179, 179, 179, 181,
	180, 180, 180, 180, 182, 182, 184, 184, 183, 183,
	185, 190, 190, 189, 189, 187, 187, 187, 187, 188,
	188, 188, 188, 191, 191, 140, 140, 140, 140, 140,
	140, 140, 154, 154, 154, 154, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 235, 235, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 148, 83, 83, 83, 84,
	84, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	86, 141, 141, 88, 88, 87, 87, 204, 204, 280,
	280, 89, 90, 90, 93, 93, 92, 91, 91, 97,
	97, 94, 94, 96, 96, 95, 98, 98, 99, 100,
	100, 263, 263, 192, 192, 200, 200, 200, 200, 193,
	193, 193, 193, 193, 193, 193, 201, 201, 201, 208,
	202, 202, 198, 198, 198, 198, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 159, 159, 159,
	159, 216, 216, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 299, 299,
	366, 366, 365, 365, 364, 364, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 402, 402, 313,
	313, 313, 313, 199, 199, 199, 199, 199, 121, 121,
	121, 121, 121, 296, 296, 296, 300, 300, 300, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 301, 301, 214, 214, 117, 117,
	212, 212, 213, 215, 215, 210, 210, 210, 195, 195,
	195, 217, 217, 218, 218, 101, 102, 102, 103, 103,
	219, 219, 221, 220, 220, 222, 223, 223, 223, 224,
	224, 225, 225, 225, 47, 47, 47, 47, 47, 42,
	42, 42, 42, 43, 43, 43, 43, 132, 132, 132,
	132, 134, 134, 133, 133, 79, 79, 80, 80, 80,
	138, 138, 139, 139, 139, 136, 136, 137, 137, 242,
	242, 226, 226, 226, 233, 233, 233, 229, 229, 231,
	231, 231, 232, 232, 232, 230, 239, 239, 241, 241,
	240, 240, 236, 236, 237, 237, 238, 238, 238, 234,
	234, 194, 194, 194, 194, 194, 243, 243, 243, 243,
	251, 251, 205, 205, 207, 207, 206, 206, 158, 252,
	252, 256, 253, 253, 257, 257, 257, 257, 257, 254,
	254, 255, 255, 284, 284, 284, 261, 261, 274, 274,
	270, 270, 271, 271, 264, 264, 276, 276, 276, 74,
	203, 203, 351, 351, 348, 279, 279, 281, 281, 285,
	285, 289, 289, 286, 286, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 398, 399,
	294, 295, 295, 295,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 7, 7, 6,
	2, 2, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 5, 4, 2, 2, 1, 2, 2, 2,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 8, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 6, 5, 9, 6, 9, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 0, 2,
	0, 2, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 2, 1, 3, 0, 1,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 4, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -396, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -398,
	11, 438, 256, 255, 28, -12, 491, 86, -397, 635,
	-242, -226, 22, 33, 29, -225, -221, -123, -226, 20,
	18, 7, -76, -401, -76, -76, 12, 13, -76, -336,
	-338, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -360, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 491, 494, -343, 223, 229, 230,
	439, 123, 122, 75, 225, -340, 361, 524, 605, -56,
	607, 102, 104, 606, 44, 235, 608, 609, 610, 531,
	611, 244, 612, 613, 614, 615, 621, 573, 622, 623,
	624, 124, 7, -76, -289, -285, -370, -278, 89, 90,
	91, 488, 247, 522, 523, 296, 81, 41, 497, 358,
	361, 524, 468, 605, 307, 321, 315, 473, 474, 475,
	342, 334, 489, 525, 498, 299, 248, 284, 599, 332,
	132, 607, 302, 526, 262, 366, 367, 527, 368, 102,
	310, 405, 620, 301, 528, 618, 104, 606, 79, 467,
	51, 602, 44, 257, 330, 231, 326, 608, 285, 529,
	500, 278, 123, 120, 627, 36, 324, 50, 30, 617,
	122, 49, 609, 147, 530, 610, 531, 370, 349, 593,
	48, 371, 263, 532, 84, 268, 493, 305, 601, 372,
	325, 373, 295, 616, 228, 533, 585, 374, 375, 594,
	534, 350, 354, 535, 397, 472, 376, 634, 52, 536,
	537, 595, 121, 538, 78, 611, 80, 319, 320, 539,
	293, 246, 399, 346, 450, 457, 458, 108, 109, 453,
	110, 459, 111, 460, 461, 462, 451, 112, 105, 452,
	463, 464, 347, 348, 113, 465, 107, 106, 454, 456,
	114, 466, 244, 35, 377, 490, 297, 58, 272, 400,
	46, 352, 631, 45, 589, 540, 592, 345, 341, 447,
	53, 541, 542, 543, 544, 469, 612, 344, 318, 340,
	626, 4, 290, 470, 613, 62, 230, 356, 355, 357,
	279, 396, 337, 545, 546, 547, 251, 82, 548, 327,
	21, 549, 550, 378, 286, 551, 56, 552, 553, 403,
	260, 554, 54, 614, 39, 555, 265, 628, 615, 556,
	557, 558, 559, 267, 560, 380, 561, 379, 351, 353,
	274, 381, 492, 562, 306, 323, 264, 619, 563, 252,
	483, 484, 485, 486, 600, 266, 271, 259, 404, 253,
	564, 565, 566, 567, 568, 300, 584, 569, 570, 311,
	621, 448, 43, 571, 572, 573, 574, 575, 294, 289,
	398, 407, 61, 83, 363, 576, 577, 598, 317, 287,
	578, 308, 55, 622, 623, 624, 281, 625, 476, 477,
	478, 479, 9, 632, 633, 471, 383, 124, 291, 292,
	47, 338, 273, 579, 303, 580, 328, 329, 343, 316,
	339, 309, 586, 275, 384, 449, 261, 581, 406, 288,
	359, 364, 304, 496, 280, 385, 597, 495, 480, 481,
	336, 333, 282, 482, 582, 386, 236, 276, 277, 583,
	587, 387, 388, 298, 389, 390, 391, 392, 393, 395,
	394, 283, 494, 314, 331, 365, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 430, 431, 432,
	433, 434, 435, 436, 446, 234, -76, 234, -183, -285,
	234, -254, 367, -275, 369, 382, 377, 387, 375, -266,
	378, 380, 274, -387, 397, 234, 384, 222, 370, 379,
	388, 389, 298, 395, 390, 394, 283, 391, 392, 393,
	-370, 174, 610, 625, 132, 335, 374, 372, 398, 589,
	-285, 309, -292, 314, -279, -370, -278, 312, -183, -82,
	585, 226, -294, -294, -125, 589, 591, -202, -140, 140,
	-154, -157, -146, -149, -196, -197, -198, -199, -155, -210,
	163, 164, 171, 141, -208, -158, 26, 487, 440, 439,
	174, 31, -148, 68, 69, 442, 143, 57, 415, 416,
	-156, 410, 417, 412, 467, 469, 470, 471, 468, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 472,
	444, 445, 115, 446, 105, 107, 106, 447, 448, 449,
	347, 348, 450, 451, 452, 108, 109, 110, 111, 112,
	113, 114, 453, 456, 454, 455, 457, 458, 459, 464,
	465, 460, 461, 462, 463, 466, -85, -97, 513, 512,
	-98, -147, -279, -285, 239, 409, 233, 169, 438, -150,
	-144, -8, -206, 217, 408, 413, 414, 418, 411, 499,
	501, 516, 517, 519, 504, 509, 508, 511, 483, 484,
	485, 486, -370, -278, -152, -151, -192, 92, 98, 103,
	99, -393, 116, -398, 603, 93, 94, 95, 96, 97,
	117, 118, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 44, 383, 383, -183, -76, -76,
	-76, -76, -219, -123, -221, -10, -8, -398, 8, -76,
	-8, -9, -13, -34, -36, 518, -35, -285, -226, -242,
	12, 159, 42, 50, -224, -225, -12, -8, -140, 19,
	23, 24, -128, 165, -140, -285, -77, -128, -264, 238,
	-76, -76, -253, -297, 309, -257, 398, 397, -281, -255,
	-279, -277, -254, 396, 227, 23, 139, 25, 27, 142,
	174, 127, 19, 143, 37, 229, 335, 245, 173, 241,
	439, 222, 72, 499, 410, 412, 408, 415, 441, 442,
	409, 369, 31, 13, 501, 28, 255, 24, 38, 167,
	224, 146, 502, 258, 26, 256, 115, 118, 504, 22,
	75, 250, 14, 243, 40, 16, 505, 506, 17, 239,
	238, 159, 235, 70, 11, 217, 29, 155, 66, 507,
	134, 508, 509, 510, 511, 128, 68, 156, 20, 629,
	413, 414, 33, 590, 487, 269, 169, 73, 59, 591,
	140, 411, 512, 513, 116, 514, 119, 76, 596, 136,
	18, 71, 42, 515, 270, 516, 240, 630, 517, 401,
	518, 157, 225, 438, 69, 158, 603, 519, 604, 233,
	382, 8, 443, 32, 254, 242, 126, 67, 520, 234,
	145, 444, 445, 237, 129, 117, 7, 133, 34, 12,
	74, 77, 416, 417, 418, 57, 125, 491, 144, 15,
	521, 402, 138, 132, -337, 156, -323, -327, -279, 249,
	-353, 245, -183, -346, -345, -279, -398, -124, -274, 235,
	243, 242, 133, -374, 136, 291, 409, 233, -51, -52,
	-53, -254, 173, 609, -106, 266, 270, 87, 87, -327,
	-326, -325, -375, 270, 249, -352, -344, 241, 250, -333,
	242, 243, -328, 235, 134, -375, -328, 240, 250, 245,
	249, 270, 270, 124, 270, 124, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 265, -334, 148, -334, 495,
	495, -340, -375, 245, 235, -375, -375, 237, 35, 35,
	-276, -328, 237, 25, -334, -334, -334, -254, 173, -334,
	-334, -334, -334, 278, 278, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, 234, -374, -132, 394, 298, 81, -54, 280,
	-37, -183, -274, 235, 236, -374, 267, -183, 218, -183,
	-268, 156, 15, -268, -265, 383, 381, 368, 373, -268,
	-268, -268, -268, 281, 366, -329, 235, 35, 246, 383,
	281, 366, 281, 282, 281, 282, 376, 386, 281, -290,
	14, 159, 409, 371, 375, 274, 234, 275, 236, 385,
	282, -290, 93, -269, 156, 383, 277, -268, -268, -295,
	-398, -281, 335, -370, 592, -295, -295, 32, 90, 237,
	-279, -78, -279, 93, -15, -11, -22, -21, -23, 148,
	-130, 383, -118, 174, 610, 593, 594, 595, 592, 380,
	600, 598, 596, 281, 597, 87, 136, 138, 139, 4,
	-140, 155, -193, 148, 149, 150, 151, 152, 153, 154,
	159, 140, 142, 156, -235, 137, 160, 161, 162, 163,
	164, 165, 166, 168, 167, 169, 170, 157, 158, 173,
	220, 221, -149, -149, -149, -149, -208, -398, -398, -398,
	-149, -263, -398, -398, -398, -398, -214, -140, -398, -402,
	-398, -402, -402, -313, -398, -313, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, 218, -398, -398, -398, -398, -398,
	-149, -313, -313, -313, -313, -313, -398, -398, -398, -398,
	103, 98, 92, -210, 99, 93, -279, -285, -8, -9,
	-202, -398, -294, -384, -385, -186, -183, -398, 298, -279,
	-279, 267, -224, -12, -8, -219, -225, -221, -8, -76,
	-116, -129, 63, 64, -131, 24, 38, 67, 65, 23,
	-399, 88, -399, -242, -399, 87, -36, -246, 86, 61,
	43, 93, 93, 87, 21, -220, -222, -140, 14, -283,
	4, -282, 25, -279, 93, 218, 101, 14, -184, 29,
	-183, -264, -264, 87, 309, -257, -297, -259, -258, 399,
	401, 148, -284, -279, 93, 31, 88, 87, -183, -302,
	-305, -307, -306, -308, -303, -304, 332, 333, 174, 336,
	338, 339, 340, 341, 342, 343, 344, 345, 346, 349,
	32, 257, 328, 329, 330, 331, 350, 351, 352, 353,
	354, 355, 356, 357, 315, 334, 489, 316, 317, 318,
	319, 320, 321, 323, 324, 325, 326, 327, -373, -370,
	86, 88, 87, -309, 86, -140, -132, 234, -370, 235,
	235, 235, -76, 438, -334, -334, -334, 265, 19, -44,
	-41, -360, 18, -40, -41, 227, 120, 121, 224, 86,
	-323, 86, -332, -373, -370, 86, 134, 240, 133, -331,
	-328, -331, -332, -370, -210, -370, 134, 134, -370, -370,
	-250, -279, -250, -250, 23, -250, 23, -250, 23, 95,
	-279, -250, 23, -250, 23, -250, 23, -250, 23, -250,
	23, 31, 78, 79, 80, 31, 82, 83, 84, -210,
	-370, -370, -210, -323, -254, -183, -370, 95, 95, 95,
	-334, -334, 95, 93, 93, 93, -334, -334, 95, 93,
	-287, -285, 93, 93, -376, 251, 295, 297, 95, 95,
	95, 95, 31, 93, -377, 31, 617, 616, 618, 619,
	620, 93, 95, 31, 95, 31, 95, -279, 86, -183,
	-138, 285, 222, 224, 227, 76, 93, 299, 303, 304,
	148, 44, 87, 237, 234, -370, -270, 239, -270, -279,
	-286, -285, -277, 93, -140, -330, 14, 159, -290, -290,
	-268, -183, -330, -290, -268, -183, -268, -268, -268, -268,
	-290, -290, -290, -268, -285, -285, -183, -183, -183, -183,
	-183, -183, -183, -295, -269, -268, 592, 93, -262, 14,
	76, -295, -295, -293, 312, 346, 586, 587, 588, 87,
	491, -176, -183, 592, 592, 592, 592, 592, 592, -140,
	-140, -140, -140, 514, -200, 116, 140, 117, 118, -157,
	-201, -206, -208, 100, 159, 142, 156, -235, -146, -149,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -296, -279, 93, 174, -153, -152, 99,
	-393, -153, -126, -128, -140, -140, -370, -126, -126, -140,
	-212, -213, 144, -210, -399, -399, 95, 99, 165, -122,
	24, 38, -122, -122, -122, -122, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -122, -279, -279, -115,
	-114, 420, 421, 422, 423, 425, 426, 427, 430, 431,
	435, 436, 419, 437, 424, 429, 432, 433, 434, 428,
	331, -140, -140, -140, -140, -140, -140, -83, -140, 127,
	128, 129, -140, -140, -203, -202, -369, -368, -367, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -399, -140, -159, -144, 95, -370, 99, -140,
	-140, -127, 24, 38, -126, -281, -286, -277, -126, -127,
	-127, -126, -126, -279, -140, -140, -140, -140, 218, -242,
	-399, -202, 87, -386, 401, 402, 590, -288, 270, -287,
	25, -203, 93, 14, -248, 77, -279, -224, -224, 63,
	64, 59, -126, -131, -399, -35, 25, -244, -279, 62,
	93, -314, -254, 358, 359, 174, -140, -140, 87, -223,
	27, 28, -183, -282, 165, -286, -183, -249, 270, -183,
	-161, -163, -164, -165, -186, -209, -398, -166, 510, 507,
	14, -176, -177, -185, -285, -257, -259, 87, 400, 402,
	403, 76, 119, -140, -315, 173, -342, -341, -340, -323,
	-325, -326, -327, 88, -315, -319, 364, 363, -309, -309,
	-309, -309, -309, -314, -314, -314, -314, 86, 86, -309,
	-309, -309, -309, -317, 86, -317, -317, -318, 86, -318,
	-353, -140, -350, -349, -347, -348, 244, 102, 583, 539,
	491, 531, 573, 77, -345, -223, 95, -399, -138, -271,
	239, -351, -348, -370, -370, -370, -271, -370, 93, -370,
	93, -370, 93, -107, -58, -1, 629, 630, 631, 87,
	19, -324, -323, -57, 295, -356, -357, 270, -352, -346,
	-332, 134, -331, -332, -332, -370, 87, 29, 124, 124,
	124, 124, 491, 224, 32, -272, 530, 140, 583, 539,
	-323, -57, -296, 237, -296, -296, 93, 93, -267, 625,
	-176, -134, 287, 148, 276, 276, 234, 234, 289, -183,
	300, 302, 301, 299, 303, 304, 23, 23, 23, 288,
	290, 292, 278, -183, -183, -270, 76, -178, -183, 26,
	-285, -183, -268, -268, -183, -268, -268, -183, -279, -118,
	401, 87, 491, 22, -119, 22, -398, 116, 117, 118,
	-201, -146, -149, -146, 139, 258, 87, -399, 25, 87,
	77, -399, -399, -399, 87, 14, -215, -213, 146, -140,
	-399, -399, -399, -399, -202, -140, -140, -140, -140, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -202,
	87, 87, 14, -300, 25, -399, -399, -399, -399, -399,
	-214, -399, 14, 87, 87, -399, -399, 87, 87, -399,
	87, 87, 87, -366, 87, 87, 87, 87, -399, -399,
	-399, -399, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, -399, -90, 515, -399, -399, 87, -399, 87,
	-399, -126, -126, -398, 218, -399, -399, -399, -399, -399,
	87, 87, 87, 87, -281, -399, -385, 589, 402, -190,
	-189, -187, 74, 238, 75, -398, -287, -399, -153, 90,
	-245, 90, -244, -195, -279, 95, 99, -226, -160, -162,
	14, -131, -208, 88, 87, -314, -230, -236, -265, -279,
	93, 174, -316, 174, -316, 358, 359, -222, 218, -191,
	15, -194, 32, 57, -11, -398, -398, 32, 87, -179,
	-181, -180, -182, 66, 70, 72, 67, 68, 69, 73,
	-291, 25, -161, -9, -8, -398, -398, -398, -183, -176,
	-400, 14, 77, -400, 87, 218, -258, -260, 404, 401,
	407, -370, 93, -106, 87, -340, -327, -227, -135, 40,
	-320, 365, -314, 498, -314, -322, 93, -322, 95, 95,
	88, -47, -42, -43, 33, 81, -347, -334, 93, 39,
	-334, -334, -279, 88, -223, -134, -183, 140, 76, -351,
	-351, -351, -285, -2, 628, 634, 134, 86, 368, 18,
	-244, 87, 88, -211, 296, 88, -108, -279, 88, 86,
	-332, -332, -279, -398, 234, 31, 31, 583, 539, 530,
	-57, -211, -315, -370, 627, 626, 88, 236, 294, -139,
	415, -136, 93, 89, -183, -183, -183, -183, -183, 227,
	224, -394, 305, -394, 279, 237, -176, -183, 87, -81,
	253, 248, -290, -290, 33, -183, 401, 601, 599, -140,
	139, 258, -157, -149, -128, 488, -298, 174, 332, 257,
	330, 326, 346, 337, 363, 328, 364, 325, 324, 323,
	-298, -296, -140, -140, 147, -140, 145, -399, -399, -399,
	-399, -399, -219, -140, -140, -140, -399, 174, 332, 14,
	-140, -140, -140, -367, -140, -140, -140, -365, -364, -153,
	-210, -399, -365, -140, -140, -364, -364, -368, -368, -368,
	-368, -368, -202, -202, -202, -202, -398, -279, -93, -92,
	-91, 566, 238, -90, -159, -93, -159, -399, -399, -127,
	-281, -140, -140, -140, -140, -187, -328, -328, -328, -250,
	87, -261, 22, 14, 57, 57, -160, -191, -161, -131,
	-279, -233, 585, -239, 46, -237, -238, 47, -234, 48,
	56, -316, -316, 165, -224, -140, -251, 76, -252, -256,
	-210, -205, -207, -206, -398, -243, -399, -279, -250, -252,
	-163, -164, -164, -163, -164, 66, 66, 66, 71, 66,
	71, 66, -180, -285, -399, -399, -9, -9, -140, -288,
	77, -161, -161, -185, -285, 165, 401, 405, 406, -340,
	-392, 116, 140, 31, 76, 361, 102, -390, 173, 527,
	578, 583, 539, 531, 573, -391, 240, 133, 134, 252,
	25, 41, 88, 87, 88, 87, 88, 87, -273, -272,
	-43, -42, -334, -334, 95, -370, 93, 93, 236, 26,
	-183, 76, 76, 76, -109, 632, 95, 86, -3, 81,
	-140, 86, 19, -323, -210, -358, -310, -359, -311, -312,
	-5, -6, -335, -112, 57, 102, -61, 44, 235, 612,
	613, 124, -398, 625, -350, -244, -354, -356, -183, -143,
	-398, -142, -144, -150, 163, 164, -211, -183, -133, 285,
	293, 86, -137, 90, -372, 77, 276, 361, 276, -395,
	306, 93, -395, -183, -81, -47, -183, -268, -268, 33,
	-370, -399, -157, -149, -398, -301, 497, -309, -309, -309,
	-318, -309, 320, -309, 320, -309, -301, -399, 87, -399,
	22, -399, -140, -117, 443, 87, 87, -399, 86, 86,
	-140, -399, -399, -399, -366, 87, -399, 87, -399, 87,
	-299, 584, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -89, -280, -279, -90, 548, 548, -399, -90,
	-216, 87, -399, -399, 87, -399, 87, 87, -399, 87,
	-188, 22, -188, -188, -399, 90, -183, -191, -217, 16,
	-230, 51, 338, -241, -240, 55, 47, -238, 19, 49,
	19, 30, -251, 87, 148, 87, -399, -399, 87, 57,
	218, -399, -191, -174, -173, 76, 77, -175, 76, -173,
	66, 66, -246, -399, -399, 87, -249, -161, -191, -191,
	218, 116, -398, -145, -156, -143, 12, 93, 93, -370,
	-389, 616, 617, 31, 95, -334, -334, 134, 134, -183,
	86, -314, 93, -314, 95, 95, 31, 82, 83, 84,
	31, 78, 79, 80, -183, -183, -183, -183, -355, 86,
	19, -140, 86, 148, 88, -244, -244, 272, 159, -334,
	610, 278, 278, -334, -334, -334, -111, -110, 632, 88,
	-399, 87, -321, 491, 494, -140, -151, -151, -246, 88,
	-363, 491, -371, -279, -279, -279, -279, 95, 97, -146,
	-399, -314, -399, -140, -140, -224, 93, -140, -140, 95,
	95, -399, -399, -365, -364, -140, -399, -171, -170, -172,
	593, 116, 31, -298, -399, -204, 270, -96, -95, -94,
	14, -399, -140, -140, -140, -140, -140, -398, 66, 18,
	16, -398, -398, -288, -217, -218, 17, 19, -231, 53,
	-229, 52, -229, -240, 19, 19, 93, 19, 93, 134,
	-256, -140, -207, 57, -11, -279, -205, -279, -219, -140,
	86, -140, -153, -191, -191, -140, -197, 467, 469, 470,
	471, 468, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 472, 446, 105, 107, 106, 447, 448, 449,
	347, 348, 450, 451, 452, 108, 109, 110, 111, 112,
	113, 114, 453, 456, 454, 457, 458, 459, 464, 465,
	460, 461, 462, 463, 466, 483, 484, 485, 486, 93,
	93, 86, -140, 88, 88, -246, -354, -58, 88, -244,
	95, 88, 273, -206, -398, 93, -334, -334, -334, 95,
	95, -287, -399, 87, -279, -391, -356, 495, 495, -399,
	25, -362, -361, -281, 86, 77, -121, 159, 491, -399,
	-399, -399, -399, -399, 88, 88, -399, -399, 87, -399,
	-170, -172, -399, 76, -153, -219, 19, -93, 295, 297,
	-93, -399, 87, -399, -399, 87, -399, 87, -247, -399,
	-279, 240, 19, 19, -247, -247, -190, -218, -103, -102,
	-101, 521, -140, -202, -232, 54, 76, 119, 93, 93,
	93, 12, -205, 218, -224, -244, -168, 368, -219, -399,
	-244, 88, 25, 88, 634, 134, 88, -206, -120, -398,
	269, -287, 93, 93, -110, -113, -11, 87, 148, -244,
	-183, -399, 489, 73, 492, -140, -399, 76, 502, 593,
	-88, -87, -84, 604, 630, -202, -90, -90, -140, -140,
	-140, 87, -399, -399, -399, -103, 87, -100, -99, -279,
	76, 119, -252, -279, 88, -399, -398, -224, 88, -228,
	-11, 86, -3, 269, -310, -359, -311, -312, -5, -6,
	-335, -79, 491, -361, -339, -281, 93, 95, 88, 62,
	490, 493, -366, -86, 142, 602, 581, -141, -151, -148,
	-399, 87, -399, 87, -399, 87, -279, 240, -101, 87,
	25, -288, -169, -167, -279, 545, -382, -381, 487, -392,
	-388, 116, 140, 102, -390, 583, 539, 125, 126, -79,
	-140, 86, -399, -80, 284, 589, -372, 62, -399, -86,
	603, 559, 533, 559, 533, -140, -140, -140, -99, -398,
	-399, 87, 22, -302, -60, 556, -379, -380, 76, -383,
	374, 555, 576, 116, 93, 88, -244, 245, -363, 491,
	139, -399, 87, -399, 87, -399, -89, -167, 552, -315,
	-153, -380, 76, -379, 76, 13, 12, -4, 633, 88,
	286, 492, -86, -140, -140, -399, -59, 26, -168, -378,
	253, 248, 251, 32, -378, 95, -4, 493, -399, -399,
	556, 247, 31, 116, -153, -171, -170, -170,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1411, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1940, 1940, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1270, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1938, 1, 3,
	69, 73, 0, 0, 0, 56, 1279, 0, 76, 0,
	0, 831, 0, 829, 0, 1394, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1396, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1297, 153, 1412, 1409, 1410, 38, 39,
	40, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 0, 1388, 0, 686, 928,
	0, 748, 748, 0, 748, 748, 748, 748, 0, 0,
	0, 698, 0, 0, 0, 0, 745, 0, 714, 715,
	0, 745, 0, 721, 751, 0, 726, 748, 748, 729,
	1941, 0, 1941, 1941, 1379, 0, 742, 740, 754, 755,
	758, 762, 0, 767, 770, 1405, 1406, 0, 785, 47,
	1659, 777, 790, 791, 0, 823, 824, 43, 1070, 0,
	950, 955, 966, 981, 982, 983, 984, 985, 987, 988,
	0, 0, 0, 0, 993, 994, 0, 0, 0, 0,
	0, 1051, 1002, 0, 0, 0, 1246, 0, 1207, 1207,
	1086, 1207, 1209, 1209, 1612, 1738, 1746, 1858, 1575, 1580,
	1581, 1582, 1851, 1852, 1853, 1854, 1891, 1892, 1896, 1668,
	0, 0, 0, 1937, 1701, 1709, 1710, 1732, 1824, 1878,
	1705, 1706, 1687, 1699, 1702, 1690, 1691, 1693, 1695, 1700,
	1707, 1713, 1692, 1712, 1711, 0, 1688, 1689, 1694, 1704,
	1708, 1696, 1697, 1698, 1703, 1714, 0, 0, 0, 0,
	0, 1156, 1255, 0, 0, 0, 0, 0, 0, 273,
	274, 1069, 1368, 0, 1209, 1209, 1209, 1209, 1209, 1011,
	1012, 1013, 1014, 1015, 1039, 1040, 1046, 1047, 1803, 1804,
	1805, 1806, -2, -2, 219, 220, 221, 222, 223, 224,
	225, 0, 215, 0, 0, 278, 279, 275, 276, 277,
	1053, 1054, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 1940, 0, 800, 0, 0, 0,
	0, 0, 1279, 0, 1271, 1270, 61, 0, 827, -2,
	0, 0, 0, 0, 45, 0, 50, 887, 75, 74,
	1319, 0, 0, 0, 57, 1280, 65, 67, 1281, 0,
	832, 833, 0, 863, 867, 0, 828, 0, 0, 1395,
	1394, 1394, 100, 0, 1874, 1372, -2, -2, 0, 0,
	1407, 1408, 1381, -2, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, -2, 0, 0, 165, 166, 0, 41,
	404, 0, 161, 0, 397, 338, 0, 1297, 0, 0,
	0, 0, 0, 827, 0, 1389, 142, 143, 150, 151,
	152, 377, 377, 377, 549, 0, 0, 153, 153, 508,
	509, 510, 0, 0, -2, 402, 0, 488, 0, 0,
	391, 391, 395, 393, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 526, 0, 527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 0, 378, 0, 547,
	548, 440, 0, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 1397, 1398, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1310, 0, 0, 0, -2, 0,
	678, 0, 0, 0, 1390, 1390, 0, 685, 0, 687,
	688, 0, 0, 689, 0, 745, 745, 743, 744, 691,
	692, 693, 694, 748, 0, 0, 386, 387, 388, 745,
	748, 0, 748, 748, 748, 748, 745, 745, 745, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1941,
	751, 748, 0, 722, 0, 723, 724, 727, 728, 730,
	1942, 1943, 1427, 1941, 1941, 734, 738, 1380, 760, 768,
	771, 788, 786, 787, 789, 781, 782, 783, 784, 0,
	802, 803, 808, 0, 0, 0, 0, 814, 815, 816,
	0, 0, 819, 820, 821, 0, 0, 0, 0, 0,
	948, 0, 0, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 968, 0,
	0, 0, 989, 990, 991, 992, 995, 0, 0, 0,
	1000, 1001, 0, 0, 0, 0, 0, 1247, 0, 1084,
	0, 1085, 1087, 1088, 0, 1089, 837, 837, 837, 837,
	837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1400, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 0, 0, 847, 847, 0, 0,
	0, 208, 209, 210, 211, 212, 0, 0, 0, 0,
	226, 227, 228, 229, 230, 280, 1255, 0, 1069, 0,
	0, 0, 44, 792, 793, 0, 911, 1400, 0, 0,
	843, 0, 55, 64, 66, 1279, 59, 1279, 0, 849,
	0, 0, -2, -2, 850, 856, 857, 858, 859, 860,
	52, 1939, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 350, 1322, 0, 0, 1272, 1273, 1276, 0, 864,
	1744, 868, 0, 870, 871, 0, 830, 0, 98, 0,
	927, 0, 0, 0, 1874, 1378, 0, 102, 103, 0,
	0, 0, 361, 1383, 1384, 1385, -2, 384, 0, 361,
	345, 288, 289, 290, 338, 292, 338, 338, 338, 338,
	350, 350, 350, 350, 321, 322, 323, 324, 325, 0,
	0, 307, 338, 338, 338, 338, 328, 329, 330, 331,
	332, 333, 334, 335, 293, 294, 295, 296, 297, 298,
	299, 300, 301, 340, 340, 340, 342, 342, 0, 42,
	0, 365, 0, 1276, 0, 0, 1310, 1392, 1402, 0,
	0, 0, 1392, 120, 0, 0, 0, 550, 584, 502,
	538, 551, 0, 505, 506, -2, 0, 0, 487, 0,
	489, 0, 385, 0, -2, 0, 395, 0, 391, 395,
	392, 395, 383, 396, 528, 529, 530, 0, 532, 533,
	614, 897, 0, 0, 0, 0, 0, 620, 621, 622,
	0, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 539, 540, 541, 542, 543, 544, 545, 546, 0,
	0, 0, 0, 489, 0, 535, 0, 441, 442, 443,
	0, 0, 446, 447, 448, 449, 0, 0, 452, 453,
	454, 914, 915, 455, 456, 481, 482, 483, 457, 458,
	459, 460, 461, 462, 463, 475, 476, 477, 478, 479,
	480, 464, 465, 466, 467, 468, 469, 472, 0, 135,
	1301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 846,
	929, 1413, 1414, 749, 750, 0, 389, 390, 748, 748,
	695, 735, 0, 748, 699, 736, 700, 702, 701, 703,
	716, 717, 748, 706, 746, 747, 707, 708, 709, 710,
	711, 712, 713, 731, 718, 719, 720, 752, 0, 756,
	757, 732, 733, 0, 769, 773, 774, 775, 776, 0,
	0, 805, 94, 810, 811, 812, 813, 825, 818, 1071,
	945, 946, 947, 0, 949, 952, 0, 1055, 1057, 954,
	956, 1066, 1067, 1068, 0, 0, 0, 0, 0, 960,
	964, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 986, 1223, 1224, 1225, 1003, 281, 282,
	0, 1004, 0, 861, 0, 0, 0, 0, 0, 0,
	1253, 1250, 0, 0, 1208, 1210, 0, 0, 0, 0,
	838, 839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1226, 0, 0, 0, 0, 0, 1246, 0, 1006,
	1007, 1008, 0, 0, 0, 1401, 0, 130, 131, 0,
	0, 0, 0, 0, 1180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 1158, 1159, 1160, 0,
	0, 0, 0, 0, 848, 1256, 0, -2, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 0,
	1366, 0, 0, 795, 796, 798, 0, 931, 0, 912,
	0, 0, 801, 0, 842, 0, 845, 58, 60, 854,
	855, 0, 872, 851, 54, 49, 0, 0, 889, 1320,
	350, 1342, 0, 359, 359, 356, 1282, 1283, 0, 1275,
	1277, 1278, 77, 869, 865, 0, 943, 0, 0, 926,
	0, 875, 877, 878, 879, 909, 0, 882, 0, 0,
	0, 0, 0, 96, 928, 1373, 101, 0, 0, 106,
	107, 1374, 1375, 1376, 1377, 0, 573, -2, 436, 167,
	169, 170, 171, 162, -2, 348, 346, 347, 291, 350,
	350, 315, 316, 317, 318, 319, 320, 0, 0, 308,
	309, 310, 311, 302, 0, 303, 304, 305, 0, 306,
	403, 0, 1284, 366, 367, 369, 377, 0, 372, 373,
	0, 377, 377, 0, 398, 399, 0, 1276, 1301, 0,
	0, 0, 1403, 1402, 1402, 1402, 0, 155, 156, 157,
	158, 159, 160, 609, 0, 0, 585, 607, 608, 153,
	0, 0, 163, 491, 490, 0, 641, 0, 401, 0,
	0, 395, 395, 380, 381, 531, 0, 0, 616, 617,
	618, 619, 0, 0, 0, 518, 430, 0, 519, 520,
	489, 491, 361, 0, 444, 445, 450, 451, 470, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 493, 571, 568, 493, 572, 1298,
	1299, 1300, 0, 0, 679, 0, 0, 427, 92, 1391,
	684, 745, 705, 737, 745, 697, 704, 725, 765, 809,
	0, 0, 0, 0, 817, 0, 0, 953, 1056, 1058,
	957, 0, 961, 965, 0, 0, 0, 0, 0, 0,
	0, 1052, 1076, 1077, 0, 0, 0, 1251, 0, 0,
	1083, 1211, 1212, 1090, 0, 0, 0, 0, 0, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1270,
	0, 0, 0, 0, 0, 1111, 1112, 1113, 1114, 1115,
	0, 1117, 0, 0, 0, 1121, 1122, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 1135, 1136,
	1137, 1138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1149, 1150, 0, 1034, 0, 0, 1034, 0,
	1072, 0, 0, 847, 0, 1213, 1214, 1215, 1216, 1217,
	0, 0, 0, 0, 1256, 1367, 794, 797, 799, 885,
	932, 933, 0, 0, 0, 0, 913, 1399, 840, 841,
	844, -2, 0, 0, 1258, 0, 0, 872, 943, 873,
	0, 852, 51, 888, 0, 1324, 1323, 1336, 1349, 359,
	359, 353, 354, 360, 355, 357, 358, 1274, 0, 1279,
	0, 1360, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 916, 0, 0, 919, 0, 0, 0,
	0, 910, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 90, 91, 0, 0, 0, 104, 105, 0, 0,
	111, 362, 363, 144, 153, 438, 168, 411, 0, 0,
	287, 349, 312, 313, 314, 0, 336, 0, 0, 0,
	432, 116, 1288, 1287, 377, 377, 368, 0, 371, 0,
	0, 0, 1404, 339, 400, 0, 134, 0, 0, 0,
	0, 0, 140, 579, 0, 0, 586, 0, 0, 0,
	500, 0, 511, 512, 0, 613, -2, 675, 365, 0,
	379, 382, 898, 0, 0, 513, 0, 516, 517, 431,
	491, 522, 523, 536, 473, 474, 471, 0, 0, 1311,
	1312, 1317, 1315, 1316, 121, 557, 559, 558, 562, 0,
	0, 495, 0, 495, 555, 0, 427, 1284, 0, 683,
	428, 429, 748, 748, 804, 95, 0, 807, 0, 0,
	0, 0, 958, 962, 862, 0, 1244, 338, 338, 1231,
	338, 342, 1234, 338, 1236, 338, 1239, 338, 1242, 1243,
	1244, 0, 0, 0, 1082, 1254, 0, 1091, 1092, 1093,
	1094, 1095, 1248, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 132, 133, 1180, 0, 0, 1182, 1184,
	1185, 1127, 1181, 0, 0, 1178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1029, 1033, 0, 1035,
	1036, 0, 0, 1152, 0, 0, 1161, 1073, 1074, 0,
	1257, 0, 0, 0, 0, 934, 939, 939, 939, 0,
	0, 0, 1386, 1387, 1259, 1260, 943, 1261, 874, 853,
	890, 1342, 0, 1335, 0, -2, 1344, 0, 0, 0,
	1350, 351, 352, 866, 78, 944, 81, 0, 1360, 1369,
	0, 1351, 1362, 1364, 0, 0, 0, 1356, 0, 943,
	876, 905, 907, 0, 902, 917, 918, 920, 0, 922,
	0, 924, 925, 887, 881, 883, 0, 0, 0, 98,
	0, 943, 943, 97, 0, 930, 108, 109, 110, 437,
	172, 177, 0, 0, 0, 182, 0, 184, 0, 0,
	0, 189, 190, 377, 377, 412, 0, 284, 286, 0,
	0, 175, 350, 0, 350, 0, 343, 0, 413, 433,
	1285, 1286, 0, 0, 370, 374, 375, 376, 0, 1393,
	136, 0, 0, 0, 582, 0, 610, 0, 0, 0,
	0, 0, 0, 164, 492, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 0, 377, 0, 0, 0, 377,
	377, 377, 0, 667, 364, 0, 0, 638, 635, 514,
	0, 213, 214, 216, 0, 0, 521, 887, 1302, 1303,
	1304, 0, 1314, 1318, 124, 0, 0, 0, 0, 569,
	0, 494, 570, 680, 681, 682, 93, 690, 696, 806,
	826, 951, 959, 963, 0, 0, 1245, 1229, 350, 1232,
	1233, 1235, 1237, 1238, 1240, 1241, 0, 999, 0, 1079,
	0, 1081, 1252, 1279, 0, 0, 0, 1109, 0, 0,
	0, 1118, 1119, 1120, 0, 0, 1126, 0, 1128, 0,
	0, 0, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 0, 1027, 1030, 1151, 1037, 1038, 1043, 1154,
	0, 0, 1075, 1163, 0, 1168, 0, 0, 1174, 0,
	0, 0, 0, 0, 911, -2, 62, 1261, 1263, 0,
	1329, 1327, 1327, 1337, 1338, 0, 0, 1345, 0, 0,
	0, 0, 82, 0, 0, 0, 1365, 0, 0, 0,
	0, 99, 1270, 899, 906, 0, 0, 900, 0, 901,
	921, 923, 880, -2, 884, 0, 943, 943, 88, 89,
	0, 178, 0, 180, 206, 207, 0, 183, 185, 186,
	187, 193, 194, 195, 188, 0, 0, 283, 285, 0,
	0, 326, 337, 327, 0, 0, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 887, 137, 138, 139, 574, 0,
	584, 0, 0, 0, 577, 0, 503, 0, 0, 0,
	377, 377, 377, 0, 0, 0, 0, 652, 0, 0,
	615, 0, 623, 0, 0, 0, 217, 218, 0, 1313,
	556, 0, 122, 123, 0, 0, 561, 496, 497, 1218,
	997, 1230, 998, 0, 0, 0, 1249, 0, 0, 0,
	0, 1116, 1124, 0, 1183, 0, 1131, 0, 0, 0,
	604, 605, 0, 1179, 1032, 1270, 0, 1034, 1044, 1045,
	0, 1034, 1162, 0, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 931, 1263, 1268, 0, 0, 1332, 0,
	1325, 1328, 1326, 1339, 0, 0, 1346, 0, 1348, 0,
	1370, 1371, 1363, 0, 1355, 1358, 1354, 1357, 1279, 903,
	0, 908, 0, 1270, 87, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 0, 0, 341, 344, 0, 0, 0, 575, 0,
	587, 578, 0, 665, 0, 669, 0, 0, 0, 672,
	673, 674, 651, 0, 655, 405, 639, 636, 637, 515,
	0, 125, 126, 0, 0, 0, 0, 0, 0, 1078,
	1080, 1106, 1107, 1108, 1227, 1228, 1125, 1129, 0, 1132,
	0, 0, 1133, 0, 606, 1023, 0, 0, 1041, 1042,
	0, 1164, 0, 1169, 1170, 0, 1175, 0, 0, 936,
	893, 894, 941, 942, 0, 0, 886, 1268, 80, 1269,
	1266, 0, 1264, 1262, 1321, 0, 1330, 1331, 1340, 1341,
	1347, 0, 1353, 0, 85, 0, 0, 0, 1279, 179,
	0, 198, 0, 583, 0, 586, 576, 663, 664, 0,
	676, 668, 670, 671, 653, -2, 1305, 0, 0, 0,
	563, 996, 0, 0, 0, 1180, 1134, 0, 602, 603,
	1031, 1024, 0, 1009, 1010, 1028, 1153, 1155, 0, 0,
	0, 0, 935, 937, 938, 79, 0, 1265, 1049, 0,
	1333, 1334, 1361, 1359, 904, 911, 0, 86, 418, 411,
	1305, 0, 0, 0, 656, 657, 658, 659, 660, 661,
	662, 553, 1307, 127, 128, 484, 485, 486, 121, 1219,
	0, 1222, 0, 1025, 0, 0, 0, 0, 1021, 1022,
	1165, 0, 1171, 0, 1176, 0, 895, 896, 1267, 0,
	0, 588, 0, 590, 0, -2, 406, 419, 0, 173,
	199, 200, 0, 0, 203, 204, 205, 196, 197, 117,
	0, 0, 677, 0, 1308, 1309, 124, 1220, 1130, 0,
	1016, 1017, 1018, 1019, 1020, 0, 0, 0, 1050, 1029,
	589, 0, 0, 361, 0, 599, 407, 408, 0, 414,
	415, 416, 417, 201, 202, 611, 0, 0, 560, 0,
	0, 1166, 0, 1172, 0, 1177, 0, 591, 592, 600,
	0, 409, 0, 410, 0, 0, 0, 580, 0, 611,
	1306, 0, 1026, 0, 0, 1048, 0, 601, 597, 420,
	422, 423, 0, 0, 421, 612, 581, 1221, 1167, 1173,
	0, 424, 425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 635,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:574
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:580
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:584
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:620
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:639
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:655
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:661
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:665
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:684
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:690
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:764
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:843
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:849
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:867
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:879
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:891
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:895
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:911
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:929
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:939
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:943
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:949
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:953
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:962
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:974
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:978
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:984
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:994
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:998
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1002
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1008
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1012
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1016
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1020
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1026
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1030
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1036
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1042
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1049
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1058
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1062
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1078
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1088
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1093
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1098
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1104
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1109
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1115
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1124
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1130
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1146
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1153
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1160
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1165
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1170
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1175
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1182
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1189
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1200
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1211
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1217
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1221
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1225
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1229
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1233
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1237
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1247
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1253
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1257
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1263
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1267
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1273
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1277
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1283
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1287
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1293
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1303
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1308
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1313
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1317
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1341
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1350
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1376
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1382
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1388
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1393
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1398
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1403
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1408
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1413
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1422
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1442
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1448
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1452
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1458
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1462
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1466
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1472
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1476
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1481
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1502
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1507
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1512
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1533
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1537
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1541
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1545
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1549
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1566
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1570
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1588
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1802
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1806
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1810
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1816
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1820
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1824
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1830
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1834
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1841
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1845
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1849
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1853
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2081
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2090
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2095
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2099
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2107
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2117
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2125
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2129
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2133
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2138
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2142
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2178
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2183
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2189
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2193
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2198
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2212
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2221
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2227
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2237
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2241
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2246
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2250
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2254
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2258
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2262
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2266
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2282
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2286
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2290
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2294
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2298
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2340
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2365
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2369
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2375
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2379
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2385
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2389
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2395
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2399
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2405
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2411
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2415
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2419
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2423
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2427
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2436
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2442
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2448
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2454
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2458
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2462
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2467
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2471
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2477
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2483
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2489
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2493
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2497
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2501
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2505
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2524
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2533
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2537
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2546
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2552
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2556
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2560
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2566
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2664
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2668
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2672
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2676
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2680
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2684
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2696
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2741
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2747
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2751
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2760
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2765
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2769
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2778
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2782
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2791
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2795
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2799
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2803
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2807
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2813
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2817
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2821
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2827
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2831
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2835
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2839
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2885
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2909
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2913
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2917
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2921
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2951
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2969
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2973
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2977
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3003
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3010
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3017
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3024
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3040
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3047
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3054
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3066
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3076
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3080
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3084
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3136
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3180
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3191
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3200
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3208
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3217
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3224
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3236
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3245
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3256
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3260
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3265
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3269
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3274
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3278
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3284
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3290
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3296
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3300
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3306
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3310
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3316
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3322
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3328
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3334
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3340
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3344
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3348
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3358
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3364
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3370
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3374
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3378
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3384
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3388
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3393
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3397
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3402
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3406
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3412
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3416
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3420
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3424
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3428
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3432
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3436
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3440
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3444
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3448
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3452
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3456
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3460
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3464
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3468
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3472
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3476
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3480
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3484
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3488
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3492
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3496
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3501
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3505
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3509
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3515
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3525
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3530
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3534
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3539
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3544
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3549
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3554
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3559
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3565
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3571
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3576
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3582
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3588
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3598
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3603
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3607
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3612
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3617
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3622
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3627
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3633
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3639
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3646
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3653
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3660
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3668
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3678
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3684
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3690
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3696
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3702
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3708
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3720
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3736
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3742
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3746
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3752
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3756
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3815
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3819
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3823
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3827
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3831
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3835
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3839
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3843
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3847
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3851
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3855
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3859
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3871
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3875
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3990
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3994
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4010
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4030
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4048
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4052
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4062
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4068
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4072
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4076
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4106
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4110
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4131
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4153
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4157
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4161
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4165
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4169
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4173
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4250
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4254
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4260
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4266
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4270
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4274
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4278
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4284
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4296
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4300
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4304
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4308
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4322
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4368
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4381
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4385
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4389
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4394
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4413
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4417
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4423
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4427
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4431
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4436
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4449
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4453
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4463
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4467
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4479
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4488
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4494
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4498
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4507
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4512
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4528
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4534
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4564
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4568
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4574
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4578
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4582
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4586
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4591
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4599
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4611
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4615
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4621
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4627
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4631
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4641
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4645
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4649
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4653
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4659
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4663
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4669
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4673
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4682
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4688
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4692
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4698
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4702
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4708
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4712
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4716
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4726
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4730
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4743
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4747
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4751
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4755
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4761
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4763
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4767
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4769
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4773
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4775
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4778
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4780
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4783
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4791
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4804
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4808
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4812
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4818
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4824
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4828
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4832
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4836
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4842
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4846
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4856
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4860
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4866
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4876
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4881
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4885
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4891
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4901
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4905
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4909
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4913
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4918
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4922
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4926
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4930
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4940
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5035
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5044
		{
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5188
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5200
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5206
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5212
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5216
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5220
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5226
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5230
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5237
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5241
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5245
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5249
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5253
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5259
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5263
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5267
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5271
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5275
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5294
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5300
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5304
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5313
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5318
		{
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5321
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5327
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5333
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5337
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5349
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5355
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5359
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5365
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5369
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5375
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5379
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5391
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5397
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5401
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5407
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5413
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5417
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5433
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5437
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5444
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5448
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5452
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5456
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5462
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5466
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5470
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5474
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5478
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5482
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5486
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5492
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5496
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5500
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5507
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5513
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5517
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5531
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5553
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5557
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5569
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5573
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5577
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5606
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5611
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5615
		{
			yyLOCAL = &CountStar{Name: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5619
		{
			yyLOCAL = &Count{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = &Max{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = &Min{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &Sum{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = &Avg{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			yyLOCAL = &BitAnd{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = &BitOr{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5647
		{
			yyLOCAL = &BitXor{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5651
		{
			yyLOCAL = &Std{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = &StdDev{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &StdPop{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5663
		{
			yyLOCAL = &StdSamp{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5667
		{
			yyLOCAL = &VarPop{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5671
		{
			yyLOCAL = &VarSamp{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = &Variance{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5679
		{
			yyLOCAL = &GroupConcatExpr{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5683
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5699
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5703
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5719
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5727
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5731
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5759
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5763
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5811
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5815
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5819
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5823
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5839
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5851
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5867
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5871
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5980
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5989
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5995
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5999
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6015
		{
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6017
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6021
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6025
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6029
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6033
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6037
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6041
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6045
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6049
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6053
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6057
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6063
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6067
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6071
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6075
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6079
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6083
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6087
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6091
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6095
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6150
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6154
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6158
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6162
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6166
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6180
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6190
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6194
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6200
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6204
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6208
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6212
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6216
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6222
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6226
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6230
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6234
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6238
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6242
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6264
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6268
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6282
		{
			yyVAL.str = string("")
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6286
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6292
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6296
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6302
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6317
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6321
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6325
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6354
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6369
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6375
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6379
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6388
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6397
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6403
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6409
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6413
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6419
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6424
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6428
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6432
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6441
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6447
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6451
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6455
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6464
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6468
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6472
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6476
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6483
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6487
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6491
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6495
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6501
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6505
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6509
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6513
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6518
		{
			yyVAL.str = ""
		}
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6522
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6526
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6530
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6535
		{
			yyVAL.str = ""
		}
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6539
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6545
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6549
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6554
		{
			yyVAL.str = ""
		}
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6558
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6563
		{
			yyVAL.str = "cascaded"
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6567
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6571
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6576
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6580
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6586
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6592
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6598
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6607
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6611
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6616
		{
			yyVAL.str = ""
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6620
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6626
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6630
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6636
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6640
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6644
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6649
		{
			yyVAL.str = ""
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6657
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6662
		{
			yyVAL.str = ""
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6666
		{
			yyVAL.str = " header"
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6671
		{
			yyVAL.str = ""
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6675
		{
			yyVAL.str = " manifest on"
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6679
		{
			yyVAL.str = " manifest off"
		}
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6684
		{
			yyVAL.str = ""
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6688
		{
			yyVAL.str = " overwrite on"
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6692
		{
			yyVAL.str = " overwrite off"
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6698
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6703
		{
			yyVAL.str = ""
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6707
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6713
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6717
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6723
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6727
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6732
		{
			yyVAL.str = ""
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6736
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6742
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6746
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6752
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6756
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6760
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6765
		{
			yyVAL.str = ""
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6769
		{
			yyVAL.str = " optionally"
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6782
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6786
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6790
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6794
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6798
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6804
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6808
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6812
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1359:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6816
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6825
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6831
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6835
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6841
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6845
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6851
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6855
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6870
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6874
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6880
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6886
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6890
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6896
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6900
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6904
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6908
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6912
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6920
		{
			yyVAL.str = "charset"
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6930
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6934
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6938
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6947
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6949
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6954
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6957
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6959
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6962
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6964
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6967
		{
			yyVAL.empty = struct{}{}
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6969
		{
			yyVAL.empty = struct{}{}
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6971
		{
			yyVAL.empty = struct{}{}
		}
	case 1399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6975
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6984
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6989
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6991
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6995
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7001
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7005
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7012
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7018
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7022
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7028
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7032
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7039
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7589
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7598
		{
			decNesting(yylex)
		}
	case 1940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7603
		{
			skipToEnd(yylex)
		}
	case 1941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7608
		{
			skipToEnd(yylex)
		}
	case 1942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7612
		{
			skipToEnd(yylex)
		}
	case 1943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7616
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
