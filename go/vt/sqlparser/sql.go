// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const END = 57501
const LE = 57502
const GE = 57503
const NE = 57504
const NULL_SAFE_EQUAL = 57505
const IS = 57506
const LIKE = 57507
const REGEXP = 57508
const RLIKE = 57509
const IN = 57510
const ASSIGNMENT_OPT = 57511
const SHIFT_LEFT = 57512
const SHIFT_RIGHT = 57513
const DIV = 57514
const MOD = 57515
const UNARY = 57516
const COLLATE = 57517
const BINARY = 57518
const UNDERSCORE_ARMSCII8 = 57519
const UNDERSCORE_ASCII = 57520
const UNDERSCORE_BIG5 = 57521
const UNDERSCORE_BINARY = 57522
const UNDERSCORE_CP1250 = 57523
const UNDERSCORE_CP1251 = 57524
const UNDERSCORE_CP1256 = 57525
const UNDERSCORE_CP1257 = 57526
const UNDERSCORE_CP850 = 57527
const UNDERSCORE_CP852 = 57528
const UNDERSCORE_CP866 = 57529
const UNDERSCORE_CP932 = 57530
const UNDERSCORE_DEC8 = 57531
const UNDERSCORE_EUCJPMS = 57532
const UNDERSCORE_EUCKR = 57533
const UNDERSCORE_GB18030 = 57534
const UNDERSCORE_GB2312 = 57535
const UNDERSCORE_GBK = 57536
const UNDERSCORE_GEOSTD8 = 57537
const UNDERSCORE_GREEK = 57538
const UNDERSCORE_HEBREW = 57539
const UNDERSCORE_HP8 = 57540
const UNDERSCORE_KEYBCS2 = 57541
const UNDERSCORE_KOI8R = 57542
const UNDERSCORE_KOI8U = 57543
const UNDERSCORE_LATIN1 = 57544
const UNDERSCORE_LATIN2 = 57545
const UNDERSCORE_LATIN5 = 57546
const UNDERSCORE_LATIN7 = 57547
const UNDERSCORE_MACCE = 57548
const UNDERSCORE_MACROMAN = 57549
const UNDERSCORE_SJIS = 57550
const UNDERSCORE_SWE7 = 57551
const UNDERSCORE_TIS620 = 57552
const UNDERSCORE_UCS2 = 57553
const UNDERSCORE_UJIS = 57554
const UNDERSCORE_UTF16 = 57555
const UNDERSCORE_UTF16LE = 57556
const UNDERSCORE_UTF32 = 57557
const UNDERSCORE_UTF8 = 57558
const UNDERSCORE_UTF8MB4 = 57559
const UNDERSCORE_UTF8MB3 = 57560
const INTERVAL = 57561
const WINDOW_EXPR = 57562
const JSON_EXTRACT_OP = 57563
const JSON_UNQUOTE_EXTRACT_OP = 57564
const CREATE = 57565
const ALTER = 57566
const DROP = 57567
const RENAME = 57568
const ANALYZE = 57569
const ADD = 57570
const FLUSH = 57571
const CHANGE = 57572
const MODIFY = 57573
const DEALLOCATE = 57574
const REVERT = 57575
const QUERIES = 57576
const SCHEMA = 57577
const TABLE = 57578
const INDEX = 57579
const VIEW = 57580
const TO = 57581
const IGNORE = 57582
const IF = 57583
const PRIMARY = 57584
const COLUMN = 57585
const SPATIAL = 57586
const FULLTEXT = 57587
const KEY_BLOCK_SIZE = 57588
const CHECK = 57589
const INDEXES = 57590
const ACTION = 57591
const CASCADE = 57592
const CONSTRAINT = 57593
const FOREIGN = 57594
const NO = 57595
const REFERENCES = 57596
const RESTRICT = 57597
const SHOW = 57598
const DESCRIBE = 57599
const EXPLAIN = 57600
const DATE = 57601
const ESCAPE = 57602
const REPAIR = 57603
const OPTIMIZE = 57604
const TRUNCATE = 57605
const COALESCE = 57606
const EXCHANGE = 57607
const REBUILD = 57608
const PARTITIONING = 57609
const REMOVE = 57610
const PREPARE = 57611
const EXECUTE = 57612
const MAXVALUE = 57613
const PARTITION = 57614
const REORGANIZE = 57615
const LESS = 57616
const THAN = 57617
const PROCEDURE = 57618
const TRIGGER = 57619
const VINDEX = 57620
const VINDEXES = 57621
const DIRECTORY = 57622
const NAME = 57623
const UPGRADE = 57624
const STATUS = 57625
const VARIABLES = 57626
const WARNINGS = 57627
const CASCADED = 57628
const DEFINER = 57629
const OPTION = 57630
const SQL = 57631
const UNDEFINED = 57632
const SEQUENCE = 57633
const MERGE = 57634
const TEMPORARY = 57635
const TEMPTABLE = 57636
const INVOKER = 57637
const SECURITY = 57638
const FIRST = 57639
const AFTER = 57640
const LAST = 57641
const VITESS_MIGRATION = 57642
const CANCEL = 57643
const RETRY = 57644
const LAUNCH = 57645
const COMPLETE = 57646
const CLEANUP = 57647
const THROTTLE = 57648
const UNTHROTTLE = 57649
const FORCE_CUTOVER = 57650
const CUTOVER_THRESHOLD = 57651
const EXPIRE = 57652
const RATIO = 57653
const VITESS_THROTTLER = 57654
const BEGIN = 57655
const START = 57656
const TRANSACTION = 57657
const COMMIT = 57658
const ROLLBACK = 57659
const SAVEPOINT = 57660
const RELEASE = 57661
const WORK = 57662
const CONSISTENT = 57663
const SNAPSHOT = 57664
const UNRESOLVED = 57665
const TRANSACTIONS = 57666
const BIT = 57667
const TINYINT = 57668
const SMALLINT = 57669
const MEDIUMINT = 57670
const INT = 57671
const INTEGER = 57672
const BIGINT = 57673
const INTNUM = 57674
const REAL = 57675
const DOUBLE = 57676
const FLOAT_TYPE = 57677
const FLOAT4_TYPE = 57678
const FLOAT8_TYPE = 57679
const DECIMAL_TYPE = 57680
const NUMERIC = 57681
const TIME = 57682
const TIMESTAMP = 57683
const DATETIME = 57684
const YEAR = 57685
const CHAR = 57686
const VARCHAR = 57687
const BOOL = 57688
const CHARACTER = 57689
const VARBINARY = 57690
const NCHAR = 57691
const TEXT = 57692
const TINYTEXT = 57693
const MEDIUMTEXT = 57694
const LONGTEXT = 57695
const BLOB = 57696
const TINYBLOB = 57697
const MEDIUMBLOB = 57698
const LONGBLOB = 57699
const JSON = 57700
const JSON_SCHEMA_VALID = 57701
const JSON_SCHEMA_VALIDATION_REPORT = 57702
const ENUM = 57703
const GEOMETRY = 57704
const POINT = 57705
const LINESTRING = 57706
const POLYGON = 57707
const GEOMCOLLECTION = 57708
const GEOMETRYCOLLECTION = 57709
const MULTIPOINT = 57710
const MULTILINESTRING = 57711
const MULTIPOLYGON = 57712
const ASCII = 57713
const UNICODE = 57714
const VECTOR = 57715
const NULLX = 57716
const AUTO_INCREMENT = 57717
const APPROXNUM = 57718
const SIGNED = 57719
const UNSIGNED = 57720
const ZEROFILL = 57721
const PURGE = 57722
const BEFORE = 57723
const CODE = 57724
const COLLATION = 57725
const COLUMNS = 57726
const DATABASES = 57727
const ENGINES = 57728
const EVENT = 57729
const EXTENDED = 57730
const FIELDS = 57731
const FULL = 57732
const FUNCTION = 57733
const GTID_EXECUTED = 57734
const KEYSPACES = 57735
const OPEN = 57736
const PLUGINS = 57737
const PRIVILEGES = 57738
const PROCESSLIST = 57739
const SCHEMAS = 57740
const TABLES = 57741
const TRIGGERS = 57742
const USER = 57743
const VGTID_EXECUTED = 57744
const VITESS_KEYSPACES = 57745
const VITESS_METADATA = 57746
const VITESS_MIGRATIONS = 57747
const VITESS_REPLICATION_STATUS = 57748
const VITESS_SHARDS = 57749
const VITESS_TABLETS = 57750
const VITESS_TARGET = 57751
const VSCHEMA = 57752
const VITESS_THROTTLED_APPS = 57753
const NAMES = 57754
const GLOBAL = 57755
const SESSION = 57756
const ISOLATION = 57757
const LEVEL = 57758
const READ = 57759
const WRITE = 57760
const ONLY = 57761
const REPEATABLE = 57762
const COMMITTED = 57763
const UNCOMMITTED = 57764
const SERIALIZABLE = 57765
const ADDDATE = 57766
const CURRENT_TIMESTAMP = 57767
const DATABASE = 57768
const CURRENT_DATE = 57769
const CURDATE = 57770
const DATE_ADD = 57771
const DATE_SUB = 57772
const NOW = 57773
const SUBDATE = 57774
const CURTIME = 57775
const CURRENT_TIME = 57776
const LOCALTIME = 57777
const LOCALTIMESTAMP = 57778
const CURRENT_USER = 57779
const UTC_DATE = 57780
const UTC_TIME = 57781
const UTC_TIMESTAMP = 57782
const SYSDATE = 57783
const DAY = 57784
const DAY_HOUR = 57785
const DAY_MICROSECOND = 57786
const DAY_MINUTE = 57787
const DAY_SECOND = 57788
const HOUR = 57789
const HOUR_MICROSECOND = 57790
const HOUR_MINUTE = 57791
const HOUR_SECOND = 57792
const MICROSECOND = 57793
const MINUTE = 57794
const MINUTE_MICROSECOND = 57795
const MINUTE_SECOND = 57796
const MONTH = 57797
const QUARTER = 57798
const SECOND = 57799
const SECOND_MICROSECOND = 57800
const YEAR_MONTH = 57801
const WEEK = 57802
const SQL_TSI_DAY = 57803
const SQL_TSI_WEEK = 57804
const SQL_TSI_HOUR = 57805
const SQL_TSI_MINUTE = 57806
const SQL_TSI_MONTH = 57807
const SQL_TSI_QUARTER = 57808
const SQL_TSI_SECOND = 57809
const SQL_TSI_MICROSECOND = 57810
const SQL_TSI_YEAR = 57811
const REPLACE = 57812
const CONVERT = 57813
const CAST = 57814
const SUBSTR = 57815
const SUBSTRING = 57816
const MID = 57817
const SEPARATOR = 57818
const TIMESTAMPADD = 57819
const TIMESTAMPDIFF = 57820
const WEIGHT_STRING = 57821
const LTRIM = 57822
const RTRIM = 57823
const TRIM = 57824
const JSON_ARRAY = 57825
const JSON_OBJECT = 57826
const JSON_QUOTE = 57827
const JSON_DEPTH = 57828
const JSON_TYPE = 57829
const JSON_LENGTH = 57830
const JSON_VALID = 57831
const JSON_ARRAY_APPEND = 57832
const JSON_ARRAY_INSERT = 57833
const JSON_INSERT = 57834
const JSON_MERGE = 57835
const JSON_MERGE_PATCH = 57836
const JSON_MERGE_PRESERVE = 57837
const JSON_REMOVE = 57838
const JSON_REPLACE = 57839
const JSON_SET = 57840
const JSON_UNQUOTE = 57841
const COUNT = 57842
const AVG = 57843
const MAX = 57844
const MIN = 57845
const SUM = 57846
const GROUP_CONCAT = 57847
const BIT_AND = 57848
const BIT_OR = 57849
const BIT_XOR = 57850
const STD = 57851
const STDDEV = 57852
const STDDEV_POP = 57853
const STDDEV_SAMP = 57854
const VAR_POP = 57855
const VAR_SAMP = 57856
const VARIANCE = 57857
const ANY_VALUE = 57858
const REGEXP_INSTR = 57859
const REGEXP_LIKE = 57860
const REGEXP_REPLACE = 57861
const REGEXP_SUBSTR = 57862
const ExtractValue = 57863
const UpdateXML = 57864
const GET_LOCK = 57865
const RELEASE_LOCK = 57866
const RELEASE_ALL_LOCKS = 57867
const IS_FREE_LOCK = 57868
const IS_USED_LOCK = 57869
const LOCATE = 57870
const POSITION = 57871
const ST_GeometryCollectionFromText = 57872
const ST_GeometryFromText = 57873
const ST_LineStringFromText = 57874
const ST_MultiLineStringFromText = 57875
const ST_MultiPointFromText = 57876
const ST_MultiPolygonFromText = 57877
const ST_PointFromText = 57878
const ST_PolygonFromText = 57879
const ST_GeometryCollectionFromWKB = 57880
const ST_GeometryFromWKB = 57881
const ST_LineStringFromWKB = 57882
const ST_MultiLineStringFromWKB = 57883
const ST_MultiPointFromWKB = 57884
const ST_MultiPolygonFromWKB = 57885
const ST_PointFromWKB = 57886
const ST_PolygonFromWKB = 57887
const ST_AsBinary = 57888
const ST_AsText = 57889
const ST_Dimension = 57890
const ST_Envelope = 57891
const ST_IsSimple = 57892
const ST_IsEmpty = 57893
const ST_GeometryType = 57894
const ST_X = 57895
const ST_Y = 57896
const ST_Latitude = 57897
const ST_Longitude = 57898
const ST_EndPoint = 57899
const ST_IsClosed = 57900
const ST_Length = 57901
const ST_NumPoints = 57902
const ST_StartPoint = 57903
const ST_PointN = 57904
const ST_Area = 57905
const ST_Centroid = 57906
const ST_ExteriorRing = 57907
const ST_InteriorRingN = 57908
const ST_NumInteriorRings = 57909
const ST_NumGeometries = 57910
const ST_GeometryN = 57911
const ST_LongFromGeoHash = 57912
const ST_PointFromGeoHash = 57913
const ST_LatFromGeoHash = 57914
const ST_GeoHash = 57915
const ST_AsGeoJSON = 57916
const ST_GeomFromGeoJSON = 57917
const MATCH = 57918
const AGAINST = 57919
const BOOLEAN = 57920
const LANGUAGE = 57921
const WITH = 57922
const QUERY = 57923
const EXPANSION = 57924
const WITHOUT = 57925
const VALIDATION = 57926
const ROLLUP = 57927
const UNUSED = 57928
const ARRAY = 57929
const BYTE = 57930
const CUME_DIST = 57931
const DESCRIPTION = 57932
const DENSE_RANK = 57933
const EMPTY = 57934
const EXCEPT = 57935
const FIRST_VALUE = 57936
const GROUPING = 57937
const GROUPS = 57938
const JSON_TABLE = 57939
const LAG = 57940
const LAST_VALUE = 57941
const LATERAL = 57942
const LEAD = 57943
const NTH_VALUE = 57944
const NTILE = 57945
const OF = 57946
const OVER = 57947
const PERCENT_RANK = 57948
const RANK = 57949
const RECURSIVE = 57950
const ROW_NUMBER = 57951
const SYSTEM = 57952
const WINDOW = 57953
const ACTIVE = 57954
const ADMIN = 57955
const AUTOEXTEND_SIZE = 57956
const BUCKETS = 57957
const CLONE = 57958
const COLUMN_FORMAT = 57959
const COMPONENT = 57960
const DEFINITION = 57961
const ENFORCED = 57962
const ENGINE_ATTRIBUTE = 57963
const EXCLUDE = 57964
const FOLLOWING = 57965
const GET_MASTER_PUBLIC_KEY = 57966
const HISTOGRAM = 57967
const HISTORY = 57968
const INACTIVE = 57969
const INVISIBLE = 57970
const LOCKED = 57971
const MASTER_COMPRESSION_ALGORITHMS = 57972
const MASTER_PUBLIC_KEY_PATH = 57973
const MASTER_TLS_CIPHERSUITES = 57974
const MASTER_ZSTD_COMPRESSION_LEVEL = 57975
const NESTED = 57976
const NETWORK_NAMESPACE = 57977
const NOWAIT = 57978
const NULLS = 57979
const OJ = 57980
const OLD = 57981
const OPTIONAL = 57982
const ORDINALITY = 57983
const ORGANIZATION = 57984
const OTHERS = 57985
const PARTIAL = 57986
const PATH = 57987
const PERSIST = 57988
const PERSIST_ONLY = 57989
const PRECEDING = 57990
const PRIVILEGE_CHECKS_USER = 57991
const PROCESS = 57992
const RANDOM = 57993
const REFERENCE = 57994
const REQUIRE_ROW_FORMAT = 57995
const RESOURCE = 57996
const RESPECT = 57997
const RESTART = 57998
const RETAIN = 57999
const REUSE = 58000
const ROLE = 58001
const SECONDARY = 58002
const SECONDARY_ENGINE = 58003
const SECONDARY_ENGINE_ATTRIBUTE = 58004
const SECONDARY_LOAD = 58005
const SECONDARY_UNLOAD = 58006
const SIMPLE = 58007
const SKIP = 58008
const SRID = 58009
const THREAD_PRIORITY = 58010
const TIES = 58011
const UNBOUNDED = 58012
const VCPU = 58013
const VISIBLE = 58014
const RETURNING = 58015
const MANUAL = 58016
const PARALLEL = 58017
const QUALIFY = 58018
const TABLESAMPLE = 58019
const OUT = 58020
const INOUT = 58021
const FORMAT_BYTES = 58022
const FORMAT_PICO_TIME = 58023
const PS_CURRENT_THREAD_ID = 58024
const PS_THREAD_ID = 58025
const GTID_SUBSET = 58026
const GTID_SUBTRACT = 58027
const WAIT_FOR_EXECUTED_GTID_SET = 58028
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58029
const FORMAT = 58030
const TREE = 58031
const VITESS = 58032
const TRADITIONAL = 58033
const VTEXPLAIN = 58034
const VEXPLAIN = 58035
const PLAN = 58036
const LOCAL = 58037
const LOW_PRIORITY = 58038
const NO_WRITE_TO_BINLOG = 58039
const LOGS = 58040
const ERROR = 58041
const GENERAL = 58042
const HOSTS = 58043
const OPTIMIZER_COSTS = 58044
const USER_RESOURCES = 58045
const SLOW = 58046
const CHANNEL = 58047
const RELAY = 58048
const EXPORT = 58049
const CURRENT = 58050
const ROW = 58051
const ROWS = 58052
const AVG_ROW_LENGTH = 58053
const CONNECTION = 58054
const CHECKSUM = 58055
const DELAY_KEY_WRITE = 58056
const ENCRYPTION = 58057
const ENGINE = 58058
const INSERT_METHOD = 58059
const MAX_ROWS = 58060
const MIN_ROWS = 58061
const PACK_KEYS = 58062
const PASSWORD = 58063
const FIXED = 58064
const DYNAMIC = 58065
const COMPRESSED = 58066
const REDUNDANT = 58067
const COMPACT = 58068
const ROW_FORMAT = 58069
const STATS_AUTO_RECALC = 58070
const STATS_PERSISTENT = 58071
const STATS_SAMPLE_PAGES = 58072
const STORAGE = 58073
const MEMORY = 58074
const DISK = 58075
const PARTITIONS = 58076
const LINEAR = 58077
const RANGE = 58078
const LIST = 58079
const SUBPARTITION = 58080
const SUBPARTITIONS = 58081
const HASH = 58082

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 59,
	17, 59,
	-2, 5,
	-1, 54,
	1, 174,
	758, 174,
	-2, 182,
	-1, 55,
	149, 182,
	191, 182,
	364, 182,
	-2, 542,
	-1, 63,
	38, 803,
	254, 803,
	265, 803,
	300, 817,
	301, 817,
	-2, 805,
	-1, 68,
	256, 841,
	-2, 839,
	-1, 130,
	1, 175,
	758, 175,
	-2, 182,
	-1, 141,
	150, 427,
	259, 427,
	-2, 531,
	-1, 160,
	149, 182,
	191, 182,
	364, 182,
	-2, 551,
	-1, 759,
	177, 51,
	-2, 53,
	-1, 968,
	95, 1671,
	-2, 1501,
	-1, 969,
	95, 1672,
	236, 1676,
	-2, 1502,
	-1, 970,
	236, 1675,
	-2, 52,
	-1, 1056,
	65, 915,
	-2, 928,
	-1, 1061,
	253, 1654,
	-2, 1568,
	-1, 1138,
	264, 1128,
	269, 1128,
	-2, 438,
	-1, 1226,
	1, 599,
	758, 599,
	-2, 182,
	-1, 1540,
	236, 1676,
	-2, 1502,
	-1, 1753,
	65, 916,
	-2, 932,
	-1, 1754,
	65, 917,
	-2, 933,
	-1, 1830,
	149, 182,
	191, 182,
	364, 182,
	-2, 477,
	-1, 1907,
	150, 427,
	259, 427,
	-2, 531,
	-1, 1916,
	264, 1129,
	269, 1129,
	-2, 439,
	-1, 2364,
	236, 1680,
	-2, 1674,
	-1, 2365,
	236, 1676,
	-2, 1672,
	-1, 2482,
	149, 182,
	191, 182,
	364, 182,
	-2, 478,
	-1, 2489,
	28, 203,
	-2, 205,
	-1, 2963,
	86, 109,
	96, 109,
	-2, 995,
	-1, 3027,
	733, 721,
	-2, 695,
	-1, 3261,
	55, 1613,
	-2, 1607,
	-1, 4104,
	733, 721,
	-2, 709,
	-1, 4144,
	16, 59,
	17, 59,
	164, 47,
	-2, 829,
	-1, 4198,
	164, 48,
	-2, 59,
	-1, 4206,
	98, 653,
	104, 653,
	114, 653,
	193, 653,
	194, 653,
	195, 653,
	196, 653,
	197, 653,
	198, 653,
	199, 653,
	200, 653,
	201, 653,
	202, 653,
	203, 653,
	204, 653,
	205, 653,
	206, 653,
	207, 653,
	208, 653,
	209, 653,
	210, 653,
	211, 653,
	212, 653,
	213, 653,
	214, 653,
	215, 653,
	216, 653,
	217, 653,
	218, 653,
	219, 653,
	220, 653,
	221, 653,
	222, 653,
	223, 653,
	224, 653,
	225, 653,
	226, 653,
	227, 653,
	228, 653,
	229, 653,
	230, 653,
	231, 653,
	232, 653,
	233, 653,
	234, 653,
	-2, 2055,
}

const yyPrivate = 57344

const yyLast = 57453

var yyAct = [...]int{
	984, 3744, 979, 89, 3745, 4280, 3743, 4086, 971, 4180,
	932, 4292, 4204, 2169, 2393, 4136, 3402, 4065, 4247, 3313,
	3320, 4248, 2157, 2538, 3693, 2479, 1293, 3366, 3988, 3274,
	3357, 3371, 3538, 3368, 3367, 3785, 4063, 4200, 3681, 3112,
	6, 3365, 3370, 3369, 3773, 3197, 2395, 3386, 3328, 1295,
	2548, 2036, 3385, 763, 3278, 3275, 3796, 3592, 3578, 3086,
	3111, 2517, 758, 3272, 972, 757, 3262, 2923, 3568, 2434,
	2997, 791, 1833, 933, 3068, 3388, 3409, 127, 3024, 2579,
	2908, 1108, 2522, 1170, 2999, 2948, 2450, 2998, 1054, 2453,
	89, 169, 1890, 2467, 1076, 2929, 2455, 1051, 2936, 2907,
	1083, 2413, 42, 2454, 44, 2349, 1932, 2897, 2316, 2153,
	2881, 2103, 1054, 2191, 2317, 3059, 3614, 155, 2442, 2557,
	2524, 2990, 1133, 1914, 1128, 1822, 2965, 1118, 1802, 986,
	1788, 1771, 937, 2457, 2422, 43, 1734, 1060, 109, 1553,
	87, 110, 2197, 2117, 2128, 985, 3277, 1146, 1478, 773,
	1461, 4142, 1921, 2032, 1115, 1112, 1136, 2513, 105, 1139,
	1116, 2435, 1134, 1135, 1821, 768, 1807, 1093, 1095, 1219,
	1756, 1064, 2514, 1512, 2224, 104, 2205, 3781, 1536, 11,
	2879, 10, 1283, 2044, 2094, 9, 133, 760, 3539, 138,
	173, 1075, 1058, 131, 1059, 132, 139, 1906, 1088, 1230,
	1062, 761, 112, 3603, 1224, 111, 1557, 1049, 1291, 1269,
	4196, 103, 4281, 3682, 750, 3354, 4120, 934, 1087, 2550,
	1053, 1562, 1057, 86, 3015, 693, 2594, 96, 2550, 2551,
	2552, 3047, 3046, 3674, 1479, 4228, 1790, 3076, 3077, 4115,
	1048, 1172, 4121, 1998, 1078, 134, 4116, 1109, 2390, 2391,
	1218, 2110, 1175, 140, 1189, 1190, 1191, 3748, 1194, 1195,
	1196, 1197, 2109, 1068, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1069, 3639, 1103, 1066, 2, 2108, 1102, 2107, 751,
	1150, 2106, 1050, 2105, 2075, 1239, 1125, 3012, 690, 1149,
	691, 2877, 3748, 2646, 3258, 2925, 2583, 4251, 3201, 4302,
	1793, 1052, 1183, 1786, 4246, 1791, 4094, 1124, 1176, 1179,
	1180, 134, 3376, 1495, 1123, 3376, 1122, 3017, 4271, 4285,
	116, 117, 118, 1475, 121, 1192, 1472, 4232, 3373, 1077,
	1794, 197, 1489, 4066, 685, 1792, 4116, 3542, 1120, 3541,
	2582, 2431, 2430, 3747, 4284, 729, 748, 749, 1101, 1105,
	936, 735, 4231, 4230, 3040, 1767, 1042, 1043, 1044, 1045,
	98, 1047, 3037, 1056, 1101, 1105, 936, 1061, 2842, 2115,
	3428, 4195, 3374, 3984, 3983, 3374, 1036, 3687, 4229, 134,
	3688, 974, 1037, 988, 989, 990, 975, 1126, 3747, 976,
	977, 1174, 978, 1173, 1090, 1091, 4261, 729, 1240, 3994,
	4226, 3380, 3993, 3705, 3380, 1463, 3694, 4177, 2539, 4214,
	991, 992, 2576, 729, 2162, 4209, 1491, 3787, 3454, 2424,
	2878, 2917, 2974, 2918, 3309, 2973, 2474, 2475, 2975, 4212,
	3704, 1474, 3310, 3311, 2087, 2088, 1823, 4181, 1824, 4219,
	4220, 3075, 2650, 2473, 3058, 1485, 1247, 2581, 1477, 3330,
	3331, 1248, 1259, 2653, 1040, 1039, 4213, 4087, 1247, 1246,
	2040, 1245, 1492, 1248, 1493, 1494, 2986, 2492, 2491, 88,
	729, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 4185, 88, 88, 3377, 2392, 88, 3377,
	100, 90, 2533, 2651, 729, 3406, 1260, 1456, 1253, 2932,
	2933, 1264, 1265, 3133, 3404, 2086, 1473, 2939, 3436, 1479,
	2233, 3434, 2644, 743, 2090, 747, 2527, 741, 3410, 3060,
	1819, 4252, 98, 1288, 3397, 2601, 2558, 1738, 3329, 1513,
	730, 4036, 1988, 4037, 3025, 2940, 3810, 2438, 1462, 100,
	3332, 1223, 4253, 1231, 1232, 2620, 2903, 2621, 2599, 2622,
	1094, 3425, 2414, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1522, 1521, 1523, 1524, 2412, 3244, 1280, 98, 98, 3661,
	1782, 98, 2041, 3245, 1455, 1234, 1989, 2414, 1990, 1227,
	2602, 1285, 730, 1262, 1263, 1268, 3063, 2597, 2561, 2189,
	2598, 3676, 3407, 3675, 2647, 1261, 2648, 1254, 730, 1235,
	2623, 3405, 1199, 2600, 1198, 3398, 3399, 3968, 1129, 2225,
	1266, 3672, 1130, 3752, 2227, 2451, 1130, 1489, 2232, 2228,
	1267, 1168, 2229, 2230, 2231, 1167, 1166, 2226, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 1287, 1165, 3018,
	1164, 3589, 1163, 1286, 1741, 1162, 1161, 1104, 1098, 1096,
	1156, 1899, 1169, 3332, 1527, 730, 1113, 4303, 1113, 3352,
	1113, 1142, 1111, 1104, 1098, 1096, 3013, 1141, 2423, 2526,
	2033, 1089, 3134, 2608, 2604, 2606, 2607, 2605, 2609, 2610,
	2611, 2612, 3064, 3200, 1292, 2587, 1292, 1292, 2181, 2170,
	2171, 2172, 2173, 2183, 2174, 2175, 2176, 2188, 2184, 2177,
	2178, 2185, 2186, 2187, 2179, 2180, 2182, 2586, 2029, 730,
	1464, 1186, 3581, 3248, 3049, 2902, 2421, 1484, 1481, 1482,
	1483, 1488, 1490, 1487, 2420, 1486, 3671, 4224, 2419, 4082,
	1485, 3035, 1222, 2436, 2437, 1480, 1054, 1537, 1542, 1543,
	3080, 1546, 1548, 1549, 1550, 1551, 1552, 2915, 1555, 1556,
	1558, 1558, 1820, 1558, 1558, 1563, 1563, 1563, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 4093, 1281, 1790, 1534, 1690, 4139, 1692, 1693,
	1694, 1695, 1696, 3016, 1453, 1454, 1233, 2580, 1127, 3746,
	1563, 1563, 1563, 1563, 1563, 1563, 3789, 3788, 2000, 1999,
	2001, 2002, 2003, 3703, 4218, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1547,
	1097, 1530, 1531, 1532, 1533, 4183, 1452, 1225, 1148, 729,
	1148, 1544, 729, 3039, 3746, 3019, 1097, 3637, 3638, 3640,
	2988, 3590, 1159, 4216, 1538, 1157, 98, 1559, 4217, 1560,
	1561, 1244, 1527, 91, 2018, 1225, 1471, 3378, 3379, 3526,
	3378, 3379, 3426, 4182, 2651, 3067, 1178, 1564, 1565, 4296,
	3382, 1193, 1141, 3382, 1148, 2438, 1177, 3038, 1920, 2415,
	1257, 2030, 2882, 2884, 2652, 1238, 1731, 684, 3057, 3628,
	2578, 3056, 1737, 2530, 1528, 1529, 3610, 2930, 2970, 2935,
	2854, 1054, 1276, 2165, 1278, 1054, 1811, 1691, 1237, 3209,
	3208, 1054, 692, 2480, 97, 1778, 1527, 1524, 1781, 3308,
	130, 1766, 1484, 1481, 1482, 1483, 1488, 1490, 1487, 2679,
	1486, 1147, 3316, 1147, 2531, 1185, 1767, 1728, 2668, 1507,
	1480, 2529, 1275, 1277, 1517, 1518, 1519, 1520, 1522, 1521,
	1523, 1524, 1072, 1243, 1284, 1249, 1250, 1251, 1252, 97,
	97, 4107, 1171, 97, 124, 3667, 3602, 1727, 2425, 2099,
	89, 1270, 3228, 2026, 3226, 2532, 1825, 1147, 2045, 1289,
	1290, 4239, 2206, 3317, 3107, 2528, 2198, 1919, 2688, 1223,
	1217, 1242, 1160, 1785, 2198, 1158, 3805, 2913, 1747, 2207,
	4262, 1748, 109, 1493, 1494, 110, 1494, 1728, 3319, 3645,
	1893, 1697, 1698, 1699, 1700, 1701, 1702, 1223, 3644, 1775,
	2679, 2565, 1929, 1735, 1928, 1918, 1777, 1776, 3314, 2017,
	2570, 2575, 2573, 1745, 1159, 3070, 3070, 1749, 1148, 4099,
	3069, 3069, 125, 1053, 730, 2570, 1789, 730, 3330, 3331,
	1157, 3087, 4254, 1273, 1221, 3315, 2883, 1274, 1148, 1896,
	1897, 1898, 2121, 2122, 2658, 2659, 112, 1279, 1912, 1782,
	1495, 2436, 2437, 2574, 2022, 1235, 2020, 2021, 2019, 2023,
	2024, 2025, 1148, 1067, 1769, 1767, 4304, 3629, 2572, 3321,
	1495, 1743, 1272, 2203, 2715, 4147, 1256, 2577, 4298, 1983,
	1905, 4294, 43, 1732, 4295, 735, 4293, 1258, 1050, 4256,
	1746, 1772, 1965, 1934, 1784, 1935, 1774, 1937, 1939, 1226,
	1924, 1943, 1945, 1947, 1949, 1951, 1973, 1974, 1744, 1271,
	1292, 3976, 1979, 1980, 1052, 3089, 2046, 2038, 2204, 1816,
	1817, 1147, 1922, 1922, 4148, 1241, 1151, 1141, 1923, 3975,
	1885, 1153, 2008, 2006, 729, 1154, 1152, 3329, 2133, 2192,
	3966, 1147, 1779, 1184, 1220, 3717, 1148, 1181, 98, 3332,
	3716, 1903, 2134, 1525, 1526, 2132, 1155, 1915, 1901, 1902,
	1222, 1495, 4305, 1148, 2014, 1147, 2015, 3652, 2131, 2016,
	1750, 1141, 1144, 1145, 4074, 1113, 3651, 724, 1969, 1138,
	1142, 2013, 1519, 1520, 1522, 1521, 1523, 1524, 1222, 3099,
	3098, 3097, 3641, 3700, 3091, 3701, 3095, 1926, 3090, 1492,
	3088, 1493, 1494, 2007, 2005, 3093, 1501, 1502, 1503, 1504,
	1505, 1506, 1500, 1497, 3092, 3355, 753, 2034, 1995, 1492,
	3348, 1493, 1494, 4075, 1961, 709, 2995, 1964, 3109, 1966,
	2994, 2354, 1723, 3094, 3096, 2351, 2993, 1721, 707, 2354,
	2536, 2009, 1719, 1124, 2353, 1720, 1718, 134, 1722, 1147,
	1123, 1993, 1122, 4267, 1767, 1141, 1144, 1145, 1992, 1113,
	983, 1991, 3256, 1138, 1142, 1981, 1147, 1975, 1495, 2051,
	3318, 1151, 1141, 988, 989, 990, 1153, 1458, 704, 1972,
	1154, 1152, 1292, 1292, 1137, 2047, 2048, 719, 1971, 1994,
	1970, 1495, 1941, 2073, 2443, 2444, 735, 1742, 89, 2052,
	1819, 89, 714, 3634, 4255, 735, 2059, 2060, 2061, 2977,
	1492, 735, 1493, 1494, 717, 1796, 4102, 727, 2072, 2546,
	2544, 2545, 2543, 2727, 4101, 728, 1513, 4078, 2542, 1509,
	2541, 1510, 106, 1491, 1767, 1895, 4282, 1767, 2095, 4242,
	1767, 2095, 107, 4077, 1495, 1511, 1525, 1526, 1508, 730,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1522, 1521, 1523,
	1524, 2160, 2160, 4076, 1797, 3971, 1495, 2158, 2158, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1522, 1521, 1523, 1524,
	2725, 3956, 2161, 4265, 1767, 694, 3955, 696, 710, 3804,
	732, 2123, 731, 700, 3802, 698, 702, 711, 703, 3713,
	697, 1726, 708, 1767, 1495, 699, 712, 713, 716, 720,
	721, 722, 718, 715, 1495, 706, 733, 1492, 1725, 1493,
	1494, 1895, 1767, 196, 1513, 1724, 3079, 1491, 1767, 2244,
	43, 3649, 1495, 43, 3633, 87, 4191, 1767, 87, 1513,
	1492, 3411, 1493, 1494, 1895, 4176, 135, 3408, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1522, 1521, 1523, 1524, 1767,
	4095, 2729, 178, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1522, 1521, 1523, 1524, 1895, 4157, 4003, 2098, 3351, 2096,
	2098, 1728, 2096, 2097, 2129, 2100, 2097, 3350, 2130, 3061,
	2080, 2081, 2049, 1492, 2193, 1493, 1494, 1767, 4002, 2053,
	3004, 2055, 2056, 2057, 2058, 1495, 4189, 1767, 2062, 1495,
	3960, 1727, 3322, 2135, 2677, 1492, 3326, 1493, 1494, 2991,
	2074, 1723, 175, 3325, 2676, 176, 1895, 4153, 2136, 1717,
	2138, 2139, 2140, 2141, 2142, 2143, 2145, 2147, 2148, 2149,
	2150, 2151, 2152, 2137, 4056, 1767, 2164, 1495, 2362, 2268,
	2641, 195, 2633, 1492, 2632, 1493, 1494, 3327, 3685, 4092,
	3959, 1555, 3323, 1492, 2592, 1493, 1494, 3324, 4070, 1767,
	3587, 2364, 2591, 2363, 2208, 2209, 2210, 2211, 1495, 2352,
	1513, 1492, 2667, 1493, 1494, 1538, 2433, 2350, 2222, 2243,
	3979, 1767, 3026, 196, 1895, 3967, 3009, 4187, 1767, 3685,
	1767, 4049, 1767, 2199, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1522, 1521, 1523, 1524, 2260, 135, 1895, 3683, 3601,
	1495, 2429, 1515, 1516, 1517, 1518, 1519, 1520, 1522, 1521,
	1523, 1524, 178, 115, 2361, 2570, 1767, 2367, 2368, 4047,
	1767, 1495, 3608, 1767, 114, 1495, 113, 2459, 2398, 1495,
	2900, 2076, 109, 106, 1492, 110, 1493, 1494, 1492, 108,
	1493, 1494, 2042, 107, 108, 2675, 179, 2004, 2362, 1996,
	4044, 1767, 2809, 1767, 109, 185, 1513, 110, 2979, 3341,
	3340, 2397, 1495, 2409, 2121, 2122, 2119, 2120, 108, 2489,
	1986, 2364, 175, 2448, 1982, 176, 1492, 734, 1493, 1494,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1522, 1521, 1523,
	1524, 2118, 4026, 1767, 1495, 3338, 3339, 2488, 725, 1767,
	1118, 195, 3336, 3337, 1767, 3336, 3335, 1492, 2898, 1493,
	1494, 2945, 1767, 726, 2385, 1495, 2417, 3567, 1767, 114,
	1495, 3560, 1767, 2484, 2498, 2499, 2500, 2501, 1118, 2651,
	3048, 1491, 2483, 1767, 2684, 1495, 2410, 1978, 1068, 2465,
	1977, 2493, 1976, 2494, 2495, 2496, 2497, 1495, 2403, 1492,
	2404, 1493, 1494, 2416, 3557, 1767, 2519, 2503, 2966, 2461,
	2505, 2506, 2507, 2508, 2487, 2426, 1495, 1889, 3029, 2966,
	1492, 2559, 1493, 1494, 1492, 1798, 1493, 1494, 1492, 2525,
	1493, 1494, 3022, 3023, 170, 2446, 3555, 1767, 2937, 115,
	1103, 2163, 1767, 1491, 1102, 2471, 2470, 2469, 1495, 1282,
	114, 4134, 113, 2556, 2486, 2485, 4106, 3518, 1767, 1495,
	108, 1492, 2683, 1493, 1494, 1495, 179, 1895, 1894, 2535,
	1495, 1889, 1888, 1831, 1830, 185, 2967, 3516, 1767, 1495,
	3273, 2944, 2937, 2571, 3303, 1495, 2969, 2967, 3605, 3512,
	1767, 3601, 1895, 1492, 2651, 1493, 1494, 2651, 2945, 1495,
	2516, 2520, 2564, 3546, 3338, 2567, 2584, 2568, 3509, 1767,
	2534, 2509, 2511, 2512, 1492, 2945, 1493, 1494, 1150, 1492,
	1495, 1493, 1494, 3231, 98, 1767, 2472, 1149, 1922, 2809,
	2712, 2520, 2563, 2566, 1492, 2562, 1493, 1494, 2711, 2588,
	3507, 1767, 2945, 2589, 2590, 2585, 1492, 2570, 1493, 1494,
	1495, 3505, 1767, 2570, 1495, 1055, 3604, 3503, 1767, 3601,
	1495, 2553, 3501, 1767, 1495, 1492, 2441, 1493, 1494, 2428,
	1783, 3499, 1767, 2388, 1495, 2596, 2656, 3497, 1767, 2163,
	2101, 1495, 3443, 2595, 2085, 1054, 1054, 1054, 2028, 1818,
	1768, 1770, 1495, 1132, 1131, 4222, 1495, 1492, 4159, 1493,
	1494, 1495, 3653, 3990, 170, 1548, 100, 1548, 1492, 3957,
	1493, 1494, 3495, 1767, 1492, 1495, 1493, 1494, 3817, 1492,
	128, 1493, 1494, 2671, 1957, 3666, 3663, 3647, 1492, 3459,
	1493, 1494, 3458, 1891, 1492, 2518, 1493, 1494, 98, 3360,
	3356, 3000, 3493, 1767, 2626, 3358, 3491, 1767, 1492, 3254,
	1493, 1494, 2674, 1767, 3030, 3001, 3489, 1767, 2515, 3654,
	3655, 3656, 2510, 1495, 2504, 3403, 3487, 1767, 1495, 1492,
	2502, 1493, 1494, 171, 4257, 2364, 1495, 2363, 2011, 1917,
	183, 1958, 1959, 1960, 3485, 1767, 1913, 3991, 3483, 1767,
	1887, 126, 1225, 3481, 1767, 3001, 2643, 1495, 2533, 1492,
	2401, 1493, 1494, 1492, 3657, 1493, 1494, 3479, 1767, 1492,
	2649, 1493, 1494, 1492, 1495, 1493, 1494, 2078, 1495, 3615,
	3616, 191, 2657, 1492, 4277, 1493, 1494, 4275, 4249, 1495,
	1492, 4114, 1493, 1494, 2660, 2661, 2662, 2663, 2129, 4031,
	3618, 1492, 2130, 1493, 1494, 1492, 1495, 1493, 1494, 1953,
	1492, 3586, 1493, 1494, 1729, 3465, 1767, 3658, 3659, 3660,
	3441, 1767, 3585, 3584, 1492, 3273, 1493, 1494, 2874, 1767,
	172, 177, 174, 180, 181, 182, 184, 186, 187, 188,
	189, 2664, 1495, 2666, 2079, 3249, 190, 192, 193, 194,
	4091, 2627, 2669, 3295, 2670, 3293, 2665, 689, 3296, 2687,
	3294, 3621, 1954, 1955, 1956, 3620, 2872, 1767, 3292, 3291,
	2847, 1767, 1492, 1495, 1493, 1494, 3772, 1492, 3771, 1493,
	1494, 2824, 1767, 2853, 4110, 1492, 1495, 1493, 1494, 2950,
	2953, 2954, 2955, 2951, 3992, 2952, 2956, 2432, 2816, 1767,
	1795, 2672, 3297, 171, 2954, 2955, 1492, 2841, 1493, 1494,
	183, 1070, 2407, 2723, 3609, 2885, 3236, 3235, 4073, 3795,
	3797, 3597, 2160, 1492, 3594, 1493, 1494, 1492, 2158, 1493,
	1494, 3770, 3593, 752, 2807, 1767, 3263, 3265, 1492, 1073,
	1493, 1494, 2888, 2027, 3260, 3266, 1038, 1074, 1054, 1495,
	3334, 191, 2984, 3005, 1082, 1492, 1495, 1493, 1494, 2126,
	2124, 2125, 1071, 2886, 2619, 2805, 1767, 2618, 1081, 2206,
	1800, 2942, 2943, 2617, 2616, 2615, 2635, 2636, 2792, 1767,
	2459, 2638, 2614, 1054, 2962, 2889, 2207, 2891, 1495, 2613,
	2639, 1492, 1188, 1493, 1494, 1187, 1495, 3419, 3000, 3073,
	172, 177, 174, 180, 181, 182, 184, 186, 187, 188,
	189, 2941, 1457, 3036, 135, 3599, 190, 192, 193, 194,
	108, 106, 1492, 2922, 1493, 1494, 4290, 108, 1495, 3253,
	1513, 107, 2630, 106, 4194, 1492, 1495, 1493, 1494, 2906,
	3986, 1799, 1735, 107, 3333, 2876, 1495, 2958, 2790, 1767,
	1495, 2443, 2444, 2931, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1522, 1521, 1523, 1524, 1495, 2427, 2901, 2905, 2960,
	2904, 1119, 113, 3569, 1495, 3234, 2655, 2084, 1789, 2920,
	2788, 1767, 1728, 3233, 2987, 2989, 2083, 2896, 2786, 1767,
	2934, 1495, 3034, 115, 2980, 4055, 2964, 2919, 1492, 4054,
	1493, 1494, 4034, 43, 114, 1492, 113, 1493, 1494, 3803,
	3782, 3801, 2959, 2968, 1495, 2961, 3800, 3783, 2971, 1495,
	2784, 1767, 3664, 3598, 2525, 3596, 2978, 2981, 2782, 1767,
	3003, 3361, 2554, 114, 3045, 3006, 3007, 1492, 3998, 1493,
	1494, 1495, 2780, 1767, 1900, 1492, 2992, 1493, 1494, 115,
	2201, 1080, 115, 1495, 3579, 2202, 4278, 2778, 1767, 1495,
	114, 2937, 113, 114, 3002, 1495, 2776, 1767, 4279, 4278,
	108, 3756, 2900, 3, 3137, 2713, 3010, 1492, 2399, 1493,
	1494, 1812, 1495, 3623, 3042, 1492, 1804, 1493, 1494, 119,
	120, 1905, 4279, 2264, 102, 1492, 4079, 1493, 1494, 1492,
	3632, 1493, 1494, 3083, 3084, 4143, 2774, 1767, 5, 3031,
	3032, 2772, 1767, 1, 1492, 1046, 1493, 1494, 1460, 1459,
	1495, 3636, 4211, 1492, 3041, 1493, 1494, 705, 2389, 1733,
	4250, 4207, 4208, 2770, 1767, 1997, 2189, 1495, 1987, 3695,
	1492, 2315, 1493, 1494, 3987, 2768, 1767, 3784, 3786, 3364,
	3081, 2766, 1767, 3062, 2560, 3662, 3100, 3562, 3065, 2523,
	1140, 160, 1495, 1492, 2481, 1493, 1494, 1495, 1492, 2482,
	1493, 1494, 4171, 2347, 2764, 1767, 123, 1495, 1106, 122,
	3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127,
	1492, 1495, 1493, 1494, 1143, 1255, 2555, 3686, 2985, 1495,
	3135, 2490, 1492, 2379, 1493, 1494, 1837, 3101, 1492, 1835,
	1493, 1494, 2762, 1767, 1492, 1836, 1493, 1494, 1834, 1839,
	1768, 2386, 1838, 1495, 3043, 4138, 3427, 2714, 3525, 2760,
	1767, 1492, 2089, 1493, 1494, 2181, 2170, 2171, 2172, 2173,
	2183, 2174, 2175, 2176, 2188, 2184, 2177, 2178, 2185, 2186,
	2187, 2179, 2180, 2182, 2758, 1767, 742, 3139, 2957, 2753,
	1767, 2411, 736, 3195, 3071, 198, 1495, 3072, 1826, 1492,
	3963, 1493, 1494, 1805, 2082, 1182, 695, 3342, 1729, 3085,
	2593, 701, 1545, 2749, 1767, 1495, 1492, 3102, 1493, 1494,
	3082, 2747, 1767, 2077, 3232, 1495, 2950, 2953, 2954, 2955,
	2951, 3213, 2952, 2956, 3202, 2972, 3615, 3616, 1495, 1100,
	1092, 1492, 3204, 1493, 1494, 3558, 1492, 2400, 1493, 1494,
	2890, 2459, 1099, 3021, 3964, 2258, 1492, 3281, 1493, 1494,
	3591, 2352, 3259, 2352, 3261, 2924, 1495, 3128, 3264, 2350,
	1492, 2350, 1493, 1494, 3175, 3257, 4072, 3794, 1492, 4158,
	1493, 1494, 2982, 1801, 3185, 3186, 3187, 3188, 3189, 3668,
	3545, 3280, 1495, 89, 2686, 2196, 2459, 2459, 2459, 2459,
	2459, 3203, 1492, 3205, 1493, 1494, 1535, 2740, 1767, 767,
	2458, 938, 3213, 1787, 2537, 3751, 2459, 3212, 2996, 2459,
	1495, 2116, 765, 764, 3285, 762, 2892, 2938, 3302, 1499,
	2738, 1767, 1495, 1498, 973, 2341, 2342, 2343, 2344, 2345,
	3240, 3224, 3230, 2880, 1813, 1492, 3238, 1493, 1494, 3239,
	1495, 2949, 2366, 2947, 3237, 2369, 2370, 3247, 3524, 3250,
	3251, 3252, 2946, 2628, 1492, 1495, 1493, 1494, 2466, 3617,
	2038, 1495, 3267, 3268, 1492, 3613, 1493, 1494, 3381, 4203,
	3225, 3227, 3229, 2461, 3520, 2460, 2456, 1492, 3389, 1493,
	1494, 2387, 3298, 3287, 3288, 1058, 3290, 1059, 3394, 3286,
	3284, 1495, 3289, 2899, 109, 3304, 924, 110, 3305, 923,
	774, 766, 3456, 3306, 1495, 1492, 756, 1493, 1494, 1495,
	987, 3312, 922, 1495, 3455, 1057, 3343, 921, 2461, 2461,
	2461, 2461, 2461, 3344, 3346, 3347, 3279, 3345, 3391, 3392,
	2914, 1492, 3447, 1493, 1494, 1780, 3255, 1495, 2461, 2916,
	2983, 2461, 1495, 3243, 3362, 1476, 1495, 3445, 1752, 3390,
	2525, 3393, 3383, 2870, 1755, 2408, 1773, 1495, 3424, 1492,
	3400, 1493, 1494, 4097, 2654, 3453, 1751, 4104, 3270, 3372,
	3680, 1492, 3353, 1493, 1494, 3027, 2547, 3415, 71, 3412,
	3414, 47, 3422, 2869, 4064, 4135, 916, 913, 3753, 1492,
	3754, 1493, 1494, 3432, 3755, 3198, 2865, 3276, 1495, 3199,
	4117, 2864, 3276, 4118, 1492, 2863, 1493, 1494, 912, 4119,
	1492, 2253, 1493, 1494, 3448, 3449, 3450, 3451, 3452, 1470,
	3429, 3430, 1467, 3431, 3011, 2091, 3433, 101, 3435, 2862,
	3437, 37, 36, 35, 2861, 34, 33, 27, 2860, 26,
	1492, 25, 1493, 1494, 24, 23, 30, 1548, 20, 2851,
	22, 1548, 21, 1492, 19, 1493, 1494, 4198, 1492, 4197,
	1493, 1494, 1492, 4140, 1493, 1494, 3375, 3570, 4245, 3572,
	4289, 129, 57, 54, 52, 137, 2673, 3540, 136, 55,
	2678, 53, 3580, 3363, 3544, 51, 1492, 50, 1493, 1494,
	2850, 1492, 1228, 1493, 1494, 1492, 48, 1493, 1494, 99,
	32, 31, 18, 2681, 17, 2682, 1492, 16, 1493, 1494,
	15, 2690, 14, 13, 12, 2692, 2693, 8, 7, 40,
	39, 38, 3423, 29, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 28, 2710, 3571, 3575, 3573, 41,
	4, 3014, 2549, 0, 2459, 0, 0, 1492, 0, 1493,
	1494, 0, 0, 0, 0, 0, 1495, 3630, 2716, 2717,
	2718, 2719, 0, 2721, 2722, 3588, 2724, 3394, 3595, 0,
	2726, 0, 0, 1495, 2731, 2732, 3577, 2733, 3600, 1495,
	2736, 2737, 2739, 2741, 2742, 2743, 2744, 2745, 2746, 2748,
	2750, 2751, 2752, 2754, 1495, 2756, 2757, 2759, 2761, 2763,
	2765, 2767, 2769, 2771, 2773, 2775, 2777, 2779, 2781, 2783,
	2785, 2787, 2789, 2791, 2793, 2794, 2795, 3622, 2797, 3384,
	2799, 754, 2801, 2802, 3612, 2804, 2806, 2808, 3390, 3624,
	3393, 2811, 3631, 3625, 3547, 2815, 3549, 3550, 3551, 2820,
	2821, 2822, 2823, 3626, 3627, 3648, 3619, 3650, 2849, 0,
	3642, 3643, 2834, 2835, 2836, 2837, 2838, 2839, 0, 1495,
	2843, 2844, 0, 0, 1495, 2848, 0, 0, 2846, 0,
	1495, 2845, 0, 2852, 0, 0, 2461, 0, 2855, 2856,
	2857, 2858, 2859, 1495, 0, 0, 2840, 1495, 0, 2866,
	2867, 1495, 2868, 0, 0, 2871, 2873, 2411, 3673, 2875,
	3690, 3691, 3677, 3678, 3679, 1492, 0, 1493, 1494, 2887,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 3692,
	3417, 3418, 1492, 0, 1493, 1494, 1495, 0, 1492, 0,
	1493, 1494, 1495, 0, 0, 1079, 0, 0, 1085, 1085,
	3707, 2921, 0, 1492, 0, 1493, 1494, 0, 0, 1495,
	0, 2833, 0, 0, 1495, 2694, 2832, 0, 0, 1495,
	0, 3718, 2831, 1495, 0, 0, 0, 0, 1495, 0,
	0, 0, 2709, 1495, 0, 2830, 0, 0, 1495, 2829,
	0, 0, 1495, 2828, 0, 0, 0, 1495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3759, 2827, 3760, 3761, 3762, 0, 0, 1492, 3769,
	1493, 1494, 3776, 1492, 3778, 1493, 1494, 0, 2826, 1492,
	0, 1493, 1494, 0, 2825, 0, 3749, 0, 0, 3779,
	0, 0, 1492, 0, 1493, 1494, 1492, 0, 1493, 1494,
	1492, 2819, 1493, 1494, 0, 3280, 2818, 0, 89, 0,
	3280, 2817, 1495, 0, 0, 2814, 0, 3777, 0, 1492,
	2813, 1493, 1494, 0, 0, 2812, 2160, 1495, 0, 0,
	2810, 0, 2158, 1495, 2803, 1492, 3780, 1493, 1494, 2800,
	0, 1492, 1495, 1493, 1494, 3712, 3819, 3798, 3811, 3799,
	0, 0, 3809, 0, 0, 1495, 0, 3806, 1492, 3808,
	1493, 1494, 0, 1492, 0, 1493, 1494, 0, 1492, 0,
	1493, 1494, 1492, 3970, 1493, 1494, 0, 1492, 0, 1493,
	1494, 0, 1492, 0, 1493, 1494, 3823, 1492, 0, 1493,
	1494, 1492, 0, 1493, 1494, 0, 1492, 0, 1493, 1494,
	0, 0, 0, 0, 2798, 0, 0, 0, 0, 3669,
	3670, 0, 0, 0, 0, 3962, 3961, 0, 0, 2796,
	0, 3989, 0, 3820, 3821, 2755, 3977, 0, 0, 0,
	0, 0, 3981, 3982, 2735, 0, 0, 0, 0, 2387,
	43, 0, 0, 0, 0, 4028, 0, 2734, 4029, 0,
	3279, 2160, 0, 0, 0, 3279, 3813, 2158, 3972, 3973,
	3974, 1492, 0, 1493, 1494, 0, 3113, 3114, 3115, 3116,
	3117, 4032, 0, 0, 0, 0, 1492, 0, 1493, 1494,
	0, 0, 1492, 0, 1493, 1494, 3132, 0, 0, 0,
	0, 1492, 0, 1493, 1494, 0, 0, 0, 0, 4035,
	0, 0, 0, 4038, 1492, 0, 1493, 1494, 0, 0,
	4080, 3280, 0, 0, 4052, 0, 0, 0, 3969, 3276,
	3815, 4058, 0, 4060, 0, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1686, 1687,
	1688, 1689, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 3279, 4081, 4062, 4033,
	4061, 1495, 0, 0, 0, 0, 1495, 0, 0, 4098,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	3103, 1757, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 1495, 0, 0, 1765, 1495, 4084, 1758, 0,
	1495, 0, 0, 1765, 3282, 3965, 1758, 4083, 4103, 4100,
	0, 0, 0, 0, 0, 0, 0, 4105, 4088, 0,
	0, 1495, 3300, 2405, 2406, 1764, 1762, 1763, 1759, 0,
	1760, 1753, 1754, 1764, 1762, 1763, 1759, 0, 1760, 0,
	0, 0, 0, 2730, 0, 0, 0, 0, 2728, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	89, 1761, 0, 0, 0, 4123, 0, 0, 4124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4155, 0,
	0, 0, 0, 0, 2720, 0, 0, 0, 2691, 4133,
	0, 0, 2685, 0, 0, 0, 4145, 4141, 0, 4149,
	1492, 0, 1493, 1494, 4096, 1492, 0, 1493, 1494, 43,
	0, 0, 3177, 2680, 3179, 4160, 0, 0, 0, 4169,
	4184, 0, 4163, 3989, 4173, 4170, 4168, 1496, 4165, 4164,
	3190, 3191, 3192, 3193, 4146, 89, 4162, 4167, 4166, 0,
	3421, 1492, 4192, 1493, 1494, 1492, 0, 1493, 1494, 1492,
	0, 1493, 1494, 0, 0, 0, 4085, 0, 1554, 4202,
	0, 0, 3438, 3439, 0, 3440, 3442, 3444, 4210, 4215,
	1492, 0, 1493, 1494, 0, 0, 0, 0, 0, 0,
	0, 4227, 4184, 4225, 0, 4238, 0, 0, 0, 89,
	0, 0, 43, 3457, 0, 0, 0, 87, 3460, 4237,
	3462, 3463, 3464, 3466, 3467, 3468, 3469, 3470, 3471, 3472,
	3473, 3474, 3475, 3476, 3477, 3478, 3480, 3482, 3484, 3486,
	3488, 3490, 3492, 3494, 3496, 3498, 3500, 3502, 3504, 3506,
	3508, 3510, 3511, 3513, 3514, 3515, 3517, 4263, 2160, 3519,
	4260, 3521, 3522, 3523, 2158, 4270, 3527, 3528, 3529, 3530,
	3531, 3532, 3533, 3534, 3535, 3536, 3537, 4276, 4273, 4274,
	4272, 4269, 4283, 4184, 2038, 3543, 4259, 43, 4244, 3548,
	4156, 4291, 87, 3552, 3553, 4151, 3554, 3556, 4299, 3559,
	3561, 4297, 3563, 3564, 3565, 3566, 4199, 3276, 0, 0,
	0, 0, 3574, 0, 0, 2160, 4090, 0, 4308, 4309,
	0, 2158, 4029, 4307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4306, 0, 0, 0, 0,
	0, 43, 0, 0, 0, 0, 87, 0, 0, 4108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4240, 0, 3606, 3607, 0, 0, 3611, 4243, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 4233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3684, 0, 0,
	0, 0, 1803, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3702, 0, 0, 3706,
	1892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1842, 0, 0, 0, 0, 0, 0,
	1036, 0, 0, 3719, 0, 974, 1037, 988, 989, 990,
	975, 0, 0, 976, 977, 0, 978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 991, 992, 0, 0, 0, 0,
	0, 4258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 0, 0, 3742, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 0,
	3750, 0, 0, 0, 0, 0, 0, 3757, 0, 0,
	0, 0, 0, 0, 2043, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 4185, 0, 0,
	0, 0, 0, 1869, 1872, 1873, 1874, 1875, 1876, 1877,
	0, 1878, 1879, 1881, 1882, 1880, 1883, 1884, 1857, 1858,
	1859, 1860, 1840, 1841, 1870, 0, 1843, 0, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 0, 3397, 1853,
	1861, 1862, 1863, 1864, 0, 1865, 1866, 1867, 1868, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3978, 0, 0, 0, 0, 0, 0, 0,
	0, 3985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3995, 3996, 3997, 0, 3999, 0, 4000, 4001, 0, 3398,
	3399, 0, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011,
	4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021,
	4022, 4023, 4024, 4025, 0, 4027, 4030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3740, 4039, 4040, 4041, 4042, 4043, 4045, 4046, 4048, 4050,
	4051, 4053, 0, 0, 0, 4057, 0, 0, 0, 4059,
	0, 0, 0, 0, 0, 0, 4069, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2111, 2112, 2113, 2114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2127,
	0, 0, 0, 0, 4089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2166, 2167, 1871, 0, 0, 0,
	2190, 0, 0, 2194, 2195, 0, 0, 0, 2200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 0, 2223, 0, 0, 0, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2254, 0, 2259, 0,
	2261, 2262, 2263, 0, 2265, 2266, 2267, 0, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 0, 0, 0,
	0, 0, 2346, 0, 2348, 0, 2355, 2356, 2357, 2358,
	2359, 2360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 4068, 2380, 2381, 2382, 2383, 2384, 0,
	4113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4183,
	0, 0, 0, 0, 4128, 0, 0, 0, 0, 0,
	4131, 0, 4132, 0, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4182, 4154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2439, 2440, 4178, 4179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 4186, 4188, 4190,
	0, 0, 0, 0, 0, 0, 0, 2478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 201, 0, 0,
	0, 740, 0, 0, 0, 0, 746, 0, 0, 2521,
	0, 0, 0, 0, 0, 4241, 0, 201, 0, 0,
	1729, 3844, 3846, 3845, 3911, 3912, 3913, 3914, 3915, 3916,
	3917, 3847, 3848, 816, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4264, 4266, 4268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 201, 746, 1036, 746, 0, 2354, 0, 0,
	1037, 0, 0, 0, 0, 0, 4112, 1736, 0, 0,
	2159, 4288, 0, 0, 4122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4300, 4301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1036,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1041, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 0, 0, 1114, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3860, 3861, 0, 0, 3936, 3935, 3934, 0, 0, 3932,
	3933, 3931, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2695, 2696, 2697, 2698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3937, 939, 0, 792, 793,
	3938, 3939, 943, 3940, 795, 796, 940, 941, 0, 790,
	794, 942, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3841, 3842,
	3843, 3849, 3850, 3851, 3862, 3909, 3910, 3918, 3920, 895,
	3919, 3921, 3922, 3923, 3926, 3927, 3928, 3929, 3924, 3925,
	3930, 3824, 3828, 3825, 3826, 3827, 3839, 3829, 3830, 3831,
	3832, 3833, 3834, 3835, 3836, 3837, 3838, 3840, 3941, 3942,
	3943, 3944, 3945, 3946, 3855, 3859, 3858, 3856, 3857, 3853,
	3854, 3881, 3880, 3882, 3883, 3884, 3885, 3886, 3887, 3889,
	3888, 3890, 3891, 3892, 3893, 3894, 3895, 3863, 3864, 3867,
	3868, 3866, 3865, 3869, 3878, 3879, 3870, 3871, 3872, 3873,
	3874, 3875, 3877, 3876, 3896, 3897, 3898, 3899, 3900, 3902,
	3901, 3905, 3906, 3904, 3903, 3908, 3907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	945, 0, 946, 0, 0, 950, 0, 0, 0, 952,
	951, 0, 953, 915, 914, 0, 0, 947, 948, 0,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 168, 201, 0, 1856, 0, 0, 156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 746, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 145, 167, 166, 195, 0, 0,
	0, 0, 0, 0, 746, 201, 0, 0, 0, 0,
	0, 1869, 1872, 1873, 1874, 1875, 1876, 1877, 0, 1878,
	1879, 1881, 1882, 1880, 1883, 1884, 1857, 1858, 1859, 1860,
	1840, 1841, 1870, 1540, 1843, 0, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 0, 0, 1853, 1861, 1862,
	1863, 1864, 0, 1865, 1866, 1867, 1868, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1229, 0, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3078, 161,
	142, 164, 149, 141, 0, 162, 163, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 150, 0, 0, 3104, 3105, 3106, 0, 0,
	3108, 0, 0, 3110, 0, 0, 153, 151, 146, 147,
	148, 152, 0, 0, 0, 0, 1466, 0, 143, 0,
	0, 0, 0, 3129, 3130, 3131, 0, 154, 0, 0,
	0, 0, 3136, 0, 0, 0, 0, 3138, 0, 0,
	3140, 3141, 3142, 0, 0, 0, 3143, 3144, 0, 0,
	3145, 0, 3146, 0, 0, 0, 0, 0, 0, 3147,
	0, 3148, 0, 0, 0, 3149, 0, 3150, 0, 0,
	3151, 0, 3152, 0, 3153, 0, 3154, 0, 3155, 0,
	3156, 0, 3157, 0, 3158, 0, 3159, 0, 3160, 0,
	3161, 0, 3162, 0, 3163, 0, 3164, 0, 3165, 0,
	3166, 0, 3167, 0, 3168, 0, 0, 0, 3169, 0,
	3170, 0, 3171, 0, 0, 3172, 0, 3173, 0, 3174,
	170, 2318, 3176, 0, 0, 3178, 0, 0, 3180, 3181,
	3182, 3183, 0, 0, 1871, 0, 3184, 2318, 2318, 2318,
	2318, 2318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3194, 0, 0, 0, 0, 0, 0, 0,
	3207, 0, 0, 3211, 0, 0, 201, 0, 0, 0,
	746, 746, 3214, 3215, 3216, 3217, 3218, 3219, 0, 0,
	0, 3220, 3221, 0, 3222, 0, 3223, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1085, 0, 746, 0, 0, 201, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 0, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 746, 3301, 0, 1540, 746, 0, 0,
	746, 746, 746, 746, 0, 746, 0, 746, 746, 0,
	746, 746, 746, 746, 746, 746, 0, 0, 0, 0,
	0, 0, 0, 1540, 746, 746, 1540, 746, 1540, 201,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 159, 201,
	3359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 746, 171,
	0, 746, 0, 0, 201, 201, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 746, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3461,
	1967, 0, 0, 0, 0, 0, 172, 177, 174, 180,
	181, 182, 184, 186, 187, 188, 189, 0, 0, 0,
	0, 0, 190, 192, 193, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2050, 0, 0, 0, 0, 0, 0, 2054,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 968, 0,
	0, 0, 0, 0, 1540, 0, 0, 0, 3665, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 1540, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3689, 0, 0, 0, 0, 175, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 723, 0, 0, 0, 0, 0, 745, 0,
	0, 1908, 1909, 167, 166, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2104, 0, 0, 0, 0,
	0, 0, 0, 3708, 0, 3709, 0, 3710, 0, 3711,
	0, 0, 0, 0, 0, 0, 0, 3714, 3715, 0,
	0, 0, 0, 0, 0, 0, 0, 3720, 0, 0,
	0, 0, 0, 745, 0, 745, 0, 745, 0, 0,
	0, 3721, 0, 3722, 0, 3723, 0, 3724, 0, 3725,
	0, 3726, 0, 3727, 0, 3728, 0, 3729, 0, 3730,
	0, 3731, 0, 3732, 0, 3733, 0, 3734, 2365, 3735,
	0, 3736, 0, 0, 3737, 0, 0, 0, 3738, 0,
	3739, 0, 0, 0, 0, 0, 3741, 161, 1910, 164,
	0, 1907, 0, 162, 163, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 3758, 185,
	0, 0, 0, 201, 0, 0, 0, 3763, 746, 3764,
	3765, 0, 3766, 0, 3767, 0, 0, 0, 0, 3768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 0, 1904, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 3807, 0, 135, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 3816, 0, 0,
	3818, 201, 178, 0, 0, 746, 0, 0, 2365, 201,
	0, 201, 3822, 201, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 3958,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 175, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 1908, 1909, 167,
	166, 195, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 0, 0, 746, 746, 0, 0, 746, 0,
	746, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	0, 0, 925, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2445, 0, 0, 0, 0, 0, 0, 0,
	2449, 0, 2452, 0, 165, 2104, 0, 0, 0, 0,
	0, 746, 0, 0, 4067, 0, 746, 0, 0, 0,
	746, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 1910, 164, 0, 1907, 0, 162,
	163, 0, 744, 0, 0, 0, 179, 0, 201, 0,
	0, 0, 0, 0, 201, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 201, 0, 0, 201,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 1117,
	0, 1121, 0, 158, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 191, 0, 0, 0, 2104,
	0, 0, 0, 0, 0, 2603, 0, 0, 0, 0,
	1540, 0, 2365, 0, 0, 0, 2624, 2625, 0, 0,
	2629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4111, 0, 2634, 0, 0, 0, 0, 0, 0, 2637,
	0, 0, 0, 0, 172, 177, 174, 180, 181, 182,
	184, 186, 187, 188, 189, 0, 0, 0, 0, 0,
	190, 192, 193, 194, 0, 2640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4125, 0, 0, 4126,
	0, 4127, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 1451, 745, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4221, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4234,
	0, 4235, 0, 4236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 201, 0, 0, 0, 0,
	183, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 746, 746, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4286, 0, 4287,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 177, 174, 180, 181, 182, 184, 186, 187, 188,
	189, 0, 0, 0, 0, 0, 190, 192, 193, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 746, 746, 0, 0, 0, 746, 0, 0,
	0, 0, 745, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1540, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 201, 201, 201, 201, 201,
	0, 0, 2963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 201, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 1294, 1294,
	0, 0, 0, 0, 0, 745, 0, 745, 0, 0,
	0, 0, 0, 0, 746, 745, 0, 0, 1539, 745,
	1465, 0, 745, 745, 745, 745, 0, 745, 0, 745,
	745, 0, 745, 745, 745, 745, 745, 745, 0, 0,
	0, 0, 0, 0, 0, 1539, 745, 745, 1539, 745,
	1539, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3050, 3051, 3052, 3053, 3054,
	3055, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 745, 2104, 3066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 201, 201,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 1540, 0, 0, 746,
	746, 1540, 201, 201, 201, 201, 201, 0, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	201, 0, 201, 0, 0, 201, 201, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 1739, 1740, 0, 0,
	745, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 746,
	0, 0, 1540, 0, 0, 0, 0, 746, 0, 0,
	0, 0, 201, 1827, 0, 0, 0, 0, 0, 0,
	3242, 0, 3246, 0, 1886, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 201, 0, 0, 201, 0, 1539, 0, 0, 1110,
	0, 1916, 0, 0, 0, 2168, 0, 0, 0, 1925,
	0, 0, 0, 1927, 1539, 0, 1930, 1931, 1933, 1933,
	0, 1933, 0, 1933, 1933, 0, 1942, 1933, 1933, 1933,
	1933, 1933, 0, 0, 0, 0, 0, 0, 0, 0,
	1962, 1963, 0, 1110, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 926, 0, 0, 2031, 0, 0, 2035, 0, 0,
	0, 0, 0, 3387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3401, 0, 0,
	0, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3413, 0, 0, 3416, 0, 0, 0, 0,
	0, 0, 1294, 0, 0, 0, 0, 0, 0, 199,
	745, 0, 688, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 201, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 1086, 1086,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 746, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1294, 1294, 3582, 3583, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2092,
	746, 746, 746, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 745, 745, 0, 0,
	745, 0, 745, 0, 0, 0, 0, 0, 745, 0,
	2154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 745, 0,
	0, 0, 745, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 746,
	0, 201, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 201, 201, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	0, 0, 201, 0, 0, 746, 0, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2402, 0, 201, 0, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 1539, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3790,
	0, 0, 3791, 3792, 3793, 0, 0, 0, 88, 45,
	46, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 1294, 0, 0, 95, 0, 0,
	0, 49, 78, 79, 0, 76, 80, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 746, 77, 0, 0,
	0, 0, 0, 746, 0, 746, 0, 0, 0, 100,
	0, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 1117, 0, 0, 0, 0, 0, 2540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 688, 0, 688, 0,
	1117, 1925, 0, 0, 1925, 0, 1925, 0, 0, 0,
	0, 85, 2569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	0, 0, 2154, 0, 0, 0, 2154, 2154, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 1541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 745,
	745, 0, 0, 0, 746, 0, 92, 56, 59, 58,
	61, 0, 75, 0, 745, 84, 81, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 201, 63,
	94, 93, 0, 0, 73, 74, 60, 0, 0, 0,
	0, 0, 82, 83, 0, 0, 0, 0, 0, 2976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4144, 66, 0, 67,
	68, 69, 70, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1540, 746, 0, 746,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 745, 745, 0, 0, 1294, 745,
	0, 0, 0, 746, 2365, 0, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 1539, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 91, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 201, 0, 0, 0, 1065, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 88, 45, 46, 90, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 688,
	95, 0, 0, 0, 49, 78, 79, 0, 76, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 0, 0, 0, 1541, 0,
	2893, 1541, 0, 1541, 688, 0, 0, 0, 0, 0,
	0, 0, 2909, 2910, 2911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 2926, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 745, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 688, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 72, 0, 0, 0,
	0, 0, 2063, 2064, 688, 688, 688, 688, 688, 688,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 3008, 0, 1539, 0,
	0, 745, 745, 1539, 0, 0, 0, 0, 0, 92,
	56, 59, 58, 61, 0, 75, 0, 1121, 84, 81,
	0, 0, 0, 0, 3028, 0, 0, 0, 1925, 1925,
	0, 0, 0, 3033, 0, 0, 0, 0, 0, 0,
	0, 0, 63, 94, 93, 0, 0, 73, 74, 60,
	3044, 0, 0, 0, 0, 82, 83, 0, 0, 0,
	0, 0, 0, 0, 3349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 1539, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 65,
	66, 0, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3420, 0, 0, 0,
	2154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 0, 62, 1036, 0, 688,
	0, 0, 974, 1037, 988, 989, 990, 975, 0, 0,
	976, 977, 0, 978, 0, 0, 0, 0, 0, 0,
	2154, 0, 0, 0, 0, 0, 0, 0, 0, 983,
	0, 991, 992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	3395, 3396, 0, 0, 745, 0, 91, 0, 0, 0,
	0, 0, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 0, 3196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3397, 0, 0, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3635, 0, 0, 2037, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 3283, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	745, 0, 0, 0, 0, 0, 3398, 3399, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 745, 745, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1065, 0, 0, 0, 72,
	0, 0, 0, 0, 0, 1110, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 688, 0, 0, 0,
	0, 0, 0, 2037, 688, 0, 688, 0, 688, 2468,
	0, 939, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 940, 941, 0, 0, 0, 942, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1886, 0,
	1539, 0, 0, 0, 0, 0, 0, 745, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 688, 0, 0, 688, 745, 2631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 0,
	0, 745, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 0, 0, 2642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 1121, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 745, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 3696, 3697, 3698, 3699,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3774, 0, 3774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3812, 0, 3814, 0, 0, 0, 0, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2912, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 1539, 745,
	0, 745, 0, 0, 0, 3980, 0, 0, 0, 0,
	0, 688, 0, 0, 0, 0, 688, 1294, 0, 0,
	0, 0, 0, 0, 0, 745, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3774, 0, 0, 0, 0, 0, 0, 3774,
	0, 3774, 0, 0, 0, 0, 0, 0, 0, 4071,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 0,
	1121, 745, 0, 0, 0, 0, 0, 0, 0, 688,
	688, 688, 688, 688, 688, 0, 0, 745, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 4152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 688, 3241, 688, 0, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 1541, 688, 688, 688,
	688, 688, 0, 0, 0, 0, 0, 0, 0, 3299,
	0, 0, 0, 0, 0, 1984, 4137, 688, 0, 0,
	688, 3307, 2037, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1886, 0, 0, 0, 4205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 688, 688, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 1434, 1418, 538, 0,
	1359, 1437, 1326, 1345, 1447, 1348, 1351, 1396, 1304, 1374,
	424, 1342, 1330, 1299, 1337, 1300, 1328, 1361, 277, 1325,
	1420, 1378, 1436, 373, 274, 1306, 1297, 210, 515, 1331,
	439, 1347, 209, 1399, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 1443, 377,
	1384, 0, 507, 409, 0, 0, 2037, 1424, 1423, 1352,
	1363, 1426, 1372, 1411, 1357, 1398, 1314, 1383, 1438, 1343,
	1393, 1439, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 4174, 517, 970, 0, 0, 0, 0,
	4175, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 1339, 1390, 620, 1433, 1340, 1392,
	272, 328, 279, 271, 591, 1444, 1425, 1303, 1371, 1432,
	1366, 607, 0, 0, 235, 1435, 1365, 0, 1395, 0,
	1450, 1298, 1386, 0, 1301, 1305, 1446, 1430, 1334, 282,
	0, 0, 0, 0, 0, 0, 0, 1362, 1373, 1408,
	1412, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 1382, 0, 0, 0, 1310, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1360, 0, 0, 0, 0, 1313, 0, 1333, 1409, 0,
	1296, 304, 1307, 410, 264, 0, 463, 1416, 1429, 1356,
	640, 1431, 1354, 1353, 1403, 1311, 1422, 1346, 372, 1309,
	337, 203, 231, 0, 1344, 420, 471, 483, 1421, 1329,
	1338, 260, 1336, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 1381, 1401, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 1308,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 1324, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	1417, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 1406,
	1449, 433, 482, 246, 617, 506, 205, 1318, 1323, 1316,
	0, 261, 262, 1387, 585, 1319, 1317, 1376, 1377, 1320,
	1440, 1441, 1442, 1427, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 1410, 1312, 0, 1321, 1322, 406, 1419, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 1380, 202,
	227, 375, 1445, 464, 295, 661, 629, 494, 624, 212,
	229, 1315, 269, 1327, 1335, 0, 1341, 1349, 1350, 1364,
	1367, 1368, 1369, 1370, 1388, 1389, 1391, 1400, 1402, 1405,
	1407, 1414, 1428, 1448, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	1397, 1358, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 1379, 1385,
	388, 288, 312, 327, 1394, 628, 512, 233, 476, 297,
	257, 1413, 1415, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 1375, 1404, 383,
	586, 587, 323, 404, 0, 0, 0, 0, 0, 0,
	1434, 1418, 538, 0, 1359, 1437, 1326, 1345, 1447, 1348,
	1351, 1396, 1304, 1374, 424, 1342, 1330, 1299, 1337, 1300,
	1328, 1361, 277, 1325, 1420, 1378, 1436, 373, 274, 1306,
	1297, 210, 515, 1331, 439, 1347, 209, 1399, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 1443, 377, 1384, 0, 507, 409, 0, 0,
	0, 1424, 1423, 1352, 1363, 1426, 1372, 1411, 1357, 1398,
	1314, 1383, 1438, 1343, 1393, 1439, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 1339, 1390,
	620, 1433, 1340, 1392, 272, 328, 279, 271, 591, 1444,
	1425, 1303, 1371, 1432, 1366, 607, 0, 0, 235, 1435,
	1365, 0, 1395, 0, 1450, 1298, 1386, 0, 1301, 1305,
	1446, 1430, 1334, 282, 0, 0, 0, 0, 0, 0,
	0, 1362, 1373, 1408, 1412, 1355, 0, 0, 0, 0,
	0, 0, 3308, 0, 1332, 0, 1382, 0, 0, 0,
	1310, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1360, 0, 0, 0, 0, 1313,
	0, 1333, 1409, 0, 1296, 304, 1307, 410, 264, 0,
	463, 1416, 1429, 1356, 640, 1431, 1354, 1353, 1403, 1311,
	1422, 1346, 372, 1309, 337, 203, 231, 0, 1344, 420,
	471, 483, 1421, 1329, 1338, 260, 1336, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 1381, 1401, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 1308, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 1324, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 1417, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 1406, 1449, 433, 482, 246, 617, 506,
	205, 1318, 1323, 1316, 0, 261, 262, 1387, 585, 1319,
	1317, 1376, 1377, 1320, 1440, 1441, 1442, 1427, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 1410, 1312, 0, 1321,
	1322, 406, 1419, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 1380, 202, 227, 375, 1445, 464, 295, 661,
	629, 494, 624, 212, 229, 1315, 269, 1327, 1335, 0,
	1341, 1349, 1350, 1364, 1367, 1368, 1369, 1370, 1388, 1389,
	1391, 1400, 1402, 1405, 1407, 1414, 1428, 1448, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 1397, 1358, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 1379, 1385, 388, 288, 312, 327, 1394, 628,
	512, 233, 476, 297, 257, 1413, 1415, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 1375, 1404, 383, 586, 587, 323, 404, 0, 0,
	0, 0, 0, 0, 1434, 1418, 538, 0, 1359, 1437,
	1326, 1345, 1447, 1348, 1351, 1396, 1304, 1374, 424, 1342,
	1330, 1299, 1337, 1300, 1328, 1361, 277, 1325, 1420, 1378,
	1436, 373, 274, 1306, 1297, 210, 515, 1331, 439, 1347,
	209, 1399, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 1443, 377, 1384, 0,
	507, 409, 0, 0, 0, 1424, 1423, 1352, 1363, 1426,
	1372, 1411, 1357, 1398, 1314, 1383, 1438, 1343, 1393, 1439,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 1339, 1390, 620, 1433, 1340, 1392, 272, 328,
	279, 271, 591, 1444, 1425, 1303, 1371, 1432, 1366, 607,
	0, 0, 235, 1435, 1365, 0, 1395, 0, 1450, 1298,
	1386, 0, 1301, 1305, 1446, 1430, 1334, 282, 0, 0,
	0, 0, 0, 0, 0, 1362, 1373, 1408, 1412, 1355,
	0, 0, 0, 0, 0, 0, 3269, 0, 1332, 0,
	1382, 0, 0, 0, 1310, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 0, 1313, 0, 1333, 1409, 0, 1296, 304,
	1307, 410, 264, 0, 463, 1416, 1429, 1356, 640, 1431,
	1354, 1353, 1403, 1311, 1422, 1346, 372, 1309, 337, 203,
	231, 0, 1344, 420, 471, 483, 1421, 1329, 1338, 260,
	1336, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 1381, 1401, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 1308, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 1324, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 1417, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 1406, 1449, 433,
	482, 246, 617, 506, 205, 1318, 1323, 1316, 0, 261,
	262, 1387, 585, 1319, 1317, 1376, 1377, 1320, 1440, 1441,
	1442, 1427, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	1410, 1312, 0, 1321, 1322, 406, 1419, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 1380, 202, 227, 375,
	1445, 464, 295, 661, 629, 494, 624, 212, 229, 1315,
	269, 1327, 1335, 0, 1341, 1349, 1350, 1364, 1367, 1368,
	1369, 1370, 1388, 1389, 1391, 1400, 1402, 1405, 1407, 1414,
	1428, 1448, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 1397, 1358,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 1379, 1385, 388, 288,
	312, 327, 1394, 628, 512, 233, 476, 297, 257, 1413,
	1415, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 1375, 1404, 383, 586, 587,
	323, 404, 0, 0, 0, 0, 0, 0, 1434, 1418,
	538, 0, 1359, 1437, 1326, 1345, 1447, 1348, 1351, 1396,
	1304, 1374, 424, 1342, 1330, 1299, 1337, 1300, 1328, 1361,
	277, 1325, 1420, 1378, 1436, 373, 274, 1306, 1297, 210,
	515, 1331, 439, 1347, 209, 1399, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	1443, 377, 1384, 0, 507, 409, 0, 0, 0, 1424,
	1423, 1352, 1363, 1426, 1372, 1411, 1357, 1398, 1314, 1383,
	1438, 1343, 1393, 1439, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 0, 517, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 1339, 1390, 620, 1433,
	1340, 1392, 272, 328, 279, 271, 591, 1444, 1425, 1303,
	1371, 1432, 1366, 607, 0, 0, 235, 1435, 1365, 0,
	1395, 0, 1450, 1298, 1386, 0, 1301, 1305, 1446, 1430,
	1334, 282, 0, 0, 0, 0, 0, 0, 0, 1362,
	1373, 1408, 1412, 1355, 0, 0, 0, 0, 0, 0,
	2447, 0, 1332, 0, 1382, 0, 0, 0, 1310, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1360, 0, 0, 0, 0, 1313, 0, 1333,
	1409, 0, 1296, 304, 1307, 410, 264, 0, 463, 1416,
	1429, 1356, 640, 1431, 1354, 1353, 1403, 1311, 1422, 1346,
	372, 1309, 337, 203, 231, 0, 1344, 420, 471, 483,
	1421, 1329, 1338, 260, 1336, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 1381, 1401, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 1308, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 1324,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 1417, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 1406, 1449, 433, 482, 246, 617, 506, 205, 1318,
	1323, 1316, 0, 261, 262, 1387, 585, 1319, 1317, 1376,
	1377, 1320, 1440, 1441, 1442, 1427, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 1410, 1312, 0, 1321, 1322, 406,
	1419, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	1380, 202, 227, 375, 1445, 464, 295, 661, 629, 494,
	624, 212, 229, 1315, 269, 1327, 1335, 0, 1341, 1349,
	1350, 1364, 1367, 1368, 1369, 1370, 1388, 1389, 1391, 1400,
	1402, 1405, 1407, 1414, 1428, 1448, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 1397, 1358, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	1379, 1385, 388, 288, 312, 327, 1394, 628, 512, 233,
	476, 297, 257, 1413, 1415, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 1375,
	1404, 383, 586, 587, 323, 404, 0, 0, 0, 0,
	0, 0, 1434, 1418, 538, 0, 1359, 1437, 1326, 1345,
	1447, 1348, 1351, 1396, 1304, 1374, 424, 1342, 1330, 1299,
	1337, 1300, 1328, 1361, 277, 1325, 1420, 1378, 1436, 373,
	274, 1306, 1297, 210, 515, 1331, 439, 1347, 209, 1399,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 1443, 377, 1384, 0, 507, 409,
	0, 0, 0, 1424, 1423, 1352, 1363, 1426, 1372, 1411,
	1357, 1398, 1314, 1383, 1438, 1343, 1393, 1439, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	1339, 1390, 620, 1433, 1340, 1392, 272, 328, 279, 271,
	591, 1444, 1425, 1303, 1371, 1432, 1366, 607, 0, 0,
	235, 1435, 1365, 0, 1395, 0, 1450, 1298, 1386, 0,
	1301, 1305, 1446, 1430, 1334, 282, 0, 0, 0, 0,
	0, 0, 0, 1362, 1373, 1408, 1412, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 1382, 0,
	0, 0, 1310, 1302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1360, 0, 0, 0,
	0, 1313, 0, 1333, 1409, 0, 1296, 304, 1307, 410,
	264, 0, 463, 1416, 1429, 1356, 640, 1431, 1354, 1353,
	1403, 1311, 1422, 1346, 372, 1309, 337, 203, 231, 0,
	1344, 420, 471, 483, 1421, 1329, 1338, 260, 1336, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 1381,
	1401, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 1308, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 1324, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 1417, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 1406, 1449, 433, 482, 246,
	617, 506, 205, 1318, 1323, 1316, 0, 261, 262, 1387,
	585, 1319, 1317, 1376, 1377, 1320, 1440, 1441, 1442, 1427,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 1410, 1312,
	0, 1321, 1322, 406, 1419, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 1380, 202, 227, 375, 1445, 464,
	295, 661, 629, 494, 624, 212, 229, 1315, 269, 1327,
	1335, 0, 1341, 1349, 1350, 1364, 1367, 1368, 1369, 1370,
	1388, 1389, 1391, 1400, 1402, 1405, 1407, 1414, 1428, 1448,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 1397, 1358, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 1379, 1385, 388, 288, 312, 327,
	1394, 628, 512, 233, 476, 297, 257, 1413, 1415, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 1375, 1404, 383, 586, 587, 323, 404,
	0, 0, 0, 0, 0, 0, 1434, 1418, 538, 0,
	1359, 1437, 1326, 1345, 1447, 1348, 1351, 1396, 1304, 1374,
	424, 1342, 1330, 1299, 1337, 1300, 1328, 1361, 277, 1325,
	1420, 1378, 1436, 373, 274, 1306, 1297, 210, 515, 1331,
	439, 1347, 209, 1399, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 1443, 377,
	1384, 0, 507, 409, 0, 0, 0, 1424, 1423, 1352,
	1363, 1426, 1372, 1411, 1357, 1398, 1314, 1383, 1438, 1343,
	1393, 1439, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 1339, 1390, 620, 1433, 1340, 1392,
	272, 328, 279, 271, 591, 1444, 1425, 1303, 1371, 1432,
	1366, 607, 0, 0, 235, 1435, 1365, 0, 1395, 0,
	1450, 1298, 1386, 0, 1301, 1305, 1446, 1430, 1334, 282,
	0, 0, 0, 0, 0, 0, 0, 1362, 1373, 1408,
	1412, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 1382, 0, 0, 0, 1310, 1302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1360, 0, 0, 0, 0, 1313, 0, 1333, 1409, 0,
	1296, 304, 1307, 410, 264, 0, 463, 1416, 1429, 1356,
	640, 1431, 1354, 1353, 1403, 1311, 1422, 1346, 372, 1309,
	337, 203, 231, 0, 1344, 420, 471, 483, 1421, 1329,
	1338, 260, 1336, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 1381, 1401, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 1308,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 1324, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	1417, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 1406,
	1449, 433, 482, 246, 617, 506, 205, 1318, 1323, 1316,
	0, 261, 262, 1387, 585, 1319, 1317, 1376, 1377, 1320,
	1440, 1441, 1442, 1427, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 1410, 1312, 0, 1321, 1322, 406, 1419, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 1380, 202,
	227, 375, 1445, 464, 295, 661, 629, 494, 624, 212,
	229, 1315, 269, 1327, 1335, 0, 1341, 1349, 1350, 1364,
	1367, 1368, 1369, 1370, 1388, 1389, 1391, 1400, 1402, 1405,
	1407, 1414, 1428, 1448, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	1397, 1358, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 1379, 1385,
	388, 288, 312, 327, 1394, 628, 512, 233, 476, 297,
	257, 1413, 1415, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 1375, 1404, 383,
	586, 587, 323, 404, 0, 0, 0, 0, 0, 0,
	1434, 1418, 538, 0, 1359, 1437, 1326, 1345, 1447, 1348,
	1351, 1396, 1304, 1374, 424, 1342, 1330, 1299, 1337, 1300,
	1328, 1361, 277, 1325, 1420, 1378, 1436, 373, 274, 1306,
	1297, 210, 515, 1331, 439, 1347, 209, 1399, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 1443, 377, 1384, 0, 507, 409, 0, 0,
	0, 1424, 1423, 1352, 1363, 1426, 1372, 1411, 1357, 1398,
	1314, 1383, 1438, 1343, 1393, 1439, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 1339, 1390,
	620, 1433, 1340, 1392, 272, 328, 279, 271, 591, 1444,
	1425, 1303, 1371, 1432, 1366, 607, 0, 0, 235, 1435,
	1365, 0, 1395, 0, 1450, 1298, 1386, 0, 1301, 1305,
	1446, 1430, 1334, 282, 0, 0, 0, 0, 0, 0,
	0, 1362, 1373, 1408, 1412, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 1382, 0, 0, 0,
	1310, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1360, 0, 0, 0, 0, 1313,
	0, 1333, 1409, 0, 1296, 304, 1307, 410, 264, 0,
	463, 1416, 1429, 1356, 640, 1431, 1354, 1353, 1403, 1311,
	1422, 1346, 372, 1309, 337, 203, 231, 0, 1344, 420,
	471, 483, 1421, 1329, 1338, 260, 1336, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 1381, 1401, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 1308, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 1324, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 1417, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 1406, 1449, 433, 482, 246, 617, 506,
	205, 1318, 1323, 1316, 0, 261, 262, 1387, 585, 1319,
	1317, 1376, 1377, 1320, 1440, 1441, 1442, 1427, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 1410, 1312, 0, 1321,
	1322, 406, 1419, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 1380, 202, 227, 375, 1445, 464, 295, 661,
	629, 494, 624, 212, 229, 1315, 269, 1327, 1335, 0,
	1341, 1349, 1350, 1364, 1367, 1368, 1369, 1370, 1388, 1389,
	1391, 1400, 1402, 1405, 1407, 1414, 1428, 1448, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 1397, 1358, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 1379, 1385, 388, 288, 312, 327, 1394, 628,
	512, 233, 476, 297, 257, 1413, 1415, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 1375, 1404, 383, 586, 587, 323, 404, 0, 0,
	0, 0, 0, 0, 1434, 1418, 538, 0, 1359, 1437,
	1326, 1345, 1447, 1348, 1351, 1396, 1304, 1374, 424, 1342,
	1330, 1299, 1337, 1300, 1328, 1361, 277, 1325, 1420, 1378,
	1436, 373, 274, 1306, 1297, 210, 515, 1331, 439, 1347,
	209, 1399, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 1443, 377, 1384, 0,
	507, 409, 0, 0, 0, 1424, 1423, 1352, 1363, 1426,
	1372, 1411, 1357, 1398, 1314, 1383, 1438, 1343, 1393, 1439,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 1339, 1390, 620, 1433, 1340, 1392, 272, 328,
	279, 271, 591, 1444, 1425, 1303, 1371, 1432, 1366, 607,
	0, 0, 235, 1435, 1365, 0, 1395, 0, 1450, 1298,
	1386, 0, 1301, 1305, 1446, 1430, 1334, 282, 0, 0,
	0, 0, 0, 0, 0, 1362, 1373, 1408, 1412, 1355,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 0,
	1382, 0, 0, 0, 1310, 1302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1360, 0,
	0, 0, 0, 1313, 0, 1333, 1409, 0, 1296, 304,
	1307, 410, 264, 0, 463, 1416, 1429, 1356, 640, 1431,
	1354, 1353, 1403, 1311, 1422, 1346, 372, 1309, 337, 203,
	231, 0, 1344, 420, 471, 483, 1421, 1329, 1338, 260,
	1336, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 1381, 1401, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 1308, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 1324, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 1417, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 1406, 1449, 433,
	482, 246, 617, 506, 205, 1318, 1323, 1316, 0, 261,
	262, 1387, 585, 1319, 1317, 1376, 1377, 1320, 1440, 1441,
	1442, 1427, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	1410, 1312, 0, 1321, 1322, 406, 1419, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 1380, 202, 227, 375,
	1445, 464, 295, 661, 629, 494, 624, 212, 229, 1315,
	269, 1327, 1335, 0, 1341, 1349, 1350, 1364, 1367, 1368,
	1369, 1370, 1388, 1389, 1391, 1400, 1402, 1405, 1407, 1414,
	1428, 1448, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 1397, 1358,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 1379, 1385, 388, 288,
	312, 327, 1394, 628, 512, 233, 476, 297, 257, 1413,
	1415, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 1375, 1404, 383, 586, 587,
	323, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	538, 0, 788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 775, 0, 0, 0,
	277, 780, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	787, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 783, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 98, 0, 0, 1036, 517, 970, 759, 936,
	974, 1037, 988, 989, 990, 975, 0, 244, 976, 977,
	251, 978, 0, 935, 818, 820, 819, 885, 886, 887,
	888, 889, 890, 891, 821, 822, 816, 983, 620, 991,
	992, 0, 272, 328, 279, 271, 591, 0, 0, 2255,
	2256, 2257, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 755, 772, 0, 786, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 770,
	0, 0, 0, 0, 930, 0, 771, 0, 0, 779,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 929,
	0, 0, 640, 0, 0, 927, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 980, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 981, 982, 263, 663, 826, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 834, 835, 287, 314, 911, 910, 909,
	313, 315, 907, 908, 906, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 917, 939,
	928, 792, 793, 918, 919, 943, 920, 795, 796, 940,
	941, 789, 790, 794, 942, 944, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 931, 778, 777, 0, 784, 785,
	0, 814, 815, 817, 823, 824, 825, 836, 883, 884,
	892, 894, 895, 893, 896, 897, 898, 901, 902, 903,
	904, 899, 900, 905, 797, 801, 798, 799, 800, 812,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	813, 954, 955, 956, 957, 958, 959, 829, 833, 832,
	830, 831, 827, 828, 855, 854, 856, 857, 858, 859,
	860, 861, 863, 862, 864, 865, 866, 867, 868, 869,
	837, 838, 841, 842, 840, 839, 843, 852, 853, 844,
	845, 846, 847, 848, 849, 851, 850, 870, 871, 872,
	873, 874, 876, 875, 879, 880, 878, 877, 882, 881,
	776, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 945, 269, 946, 0, 0, 950, 0,
	0, 0, 952, 951, 0, 953, 915, 914, 0, 0,
	947, 948, 0, 949, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 960, 961, 962, 963, 964, 965,
	966, 967, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 1035, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 775, 0, 0, 0, 277, 780,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 787, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 782, 783, 0, 0, 0, 0, 0, 0,
	2476, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	98, 0, 0, 1036, 517, 970, 759, 936, 974, 1037,
	988, 989, 990, 975, 0, 244, 976, 977, 251, 978,
	0, 935, 818, 820, 819, 885, 886, 887, 888, 889,
	890, 891, 821, 822, 816, 983, 620, 991, 992, 2477,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 755, 772, 0, 786, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 769, 770, 0, 0,
	0, 0, 930, 0, 771, 0, 0, 779, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 929, 0, 0,
	640, 0, 0, 927, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 980, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 981, 982, 263, 663, 826, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 834, 835, 287, 314, 911, 910, 909, 313, 315,
	907, 908, 906, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 917, 939, 928, 792,
	793, 918, 919, 943, 920, 795, 796, 940, 941, 789,
	790, 794, 942, 944, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 931, 778, 777, 0, 784, 785, 0, 814,
	815, 817, 823, 824, 825, 836, 883, 884, 892, 894,
	895, 893, 896, 897, 898, 901, 902, 903, 904, 899,
	900, 905, 797, 801, 798, 799, 800, 812, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 813, 954,
	955, 956, 957, 958, 959, 829, 833, 832, 830, 831,
	827, 828, 855, 854, 856, 857, 858, 859, 860, 861,
	863, 862, 864, 865, 866, 867, 868, 869, 837, 838,
	841, 842, 840, 839, 843, 852, 853, 844, 845, 846,
	847, 848, 849, 851, 850, 870, 871, 872, 873, 874,
	876, 875, 879, 880, 878, 877, 882, 881, 776, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 945, 269, 946, 0, 0, 950, 0, 0, 0,
	952, 951, 0, 953, 915, 914, 0, 0, 947, 948,
	0, 949, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 960, 961, 962, 963, 964, 965, 966, 967,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 1035, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 88, 538, 0, 788, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 775, 0, 0, 0, 277, 780, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 1730, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 98, 0,
	0, 1036, 517, 970, 759, 936, 974, 1037, 988, 989,
	990, 975, 0, 244, 976, 977, 251, 978, 0, 935,
	818, 820, 819, 885, 886, 887, 888, 889, 890, 891,
	821, 822, 816, 983, 620, 991, 992, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	755, 772, 0, 786, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 770, 0, 0, 0, 0,
	930, 0, 771, 0, 0, 779, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	97, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 770, 0, 0, 0, 0, 930, 0,
	771, 0, 0, 779, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 929, 0, 0, 640, 0, 0, 927,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 980, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 4161,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 981, 982,
	263, 663, 826, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 834, 835, 287,
	314, 911, 910, 909, 313, 315, 907, 908, 906, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 917, 939, 928, 792, 793, 918, 919, 943,
	920, 795, 796, 940, 941, 789, 790, 794, 942, 944,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 931, 778,
	777, 0, 784, 785, 0, 814, 815, 817, 823, 824,
	825, 836, 883, 884, 892, 894, 895, 893, 896, 897,
	898, 901, 902, 903, 904, 899, 900, 905, 797, 801,
	798, 799, 800, 812, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 813, 954, 955, 956, 957, 958,
	959, 829, 833, 832, 830, 831, 827, 828, 855, 854,
	856, 857, 858, 859, 860, 861, 863, 862, 864, 865,
	866, 867, 868, 869, 837, 838, 841, 842, 840, 839,
	843, 852, 853, 844, 845, 846, 847, 848, 849, 851,
	850, 870, 871, 872, 873, 874, 876, 875, 879, 880,
	878, 877, 882, 881, 776, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 945, 269, 946,
	0, 0, 950, 0, 0, 0, 952, 951, 0, 953,
	915, 914, 0, 0, 947, 948, 0, 949, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 960, 961,
	962, 963, 964, 965, 966, 967, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 1035, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 775, 0,
	0, 0, 277, 780, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 787, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 782, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 98, 0, 1767, 1036, 517, 970,
	759, 936, 974, 1037, 988, 989, 990, 975, 0, 244,
	976, 977, 251, 978, 0, 935, 818, 820, 819, 885,
	886, 887, 888, 889, 890, 891, 821, 822, 816, 983,
	620, 991, 992, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 755, 772, 0, 786,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 770, 0, 0, 0, 0, 930, 0, 771, 0,
	0, 779, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 929, 0, 0, 640, 0, 0, 927, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 980, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 981, 982, 263, 663,
	826, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 834, 835, 287, 314, 911,
	910, 909, 313, 315, 907, 908, 906, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	917, 939, 928, 792, 793, 918, 919, 943, 920, 795,
	796, 940, 941, 789, 790, 794, 942, 944, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 931, 778, 777, 0,
	784, 785, 0, 814, 815, 817, 823, 824, 825, 836,
	883, 884, 892, 894, 895, 893, 896, 897, 898, 901,
	902, 903, 904, 899, 900, 905, 797, 801, 798, 799,
	800, 812, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 813, 954, 955, 956, 957, 958, 959, 829,
	833, 832, 830, 831, 827, 828, 855, 854, 856, 857,
	858, 859, 860, 861, 863, 862, 864, 865, 866, 867,
	868, 869, 837, 838, 841, 842, 840, 839, 843, 852,
	853, 844, 845, 846, 847, 848, 849, 851, 850, 870,
	871, 872, 873, 874, 876, 875, 879, 880, 878, 877,
	882, 881, 776, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 945, 269, 946, 0, 0,
	950, 0, 0, 0, 952, 951, 0, 953, 915, 914,
	0, 0, 947, 948, 0, 949, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 960, 961, 962, 963,
	964, 965, 966, 967, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 1035, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 775, 0, 0, 0,
	277, 780, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	787, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 783, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 98, 0, 0, 1036, 517, 970, 759, 936,
	974, 1037, 988, 989, 990, 975, 0, 244, 976, 977,
	251, 978, 0, 935, 818, 820, 819, 885, 886, 887,
	888, 889, 890, 891, 821, 822, 816, 983, 620, 991,
	992, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 755, 772, 0, 786, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 770,
	1084, 0, 0, 0, 930, 0, 771, 0, 0, 779,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 929,
	0, 0, 640, 0, 0, 927, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 980, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 981, 982, 263, 663, 826, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 834, 835, 287, 314, 911, 910, 909,
	313, 315, 907, 908, 906, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 917, 939,
	928, 792, 793, 918, 919, 943, 920, 795, 796, 940,
	941, 789, 790, 794, 942, 944, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 931, 778, 777, 0, 784, 785,
	0, 814, 815, 817, 823, 824, 825, 836, 883, 884,
	892, 894, 895, 893, 896, 897, 898, 901, 902, 903,
	904, 899, 900, 905, 797, 801, 798, 799, 800, 812,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	813, 954, 955, 956, 957, 958, 959, 829, 833, 832,
	830, 831, 827, 828, 855, 854, 856, 857, 858, 859,
	860, 861, 863, 862, 864, 865, 866, 867, 868, 869,
	837, 838, 841, 842, 840, 839, 843, 852, 853, 844,
	845, 846, 847, 848, 849, 851, 850, 870, 871, 872,
	873, 874, 876, 875, 879, 880, 878, 877, 882, 881,
	776, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 945, 269, 946, 0, 0, 950, 0,
	0, 0, 952, 951, 0, 953, 915, 914, 0, 0,
	947, 948, 0, 949, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 960, 961, 962, 963, 964, 965,
	966, 967, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 1035, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 775, 0, 0, 0, 277, 780,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 787, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 782, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	98, 0, 0, 1036, 517, 970, 759, 936, 974, 1037,
	988, 989, 990, 975, 0, 244, 976, 977, 251, 978,
	0, 935, 818, 820, 819, 885, 886, 887, 888, 889,
	890, 891, 821, 822, 816, 983, 620, 991, 992, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 755, 772, 0, 786, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 769, 770, 0, 0,
	0, 0, 930, 0, 771, 0, 0, 779, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 929, 0, 0,
	640, 0, 0, 927, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 980, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 981, 982, 263, 663, 826, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 834, 835, 287, 314, 911, 910, 909, 313, 315,
	907, 908, 906, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 917, 939, 928, 792,
	793, 918, 919, 943, 920, 795, 796, 940, 941, 789,
	790, 794, 942, 944, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 931, 778, 777, 0, 784, 785, 0, 814,
	815, 817, 823, 824, 825, 836, 883, 884, 892, 894,
	895, 893, 896, 897, 898, 901, 902, 903, 904, 899,
	900, 905, 797, 801, 798, 799, 800, 812, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 813, 954,
	955, 956, 957, 958, 959, 829, 833, 832, 830, 831,
	827, 828, 855, 854, 856, 857, 858, 859, 860, 861,
	863, 862, 864, 865, 866, 867, 868, 869, 837, 838,
	841, 842, 840, 839, 843, 852, 853, 844, 845, 846,
	847, 848, 849, 851, 850, 870, 871, 872, 873, 874,
	876, 875, 879, 880, 878, 877, 882, 881, 776, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 945, 269, 946, 0, 0, 950, 0, 0, 0,
	952, 951, 0, 953, 915, 914, 0, 0, 947, 948,
	0, 949, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 960, 961, 962, 963, 964, 965, 966, 967,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 1035, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 788, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 775, 0, 0, 0, 277, 780, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 787, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 98, 0,
	0, 1036, 517, 970, 759, 936, 974, 1037, 988, 989,
	990, 975, 0, 244, 976, 977, 251, 978, 0, 935,
	818, 820, 819, 885, 886, 887, 888, 889, 890, 891,
	821, 822, 816, 983, 620, 991, 992, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	755, 772, 0, 786, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 770, 0, 0, 0, 0,
	930, 0, 771, 0, 0, 779, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 3210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 770, 0, 0, 0, 0, 930, 0,
	771, 0, 0, 779, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 3206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 929, 0, 0, 640, 0, 0, 927,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 980, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 981, 982,
	263, 663, 826, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 834, 835, 287,
	314, 911, 910, 909, 313, 315, 907, 908, 906, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 917, 939, 928, 792, 793, 918, 919, 943,
	920, 795, 796, 940, 941, 789, 790, 794, 942, 944,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 931, 778,
	777, 0, 784, 785, 0, 814, 815, 817, 823, 824,
	825, 836, 883, 884, 892, 894, 895, 893, 896, 897,
	898, 901, 902, 903, 904, 899, 900, 905, 797, 801,
	798, 799, 800, 812, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 813, 954, 955, 956, 957, 958,
	959, 829, 833, 832, 830, 831, 827, 828, 855, 854,
	856, 857, 858, 859, 860, 861, 863, 862, 864, 865,
	866, 867, 868, 869, 837, 838, 841, 842, 840, 839,
	843, 852, 853, 844, 845, 846, 847, 848, 849, 851,
	850, 870, 871, 872, 873, 874, 876, 875, 879, 880,
	878, 877, 882, 881, 776, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 945, 269, 946,
	0, 0, 950, 0, 0, 0, 952, 951, 0, 953,
	915, 914, 0, 0, 947, 948, 0, 949, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 960, 961,
	962, 963, 964, 965, 966, 967, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 1035, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 775, 0,
	0, 0, 277, 780, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 787, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 782, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 98, 0, 0, 1036, 517, 970,
	1105, 936, 974, 1037, 988, 989, 990, 975, 0, 244,
	976, 977, 251, 978, 0, 935, 818, 820, 819, 885,
	886, 887, 888, 889, 890, 891, 821, 822, 816, 983,
	620, 991, 992, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 0, 786,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 770, 0, 0, 0, 0, 930, 0, 771, 0,
	0, 779, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 929, 0, 0, 640, 0, 0, 927, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 980, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 981, 982, 263, 663,
	826, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 834, 835, 287, 314, 911,
	910, 909, 313, 315, 907, 908, 906, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	917, 939, 928, 792, 793, 918, 919, 943, 920, 795,
	796, 940, 941, 789, 790, 794, 942, 944, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 931, 778, 777, 0,
	784, 785, 0, 814, 815, 817, 823, 824, 825, 836,
	883, 884, 892, 894, 895, 893, 896, 897, 898, 901,
	902, 903, 904, 899, 900, 905, 797, 801, 798, 799,
	800, 812, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 813, 954, 955, 956, 957, 958, 959, 829,
	833, 832, 830, 831, 827, 828, 855, 854, 856, 857,
	858, 859, 860, 861, 863, 862, 864, 865, 866, 867,
	868, 869, 837, 838, 841, 842, 840, 839, 843, 852,
	853, 844, 845, 846, 847, 848, 849, 851, 850, 870,
	871, 872, 873, 874, 876, 875, 879, 880, 878, 877,
	882, 881, 776, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 945, 269, 946, 0, 0,
	950, 0, 0, 0, 952, 951, 0, 953, 915, 914,
	0, 0, 947, 948, 0, 949, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 960, 961, 962, 963,
	964, 965, 966, 967, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 1035, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 775, 0, 0, 0,
	277, 780, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	787, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 783, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 98, 0, 0, 1036, 517, 970, 1105, 936,
	974, 1037, 988, 989, 990, 975, 0, 244, 976, 977,
	251, 978, 0, 935, 818, 820, 819, 885, 886, 887,
	888, 889, 890, 891, 821, 822, 816, 983, 620, 991,
	992, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 772, 0, 786, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 770,
	0, 0, 0, 0, 930, 0, 771, 0, 0, 779,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 2146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 929,
	0, 0, 640, 0, 0, 927, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 980, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 981, 982, 263, 663, 826, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 834, 835, 287, 314, 911, 910, 909,
	313, 315, 907, 908, 906, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 917, 939,
	928, 792, 793, 918, 919, 943, 920, 795, 796, 940,
	941, 789, 790, 794, 942, 944, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 931, 778, 777, 0, 784, 785,
	0, 814, 815, 817, 823, 824, 825, 836, 883, 884,
	892, 894, 895, 893, 896, 897, 898, 901, 902, 903,
	904, 899, 900, 905, 797, 801, 798, 799, 800, 812,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	813, 954, 955, 956, 957, 958, 959, 829, 833, 832,
	830, 831, 827, 828, 855, 854, 856, 857, 858, 859,
	860, 861, 863, 862, 864, 865, 866, 867, 868, 869,
	837, 838, 841, 842, 840, 839, 843, 852, 853, 844,
	845, 846, 847, 848, 849, 851, 850, 870, 871, 872,
	873, 874, 876, 875, 879, 880, 878, 877, 882, 881,
	776, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 945, 269, 946, 0, 0, 950, 0,
	0, 0, 952, 951, 0, 953, 915, 914, 0, 0,
	947, 948, 0, 949, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 960, 961, 962, 963, 964, 965,
	966, 967, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 1035, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 775, 0, 0, 0, 277, 780,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 787, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 782, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	98, 0, 0, 1036, 517, 970, 1105, 936, 974, 1037,
	988, 989, 990, 975, 0, 244, 976, 977, 251, 978,
	0, 935, 818, 820, 819, 885, 886, 887, 888, 889,
	890, 891, 821, 822, 816, 983, 620, 991, 992, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 0, 786, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 769, 770, 0, 0,
	0, 0, 930, 0, 771, 0, 0, 779, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	2144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 929, 0, 0,
	640, 0, 0, 927, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 980, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 981, 982, 263, 663, 826, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 834, 835, 287, 314, 911, 910, 909, 313, 315,
	907, 908, 906, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 917, 939, 928, 792,
	793, 918, 919, 943, 920, 795, 796, 940, 941, 789,
	790, 794, 942, 944, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 931, 778, 777, 0, 784, 785, 0, 814,
	815, 817, 823, 824, 825, 836, 883, 884, 892, 894,
	895, 893, 896, 897, 898, 901, 902, 903, 904, 899,
	900, 905, 797, 801, 798, 799, 800, 812, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 813, 954,
	955, 956, 957, 958, 959, 829, 833, 832, 830, 831,
	827, 828, 855, 854, 856, 857, 858, 859, 860, 861,
	863, 862, 864, 865, 866, 867, 868, 869, 837, 838,
	841, 842, 840, 839, 843, 852, 853, 844, 845, 846,
	847, 848, 849, 851, 850, 870, 871, 872, 873, 874,
	876, 875, 879, 880, 878, 877, 882, 881, 776, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 945, 269, 946, 0, 0, 950, 0, 0, 0,
	952, 951, 0, 953, 915, 914, 0, 0, 947, 948,
	0, 949, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 960, 961, 962, 963, 964, 965, 966, 967,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 1035, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 1148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 1147, 640, 0,
	0, 0, 0, 0, 1144, 1145, 372, 1113, 337, 203,
	231, 1138, 1142, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 88, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 100, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 97, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 2463, 0, 0, 2462, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 88, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 100, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 98, 0, 1767, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 97, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 1806, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 1808, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 1810, 517, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	1492, 0, 1493, 1494, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	98, 0, 0, 0, 517, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 2463,
	0, 0, 2462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 2396, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 1985, 517, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 2394, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 1113, 337, 203, 231, 1111,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 2396, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 1985, 517, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 1767, 0, 517, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 3775, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 2155, 517, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 2927, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 2894, 0, 0, 0,
	0, 244, 0, 0, 251, 2895, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 1829, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 1828, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 0, 517, 737, 738, 739,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 4130, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 1985, 517, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	3775, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 98, 0, 0, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 2464, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 0, 517, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 1810, 517, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	2102, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 2093,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	1952, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 1950, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 0, 517, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 1948, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 1946, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1944, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	1940, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 1938, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 0, 517, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 1936, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 1911, 0,
	0, 0, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 1814, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 98, 0, 0, 0, 517, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 0, 517, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1469, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 1468, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1063, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 686, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 4206, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 0, 517, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 0, 0, 383,
	586, 587, 323,
}

var yyPact = [...]int{
	-1000, -1000, 9439, -1000, -547, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2475, 2618, -1000, -1000, -1000, -1000, 2653, -1000,
	1019, -1000, 2136, 2065, 2460, 5798, -1000, 56695, 784, -1000,
	53703, -414, 870, 1155, 37247, -1000, 225, -1000, 216, 55199,
	220, -1000, -1000, -1000, -1000, -414, 23035, 2376, 49, 48,
	56695, -1000, -1000, -1000, -1000, -358, 2621, 2083, -1000, 467,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 52955, -1000, -1000,
	-1000, 1124, -1000, -1000, 2468, 2487, 2375, 926, 2371, -1000,
	2528, 2083, -1000, 23035, 2608, 2407, 22287, 22287, 454, -1000,
	-1000, 258, -1000, -1000, 32011, 56695, 40239, 2523, 55199, -1000,
	2460, -1000, -1000, -1000, 206, -1000, 363, 2038, -1000, 2037,
	-1000, 1165, 1037, 401, 856, 853, 397, 396, 393, 391,
	389, 377, 376, 372, 408, -1000, 947, 947, -198, -200,
	1582, 762, 447, 447, 1057, 495, 2437, 2434, -1000, -1000,
	947, 947, 947, 830, 947, 947, 947, 947, 347, 345,
	947, 947, 947, 947, 947, 947, 947, 947, 947, 947,
	947, 947, 947, 947, 947, 947, 947, 887, 2460, 320,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 56695, 329, 56695, -1000, 822, 782,
	-1000, -1000, -420, 1122, 1122, 55, 1122, 1122, 1122, 1122,
	238, 992, 46, -1000, 236, 323, 241, 325, 1103, 799,
	-1000, -1000, 305, 1103, 1891, -1000, 931, 321, 267, -1000,
	1122, 1122, -1000, 15531, 261, 15531, 15531, 314, 196, -1000,
	2457, -1000, -1000, -1000, -1000, -1000, 1346, -1000, -1000, -1000,
	-1000, -19, 494, -1000, -1000, -1000, -1000, 55199, 52207, 295,
	-1000, -1000, 42, 1825, 2035, 23035, 1211, 912, -1000, -1000,
	1342, 875, -1000, -1000, -1000, -1000, -1000, 806, -1000, 25279,
	25279, 25279, 25279, -1000, -1000, 1969, 51459, 1969, 1969, 25279,
	1969, 25279, 1969, 1969, 1969, 1969, 23035, 1969, 1969, 1969,
	1969, -1000, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, -1000, -1000, -1000, -1000, 1969, 821, 1969, 1969, 1969,
	1969, 1969, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1969,
	1969, 1969, 1969, 1969, 1969, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, -1000, -1000,
	-1000, 1601, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1304,
	1497, 1490, 1473, -1000, 20043, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1969, -1000, -1000, -1000, 56695,
	-1000, 1969, 250, 55199, 55199, 398, 1362, -1000, -1000, 2528,
	2083, -1000, 2621, 2562, 467, -1000, 3972, 1968, 1797, 1410,
	2083, 915, 2014, 56695, -1000, 2065, 198, -1000, -1000, -1000,
	-338, -343, 2313, 1436, 1867, -1000, -1000, -1000, -1000, 2425,
	23035, -1000, -1000, 2648, -1000, 29767, 820, 2643, 50711, -1000,
	454, 454, 2033, 460, 14, -1000, -1000, -1000, -1000, 961,
	36499, -1000, -1000, -1000, -1000, -1000, 1917, 56695, -1000, -1000,
	5609, 55199, -1000, 2135, -1000, 1915, -1000, 2078, 23035, 467,
	1911, -1000, -1000, -1000, -1000, 947, 947, 947, -1000, 407,
	2601, 5798, 6952, -1000, -1000, -1000, 49963, 2131, 55199, -1000,
	2124, -1000, 1024, 878, 873, 873, 55199, -1000, -1000, 55947,
	55199, 1023, 1021, 55199, 55199, 55199, 55199, -1000, 49215, -1000,
	48467, 47719, 1357, 55199, 46971, 46223, 45475, 44727, 43979, -1000,
	2255, -1000, 2130, -1000, -1000, -1000, 55947, 55199, 55199, 55947,
	55199, 55947, 56695, 55199, -1000, -1000, 331, -1000, -1000, 1355,
	1353, 1344, 947, 947, 1332, 1834, 1832, 1829, 947, 947,
	1330, 1766, 38743, 1762, 302, 1326, 1323, 1316, 1354, 1741,
	209, 1739, 1269, 1268, 1306, 55199, 2123, 56695, -1000, 306,
	1094, 906, -1000, -1000, -1000, 958, 2460, 2373, 2032, 492,
	778, 55199, 452, 452, 55199, -1000, -1000, 16285, 56695, 214,
	-1000, 1734, 23035, -1000, 1110, 1103, 1103, -1000, -1000, -1000,
	-1000, -1000, -1000, 1122, 56695, 1110, -1000, -1000, -1000, 1103,
	1122, 56695, 1122, 1122, 1122, 1122, 1103, 1103, 1103, 1122,
	56695, 56695, 56695, 56695, 56695, 56695, 56695, 56695, 56695, 15531,
	931, 1122, -421, -1000, 1723, -1000, -1000, -1000, 2239, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15531, 15531, -1000, -1000, 2540, 2531, -1000, -1000, -1000,
	2028, -1000, 207, 9, 219, -1000, 43231, 516, 954, -1000,
	516, -1000, -1000, -1000, -1000, -1000, 2024, 42483, -1000, -422,
	-424, -427, -429, -1000, -1000, -1000, -453, -464, -1000, -1000,
	-1000, 23035, 23035, 23035, 23035, -242, -1000, 1724, 25279, 2398,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23035, 1223, 1149,
	25279, 25279, 25279, 25279, 25279, 25279, 25279, 26775, 26027, 25279,
	25279, 25279, 25279, 25279, 25279, -1000, -1000, 34255, 5271, 5271,
	875, 875, 875, 875, -1000, -170, 2023, 55947, -1000, -1000,
	-1000, 817, 23035, 23035, 875, -1000, 1366, 2356, 20043, 23035,
	23035, 23035, 23035, 983, 2035, 55947, 23035, -1000, 1410, -1000,
	-1000, -1000, -1000, 1138, -1000, -1000, 1105, 2422, 2422, 2422,
	2422, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 2422, 23035, 190, 190, 269, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, 18547, 23035, 23035, 25279, 23035, 23035,
	23035, 1410, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 1410, 23035, 1300, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 17793, 23035, 23035, 23035, 23035, 23035, -1000, -1000, -1000,
	-1000, -1000, -1000, 23035, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 1410, 23035, 23035, 23035, 23035, 23035, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1792, 1476, 1501,
	1969, 23035, -1000, 2017, -1000, -186, 31263, 23035, 1720, 2640,
	2154, 55199, -1000, -1000, -1000, -1000, 2528, -1000, 2528, 1792,
	3964, 2327, 22287, -1000, -1000, 3964, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1826,
	-1000, 311, 776, 2142, 306, 55199, 514, 510, 502, 450,
	-1000, -58, 953, 56695, 2014, 2518, -1000, 2013, -1000, -1000,
	1969, -1000, -294, -1000, -295, 2309, 1658, 833, -1000, 23035,
	23035, 2010, -1000, 1434, 56695, -1000, -242, -1000, 41735, -1000,
	-1000, 14777, 56695, 366, 56695, -1000, 30515, 40987, 274, -1000,
	14, 1970, -1000, 20, 1, 19295, 872, -1000, -1000, -1000,
	1582, 27523, 1790, 872, 83, -1000, -1000, -1000, 2078, -1000,
	2078, 2078, 2078, 2078, 833, 833, 833, 833, -1000, -1000,
	-1000, -1000, -1000, 2115, 2078, 2109, -1000, 2078, 2078, 2078,
	2078, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2107, 2107,
	2107, 2103, 2103, 2080, 2080, 436, -1000, 23035, 446, 40239,
	2501, 1305, 1570, -179, -1000, 55199, 1400, 1392, 1391, -1000,
	-524, 2005, -1000, -1000, 2589, -1000, -1000, 1081, 1061, 1045,
	1182, 55199, 252, 339, -1000, 432, -1000, 40239, 55199, 1020,
	873, 55199, -1000, 55199, -1000, -1000, -1000, -1000, -1000, 55199,
	-1000, -1000, 1997, -1000, 1991, 1099, 1043, 1084, 1042, 1997,
	-1000, -1000, -175, 1997, -1000, 1997, -1000, 1997, -1000, 1997,
	-1000, 1997, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1005, 300, -339, 55199, 252, 491, -1000, 469, 34255,
	-1000, -1000, -1000, 34255, 34255, -1000, -1000, -1000, -1000, 1644,
	1636, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-522, 56695, -1000, 286, 332, 335, 312, 56695, 395, 2428,
	2421, 2414, 2413, 2412, 2406, 2403, 278, 343, 56695, 56695,
	452, 2246, 56695, 2483, 56695, -1000, -1000, -1000, -1000, -1000,
	1626, 1624, -1000, 2035, 56695, -1000, -1000, 1122, 1122, -1000,
	-1000, 56695, 1122, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1122, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 56695, -1000, -1000,
	-1000, -1000, 1622, -1000, 56695, -19, 213, -1000, -1000, 55199,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -72,
	-1000, 357, 18, 437, -1000, -1000, -1000, -1000, -1000, 2530,
	-1000, 2035, 998, 1000, -1000, 1969, -1000, -1000, 1082, -1000,
	-1000, -1000, -1000, -1000, 1969, 1969, 1969, -1000, -1000, -1000,
	-1000, -1000, 1223, 25279, 25279, 25279, 1596, 811, 1692, 1361,
	1613, 913, 913, 1169, 25279, 1169, 25279, 879, 879, 879,
	879, 879, -1000, -1000, -1000, -1000, -1000, -1000, 1601, -1000,
	1593, -1000, 1969, 55947, 1885, 17793, 1807, 1598, 1410, 898,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4027, 1410, 1825, 1410, 1906, 4006, 975, -1000, 23035, 1410,
	4002, -1000, -1000, 1410, 1410, 23035, -1000, -1000, 23035, 23035,
	23035, 23035, 1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570,
	1570, 1570, 23035, 1570, 1982, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1974, 2637, 1216, 1570, 1570, 1570, 1570,
	3998, 1570, 1570, 23035, 1532, -1000, -1000, -1000, 1407, 3962,
	1455, 3957, 1570, 1570, -1000, 1570, 3651, 3638, 1410, 2884,
	2861, 1570, 1570, 1570, 1570, 1570, 2775, 2767, 1570, 1570,
	2743, 1570, 3629, 1570, 2738, 2713, 2696, 2658, 2635, 2629,
	2617, 2595, 2590, 2550, 2541, 2526, 2512, 2504, 2472, 2464,
	2432, 2362, 1570, 1570, 1570, 3623, 1570, 3608, 1570, 3543,
	1570, 1570, 3538, 2349, 2318, 1410, 1973, -1000, 3534, 1570,
	3529, 3524, 3519, 2282, 3515, 3510, 3505, 1570, 1570, 1570,
	2265, 3488, 3482, 3466, 3447, 3443, 3439, 3426, 3420, 3415,
	1570, 1501, 1501, 1501, 1501, 1501, 3350, -244, 1570, 1410,
	-1000, -1000, -1000, -1000, -1000, 3335, 2254, 3329, 3312, 3154,
	3113, 1410, 1969, 814, -1000, -1000, 1501, 1410, 1410, 1501,
	1501, 3102, 3098, 3093, 3069, 3065, 3060, 1570, 1570, -1000,
	1570, 3047, 3017, 2250, 2212, 1410, -1000, 1501, 56695, -1000,
	-411, -1000, -5, 949, 1969, -1000, 38743, 1410, -1000, 5226,
	-1000, 1308, -1000, -1000, -1000, -1000, -1000, 35751, 1802, -1000,
	-1000, -1000, 450, 500, 273, 450, 306, 286, 2152, 55199,
	55199, 55199, 56695, 990, -1000, 333, -1000, 1969, -490, 21539,
	-1000, -1000, -1000, 833, 67, 35003, 855, 855, 151, 2035,
	2035, 23035, -1000, -1000, -1000, -1000, -1000, -1000, 813, 2622,
	512, 1969, -1000, 1986, 2294, -1000, -1000, -1000, 2499, 28271,
	-1000, -1000, 1969, 1969, 56695, 1941, 1930, -1000, 812, -1000,
	1370, 1970, 14, -2, -1000, -1000, -1000, -1000, 2035, -1000,
	1381, 367, 1752, -1000, 434, -1000, -1000, -1000, -1000, 2386,
	80, -1000, -1000, -1000, 385, 833, -1000, -1000, -1000, -1000,
	-1000, -1000, 1591, -1000, 1591, -1000, -1000, -1000, -1000, -1000,
	1301, -1000, -1000, -1000, -1000, 1295, -1000, -1000, 1291, -1000,
	-1000, 2871, 2145, 446, -1000, -1000, 947, 1572, -1000, -1000,
	2388, 947, 947, 55199, -1000, -1000, 1669, 2501, -1000, -6,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -527, 176, 584,
	-1000, -1000, -1000, 6666, 55199, 1876, -1000, 259, -1000, 1665,
	-1000, 55199, -1000, 1861, 2099, 55199, 55199, -1000, -1000, -1000,
	55199, 1969, -1000, -1000, -1000, -1000, 518, 2459, 338, -1000,
	-1000, -273, -1000, -1000, 252, 259, 55947, 55199, 872, -1000,
	-1000, -1000, -1000, -1000, -518, 1823, 499, 56695, 56695, 56695,
	56695, 56695, 56695, 796, -1000, -1000, 30, -1000, -1000, 232,
	-1000, -1000, 1561, -1000, -1000, -1000, -1000, 232, -1000, -1000,
	-1000, -1000, -1000, 328, 466, -1000, 56695, 56695, 919, -1000,
	-1000, -1000, -1000, -1000, 1103, -1000, -1000, 1103, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2443, 56695, 17, -487, -1000, -484, 23035, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1440, 503, 1692, 25279, 25279, 2356,
	2356, 25279, -1000, -1000, -1000, 1009, 1009, 34255, -1000, 25279,
	23035, -1000, -1000, 23035, 23035, 23035, 970, -1000, 23035, 1236,
	-1000, 23035, -1000, -244, 1501, 1570, 1570, 1570, 1570, -244,
	-244, -244, -244, -244, -244, -244, -244, -244, -244, 1887,
	-1000, 23035, 23035, 23035, 1410, 351, -1000, -1000, -1000, -244,
	23035, -1000, -1000, 2636, -1000, 23035, -1000, 34255, 23035, 23035,
	23035, -1000, -1000, -1000, 23035, 23035, -1000, -1000, 23035, -1000,
	23035, -1000, -1000, -1000, -1000, -1000, -1000, 23035, -1000, 23035,
	-1000, -1000, -1000, 23035, -1000, 23035, -1000, -1000, 23035, -1000,
	23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000,
	23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000,
	23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000,
	23035, -1000, 23035, -1000, -1000, -1000, 23035, -1000, 23035, -1000,
	23035, -1000, -1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035,
	23035, -1000, 23035, 23035, 23035, -1000, 23035, 23035, 23035, 23035,
	-1000, -1000, -1000, -1000, 23035, 23035, 23035, 23035, 23035, 23035,
	23035, 23035, 23035, 23035, -1000, -1000, -1000, -1000, -1000, -1000,
	23035, -1000, 40239, 51, -244, 1300, 51, 1300, 24531, 825,
	824, 23783, -1000, 23035, 17039, -1000, -1000, -1000, -1000, -1000,
	23035, 23035, 23035, 23035, 23035, 23035, -1000, -1000, -1000, 23035,
	23035, -1000, 23035, -1000, 23035, -1000, -1000, -1000, -1000, -1000,
	949, -1000, 829, 827, 873, 55199, -1000, -1000, -1000, -1000,
	1967, -1000, 2537, -1000, 2334, 2333, 2634, 2622, 22287, -1000,
	30515, 56695, 56695, 301, 56695, 286, 498, 2240, -1000, 2152,
	2152, 2152, -1000, 2480, -1000, 2094, 1331, -1000, -1000, -1000,
	-1000, -1000, -401, -1000, 2372, 2363, 855, 855, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 14023, 2528, 23035, 2220, 55947,
	1969, -1000, 29019, 55199, 55947, 30515, 30515, 30515, 30515, 30515,
	-1000, 2274, 2273, -1000, 2260, 2258, 2307, 56695, -1000, 1792,
	1805, -1000, 23035, 32759, 1938, 30515, -1000, -1000, 30515, 56695,
	13269, -1000, -1000, 0, 4, -1000, -1000, -1000, -1000, 1582,
	-1000, -1000, 1048, 2496, 2383, -1000, -1000, -1000, -1000, -1000,
	1799, -1000, 1796, 1948, 1789, 1753, 300, -1000, 2105, 2442,
	947, 947, -1000, 1285, -1000, 1366, 1559, 1550, -1000, -1000,
	-1000, 435, -1000, -1000, -540, 1280, 2085, 2095, 23035, 2084,
	2588, 1936, 55199, -1000, -1000, 55947, -1000, 275, -1000, 446,
	55199, -1000, -1000, -1000, 339, 56695, -1000, 9739, -1000, -1000,
	-1000, 259, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56695,
	2119, -1000, -1000, -1000, -1000, -1000, 249, 240, 1519, 230,
	1513, -1000, 230, -1000, 56695, 918, 2145, 56695, -1000, -1000,
	-1000, 1122, 1122, -1000, -1000, 2441, -1000, 1366, 1570, 25279,
	25279, -1000, 875, -1000, -1000, 415, -224, 2078, 2078, -1000,
	2078, 2080, -1000, 2078, 204, 2078, 201, 2078, -1000, -1000,
	1410, 1410, -1000, 1501, 2204, 2096, 3011, -1000, 2035, 23035,
	2996, -1000, -1000, -244, -244, -244, -244, -244, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -65, 2978,
	2966, 1570, -1000, 2077, 2074, -1000, 1570, 23035, 1570, 1410,
	2199, 1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570,
	1570, 1570, 1570, 2151, 2137, 2132, 2128, 2110, 2100, 2090,
	2086, 2056, 2021, 2015, 2006, 2001, 1995, 1984, 1952, 1570,
	1570, 1933, 1570, 1921, 1901, -1000, 2035, 1501, 2938, 1501,
	1570, 1570, 2912, 319, 1570, 1746, 1746, 1746, 1746, 1746,
	1501, 1501, 1501, 1501, 1570, 55199, -1000, -244, -1000, -1000,
	-305, -307, -1000, 1410, -244, 1947, 25279, 1570, 25279, 25279,
	25279, 1570, 1410, -1000, 1880, 1848, 2799, 1815, 1570, 2641,
	1570, 1570, 1570, 1811, -1000, 2527, 1969, 2527, 1969, 2527,
	1709, 1308, 56695, -1000, -1000, -1000, -1000, 2622, 2614, -1000,
	1942, 1969, -1000, -1000, -1000, -1000, -1000, 497, 56695, 56695,
	2218, 2217, 2206, -1000, 1643, -1000, -1000, 67, 624, -1000,
	2351, 2363, -1000, 2582, 2346, 2580, -1000, -1000, -1000, -1000,
	-1000, 2035, -1000, 2462, 1935, -1000, 951, 2000, -1000, -1000,
	21539, 1716, 2331, 810, 1709, 2003, 2294, 2174, 2195, 2801,
	-1000, -1000, -1000, -1000, 2270, -1000, 2266, -1000, -1000, 2065,
	-1000, 2567, 366, 30515, 1959, 1959, -1000, 803, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1107, 9739, 2664, -1000, 1506,
	-1000, 1375, 248, 1257, -1000, -1000, 947, 947, -1000, 1017,
	1008, -1000, 56695, 2072, -1000, 833, 1503, 833, 1241, -1000,
	-1000, 1232, -1000, -1000, -1000, -1000, 2108, 2210, -1000, -1000,
	-1000, -1000, 304, 2071, 2579, -1000, 23035, 2070, 950, 2842,
	55199, 55199, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 475, 947, -500, 336, 334, 947, 947,
	947, -542, -1000, -1000, 1691, 1673, -1000, -210, -1000, 23035,
	-1000, -1000, -1000, -1000, -1000, 1338, 1338, 1497, 1490, 1473,
	-1000, 2065, -181, 55199, 55199, 55199, 55199, -1000, -1000, -1000,
	1258, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 875, 1410, 358, -185, 1410, -1000, -1000,
	833, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 23035, -1000, 23035, -1000, 23035, 2035, 23035, -1000, -1000,
	-1000, -1000, -1000, 2528, 1471, 23035, 23035, -1000, 1215, 1210,
	-244, 1570, -1000, -1000, -1000, 23035, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23035,
	-1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035,
	-1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035,
	-1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035, -1000, 23035,
	-1000, -1000, 23035, -1000, -1000, -1000, 23035, -1000, 23035, -1000,
	23035, -1000, -1000, -1000, 23035, 268, 1009, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1410, 364,
	-1000, -1000, -1000, 2633, -1000, 1410, 23035, 2356, -1000, 2356,
	2356, 2356, -1000, -1000, -1000, 23035, -1000, 23035, 23035, -1000,
	23035, -1000, 23035, -1000, -1000, -1000, -1000, 23035, 1969, 2336,
	39491, 1969, 39491, 1969, 32759, -1000, -1000, 2614, 2569, 2574,
	251, 56695, -1000, -1000, 56695, 56695, 56695, -1000, 2340, 2342,
	2342, 2351, -1000, 2573, 2568, -1000, 1466, 2566, 1461, 995,
	-1000, 55947, 23035, -1000, 1969, 38743, -1000, 513, 55199, 1969,
	55199, -1000, 2591, -1000, -1000, 23035, 2063, -1000, 23035, -1000,
	-1000, -1000, -1000, 5271, 2622, 1959, -1000, -1000, 886, -1000,
	23035, -1000, 5164, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1458, 1453, -1000, -1000, 2054, 23035, -1000, -1000,
	-1000, 1633, 1583, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 339, -533, 2753, 55199, 1205, -1000, 1668,
	1936, 355, 1969, 1437, 947, 947, 947, 1194, 1176, 38743,
	1664, -1000, 55199, 422, -1000, 339, -1000, -217, -218, 1570,
	-1000, -1000, 2492, -1000, 17039, -1000, -1000, 2048, 2141, -1000,
	-1000, -1000, -1000, 2306, -184, -190, -1000, -1000, 1570, 1570,
	1570, 2522, 1410, -1000, 1570, 1570, 1571, 1549, -1000, -1000,
	1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570,
	1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570, 1570,
	1501, 1786, -1000, 268, 1410, 2194, -1000, -1000, 5271, -1000,
	-1000, 2591, 2559, 51, -1000, -1000, 257, 51, 2035, 989,
	1410, 1410, 989, 1744, 1570, 1713, 1675, 1570, 1570, 33507,
	-1000, 2556, 2552, 1618, -1000, -1000, 39491, 1618, 39491, 949,
	2569, -285, 23035, 23035, 1642, -1000, 55199, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2338, 1259, -1000, -1000, -1000, -1000,
	1435, 1415, -1000, 1399, -1000, 2660, -1000, 2035, -1000, 1969,
	1969, -1000, 533, 2000, -1000, 2528, 2035, 55199, 2035, 66,
	2591, -1000, 1570, -1000, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969, 1969,
	1969, 1969, 1969, 1969, 1969, -1000, -1000, 55199, 2233, -1000,
	-1000, 1632, 165, -1000, 1533, 1936, -1000, -1000, 901, -1000,
	23035, -1000, 38743, 1396, 1388, -1000, -1000, -1000, -1000, -542,
	-1000, -1000, -1000, -1000, -1000, -1000, 467, 1900, -1000, 946,
	55199, 56695, -1000, 2296, -1000, -1000, -1000, -1000, 23035, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23035, -1000, 1410, 2186,
	-1000, -370, -1000, -511, 23035, -244, -1000, -1000, -244, -1000,
	-1000, -1000, -1000, -1000, 23035, -1000, -1000, 23035, -1000, 23035,
	-1000, -1000, 1618, -1000, -1000, -1000, 37995, -1000, 1618, -1000,
	1618, -1000, -285, -1000, 1895, -1000, 55199, 2035, 330, 8916,
	251, 5609, -1000, 1160, -1000, -1000, -1000, -1000, -1000, 55947,
	55199, 2000, 55199, -1000, -1000, 1600, 1410, 1969, 2528, -1000,
	1548, -1000, -1000, 2043, 2095, -1000, -1000, -1000, 20791, -1000,
	-1000, -1000, -1000, -1000, 272, -179, 17039, 12515, 1518, -1000,
	-180, 1570, 1501, -1000, -470, -1000, -1000, -1000, -1000, 288,
	-1000, -1000, 1825, -1000, -1000, 1671, 1580, 1510, -1000, -1000,
	-1000, -1000, -1000, -1000, -285, -1000, -1000, 2486, -1000, -221,
	-1000, -548, -1000, -1000, 8916, -1000, -1000, -1000, -1000, 1693,
	1495, -1000, -1000, -1000, 32759, 54451, -1000, -168, 309, 23035,
	2040, 1410, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 531, -1000, -1000, -1000, 2119, -188, -1000, -1000,
	-1000, 4432, -491, -277, -303, 25279, -1000, 23035, -1000, 23035,
	-1000, 23035, -1000, 55199, 1969, -1000, -1000, 967, 8916, -1000,
	-548, -1000, -1000, 1413, -1000, 4331, -348, 2183, -1000, -100,
	-1000, -1000, -1000, 1072, 1376, -1000, 1154, -1000, -1000, -1000,
	-1000, 2117, 55199, -1000, 16285, -181, -193, 994, -1000, -1000,
	-1000, -1000, -1000, 2356, 1457, 1327, 1570, -1000, 55199, -1000,
	-1000, -1000, 54451, -330, 872, 5271, -1000, 2182, 2179, 2632,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -544, 1409, -1000,
	-1000, -1000, 4432, -311, -1000, 23035, -1000, 23035, -1000, 1410,
	-1000, -1000, 2477, 66, -1000, 2656, -1000, 2619, 984, 984,
	-1000, 1143, -544, -1000, -1000, -1000, 1570, 1570, -1000, -353,
	-1000, -1000, -1000, -1000, -1000, 431, 1202, -1000, -1000, -1000,
	-1000, -1000, 5271, -1000, -1000, -1000, 223, 223, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3302, 3301, 30, 5, 43, 42, 2685, 3300, 3299,
	3294, 184, 3283, 3281, 3280, 3279, 3278, 3277, 185, 181,
	179, 3274, 3273, 3272, 3270, 3267, 3264, 3262, 3261, 3260,
	40, 104, 132, 102, 223, 227, 3259, 3256, 137, 171,
	200, 3252, 3247, 3245, 3241, 3239, 117, 197, 87, 84,
	196, 3238, 3235, 70, 3234, 3233, 3232, 195, 193, 186,
	1070, 3231, 190, 119, 50, 3230, 3228, 3226, 3223, 37,
	151, 3219, 3217, 3214, 3212, 3210, 3208, 3206, 3205, 3204,
	3201, 3199, 3197, 3196, 3195, 3193, 3192, 3191, 284, 3187,
	3185, 23, 3184, 74, 3182, 3179, 3171, 3169, 3168, 9,
	3163, 3160, 32, 39, 60, 3159, 3155, 45, 3154, 3150,
	3148, 3147, 3146, 15, 3145, 17, 3144, 36, 3141, 3138,
	124, 3136, 3135, 3132, 38, 3130, 3129, 3127, 13, 174,
	3126, 3125, 148, 3124, 3123, 3118, 176, 205, 3116, 2337,
	3115, 100, 3114, 3108, 3105, 170, 169, 204, 3103, 101,
	3100, 3099, 3096, 131, 3095, 3090, 3381, 3089, 3088, 73,
	75, 187, 3077, 3072, 201, 10, 64, 3070, 8, 22,
	3066, 3061, 71, 62, 3060, 105, 3059, 3056, 107, 89,
	3053, 103, 96, 3036, 3035, 12, 7, 3029, 1, 6,
	4, 116, 3025, 3019, 111, 3018, 3013, 3012, 85, 3003,
	3001, 5337, 2994, 93, 133, 110, 68, 2993, 180, 98,
	2984, 2983, 2979, 2977, 2976, 2975, 53, 2973, 2972, 2971,
	144, 1309, 113, 2965, 2963, 146, 145, 129, 54, 130,
	2961, 149, 2960, 217, 78, 2959, 178, 2956, 2945, 142,
	139, 2944, 2940, 58, 177, 207, 2933, 97, 128, 118,
	191, 94, 158, 2932, 2929, 56, 67, 2927, 2926, 2925,
	2918, 173, 2915, 2914, 66, 2912, 57, 2910, 175, 2907,
	348, 77, 2904, 44, 165, 2902, 65, 2900, 2897, 86,
	106, 63, 29, 2890, 164, 168, 125, 161, 2889, 2885,
	55, 2874, 2873, 2862, 198, 305, 2861, 2860, 408, 182,
	153, 134, 79, 2857, 199, 2856, 2855, 2854, 49, 5196,
	7132, 188, 26, 166, 2853, 2848, 8361, 51, 46, 14,
	2845, 209, 2842, 203, 2838, 2836, 2812, 214, 208, 109,
	167, 59, 2808, 2807, 2806, 2805, 72, 2802, 2799, 2798,
	2795, 2789, 2786, 41, 34, 33, 92, 221, 69, 25,
	95, 172, 157, 61, 2781, 2778, 2777, 121, 81, 2776,
	163, 162, 122, 147, 2775, 183, 152, 123, 2774, 83,
	31, 2759, 2758, 2756, 2752, 91, 2749, 2744, 2741, 2740,
	160, 154, 120, 80, 2739, 82, 99, 159, 155, 52,
	2735, 47, 2734, 2729, 27, 189, 35, 2728, 2727, 28,
	2724, 24, 114, 108, 2721, 6728, 2719, 16, 250, 156,
	2718, 2715, 11, 18, 21, 2712, 2711, 2710, 2709, 136,
	2708, 2707, 2702, 2701, 20, 48, 19, 2, 115, 143,
	76, 2699, 2698, 150, 2695, 2693, 2674, 0, 1071, 126,
	2653, 206,
}

//line sql.y:8958
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) compoundStatementsUnion() []CompoundStatement {
	v, _ := st.union.([]CompoundStatement)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 435, 436, 436, 8, 8, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 69, 69, 70, 68, 68, 71, 71, 72,
	72, 276, 405, 274, 274, 29, 83, 38, 38, 37,
	37, 40, 40, 39, 32, 32, 32, 33, 33, 33,
	33, 33, 33, 33, 33, 34, 34, 34, 34, 34,
	30, 30, 30, 30, 31, 31, 31, 31, 31, 36,
	36, 16, 17, 35, 35, 35, 18, 18, 118, 118,
	19, 20, 20, 20, 20, 439, 439, 196, 196, 194,
	194, 195, 195, 279, 279, 21, 283, 283, 285, 285,
	285, 285, 275, 275, 275, 22, 22, 284, 284, 286,
	286, 286, 289, 289, 289, 289, 330, 330, 330, 23,
	23, 23, 23, 23, 23, 138, 407, 407, 406, 401,
	401, 400, 400, 399, 404, 404, 403, 403, 402, 43,
	42, 44, 44, 44, 45, 54, 54, 54, 54, 55,
	56, 408, 408, 371, 61, 61, 60, 60, 60, 60,
	60, 60, 62, 62, 58, 58, 57, 57, 59, 59,
	373, 373, 359, 359, 372, 372, 372, 372, 372, 372,
	372, 358, 358, 150, 150, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 423, 423, 423, 423, 422, 422, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 160, 160, 172,
	172, 172, 172, 172, 172, 158, 158, 159, 157, 157,
	157, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 427,
	427, 427, 427, 427, 427, 427, 427, 427, 427, 171,
	171, 166, 166, 166, 168, 168, 167, 167, 167, 169,
	169, 424, 424, 424, 424, 336, 336, 336, 336, 339,
	339, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	338, 338, 338, 338, 338, 338, 338, 340, 340, 340,
	340, 340, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 342,
	342, 342, 342, 342, 342, 342, 342, 357, 357, 346,
	346, 351, 351, 352, 352, 353, 353, 353, 354, 354,
	354, 355, 355, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 350, 350, 349, 349, 349, 360, 385, 385,
	384, 384, 382, 382, 382, 382, 382, 382, 382, 382,
	369, 369, 379, 379, 379, 379, 379, 368, 368, 364,
	364, 364, 365, 365, 366, 366, 363, 363, 367, 367,
	381, 381, 380, 380, 361, 361, 362, 362, 387, 425,
	425, 425, 425, 425, 426, 426, 388, 415, 417, 417,
	417, 416, 416, 413, 414, 412, 412, 412, 412, 412,
	93, 93, 93, 302, 302, 303, 303, 377, 377, 376,
	376, 376, 378, 378, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 297, 297, 297, 411, 411,
	411, 411, 411, 411, 410, 410, 410, 374, 374, 374,
	374, 409, 409, 63, 63, 234, 234, 428, 428, 430,
	430, 430, 51, 51, 51, 51, 51, 51, 50, 50,
	50, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 52, 52, 47, 47, 47, 47, 47, 47,
	47, 47, 47, 47, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 120, 120,
	121, 121, 121, 121, 123, 123, 123, 390, 390, 64,
	64, 3, 3, 184, 186, 187, 187, 185, 185, 185,
	185, 185, 185, 66, 66, 65, 65, 189, 188, 190,
	190, 190, 1, 1, 2, 2, 4, 4, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	395, 395, 395, 395, 395, 395, 395, 395, 395, 395,
	356, 356, 356, 389, 389, 391, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 126, 125, 125, 124,
	127, 127, 127, 127, 127, 127, 127, 127, 393, 393,
	393, 67, 67, 394, 343, 344, 345, 5, 6, 370,
	392, 134, 134, 25, 41, 41, 26, 26, 26, 26,
	27, 27, 73, 76, 76, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 307, 307, 296, 296, 305, 305, 295, 295, 321,
	321, 321, 298, 298, 298, 299, 299, 421, 421, 421,
	292, 292, 75, 75, 75, 322, 322, 322, 322, 78,
	78, 431, 431, 432, 432, 433, 433, 433, 79, 80,
	80, 325, 325, 326, 326, 81, 82, 94, 94, 94,
	94, 94, 95, 95, 95, 95, 95, 95, 119, 119,
	119, 11, 11, 11, 11, 90, 90, 90, 10, 10,
	12, 77, 77, 84, 418, 418, 419, 420, 420, 420,
	420, 85, 87, 28, 28, 28, 28, 28, 28, 144,
	144, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 139, 139, 139, 133, 133, 440, 88,
	89, 89, 137, 137, 137, 130, 130, 130, 136, 136,
	136, 13, 13, 14, 278, 278, 15, 15, 143, 143,
	142, 142, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 140, 140, 141, 141, 141, 141, 314,
	314, 314, 313, 313, 178, 178, 180, 179, 179, 181,
	181, 182, 182, 182, 182, 232, 232, 204, 204, 271,
	271, 272, 272, 270, 270, 277, 277, 273, 273, 273,
	273, 280, 280, 183, 183, 183, 183, 191, 191, 192,
	192, 193, 193, 324, 324, 319, 319, 319, 318, 318,
	197, 197, 197, 199, 198, 198, 198, 198, 200, 200,
	202, 202, 201, 201, 203, 208, 208, 207, 207, 205,
	205, 205, 205, 205, 205, 206, 206, 206, 206, 209,
	209, 156, 156, 156, 156, 156, 156, 156, 156, 429,
	429, 170, 170, 170, 170, 170, 170, 170, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 261,
	261, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 237, 237, 236, 236, 96, 96, 96, 97, 97,
	98, 98, 98, 98, 98, 99, 99, 99, 99, 99,
	99, 99, 101, 101, 100, 100, 223, 223, 311, 311,
	102, 103, 103, 104, 104, 107, 107, 106, 105, 105,
	111, 111, 108, 108, 110, 110, 109, 112, 112, 113,
	114, 114, 293, 293, 210, 210, 219, 219, 219, 219,
	211, 211, 212, 212, 212, 212, 212, 212, 220, 220,
	220, 231, 221, 221, 217, 217, 215, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	175, 175, 175, 175, 242, 242, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 163, 163, 176, 176, 176, 176, 177, 177, 177,
	177, 177, 177, 177, 332, 332, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 441, 441, 347, 347, 347, 218,
	218, 218, 218, 218, 135, 135, 135, 135, 135, 329,
	329, 329, 333, 333, 333, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	334, 334, 240, 240, 131, 131, 238, 238, 239, 241,
	241, 233, 233, 233, 233, 235, 235, 214, 214, 214,
	243, 243, 335, 335, 244, 244, 115, 116, 116, 117,
	117, 245, 245, 247, 246, 246, 248, 249, 249, 249,
	250, 250, 251, 251, 251, 53, 53, 53, 53, 53,
	48, 48, 48, 48, 49, 49, 49, 49, 146, 146,
	147, 147, 147, 149, 149, 148, 148, 91, 91, 92,
	92, 92, 398, 398, 396, 397, 397, 397, 153, 153,
	154, 155, 155, 155, 151, 151, 152, 152, 268, 268,
	268, 268, 268, 268, 268, 252, 252, 252, 259, 259,
	259, 255, 255, 257, 257, 257, 258, 258, 258, 256,
	265, 265, 267, 267, 266, 266, 262, 262, 263, 263,
	264, 264, 264, 260, 260, 213, 213, 213, 213, 213,
	269, 269, 269, 269, 323, 323, 323, 281, 281, 224,
	224, 225, 225, 229, 229, 228, 228, 226, 227, 230,
	230, 174, 282, 282, 290, 287, 287, 288, 288, 315,
	315, 315, 291, 291, 304, 304, 300, 300, 301, 301,
	294, 294, 306, 306, 306, 86, 222, 222, 386, 386,
	383, 310, 310, 312, 312, 316, 316, 320, 320, 317,
	317, 9, 434, 434, 434, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 308,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 437, 438, 327, 328, 328, 328,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 1, 1,
	2, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 3,
	3, 5, 7, 10, 9, 1, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 6, 5, 2, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 10,
	6, 6, 8, 7, 4, 7, 8, 8, 8, 5,
	3, 1, 1, 5, 0, 1, 1, 1, 1, 2,
	2, 2, 0, 1, 4, 4, 4, 4, 4, 4,
	2, 4, 1, 3, 1, 1, 3, 4, 3, 3,
	3, 5, 10, 0, 2, 0, 2, 3, 5, 3,
	4, 2, 3, 2, 3, 3, 3, 3, 2, 2,
	4, 4, 1, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 3, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 2, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 1, 3, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 3, 3, 2, 2, 2, 1,
	2, 2, 0, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 2, 0,
	2, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	5, 5, 4, 4, 4, 6, 5, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 6, 10,
	7, 5, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 6, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 0, 1, 3, 3, 1,
	1, 2, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 3, 3,
	0, 2, 2, 2, 2, 2, 2, 2, 4, 4,
	3, 0, 1, 4, 3, 4, 4, 3, 3, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 4, 5, 5, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 2, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 5, 3,
	5, 0, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 3, 2, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 4, 4,
	4, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 1, 2, 3, 7, 0,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 5, 5, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 3, 6, 1,
	1, 3, 4, 3, 4, 4, 4, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 5, 5, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 5, 6, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 4,
	2, 4, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 1, 0, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 2, 2, 5, 6, 6, 6, 6, 6,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	8, 4, 8, 8, 6, 5, 4, 4, 4, 5,
	7, 4, 4, 7, 4, 4, 6, 6, 6, 8,
	6, 6, 4, 4, 3, 4, 6, 6, 4, 4,
	6, 4, 6, 4, 4, 4, 4, 4, 4, 6,
	4, 6, 4, 4, 4, 6, 4, 6, 4, 4,
	6, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 4, 4, 6, 4, 6, 4, 8, 6,
	4, 4, 6, 4, 6, 8, 4, 6, 8, 4,
	4, 6, 8, 6, 4, 6, 6, 8, 10, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 4,
	4, 4, 4, 6, 4, 6, 5, 9, 6, 9,
	8, 6, 8, 8, 8, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 4, 4, 3, 4, 6, 6, 4,
	6, 4, 6, 8, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 5, 1, 1, 1, 2, 2,
	0, 4, 0, 2, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 1,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 1, 3, 3, 1, 1, 1, 0, 1,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 3,
	4, 2, 3, 4, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 3, 1, 6, 5, 4,
	1, 3, 3, 5, 0, 2, 5, 0, 5, 1,
	3, 1, 3, 1, 3, 1, 2, 3, 4, 1,
	1, 1, 1, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -435, -88, -440, -8, -7, -30, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -27, -73,
	-76, -74, -75, -78, -79, -80, -81, -82, -10, -12,
	-77, -28, -29, -83, -84, -85, -86, -87, -13, -14,
	-15, -9, -33, -32, -31, 13, 14, -118, -37, 35,
	-42, -43, -54, -44, -55, -45, 241, -56, 243, 242,
	280, 244, 397, 273, 83, 330, 331, 333, 334, 335,
	336, -119, 710, 278, 279, 246, 39, 51, 36, 37,
	40, 250, 286, 287, 249, 145, -34, -38, 12, -437,
	15, 487, 240, 275, 274, 31, -35, 597, 95, -36,
	63, -89, -436, 758, -268, -252, 26, 36, 32, -251,
	-247, -137, -252, 24, 22, 11, -88, -88, -88, 16,
	17, -88, -371, -373, 95, 173, 95, -271, 95, -61,
	-60, -58, -57, -59, -62, 34, -51, -52, -395, -50,
	-47, 245, 242, 290, 135, 136, 280, 281, 282, 244,
	264, 279, 283, 278, 299, -46, 90, 36, 597, 600,
	-378, 241, 247, 248, 243, 488, 138, 137, 84, -375,
	392, 631, 728, -62, 730, 110, 113, 729, 50, 254,
	731, 732, 733, 638, 734, 263, 735, 736, 737, 738,
	744, 679, 745, 746, 747, 139, 11, -88, -320, -316,
	100, -309, 594, 266, 629, 441, 630, 315, 90, 47,
	42, 533, 604, 388, 392, 631, 518, 728, 398, 330,
	348, 342, 523, 524, 525, 371, 363, 595, 632, 605,
	318, 267, 303, 722, 361, 149, 730, 322, 633, 281,
	399, 400, 634, 401, 110, 333, 438, 743, 321, 635,
	741, 113, 729, 338, 88, 517, 57, 725, 326, 50,
	276, 446, 447, 359, 249, 355, 731, 304, 636, 607,
	297, 138, 135, 750, 39, 351, 56, 33, 740, 137,
	55, 732, 164, 637, 733, 638, 403, 378, 716, 54,
	404, 282, 639, 93, 287, 599, 327, 724, 405, 538,
	352, 406, 314, 739, 246, 640, 325, 705, 697, 698,
	407, 408, 717, 383, 379, 384, 540, 641, 430, 522,
	409, 701, 702, 757, 58, 642, 643, 718, 136, 644,
	87, 734, 89, 346, 347, 645, 312, 265, 543, 544,
	432, 375, 500, 127, 507, 508, 120, 121, 503, 122,
	509, 123, 128, 510, 511, 512, 501, 124, 117, 502,
	513, 514, 376, 377, 125, 515, 119, 118, 504, 506,
	126, 516, 263, 38, 410, 596, 316, 64, 320, 291,
	433, 52, 381, 754, 51, 712, 545, 646, 715, 374,
	370, 497, 691, 59, 647, 648, 649, 650, 519, 735,
	373, 345, 369, 749, 4, 309, 492, 520, 736, 68,
	248, 386, 385, 387, 298, 429, 366, 651, 652, 653,
	270, 91, 654, 356, 25, 655, 656, 411, 305, 657,
	62, 658, 659, 436, 279, 660, 60, 737, 692, 45,
	661, 284, 751, 738, 662, 663, 664, 711, 665, 286,
	666, 413, 667, 699, 700, 412, 380, 382, 546, 293,
	414, 397, 693, 251, 598, 668, 328, 350, 283, 742,
	669, 271, 534, 535, 536, 537, 723, 542, 541, 285,
	290, 278, 437, 272, 670, 671, 672, 673, 674, 319,
	690, 675, 676, 334, 602, 744, 498, 49, 677, 678,
	679, 680, 681, 313, 308, 431, 440, 67, 92, 394,
	682, 683, 721, 344, 339, 43, 306, 99, 478, 480,
	481, 482, 483, 484, 479, 486, 684, 331, 61, 745,
	746, 747, 300, 748, 526, 527, 528, 529, 13, 580,
	563, 591, 564, 581, 565, 574, 566, 582, 590, 592,
	547, 555, 548, 556, 586, 569, 583, 575, 568, 567,
	589, 572, 576, 549, 557, 587, 573, 550, 558, 551,
	559, 552, 560, 585, 584, 577, 588, 553, 561, 579,
	554, 562, 578, 570, 571, 449, 755, 756, 521, 416,
	694, 139, 310, 311, 53, 367, 292, 685, 323, 686,
	357, 358, 494, 495, 372, 343, 368, 146, 708, 332,
	341, 706, 294, 417, 499, 280, 687, 439, 307, 389,
	131, 340, 395, 324, 603, 539, 299, 418, 720, 601,
	530, 531, 365, 362, 301, 532, 688, 390, 710, 419,
	255, 295, 296, 689, 707, 420, 421, 317, 422, 423,
	424, 425, 426, 428, 329, 427, 709, 703, 704, 302,
	477, 600, 337, 360, 396, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 496, 253, -88, 253, -201, -316, -139,
	712, 714, 192, -287, 400, -305, 402, 415, 410, 420,
	408, -296, 411, 413, 293, -421, 430, 253, 417, 240,
	403, 412, 421, 422, 317, 428, 423, 329, 427, 302,
	424, 425, 426, -405, 192, 733, 748, 332, 340, 149,
	364, 407, 405, 431, 712, 100, -322, 100, 101, 102,
	-309, 332, -325, 337, -310, -405, -309, 335, -88, -88,
	-327, -327, -139, -221, -156, 157, -170, -276, -173, 101,
	-161, -164, -215, -216, -217, -218, -171, -235, -274, 181,
	182, 189, 158, -231, -174, 29, 593, 489, 488, 192,
	34, 235, 77, 78, 491, 492, 160, 63, 15, 454,
	455, -172, 444, 445, 456, 450, 451, 517, 519, 520,
	521, 518, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 522, 533, 494, 495, 129, 496, 117, 119,
	118, 127, 128, 497, 498, 499, 361, 545, 546, 540,
	543, 544, 542, 541, 376, 377, 500, 563, 564, 568,
	567, 565, 566, 569, 572, 573, 574, 575, 576, 577,
	579, 578, 570, 571, 548, 547, 549, 550, 551, 552,
	553, 554, 556, 555, 557, 558, 559, 560, 561, 562,
	580, 581, 582, 583, 584, 586, 585, 590, 589, 587,
	588, 592, 591, 501, 502, 120, 121, 122, 123, 124,
	125, 126, 503, 506, 504, 505, 507, 508, 509, 514,
	515, 510, 511, 512, 513, 516, 387, 385, 386, 382,
	381, 380, -98, -111, 620, 619, -112, 441, 446, 447,
	449, -162, -163, -176, -177, -310, -316, 258, 443, 252,
	187, 487, -165, -159, -233, 116, 102, -32, -230, 442,
	452, 453, 457, 448, 458, 606, 608, 623, 624, 626,
	611, 616, 615, 618, 534, 535, 536, 537, 538, 539,
	697, 698, 699, 700, 701, 702, 703, 704, -405, -309,
	100, -168, -166, -210, 103, 108, 111, 112, 114, -427,
	276, 357, 358, 130, -437, -226, -227, -167, 105, 106,
	107, 132, 133, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 726, 98, 104, 50, 416,
	416, -201, -88, -88, -88, -88, -434, 729, 598, -245,
	-137, -247, -34, -32, -437, 12, -88, -32, -33, -31,
	-38, -88, -40, 625, -39, -316, -88, 109, -252, -268,
	16, 67, 176, 48, 56, -250, -251, -35, -32, -156,
	23, 41, 27, -141, 183, -156, -316, -141, -294, 257,
	-88, -88, -283, -330, 332, -285, 431, 712, 430, -275,
	-288, 100, -274, -287, 429, 101, -372, 173, -358, -362,
	-310, 268, -388, 264, -201, -381, -380, -310, -437, 28,
	-270, -310, -57, -58, -59, -287, 191, 732, -120, 285,
	289, 96, 96, -362, -361, -360, -409, 289, 268, -387,
	-379, 260, 269, -368, 261, 262, -363, 254, 151, -409,
	-363, 259, 269, 264, 268, 289, 289, 139, 289, 139,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 284,
	-369, 165, -369, 601, 601, -375, -409, 264, 254, -409,
	-409, 260, -306, -363, 256, 28, 256, 38, 38, -369,
	-369, -369, -287, 191, -369, -369, -369, -369, 297, 297,
	-369, -369, -369, -369, -369, -369, -369, -369, -369, -369,
	-369, -369, -369, -369, -369, -369, -369, 253, -408, -146,
	427, 317, 443, 252, -147, 90, -60, 299, -41, -201,
	-304, 254, 255, -408, 286, 310, -201, 236, 253, 715,
	-298, 173, 19, -298, -295, 416, 414, 401, 406, -298,
	-298, -298, -298, 300, 399, -364, 254, 38, 265, 416,
	300, 399, 300, 301, 300, 301, 409, 419, 300, -321,
	18, 176, 443, 404, 408, 293, 253, 294, 255, 418,
	301, -321, 98, -299, 173, 300, 416, 410, 296, -298,
	-298, -328, -437, -312, -310, -308, 245, 41, 156, 28,
	30, 159, 192, 142, 23, 160, 40, 247, 364, 264,
	191, 260, 488, 240, 81, 606, 444, 451, 442, 450,
	454, 490, 491, 443, 402, 34, 17, 608, 31, 274,
	27, 44, 185, 242, 163, 609, 277, 29, 275, 129,
	133, 611, 26, 84, 269, 18, 262, 46, 20, 612,
	613, 21, 74, 258, 257, 176, 254, 79, 696, 15,
	235, 32, 172, 75, 614, 151, 145, 615, 616, 617,
	618, 143, 77, 173, 24, 752, 452, 453, 36, 713,
	593, 288, 187, 82, 65, 714, 157, 448, 619, 620,
	130, 621, 134, 85, 719, 153, 22, 695, 80, 48,
	622, 289, 623, 259, 753, 624, 434, 625, 174, 243,
	487, 78, 175, 726, 626, 727, 252, 415, 12, 493,
	35, 273, 261, 73, 72, 141, 76, 458, 627, 253,
	162, 256, 144, 132, 11, 150, 37, 16, 83, 86,
	455, 456, 457, 63, 140, 597, 161, 19, 628, 435,
	155, -405, 715, -328, -328, 300, 341, 35, 101, -431,
	-432, -433, 597, 434, 256, -310, -201, -94, 705, 244,
	-95, 711, 41, 251, 146, 38, -144, 416, -132, 192,
	733, 716, 717, 718, 715, 413, 723, 721, 719, 300,
	720, 96, 153, 155, 156, 4, -156, 172, -211, -212,
	171, 165, 166, 167, 168, 169, 170, 177, 176, 157,
	159, 173, -261, 154, 178, 179, 180, 181, 182, 183,
	184, 186, 185, 187, 188, 174, 175, 191, 238, 239,
	-164, -164, -164, -164, -231, -237, -236, -437, -233, -405,
	-309, -316, -437, -437, -164, -293, -437, -161, -437, -437,
	-437, -437, -437, -240, -156, -437, -437, -441, -437, -441,
	-441, -441, -347, -437, -347, -347, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, 236, -437, -437, -437, -437, -437, -347, -347, -347,
	-347, -347, -347, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, 98, 112, 108,
	111, 103, 114, 98, 98, 98, 98, -32, -33, -221,
	63, -437, -327, -418, -419, -204, -201, -437, 317, -310,
	-310, 286, 105, -250, -35, -32, -245, -251, -247, -32,
	-88, -130, -143, 69, 70, -142, -145, 27, 44, 74,
	76, 99, 72, 73, 71, 41, -438, 97, -438, -268,
	-438, -153, -304, -138, -147, 254, 262, 261, 150, -408,
	-154, 153, 304, 96, -40, -271, 115, -224, -229, -227,
	726, 653, 683, 653, 683, 67, 49, 98, 98, 96,
	25, -246, -248, -156, 18, -314, 4, -313, 28, -310,
	98, 236, 18, -202, 32, -201, -294, -294, 96, 100,
	332, -284, -286, 432, 434, 165, -315, -310, 98, 34,
	97, 96, -201, -336, -339, -341, -340, -342, -337, -338,
	361, 362, 192, 365, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 378, 390, 35, 276, 357, 358, 359,
	360, 379, 380, 381, 382, 384, 385, 386, 387, 342,
	363, 595, 343, 344, 345, 346, 347, 348, 350, 351,
	354, 352, 353, 355, 356, -311, -310, 95, 97, 96,
	-346, 95, -156, -30, 97, 96, -369, -369, -369, 284,
	23, -50, -47, -395, 22, -46, -47, 245, 135, 136,
	242, 95, -358, 95, -367, -311, -310, 95, 151, 259,
	150, -366, -363, -366, -367, -310, -233, -310, 151, 151,
	-310, -310, -280, -310, -280, -280, 41, -280, 41, -280,
	41, 105, -310, -280, 41, -280, 41, -280, 41, -280,
	41, -280, 41, 34, 87, 88, 89, 34, 91, 92,
	93, -233, -310, -310, -233, -358, -233, -201, -310, -287,
	105, 105, 105, -369, -369, 105, 98, 98, 98, -369,
	-369, 105, 98, -318, -316, 98, 98, -410, 270, 314,
	316, 105, 105, 105, 105, 34, 98, -411, 34, 740,
	739, 741, 742, 743, 98, 105, 34, 105, 34, 105,
	-310, 95, -201, -153, 240, 242, 245, 85, 98, 322,
	320, 321, 318, 323, 324, 325, 165, 50, 96, 256,
	253, -310, -300, 258, -300, -310, -317, -316, -308, -201,
	256, 398, 98, -156, -365, 18, 176, -321, -321, -298,
	-201, -365, -321, -298, -201, -298, -298, -298, -298, -321,
	-321, -321, -298, -316, -316, -201, -201, -201, -201, -201,
	-201, -201, -328, -299, -298, 715, 98, -292, 18, 85,
	-328, -328, -307, 26, 26, 96, 338, 435, 436, -326,
	335, -90, -310, 98, -11, -30, -19, -18, -20, 165,
	-11, 96, 597, -194, -201, 715, 715, 715, 715, 715,
	715, -156, -156, -156, -156, 621, -219, -429, 157, 132,
	133, 130, 131, -173, 42, 43, 41, -156, -220, -226,
	-231, 115, 176, 159, 173, -261, -161, -164, -161, -161,
	-161, -161, -161, -161, 235, -161, 235, -161, -161, -161,
	-161, -161, -161, -329, -310, 98, 192, -169, -168, 114,
	-427, -169, 594, 96, -236, 236, -156, -156, -405, -128,
	460, 461, 462, 463, 465, 466, 467, 470, 471, 475,
	476, 459, 477, 464, 469, 472, 473, 474, 468, 360,
	-156, -222, -221, -222, -156, -156, -238, -239, 161, -233,
	-156, -438, -438, 105, 183, -136, 27, 44, -136, -136,
	-136, -136, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -136, -156, -129, 459, 477, 464, 469, 472,
	473, 474, 468, 360, 478, 479, 480, 481, 482, 483,
	484, 485, 486, -129, -128, -156, -156, -156, -156, -156,
	-156, -156, -156, -96, -156, 142, 143, 144, -221, -156,
	-161, -156, -156, -156, -438, -156, -156, -156, -222, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -404, -403, -402, -156, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -221, -221, -221, -221, -221, -156, -438, -156, -175,
	-159, 105, -276, 114, 101, -156, -156, -156, -156, -156,
	-156, -222, -312, -317, -308, -309, -221, -222, -222, -221,
	-221, -156, -156, -156, -156, -156, -156, -156, -156, -438,
	-156, -156, -156, -156, -156, -268, -438, -221, 96, -420,
	434, 435, 713, -319, 289, -318, 28, -222, 98, 18,
	-278, 86, -310, -250, -250, 69, 70, 65, -140, -141,
	-145, -438, 293, -149, 306, 253, -146, -153, -310, 254,
	254, 254, -301, 258, 487, 165, -39, 28, 96, -437,
	646, 646, 68, 98, -348, -287, 388, 389, 192, -156,
	-156, 96, -249, 30, 31, -201, -313, 183, -317, -201,
	-279, 289, -201, -179, -181, -182, -183, -204, -232, -437,
	-184, -32, 617, 614, 18, -194, -195, -203, -316, -285,
	-330, -284, 96, 433, 435, 436, 85, 134, -156, -349,
	191, -377, -376, -375, -358, -360, -361, -362, 97, -349,
	-354, 395, 394, -346, -346, -346, -346, -346, -348, -348,
	-348, -348, 95, -346, 95, -346, -346, -346, -346, -351,
	95, -351, -351, -352, -351, 95, -352, -353, 95, -353,
	-388, -156, -385, -384, -382, -383, 263, 110, 689, 645,
	597, 638, 679, 86, -380, -249, 105, -438, -91, 597,
	-310, 100, 98, 100, 98, 100, 98, -121, -64, -1,
	752, 753, 754, 96, 23, -359, -358, -63, 314, -391,
	-392, 289, -387, -381, -367, 151, -366, -367, -367, -310,
	96, 32, 139, 139, 139, 139, 597, 242, 35, -302,
	637, 157, 689, 645, -358, -63, 256, 256, -329, -329,
	-329, 98, 98, -297, 748, -194, -149, 295, 295, 253,
	308, 253, 308, -201, 319, 322, 320, 321, 318, 323,
	324, 325, 326, 41, 41, 41, 41, 41, 41, 41,
	307, 309, 311, 297, -201, -201, -300, 85, -196, -201,
	29, -316, 98, 98, -201, -298, -298, -201, -298, -298,
	-201, 98, -316, -433, 339, -310, 375, 706, 708, -132,
	434, 96, 597, 26, -133, 26, -437, -429, 132, 133,
	-231, -231, -231, -220, -161, -164, -161, 156, 277, -161,
	-161, -437, -233, -438, -312, 28, 96, 86, -438, 181,
	96, -438, -438, 96, 18, 96, -241, -239, 163, -156,
	-438, 96, -438, -438, -221, -156, -156, -156, -156, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -221,
	-438, 96, 96, 18, -333, 28, -438, -438, -438, -438,
	96, -438, -438, -240, -438, 18, -438, 86, 96, 176,
	96, -438, -438, -438, 96, 96, -438, -438, 96, -438,
	96, -438, -438, -438, -438, -438, -438, 96, -438, 96,
	-438, -438, -438, 96, -438, 96, -438, -438, 96, -438,
	96, -438, 96, -438, 96, -438, 96, -438, 96, -438,
	96, -438, 96, -438, 96, -438, 96, -438, 96, -438,
	96, -438, 96, -438, 96, -438, 96, -438, 96, -438,
	96, -438, 96, -438, -438, -438, 96, -438, 96, -438,
	96, -438, -438, 96, -438, 96, -438, 96, -438, 96,
	96, -438, 96, 96, 96, -438, 96, 96, 96, 96,
	-438, -438, -438, -438, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, -438, -438, -438, -438, -438, -438,
	96, -103, 622, -438, -438, 96, -438, 96, 96, 96,
	96, 96, -438, -437, 236, -438, -438, -438, -438, -438,
	96, 96, 96, 96, 96, 96, -438, -438, -438, 96,
	96, -438, 96, -438, 96, -438, -419, 712, 435, -208,
	-207, -205, 83, 257, 84, -437, -318, -438, -169, -276,
	-277, -276, -214, -310, 105, 114, -252, -178, 96, -180,
	18, -301, 255, 313, -301, -153, -149, -386, -383, -310,
	-310, -310, -316, 157, -155, 454, -151, 98, 100, -231,
	-229, -438, -348, -256, -262, -295, -310, 98, 192, -350,
	192, -350, 388, 389, -248, 236, -209, 19, -213, 35,
	63, -30, -437, -437, 35, 96, -197, -199, -198, -200,
	75, 79, 81, 76, 77, 78, 82, -324, 28, -32,
	-179, -32, -437, -201, -194, -439, 18, 86, -439, 96,
	236, -286, -289, 437, 434, 440, -405, 98, -120, 96,
	-375, -362, -253, -150, 46, -355, 396, -348, 605, -348,
	-357, 98, -357, 105, 105, 105, 97, -53, -48, -49,
	36, 90, -382, -369, 98, 45, -369, -369, -310, 97,
	-249, -92, 303, 712, -2, 751, 757, 151, 95, 401,
	22, -270, 96, 97, -234, 315, 97, -122, -310, 97,
	95, -367, -367, -310, -437, 253, 34, 34, 689, 645,
	637, -63, -234, -233, -310, -349, 750, 749, 97, 255,
	-201, -201, -201, -201, -201, -201, 245, 242, 424, -428,
	327, 98, -428, 298, 256, -194, -201, 96, -93, 272,
	267, -321, -321, 36, -201, 434, 724, 722, -156, 156,
	277, -173, -164, -128, -128, -161, -331, 192, 361, 276,
	359, 355, 375, 366, 394, 357, 395, 352, 351, 350,
	-331, -329, -161, -221, -156, -156, -156, 164, -156, 162,
	-156, -104, -103, -438, -438, -438, -438, -438, -104, -104,
	-104, -104, -104, -104, -104, -104, -104, -104, -245, -156,
	-156, -156, -438, 192, 361, -104, -156, 18, -156, -329,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -402, -156, -221, -156, -221,
	-156, -156, -156, -156, -156, -403, -403, -403, -403, -403,
	-221, -221, -221, -221, -156, -437, -310, -107, -106, -105,
	672, 257, -103, -175, -107, -175, 235, -156, 235, 235,
	235, -156, -222, -312, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -205, -363, 295, -363, 295, -363,
	-280, 96, -291, 26, 18, 63, 63, -178, -209, -141,
	-179, -316, -201, -148, 304, 312, -201, -149, 255, 85,
	-386, -386, -386, 29, 95, -152, 101, -259, 705, -265,
	52, -263, -264, 53, -260, 54, 62, -350, -350, 183,
	-250, -156, -281, 85, -282, -290, -233, -225, -228, -226,
	-437, -269, -438, -310, -280, -282, -181, -182, -182, -181,
	-182, 75, 75, 75, 80, 75, 80, 75, -198, -316,
	-438, -156, -319, 86, -179, -179, -203, -316, 183, 434,
	438, 439, -375, -426, 130, 157, 34, 85, 392, 110,
	-424, 191, 634, 684, 689, 645, 638, 679, -425, 259,
	150, 151, 271, 28, 47, 97, 96, 97, 96, 97,
	97, 96, -303, -302, -49, -48, -369, -369, 105, -405,
	98, 98, 264, -123, 755, 105, 95, -3, 90, -156,
	95, 23, -358, -233, -393, -343, -394, -344, -345, -5,
	-6, -370, -126, 63, 110, -67, 50, 254, 735, 736,
	139, -437, 748, -385, -270, -389, -391, -201, -160, -437,
	-172, -158, -157, -159, -165, 181, 182, 276, 357, 358,
	-234, -201, -407, 86, 295, 392, 295, 392, 98, -430,
	328, 98, -430, -201, -93, -53, -201, -298, -298, 36,
	-405, -438, -173, -164, -135, 176, 597, -334, 604, -346,
	-346, -346, -353, -346, 347, -346, 347, -346, -438, -438,
	-438, 96, -438, 26, -438, 96, -156, 96, -104, -104,
	-104, -104, -104, -131, 493, 96, 96, -438, 95, 95,
	-438, -156, -438, -438, -438, 96, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, 96,
	-438, 96, -438, 96, -438, 96, -438, 96, -438, 96,
	-438, 96, -438, 96, -438, 96, -438, 96, -438, 96,
	-438, 96, -438, 96, -438, 96, -438, 96, -438, 96,
	-438, -438, 96, -438, -438, -438, 96, -438, 96, -438,
	96, -438, -438, -438, 96, -332, 690, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -102, -311,
	-103, 654, 654, -438, -103, -242, 96, -161, -438, -161,
	-161, -161, -438, -438, -438, 96, -438, 96, 96, -438,
	96, -438, 96, -438, -438, -438, -438, 96, -206, 26,
	-437, -206, -437, -206, -438, -276, -201, -209, -243, 20,
	-437, 255, -201, -201, 85, 85, 85, 97, -256, 57,
	367, -267, -266, 61, 53, -264, 23, 55, 23, 33,
	-281, 96, 165, -323, 96, 28, -438, -438, 96, 63,
	236, -438, -209, -192, -191, 85, 86, -193, 85, -191,
	75, 75, -271, 96, -279, -179, -209, -209, 236, 130,
	-437, -160, 16, 98, 98, -405, -423, 739, 740, 34,
	741, 105, -369, -369, 151, 151, -201, 95, -348, 98,
	-348, 105, 105, 34, 91, 92, 93, 34, 87, 88,
	89, 305, -390, 95, 23, -156, 95, 165, 97, -270,
	-270, 291, 176, -369, 733, 297, 297, -369, -369, -369,
	-125, -124, 755, 97, -438, 96, -356, 597, 600, -156,
	-166, -166, -271, -401, 597, -406, -310, -310, -310, -310,
	105, 107, -438, 595, 82, 598, -438, -348, -156, -156,
	-156, -156, -250, 98, -156, -156, 105, 105, -104, -438,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-156, -156, -156, -156, -156, -156, -156, -156, -156, -156,
	-221, -156, -438, -189, -188, -190, 716, 130, 34, -331,
	-438, -223, 289, -110, -109, -108, 18, -438, -156, -128,
	-128, -128, -128, -156, -156, -156, -156, -156, -156, -437,
	75, 22, 20, -273, -310, 259, -437, -273, -437, -319,
	-243, -244, 21, 23, -398, -396, -397, 176, 696, 695,
	-201, -201, -201, -201, -257, 59, -255, 58, -255, -266,
	23, 23, 98, 23, 98, 151, -290, -156, -228, -318,
	63, -30, -310, -225, -310, -245, -156, 95, -156, -169,
	-209, -209, -156, -216, 517, 519, 520, 521, 518, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 522,
	533, 494, 495, 496, 117, 119, 118, 127, 128, 497,
	498, 499, 361, 545, 546, 540, 543, 544, 542, 541,
	376, 377, 500, 563, 564, 568, 567, 565, 566, 569,
	572, 573, 574, 575, 576, 577, 579, 578, 570, 571,
	548, 547, 549, 550, 551, 552, 553, 554, 556, 555,
	557, 558, 559, 560, 561, 562, 580, 581, 582, 583,
	584, 586, 585, 590, 589, 587, 588, 592, 591, 501,
	502, 120, 121, 122, 123, 124, 125, 126, 503, 506,
	504, 507, 508, 509, 514, 515, 510, 511, 512, 513,
	516, 387, 385, 386, 382, 381, 380, 441, 446, 447,
	449, 534, 535, 536, 537, 538, 539, 697, 698, 699,
	700, 701, 702, 703, 704, 98, 98, 95, -156, 97,
	97, -389, -64, 97, -272, -270, 105, 97, 292, -226,
	-437, 98, -369, -369, -369, 105, 105, -318, -438, 96,
	-310, -425, -391, 601, 601, -438, 28, -400, -399, -312,
	95, 86, 68, 596, 599, -438, -438, -438, 96, -438,
	-438, -438, 97, 97, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, 96, -438, -188, -190,
	-438, 85, -169, -245, 23, -107, 314, 316, -107, -438,
	-438, -438, -438, -438, 96, -438, -438, 96, -438, 96,
	-438, -438, -273, -438, 23, 23, 96, -438, -273, -438,
	-273, -208, -244, -117, -116, -115, 628, -156, -221, -438,
	96, -310, -258, 60, 85, 134, 98, 98, 98, 16,
	-437, -225, 236, -323, -250, -270, -186, 401, -245, -438,
	-270, 97, 97, 757, 151, 97, -226, -134, -437, 288,
	-318, 98, 98, -124, -127, -30, 96, 165, -270, -201,
	68, -156, -221, -438, 85, 609, 716, -101, -100, -97,
	727, 753, -221, -103, -103, -156, -156, -156, -438, -310,
	259, -438, -438, -117, 96, -114, -113, -310, -335, 597,
	-68, -69, -70, -7, 330, -396, -336, 85, 134, -282,
	-270, -323, -310, 97, -438, -437, -250, 97, -254, 95,
	-3, 288, -343, -394, -344, -345, -5, -6, -370, -91,
	-399, -374, -316, -312, 98, 105, 97, 597, -438, -438,
	-99, 159, 725, 687, -165, 235, -438, 96, -438, 96,
	-438, 96, -115, 96, 28, 602, 758, -71, -72, -70,
	-69, -438, -319, -187, -185, -310, 651, -416, -415, 593,
	-426, -422, 130, 157, 110, -424, 684, 689, 645, 140,
	141, -156, 95, -438, 236, -407, 598, -99, 726, 665,
	640, 665, 640, -161, -156, -156, -156, -113, -437, 164,
	-70, -438, 96, 26, -336, -66, 662, -413, -414, 85,
	-417, 407, 661, 682, 130, 98, 105, 97, -270, -317,
	-401, 599, 156, -128, -438, 96, -438, 96, -438, -102,
	-185, 658, -349, -169, -414, 85, -413, 85, 17, 16,
	-4, 756, 97, -99, 665, 640, -156, -156, -438, -65,
	29, -186, -412, 272, 267, 270, 35, -412, 105, -4,
	-438, -438, 662, 266, 34, 130, -169, -189, -188, -188,
}

var yyDef = [...]int{
	908, -2, -2, 910, 2, 4, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 80, 82, 83, 908, 908, 908, 0, 908,
	0, 141, 0, 969, -2, -2, 908, 1677, 0, 908,
	0, 903, 0, -2, 823, 829, 0, 838, -2, 0,
	0, 908, 908, 2324, 2324, 903, 0, 0, 0, 0,
	0, 908, 908, 908, 908, 1682, 1521, 60, 908, 0,
	98, 99, 908, 858, 859, 860, 75, 0, 2322, 95,
	908, 909, 1, 3, 81, 85, 0, 0, 0, 68,
	1530, 0, 88, 0, 0, 912, 0, 0, 1660, 908,
	908, 0, 139, 140, 0, 0, 0, 0, 0, 144,
	-2, 176, 177, 178, 0, 183, 628, 545, 597, 543,
	582, -2, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 420, 420, 0, 0,
	-2, 531, 531, 531, 1662, 0, 0, 0, 579, 482,
	420, 420, 420, 0, 420, 420, 420, 420, 0, 0,
	420, 420, 420, 420, 420, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 420, 420, 420, 1548, 182, 1678,
	1675, 1676, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927,
	1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937,
	1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977,
	1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 0, 1654, 0, 741, 1012, 0,
	904, 905, 0, 812, 812, 0, 812, 812, 812, 812,
	0, 0, 0, 755, 0, 0, 0, 0, 809, 0,
	771, 772, 0, 809, 0, 778, 815, 0, 0, 785,
	812, 812, 788, 2325, 0, 2325, 2325, 0, 0, 1645,
	0, 806, 804, 818, 819, 52, 822, 825, 826, 827,
	828, 831, 0, 842, 845, 1671, 1672, 0, 847, 852,
	871, 872, 0, 55, 1172, 0, 1036, 0, 1047, -2,
	1058, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 0,
	0, 0, 0, 1088, 1089, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 0, 2044, 1492, 0, 0, 1454,
	1454, 1188, 1454, 1454, 1456, 1456, 1456, 1893, 2036, 2045,
	2226, 1854, 1860, 1861, 1862, 2172, 2173, 2174, 2175, 2268,
	2269, 2273, 1957, 1849, 2240, 2241, 0, 2321, 1996, 2004,
	2005, 1981, 1990, 2029, 2134, 2252, 1872, 2024, 2096, 1954,
	1976, 1977, 2115, 2116, 2000, 2001, 1980, 2178, 2180, 2196,
	2197, 2182, 2184, 2193, 2199, 2204, 2183, 2195, 2200, 2213,
	2217, 2220, 2221, 2222, 2190, 2188, 2201, 2205, 2207, 2209,
	2215, 2218, 2191, 2189, 2202, 2206, 2208, 2210, 2216, 2219,
	2177, 2181, 2185, 2194, 2212, 2192, 2211, 2186, 2198, 2203,
	2214, 2187, 2179, 1994, 1997, 1984, 1985, 1987, 1989, 1995,
	2002, 2008, 1986, 2007, 2006, 0, 1982, 1983, 1988, 1999,
	2003, 1991, 1992, 1993, 1998, 2009, 2051, 2050, 2049, 2095,
	2020, 2094, 0, 0, 0, 0, 0, 1843, 1899, 1900,
	2223, 1376, 1377, 1378, 1379, 0, 0, 0, 0, 0,
	0, 0, 309, 310, 1505, 1506, 54, 1171, 1641, 1456,
	1456, 1456, 1456, 1456, 1456, 1110, 1111, 1112, 1113, 1114,
	1140, 1141, 1147, 1148, 2110, 2111, 2112, 2113, 1937, 2263,
	1946, 1947, 2091, 2092, 1959, 1960, 2295, 2296, -2, -2,
	-2, 251, 252, 253, 254, 255, 256, 257, 258, 0,
	1898, 2238, 2239, 247, 0, 1639, 1640, 314, 311, 312,
	313, 1154, 1155, 267, 268, 269, 270, 271, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 281, 282, 283,
	284, 285, 286, 287, 288, 289, 290, 291, 292, 293,
	294, 295, 296, 297, 298, 299, 300, 301, 302, 303,
	304, 305, 306, 307, 308, 0, 316, 317, 2324, 0,
	881, 0, 0, 0, 0, 0, 0, 1683, 1684, 1530,
	0, 1522, 1521, 73, 0, 908, -2, 0, 0, 0,
	0, -2, 57, 0, 62, 969, 0, 911, 87, 86,
	1578, 1581, 0, 0, 0, 69, 1531, 77, 79, 1532,
	0, 913, 914, 0, 945, 949, 0, 0, 0, 1661,
	1660, 1660, 115, 0, 0, 116, 136, 137, 138, 0,
	0, 122, 123, 1647, 1648, 53, 0, 0, 194, 195,
	0, 1128, 447, 0, 190, 0, 440, 379, 0, 0,
	0, 973, 179, 180, 181, 420, 420, 420, 594, 0,
	0, 182, 182, 552, 553, 554, 0, 0, -2, 445,
	0, 532, 0, 0, 434, 434, 438, 436, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 0, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 689,
	0, 421, 0, 592, 593, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 1663, 1664, 0, 569, 570, 0,
	0, 0, 420, 420, 0, 0, 0, 0, 420, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 1568,
	0, 0, 171, 172, 1549, 0, -2, 0, 733, 0,
	0, 0, 1656, 1656, 0, 1655, 740, 0, 0, 0,
	745, 0, 0, 746, 0, 809, 809, 807, 808, 748,
	749, 750, 751, 812, 0, 0, 429, 430, 431, 809,
	812, 0, 812, 812, 812, 812, 809, 809, 809, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2325,
	815, 812, 0, 779, 0, 780, 781, 782, 783, 786,
	787, 789, 2326, 2327, 1673, 1674, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 2325, 2325, 793, 797, 801, 799, 1646, 824, 830,
	832, 833, 0, 0, 843, 846, 865, 59, 1945, 851,
	59, 853, 854, 855, 856, 857, 883, 884, 889, 0,
	0, 0, 0, 895, 896, 897, 0, 0, 900, 901,
	902, 0, 0, 0, 0, 0, 1034, 0, 0, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1059, 1060, 0, 0, 0,
	1084, 1085, 1086, 1087, 1090, 0, 1101, 0, 1103, 1501,
	-2, 0, 0, 0, 1095, 1096, 0, 0, 0, 1666,
	1666, 0, 0, 0, 1493, 0, 0, 1186, 0, 1187,
	1189, 1190, 1191, 0, 1192, 1193, 918, 918, 918, 918,
	918, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1666, 0, 0, 1666, 1666, 0, 0, 239, 240, 241,
	242, 243, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 259, 260,
	261, 262, 263, 318, 264, 265, 266, 1171, 0, 0,
	908, 0, 56, 873, 874, 0, 995, 1666, 0, 0,
	924, 0, 1681, 67, 76, 78, 1530, 71, 1530, 0,
	928, 0, 0, -2, -2, 929, 930, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 64, 2323, 65, 0,
	84, 1553, 0, 1548, 1568, 0, 0, 0, 0, 1658,
	1569, 0, 0, 0, 58, 0, 89, 90, 1629, 1633,
	0, 1579, 0, 1582, 0, 0, 0, 393, 1586, 0,
	0, 1523, 1524, 1527, 0, 946, 2042, 950, 0, 952,
	953, 0, 0, 113, 0, 1011, 0, 0, 0, 124,
	0, 126, 127, 0, 0, 0, 404, 1649, 1650, 1651,
	-2, 427, 0, 404, 388, 326, 327, 328, 379, 330,
	379, 379, 379, 379, 393, 393, 393, 393, 361, 362,
	363, 364, 365, 0, 379, 0, 347, 379, 379, 379,
	379, 369, 370, 371, 372, 373, 374, 375, 376, 331,
	332, 333, 334, 335, 336, 337, 338, 339, 381, 381,
	381, 381, 381, 385, 385, 0, 1129, 0, 408, 0,
	1527, 0, 0, 1557, 970, 0, 0, 0, 0, 595,
	639, 546, 583, 596, 0, 549, 550, -2, 0, 0,
	531, 0, 533, 0, 428, 0, -2, 0, 438, 0,
	434, 438, 435, 438, 426, 439, 573, 574, 575, 0,
	577, 578, 669, 981, 0, 0, 0, 0, 0, 675,
	676, 677, 0, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 584, 585, 586, 587, 588, 589, 590,
	591, 0, 0, 0, 0, 533, 0, 580, 0, 0,
	484, 485, 486, 0, 0, 489, 490, 491, 492, 0,
	0, 495, 496, 497, 998, 999, 498, 499, 524, 525,
	526, 500, 501, 502, 503, 504, 505, 506, 518, 519,
	520, 521, 522, 523, 507, 508, 509, 510, 511, 512,
	515, 0, 164, 1553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1656, 0, 0, 0, 0, 927, 1013, 1679, 1680, 742,
	0, 0, 813, 814, 0, 432, 433, 812, 812, 752,
	794, 0, 812, 756, 795, 757, 759, 758, 760, 773,
	774, 812, 763, 810, 811, 764, 765, 766, 767, 768,
	769, 770, 790, 775, 776, 777, 816, 0, 820, 821,
	791, 792, 0, 802, 0, 0, 0, 836, 837, 0,
	844, 868, 866, 867, 869, 861, 862, 863, 864, 0,
	870, 0, 0, 886, 109, 891, 892, 893, 894, 906,
	899, 1173, 1031, 1032, 1033, 0, 1035, 1041, 0, 1156,
	1158, 1039, 1040, 1043, 0, 0, 0, 1037, 1048, 1168,
	1169, 1170, 0, 0, 0, 0, 0, 1052, 1056, 1061,
	1062, 1063, 1064, 1065, 0, 1066, 0, 1069, 1070, 1071,
	1072, 1073, 1074, 1080, 1469, 1470, 1471, 1099, 319, 320,
	0, 1100, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1172, 0, 1667, 0, 0, 0, 1499, 1496, 0, 0,
	0, 1455, 1457, 0, 0, 0, 919, 920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 0, 0, 1472, 0, 0, 0, 0,
	0, 0, 0, 1492, 0, 1105, 1106, 1107, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1380, 1381, 1382, 1383, 51, 0, 0, 0, 0, 0,
	0, 0, 1503, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1405,
	0, 0, 0, 0, 0, 0, 1637, 0, 0, 876,
	877, 879, 0, 1015, 0, 996, 0, 0, 882, 0,
	923, 0, 926, 70, 72, 932, 933, 0, 954, 943,
	931, 66, 1658, 0, 0, 1658, 1568, 1553, 1668, 0,
	0, 0, 0, 0, 145, 0, 61, 0, 0, 0,
	1580, 1583, 1584, 393, 1606, 0, 402, 402, 399, 1533,
	1534, 0, 1526, 1528, 1529, 91, 951, 947, 0, 1029,
	0, 0, 1010, 0, 957, 959, 960, 961, 993, 0,
	964, 965, 0, 0, 0, 0, 0, 111, 1012, 117,
	0, 125, 0, 0, 130, 131, 118, 119, 120, 121,
	0, 628, -2, 479, 196, 198, 199, 200, 191, -2,
	391, 389, 390, 329, 393, 393, 355, 356, 357, 358,
	359, 360, 0, 367, 0, 348, 349, 350, 351, 340,
	0, 341, 342, 343, 383, 0, 344, 345, 0, 346,
	446, 0, 1535, 409, 410, 412, 420, 0, 415, 416,
	0, 420, 420, 0, 441, 442, 0, 1527, 143, 1559,
	974, 184, 185, 186, 187, 188, 189, 664, 0, 0,
	640, 662, 663, 182, 0, 0, 192, 535, 534, 0,
	696, 0, 444, 0, 0, 438, 438, 423, 424, 576,
	0, 0, 671, 672, 673, 674, 0, 0, 0, 562,
	473, 0, 563, 564, 533, 535, 0, 0, 404, 487,
	488, 493, 494, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 612, 614, 617, 619, 537,
	623, 625, 0, 613, 616, 618, 620, 537, 624, 626,
	1550, 1551, 1552, 0, 0, 734, 0, 0, 470, 107,
	1657, 739, 743, 744, 809, 762, 796, 809, 754, 761,
	784, 798, 800, 834, 835, 840, 848, 849, 850, 890,
	0, 0, 0, 0, 898, 0, 0, 1042, 1157, 1159,
	1044, 1045, 1046, 1049, 0, 1053, 1057, 0, 0, 0,
	0, 0, 1104, 1102, 1503, 0, 0, 0, 1153, 0,
	0, 1176, 1177, 0, 0, 0, 0, 1497, 0, 0,
	1184, 0, 1458, 1134, 0, 0, 0, 0, 0, 1134,
	1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1521,
	1211, 0, 0, 0, 0, 0, 1216, 1217, 1218, 1134,
	0, 1221, 1222, 0, 1224, 0, 1225, 0, 0, 0,
	0, 1232, 1233, 1235, 0, 0, 1238, 1239, 0, 1241,
	0, 1243, 1244, 1245, 1246, 1247, 1248, 0, 1250, 0,
	1252, 1253, 1254, 0, 1256, 0, 1258, 1259, 0, 1261,
	0, 1263, 0, 1266, 0, 1269, 0, 1272, 0, 1275,
	0, 1278, 0, 1281, 0, 1284, 0, 1287, 0, 1290,
	0, 1293, 0, 1296, 0, 1299, 0, 1302, 0, 1305,
	0, 1308, 0, 1311, 1312, 1313, 0, 1315, 0, 1317,
	0, 1320, 1321, 0, 1323, 0, 1326, 0, 1329, 0,
	0, 1330, 0, 0, 0, 1334, 0, 0, 0, 0,
	1343, 1344, 1345, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 1358, 1359, 1360, 1361, 1362,
	0, 1364, 0, 1135, 0, 0, 1135, 0, 0, 0,
	0, 0, 1174, 1666, 0, 1459, 1460, 1461, 1462, 1463,
	0, 0, 0, 0, 0, 0, 1403, 1404, 1406, 0,
	0, 1409, 0, 1411, 0, 1638, 875, 878, 880, 967,
	1016, 1017, 0, 0, 0, 0, 997, 1665, 921, 922,
	925, 975, 0, 1507, 0, 0, 954, 1029, 0, 955,
	0, 0, 0, 0, 0, 1553, 0, 0, 1669, 1668,
	1668, 1668, 169, 0, 1570, 1571, 1576, 1574, 1575, 63,
	1630, 1634, 1588, 1587, 1600, 1613, 402, 402, 396, 397,
	403, 398, 400, 401, 1525, 0, 1530, 0, 1627, 0,
	908, 1616, 0, 0, 0, 0, 0, 0, 0, 0,
	1000, 0, 0, 1003, 0, 0, 0, 0, 994, 965,
	0, 966, 0, -2, 0, 0, 105, 106, 0, 0,
	0, 128, 129, 0, 0, 135, 405, 406, 173, 182,
	481, 197, 454, 0, 0, 325, 392, 352, 353, 354,
	0, 377, 0, 0, 0, 0, 475, 142, 1539, 1538,
	420, 420, 411, 0, 414, 0, 0, 0, 1670, 380,
	443, 0, 1560, 1561, 634, 0, 0, 641, 0, 0,
	0, 544, 0, 555, 556, 0, 668, -2, 730, 408,
	0, 422, 425, 982, 0, 0, 557, 0, 560, 561,
	474, 535, 566, 567, 581, 568, 516, 517, 514, 0,
	146, 602, 604, 608, 603, 607, 0, 0, 0, 539,
	0, 627, 539, 600, 0, 470, 1535, 0, 738, 471,
	472, 812, 812, 885, 110, 0, 888, 0, 0, 0,
	0, 1050, 1054, 1067, 1068, 1464, 1490, 379, 379, 1477,
	379, 385, 1480, 379, 1482, 379, 1485, 379, 1488, 1489,
	0, 0, 1097, 0, 0, 0, 0, 1183, 1500, 0,
	0, 1194, 1133, 1134, 1134, 1134, 1134, 1134, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1494, 0,
	0, 0, 1215, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 158, 0, 0, 0,
	0, 0, 0, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1128, 1132, 0, 1136, 1137,
	0, 0, 1366, 0, 0, 1384, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1018, 1025, 0, 1025, 0, 1025,
	0, 0, 0, 1652, 1653, 1508, 1509, 1029, 1510, 944,
	956, 0, 161, 1554, 1555, 1556, 160, 0, 0, 0,
	0, 0, 0, 1659, 0, 1573, 1577, 1606, 0, 1599,
	0, -2, 1608, 0, 0, 0, 1614, 394, 395, 948,
	92, 1030, 96, 0, 1627, 1642, 0, 1624, 1631, 1635,
	0, 0, 0, 1620, 0, 1029, 958, 989, 991, 0,
	986, 1001, 1002, 1004, 0, 1006, 0, 1008, 1009, 969,
	963, 0, 113, 0, 1029, 1029, 112, 0, 1014, 132,
	133, 134, 480, 201, 206, 0, 0, 0, 211, 0,
	213, 0, 0, 0, 218, 219, 420, 420, 455, 0,
	322, 324, 0, 0, 204, 393, 0, 393, 0, 384,
	386, 0, 456, 476, 1536, 1537, 0, 0, 413, 417,
	418, 419, 0, 637, 0, 665, 0, 0, 0, 0,
	0, 0, 193, 536, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 0, 420, 0, 0, 0, 420, 420,
	420, 0, 722, 407, 0, 0, 693, 690, 558, 0,
	237, 238, 245, 246, 248, 0, 0, 0, 0, 0,
	565, 969, 149, 0, 0, 0, 0, 610, 615, 621,
	0, 538, 622, 735, 736, 737, 108, 747, 753, 887,
	907, 1038, 1051, 1055, 0, 0, 0, 0, 1491, 1475,
	393, 1478, 1479, 1481, 1483, 1484, 1486, 1487, 1093, 1094,
	1098, 0, 1180, 0, 1182, 0, 1498, 0, 1195, 1196,
	1197, 1198, 1199, 1530, 0, 0, 0, 1214, 0, 0,
	1134, 0, 1227, 1226, 1228, 0, 1230, 1231, 1236, 1237,
	1240, 1242, 1249, 1251, 1255, 1257, 1260, 1262, 1264, 0,
	1267, 0, 1270, 0, 1273, 0, 1276, 0, 1279, 0,
	1282, 0, 1285, 0, 1288, 0, 1291, 0, 1294, 0,
	1297, 0, 1300, 0, 1303, 0, 1306, 0, 1309, 0,
	1314, 1316, 0, 1319, 1322, 1324, 0, 1327, 0, 1331,
	0, 1333, 1335, 1336, 0, 0, 0, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1363, 0, 1126,
	1365, 1138, 1139, 1144, 1368, 0, 0, 0, 1371, 0,
	0, 0, 1375, 1175, 1386, 0, 1391, 0, 0, 1397,
	0, 1401, 0, 1407, 1408, 1410, 1412, 0, 0, 0,
	0, 0, 0, 0, 995, 976, 74, 1510, 1514, 0,
	0, 0, 163, 165, 0, 0, 0, 1572, 1593, 1591,
	1591, 1601, 1602, 0, 0, 1609, 0, 0, 0, 0,
	97, 0, 0, 1615, 0, 0, 1636, 0, 0, 0,
	0, 114, 1521, 983, 990, 0, 0, 984, 0, 985,
	1005, 1007, 962, 0, 1029, 1029, 103, 104, 0, 207,
	0, 209, 0, 212, 214, 215, 216, 222, 223, 224,
	225, 217, 0, 0, 321, 323, 0, 0, 366, 378,
	368, 0, 0, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1558, 629, 0, 639, 0, 971, 0, 632, 0,
	547, 0, 0, 0, 420, 420, 420, 0, 0, 0,
	0, 707, 0, 0, 670, 0, 678, 0, 0, 0,
	249, 250, 0, 601, 0, 147, 148, 0, 0, 606,
	540, 541, 1091, 0, 0, 0, 1092, 1476, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 1220, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 0, 659, 660, 0, 1415,
	1131, 1521, 0, 1135, 1145, 1146, 0, 1135, 1385, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1026, 0, 0, 0, 977, 978, 0, 0, 0, 1015,
	1514, 1519, 0, 0, 0, 1562, 0, 1565, 1566, 1567,
	162, 166, 167, 168, 1596, 0, 1589, 1592, 1590, 1603,
	0, 0, 1610, 0, 1612, 0, 1643, 1644, 1632, 1625,
	908, 1619, 1622, 1624, 1621, 1530, 987, 0, 992, 0,
	1521, 102, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 0, 0, 382,
	387, 0, 0, 630, 0, 972, 642, 633, 0, 720,
	0, 724, 0, 0, 0, 727, 728, 729, 706, 0,
	710, 448, 694, 691, 692, 559, 0, 150, 151, 0,
	0, 0, 1465, 0, 1468, 1178, 1181, 1179, 0, 1210,
	1212, 1213, 1473, 1474, 1229, 1265, 1268, 1271, 1274, 1277,
	1280, 1283, 1286, 1289, 1292, 1295, 1298, 1301, 1304, 1307,
	1310, 1318, 1325, 1328, 1332, 1337, 0, 1340, 0, 0,
	1341, 0, 661, 1122, 0, 0, 1142, 1143, 0, 1370,
	1372, 1373, 1374, 1387, 0, 1392, 1393, 0, 1398, 0,
	1402, 1413, 0, 1020, 1027, 1028, 0, 1023, 0, 1024,
	0, 968, 1519, 94, 1520, 1517, 0, 1515, 1512, 59,
	0, 0, 1585, 0, 1594, 1595, 1604, 1605, 1611, 0,
	0, 1624, 0, 1618, 100, 0, 0, 0, 1530, 208,
	0, 228, 638, 0, 641, 631, 718, 719, 0, 731,
	723, 725, 726, 708, -2, 1557, 0, 0, 0, 609,
	1466, 0, 0, 1342, 0, 657, 658, 1130, 1123, 0,
	1108, 1109, 1127, 1367, 1369, 0, 0, 0, 1019, 979,
	980, 1021, 1022, 93, 0, 1516, 1150, 0, 1511, 0,
	159, 45, 46, 42, -2, 1563, 1564, 1597, 1598, 1628,
	0, 1617, 1623, 988, 995, 0, 101, 461, 454, 0,
	0, 0, 711, 712, 713, 714, 715, 716, 717, 598,
	152, 153, 0, 528, 529, 530, 146, 0, 1185, 1338,
	1124, 0, 0, 0, 0, 0, 1388, 0, 1394, 0,
	1399, 0, 1518, 0, 0, 1513, 44, 0, -2, 49,
	0, 1626, 643, 0, 645, 0, -2, 449, 462, 0,
	202, 229, 230, 0, 0, 233, 0, 235, 236, 226,
	227, 0, 0, 732, 0, 149, 0, 0, 1115, 1116,
	1117, 1118, 1120, 0, 0, 0, 0, 1151, 1128, 43,
	50, 644, 0, 0, 404, 0, 654, 450, 451, 0,
	457, 458, 459, 460, 231, 232, 234, 666, 0, 527,
	605, 1467, 0, 0, 1389, 0, 1395, 0, 1400, 0,
	646, 647, 655, 0, 452, 0, 453, 0, 0, 0,
	635, 0, 666, 1125, 1119, 1121, 0, 0, 1149, 0,
	656, 652, 463, 465, 466, 0, 0, 464, 667, 636,
	1390, 1396, 0, 467, 468, 469, 648, 649, 650, 651,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 186, 178, 3,
	95, 97, 183, 181, 96, 182, 236, 184, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 758,
	166, 165, 167, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 188, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 189,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 179, 180,
	185, 187, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:648
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:661
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:666
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:670
		{
			setParseTree(yylex, nil)
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:676
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:717
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:721
		{
			yyLOCAL = &BeginEndStatement{Statements: yyDollar[2].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:727
		{
			yyLOCAL = yyDollar[1].compoundStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CompoundStatement
//line sql.y:736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CompoundStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CompoundStatement
//line sql.y:746
		{
			yyLOCAL = []CompoundStatement{yyDollar[1].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:750
		{
			yySLICE := (*[]CompoundStatement)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].compoundStatementUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:756
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:762
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:768
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:772
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:778
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:784
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:790
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:794
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:799
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:803
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:809
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:813
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:819
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:825
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:829
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:833
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:856
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:862
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:867
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:873
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:880
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:886
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:893
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 74:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:897
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:903
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:907
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:911
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:915
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:919
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:925
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:929
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:934
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:938
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:944
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:948
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:953
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:959
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:965
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:972
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:976
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:982
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:996
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1000
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1004
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1010
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1022
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1034
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1038
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1044
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1050
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1054
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1058
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1062
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1068
		{
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1072
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1082
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1086
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1092
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1105
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1111
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1117
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1127
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1131
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1135
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1139
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1145
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1149
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1153
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1159
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1163
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1169
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1179
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1183
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1187
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1193
		{
			yyVAL.str = RepeatableReadStr
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.str = ReadCommittedStr
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1205
		{
			yyVAL.str = SerializableStr
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1211
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1215
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1219
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1225
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1231
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1238
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1242
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1251
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1258
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1266
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1271
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1286
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1291
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1297
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1317
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1323
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1339
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Statement: yyDollar[10].compoundStatementUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1346
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1362
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1367
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1372
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1380
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1387
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1392
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1397
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1402
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1409
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1416
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1427
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1438
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1444
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1448
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1452
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1456
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1460
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1470
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1474
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1480
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1484
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1490
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1494
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1500
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1504
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1510
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1514
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1520
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1530
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1535
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1544
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1568
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1577
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = ""
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = ""
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1599
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1608
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1613
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1618
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1624
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1629
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1634
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1639
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1648
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1657
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1662
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1667
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1672
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1676
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1682
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1686
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1690
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1694
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1700
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1704
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1709
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1713
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1718
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1723
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1728
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1733
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1738
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1743
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1748
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1755
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1766
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1770
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1774
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1778
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1782
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1792
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1799
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1803
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1809
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1813
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1817
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1821
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1825
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1829
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1833
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1837
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1841
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1845
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1849
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1853
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1857
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1862
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1866
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1870
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Armscii8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = ASCIIStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Big5Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = UBinaryStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Cp1250Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Cp1251Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Cp1256Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Cp1257Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Cp850Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Cp852Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = Cp866Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Cp932Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Dec8Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = EucjpmsStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = EuckrStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.str = Gb18030Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = Gb2312Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = GbkStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.str = Geostd8Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.str = GreekStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.str = HebrewStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = Hp8Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = Keybcs2Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.str = Koi8rStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.str = Koi8uStr
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.str = Latin1Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.str = Latin2Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.str = Latin5Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.str = Latin7Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.str = MacceStr
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.str = MacromanStr
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.str = SjisStr
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.str = Swe7Str
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = Tis620Str
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = Ucs2Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = UjisStr
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = Utf16Str
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.str = Utf16leStr
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.str = Utf32Str
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.str = Utf8mb3Str
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = Utf8mb4Str
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = Utf8mb3Str
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2050
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2054
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2058
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2064
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2068
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2074
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2078
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2082
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2088
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2092
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2098
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2102
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2106
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2110
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2182
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2224
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2228
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2232
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2242
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2256
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2260
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2272
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2354
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2363
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2368
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2372
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2385
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2392
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2402
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2410
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2414
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2418
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2423
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2427
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2453
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2468
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2474
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2478
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2497
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2506
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2512
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2522
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2526
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2531
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2535
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2539
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2543
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2547
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2551
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2557
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2567
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2571
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2575
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2579
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2583
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2588
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2592
		{
			yyVAL.str = yyDollar[2].str
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2612
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.str = yyDollar[1].str
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = ""
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2650
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2654
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2660
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2664
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2670
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2674
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2680
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2684
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2690
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2696
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2700
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2704
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2708
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2712
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2721
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2727
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2733
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2739
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2743
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2747
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2752
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2756
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2762
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2768
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2774
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2778
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2782
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2786
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2790
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2809
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2813
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2818
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2822
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2831
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2837
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2841
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2845
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2851
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2865
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2869
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2873
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2877
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2881
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2885
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2889
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2893
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2897
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2901
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2905
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2909
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2913
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2917
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2921
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2925
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2929
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2933
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2937
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2941
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2945
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2949
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2953
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2957
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2961
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2965
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2969
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2973
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2977
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2981
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2994
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3017
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3030
		{
			yyVAL.str = ""
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3036
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3040
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3049
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3054
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3063
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3067
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3071
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3080
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3084
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3088
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 547:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3096
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3102
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3106
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3110
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3156
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3160
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3164
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3168
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3172
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3176
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3180
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3184
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3188
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3192
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3196
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3200
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3204
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3208
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3212
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3216
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3220
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3224
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3228
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3232
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3236
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3242
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3246
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3252
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3256
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3260
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3264
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3268
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3272
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3276
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3280
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3284
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3288
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3308
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3331
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3338
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3371
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3375
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3388
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3398
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3431
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3465
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3485
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3491
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3500
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3508
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3515
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3521
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3547
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3556
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3564
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3573
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3580
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3592
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3601
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3612
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3616
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3621
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3625
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3630
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3634
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3640
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3646
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3652
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3662
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3666
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3672
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3678
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3684
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3690
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3700
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3704
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3714
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3720
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3726
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3730
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3734
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3740
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3744
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3749
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3753
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3758
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3762
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3768
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3772
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3776
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3780
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3784
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3788
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3792
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3796
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3800
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3804
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3808
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3812
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3816
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3820
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3824
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3828
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3832
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3836
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3840
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3844
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3848
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3852
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3857
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3861
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3865
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3871
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3875
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3881
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3886
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3890
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3895
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3900
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3905
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3910
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3915
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3920
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3925
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3930
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3936
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3942
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3952
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3957
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3961
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3966
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3971
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3976
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3981
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3986
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3991
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3998
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4005
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4012
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4020
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4024
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4030
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4036
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4042
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4048
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4054
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4060
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4066
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4072
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			yyVAL.str = ""
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4094
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4098
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4221
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4225
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4241
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4245
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4249
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4253
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4257
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4261
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4269
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4277
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4281
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4285
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4289
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4293
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4297
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4301
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4321
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4325
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4332
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4336
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4340
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4344
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4348
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4352
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4356
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4364
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4368
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4372
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4376
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4381
		{
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = ""
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = "extended "
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4397
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4417
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4421
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4425
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4435
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4439
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4449
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4455
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4459
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4479
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4483
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4487
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4502
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4513
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4526
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4532
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4536
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4542
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4546
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4550
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4557
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4563
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4567
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4572
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4577
		{
			yyVAL.empty = struct{}{}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.empty = struct{}{}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4594
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4598
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4602
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4606
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4610
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4615
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4619
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4623
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4627
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4631
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4635
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = yyDollar[1].str
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = yyDollar[1].str
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = yyDollar[1].str
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4655
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4659
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4663
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4667
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = ""
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4686
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4690
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4696
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4702
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4706
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4712
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4718
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4728
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4734
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4738
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4742
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4746
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4752
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4758
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4764
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4768
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4772
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4776
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4780
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4784
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4790
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4808
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4812
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4828
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4840
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4844
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4849
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4853
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4857
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4862
		{
			yyVAL.str = ""
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4871
		{
			setAllowComments(yylex, true)
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4875
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4881
		{
			yyVAL.strs = nil
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4885
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4891
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4895
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4908
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.str = SQLCacheStr
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4931
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4935
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4945
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4950
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4954
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4960
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4964
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4969
		{
			yyVAL.strs = nil
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4973
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4979
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4983
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4993
		{
			yyVAL.str = SQLCacheStr
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.str = DistinctStr
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5001
		{
			yyVAL.str = DistinctStr
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = HighPriorityStr
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5009
		{
			yyVAL.str = StraightJoinHint
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5013
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5017
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5021
		{
			yyVAL.str = SQLBigResultStr
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5035
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5039
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5047
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5051
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5055
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5059
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5064
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5072
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5084
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5088
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5094
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5100
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5104
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5114
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5118
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5122
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5126
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5132
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5136
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5142
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5146
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5155
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5164
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5170
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5174
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5180
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5184
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5190
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5194
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5198
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5202
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5208
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5212
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5225
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5229
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5233
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5237
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5243
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5245
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5249
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5255
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5257
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5260
		{
			yyVAL.empty = struct{}{}
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5262
		{
			yyVAL.empty = struct{}{}
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5265
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5273
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5280
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5286
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5290
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5294
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5300
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5306
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5310
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5314
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5318
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5324
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5328
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5338
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5348
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5352
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5358
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5367
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5373
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5377
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5383
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5387
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5391
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5395
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5399
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5403
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5408
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5412
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5416
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5420
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5474
		{
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5555
		{
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5666
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5674
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5718
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5732
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5736
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5742
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5746
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5752
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5756
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5760
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5766
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5770
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5777
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5781
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5785
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5789
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5793
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5799
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5803
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5807
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5811
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5815
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5819
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5823
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5828
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5832
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5838
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5842
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5847
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5851
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5856
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5860
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5866
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5872
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5876
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5882
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5886
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5891
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5898
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5904
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5908
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5914
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5918
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5924
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5928
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5940
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5946
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5950
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5956
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5962
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5966
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5972
		{
			yyVAL.str = ""
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5982
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5986
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5993
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5997
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6001
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6005
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6011
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6015
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6021
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6025
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6029
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6033
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6037
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6041
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6047
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6051
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6055
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6062
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6068
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6072
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6175
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6179
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6183
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6211
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6215
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6239
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6243
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6247
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6259
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6263
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6267
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6271
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6279
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6283
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6287
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6311
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6323
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6327
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6331
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6335
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6339
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6351
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6355
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6359
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6363
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6367
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6387
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6391
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6395
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6399
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6403
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6407
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6411
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6415
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6419
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6423
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6427
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6431
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6435
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6439
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6443
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6447
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6451
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6455
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6459
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6463
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6467
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6471
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6475
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6479
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6483
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6487
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6491
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6495
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6499
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6503
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6507
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6511
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6515
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6519
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6523
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6527
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6531
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6535
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6547
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6551
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6555
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6559
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6563
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6567
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6571
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6575
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6579
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6591
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6595
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6599
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6603
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6607
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6615
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6619
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6623
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6627
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6631
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6635
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6655
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6659
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6663
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6667
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6683
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6715
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6719
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6723
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6727
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6747
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6803
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6807
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6811
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6819
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6823
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6827
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6831
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6843
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6855
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6859
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6863
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6867
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6871
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6875
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6887
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6891
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6895
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6899
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6903
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6930
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6934
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6940
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6944
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6948
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6952
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6956
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6961
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6965
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6969
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6973
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6977
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6981
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6986
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6990
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6994
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6998
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7005
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7009
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7015
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7019
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7023
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7027
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7033
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7037
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7041
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7045
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7049
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7053
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7057
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7066
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7072
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7076
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7080
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7084
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7088
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7092
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7096
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7100
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7104
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7108
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7112
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7116
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7120
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7124
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7128
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7132
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7136
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7140
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7144
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7148
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7154
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7158
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7162
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7166
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7170
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7174
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7178
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7182
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7186
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7190
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7194
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7198
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7202
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7206
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7210
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7214
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7218
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7222
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7232
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7236
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7240
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7250
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7254
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7258
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7262
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7266
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7272
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7276
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7280
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7284
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7288
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7294
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7302
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7312
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7316
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7322
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7326
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7330
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7334
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7338
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7344
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7348
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7352
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7356
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7360
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7364
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7368
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7372
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7376
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7380
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7386
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7390
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7404
		{
			yyVAL.str = string("")
		}
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7408
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7414
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7418
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7424
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7433
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7439
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7443
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7447
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7451
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7457
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7461
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7467
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7476
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7480
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7489
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7494
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7498
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7508
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7514
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7520
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7524
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7533
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7542
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7548
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7554
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7558
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7564
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7569
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7573
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7577
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7586
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7592
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7596
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7600
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7609
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7613
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7617
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7621
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7628
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7632
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7636
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7640
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7646
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7650
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7654
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7658
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7663
		{
			yyVAL.str = ""
		}
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7670
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7674
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7678
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = ""
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7687
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7693
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7697
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7702
		{
			yyVAL.str = ""
		}
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7706
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7711
		{
			yyVAL.str = "cascaded"
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7725
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7729
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:7735
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7741
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7745
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7749
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7761
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7767
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7773
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7779
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7788
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7792
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7797
		{
			yyVAL.str = ""
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7801
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7807
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7811
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7815
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7819
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7823
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7827
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7831
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7837
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7841
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7845
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7850
		{
			yyVAL.str = ""
		}
	case 1589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7854
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7858
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7863
		{
			yyVAL.str = ""
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7867
		{
			yyVAL.str = " header"
		}
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7872
		{
			yyVAL.str = ""
		}
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7876
		{
			yyVAL.str = " manifest on"
		}
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7880
		{
			yyVAL.str = " manifest off"
		}
	case 1596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7885
		{
			yyVAL.str = ""
		}
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7889
		{
			yyVAL.str = " overwrite on"
		}
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7893
		{
			yyVAL.str = " overwrite off"
		}
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7899
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7904
		{
			yyVAL.str = ""
		}
	case 1601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7908
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7914
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7918
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7924
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7928
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7933
		{
			yyVAL.str = ""
		}
	case 1607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7937
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7943
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7947
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7953
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7957
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7961
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7966
		{
			yyVAL.str = ""
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7970
		{
			yyVAL.str = " optionally"
		}
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7983
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7987
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7991
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7995
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7999
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8005
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8009
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8013
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1623:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8017
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8026
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8030
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8039
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8045
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8049
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8055
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8059
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8065
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8069
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8075
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8079
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8085
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8091
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8101
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8111
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8115
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8121
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8128
		{
			yyVAL.str = "charset"
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8138
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8142
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8146
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8155
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8157
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8162
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8165
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8167
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8170
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8172
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8175
		{
			yyVAL.empty = struct{}{}
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8177
		{
			yyVAL.empty = struct{}{}
		}
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8179
		{
			yyVAL.empty = struct{}{}
		}
	case 1665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8183
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8192
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8199
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8203
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8209
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8213
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8220
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8226
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8230
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8236
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8240
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8247
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8253
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8259
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8263
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8267
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8933
		{
		}
	case 2323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8938
		{
		}
	case 2324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8942
		{
			skipToEnd(yylex)
		}
	case 2325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8947
		{
			skipToEnd(yylex)
		}
	case 2326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8951
		{
			skipToEnd(yylex)
		}
	case 2327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8955
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
