// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const ELSEIF = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const SHIFT_LEFT = 57513
const SHIFT_RIGHT = 57514
const DIV = 57515
const MOD = 57516
const UNARY = 57517
const COLLATE = 57518
const BINARY = 57519
const UNDERSCORE_ARMSCII8 = 57520
const UNDERSCORE_ASCII = 57521
const UNDERSCORE_BIG5 = 57522
const UNDERSCORE_BINARY = 57523
const UNDERSCORE_CP1250 = 57524
const UNDERSCORE_CP1251 = 57525
const UNDERSCORE_CP1256 = 57526
const UNDERSCORE_CP1257 = 57527
const UNDERSCORE_CP850 = 57528
const UNDERSCORE_CP852 = 57529
const UNDERSCORE_CP866 = 57530
const UNDERSCORE_CP932 = 57531
const UNDERSCORE_DEC8 = 57532
const UNDERSCORE_EUCJPMS = 57533
const UNDERSCORE_EUCKR = 57534
const UNDERSCORE_GB18030 = 57535
const UNDERSCORE_GB2312 = 57536
const UNDERSCORE_GBK = 57537
const UNDERSCORE_GEOSTD8 = 57538
const UNDERSCORE_GREEK = 57539
const UNDERSCORE_HEBREW = 57540
const UNDERSCORE_HP8 = 57541
const UNDERSCORE_KEYBCS2 = 57542
const UNDERSCORE_KOI8R = 57543
const UNDERSCORE_KOI8U = 57544
const UNDERSCORE_LATIN1 = 57545
const UNDERSCORE_LATIN2 = 57546
const UNDERSCORE_LATIN5 = 57547
const UNDERSCORE_LATIN7 = 57548
const UNDERSCORE_MACCE = 57549
const UNDERSCORE_MACROMAN = 57550
const UNDERSCORE_SJIS = 57551
const UNDERSCORE_SWE7 = 57552
const UNDERSCORE_TIS620 = 57553
const UNDERSCORE_UCS2 = 57554
const UNDERSCORE_UJIS = 57555
const UNDERSCORE_UTF16 = 57556
const UNDERSCORE_UTF16LE = 57557
const UNDERSCORE_UTF32 = 57558
const UNDERSCORE_UTF8 = 57559
const UNDERSCORE_UTF8MB4 = 57560
const UNDERSCORE_UTF8MB3 = 57561
const INTERVAL = 57562
const WINDOW_EXPR = 57563
const JSON_EXTRACT_OP = 57564
const JSON_UNQUOTE_EXTRACT_OP = 57565
const CREATE = 57566
const ALTER = 57567
const DROP = 57568
const RENAME = 57569
const ANALYZE = 57570
const ADD = 57571
const FLUSH = 57572
const CHANGE = 57573
const MODIFY = 57574
const DEALLOCATE = 57575
const REVERT = 57576
const QUERIES = 57577
const DECLARE = 57578
const SCHEMA = 57579
const TABLE = 57580
const INDEX = 57581
const VIEW = 57582
const TO = 57583
const IGNORE = 57584
const IF = 57585
const PRIMARY = 57586
const COLUMN = 57587
const SPATIAL = 57588
const FULLTEXT = 57589
const KEY_BLOCK_SIZE = 57590
const CHECK = 57591
const INDEXES = 57592
const ACTION = 57593
const CASCADE = 57594
const CONSTRAINT = 57595
const FOREIGN = 57596
const NO = 57597
const REFERENCES = 57598
const RESTRICT = 57599
const SHOW = 57600
const DESCRIBE = 57601
const EXPLAIN = 57602
const DATE = 57603
const ESCAPE = 57604
const REPAIR = 57605
const OPTIMIZE = 57606
const TRUNCATE = 57607
const COALESCE = 57608
const EXCHANGE = 57609
const REBUILD = 57610
const PARTITIONING = 57611
const REMOVE = 57612
const PREPARE = 57613
const EXECUTE = 57614
const MAXVALUE = 57615
const PARTITION = 57616
const REORGANIZE = 57617
const LESS = 57618
const THAN = 57619
const PROCEDURE = 57620
const TRIGGER = 57621
const VINDEX = 57622
const VINDEXES = 57623
const DIRECTORY = 57624
const NAME = 57625
const UPGRADE = 57626
const STATUS = 57627
const VARIABLES = 57628
const WARNINGS = 57629
const CASCADED = 57630
const DEFINER = 57631
const OPTION = 57632
const SQL = 57633
const UNDEFINED = 57634
const SEQUENCE = 57635
const MERGE = 57636
const TEMPORARY = 57637
const TEMPTABLE = 57638
const INVOKER = 57639
const SECURITY = 57640
const FIRST = 57641
const AFTER = 57642
const LAST = 57643
const VITESS_MIGRATION = 57644
const CANCEL = 57645
const RETRY = 57646
const LAUNCH = 57647
const COMPLETE = 57648
const CLEANUP = 57649
const THROTTLE = 57650
const UNTHROTTLE = 57651
const FORCE_CUTOVER = 57652
const CUTOVER_THRESHOLD = 57653
const EXPIRE = 57654
const RATIO = 57655
const VITESS_THROTTLER = 57656
const BEGIN = 57657
const START = 57658
const TRANSACTION = 57659
const COMMIT = 57660
const ROLLBACK = 57661
const SAVEPOINT = 57662
const RELEASE = 57663
const WORK = 57664
const CONSISTENT = 57665
const SNAPSHOT = 57666
const UNRESOLVED = 57667
const TRANSACTIONS = 57668
const BIT = 57669
const TINYINT = 57670
const SMALLINT = 57671
const MEDIUMINT = 57672
const INT = 57673
const INTEGER = 57674
const BIGINT = 57675
const INTNUM = 57676
const REAL = 57677
const DOUBLE = 57678
const FLOAT_TYPE = 57679
const FLOAT4_TYPE = 57680
const FLOAT8_TYPE = 57681
const DECIMAL_TYPE = 57682
const NUMERIC = 57683
const TIME = 57684
const TIMESTAMP = 57685
const DATETIME = 57686
const YEAR = 57687
const CHAR = 57688
const VARCHAR = 57689
const BOOL = 57690
const CHARACTER = 57691
const VARBINARY = 57692
const NCHAR = 57693
const TEXT = 57694
const TINYTEXT = 57695
const MEDIUMTEXT = 57696
const LONGTEXT = 57697
const BLOB = 57698
const TINYBLOB = 57699
const MEDIUMBLOB = 57700
const LONGBLOB = 57701
const JSON = 57702
const JSON_SCHEMA_VALID = 57703
const JSON_SCHEMA_VALIDATION_REPORT = 57704
const ENUM = 57705
const GEOMETRY = 57706
const POINT = 57707
const LINESTRING = 57708
const POLYGON = 57709
const GEOMCOLLECTION = 57710
const GEOMETRYCOLLECTION = 57711
const MULTIPOINT = 57712
const MULTILINESTRING = 57713
const MULTIPOLYGON = 57714
const ASCII = 57715
const UNICODE = 57716
const VECTOR = 57717
const NULLX = 57718
const AUTO_INCREMENT = 57719
const APPROXNUM = 57720
const SIGNED = 57721
const UNSIGNED = 57722
const ZEROFILL = 57723
const PURGE = 57724
const BEFORE = 57725
const CODE = 57726
const COLLATION = 57727
const COLUMNS = 57728
const DATABASES = 57729
const ENGINES = 57730
const EVENT = 57731
const EXTENDED = 57732
const FIELDS = 57733
const FULL = 57734
const FUNCTION = 57735
const GTID_EXECUTED = 57736
const KEYSPACES = 57737
const OPEN = 57738
const PLUGINS = 57739
const PRIVILEGES = 57740
const PROCESSLIST = 57741
const SCHEMAS = 57742
const TABLES = 57743
const TRIGGERS = 57744
const USER = 57745
const VGTID_EXECUTED = 57746
const VITESS_KEYSPACES = 57747
const VITESS_METADATA = 57748
const VITESS_MIGRATIONS = 57749
const VITESS_REPLICATION_STATUS = 57750
const VITESS_SHARDS = 57751
const VITESS_TABLETS = 57752
const VITESS_TARGET = 57753
const VSCHEMA = 57754
const VITESS_THROTTLED_APPS = 57755
const NAMES = 57756
const GLOBAL = 57757
const SESSION = 57758
const ISOLATION = 57759
const LEVEL = 57760
const READ = 57761
const WRITE = 57762
const ONLY = 57763
const REPEATABLE = 57764
const COMMITTED = 57765
const UNCOMMITTED = 57766
const SERIALIZABLE = 57767
const ADDDATE = 57768
const CURRENT_TIMESTAMP = 57769
const DATABASE = 57770
const CURRENT_DATE = 57771
const CURDATE = 57772
const DATE_ADD = 57773
const DATE_SUB = 57774
const NOW = 57775
const SUBDATE = 57776
const CURTIME = 57777
const CURRENT_TIME = 57778
const LOCALTIME = 57779
const LOCALTIMESTAMP = 57780
const CURRENT_USER = 57781
const UTC_DATE = 57782
const UTC_TIME = 57783
const UTC_TIMESTAMP = 57784
const SYSDATE = 57785
const DAY = 57786
const DAY_HOUR = 57787
const DAY_MICROSECOND = 57788
const DAY_MINUTE = 57789
const DAY_SECOND = 57790
const HOUR = 57791
const HOUR_MICROSECOND = 57792
const HOUR_MINUTE = 57793
const HOUR_SECOND = 57794
const MICROSECOND = 57795
const MINUTE = 57796
const MINUTE_MICROSECOND = 57797
const MINUTE_SECOND = 57798
const MONTH = 57799
const QUARTER = 57800
const SECOND = 57801
const SECOND_MICROSECOND = 57802
const YEAR_MONTH = 57803
const WEEK = 57804
const SQL_TSI_DAY = 57805
const SQL_TSI_WEEK = 57806
const SQL_TSI_HOUR = 57807
const SQL_TSI_MINUTE = 57808
const SQL_TSI_MONTH = 57809
const SQL_TSI_QUARTER = 57810
const SQL_TSI_SECOND = 57811
const SQL_TSI_MICROSECOND = 57812
const SQL_TSI_YEAR = 57813
const REPLACE = 57814
const CONVERT = 57815
const CAST = 57816
const SUBSTR = 57817
const SUBSTRING = 57818
const MID = 57819
const SEPARATOR = 57820
const TIMESTAMPADD = 57821
const TIMESTAMPDIFF = 57822
const WEIGHT_STRING = 57823
const LTRIM = 57824
const RTRIM = 57825
const TRIM = 57826
const JSON_ARRAY = 57827
const JSON_OBJECT = 57828
const JSON_QUOTE = 57829
const JSON_DEPTH = 57830
const JSON_TYPE = 57831
const JSON_LENGTH = 57832
const JSON_VALID = 57833
const JSON_ARRAY_APPEND = 57834
const JSON_ARRAY_INSERT = 57835
const JSON_INSERT = 57836
const JSON_MERGE = 57837
const JSON_MERGE_PATCH = 57838
const JSON_MERGE_PRESERVE = 57839
const JSON_REMOVE = 57840
const JSON_REPLACE = 57841
const JSON_SET = 57842
const JSON_UNQUOTE = 57843
const COUNT = 57844
const AVG = 57845
const MAX = 57846
const MIN = 57847
const SUM = 57848
const GROUP_CONCAT = 57849
const BIT_AND = 57850
const BIT_OR = 57851
const BIT_XOR = 57852
const STD = 57853
const STDDEV = 57854
const STDDEV_POP = 57855
const STDDEV_SAMP = 57856
const VAR_POP = 57857
const VAR_SAMP = 57858
const VARIANCE = 57859
const ANY_VALUE = 57860
const REGEXP_INSTR = 57861
const REGEXP_LIKE = 57862
const REGEXP_REPLACE = 57863
const REGEXP_SUBSTR = 57864
const ExtractValue = 57865
const UpdateXML = 57866
const GET_LOCK = 57867
const RELEASE_LOCK = 57868
const RELEASE_ALL_LOCKS = 57869
const IS_FREE_LOCK = 57870
const IS_USED_LOCK = 57871
const LOCATE = 57872
const POSITION = 57873
const ST_GeometryCollectionFromText = 57874
const ST_GeometryFromText = 57875
const ST_LineStringFromText = 57876
const ST_MultiLineStringFromText = 57877
const ST_MultiPointFromText = 57878
const ST_MultiPolygonFromText = 57879
const ST_PointFromText = 57880
const ST_PolygonFromText = 57881
const ST_GeometryCollectionFromWKB = 57882
const ST_GeometryFromWKB = 57883
const ST_LineStringFromWKB = 57884
const ST_MultiLineStringFromWKB = 57885
const ST_MultiPointFromWKB = 57886
const ST_MultiPolygonFromWKB = 57887
const ST_PointFromWKB = 57888
const ST_PolygonFromWKB = 57889
const ST_AsBinary = 57890
const ST_AsText = 57891
const ST_Dimension = 57892
const ST_Envelope = 57893
const ST_IsSimple = 57894
const ST_IsEmpty = 57895
const ST_GeometryType = 57896
const ST_X = 57897
const ST_Y = 57898
const ST_Latitude = 57899
const ST_Longitude = 57900
const ST_EndPoint = 57901
const ST_IsClosed = 57902
const ST_Length = 57903
const ST_NumPoints = 57904
const ST_StartPoint = 57905
const ST_PointN = 57906
const ST_Area = 57907
const ST_Centroid = 57908
const ST_ExteriorRing = 57909
const ST_InteriorRingN = 57910
const ST_NumInteriorRings = 57911
const ST_NumGeometries = 57912
const ST_GeometryN = 57913
const ST_LongFromGeoHash = 57914
const ST_PointFromGeoHash = 57915
const ST_LatFromGeoHash = 57916
const ST_GeoHash = 57917
const ST_AsGeoJSON = 57918
const ST_GeomFromGeoJSON = 57919
const MATCH = 57920
const AGAINST = 57921
const BOOLEAN = 57922
const LANGUAGE = 57923
const WITH = 57924
const QUERY = 57925
const EXPANSION = 57926
const WITHOUT = 57927
const VALIDATION = 57928
const ROLLUP = 57929
const UNUSED = 57930
const ARRAY = 57931
const BYTE = 57932
const CUME_DIST = 57933
const DESCRIPTION = 57934
const DENSE_RANK = 57935
const EMPTY = 57936
const EXCEPT = 57937
const FIRST_VALUE = 57938
const GROUPING = 57939
const GROUPS = 57940
const JSON_TABLE = 57941
const LAG = 57942
const LAST_VALUE = 57943
const LATERAL = 57944
const LEAD = 57945
const NTH_VALUE = 57946
const NTILE = 57947
const OF = 57948
const OVER = 57949
const PERCENT_RANK = 57950
const RANK = 57951
const RECURSIVE = 57952
const ROW_NUMBER = 57953
const SYSTEM = 57954
const WINDOW = 57955
const ACTIVE = 57956
const ADMIN = 57957
const AUTOEXTEND_SIZE = 57958
const BUCKETS = 57959
const CLONE = 57960
const COLUMN_FORMAT = 57961
const COMPONENT = 57962
const DEFINITION = 57963
const ENFORCED = 57964
const ENGINE_ATTRIBUTE = 57965
const EXCLUDE = 57966
const FOLLOWING = 57967
const GET_MASTER_PUBLIC_KEY = 57968
const HISTOGRAM = 57969
const HISTORY = 57970
const INACTIVE = 57971
const INVISIBLE = 57972
const LOCKED = 57973
const MASTER_COMPRESSION_ALGORITHMS = 57974
const MASTER_PUBLIC_KEY_PATH = 57975
const MASTER_TLS_CIPHERSUITES = 57976
const MASTER_ZSTD_COMPRESSION_LEVEL = 57977
const NESTED = 57978
const NETWORK_NAMESPACE = 57979
const NOWAIT = 57980
const NULLS = 57981
const OJ = 57982
const OLD = 57983
const OPTIONAL = 57984
const ORDINALITY = 57985
const ORGANIZATION = 57986
const OTHERS = 57987
const PARTIAL = 57988
const PATH = 57989
const PERSIST = 57990
const PERSIST_ONLY = 57991
const PRECEDING = 57992
const PRIVILEGE_CHECKS_USER = 57993
const PROCESS = 57994
const RANDOM = 57995
const REFERENCE = 57996
const REQUIRE_ROW_FORMAT = 57997
const RESOURCE = 57998
const RESPECT = 57999
const RESTART = 58000
const RETAIN = 58001
const REUSE = 58002
const ROLE = 58003
const SECONDARY = 58004
const SECONDARY_ENGINE = 58005
const SECONDARY_ENGINE_ATTRIBUTE = 58006
const SECONDARY_LOAD = 58007
const SECONDARY_UNLOAD = 58008
const SIMPLE = 58009
const SKIP = 58010
const SRID = 58011
const THREAD_PRIORITY = 58012
const TIES = 58013
const UNBOUNDED = 58014
const VCPU = 58015
const VISIBLE = 58016
const RETURNING = 58017
const MANUAL = 58018
const PARALLEL = 58019
const QUALIFY = 58020
const TABLESAMPLE = 58021
const OUT = 58022
const INOUT = 58023
const FORMAT_BYTES = 58024
const FORMAT_PICO_TIME = 58025
const PS_CURRENT_THREAD_ID = 58026
const PS_THREAD_ID = 58027
const GTID_SUBSET = 58028
const GTID_SUBTRACT = 58029
const WAIT_FOR_EXECUTED_GTID_SET = 58030
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58031
const FORMAT = 58032
const TREE = 58033
const VITESS = 58034
const TRADITIONAL = 58035
const VTEXPLAIN = 58036
const VEXPLAIN = 58037
const PLAN = 58038
const LOCAL = 58039
const LOW_PRIORITY = 58040
const NO_WRITE_TO_BINLOG = 58041
const LOGS = 58042
const ERROR = 58043
const GENERAL = 58044
const HOSTS = 58045
const OPTIMIZER_COSTS = 58046
const USER_RESOURCES = 58047
const SLOW = 58048
const CHANNEL = 58049
const RELAY = 58050
const EXPORT = 58051
const CURRENT = 58052
const ROW = 58053
const ROWS = 58054
const AVG_ROW_LENGTH = 58055
const CONNECTION = 58056
const CHECKSUM = 58057
const DELAY_KEY_WRITE = 58058
const ENCRYPTION = 58059
const ENGINE = 58060
const INSERT_METHOD = 58061
const MAX_ROWS = 58062
const MIN_ROWS = 58063
const PACK_KEYS = 58064
const PASSWORD = 58065
const FIXED = 58066
const DYNAMIC = 58067
const COMPRESSED = 58068
const REDUNDANT = 58069
const COMPACT = 58070
const ROW_FORMAT = 58071
const STATS_AUTO_RECALC = 58072
const STATS_PERSISTENT = 58073
const STATS_SAMPLE_PAGES = 58074
const STORAGE = 58075
const MEMORY = 58076
const DISK = 58077
const PARTITIONS = 58078
const LINEAR = 58079
const RANGE = 58080
const LIST = 58081
const SUBPARTITION = 58082
const SUBPARTITIONS = 58083
const HASH = 58084

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"DECLARE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 71,
	17, 71,
	-2, 5,
	-1, 54,
	1, 186,
	760, 186,
	-2, 194,
	-1, 55,
	149, 194,
	192, 194,
	366, 194,
	-2, 554,
	-1, 63,
	38, 815,
	256, 815,
	267, 815,
	302, 829,
	303, 829,
	-2, 817,
	-1, 68,
	258, 853,
	-2, 851,
	-1, 130,
	1, 187,
	760, 187,
	-2, 194,
	-1, 141,
	150, 439,
	261, 439,
	-2, 543,
	-1, 160,
	149, 194,
	192, 194,
	366, 194,
	-2, 563,
	-1, 759,
	178, 63,
	-2, 65,
	-1, 968,
	95, 1685,
	-2, 1513,
	-1, 969,
	95, 1686,
	237, 1690,
	-2, 1514,
	-1, 970,
	237, 1689,
	-2, 64,
	-1, 1056,
	65, 927,
	-2, 940,
	-1, 1061,
	255, 1668,
	-2, 1582,
	-1, 1138,
	266, 1140,
	271, 1140,
	-2, 450,
	-1, 1226,
	1, 611,
	760, 611,
	-2, 194,
	-1, 1542,
	237, 1690,
	-2, 1514,
	-1, 1755,
	65, 928,
	-2, 944,
	-1, 1756,
	65, 929,
	-2, 945,
	-1, 1832,
	149, 194,
	192, 194,
	366, 194,
	-2, 489,
	-1, 1909,
	150, 439,
	261, 439,
	-2, 543,
	-1, 1918,
	266, 1141,
	271, 1141,
	-2, 451,
	-1, 2366,
	237, 1694,
	-2, 1688,
	-1, 2367,
	237, 1690,
	-2, 1686,
	-1, 2484,
	149, 194,
	192, 194,
	366, 194,
	-2, 490,
	-1, 2491,
	28, 215,
	-2, 217,
	-1, 2965,
	86, 121,
	96, 121,
	-2, 1007,
	-1, 3029,
	735, 733,
	-2, 707,
	-1, 3263,
	55, 1627,
	-2, 1621,
	-1, 4107,
	735, 733,
	-2, 721,
	-1, 4147,
	16, 71,
	17, 71,
	165, 52,
	-2, 841,
	-1, 4203,
	165, 53,
	-2, 71,
	-1, 4213,
	98, 665,
	104, 665,
	114, 665,
	194, 665,
	195, 665,
	196, 665,
	197, 665,
	198, 665,
	199, 665,
	200, 665,
	201, 665,
	202, 665,
	203, 665,
	204, 665,
	205, 665,
	206, 665,
	207, 665,
	208, 665,
	209, 665,
	210, 665,
	211, 665,
	212, 665,
	213, 665,
	214, 665,
	215, 665,
	216, 665,
	217, 665,
	218, 665,
	219, 665,
	220, 665,
	221, 665,
	222, 665,
	223, 665,
	224, 665,
	225, 665,
	226, 665,
	227, 665,
	228, 665,
	229, 665,
	230, 665,
	231, 665,
	232, 665,
	233, 665,
	234, 665,
	235, 665,
	-2, 2071,
	-1, 4279,
	163, 58,
	165, 58,
	-2, 71,
	-1, 4330,
	165, 57,
	-2, 71,
	-1, 4335,
	16, 71,
	17, 71,
	-2, 62,
}

const yyPrivate = 57344

const yyLast = 57291

var yyAct = [...]int{
	984, 3747, 979, 89, 4204, 3746, 4303, 3745, 4292, 4310,
	3540, 932, 4257, 4089, 4256, 4185, 933, 2481, 1295, 3404,
	2038, 3315, 4211, 971, 4203, 3322, 2395, 4068, 3991, 3359,
	2540, 3276, 3788, 3368, 2171, 2159, 1293, 791, 4205, 4066,
	87, 3373, 3370, 3695, 3683, 3369, 3367, 3372, 3371, 2397,
	3114, 3199, 6, 3388, 3330, 2550, 763, 3387, 3280, 3277,
	3594, 3580, 3799, 3088, 3113, 972, 757, 2436, 2519, 3264,
	758, 3390, 3570, 2999, 2925, 3070, 3411, 2455, 3026, 2910,
	4139, 2524, 3000, 2581, 127, 1108, 2452, 3001, 1054, 2469,
	89, 1076, 1835, 169, 2457, 2950, 42, 44, 2931, 1892,
	3616, 2909, 2899, 1051, 1170, 2883, 1934, 2456, 2415, 1083,
	2351, 2155, 1054, 2319, 3061, 1916, 2559, 3274, 2105, 2444,
	155, 2193, 937, 2526, 2992, 43, 1128, 1118, 1824, 2967,
	1060, 986, 1133, 2318, 1773, 109, 1804, 1790, 2459, 2938,
	1736, 2424, 1555, 2199, 2119, 1480, 3279, 110, 2130, 985,
	105, 773, 1463, 1923, 2034, 1115, 1112, 1116, 2515, 1139,
	1134, 1135, 1823, 1093, 2516, 1136, 761, 1095, 1809, 1758,
	1219, 1064, 2207, 2226, 1514, 11, 10, 1146, 104, 3783,
	2437, 768, 2881, 9, 2096, 1283, 1058, 1059, 1538, 3775,
	2046, 173, 133, 3541, 112, 131, 1291, 1908, 138, 132,
	760, 139, 1088, 4201, 96, 1049, 1062, 1230, 750, 1559,
	1053, 1269, 1057, 103, 1075, 1224, 4293, 86, 3684, 934,
	3356, 2552, 3605, 2552, 2553, 2554, 111, 1087, 3049, 3048,
	4123, 3017, 2596, 3676, 1078, 4235, 1048, 1792, 1218, 3078,
	3079, 2000, 4118, 4119, 693, 2112, 134, 1564, 2111, 2110,
	2109, 3750, 2108, 140, 1175, 1068, 4124, 1109, 2107, 2392,
	2393, 2077, 1172, 1239, 690, 3014, 691, 2879, 2648, 3260,
	3203, 3641, 4325, 2585, 4255, 1189, 1190, 1191, 4283, 1194,
	1195, 1196, 1197, 751, 1069, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1103, 1102, 1497, 1052, 4260, 1795, 1149, 1066,
	2, 4297, 3544, 1050, 1769, 1125, 1077, 2584, 1793, 4239,
	1150, 1788, 134, 1124, 1240, 4097, 1123, 1176, 1179, 1180,
	1122, 3750, 1477, 2927, 3543, 1474, 4296, 1796, 2433, 3019,
	2432, 3039, 1183, 3042, 4238, 4069, 2844, 3749, 1794, 4119,
	4237, 2117, 3430, 4200, 1192, 116, 117, 118, 3987, 121,
	3986, 1174, 3378, 1120, 196, 3378, 197, 1047, 729, 685,
	1101, 1105, 936, 3689, 735, 4236, 3690, 4233, 3375, 1173,
	4270, 748, 749, 1101, 1105, 936, 3997, 135, 3707, 1465,
	134, 1042, 1043, 1044, 1045, 3696, 4182, 2541, 1056, 1036,
	2578, 3996, 1061, 178, 974, 1037, 988, 989, 990, 975,
	98, 1126, 976, 977, 2164, 978, 2655, 4216, 3456, 729,
	2426, 2880, 3376, 3312, 3313, 3376, 1825, 3749, 1826, 1090,
	1091, 3311, 729, 991, 992, 2976, 3077, 2652, 2975, 2475,
	1476, 2977, 2476, 2477, 3060, 1481, 2089, 2090, 1259, 2981,
	1040, 3382, 1247, 1494, 3382, 1495, 1496, 1248, 1039, 1247,
	4186, 3020, 4090, 175, 1248, 1246, 176, 1245, 1264, 1265,
	3706, 2042, 2988, 2494, 2493, 1260, 1288, 729, 1493, 1253,
	2934, 2935, 3135, 3408, 1481, 3790, 2653, 3406, 3438, 3436,
	1458, 2646, 195, 88, 2583, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 4190, 2394, 2088,
	743, 2092, 4221, 2535, 100, 729, 1475, 88, 747, 88,
	741, 3412, 1464, 1821, 1491, 88, 3062, 1740, 90, 1990,
	4261, 4039, 4219, 4040, 3027, 2560, 2905, 2529, 3379, 2416,
	2941, 3379, 4226, 4227, 1261, 3663, 98, 1266, 1254, 3399,
	3409, 4262, 3332, 3333, 3407, 730, 1784, 1267, 1193, 4220,
	1287, 1280, 1457, 1491, 1515, 2603, 1286, 1285, 2942, 2649,
	3813, 2650, 3246, 1991, 1094, 1992, 100, 1262, 1263, 179,
	3247, 2601, 2622, 2043, 2623, 1268, 2624, 3427, 185, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1524, 1523, 1525, 1526,
	98, 2235, 98, 1227, 3065, 3678, 730, 2919, 98, 2920,
	2610, 2606, 2608, 2609, 2607, 2611, 2612, 2613, 2614, 730,
	2604, 3677, 3136, 2600, 2625, 2414, 1199, 1198, 2599, 3971,
	3400, 3401, 2563, 3754, 3674, 1129, 2602, 1487, 2416, 1130,
	1479, 2453, 1130, 1743, 3015, 1168, 3591, 1167, 1166, 3334,
	1165, 1529, 1164, 1163, 1162, 3202, 1161, 1901, 1156, 1169,
	1113, 4326, 1113, 3331, 730, 1142, 1111, 3354, 1178, 1113,
	1141, 1104, 1098, 1096, 1141, 3334, 1487, 4334, 1177, 2425,
	2035, 1089, 3066, 2589, 1104, 1098, 1096, 2588, 2031, 1466,
	1186, 3583, 2528, 3250, 1292, 3051, 1292, 1292, 2904, 2423,
	2227, 2422, 2421, 3037, 2417, 2229, 4231, 2032, 1238, 2234,
	2230, 684, 4085, 2231, 2232, 2233, 3630, 170, 2228, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 3059, 1530,
	1531, 3058, 730, 3612, 2972, 2937, 2856, 2167, 3082, 3021,
	1813, 1693, 2932, 1237, 3211, 692, 1054, 1539, 1544, 1545,
	3673, 1548, 1550, 1551, 1552, 1553, 1554, 1822, 1557, 1558,
	1560, 1560, 3210, 1560, 1560, 1565, 1565, 1565, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1455, 1456, 1233, 1281, 1692, 1536, 1694, 1695,
	1696, 1697, 1698, 4096, 1792, 3748, 1532, 1533, 1534, 1535,
	1565, 1565, 1565, 1565, 1565, 1565, 1546, 3018, 2002, 2001,
	2003, 2004, 2005, 1127, 3041, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1486,
	1483, 1484, 1485, 1490, 1492, 1489, 2582, 1488, 3639, 3640,
	3642, 4142, 1549, 729, 1097, 3705, 171, 1482, 3592, 2654,
	4188, 1454, 3528, 183, 1159, 2917, 1540, 1097, 3040, 98,
	1561, 1148, 1562, 1563, 1157, 3792, 3791, 1473, 1486, 1483,
	1484, 1485, 1490, 1492, 1489, 3748, 1488, 1922, 1529, 1243,
	1148, 1249, 1250, 1251, 1252, 1060, 1482, 2440, 4187, 1244,
	2884, 2886, 91, 2482, 191, 1148, 1733, 2580, 1223, 3428,
	1231, 1232, 1739, 1566, 1567, 1289, 1290, 130, 1529, 3380,
	3381, 1054, 3380, 3381, 3310, 1054, 2532, 1526, 1769, 2681,
	2653, 1054, 3384, 3069, 1270, 3384, 729, 1257, 2047, 1509,
	1072, 1768, 1234, 1242, 1284, 4110, 4314, 1171, 3669, 4225,
	97, 1730, 3604, 172, 177, 174, 180, 181, 182, 184,
	186, 187, 188, 189, 2427, 1060, 1235, 2533, 2101, 190,
	192, 193, 194, 124, 2531, 2670, 1147, 1729, 2028, 1827,
	2440, 1521, 1522, 1524, 1523, 1525, 1526, 4329, 4223, 4246,
	89, 3109, 4304, 4224, 2200, 1147, 1225, 2915, 1921, 1148,
	2200, 4321, 2690, 4271, 97, 2208, 97, 1496, 2534, 3808,
	1147, 3647, 97, 2681, 3646, 1749, 1160, 3230, 2530, 109,
	1787, 1730, 2209, 2135, 2020, 2567, 1158, 1750, 196, 2577,
	1060, 110, 1931, 1276, 1930, 1278, 3228, 1920, 2136, 1527,
	1528, 2134, 1895, 1747, 2575, 1497, 1159, 1751, 1737, 1185,
	1067, 135, 125, 1053, 1515, 4263, 1157, 1699, 1700, 1701,
	1702, 1703, 1704, 3631, 4102, 1495, 1496, 178, 1791, 2717,
	730, 4316, 3089, 1275, 1277, 4152, 2885, 2572, 112, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1524, 1523, 1525, 1526,
	4327, 1225, 1914, 1271, 2438, 2439, 4265, 2048, 1241, 1222,
	1898, 1899, 1900, 3072, 1147, 2191, 3072, 1771, 3071, 1151,
	1141, 3071, 43, 1769, 1153, 2579, 1226, 1734, 1154, 1152,
	2576, 2205, 1985, 1907, 4153, 1746, 2040, 175, 1748, 3702,
	176, 3703, 1926, 1936, 1745, 1937, 1967, 1939, 1941, 1774,
	1786, 1945, 1947, 1949, 1951, 1953, 2572, 1776, 1052, 1050,
	1292, 1780, 4077, 730, 1783, 1256, 195, 3091, 3979, 2019,
	1223, 1217, 2206, 1818, 1819, 3978, 1258, 1975, 1976, 1925,
	1781, 98, 1148, 1981, 1982, 1887, 3969, 2438, 2439, 2356,
	4312, 1497, 1148, 4313, 1273, 4311, 4328, 3719, 1274, 2574,
	2010, 2133, 1924, 1924, 1494, 2194, 1495, 1496, 1279, 1904,
	1905, 4078, 1917, 1903, 2183, 2172, 2173, 2174, 2175, 2185,
	2176, 2177, 2178, 2190, 2186, 2179, 2180, 2187, 2188, 2189,
	2181, 2182, 2184, 1272, 2015, 1221, 3718, 2123, 2124, 2121,
	2122, 3101, 3100, 3099, 3654, 1752, 3093, 1971, 3097, 1928,
	3092, 2008, 3090, 988, 989, 990, 2024, 3095, 2022, 2023,
	2021, 2025, 2026, 2027, 2120, 1223, 3094, 1777, 2036, 3653,
	1997, 2009, 2191, 3643, 1779, 1778, 1963, 3357, 3350, 1966,
	2997, 1968, 753, 179, 2996, 3096, 3098, 1147, 1148, 1184,
	2995, 2538, 185, 1181, 2011, 1995, 1994, 1147, 134, 1124,
	1993, 1497, 1123, 1141, 1144, 1145, 1122, 1113, 1983, 1977,
	1974, 1138, 1142, 2123, 2124, 2660, 2661, 1784, 1148, 1973,
	1972, 2990, 2007, 1235, 1943, 2016, 2053, 2017, 1744, 3636,
	2018, 735, 1137, 1497, 1292, 1292, 3258, 2049, 2050, 1460,
	1494, 1996, 1495, 1496, 735, 1220, 2075, 1821, 4264, 4331,
	89, 2054, 2979, 89, 735, 2548, 2074, 2547, 2061, 2062,
	2063, 1222, 1519, 1520, 1521, 1522, 1524, 1523, 1525, 1526,
	1497, 2183, 2172, 2173, 2174, 2175, 2185, 2176, 2177, 2178,
	2190, 2186, 2179, 2180, 2187, 2188, 2189, 2181, 2182, 2184,
	2546, 2356, 2545, 1147, 4105, 2353, 2445, 2446, 1151, 1141,
	1497, 4104, 2097, 1153, 2355, 2097, 2729, 1154, 1152, 2544,
	4081, 2543, 1497, 2162, 2162, 4080, 1493, 1769, 1897, 4294,
	983, 170, 3318, 1147, 4079, 4276, 1769, 1798, 1155, 1141,
	1144, 1145, 3974, 1113, 2160, 2160, 2677, 1138, 1142, 1503,
	1504, 1505, 1506, 1507, 1508, 1502, 1499, 2163, 4251, 1769,
	1494, 2125, 1495, 1496, 1897, 1769, 1222, 3959, 2051, 4248,
	1493, 1769, 1515, 1497, 3081, 2055, 3958, 2057, 2058, 2059,
	2060, 1060, 43, 3319, 2064, 43, 1799, 3807, 1515, 1897,
	4181, 1769, 1494, 3805, 1495, 1496, 2076, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1524, 1523, 1525, 1526, 3321, 1497,
	3715, 2731, 2246, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1524, 1523, 1525, 1526, 1497, 1897, 4162, 4098, 3316, 1494,
	1802, 1495, 1496, 1497, 1728, 2100, 2098, 1730, 2100, 2098,
	2082, 2083, 1727, 2099, 1897, 4158, 2099, 2102, 3332, 3333,
	2131, 1726, 2132, 3651, 1515, 3317, 2669, 106, 3635, 1494,
	3413, 1495, 1496, 1729, 2195, 4274, 1769, 107, 3111, 3410,
	2139, 1494, 3353, 1495, 1496, 3352, 2137, 1497, 3063, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1524, 1523, 1525, 1526,
	3323, 2686, 2352, 4059, 1769, 1497, 3687, 4095, 3982, 1769,
	108, 1801, 2366, 2138, 2365, 2140, 2141, 2142, 2143, 2144,
	2145, 2147, 2149, 2150, 2151, 2152, 2153, 2154, 2166, 2270,
	2364, 3006, 1494, 1557, 1495, 1496, 1769, 4006, 1769, 1897,
	3970, 4005, 2210, 2211, 2212, 2213, 3687, 1769, 1497, 1897,
	3685, 115, 2354, 2993, 1497, 1725, 2224, 2572, 1769, 1540,
	2245, 1719, 114, 2643, 113, 3610, 1769, 2968, 1494, 3331,
	1495, 1496, 108, 2811, 1769, 1769, 1515, 2201, 106, 2685,
	171, 3334, 2635, 1494, 108, 1495, 1496, 183, 107, 3343,
	3342, 3963, 1494, 2431, 1495, 1496, 2634, 4196, 1769, 3962,
	2262, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1523,
	1525, 1526, 115, 2594, 2363, 3340, 3341, 2369, 2370, 2461,
	2593, 109, 2435, 114, 2400, 113, 1497, 2078, 191, 3338,
	3339, 1497, 2366, 110, 2450, 2969, 1494, 1769, 1495, 1496,
	4194, 1769, 3589, 109, 2044, 2971, 4192, 1769, 3028, 1769,
	2364, 3338, 3337, 2491, 1494, 110, 1495, 1496, 1497, 2947,
	1769, 2399, 2653, 3050, 2411, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1524, 1523, 1525, 1526, 2006, 172, 177, 174,
	180, 181, 182, 184, 186, 187, 188, 189, 1891, 3031,
	3024, 3025, 1118, 190, 192, 193, 194, 1494, 1769, 1495,
	1496, 1998, 3320, 1494, 1988, 1495, 1496, 1984, 2679, 2387,
	1980, 2419, 1497, 2968, 2500, 2501, 2502, 2503, 2678, 2486,
	1118, 1979, 1068, 4052, 1769, 2902, 2485, 2412, 1517, 1518,
	1519, 1520, 1521, 1522, 1524, 1523, 1525, 1526, 2467, 108,
	2495, 2463, 2496, 2497, 2498, 2499, 2418, 2165, 1769, 3011,
	4050, 1769, 98, 1978, 1800, 2521, 2505, 2428, 1282, 2507,
	2508, 2509, 2510, 2405, 1497, 2406, 2489, 1897, 1896, 2561,
	2527, 1891, 1890, 2490, 1497, 1494, 2939, 1495, 1496, 2448,
	1494, 2969, 1495, 1496, 2472, 2473, 3445, 1497, 2471, 1833,
	1832, 2653, 2939, 1515, 2488, 2487, 1511, 3275, 1512, 2558,
	3607, 1103, 1102, 2900, 4047, 1769, 3603, 1494, 3603, 1495,
	1496, 1497, 2537, 1513, 1527, 1528, 1510, 1497, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1524, 1523, 1525, 1526, 1497,
	3305, 88, 45, 46, 90, 2946, 2566, 114, 1493, 2569,
	2653, 2570, 2573, 2518, 2522, 2511, 2513, 2514, 4137, 2536,
	95, 4109, 2586, 2947, 49, 78, 79, 1769, 76, 80,
	1497, 1494, 1897, 1495, 1496, 1497, 4029, 1769, 3606, 3603,
	77, 4073, 2947, 3548, 2522, 2565, 2568, 2564, 1149, 3569,
	1769, 3340, 100, 2590, 2587, 3233, 1497, 2591, 2592, 2474,
	1150, 1055, 1497, 2811, 196, 2714, 2947, 2713, 2572, 1497,
	1924, 2555, 64, 3562, 1769, 3022, 2572, 1497, 2443, 3559,
	1769, 1493, 2430, 1494, 98, 1495, 1496, 135, 2658, 157,
	1785, 3557, 1769, 1494, 2598, 1495, 1496, 1054, 1054, 1054,
	1770, 1772, 2597, 178, 2390, 2165, 1494, 2103, 1495, 1496,
	1497, 2087, 100, 2030, 3324, 1820, 1132, 1550, 3328, 1550,
	1131, 3405, 3520, 1769, 4229, 3327, 3994, 3518, 1769, 4164,
	1494, 3993, 1495, 1496, 85, 2673, 1494, 168, 1495, 1496,
	3960, 3820, 128, 156, 98, 3668, 3665, 3002, 1494, 4266,
	1495, 1496, 3649, 3360, 3514, 1769, 2366, 2628, 2365, 3329,
	3003, 3511, 1769, 175, 3325, 3655, 176, 3461, 3623, 3326,
	4094, 3460, 1893, 2520, 2676, 3362, 3358, 3256, 3032, 1494,
	2517, 1495, 1496, 2512, 1494, 1959, 1495, 1496, 1910, 1911,
	167, 166, 195, 2506, 2504, 2013, 1919, 1915, 1889, 1497,
	126, 3003, 3509, 1769, 1225, 1494, 2535, 1495, 1496, 2403,
	2645, 1494, 1497, 1495, 1496, 3617, 3618, 4289, 1494, 2651,
	1495, 1496, 3656, 3657, 3658, 4287, 1494, 1497, 1495, 1496,
	92, 56, 59, 58, 61, 2659, 75, 4258, 1497, 84,
	81, 2727, 1960, 1961, 1962, 1497, 2080, 4117, 2662, 2663,
	2664, 4034, 3620, 2665, 2131, 3588, 2132, 3587, 3586, 1494,
	1497, 1495, 1496, 3275, 63, 94, 93, 3251, 2629, 73,
	74, 60, 3299, 2667, 2956, 2957, 3622, 82, 83, 1497,
	1731, 2952, 2955, 2956, 2957, 2953, 3294, 2954, 2958, 689,
	1497, 3507, 1769, 3297, 1497, 161, 1912, 164, 3298, 1909,
	1497, 162, 163, 4113, 3505, 1769, 2666, 3293, 2668, 179,
	1497, 3295, 2689, 2081, 3995, 2434, 3296, 2671, 185, 2672,
	1769, 65, 66, 2409, 67, 68, 69, 70, 1497, 1070,
	3503, 1769, 1797, 1497, 3611, 2855, 3238, 3501, 1769, 3237,
	4076, 1497, 3798, 3800, 2637, 2638, 3596, 3599, 1494, 2640,
	1495, 1496, 3499, 1769, 3595, 2674, 3262, 2029, 2641, 1038,
	2986, 1494, 1497, 1495, 1496, 752, 3336, 2887, 2725, 1073,
	2843, 3497, 1769, 1497, 2162, 3007, 1494, 1074, 1495, 1496,
	1071, 2208, 3495, 1769, 2621, 2620, 4001, 1494, 62, 1495,
	1496, 2619, 3493, 1769, 1494, 2160, 1495, 1496, 2209, 1188,
	1054, 2618, 3491, 1769, 3265, 3267, 2617, 2890, 2616, 1494,
	1497, 1495, 1496, 3268, 1497, 3659, 2615, 1187, 2888, 106,
	3489, 1769, 3421, 2944, 2945, 3487, 1769, 3002, 1494, 107,
	1495, 1496, 2461, 3485, 1769, 1054, 2964, 3075, 2891, 1494,
	2893, 1495, 1496, 1494, 1497, 1495, 1496, 170, 1497, 1494,
	1082, 1495, 1496, 1459, 3483, 1769, 2128, 2126, 2127, 1494,
	4281, 1495, 1496, 1060, 1081, 3481, 1769, 3038, 3660, 3661,
	3662, 135, 1060, 2924, 3601, 2943, 4308, 1494, 91, 1495,
	1496, 1725, 1494, 108, 1495, 1496, 1723, 2445, 2446, 1497,
	1494, 1721, 1495, 1496, 1722, 1720, 3255, 1724, 2908, 1737,
	2632, 2878, 3467, 1769, 4199, 3989, 3443, 1769, 2933, 2962,
	3571, 1494, 1497, 1495, 1496, 3335, 1955, 3774, 1497, 3773,
	2960, 2429, 1494, 2907, 1495, 1496, 2903, 1119, 1730, 2906,
	1497, 2898, 1791, 2657, 2989, 2991, 2876, 1769, 2922, 1497,
	2874, 1769, 2086, 165, 3036, 43, 1497, 2085, 2982, 113,
	2936, 2921, 3236, 4058, 2961, 2966, 1497, 2963, 114, 1494,
	3235, 1495, 1496, 1494, 1497, 1495, 1496, 4057, 2970, 1956,
	1957, 1958, 3772, 2973, 3581, 2527, 4037, 106, 3047, 1497,
	2980, 2849, 1769, 108, 3806, 3804, 3803, 107, 97, 2983,
	3785, 3666, 3600, 1494, 3598, 1495, 1496, 1494, 3784, 1495,
	1496, 2994, 2203, 3005, 2826, 1769, 3363, 2204, 3008, 3009,
	2818, 1769, 2556, 1902, 2952, 2955, 2956, 2957, 2953, 3004,
	2954, 2958, 2809, 1769, 3617, 3618, 115, 1080, 1497, 3012,
	2939, 2807, 1769, 4291, 4290, 4290, 3044, 114, 1494, 3966,
	1495, 1496, 3, 3758, 2902, 2266, 1907, 115, 2794, 1769,
	3139, 2715, 158, 3033, 3034, 159, 2792, 1769, 114, 2401,
	113, 1494, 1814, 1495, 1496, 1497, 1806, 1494, 108, 1495,
	1496, 2790, 1769, 3043, 1497, 4291, 3085, 3086, 1497, 1494,
	4082, 1495, 1496, 115, 119, 120, 171, 3634, 1494, 1497,
	1495, 1496, 102, 183, 114, 1494, 113, 1495, 1496, 1,
	4146, 72, 1497, 5, 3064, 1494, 1046, 1495, 1496, 1462,
	3083, 1461, 3102, 1494, 3638, 1495, 1496, 3067, 4218, 705,
	2788, 1769, 2391, 1735, 4259, 2349, 4214, 1497, 1494, 4215,
	1495, 1496, 1999, 1989, 191, 3697, 3120, 3121, 3122, 3123,
	3124, 3125, 3126, 3127, 3128, 3129, 2317, 3990, 3786, 3787,
	1497, 3789, 3366, 2562, 1497, 2381, 3137, 2786, 1769, 3664,
	2525, 3103, 1140, 160, 2483, 1497, 2784, 1769, 2484, 4176,
	2782, 1769, 1770, 2388, 1497, 123, 1106, 1494, 3045, 1495,
	1496, 2780, 1769, 172, 177, 174, 180, 181, 182, 184,
	186, 187, 188, 189, 2778, 1769, 122, 1143, 1255, 190,
	192, 193, 194, 2557, 3688, 1497, 2987, 3084, 2492, 1839,
	1837, 3141, 1838, 2413, 1494, 3197, 1495, 1496, 3073, 2776,
	1769, 3074, 1836, 1494, 1841, 1495, 1496, 1494, 1840, 1495,
	1496, 4141, 3429, 2716, 2352, 3527, 2352, 2091, 1494, 742,
	1495, 1496, 2774, 1769, 3087, 2959, 1731, 3670, 736, 198,
	1497, 1494, 3104, 1495, 1496, 1828, 1497, 2772, 1769, 1807,
	2084, 1182, 695, 3215, 3344, 2595, 3625, 3204, 1497, 701,
	3206, 1547, 2079, 2461, 3234, 2974, 1494, 1100, 1495, 1496,
	1092, 2402, 2892, 1099, 2354, 3967, 2354, 3130, 3283, 3593,
	3023, 3261, 3263, 2260, 2926, 3177, 3266, 2770, 1769, 1494,
	3259, 1495, 1496, 1494, 4075, 1495, 1496, 3797, 4280, 4163,
	2984, 1803, 3547, 3282, 1494, 89, 1495, 1496, 2461, 2461,
	2461, 2461, 2461, 1494, 2688, 1495, 1496, 2198, 3205, 1537,
	3207, 3187, 3188, 3189, 3190, 3191, 2539, 767, 2461, 2460,
	938, 2461, 2768, 1769, 3215, 1789, 1497, 3214, 3287, 2998,
	3242, 3753, 2118, 765, 1494, 1060, 1495, 1496, 3226, 764,
	3564, 2040, 3304, 762, 3232, 1497, 2894, 2940, 1501, 1497,
	1500, 3239, 973, 2343, 2344, 2345, 2346, 2347, 1497, 2882,
	3241, 1815, 2951, 3252, 3253, 3254, 3249, 2949, 2948, 2630,
	2368, 2468, 1497, 2371, 2372, 2463, 1497, 3269, 3270, 1494,
	3383, 1495, 1496, 3619, 3615, 1494, 4210, 1495, 1496, 3240,
	3391, 1058, 1059, 3289, 3290, 3306, 3292, 1494, 3307, 1495,
	1496, 3396, 3286, 109, 3300, 3288, 3395, 2462, 3291, 2389,
	2458, 3308, 3227, 3229, 3231, 110, 2901, 1057, 2766, 1769,
	2463, 2463, 2463, 2463, 2463, 3314, 1497, 3392, 924, 923,
	774, 766, 3345, 756, 3347, 987, 922, 3560, 3346, 921,
	2463, 3526, 3281, 2463, 1497, 3393, 3394, 2916, 1782, 3257,
	2764, 1769, 1497, 2918, 2985, 3245, 1478, 3348, 3349, 1497,
	3364, 2527, 1754, 3385, 2762, 1769, 1757, 2410, 2760, 1769,
	1775, 3426, 3402, 1497, 4100, 1494, 2656, 1495, 1496, 3455,
	1497, 1753, 4107, 3374, 3682, 3355, 3029, 2549, 71, 47,
	4067, 3414, 3417, 3416, 1494, 4138, 1495, 1496, 1494, 916,
	1495, 1496, 3424, 3272, 913, 3755, 1497, 1494, 3756, 1495,
	1496, 3278, 3434, 1497, 3757, 3200, 3278, 3201, 2755, 1769,
	4120, 1494, 4121, 1495, 1496, 1494, 912, 1495, 1496, 4122,
	3450, 3451, 3452, 3453, 3454, 2255, 2751, 1769, 1472, 3431,
	3432, 1469, 3433, 3013, 3522, 3435, 2093, 3437, 101, 3439,
	37, 2749, 1769, 36, 35, 34, 33, 27, 26, 1550,
	25, 24, 23, 1550, 30, 2742, 1769, 20, 22, 21,
	19, 4301, 2740, 1769, 4302, 1494, 4320, 1495, 1496, 3572,
	4202, 3574, 4143, 3377, 4254, 4307, 129, 57, 2675, 54,
	52, 137, 2680, 1494, 3582, 1495, 1496, 3365, 3458, 3425,
	3542, 1494, 136, 1495, 1496, 3457, 55, 3546, 1494, 53,
	1495, 1496, 51, 50, 1228, 2683, 48, 2684, 99, 32,
	31, 18, 1494, 2692, 1495, 1496, 17, 2694, 2695, 1494,
	16, 1495, 1496, 15, 14, 13, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 2709, 2710, 12, 2712, 8, 7,
	3577, 40, 3573, 39, 3575, 1494, 2461, 1495, 1496, 38,
	29, 28, 1494, 41, 1495, 1496, 1497, 4, 3016, 3632,
	2718, 2719, 2720, 2721, 2551, 2723, 2724, 0, 2726, 0,
	3396, 0, 2728, 3597, 3590, 3395, 2733, 2734, 0, 2735,
	1497, 0, 2738, 2739, 2741, 2743, 2744, 2745, 2746, 2747,
	2748, 2750, 2752, 2753, 2754, 2756, 3392, 2758, 2759, 2761,
	2763, 2765, 2767, 2769, 2771, 2773, 2775, 2777, 2779, 2781,
	2783, 2785, 2787, 2789, 2791, 2793, 2795, 2796, 2797, 3579,
	2799, 754, 2801, 3627, 2803, 2804, 3624, 2806, 2808, 2810,
	3633, 3626, 3621, 2813, 3602, 0, 3386, 2817, 3419, 3420,
	0, 2822, 2823, 2824, 2825, 3650, 0, 3652, 3449, 3549,
	1497, 3551, 3552, 3553, 2836, 2837, 2838, 2839, 2840, 2841,
	0, 1497, 2845, 2846, 0, 0, 1497, 3614, 2463, 0,
	2848, 1497, 3447, 3644, 3645, 2854, 0, 0, 0, 0,
	2857, 2858, 2859, 2860, 2861, 1497, 3628, 3629, 0, 1497,
	0, 2868, 2869, 1497, 2870, 0, 0, 2873, 2875, 2413,
	0, 2877, 1497, 3692, 3693, 1494, 1497, 1495, 1496, 0,
	0, 2889, 1497, 0, 0, 0, 0, 0, 0, 0,
	0, 3675, 0, 0, 0, 3679, 3680, 3681, 3694, 1494,
	0, 1495, 1496, 1497, 0, 1079, 0, 0, 1085, 1085,
	3709, 0, 2872, 2923, 0, 0, 0, 1497, 0, 0,
	0, 0, 0, 2871, 0, 0, 0, 1497, 2867, 0,
	0, 0, 0, 2866, 0, 0, 0, 3720, 1497, 0,
	0, 0, 0, 2696, 1497, 0, 0, 2865, 1497, 0,
	0, 2864, 0, 1497, 0, 2863, 0, 1497, 0, 0,
	2711, 1497, 0, 0, 2862, 1497, 0, 0, 2853, 1494,
	1497, 1495, 1496, 0, 2852, 0, 0, 0, 1497, 0,
	1494, 3771, 1495, 1496, 3778, 1494, 3780, 1495, 1496, 0,
	1494, 0, 1495, 1496, 3761, 2851, 3762, 3763, 3764, 0,
	0, 0, 3751, 0, 1494, 0, 1495, 1496, 1494, 2850,
	1495, 1496, 1494, 3781, 1495, 1496, 0, 3282, 0, 2847,
	89, 1494, 3282, 1495, 1496, 1494, 0, 1495, 1496, 0,
	2842, 1494, 0, 1495, 1496, 0, 2835, 0, 2162, 0,
	2834, 0, 0, 0, 0, 2833, 0, 0, 1497, 2832,
	0, 3782, 1494, 2831, 1495, 1496, 1497, 2830, 0, 2160,
	1060, 1497, 2829, 0, 3802, 3801, 1494, 3812, 1495, 1496,
	2828, 3822, 3814, 3809, 0, 3811, 1494, 1497, 1495, 1496,
	3714, 0, 0, 0, 0, 3973, 0, 1494, 0, 1495,
	1496, 0, 0, 1494, 0, 1495, 1496, 1494, 0, 1495,
	1496, 3826, 1494, 0, 1495, 1496, 1494, 0, 1495, 1496,
	1494, 0, 1495, 1496, 1494, 0, 1495, 1496, 0, 1494,
	0, 1495, 1496, 0, 0, 0, 0, 1494, 0, 1495,
	1496, 0, 3965, 3964, 0, 0, 3671, 3672, 0, 0,
	2827, 3980, 43, 3992, 0, 0, 0, 0, 2821, 0,
	3984, 3985, 0, 2820, 0, 0, 0, 4032, 0, 0,
	0, 4031, 0, 2162, 0, 0, 3281, 2389, 3816, 2819,
	0, 3281, 0, 0, 3779, 0, 3823, 3824, 3115, 3116,
	3117, 3118, 3119, 0, 2160, 0, 0, 0, 0, 0,
	0, 3975, 3976, 3977, 0, 0, 4035, 1494, 3134, 1495,
	1496, 0, 0, 0, 0, 1494, 0, 1495, 1496, 0,
	1494, 0, 1495, 1496, 0, 0, 0, 4038, 0, 0,
	0, 4041, 0, 4083, 3282, 0, 1494, 0, 1495, 1496,
	3818, 0, 0, 3278, 3972, 0, 0, 0, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1688, 1689, 1690, 1691, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 4036,
	4084, 4055, 4065, 3281, 4064, 0, 1497, 0, 4061, 0,
	4063, 1497, 4101, 0, 0, 0, 0, 1497, 0, 0,
	0, 0, 0, 0, 1497, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 3105, 0,
	0, 0, 0, 0, 0, 0, 3284, 1767, 0, 0,
	1760, 1497, 0, 0, 0, 4103, 0, 4106, 0, 4091,
	1060, 0, 3968, 4087, 3302, 0, 0, 1759, 0, 4086,
	0, 0, 4108, 0, 0, 2407, 2408, 1766, 1764, 1765,
	1761, 1767, 1762, 0, 1760, 0, 0, 0, 2816, 0,
	0, 0, 0, 2815, 0, 0, 0, 0, 0, 2814,
	0, 0, 0, 89, 0, 1763, 2812, 4145, 0, 1755,
	1756, 1766, 1764, 1765, 1761, 0, 1762, 0, 0, 4126,
	0, 4160, 4127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4136, 4150, 0, 0, 1763,
	0, 4144, 43, 2805, 4154, 1494, 0, 1495, 1496, 0,
	1494, 4099, 1495, 1496, 0, 0, 1494, 4165, 1495, 1496,
	0, 0, 0, 1494, 4189, 1495, 1496, 1498, 4175, 4174,
	3179, 4168, 3181, 0, 0, 0, 3992, 4178, 89, 4173,
	4170, 0, 3423, 4169, 4167, 4172, 4171, 0, 3192, 3193,
	3194, 3195, 0, 0, 0, 4197, 0, 4151, 1556, 0,
	1494, 0, 1495, 1496, 3440, 3441, 0, 3442, 3444, 3446,
	0, 0, 0, 0, 4088, 4217, 4209, 0, 0, 4222,
	0, 0, 0, 0, 0, 43, 0, 0, 4189, 0,
	4245, 4232, 4234, 0, 89, 3459, 0, 0, 4247, 0,
	3462, 0, 3464, 3465, 3466, 3468, 3469, 3470, 3471, 3472,
	3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3482, 3484,
	3486, 3488, 3490, 3492, 3494, 3496, 3498, 3500, 3502, 3504,
	3506, 3508, 3510, 3512, 3513, 3515, 3516, 3517, 3519, 89,
	2040, 3521, 4268, 3523, 3524, 3525, 4278, 2162, 3529, 3530,
	3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 4286,
	43, 4284, 4288, 4279, 4282, 4272, 4269, 3545, 2160, 4244,
	89, 3550, 4305, 4189, 4247, 3554, 3555, 4295, 3556, 3558,
	4285, 3561, 3563, 3396, 3565, 3566, 3567, 3568, 3395, 4309,
	4249, 4315, 3278, 4317, 3576, 4253, 4161, 4156, 0, 4322,
	0, 0, 1497, 0, 0, 0, 1497, 0, 0, 3392,
	1497, 0, 89, 0, 4093, 1497, 43, 0, 2162, 1497,
	0, 89, 89, 1497, 0, 4247, 89, 0, 4032, 4337,
	4247, 4336, 4338, 1497, 0, 0, 4330, 0, 0, 2160,
	0, 0, 0, 4306, 3608, 3609, 4335, 4111, 3613, 4252,
	1497, 4333, 0, 0, 0, 1497, 0, 0, 1857, 0,
	0, 43, 0, 0, 0, 0, 0, 0, 1497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4240, 0, 0, 0, 0, 0, 1497, 0, 0,
	0, 1497, 43, 0, 2802, 0, 0, 0, 2800, 0,
	0, 0, 2798, 0, 0, 0, 0, 2757, 0, 0,
	0, 2737, 0, 0, 0, 2736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2732, 0, 0, 0, 0,
	0, 0, 0, 0, 43, 0, 0, 4155, 0, 0,
	0, 0, 2730, 43, 43, 0, 0, 2722, 43, 3686,
	0, 1494, 1805, 1495, 1496, 1494, 0, 1495, 1496, 1494,
	2693, 1495, 1496, 0, 1494, 0, 1495, 1496, 1494, 0,
	1495, 1496, 1494, 0, 1495, 1496, 0, 0, 0, 2687,
	0, 0, 1494, 2682, 1495, 1496, 0, 0, 3704, 0,
	1894, 3708, 0, 0, 0, 0, 0, 0, 0, 1494,
	0, 1495, 1496, 4207, 1494, 0, 1495, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 1494, 0, 1495,
	1496, 1036, 0, 0, 0, 3721, 974, 1037, 988, 989,
	990, 975, 0, 0, 976, 977, 1494, 978, 1495, 1496,
	1494, 0, 1495, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 991, 992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4267, 0, 0, 0, 0, 0, 3744,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	0, 1858, 3752, 0, 0, 0, 0, 0, 0, 3759,
	0, 0, 0, 0, 2045, 0, 0, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 4190,
	0, 0, 0, 0, 0, 0, 0, 1871, 1874, 1875,
	1876, 1877, 1878, 1879, 0, 1880, 1881, 1883, 1884, 1882,
	1885, 1886, 1859, 1860, 1861, 1862, 1842, 1843, 1872, 0,
	1845, 0, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 3399, 0, 1855, 1863, 1864, 1865, 1866, 0, 1867,
	1868, 1869, 1870, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3981, 0, 0, 0, 0, 0,
	0, 0, 0, 3988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3998, 3999, 4000, 0, 4002, 0, 4003, 4004,
	0, 0, 3400, 3401, 4007, 4008, 4009, 4010, 4011, 4012,
	4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022,
	4023, 4024, 4025, 4026, 4027, 4028, 0, 4030, 4033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4042, 4043, 4044, 4045, 4046, 4048, 4049,
	4051, 4053, 4054, 4056, 0, 0, 0, 4060, 3742, 0,
	0, 4062, 0, 0, 0, 0, 0, 0, 4072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2113, 2114, 2115, 2116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2129, 0, 0, 0, 0, 0, 4092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2168, 2169, 0, 0,
	1873, 0, 2192, 0, 0, 2196, 2197, 0, 0, 0,
	2202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 0, 2225, 0, 0, 0,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2256, 0,
	2261, 0, 2263, 2264, 2265, 0, 2267, 2268, 2269, 0,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 0,
	0, 0, 0, 0, 2348, 0, 2350, 0, 2357, 2358,
	2359, 2360, 2361, 2362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 0, 2382, 2383, 2384, 2385,
	2386, 0, 0, 4116, 0, 0, 0, 0, 0, 0,
	0, 4071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4188, 0, 0, 0, 0, 4131, 0, 0,
	0, 0, 0, 4134, 0, 4135, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4187, 4159, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 0,
	0, 0, 0, 2441, 2442, 0, 4183, 4184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4191, 4193, 4195, 0, 0, 0, 0, 0, 0, 2480,
	0, 0, 729, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4208, 0, 0,
	0, 0, 0, 0, 201, 0, 0, 201, 4230, 0,
	0, 740, 0, 0, 0, 0, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 724, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2523, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 4250, 3847, 3849, 3848, 3914, 3915, 3916, 3917,
	3918, 3919, 3920, 3850, 3851, 816, 0, 0, 0, 1731,
	0, 746, 201, 746, 709, 746, 0, 0, 0, 0,
	0, 0, 0, 4273, 4275, 4277, 0, 1738, 707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4300, 0, 0, 0, 0, 4115, 0, 0, 704, 0,
	0, 0, 0, 4125, 0, 0, 0, 719, 0, 0,
	4318, 4319, 0, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 4332, 727, 1041, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 694, 0, 696, 710, 0,
	732, 0, 731, 700, 0, 698, 702, 711, 703, 0,
	697, 0, 708, 0, 0, 699, 712, 713, 716, 720,
	721, 722, 718, 715, 0, 706, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3863, 3864, 0, 0, 3939, 3938,
	3937, 0, 0, 3935, 3936, 3934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2697, 2698, 2699, 2700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3940,
	939, 0, 792, 793, 3941, 3942, 943, 3943, 795, 796,
	940, 941, 0, 790, 794, 942, 944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3844, 3845, 3846, 3852, 3853, 3854, 3865, 3912,
	3913, 3921, 3923, 895, 3922, 3924, 3925, 3926, 3929, 3930,
	3931, 3932, 3927, 3928, 3933, 3827, 3831, 3828, 3829, 3830,
	3842, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840,
	3841, 3843, 3944, 3945, 3946, 3947, 3948, 3949, 3858, 3862,
	3861, 3859, 3860, 3856, 3857, 3884, 3883, 3885, 3886, 3887,
	3888, 3889, 3890, 3892, 3891, 3893, 3894, 3895, 3896, 3897,
	3898, 3866, 3867, 3870, 3871, 3869, 3868, 3872, 3881, 3882,
	3873, 3874, 3875, 3876, 3877, 3878, 3880, 3879, 3899, 3900,
	3901, 3902, 3903, 3905, 3904, 3908, 3909, 3907, 3906, 3911,
	3910, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 945, 0, 946, 734, 0, 950,
	0, 0, 0, 952, 951, 0, 953, 915, 914, 0,
	0, 947, 948, 0, 949, 0, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1036, 0,
	0, 201, 0, 201, 1037, 3950, 3951, 3952, 3953, 3954,
	3955, 3956, 3957, 0, 2161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 746, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 0, 0, 0, 0,
	0, 0, 1229, 0, 1236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1468, 3106, 3107, 3108,
	0, 0, 3110, 0, 0, 3112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3131, 3132, 3133, 0, 0,
	0, 0, 0, 0, 3138, 0, 0, 0, 0, 3140,
	0, 0, 3142, 3143, 3144, 0, 0, 0, 3145, 3146,
	0, 0, 3147, 0, 3148, 0, 0, 0, 0, 0,
	0, 3149, 0, 3150, 968, 0, 0, 3151, 0, 3152,
	0, 0, 3153, 0, 3154, 0, 3155, 0, 3156, 0,
	3157, 0, 3158, 0, 3159, 0, 3160, 0, 3161, 0,
	3162, 0, 3163, 0, 3164, 0, 3165, 0, 3166, 0,
	3167, 0, 3168, 0, 3169, 0, 3170, 0, 0, 0,
	3171, 0, 3172, 0, 3173, 0, 0, 3174, 0, 3175,
	0, 3176, 0, 2320, 3178, 0, 0, 3180, 723, 0,
	3182, 3183, 3184, 3185, 745, 0, 0, 0, 3186, 2320,
	2320, 2320, 2320, 2320, 0, 0, 201, 0, 0, 0,
	746, 746, 0, 0, 3196, 0, 0, 0, 0, 0,
	0, 0, 3209, 0, 0, 3213, 0, 0, 0, 0,
	201, 0, 0, 0, 3216, 3217, 3218, 3219, 3220, 3221,
	0, 0, 0, 3222, 3223, 0, 3224, 0, 3225, 745,
	0, 745, 746, 745, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 0,
	0, 0, 1085, 0, 201, 0, 0, 0, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 746, 0, 0, 0, 0,
	0, 3273, 0, 746, 0, 0, 1542, 746, 0, 0,
	746, 746, 746, 746, 0, 746, 0, 746, 746, 0,
	746, 746, 746, 746, 746, 746, 3303, 0, 0, 0,
	0, 0, 0, 1542, 746, 746, 1542, 746, 1542, 201,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 3361, 0, 0, 0, 1817, 0, 746, 0,
	0, 746, 0, 0, 201, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 201, 0, 0, 1897, 196, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 1906, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 746, 0, 135, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3448, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 3463, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 175, 2014, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 1910,
	1911, 167, 166, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 1912, 164, 0,
	1909, 0, 162, 163, 0, 0, 0, 0, 0, 0,
	179, 0, 1871, 1874, 1875, 1876, 1877, 1878, 1879, 185,
	1880, 1881, 1883, 1884, 1882, 1885, 1886, 1859, 1860, 1861,
	1862, 1842, 1843, 1872, 0, 1845, 746, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1542, 0, 1855, 1863,
	1864, 1865, 1866, 0, 1867, 1868, 1869, 1870, 0, 0,
	1856, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	3667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 3710, 0, 3711, 0, 3712,
	0, 3713, 0, 0, 0, 0, 0, 0, 0, 3716,
	3717, 0, 0, 0, 0, 0, 0, 0, 0, 3722,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 1453,
	745, 745, 0, 3723, 0, 3724, 0, 3725, 0, 3726,
	2367, 3727, 0, 3728, 0, 3729, 0, 3730, 0, 3731,
	0, 3732, 745, 3733, 0, 3734, 0, 3735, 0, 3736,
	0, 3737, 0, 3738, 0, 0, 3739, 0, 0, 0,
	3740, 0, 3741, 0, 0, 0, 0, 0, 3743, 0,
	0, 1541, 0, 0, 165, 201, 0, 0, 0, 0,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3760, 0, 0, 0, 0, 1873, 0, 0, 0, 3765,
	0, 3766, 3767, 0, 3768, 0, 3769, 0, 0, 0,
	0, 3770, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 3810, 746, 0, 0,
	2367, 201, 0, 201, 0, 201, 201, 0, 0, 3819,
	0, 0, 3821, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 3825, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 159, 0, 0, 0,
	0, 3961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 746, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 0, 0, 746, 746, 0, 0,
	746, 0, 746, 0, 0, 191, 0, 0, 746, 0,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2447, 0, 0, 0, 0, 0,
	0, 0, 2451, 0, 2454, 0, 0, 2106, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 746, 0,
	0, 0, 746, 746, 172, 177, 174, 180, 181, 182,
	184, 186, 187, 188, 189, 0, 4070, 0, 0, 0,
	190, 192, 193, 194, 0, 0, 0, 0, 745, 745,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 201, 0,
	0, 201, 0, 201, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 745, 1110, 0, 1117, 0,
	1121, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 746, 0,
	0, 745, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 745, 196, 0, 1541, 745, 0, 0, 745, 745,
	745, 745, 0, 745, 0, 745, 745, 0, 745, 745,
	745, 745, 745, 745, 0, 135, 0, 157, 0, 0,
	0, 1541, 745, 745, 1541, 745, 1541, 0, 745, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 0, 0, 0, 2605, 0, 0,
	0, 0, 1542, 0, 2367, 0, 0, 0, 2626, 2627,
	745, 0, 2631, 0, 0, 168, 0, 0, 0, 0,
	0, 156, 0, 0, 2636, 0, 745, 0, 0, 745,
	1036, 2639, 0, 2356, 0, 0, 1037, 88, 45, 46,
	90, 175, 0, 4114, 176, 0, 2161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 2642, 0, 0,
	49, 78, 79, 0, 76, 80, 144, 145, 167, 166,
	195, 0, 0, 0, 745, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 100, 4128,
	0, 0, 4129, 0, 4130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 0, 0, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 0, 0,
	85, 0, 0, 161, 142, 164, 149, 141, 0, 162,
	163, 0, 0, 0, 0, 0, 0, 179, 0, 4304,
	4206, 0, 0, 0, 0, 0, 185, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 4228, 0, 0, 0,
	0, 153, 151, 146, 147, 148, 152, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 201, 0, 0,
	0, 0, 154, 0, 4241, 201, 4242, 0, 4243, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 745, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 746,
	746, 201, 0, 745, 0, 0, 92, 56, 59, 58,
	61, 0, 75, 0, 746, 84, 81, 0, 4149, 0,
	0, 0, 0, 0, 0, 4148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	63, 94, 93, 201, 0, 73, 74, 60, 0, 0,
	0, 0, 0, 82, 83, 0, 4298, 0, 4299, 0,
	0, 0, 0, 0, 745, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 0, 0, 0,
	0, 0, 0, 2170, 0, 0, 4323, 4324, 0, 0,
	0, 0, 1541, 0, 0, 0, 0, 4147, 66, 0,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	746, 0, 0, 0, 746, 746, 0, 0, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 62, 1542, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 201, 201, 201,
	201, 201, 0, 0, 2965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	201, 0, 0, 0, 0, 1294, 0, 1294, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 91, 0, 746, 0, 0, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 159, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 746, 0, 0, 0,
	0, 183, 745, 0, 0, 0, 0, 3052, 3053, 3054,
	3055, 3056, 3057, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 2106, 3068, 745, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 745, 0,
	0, 3076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 177, 174, 180, 181, 182, 184, 186, 187,
	188, 189, 0, 0, 0, 0, 0, 190, 192, 193,
	194, 746, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 745, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 745, 745, 0, 0, 745, 0,
	745, 0, 0, 0, 746, 0, 745, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 72, 0, 201,
	201, 201, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 745, 0, 0, 0,
	745, 745, 0, 0, 746, 0, 0, 0, 1542, 0,
	0, 746, 746, 1542, 201, 201, 201, 201, 201, 0,
	199, 0, 0, 688, 0, 0, 201, 0, 1857, 0,
	0, 0, 201, 0, 201, 0, 0, 201, 201, 201,
	0, 0, 0, 688, 0, 1741, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1086,
	1086, 0, 0, 0, 0, 0, 0, 1811, 688, 0,
	0, 746, 0, 0, 1542, 0, 0, 0, 0, 746,
	0, 0, 1829, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 3244, 1888, 3248, 0, 745, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 201, 0, 1110, 0,
	1918, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	0, 0, 1929, 0, 0, 1932, 1933, 1935, 1935, 0,
	1935, 0, 1935, 1935, 0, 1944, 1935, 1935, 1935, 1935,
	1935, 0, 0, 0, 0, 88, 45, 46, 90, 1964,
	1965, 0, 1110, 0, 0, 1970, 1844, 0, 0, 0,
	1541, 0, 745, 0, 95, 0, 0, 0, 49, 78,
	79, 0, 76, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	0, 0, 0, 2033, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 3389, 64, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 98, 3403,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 3415, 0, 0, 3418, 0, 0,
	0, 1294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 1874, 1875,
	1876, 1877, 1878, 1879, 0, 1880, 1881, 1883, 1884, 1882,
	1885, 1886, 1859, 1860, 1861, 1862, 1842, 1843, 1872, 0,
	1845, 0, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 0, 201, 1855, 1863, 1864, 1865, 1866, 0, 1867,
	1868, 1869, 1870, 0, 0, 1856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 92, 56, 59, 58, 61, 0,
	75, 0, 0, 84, 81, 0, 4149, 0, 0, 0,
	0, 0, 0, 4148, 0, 0, 0, 0, 0, 746,
	746, 0, 0, 0, 745, 0, 0, 0, 63, 94,
	93, 0, 3578, 73, 74, 60, 745, 745, 745, 0,
	0, 82, 83, 0, 0, 1294, 1294, 0, 3584, 3585,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	2094, 0, 746, 746, 746, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4147, 66, 0, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 2978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 62, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 745, 0,
	1873, 0, 745, 745, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 746, 0, 201, 0, 0, 0, 688, 0, 688,
	201, 0, 91, 201, 201, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 201, 0, 0, 746, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 1543,
	0, 0, 0, 0, 0, 2404, 0, 0, 201, 0,
	0, 746, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 97, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3793, 0, 0, 3794, 3795, 3796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1110, 0, 0, 746, 0,
	0, 0, 0, 0, 0, 746, 0, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 72, 0, 0, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 746, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 2542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 1110, 0, 0, 0, 0,
	0, 1117, 1927, 0, 0, 1927, 0, 1927, 0, 0,
	0, 0, 0, 2571, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 1541, 0, 1110, 745,
	745, 1541, 0, 2156, 0, 0, 0, 2156, 2156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1065, 746, 0, 0,
	0, 0, 3351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 745,
	0, 688, 1541, 0, 0, 0, 0, 745, 0, 0,
	746, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3422, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 1543,
	0, 0, 1543, 0, 1543, 688, 0, 0, 0, 1542,
	746, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1986, 0, 0, 0, 1294,
	0, 0, 0, 0, 0, 0, 746, 2367, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2039, 688, 4112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 688, 0, 0,
	0, 0, 745, 0, 688, 0, 201, 746, 0, 0,
	0, 0, 0, 2065, 2066, 688, 688, 688, 688, 688,
	688, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 98, 3637, 0,
	1036, 0, 0, 0, 0, 974, 1037, 988, 989, 990,
	975, 0, 0, 976, 977, 0, 978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 983, 0, 991, 992, 0, 745, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2911, 2912, 2913, 0, 0, 0, 0,
	745, 745, 745, 745, 3397, 3398, 0, 0, 0, 2928,
	0, 0, 688, 0, 0, 0, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3399, 0, 0, 0, 0, 0, 0, 3010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 0, 0, 3030, 0, 0, 0, 1927,
	1927, 0, 0, 0, 3035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3046, 0, 0, 0, 0, 0, 745, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3400, 3401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 0,
	0, 0, 0, 0, 0, 745, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 939, 0, 0, 0,
	0, 1986, 943, 0, 0, 0, 940, 941, 0, 745,
	0, 942, 944, 0, 0, 0, 0, 1086, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 0, 0, 2039, 688, 0, 688,
	0, 688, 2470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 745, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 3198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	0, 0, 0, 0, 0, 0, 3285, 1935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 0,
	0, 0, 688, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 688, 688, 0, 0, 688, 0, 2633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 0, 0, 688, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 0, 0, 0, 1121, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 0, 0, 0, 0, 2644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 745, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1543, 0,
	2039, 0, 0, 0, 745, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 1121, 1121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2914, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3698, 3699, 3700,
	3701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 688, 688, 688, 688, 688, 0, 0,
	0, 0, 0, 0, 3776, 0, 3776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 688, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3815, 0, 3817, 0, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3776, 0, 0, 0, 0, 0, 0,
	3776, 0, 3776, 0, 0, 0, 0, 0, 0, 0,
	0, 4074, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 688, 3243, 688, 0, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 1543,
	688, 688, 688, 688, 688, 0, 0, 0, 0, 0,
	0, 0, 3301, 0, 0, 0, 0, 0, 1986, 0,
	688, 0, 0, 688, 3309, 2039, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 0, 0, 1121, 0, 0, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1121, 0, 4157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1294, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	4140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1121, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1888, 0, 0,
	0, 0, 0, 4212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 688,
	688, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1543, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 1436, 1420, 538, 0, 1361, 1439,
	1327, 1347, 1449, 1350, 1353, 1398, 1304, 1376, 424, 1344,
	1331, 1299, 1339, 1300, 1329, 1363, 277, 1326, 1422, 1380,
	1438, 373, 274, 1306, 1297, 210, 515, 1332, 439, 1349,
	209, 1401, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 1445, 377, 1386, 0,
	507, 409, 0, 0, 2039, 1426, 1425, 1354, 1365, 1428,
	1374, 1413, 1359, 1400, 1314, 1385, 1440, 1345, 1395, 1441,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 4179, 517, 970, 0, 0, 0, 0, 4180, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 1341, 1392, 620, 1435, 1342, 1394, 272, 328,
	279, 271, 591, 1446, 1427, 1303, 1373, 1434, 1368, 607,
	0, 0, 235, 1437, 1367, 0, 1397, 0, 1452, 1298,
	1388, 0, 1301, 1305, 1448, 1432, 1335, 1336, 282, 0,
	0, 0, 0, 0, 0, 0, 1364, 1375, 1410, 1414,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 1384, 0, 0, 0, 1310, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 1313, 0, 1334, 1411, 0, 1296,
	304, 1307, 410, 264, 0, 463, 1325, 1418, 1431, 1358,
	640, 1433, 1356, 1355, 1405, 1311, 1424, 1348, 372, 1309,
	337, 203, 231, 0, 1346, 420, 471, 483, 1423, 1330,
	1340, 260, 1338, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 1383, 1403, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 1308,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 1324, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	1419, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 1408,
	1451, 433, 482, 246, 617, 506, 205, 1318, 1323, 1316,
	0, 261, 262, 1389, 585, 1319, 1317, 1378, 1379, 1320,
	1442, 1443, 1444, 1429, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 1412, 1312, 0, 1321, 1322, 406, 1421, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 1382, 202,
	227, 375, 1447, 464, 295, 661, 629, 494, 624, 212,
	229, 1315, 269, 1328, 1337, 0, 1343, 1351, 1352, 1366,
	1369, 1370, 1371, 1372, 1390, 1391, 1393, 1402, 1404, 1407,
	1409, 1416, 1430, 1450, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	1399, 1360, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 1381, 1387,
	388, 288, 312, 327, 1396, 628, 512, 233, 476, 297,
	257, 1415, 1417, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 1377, 1406, 383,
	586, 587, 323, 404, 0, 0, 0, 0, 0, 0,
	1436, 1420, 538, 0, 1361, 1439, 1327, 1347, 1449, 1350,
	1353, 1398, 1304, 1376, 424, 1344, 1331, 1299, 1339, 1300,
	1329, 1363, 277, 1326, 1422, 1380, 1438, 373, 274, 1306,
	1297, 210, 515, 1332, 439, 1349, 209, 1401, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 1445, 377, 1386, 0, 507, 409, 0, 0,
	0, 1426, 1425, 1354, 1365, 1428, 1374, 1413, 1359, 1400,
	1314, 1385, 1440, 1345, 1395, 1441, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 1341, 1392,
	620, 1435, 1342, 1394, 272, 328, 279, 271, 591, 1446,
	1427, 1303, 1373, 1434, 1368, 607, 0, 0, 235, 1437,
	1367, 0, 1397, 0, 1452, 1298, 1388, 0, 1301, 1305,
	1448, 1432, 1335, 1336, 282, 0, 0, 0, 0, 0,
	0, 0, 1364, 1375, 1410, 1414, 1357, 0, 0, 0,
	0, 0, 0, 3310, 0, 1333, 0, 1384, 0, 0,
	0, 1310, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	1313, 0, 1334, 1411, 0, 1296, 304, 1307, 410, 264,
	0, 463, 1325, 1418, 1431, 1358, 640, 1433, 1356, 1355,
	1405, 1311, 1424, 1348, 372, 1309, 337, 203, 231, 0,
	1346, 420, 471, 483, 1423, 1330, 1340, 260, 1338, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 1383,
	1403, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 1308, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 1324, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 1419, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 1408, 1451, 433, 482, 246,
	617, 506, 205, 1318, 1323, 1316, 0, 261, 262, 1389,
	585, 1319, 1317, 1378, 1379, 1320, 1442, 1443, 1444, 1429,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 1412, 1312,
	0, 1321, 1322, 406, 1421, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 1382, 202, 227, 375, 1447, 464,
	295, 661, 629, 494, 624, 212, 229, 1315, 269, 1328,
	1337, 0, 1343, 1351, 1352, 1366, 1369, 1370, 1371, 1372,
	1390, 1391, 1393, 1402, 1404, 1407, 1409, 1416, 1430, 1450,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 1399, 1360, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 1381, 1387, 388, 288, 312, 327,
	1396, 628, 512, 233, 476, 297, 257, 1415, 1417, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 1377, 1406, 383, 586, 587, 323, 404,
	0, 0, 0, 0, 0, 0, 1436, 1420, 538, 0,
	1361, 1439, 1327, 1347, 1449, 1350, 1353, 1398, 1304, 1376,
	424, 1344, 1331, 1299, 1339, 1300, 1329, 1363, 277, 1326,
	1422, 1380, 1438, 373, 274, 1306, 1297, 210, 515, 1332,
	439, 1349, 209, 1401, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 1445, 377,
	1386, 0, 507, 409, 0, 0, 0, 1426, 1425, 1354,
	1365, 1428, 1374, 1413, 1359, 1400, 1314, 1385, 1440, 1345,
	1395, 1441, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 1341, 1392, 620, 1435, 1342, 1394,
	272, 328, 279, 271, 591, 1446, 1427, 1303, 1373, 1434,
	1368, 607, 0, 0, 235, 1437, 1367, 0, 1397, 0,
	1452, 1298, 1388, 0, 1301, 1305, 1448, 1432, 1335, 1336,
	282, 0, 0, 0, 0, 0, 0, 0, 1364, 1375,
	1410, 1414, 1357, 0, 0, 0, 0, 0, 0, 3271,
	0, 1333, 0, 1384, 0, 0, 0, 1310, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 0, 0, 1313, 0, 1334, 1411,
	0, 1296, 304, 1307, 410, 264, 0, 463, 1325, 1418,
	1431, 1358, 640, 1433, 1356, 1355, 1405, 1311, 1424, 1348,
	372, 1309, 337, 203, 231, 0, 1346, 420, 471, 483,
	1423, 1330, 1340, 260, 1338, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 1383, 1403, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 1308, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 1324,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 1419, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 1408, 1451, 433, 482, 246, 617, 506, 205, 1318,
	1323, 1316, 0, 261, 262, 1389, 585, 1319, 1317, 1378,
	1379, 1320, 1442, 1443, 1444, 1429, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 1412, 1312, 0, 1321, 1322, 406,
	1421, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	1382, 202, 227, 375, 1447, 464, 295, 661, 629, 494,
	624, 212, 229, 1315, 269, 1328, 1337, 0, 1343, 1351,
	1352, 1366, 1369, 1370, 1371, 1372, 1390, 1391, 1393, 1402,
	1404, 1407, 1409, 1416, 1430, 1450, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 1399, 1360, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	1381, 1387, 388, 288, 312, 327, 1396, 628, 512, 233,
	476, 297, 257, 1415, 1417, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 1377,
	1406, 383, 586, 587, 323, 404, 0, 0, 0, 0,
	0, 0, 1436, 1420, 538, 0, 1361, 1439, 1327, 1347,
	1449, 1350, 1353, 1398, 1304, 1376, 424, 1344, 1331, 1299,
	1339, 1300, 1329, 1363, 277, 1326, 1422, 1380, 1438, 373,
	274, 1306, 1297, 210, 515, 1332, 439, 1349, 209, 1401,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 1445, 377, 1386, 0, 507, 409,
	0, 0, 0, 1426, 1425, 1354, 1365, 1428, 1374, 1413,
	1359, 1400, 1314, 1385, 1440, 1345, 1395, 1441, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	1341, 1392, 620, 1435, 1342, 1394, 272, 328, 279, 271,
	591, 1446, 1427, 1303, 1373, 1434, 1368, 607, 0, 0,
	235, 1437, 1367, 0, 1397, 0, 1452, 1298, 1388, 0,
	1301, 1305, 1448, 1432, 1335, 1336, 282, 0, 0, 0,
	0, 0, 0, 0, 1364, 1375, 1410, 1414, 1357, 0,
	0, 0, 0, 0, 0, 2449, 0, 1333, 0, 1384,
	0, 0, 0, 1310, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 1313, 0, 1334, 1411, 0, 1296, 304, 1307,
	410, 264, 0, 463, 1325, 1418, 1431, 1358, 640, 1433,
	1356, 1355, 1405, 1311, 1424, 1348, 372, 1309, 337, 203,
	231, 0, 1346, 420, 471, 483, 1423, 1330, 1340, 260,
	1338, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 1383, 1403, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 1308, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 1324, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 1419, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 1408, 1451, 433,
	482, 246, 617, 506, 205, 1318, 1323, 1316, 0, 261,
	262, 1389, 585, 1319, 1317, 1378, 1379, 1320, 1442, 1443,
	1444, 1429, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	1412, 1312, 0, 1321, 1322, 406, 1421, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 1382, 202, 227, 375,
	1447, 464, 295, 661, 629, 494, 624, 212, 229, 1315,
	269, 1328, 1337, 0, 1343, 1351, 1352, 1366, 1369, 1370,
	1371, 1372, 1390, 1391, 1393, 1402, 1404, 1407, 1409, 1416,
	1430, 1450, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 1399, 1360,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 1381, 1387, 388, 288,
	312, 327, 1396, 628, 512, 233, 476, 297, 257, 1415,
	1417, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 1377, 1406, 383, 586, 587,
	323, 404, 0, 0, 0, 0, 0, 0, 1436, 1420,
	538, 0, 1361, 1439, 1327, 1347, 1449, 1350, 1353, 1398,
	1304, 1376, 424, 1344, 1331, 1299, 1339, 1300, 1329, 1363,
	277, 1326, 1422, 1380, 1438, 373, 274, 1306, 1297, 210,
	515, 1332, 439, 1349, 209, 1401, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	1445, 377, 1386, 0, 507, 409, 0, 0, 0, 1426,
	1425, 1354, 1365, 1428, 1374, 1413, 1359, 1400, 1314, 1385,
	1440, 1345, 1395, 1441, 330, 254, 332, 208, 421, 508,
	293, 0, 98, 0, 0, 0, 517, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 1341, 1392, 620, 1435,
	1342, 1394, 272, 328, 279, 271, 591, 1446, 1427, 1303,
	1373, 1434, 1368, 607, 0, 0, 235, 1437, 1367, 0,
	1397, 0, 1452, 1298, 1388, 0, 1301, 1305, 1448, 1432,
	1335, 1336, 282, 0, 0, 0, 0, 0, 0, 0,
	1364, 1375, 1410, 1414, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 1384, 0, 0, 0, 1310,
	1302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 1313, 0,
	1334, 1411, 0, 1296, 304, 1307, 410, 264, 0, 463,
	1325, 1418, 1431, 1358, 640, 1433, 1356, 1355, 1405, 1311,
	1424, 1348, 372, 1309, 337, 203, 231, 0, 1346, 420,
	471, 483, 1423, 1330, 1340, 260, 1338, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 1383, 1403, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 1308, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 1324, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 1419, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 1408, 1451, 433, 482, 246, 617, 506,
	205, 1318, 1323, 1316, 0, 261, 262, 1389, 585, 1319,
	1317, 1378, 1379, 1320, 1442, 1443, 1444, 1429, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 1412, 1312, 0, 1321,
	1322, 406, 1421, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 1382, 202, 227, 375, 1447, 464, 295, 661,
	629, 494, 624, 212, 229, 1315, 269, 1328, 1337, 0,
	1343, 1351, 1352, 1366, 1369, 1370, 1371, 1372, 1390, 1391,
	1393, 1402, 1404, 1407, 1409, 1416, 1430, 1450, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 1399, 1360, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 1381, 1387, 388, 288, 312, 327, 1396, 628,
	512, 233, 476, 297, 257, 1415, 1417, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 1377, 1406, 383, 586, 587, 323, 404, 0, 0,
	0, 0, 0, 0, 1436, 1420, 538, 0, 1361, 1439,
	1327, 1347, 1449, 1350, 1353, 1398, 1304, 1376, 424, 1344,
	1331, 1299, 1339, 1300, 1329, 1363, 277, 1326, 1422, 1380,
	1438, 373, 274, 1306, 1297, 210, 515, 1332, 439, 1349,
	209, 1401, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 1445, 377, 1386, 0,
	507, 409, 0, 0, 0, 1426, 1425, 1354, 1365, 1428,
	1374, 1413, 1359, 1400, 1314, 1385, 1440, 1345, 1395, 1441,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 1341, 1392, 620, 1435, 1342, 1394, 272, 328,
	279, 271, 591, 1446, 1427, 1303, 1373, 1434, 1368, 607,
	0, 0, 235, 1437, 1367, 0, 1397, 0, 1452, 1298,
	1388, 0, 1301, 1305, 1448, 1432, 1335, 1336, 282, 0,
	0, 0, 0, 0, 0, 0, 1364, 1375, 1410, 1414,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 1384, 0, 0, 0, 1310, 1302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 1313, 0, 1334, 1411, 0, 1296,
	304, 1307, 410, 264, 0, 463, 1325, 1418, 1431, 1358,
	640, 1433, 1356, 1355, 1405, 1311, 1424, 1348, 372, 1309,
	337, 203, 231, 0, 1346, 420, 471, 483, 1423, 1330,
	1340, 260, 1338, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 1383, 1403, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 1308,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 1324, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	1419, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 1408,
	1451, 433, 482, 246, 617, 506, 205, 1318, 1323, 1316,
	0, 261, 262, 1389, 585, 1319, 1317, 1378, 1379, 1320,
	1442, 1443, 1444, 1429, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 1412, 1312, 0, 1321, 1322, 406, 1421, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 1382, 202,
	227, 375, 1447, 464, 295, 661, 629, 494, 624, 212,
	229, 1315, 269, 1328, 1337, 0, 1343, 1351, 1352, 1366,
	1369, 1370, 1371, 1372, 1390, 1391, 1393, 1402, 1404, 1407,
	1409, 1416, 1430, 1450, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	1399, 1360, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 1381, 1387,
	388, 288, 312, 327, 1396, 628, 512, 233, 476, 297,
	257, 1415, 1417, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 1377, 1406, 383,
	586, 587, 323, 404, 0, 0, 0, 0, 0, 0,
	1436, 1420, 538, 0, 1361, 1439, 1327, 1347, 1449, 1350,
	1353, 1398, 1304, 1376, 424, 1344, 1331, 1299, 1339, 1300,
	1329, 1363, 277, 1326, 1422, 1380, 1438, 373, 274, 1306,
	1297, 210, 515, 1332, 439, 1349, 209, 1401, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 1445, 377, 1386, 0, 507, 409, 0, 0,
	0, 1426, 1425, 1354, 1365, 1428, 1374, 1413, 1359, 1400,
	1314, 1385, 1440, 1345, 1395, 1441, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 1341, 1392,
	620, 1435, 1342, 1394, 272, 328, 279, 271, 591, 1446,
	1427, 1303, 1373, 1434, 1368, 607, 0, 0, 235, 1437,
	1367, 0, 1397, 0, 1452, 1298, 1388, 0, 1301, 1305,
	1448, 1432, 1335, 1336, 282, 0, 0, 0, 0, 0,
	0, 0, 1364, 1375, 1410, 1414, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 1384, 0, 0,
	0, 1310, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	1313, 0, 1334, 1411, 0, 1296, 304, 1307, 410, 264,
	0, 463, 1325, 1418, 1431, 1358, 640, 1433, 1356, 1355,
	1405, 1311, 1424, 1348, 372, 1309, 337, 203, 231, 0,
	1346, 420, 471, 483, 1423, 1330, 1340, 260, 1338, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 1383,
	1403, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 1308, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 1324, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 1419, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 1408, 1451, 433, 482, 246,
	617, 506, 205, 1318, 1323, 1316, 0, 261, 262, 1389,
	585, 1319, 1317, 1378, 1379, 1320, 1442, 1443, 1444, 1429,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 1412, 1312,
	0, 1321, 1322, 406, 1421, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 1382, 202, 227, 375, 1447, 464,
	295, 661, 629, 494, 624, 212, 229, 1315, 269, 1328,
	1337, 0, 1343, 1351, 1352, 1366, 1369, 1370, 1371, 1372,
	1390, 1391, 1393, 1402, 1404, 1407, 1409, 1416, 1430, 1450,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 1399, 1360, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 1381, 1387, 388, 288, 312, 327,
	1396, 628, 512, 233, 476, 297, 257, 1415, 1417, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 1377, 1406, 383, 586, 587, 323, 404,
	0, 0, 0, 0, 0, 0, 1436, 1420, 538, 0,
	1361, 1439, 1327, 1347, 1449, 1350, 1353, 1398, 1304, 1376,
	424, 1344, 1331, 1299, 1339, 1300, 1329, 1363, 277, 1326,
	1422, 1380, 1438, 373, 274, 1306, 1297, 210, 515, 1332,
	439, 1349, 209, 1401, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 1445, 377,
	1386, 0, 507, 409, 0, 0, 0, 1426, 1425, 1354,
	1365, 1428, 1374, 1413, 1359, 1400, 1314, 1385, 1440, 1345,
	1395, 1441, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 1341, 1392, 620, 1435, 1342, 1394,
	272, 328, 279, 271, 591, 1446, 1427, 1303, 1373, 1434,
	1368, 607, 0, 0, 235, 1437, 1367, 0, 1397, 0,
	1452, 1298, 1388, 0, 1301, 1305, 1448, 1432, 1335, 1336,
	282, 0, 0, 0, 0, 0, 0, 0, 1364, 1375,
	1410, 1414, 1357, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 1384, 0, 0, 0, 1310, 1302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 0, 0, 1313, 0, 1334, 1411,
	0, 1296, 304, 1307, 410, 264, 0, 463, 1325, 1418,
	1431, 1358, 640, 1433, 1356, 1355, 1405, 1311, 1424, 1348,
	372, 1309, 337, 203, 231, 0, 1346, 420, 471, 483,
	1423, 1330, 1340, 260, 1338, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 1383, 1403, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 1308, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 1324,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 1419, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 1408, 1451, 433, 482, 246, 617, 506, 205, 1318,
	1323, 1316, 0, 261, 262, 1389, 585, 1319, 1317, 1378,
	1379, 1320, 1442, 1443, 1444, 1429, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 1412, 1312, 0, 1321, 1322, 406,
	1421, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	1382, 202, 227, 375, 1447, 464, 295, 661, 629, 494,
	624, 212, 229, 1315, 269, 1328, 1337, 0, 1343, 1351,
	1352, 1366, 1369, 1370, 1371, 1372, 1390, 1391, 1393, 1402,
	1404, 1407, 1409, 1416, 1430, 1450, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 1399, 1360, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	1381, 1387, 388, 288, 312, 327, 1396, 628, 512, 233,
	476, 297, 257, 1415, 1417, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 1377,
	1406, 383, 586, 587, 323, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 2257, 2258, 2259, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 2478, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 2479, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 88, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 1732, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	97, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 4166, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 1769, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 1084, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 3212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 3208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 1105, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 1105, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 2148, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 1105, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 2146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 1148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 1147, 640, 0,
	0, 0, 0, 0, 1144, 1145, 372, 1113, 337, 203,
	231, 1138, 1142, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 88, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 100, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	97, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 2465, 0, 0,
	2464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 88, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 100, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 1769, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	97, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 1808, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 1810,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 1812,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 1494, 0, 1495, 1496, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 2465, 0, 0,
	2464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 2398,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 1987,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 2396, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 1107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 1113, 337, 203,
	231, 1111, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 2398,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 1987,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 1769, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 3777, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 2157,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 2929,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 2896, 0, 0, 0,
	0, 244, 0, 0, 251, 2897, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 1831, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 1830,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 737, 738, 739, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 4133, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 1987,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 3777, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 2466,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 1812,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	2104, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 2095,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1954, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1952, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1950, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1948, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1946, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1942, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1940, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1938, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 1913, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 1816, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 0,
	517, 970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1471, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 1470, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1063, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 686, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 4213, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 0, 0, 383, 586, 587,
	323,
}

var yyPact = [...]int{
	-1000, -1000, 2019, -1000, -547, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2581, 2666, -1000, -1000, -1000, -1000, 2698, -1000,
	1008, -1000, 2135, 2077, 2467, 7271, -1000, 56531, 486, -1000,
	53531, -450, 582, 5063, 37031, -1000, 216, -1000, 201, 55031,
	211, -1000, -1000, -1000, -1000, -450, 22781, 2339, 40, 32,
	56531, -1000, -1000, -1000, -1000, -364, 2645, 2079, -1000, 481,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 52781, -1000, -1000,
	-1000, 1071, -1000, -1000, 2481, 2423, 2343, 893, 2351, -1000,
	2555, 2079, -1000, 22781, 2634, 2453, 22031, 22031, 452, -1000,
	-1000, 270, -1000, -1000, 31781, 56531, 40031, 2529, 55031, -1000,
	2467, -1000, -1000, -1000, 219, -1000, 378, 2054, -1000, 2050,
	-1000, 1161, 1257, 397, 865, 855, 395, 393, 392, 391,
	389, 387, 386, 384, 403, -1000, 911, 911, -224, -242,
	1147, 442, 438, 438, 1151, 462, 2409, 2391, -1000, -1000,
	911, 911, 911, 396, 911, 911, 911, 911, 358, 357,
	911, 911, 911, 911, 911, 911, 911, 911, 911, 911,
	911, 911, 911, 911, 911, 911, 911, 1036, 2467, 332,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 56531, 784, 56531, -1000, 536, 483,
	-1000, -1000, -454, 1054, 1054, 49, 1054, 1054, 1054, 1054,
	177, 1029, 30, -1000, 173, 305, 166, 313, 1046, 908,
	-1000, -1000, 288, 1046, 1860, -1000, 900, 295, 178, -1000,
	1054, 1054, -1000, 15257, 274, 15257, 15257, 290, 147, -1000,
	2448, -1000, -1000, -1000, -1000, -1000, 1358, -1000, -1000, -1000,
	-1000, -47, 461, -1000, -1000, -1000, -1000, 55031, 52031, 294,
	-1000, -1000, 252, 1942, 1630, 22781, 1393, 891, -1000, -1000,
	1839, 856, -1000, -1000, -1000, -1000, -1000, 520, -1000, 25031,
	25031, 25031, 25031, -1000, -1000, 1857, 51281, 1857, 1857, 25031,
	1857, 25031, 1857, 1857, 1857, 1857, 22781, 1857, 1857, 1857,
	1857, -1000, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, -1000, -1000, -1000, -1000, 1857, 534, 1857, 1857, 1857,
	1857, 1857, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1857,
	1857, 1857, 1857, 1857, 1857, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, -1000, -1000,
	-1000, 1663, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2413,
	1563, 1554, 1546, -1000, 19781, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1857, -1000, -1000, -1000, 56531,
	-1000, 1857, 238, 55031, 55031, 385, 1343, -1000, -1000, 2555,
	2079, -1000, 2645, 2702, 481, -1000, 4010, 1740, 1752, 1504,
	2079, 1131, 2024, 56531, -1000, 2077, 206, -1000, -1000, -1000,
	-337, -348, 2295, 1498, 1856, -1000, -1000, -1000, -1000, 1615,
	22781, -1000, -1000, 2678, -1000, 29531, 533, 2674, 50531, -1000,
	452, 452, 2049, 453, -8, -1000, -1000, -1000, -1000, 943,
	36281, -1000, -1000, -1000, -1000, -1000, 1893, 56531, -1000, -1000,
	8103, 55031, -1000, 2133, -1000, 1875, -1000, 2107, 22781, 481,
	1871, -1000, -1000, -1000, -1000, 911, 911, 911, -1000, 401,
	2620, 7271, 6424, -1000, -1000, -1000, 49781, 2132, 55031, -1000,
	2131, -1000, 1016, 867, 884, 884, 55031, -1000, -1000, 55781,
	55031, 1013, 1011, 55031, 55031, 55031, 55031, -1000, 49031, -1000,
	48281, 47531, 1339, 55031, 46781, 46031, 45281, 44531, 43781, -1000,
	2512, -1000, 2181, -1000, -1000, -1000, 55781, 55031, 55031, 55781,
	55031, 55781, 56531, 55031, -1000, -1000, 328, -1000, -1000, 1335,
	1334, 1325, 911, 911, 1324, 1855, 1823, 1812, 911, 911,
	1323, 1809, 38531, 1806, 287, 1315, 1311, 1310, 1356, 1803,
	207, 1778, 1337, 1286, 1309, 55031, 2130, 56531, -1000, 280,
	1204, 1056, -1000, -1000, -1000, 942, 2467, 2337, 2047, 460,
	482, 55031, 450, 450, 55031, -1000, -1000, 16013, 56531, 213,
	-1000, 1746, 22781, -1000, 1050, 1046, 1046, -1000, -1000, -1000,
	-1000, -1000, -1000, 1054, 56531, 1050, -1000, -1000, -1000, 1046,
	1054, 56531, 1054, 1054, 1054, 1054, 1046, 1046, 1046, 1054,
	56531, 56531, 56531, 56531, 56531, 56531, 56531, 56531, 56531, 15257,
	900, 1054, -456, -1000, 1729, -1000, -1000, -1000, 2258, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 15257, 15257, -1000, -1000, 2551, 2546, -1000,
	-1000, -1000, 2045, -1000, 199, 9, 204, -1000, 43031, 543,
	932, -1000, 543, -1000, -1000, -1000, -1000, -1000, 2041, 42281,
	-1000, -459, -465, -467, -468, -1000, -1000, -1000, -469, -472,
	-1000, -1000, -1000, 22781, 22781, 22781, 22781, -272, -1000, 1227,
	25031, 2445, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22781,
	1206, 994, 25031, 25031, 25031, 25031, 25031, 25031, 25031, 26531,
	25781, 25031, 25031, 25031, 25031, 25031, 25031, -1000, -1000, 34031,
	5760, 5760, 856, 856, 856, 856, -1000, -182, 2039, 55781,
	-1000, -1000, -1000, 530, 22781, 22781, 856, -1000, 1364, 1030,
	19781, 22781, 22781, 22781, 22781, 963, 1630, 55781, 22781, -1000,
	1504, -1000, -1000, -1000, -1000, 1146, -1000, -1000, 1108, 2384,
	2384, 2384, 2384, 22781, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 2384, 22781, 269, 269, 873, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, 18281, 22781, 22781, 25031,
	22781, 22781, 22781, 1504, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 1504, 22781, 1410, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 17525, 22781, 22781, 22781, 22781, 22781, -1000,
	-1000, -1000, -1000, -1000, -1000, 22781, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 1504, 22781, 22781, 22781, 22781, 22781, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1801,
	1641, 1484, 1857, 22781, -1000, 2038, -1000, -177, 31031, 22781,
	1726, 2671, 2153, 55031, -1000, -1000, -1000, -1000, 2555, -1000,
	2555, 1801, 3976, 2288, 22031, -1000, -1000, 3976, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1678, -1000, 360, 479, 2144, 280, 55031, 476, 475,
	473, 449, -1000, -69, 928, 56531, 2024, 2523, -1000, 2016,
	-1000, -1000, 1857, -1000, -308, -1000, -310, 2277, 1724, 917,
	-1000, 22781, 22781, 2012, -1000, 1486, 56531, -1000, -272, -1000,
	41531, -1000, -1000, 14501, 56531, 380, 56531, -1000, 30281, 40781,
	283, -1000, -8, 1993, -1000, 4, 5, 19031, 841, -1000,
	-1000, -1000, 1147, 27281, 1876, 841, 77, -1000, -1000, -1000,
	2107, -1000, 2107, 2107, 2107, 2107, 917, 917, 917, 917,
	-1000, -1000, -1000, -1000, -1000, 2129, 2107, 2128, -1000, 2107,
	2107, 2107, 2107, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2118, 2118, 2118, 2115, 2115, 2108, 2108, 433, -1000, 22781,
	457, 40031, 2487, 1306, 1639, -202, -1000, 55031, 1431, 1412,
	1377, -1000, -531, 2005, -1000, -1000, 2619, -1000, -1000, 1287,
	1047, 1037, 978, 55031, 249, 371, -1000, 424, -1000, 40031,
	55031, 1004, 884, 55031, -1000, 55031, -1000, -1000, -1000, -1000,
	-1000, 55031, -1000, -1000, 2002, -1000, 2010, 1180, 1035, 1111,
	1020, 2002, -1000, -1000, -199, 2002, -1000, 2002, -1000, 2002,
	-1000, 2002, -1000, 2002, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1002, 337, -374, 55031, 249, 459, -1000,
	455, 34031, -1000, -1000, -1000, 34031, 34031, -1000, -1000, -1000,
	-1000, 1722, 1715, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -518, 56531, -1000, 261, 361, 356, 340, 56531,
	320, 2405, 2397, 2395, 2390, 2380, 2374, 2373, 303, 355,
	56531, 56531, 450, 2213, 56531, 2501, 56531, -1000, -1000, -1000,
	-1000, -1000, 1698, 1684, -1000, 1630, 56531, -1000, -1000, 1054,
	1054, -1000, -1000, 56531, 1054, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1054, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56531,
	-1000, -1000, -1000, -1000, 1665, -1000, 56531, -47, 150, -1000,
	-1000, 55031, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -109, -1000, 291, 1, 390, -1000, -1000, -1000, -1000,
	-1000, 2537, -1000, 1630, 1040, 981, -1000, 1857, -1000, -1000,
	1303, -1000, -1000, -1000, -1000, -1000, 1857, 1857, 1857, -1000,
	-1000, -1000, -1000, -1000, 1206, 25031, 25031, 25031, 1510, 826,
	1622, 1686, 1748, 1300, 1300, 927, 25031, 927, 25031, 868,
	868, 868, 868, 868, -1000, -1000, -1000, -1000, -1000, -1000,
	1663, -1000, 1657, -1000, 1857, 55781, 1851, 17525, 1528, 1822,
	1504, 877, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4397, 1504, 1942, 1504, 1683, 4393, 969, -1000,
	22781, 1504, 4374, -1000, -1000, 1504, 1504, 22781, -1000, -1000,
	22781, 22781, 22781, 22781, 1639, 1639, 1639, 1639, 1639, 1639,
	1639, 1639, 1639, 1639, 22781, 1639, 2001, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1999, 2663, 1171, 1639, 1639,
	1639, 1639, 4361, 1639, 1639, 22781, 2253, -1000, -1000, -1000,
	1440, 4356, 1444, 4339, 1639, 1639, -1000, 1639, 4329, 4325,
	1504, 3126, 3119, 1639, 1639, 1639, 1639, 1639, 3105, 3090,
	1639, 1639, 3072, 1639, 4321, 1639, 3022, 3018, 3004, 2972,
	2876, 2831, 2791, 2776, 2753, 2728, 2715, 2704, 2700, 2691,
	2654, 2605, 2590, 2582, 1639, 1639, 1639, 4316, 1639, 4312,
	1639, 4308, 1639, 1639, 4017, 2565, 2556, 1504, 1997, -1000,
	3980, 1639, 3973, 3967, 3962, 2544, 3663, 3647, 3642, 1639,
	1639, 1639, 2538, 3634, 3564, 3556, 3551, 3547, 3543, 3539,
	3534, 3530, 1639, 1484, 1484, 1484, 1484, 1484, 3524, -278,
	1639, 1504, -1000, -1000, -1000, -1000, -1000, 3513, 2515, 3503,
	3489, 3468, 3462, 1504, 1857, 529, -1000, -1000, 1484, 1504,
	1504, 1484, 1484, 3458, 3449, 3445, 3441, 3427, 3422, 1639,
	1639, -1000, 1639, 3417, 3406, 2474, 2470, 1504, -1000, 1484,
	56531, -1000, -447, -1000, -16, 947, 1857, -1000, 38531, 1504,
	-1000, 7272, -1000, 1208, -1000, -1000, -1000, -1000, -1000, 35531,
	1907, -1000, -1000, -1000, 449, 471, 251, 449, 280, 261,
	2150, 55031, 55031, 55031, 56531, 970, -1000, 539, -1000, 1857,
	-491, 21281, -1000, -1000, -1000, 917, 56, 34781, 579, 579,
	90, 1630, 1630, 22781, -1000, -1000, -1000, -1000, -1000, -1000,
	528, 2641, 535, 1857, -1000, 2000, 2236, -1000, -1000, -1000,
	2522, 28031, -1000, -1000, 1857, 1857, 56531, 1895, 1749, -1000,
	527, -1000, 1367, 1993, -8, -1, -1000, -1000, -1000, -1000,
	1630, -1000, 1374, 381, 353, -1000, 426, -1000, -1000, -1000,
	-1000, 2344, 74, -1000, -1000, -1000, 834, 917, -1000, -1000,
	-1000, -1000, -1000, -1000, 1655, -1000, 1655, -1000, -1000, -1000,
	-1000, -1000, 1305, -1000, -1000, -1000, -1000, 1299, -1000, -1000,
	1295, -1000, -1000, 2882, 2141, 457, -1000, -1000, 911, 1633,
	-1000, -1000, 2360, 911, 911, 55031, -1000, -1000, 1852, 2487,
	-1000, -40, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -522,
	188, 366, -1000, -1000, -1000, 2083, 55031, 1794, -1000, 247,
	-1000, 1751, -1000, 55031, -1000, 1792, 2113, 55031, 55031, -1000,
	-1000, -1000, 55031, 1857, -1000, -1000, -1000, -1000, 478, 2463,
	307, -1000, -1000, -296, -1000, -1000, 249, 247, 55781, 55031,
	841, -1000, -1000, -1000, -1000, -1000, -523, 1766, 468, 56531,
	56531, 56531, 56531, 56531, 56531, 515, -1000, -1000, 18, -1000,
	-1000, 227, -1000, -1000, 1590, -1000, -1000, -1000, -1000, 227,
	-1000, -1000, -1000, -1000, -1000, 334, 454, -1000, 56531, 56531,
	967, -1000, -1000, -1000, -1000, -1000, 1046, -1000, -1000, 1046,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2431, 56531, 0, -487, -1000, -484, 22781, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1428, 489, 1622, 25031,
	25031, 1030, 1030, 25031, -1000, -1000, -1000, 1009, 1009, 34031,
	-1000, 25031, 22781, -1000, -1000, 22781, 22781, 22781, 956, -1000,
	22781, 1516, -1000, 22781, -1000, -278, 1484, 1639, 1639, 1639,
	1639, -278, -278, -278, -278, -278, -278, -278, -278, -278,
	-278, 2015, -1000, 22781, 22781, 22781, 1504, 289, -1000, -1000,
	-1000, -278, 22781, -1000, -1000, 2662, -1000, 22781, -1000, 34031,
	22781, 22781, 22781, -1000, -1000, -1000, 22781, 22781, -1000, -1000,
	22781, -1000, 22781, -1000, -1000, -1000, -1000, -1000, -1000, 22781,
	-1000, 22781, -1000, -1000, -1000, 22781, -1000, 22781, -1000, -1000,
	22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000,
	22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000,
	22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000,
	22781, -1000, 22781, -1000, 22781, -1000, -1000, -1000, 22781, -1000,
	22781, -1000, 22781, -1000, -1000, 22781, -1000, 22781, -1000, 22781,
	-1000, 22781, 22781, -1000, 22781, 22781, 22781, -1000, 22781, 22781,
	22781, 22781, -1000, -1000, -1000, -1000, 22781, 22781, 22781, 22781,
	22781, 22781, 22781, 22781, 22781, 22781, -1000, -1000, -1000, -1000,
	-1000, -1000, 22781, -1000, 40031, 11, -278, 1410, 11, 1410,
	24281, 556, 538, 23531, -1000, 22781, 16769, -1000, -1000, -1000,
	-1000, -1000, 22781, 22781, 22781, 22781, 22781, 22781, -1000, -1000,
	-1000, 22781, 22781, -1000, 22781, -1000, 22781, -1000, -1000, -1000,
	-1000, -1000, 947, -1000, 869, 850, 884, 55031, -1000, -1000,
	-1000, -1000, 1989, -1000, 2564, -1000, 2306, 2303, 2656, 2641,
	22031, -1000, 30281, 56531, 56531, 296, 56531, 261, 466, 2212,
	-1000, 2150, 2150, 2150, -1000, 2497, -1000, 2112, 1355, -1000,
	-1000, -1000, -1000, -1000, -438, -1000, 2334, 2381, 579, 579,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13745, 2555, 22781,
	2208, 55781, 1857, -1000, 28781, 55031, 55781, 30281, 30281, 30281,
	30281, 30281, -1000, 2262, 2241, -1000, 2266, 2248, 2227, 56531,
	-1000, 1801, 1763, -1000, 22781, 32531, 1944, 30281, -1000, -1000,
	30281, 56531, 12989, -1000, -1000, -5, -17, -1000, -1000, -1000,
	-1000, 1147, -1000, -1000, 1508, 2517, 2349, -1000, -1000, -1000,
	-1000, -1000, 1755, -1000, 1733, 1985, 1719, 1693, 337, -1000,
	2100, 2421, 911, 911, -1000, 1293, -1000, 1364, 1587, 1584,
	-1000, -1000, -1000, 431, -1000, -1000, -537, 1292, 2111, 2093,
	22781, 2110, 2613, 1966, 55031, -1000, -1000, 55781, -1000, 315,
	-1000, 457, 55031, -1000, -1000, -1000, 371, 56531, -1000, 9362,
	-1000, -1000, -1000, 247, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 56531, 2065, -1000, -1000, -1000, -1000, -1000, 190, 186,
	1581, 221, 1572, -1000, 221, -1000, 56531, 964, 2141, 56531,
	-1000, -1000, -1000, 1054, 1054, -1000, -1000, 2416, -1000, 1364,
	1639, 25031, 25031, -1000, 856, -1000, -1000, 440, -254, 2107,
	2107, -1000, 2107, 2108, -1000, 2107, 140, 2107, 139, 2107,
	-1000, -1000, 1504, 1504, -1000, 1484, 2440, 1960, 3336, -1000,
	1630, 22781, 3312, -1000, -1000, -278, -278, -278, -278, -278,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-77, 3159, 3152, 1639, -1000, 2106, 2102, -1000, 1639, 22781,
	1639, 1504, 2436, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
	1639, 1639, 1639, 1639, 1639, 2399, 2388, 2367, 2359, 2354,
	2336, 2326, 2316, 2305, 2286, 2271, 2264, 2238, 2225, 2136,
	2095, 1639, 1639, 2088, 1639, 2061, 2056, -1000, 1630, 1484,
	3098, 1484, 1639, 1639, 2995, 300, 1639, 1677, 1677, 1677,
	1677, 1677, 1484, 1484, 1484, 1484, 1639, 55031, -1000, -278,
	-1000, -1000, -322, -344, -1000, 1504, -278, 1977, 25031, 1639,
	25031, 25031, 25031, 1639, 1504, -1000, 2025, 2013, 2991, 2007,
	1639, 2894, 1639, 1639, 1639, 1983, -1000, 2514, 1857, 2514,
	1857, 2514, 1661, 1208, 56531, -1000, -1000, -1000, -1000, 2641,
	2584, -1000, 1976, 1857, -1000, -1000, -1000, -1000, -1000, 464,
	56531, 56531, 2203, 2202, 2200, -1000, 1745, -1000, -1000, 56,
	619, -1000, 2323, 2381, -1000, 2601, 2322, 2599, -1000, -1000,
	-1000, -1000, -1000, 1630, -1000, 2471, 1912, -1000, 916, 1972,
	-1000, -1000, 21281, 1669, 2301, 526, 1661, 1973, 2236, 2160,
	2197, 2569, -1000, -1000, -1000, -1000, 2231, -1000, 2123, -1000,
	-1000, 2077, -1000, 2800, 380, 30281, 1957, 1957, -1000, 509,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1063, 9362, 2701,
	-1000, 1570, -1000, 1351, 237, 1288, -1000, -1000, 911, 911,
	-1000, 993, 990, -1000, 56531, 2087, -1000, 917, 1565, 917,
	1284, -1000, -1000, 1259, -1000, -1000, -1000, -1000, 2161, 2411,
	-1000, -1000, -1000, -1000, 268, 2081, 2598, -1000, 22781, 2080,
	912, 2780, 55031, 55031, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 487, 911, -502, 352, 336,
	911, 911, 911, -539, -1000, -1000, 1653, 1650, -1000, -226,
	-1000, 22781, -1000, -1000, -1000, -1000, -1000, 1268, 1268, 1563,
	1554, 1546, -1000, 2077, -204, 55031, 55031, 55031, 55031, -1000,
	-1000, -1000, 1154, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 856, 1504, 388, -212, 1504,
	-1000, -1000, 917, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22781, -1000, 22781, -1000, 22781, 1630, 22781,
	-1000, -1000, -1000, -1000, -1000, 2555, 1522, 22781, 22781, -1000,
	1251, 1212, -278, 1639, -1000, -1000, -1000, 22781, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781,
	-1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781,
	-1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781, -1000, 22781,
	-1000, 22781, -1000, -1000, 22781, -1000, -1000, -1000, 22781, -1000,
	22781, -1000, 22781, -1000, -1000, -1000, 22781, 217, 1009, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1504, 372, -1000, -1000, -1000, 2655, -1000, 1504, 22781, 1030,
	-1000, 1030, 1030, 1030, -1000, -1000, -1000, 22781, -1000, 22781,
	22781, -1000, 22781, -1000, 22781, -1000, -1000, -1000, -1000, 22781,
	1857, 2527, 39281, 1857, 39281, 1857, 32531, -1000, -1000, 2584,
	2607, 2597, 308, 56531, -1000, -1000, 56531, 56531, 56531, -1000,
	2313, 2315, 2315, 2323, -1000, 2593, 2592, -1000, 1505, 2591,
	1499, 988, -1000, 55781, 22781, -1000, 1857, 38531, -1000, 537,
	55031, 1857, 55031, -1000, 2566, -1000, -1000, 22781, 2076, -1000,
	22781, -1000, -1000, -1000, -1000, 5760, 2641, 1957, -1000, -1000,
	870, -1000, 22781, -1000, 5166, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1488, 1479, -1000, -1000, 2075, 22781,
	-1000, -1000, -1000, 1702, 1694, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 371, -533, 2572, 55031, 1201,
	-1000, 1643, 1966, 365, 1857, 1454, 911, 911, 911, 1190,
	1183, 38531, 1612, -1000, 55031, 406, -1000, 371, -1000, -243,
	-245, 1639, -1000, -1000, 2507, -1000, 16769, -1000, -1000, 2066,
	2070, -1000, -1000, -1000, -1000, 2276, -197, -215, -1000, -1000,
	1639, 1639, 1639, 2320, 1504, -1000, 1639, 1639, 1644, 1640,
	-1000, -1000, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
	1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
	1639, 1639, 1484, 1970, -1000, 217, 1504, 2196, -1000, -1000,
	5760, -1000, -1000, 2566, 2583, 11, -1000, -1000, 245, 11,
	1630, 961, 1504, 1504, 961, 1908, 1639, 1854, 1827, 1639,
	1639, 33281, -1000, 2574, 2560, 1607, -1000, -1000, 39281, 1607,
	39281, 947, 2607, -285, 22781, 22781, 1504, 1975, -1000, 55031,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2310, 1197, -1000,
	-1000, -1000, -1000, 1446, 1437, -1000, 1432, -1000, 2694, -1000,
	1630, -1000, 1857, 1857, -1000, 505, 1972, -1000, 2555, 1630,
	55031, 1630, 59, 2566, -1000, 1639, -1000, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857,
	1857, 1857, 1857, 1857, 1857, 1857, 1857, 1857, -1000, -1000,
	55031, 2103, -1000, -1000, 1610, 174, -1000, 1540, 1966, -1000,
	-1000, 904, -1000, 22781, -1000, 38531, 1423, 1416, -1000, -1000,
	-1000, -1000, -539, -1000, -1000, -1000, -1000, -1000, -1000, 481,
	1955, -1000, 909, 55031, 56531, -1000, 2265, -1000, -1000, -1000,
	-1000, 22781, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22781,
	-1000, 1504, 2192, -1000, -369, -1000, -499, 22781, -278, -1000,
	-1000, -278, -1000, -1000, -1000, -1000, -1000, 22781, -1000, -1000,
	22781, -1000, 22781, -1000, -1000, 1607, -1000, -1000, -1000, 37781,
	-1000, 1607, -1000, 1607, -1000, -285, -1000, 1952, -1000, 55031,
	1630, 382, 8273, 308, 8103, -1000, 1120, -1000, -1000, -1000,
	-1000, -1000, 55781, 55031, 1972, 55031, -1000, -1000, 1558, 1504,
	1857, 2555, -1000, 1539, -1000, -1000, 2064, 2093, -1000, -1000,
	-1000, 20531, -1000, -1000, -1000, -1000, -1000, 312, -202, 16769,
	12233, 1503, -1000, -203, 1639, 1484, -1000, -475, -1000, -1000,
	-1000, -1000, 301, -1000, -1000, 1942, -1000, -1000, 1750, 1744,
	1701, -1000, -1000, -1000, -1000, -1000, -1000, -285, -1000, -1000,
	2506, -1000, -251, -1000, -557, -1000, -1000, 8273, 22781, 55031,
	-1000, -1000, -1000, -1000, 1910, 1478, -1000, -1000, -1000, 32531,
	54281, -1000, -178, 432, 22781, 2059, 1504, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 499, -1000, -1000,
	-1000, 2065, -223, -1000, -1000, -1000, 4433, -493, -292, -323,
	25031, -1000, 22781, -1000, 22781, -1000, 22781, -1000, 55031, 1857,
	-1000, -1000, 954, 8273, -1000, -557, 1417, 6338, -1000, -1000,
	1472, -1000, 4333, -390, 2182, -1000, -103, -1000, -1000, -1000,
	1055, 1370, -1000, 1121, -1000, -1000, -1000, -1000, 2082, 55031,
	-1000, 16013, -204, -221, 977, -1000, -1000, -1000, -1000, -1000,
	1030, 1579, 1449, 1639, -1000, 55031, -1000, -1000, 8273, 2456,
	-1000, 54281, -382, 841, 5760, -1000, 2170, 2162, 2647, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -542, 1442, -1000, -1000,
	-1000, 4433, -331, -1000, 22781, -1000, 22781, -1000, 1504, 7365,
	-1000, 9362, -1000, -1000, 2477, 59, -1000, 2689, -1000, 2648,
	1041, 1041, -1000, 1096, -542, -1000, -1000, -1000, 1639, 1639,
	-1000, 968, 958, -1000, 22781, 22781, -1000, -392, -1000, -1000,
	-1000, -1000, -1000, 423, 1186, -1000, -1000, -1000, -1000, -1000,
	952, 8273, -1000, 1307, 1639, 5760, -1000, -1000, -1000, 447,
	8273, 8273, -1000, 297, -1000, 8273, 297, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3324, 3318, 29, 8, 48, 47, 2730, 3317, 3313,
	3311, 184, 3310, 3309, 3303, 3301, 3299, 3298, 183, 176,
	175, 3296, 3285, 3284, 3283, 3280, 3276, 3271, 3270, 3269,
	52, 97, 122, 96, 217, 204, 3268, 3266, 40, 171,
	206, 3264, 3263, 3262, 3259, 3256, 120, 197, 82, 87,
	201, 3252, 3241, 73, 3240, 3239, 3237, 199, 195, 192,
	1047, 3236, 191, 116, 55, 3235, 3234, 3233, 3232, 38,
	4, 3230, 24, 3226, 6, 3224, 3221, 3220, 3219, 3218,
	3217, 3214, 3212, 3211, 3210, 3208, 3207, 3206, 3205, 3204,
	3203, 3200, 309, 3198, 3196, 30, 3193, 75, 3191, 3188,
	3185, 3179, 3176, 15, 3172, 3170, 10, 50, 64, 3167,
	3165, 51, 3164, 3158, 3155, 3154, 3149, 80, 3145, 27,
	3140, 39, 3139, 3138, 126, 3137, 3136, 3135, 44, 3134,
	3133, 3132, 34, 173, 3131, 3129, 145, 3126, 3124, 3121,
	172, 226, 3120, 2319, 3117, 109, 3116, 3112, 3106, 169,
	170, 215, 3105, 108, 3104, 3103, 3099, 134, 3098, 3097,
	3381, 3096, 3095, 16, 71, 200, 3089, 3086, 166, 11,
	65, 3085, 23, 35, 3083, 3081, 37, 70, 3080, 110,
	3079, 3078, 102, 77, 3066, 107, 94, 3060, 3057, 22,
	13, 3036, 5, 7, 1, 100, 3034, 3033, 118, 3021,
	3019, 3018, 95, 3017, 3012, 5317, 3011, 89, 138, 105,
	72, 3009, 182, 139, 3002, 3000, 2998, 2997, 2996, 2993,
	56, 2989, 2983, 2982, 148, 1325, 121, 2981, 2975, 146,
	149, 131, 58, 137, 2970, 151, 2969, 219, 78, 2967,
	188, 2959, 2957, 143, 142, 2954, 2942, 61, 179, 205,
	2941, 103, 136, 119, 214, 91, 150, 2940, 2939, 2938,
	62, 74, 2937, 2934, 2930, 2926, 174, 2924, 2922, 69,
	2921, 60, 2919, 178, 2918, 363, 84, 2915, 189, 181,
	2913, 66, 2912, 2911, 86, 106, 117, 31, 2910, 162,
	167, 128, 180, 2907, 2905, 59, 2904, 2902, 2901, 202,
	333, 2899, 2895, 324, 185, 154, 141, 83, 2894, 207,
	2892, 2891, 2890, 18, 5176, 7111, 193, 36, 168, 2889,
	2885, 8072, 20, 49, 26, 2879, 211, 2878, 222, 2875,
	2869, 2867, 208, 196, 111, 163, 63, 2865, 2863, 2862,
	2861, 92, 2858, 2854, 2852, 2842, 2840, 2839, 46, 45,
	42, 99, 247, 67, 17, 98, 164, 158, 68, 2838,
	2836, 2834, 124, 85, 2833, 161, 160, 132, 177, 2828,
	190, 153, 115, 2827, 104, 41, 2826, 2806, 2805, 2799,
	93, 2798, 2794, 2793, 2792, 157, 155, 123, 79, 2790,
	81, 101, 159, 156, 57, 2789, 53, 2783, 2782, 33,
	198, 32, 2781, 2779, 2778, 28, 2777, 43, 113, 133,
	2776, 6134, 2765, 19, 238, 165, 2763, 2762, 9, 14,
	12, 2759, 2756, 2754, 2753, 140, 2752, 2749, 2748, 2744,
	25, 54, 21, 2, 114, 144, 76, 2741, 2739, 152,
	2736, 2729, 2722, 0, 1071, 129, 2672, 209,
}

//line sql.y:9026
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) compoundStatementsUnion() CompoundStatements {
	v, _ := st.union.(CompoundStatements)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) elseIfUnion() *ElseIfBlock {
	v, _ := st.union.(*ElseIfBlock)
	return v
}

func (st *yySymType) elseIfsUnion() []*ElseIfBlock {
	v, _ := st.union.([]*ElseIfBlock)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 441, 442, 442, 8, 8, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 69, 69, 69, 69, 259, 259, 259, 70,
	68, 68, 71, 71, 72, 72, 73, 73, 76, 76,
	75, 75, 74, 281, 411, 279, 279, 29, 87, 38,
	38, 37, 37, 40, 40, 39, 32, 32, 32, 33,
	33, 33, 33, 33, 33, 33, 33, 34, 34, 34,
	34, 34, 30, 30, 30, 30, 31, 31, 31, 31,
	31, 36, 36, 16, 17, 35, 35, 35, 18, 18,
	122, 122, 19, 20, 20, 20, 20, 445, 445, 200,
	200, 198, 198, 199, 199, 284, 284, 21, 288, 288,
	290, 290, 290, 290, 280, 280, 280, 22, 22, 289,
	289, 291, 291, 291, 294, 294, 294, 294, 335, 335,
	335, 23, 23, 23, 23, 23, 23, 142, 413, 413,
	412, 407, 407, 406, 406, 405, 410, 410, 409, 409,
	408, 43, 42, 44, 44, 44, 45, 54, 54, 54,
	54, 55, 56, 414, 414, 376, 61, 61, 60, 60,
	60, 60, 60, 60, 62, 62, 58, 58, 57, 57,
	59, 59, 378, 378, 364, 364, 377, 377, 377, 377,
	377, 377, 377, 363, 363, 154, 154, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 429, 429, 429, 429, 428, 428,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 164,
	164, 176, 176, 176, 176, 176, 176, 162, 162, 163,
	161, 161, 161, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 175, 175, 170, 170, 170, 172, 172, 171, 171,
	171, 173, 173, 430, 430, 430, 430, 341, 341, 341,
	341, 344, 344, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 343, 343, 343, 343, 343, 343, 343, 345,
	345, 345, 345, 345, 346, 346, 346, 346, 346, 346,
	346, 346, 346, 346, 346, 346, 346, 346, 346, 346,
	346, 347, 347, 347, 347, 347, 347, 347, 347, 362,
	362, 351, 351, 356, 356, 357, 357, 358, 358, 358,
	359, 359, 359, 360, 360, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 355, 355, 354, 354, 354, 365,
	390, 390, 389, 389, 387, 387, 387, 387, 387, 387,
	387, 387, 374, 374, 384, 384, 384, 384, 384, 373,
	373, 369, 369, 369, 370, 370, 371, 371, 368, 368,
	372, 372, 386, 386, 385, 385, 366, 366, 367, 367,
	392, 431, 431, 431, 431, 431, 432, 432, 393, 421,
	423, 423, 423, 422, 422, 419, 420, 418, 418, 418,
	418, 418, 97, 97, 97, 307, 307, 308, 308, 382,
	382, 381, 381, 381, 383, 383, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 302, 302, 302,
	417, 417, 417, 417, 417, 417, 416, 416, 416, 379,
	379, 379, 379, 415, 415, 63, 63, 238, 238, 434,
	434, 436, 436, 436, 51, 51, 51, 51, 51, 51,
	50, 50, 50, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 52, 52, 47, 47, 47, 47,
	47, 47, 47, 47, 47, 47, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	124, 124, 125, 125, 125, 125, 127, 127, 127, 395,
	395, 64, 64, 3, 3, 188, 190, 191, 191, 189,
	189, 189, 189, 189, 189, 66, 66, 65, 65, 193,
	192, 194, 194, 194, 1, 1, 2, 2, 4, 4,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 400, 400, 400, 400, 400, 400, 400, 400,
	400, 400, 361, 361, 361, 394, 394, 396, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 130, 129,
	129, 128, 131, 131, 131, 131, 131, 131, 131, 131,
	398, 398, 398, 67, 67, 399, 348, 349, 350, 5,
	6, 375, 397, 138, 138, 25, 41, 41, 26, 26,
	26, 26, 27, 27, 77, 80, 80, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 312, 312, 301, 301, 310, 310, 300,
	300, 326, 326, 326, 303, 303, 303, 304, 304, 427,
	427, 427, 297, 297, 79, 79, 79, 327, 327, 327,
	327, 82, 82, 437, 437, 438, 438, 439, 439, 439,
	83, 84, 84, 330, 330, 331, 331, 85, 86, 98,
	98, 98, 98, 98, 99, 99, 99, 99, 99, 99,
	123, 123, 123, 11, 11, 11, 11, 94, 94, 94,
	10, 10, 12, 81, 81, 88, 424, 424, 425, 426,
	426, 426, 426, 89, 91, 28, 28, 28, 28, 28,
	28, 148, 148, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 143, 143, 143, 137, 137,
	446, 92, 93, 93, 141, 141, 141, 134, 134, 134,
	140, 140, 140, 13, 13, 14, 283, 283, 15, 15,
	147, 147, 146, 146, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 144, 144, 145, 145, 145,
	145, 319, 319, 319, 318, 318, 182, 182, 184, 183,
	183, 185, 185, 186, 186, 186, 186, 236, 236, 208,
	208, 276, 276, 277, 277, 275, 275, 282, 282, 278,
	278, 278, 278, 285, 285, 187, 187, 187, 187, 195,
	195, 196, 196, 197, 197, 329, 329, 324, 324, 324,
	323, 323, 201, 201, 201, 203, 202, 202, 202, 202,
	204, 204, 206, 206, 205, 205, 207, 212, 212, 211,
	211, 209, 209, 209, 209, 209, 209, 210, 210, 210,
	210, 213, 213, 160, 160, 160, 160, 160, 160, 160,
	160, 435, 435, 174, 174, 174, 174, 174, 174, 174,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 266, 266, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 241, 241, 240, 240, 100, 100, 100,
	101, 101, 102, 102, 102, 102, 102, 103, 103, 103,
	103, 103, 103, 103, 105, 105, 104, 104, 227, 227,
	316, 316, 106, 107, 107, 108, 108, 111, 111, 110,
	109, 109, 115, 115, 112, 112, 114, 114, 113, 116,
	116, 117, 118, 118, 298, 298, 214, 214, 223, 223,
	223, 223, 215, 215, 216, 216, 216, 216, 216, 216,
	224, 224, 224, 235, 225, 225, 221, 221, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 179, 179, 179, 179, 246, 246, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 167, 167, 180, 180, 180, 180, 181,
	181, 181, 181, 181, 181, 181, 337, 337, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 447, 447, 352, 352,
	352, 222, 222, 222, 222, 222, 139, 139, 139, 139,
	139, 334, 334, 334, 338, 338, 338, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 339, 339, 244, 244, 135, 135, 242, 242,
	243, 245, 245, 237, 237, 237, 237, 239, 239, 218,
	218, 218, 247, 247, 340, 340, 248, 248, 119, 120,
	120, 121, 121, 249, 249, 251, 250, 250, 252, 253,
	253, 253, 254, 254, 255, 255, 255, 53, 53, 53,
	53, 53, 48, 48, 48, 48, 49, 49, 49, 49,
	150, 150, 151, 151, 151, 153, 153, 152, 152, 95,
	95, 96, 96, 96, 404, 404, 403, 403, 401, 402,
	402, 402, 157, 157, 158, 159, 159, 159, 155, 155,
	156, 156, 273, 273, 273, 273, 273, 273, 273, 256,
	256, 256, 264, 264, 264, 260, 260, 262, 262, 262,
	263, 263, 263, 261, 270, 270, 272, 272, 271, 271,
	267, 267, 268, 268, 269, 269, 269, 265, 265, 217,
	217, 217, 217, 217, 274, 274, 274, 274, 328, 328,
	328, 286, 286, 228, 228, 229, 229, 233, 233, 232,
	232, 230, 231, 234, 234, 178, 287, 287, 295, 292,
	292, 293, 293, 320, 320, 320, 296, 296, 309, 309,
	305, 305, 306, 306, 299, 299, 311, 311, 311, 90,
	226, 226, 391, 391, 388, 315, 315, 317, 317, 321,
	321, 325, 325, 322, 322, 9, 440, 440, 440, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 443, 444,
	332, 333, 333, 333,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 8, 4, 0, 4, 2, 2,
	1, 1, 0, 1, 1, 2, 0, 2, 0, 1,
	2, 1, 4, 1, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 1, 2, 1, 1, 3, 2, 3, 3,
	2, 3, 3, 5, 7, 10, 9, 1, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 1, 3,
	3, 3, 3, 3, 1, 1, 2, 5, 4, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 6, 5, 2, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 0, 1, 1, 3,
	3, 10, 6, 6, 8, 7, 4, 7, 8, 8,
	8, 5, 3, 1, 1, 5, 0, 1, 1, 1,
	1, 2, 2, 2, 0, 1, 4, 4, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 3, 3,
	2, 2, 4, 4, 1, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 3, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 2,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	6, 10, 7, 5, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 5, 5, 6,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 8, 4, 1, 3, 3,
	6, 7, 7, 8, 4, 0, 1, 0, 1, 3,
	3, 1, 1, 2, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	3, 3, 0, 2, 2, 2, 2, 2, 2, 2,
	4, 4, 3, 0, 1, 4, 3, 4, 4, 3,
	3, 3, 2, 1, 3, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 4, 5, 5, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 2, 4, 4, 4, 4, 4,
	2, 3, 3, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	5, 3, 5, 0, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 1, 1, 2, 1, 3, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 3, 2, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 1, 2, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 5, 5, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 3,
	6, 1, 1, 3, 4, 3, 4, 4, 4, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 5,
	5, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 5,
	6, 3, 3, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 4, 2, 4, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 1, 0, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 2, 2, 5, 6, 6, 6,
	6, 6, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 8, 4, 8, 8, 6, 5, 4, 4,
	4, 5, 7, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 6, 4, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 4, 4, 4, 6, 4, 6,
	4, 4, 6, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 4, 4, 6, 4, 6, 4,
	8, 6, 4, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 5, 9,
	6, 9, 8, 6, 8, 8, 8, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 4, 0, 2, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 1, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 1, 1, 3, 3, 1,
	1, 1, 0, 1, 3, 1, 3, 2, 1, 1,
	0, 1, 2, 3, 4, 2, 3, 4, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 3,
	1, 6, 5, 4, 1, 3, 3, 5, 0, 2,
	5, 0, 5, 1, 3, 1, 3, 1, 3, 1,
	2, 3, 4, 1, 1, 1, 1, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -441, -92, -446, -8, -7, -30, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -27, -77,
	-80, -78, -79, -82, -83, -84, -85, -86, -10, -12,
	-81, -28, -29, -87, -88, -89, -90, -91, -13, -14,
	-15, -9, -33, -32, -31, 13, 14, -122, -37, 35,
	-42, -43, -54, -44, -55, -45, 242, -56, 244, 243,
	282, 245, 399, 275, 83, 332, 333, 335, 336, 337,
	338, -123, 712, 280, 281, 247, 39, 51, 36, 37,
	40, 251, 288, 289, 250, 145, -34, -38, 12, -443,
	15, 489, 241, 277, 276, 31, -35, 599, 95, -36,
	63, -93, -442, 760, -273, -256, 26, 36, 32, -255,
	-251, -141, -256, 24, 22, 11, -92, -92, -92, 16,
	17, -92, -376, -378, 95, 174, 95, -276, 95, -61,
	-60, -58, -57, -59, -62, 34, -51, -52, -400, -50,
	-47, 246, 243, 292, 135, 136, 282, 283, 284, 245,
	266, 281, 285, 280, 301, -46, 90, 36, 599, 602,
	-383, 242, 248, 249, 244, 490, 138, 137, 84, -380,
	394, 633, 730, -62, 732, 110, 113, 731, 50, 256,
	733, 734, 735, 640, 736, 265, 737, 738, 739, 740,
	746, 681, 747, 748, 749, 139, 11, -92, -325, -321,
	100, -314, 596, 268, 631, 443, 632, 317, 90, 47,
	42, 535, 606, 390, 394, 633, 520, 730, 400, 332,
	350, 344, 525, 526, 527, 373, 365, 597, 634, 607,
	320, 269, 305, 724, 363, 149, 732, 324, 635, 283,
	401, 402, 636, 403, 110, 335, 440, 745, 323, 637,
	743, 113, 731, 340, 88, 519, 57, 727, 328, 50,
	278, 448, 449, 361, 250, 357, 733, 306, 638, 609,
	299, 138, 135, 752, 39, 353, 56, 33, 742, 137,
	55, 734, 165, 639, 735, 640, 405, 380, 718, 54,
	406, 284, 641, 93, 289, 601, 329, 726, 407, 540,
	354, 408, 316, 741, 247, 642, 327, 707, 699, 700,
	409, 410, 719, 385, 381, 386, 542, 643, 432, 524,
	411, 703, 704, 759, 58, 644, 645, 720, 136, 646,
	87, 736, 89, 348, 349, 647, 314, 267, 545, 546,
	434, 377, 502, 127, 509, 510, 120, 121, 505, 122,
	511, 123, 128, 512, 513, 514, 503, 124, 117, 504,
	515, 516, 378, 379, 125, 517, 119, 118, 506, 508,
	126, 518, 265, 38, 412, 598, 318, 64, 322, 293,
	435, 52, 383, 756, 51, 714, 547, 648, 717, 376,
	372, 499, 693, 59, 649, 650, 651, 652, 521, 737,
	375, 347, 371, 751, 4, 311, 494, 522, 738, 68,
	249, 388, 387, 389, 300, 431, 368, 653, 654, 655,
	272, 91, 656, 358, 25, 657, 658, 413, 307, 659,
	62, 660, 661, 438, 281, 662, 60, 739, 694, 45,
	663, 286, 753, 740, 664, 665, 666, 713, 667, 288,
	668, 415, 669, 701, 702, 414, 382, 384, 548, 295,
	416, 399, 695, 252, 600, 670, 330, 352, 285, 744,
	671, 273, 536, 537, 538, 539, 725, 544, 543, 287,
	292, 280, 439, 274, 672, 673, 674, 675, 676, 321,
	692, 677, 678, 336, 604, 746, 500, 49, 679, 680,
	681, 682, 683, 315, 310, 433, 442, 67, 92, 396,
	684, 685, 723, 346, 341, 43, 308, 99, 480, 482,
	483, 484, 485, 486, 481, 488, 686, 333, 61, 747,
	748, 749, 302, 750, 528, 529, 530, 531, 13, 582,
	565, 593, 566, 583, 567, 576, 568, 584, 592, 594,
	549, 557, 550, 558, 588, 571, 585, 577, 570, 569,
	591, 574, 578, 551, 559, 589, 575, 552, 560, 553,
	561, 554, 562, 587, 586, 579, 590, 555, 563, 581,
	556, 564, 580, 572, 573, 451, 757, 758, 523, 418,
	696, 139, 312, 313, 53, 369, 294, 687, 325, 688,
	359, 360, 496, 497, 374, 345, 370, 146, 710, 334,
	343, 708, 296, 419, 501, 282, 689, 441, 309, 391,
	131, 342, 397, 326, 605, 541, 301, 420, 722, 603,
	532, 533, 367, 364, 303, 534, 690, 392, 712, 421,
	257, 297, 298, 691, 709, 422, 423, 319, 424, 425,
	426, 427, 428, 430, 331, 429, 711, 705, 706, 304,
	479, 602, 339, 362, 398, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 498, 255, -92, 255, -205, -321, -143,
	714, 716, 193, -292, 402, -310, 404, 417, 412, 422,
	410, -301, 413, 415, 295, -427, 432, 255, 419, 241,
	405, 414, 423, 424, 319, 430, 425, 331, 429, 304,
	426, 427, 428, -411, 193, 735, 750, 334, 342, 149,
	366, 409, 407, 433, 714, 100, -327, 100, 101, 102,
	-314, 334, -330, 339, -315, -411, -314, 337, -92, -92,
	-332, -332, -143, -225, -160, 157, -174, -281, -177, 101,
	-165, -168, -219, -220, -221, -222, -175, -239, -279, 182,
	183, 190, 158, -235, -178, 29, 595, 491, 490, 193,
	34, 236, 77, 78, 493, 494, 160, 63, 15, 456,
	457, -176, 446, 447, 458, 452, 453, 519, 521, 522,
	523, 520, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 524, 535, 496, 497, 129, 498, 117, 119,
	118, 127, 128, 499, 500, 501, 363, 547, 548, 542,
	545, 546, 544, 543, 378, 379, 502, 565, 566, 570,
	569, 567, 568, 571, 574, 575, 576, 577, 578, 579,
	581, 580, 572, 573, 550, 549, 551, 552, 553, 554,
	555, 556, 558, 557, 559, 560, 561, 562, 563, 564,
	582, 583, 584, 585, 586, 588, 587, 592, 591, 589,
	590, 594, 593, 503, 504, 120, 121, 122, 123, 124,
	125, 126, 505, 508, 506, 507, 509, 510, 511, 516,
	517, 512, 513, 514, 515, 518, 389, 387, 388, 384,
	383, 382, -102, -115, 622, 621, -116, 443, 448, 449,
	451, -166, -167, -180, -181, -315, -321, 260, 445, 254,
	188, 489, -169, -163, -237, 116, 102, -32, -234, 444,
	454, 455, 459, 450, 460, 608, 610, 625, 626, 628,
	613, 618, 617, 620, 536, 537, 538, 539, 540, 541,
	699, 700, 701, 702, 703, 704, 705, 706, -411, -314,
	100, -172, -170, -214, 103, 108, 111, 112, 114, -433,
	278, 359, 360, 130, -443, -230, -231, -171, 105, 106,
	107, 132, 133, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 728, 98, 104, 50, 418,
	418, -205, -92, -92, -92, -92, -440, 731, 600, -249,
	-141, -251, -34, -32, -443, 12, -92, -32, -33, -31,
	-38, -92, -40, 627, -39, -321, -92, 109, -256, -273,
	16, 67, 177, 48, 56, -254, -255, -35, -32, -160,
	23, 41, 27, -145, 184, -160, -321, -145, -299, 259,
	-92, -92, -288, -335, 334, -290, 433, 714, 432, -280,
	-293, 100, -279, -292, 431, 101, -377, 174, -363, -367,
	-315, 270, -393, 266, -205, -386, -385, -315, -443, 28,
	-275, -315, -57, -58, -59, -292, 192, 734, -124, 287,
	291, 96, 96, -367, -366, -365, -415, 291, 270, -392,
	-384, 262, 271, -373, 263, 264, -368, 256, 151, -415,
	-368, 261, 271, 266, 270, 291, 291, 139, 291, 139,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 286,
	-374, 166, -374, 603, 603, -380, -415, 266, 256, -415,
	-415, 262, -311, -368, 258, 28, 258, 38, 38, -374,
	-374, -374, -292, 192, -374, -374, -374, -374, 299, 299,
	-374, -374, -374, -374, -374, -374, -374, -374, -374, -374,
	-374, -374, -374, -374, -374, -374, -374, 255, -414, -150,
	429, 319, 445, 254, -151, 90, -60, 301, -41, -205,
	-309, 256, 257, -414, 288, 312, -205, 237, 255, 717,
	-303, 174, 19, -303, -300, 418, 416, 403, 408, -303,
	-303, -303, -303, 302, 401, -369, 256, 38, 267, 418,
	302, 401, 302, 303, 302, 303, 411, 421, 302, -326,
	18, 177, 445, 406, 410, 295, 255, 296, 257, 420,
	303, -326, 98, -304, 174, 302, 418, 412, 298, -303,
	-303, -333, -443, -317, -315, -313, 246, 41, 156, 28,
	30, 159, 193, 142, 23, 160, 40, 248, 366, 266,
	192, 262, 490, 241, 81, 608, 446, 453, 444, 452,
	456, 492, 493, 445, 404, 253, 34, 17, 610, 31,
	276, 27, 44, 186, 243, 163, 164, 611, 279, 29,
	277, 129, 133, 613, 26, 84, 271, 18, 264, 46,
	20, 614, 615, 21, 74, 260, 259, 177, 256, 79,
	698, 15, 236, 32, 173, 75, 616, 151, 145, 617,
	618, 619, 620, 143, 77, 174, 24, 754, 454, 455,
	36, 715, 595, 290, 188, 82, 65, 716, 157, 450,
	621, 622, 130, 623, 134, 85, 721, 153, 22, 697,
	80, 48, 624, 291, 625, 261, 755, 626, 436, 627,
	175, 244, 489, 78, 176, 728, 628, 729, 254, 417,
	12, 495, 35, 275, 263, 73, 72, 141, 76, 460,
	629, 255, 162, 258, 144, 132, 11, 150, 37, 16,
	83, 86, 457, 458, 459, 63, 140, 599, 161, 19,
	630, 437, 155, -411, 717, -333, -333, 302, 343, 35,
	101, -437, -438, -439, 599, 436, 258, -315, -205, -98,
	707, 245, -99, 713, 41, 252, 146, 38, -148, 418,
	-136, 193, 735, 718, 719, 720, 717, 415, 725, 723,
	721, 302, 722, 96, 153, 155, 156, 4, -160, 173,
	-215, -216, 172, 166, 167, 168, 169, 170, 171, 178,
	177, 157, 159, 174, -266, 154, 179, 180, 181, 182,
	183, 184, 185, 187, 186, 188, 189, 175, 176, 192,
	239, 240, -168, -168, -168, -168, -235, -241, -240, -443,
	-237, -411, -314, -321, -443, -443, -168, -298, -443, -165,
	-443, -443, -443, -443, -443, -244, -160, -443, -443, -447,
	-443, -447, -447, -447, -352, -443, -352, -352, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, 237, -443, -443, -443, -443, -443, -352,
	-352, -352, -352, -352, -352, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, 98,
	112, 108, 111, 103, 114, 98, 98, 98, 98, -32,
	-33, -225, 63, -443, -332, -424, -425, -208, -205, -443,
	319, -315, -315, 288, 105, -254, -35, -32, -249, -255,
	-251, -32, -92, -134, -147, 69, 70, -146, -149, 27,
	44, 74, 76, 99, 72, 73, 71, 41, -444, 97,
	-444, -273, -444, -157, -309, -142, -151, 256, 264, 263,
	150, -414, -158, 153, 306, 96, -40, -276, 115, -228,
	-233, -231, 728, 655, 685, 655, 685, 67, 49, 98,
	98, 96, 25, -250, -252, -160, 18, -319, 4, -318,
	28, -315, 98, 237, 18, -206, 32, -205, -299, -299,
	96, 100, 334, -289, -291, 434, 436, 166, -320, -315,
	98, 34, 97, 96, -205, -341, -344, -346, -345, -347,
	-342, -343, 363, 364, 193, 367, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 380, 392, 35, 278, 359,
	360, 361, 362, 381, 382, 383, 384, 386, 387, 388,
	389, 344, 365, 597, 345, 346, 347, 348, 349, 350,
	352, 353, 356, 354, 355, 357, 358, -316, -315, 95,
	97, 96, -351, 95, -160, -30, 97, 96, -374, -374,
	-374, 286, 23, -50, -47, -400, 22, -46, -47, 246,
	135, 136, 243, 95, -363, 95, -372, -316, -315, 95,
	151, 261, 150, -371, -368, -371, -372, -315, -237, -315,
	151, 151, -315, -315, -285, -315, -285, -285, 41, -285,
	41, -285, 41, 105, -315, -285, 41, -285, 41, -285,
	41, -285, 41, -285, 41, 34, 87, 88, 89, 34,
	91, 92, 93, -237, -315, -315, -237, -363, -237, -205,
	-315, -292, 105, 105, 105, -374, -374, 105, 98, 98,
	98, -374, -374, 105, 98, -323, -321, 98, 98, -416,
	272, 316, 318, 105, 105, 105, 105, 34, 98, -417,
	34, 742, 741, 743, 744, 745, 98, 105, 34, 105,
	34, 105, -315, 95, -205, -157, 241, 243, 246, 85,
	98, 324, 322, 323, 320, 325, 326, 327, 166, 50,
	96, 258, 255, -315, -305, 260, -305, -315, -322, -321,
	-313, -205, 258, 400, 98, -160, -370, 18, 177, -326,
	-326, -303, -205, -370, -326, -303, -205, -303, -303, -303,
	-303, -326, -326, -326, -303, -321, -321, -205, -205, -205,
	-205, -205, -205, -205, -333, -304, -303, 717, 98, -297,
	18, 85, -333, -333, -312, 26, 26, 96, 340, 437,
	438, -331, 337, -94, -315, 98, -11, -30, -19, -18,
	-20, 166, -11, 96, 599, -198, -205, 717, 717, 717,
	717, 717, 717, -160, -160, -160, -160, 623, -223, -435,
	157, 132, 133, 130, 131, -177, 42, 43, 41, -160,
	-224, -230, -235, 115, 177, 159, 174, -266, -165, -168,
	-165, -165, -165, -165, -165, -165, 236, -165, 236, -165,
	-165, -165, -165, -165, -165, -334, -315, 98, 193, -173,
	-172, 114, -433, -173, 596, 96, -240, 237, -160, -160,
	-411, -132, 462, 463, 464, 465, 467, 468, 469, 472,
	473, 477, 478, 461, 479, 466, 471, 474, 475, 476,
	470, 362, -160, -226, -225, -226, -160, -160, -242, -243,
	161, -237, -160, -444, -444, 105, 184, -140, 27, 44,
	-140, -140, -140, -140, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -140, -160, -133, 461, 479, 466,
	471, 474, 475, 476, 470, 362, 480, 481, 482, 483,
	484, 485, 486, 487, 488, -133, -132, -160, -160, -160,
	-160, -160, -160, -160, -160, -100, -160, 142, 143, 144,
	-225, -160, -165, -160, -160, -160, -444, -160, -160, -160,
	-226, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -410, -409, -408,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -225, -225, -225, -225, -225, -160, -444,
	-160, -179, -163, 105, -281, 114, 101, -160, -160, -160,
	-160, -160, -160, -226, -317, -322, -313, -314, -225, -226,
	-226, -225, -225, -160, -160, -160, -160, -160, -160, -160,
	-160, -444, -160, -160, -160, -160, -160, -273, -444, -225,
	96, -426, 436, 437, 715, -324, 291, -323, 28, -226,
	98, 18, -283, 86, -315, -254, -254, 69, 70, 65,
	-144, -145, -149, -444, 295, -153, 308, 255, -150, -157,
	-315, 256, 256, 256, -306, 260, 489, 166, -39, 28,
	96, -443, 648, 648, 68, 98, -353, -292, 390, 391,
	193, -160, -160, 96, -253, 30, 31, -205, -318, 184,
	-322, -205, -284, 291, -205, -183, -185, -186, -187, -208,
	-236, -443, -188, -32, 619, 616, 18, -198, -199, -207,
	-321, -290, -335, -289, 96, 435, 437, 438, 85, 134,
	-160, -354, 192, -382, -381, -380, -363, -365, -366, -367,
	97, -354, -359, 397, 396, -351, -351, -351, -351, -351,
	-353, -353, -353, -353, 95, -351, 95, -351, -351, -351,
	-351, -356, 95, -356, -356, -357, -356, 95, -357, -358,
	95, -358, -393, -160, -390, -389, -387, -388, 265, 110,
	691, 647, 599, 640, 681, 86, -385, -253, 105, -444,
	-95, 599, -315, 100, 98, 100, 98, 100, 98, -125,
	-64, -1, 754, 755, 756, 96, 23, -364, -363, -63,
	316, -396, -397, 291, -392, -386, -372, 151, -371, -372,
	-372, -315, 96, 32, 139, 139, 139, 139, 599, 243,
	35, -307, 639, 157, 691, 647, -363, -63, 258, 258,
	-334, -334, -334, 98, 98, -302, 750, -198, -153, 297,
	297, 255, 310, 255, 310, -205, 321, 324, 322, 323,
	320, 325, 326, 327, 328, 41, 41, 41, 41, 41,
	41, 41, 309, 311, 313, 299, -205, -205, -305, 85,
	-200, -205, 29, -321, 98, 98, -205, -303, -303, -205,
	-303, -303, -205, 98, -321, -439, 341, -315, 377, 708,
	710, -136, 436, 96, 599, 26, -137, 26, -443, -435,
	132, 133, -235, -235, -235, -224, -165, -168, -165, 156,
	279, -165, -165, -443, -237, -444, -317, 28, 96, 86,
	-444, 182, 96, -444, -444, 96, 18, 96, -245, -243,
	163, -160, -444, 96, -444, -444, -225, -160, -160, -160,
	-160, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -225, -444, 96, 96, 18, -338, 28, -444, -444,
	-444, -444, 96, -444, -444, -244, -444, 18, -444, 86,
	96, 177, 96, -444, -444, -444, 96, 96, -444, -444,
	96, -444, 96, -444, -444, -444, -444, -444, -444, 96,
	-444, 96, -444, -444, -444, 96, -444, 96, -444, -444,
	96, -444, 96, -444, 96, -444, 96, -444, 96, -444,
	96, -444, 96, -444, 96, -444, 96, -444, 96, -444,
	96, -444, 96, -444, 96, -444, 96, -444, 96, -444,
	96, -444, 96, -444, 96, -444, -444, -444, 96, -444,
	96, -444, 96, -444, -444, 96, -444, 96, -444, 96,
	-444, 96, 96, -444, 96, 96, 96, -444, 96, 96,
	96, 96, -444, -444, -444, -444, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, -444, -444, -444, -444,
	-444, -444, 96, -107, 624, -444, -444, 96, -444, 96,
	96, 96, 96, 96, -444, -443, 237, -444, -444, -444,
	-444, -444, 96, 96, 96, 96, 96, 96, -444, -444,
	-444, 96, 96, -444, 96, -444, 96, -444, -425, 714,
	437, -212, -211, -209, 83, 259, 84, -443, -323, -444,
	-173, -281, -282, -281, -218, -315, 105, 114, -256, -182,
	96, -184, 18, -306, 257, 315, -306, -157, -153, -391,
	-388, -315, -315, -315, -321, 157, -159, 456, -155, 98,
	100, -235, -233, -444, -353, -261, -267, -300, -315, 98,
	193, -355, 193, -355, 390, 391, -252, 237, -213, 19,
	-217, 35, 63, -30, -443, -443, 35, 96, -201, -203,
	-202, -204, 75, 79, 81, 76, 77, 78, 82, -329,
	28, -32, -183, -32, -443, -205, -198, -445, 18, 86,
	-445, 96, 237, -291, -294, 439, 436, 442, -411, 98,
	-124, 96, -380, -367, -257, -154, 46, -360, 398, -353,
	607, -353, -362, 98, -362, 105, 105, 105, 97, -53,
	-48, -49, 36, 90, -387, -374, 98, 45, -374, -374,
	-315, 97, -253, -96, 305, 714, -2, 753, 759, 151,
	95, 403, 22, -275, 96, 97, -238, 317, 97, -126,
	-315, 97, 95, -372, -372, -315, -443, 255, 34, 34,
	691, 647, 639, -63, -238, -237, -315, -354, 752, 751,
	97, 257, -205, -205, -205, -205, -205, -205, 246, 243,
	426, -434, 329, 98, -434, 300, 258, -198, -205, 96,
	-97, 274, 269, -326, -326, 36, -205, 436, 726, 724,
	-160, 156, 279, -177, -168, -132, -132, -165, -336, 193,
	363, 278, 361, 357, 377, 368, 396, 359, 397, 354,
	353, 352, -336, -334, -165, -225, -160, -160, -160, 165,
	-160, 162, -160, -108, -107, -444, -444, -444, -444, -444,
	-108, -108, -108, -108, -108, -108, -108, -108, -108, -108,
	-249, -160, -160, -160, -444, 193, 363, -108, -160, 18,
	-160, -334, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -408, -160, -225,
	-160, -225, -160, -160, -160, -160, -160, -409, -409, -409,
	-409, -409, -225, -225, -225, -225, -160, -443, -315, -111,
	-110, -109, 674, 259, -107, -179, -111, -179, 236, -160,
	236, 236, 236, -160, -226, -317, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -209, -368, 297, -368,
	297, -368, -285, 96, -296, 26, 18, 63, 63, -182,
	-213, -145, -183, -321, -205, -152, 306, 314, -205, -153,
	257, 85, -391, -391, -391, 29, 95, -156, 101, -264,
	707, -270, 52, -268, -269, 53, -265, 54, 62, -355,
	-355, 184, -254, -160, -286, 85, -287, -295, -237, -229,
	-232, -230, -443, -274, -444, -315, -285, -287, -185, -186,
	-186, -185, -186, 75, 75, 75, 80, 75, 80, 75,
	-202, -321, -444, -160, -324, 86, -183, -183, -207, -321,
	184, 436, 440, 441, -380, -432, 130, 157, 34, 85,
	394, 110, -430, 192, 636, 686, 691, 647, 640, 681,
	-431, 261, 150, 151, 273, 28, 47, 97, 96, 97,
	96, 97, 97, 96, -308, -307, -49, -48, -374, -374,
	105, -411, 98, 98, 266, -127, 757, 105, 95, -3,
	90, -160, 95, 23, -363, -237, -398, -348, -399, -349,
	-350, -5, -6, -375, -130, 63, 110, -67, 50, 256,
	737, 738, 139, -443, 750, -390, -275, -394, -396, -205,
	-164, -443, -176, -162, -161, -163, -169, 182, 183, 278,
	359, 360, -238, -205, -413, 86, 297, 394, 297, 394,
	98, -436, 330, 98, -436, -205, -97, -53, -205, -303,
	-303, 36, -411, -444, -177, -168, -139, 177, 599, -339,
	606, -351, -351, -351, -358, -351, 349, -351, 349, -351,
	-444, -444, -444, 96, -444, 26, -444, 96, -160, 96,
	-108, -108, -108, -108, -108, -135, 495, 96, 96, -444,
	95, 95, -444, -160, -444, -444, -444, 96, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, 96, -444, 96, -444, 96, -444, 96, -444, 96,
	-444, 96, -444, 96, -444, 96, -444, 96, -444, 96,
	-444, 96, -444, 96, -444, 96, -444, 96, -444, 96,
	-444, 96, -444, -444, 96, -444, -444, -444, 96, -444,
	96, -444, 96, -444, -444, -444, 96, -337, 692, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-106, -316, -107, 656, 656, -444, -107, -246, 96, -165,
	-444, -165, -165, -165, -444, -444, -444, 96, -444, 96,
	96, -444, 96, -444, 96, -444, -444, -444, -444, 96,
	-210, 26, -443, -210, -443, -210, -444, -281, -205, -213,
	-247, 20, -443, 257, -205, -205, 85, 85, 85, 97,
	-261, 57, 369, -272, -271, 61, 53, -269, 23, 55,
	23, 33, -286, 96, 166, -328, 96, 28, -444, -444,
	96, 63, 237, -444, -213, -196, -195, 85, 86, -197,
	85, -195, 75, 75, -276, 96, -284, -183, -213, -213,
	237, 130, -443, -164, 16, 98, 98, -411, -429, 741,
	742, 34, 743, 105, -374, -374, 151, 151, -205, 95,
	-353, 98, -353, 105, 105, 34, 91, 92, 93, 34,
	87, 88, 89, 307, -395, 95, 23, -160, 95, 166,
	97, -275, -275, 293, 177, -374, 735, 299, 299, -374,
	-374, -374, -129, -128, 757, 97, -444, 96, -361, 599,
	602, -160, -170, -170, -276, -407, 599, -412, -315, -315,
	-315, -315, 105, 107, -444, 597, 82, 600, -444, -353,
	-160, -160, -160, -160, -254, 98, -160, -160, 105, 105,
	-108, -444, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -225, -160, -444, -193, -192, -194, 718, 130,
	34, -336, -444, -227, 291, -114, -113, -112, 18, -444,
	-160, -132, -132, -132, -132, -160, -160, -160, -160, -160,
	-160, -443, 75, 22, 20, -278, -315, 261, -443, -278,
	-443, -324, -247, -248, 21, 23, -404, -403, -401, -402,
	177, 698, 697, -205, -205, -205, -205, -262, 59, -260,
	58, -260, -271, 23, 23, 98, 23, 98, 151, -295,
	-160, -232, -323, 63, -30, -315, -229, -315, -249, -160,
	95, -160, -173, -213, -213, -160, -220, 519, 521, 522,
	523, 520, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 524, 535, 496, 497, 498, 117, 119, 118,
	127, 128, 499, 500, 501, 363, 547, 548, 542, 545,
	546, 544, 543, 378, 379, 502, 565, 566, 570, 569,
	567, 568, 571, 574, 575, 576, 577, 578, 579, 581,
	580, 572, 573, 550, 549, 551, 552, 553, 554, 555,
	556, 558, 557, 559, 560, 561, 562, 563, 564, 582,
	583, 584, 585, 586, 588, 587, 592, 591, 589, 590,
	594, 593, 503, 504, 120, 121, 122, 123, 124, 125,
	126, 505, 508, 506, 509, 510, 511, 516, 517, 512,
	513, 514, 515, 518, 389, 387, 388, 384, 383, 382,
	443, 448, 449, 451, 536, 537, 538, 539, 540, 541,
	699, 700, 701, 702, 703, 704, 705, 706, 98, 98,
	95, -160, 97, 97, -394, -64, 97, -277, -275, 105,
	97, 294, -230, -443, 98, -374, -374, -374, 105, 105,
	-323, -444, 96, -315, -431, -396, 603, 603, -444, 28,
	-406, -405, -317, 95, 86, 68, 598, 601, -444, -444,
	-444, 96, -444, -444, -444, 97, 97, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, 96,
	-444, -192, -194, -444, 85, -173, -249, 23, -111, 316,
	318, -111, -444, -444, -444, -444, -444, 96, -444, -444,
	96, -444, 96, -444, -444, -278, -444, 23, 23, 96,
	-444, -278, -444, -278, -212, -248, -121, -120, -119, 630,
	-160, -225, -444, 96, -315, -263, 60, 85, 134, 98,
	98, 98, 16, -443, -229, 237, -328, -254, -275, -190,
	403, -249, -444, -275, 97, 97, 759, 151, 97, -230,
	-138, -443, 290, -323, 98, 98, -128, -131, -30, 96,
	166, -275, -205, 68, -160, -225, -444, 85, 611, 718,
	-105, -104, -101, 729, 755, -225, -107, -107, -160, -160,
	-160, -444, -315, 261, -444, -444, -121, 96, -118, -117,
	-315, -340, 599, -68, -69, -70, -7, 332, 260, 253,
	-401, -341, 85, 134, -287, -275, -328, -315, 97, -444,
	-443, -254, 97, -258, 95, -3, 290, -348, -399, -349,
	-350, -5, -6, -375, -95, -405, -379, -321, -317, 98,
	105, 97, 599, -444, -444, -103, 159, 727, 689, -169,
	236, -444, 96, -444, 96, -444, 96, -119, 96, 28,
	604, 760, -71, -72, -70, -69, -160, -275, -444, -324,
	-191, -189, -315, 653, -422, -421, 595, -432, -428, 130,
	157, 110, -430, 686, 691, 647, 140, 141, -160, 95,
	-444, 237, -413, 600, -103, 728, 667, 642, 667, 642,
	-165, -160, -160, -160, -117, -443, 165, -70, 162, -341,
	-444, 96, 26, -341, -66, 664, -419, -420, 85, -423,
	409, 663, 684, 130, 98, 105, 97, -275, -322, -407,
	601, 156, -132, -444, 96, -444, 96, -444, -106, -72,
	-259, 34, -189, 660, -354, -173, -420, 85, -419, 85,
	17, 16, -4, 758, 97, -103, 667, 642, -160, -160,
	-444, -76, -75, -74, 164, -443, -164, -65, 29, -190,
	-418, 274, 269, 272, 35, -418, 105, -4, -444, -444,
	-73, 163, -74, -160, -160, 664, 268, 34, 130, 165,
	-72, 162, -444, -173, 260, -72, -193, -192, -192,
}

var yyDef = [...]int{
	920, -2, -2, 922, 2, 4, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 92, 94, 95, 920, 920, 920, 0, 920,
	0, 153, 0, 981, -2, -2, 920, 1691, 0, 920,
	0, 915, 0, -2, 835, 841, 0, 850, -2, 0,
	0, 920, 920, 2340, 2340, 915, 0, 0, 0, 0,
	0, 920, 920, 920, 920, 1696, 1533, 72, 920, 0,
	110, 111, 920, 870, 871, 872, 87, 0, 2338, 107,
	920, 921, 1, 3, 93, 97, 0, 0, 0, 80,
	1542, 0, 100, 0, 0, 924, 0, 0, 1674, 920,
	920, 0, 151, 152, 0, 0, 0, 0, 0, 156,
	-2, 188, 189, 190, 0, 195, 640, 557, 609, 555,
	594, -2, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 432, 432, 0, 0,
	-2, 543, 543, 543, 1676, 0, 0, 0, 591, 494,
	432, 432, 432, 0, 432, 432, 432, 432, 0, 0,
	432, 432, 432, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 1560, 194, 1692,
	1689, 1690, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953,
	1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993,
	1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003,
	2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023,
	2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033,
	2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043,
	2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053,
	2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063,
	2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073,
	2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083,
	2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093,
	2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103,
	2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113,
	2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123,
	2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133,
	2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173,
	2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183,
	2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203,
	2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213,
	2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313,
	2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333,
	2334, 2335, 2336, 2337, 0, 1668, 0, 753, 1024, 0,
	916, 917, 0, 824, 824, 0, 824, 824, 824, 824,
	0, 0, 0, 767, 0, 0, 0, 0, 821, 0,
	783, 784, 0, 821, 0, 790, 827, 0, 0, 797,
	824, 824, 800, 2341, 0, 2341, 2341, 0, 0, 1659,
	0, 818, 816, 830, 831, 64, 834, 837, 838, 839,
	840, 843, 0, 854, 857, 1685, 1686, 0, 859, 864,
	883, 884, 0, 67, 1184, 0, 1048, 0, 1059, -2,
	1070, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 0,
	0, 0, 0, 1100, 1101, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 2060, 1504, 0, 0, 1466,
	1466, 1200, 1466, 1466, 1468, 1468, 1468, 1909, 2052, 2061,
	2242, 1870, 1876, 1877, 1878, 2188, 2189, 2190, 2191, 2284,
	2285, 2289, 1973, 1865, 2256, 2257, 0, 2337, 2012, 2020,
	2021, 1997, 2006, 2045, 2150, 2268, 1888, 2040, 2112, 1970,
	1992, 1993, 2131, 2132, 2016, 2017, 1996, 2194, 2196, 2212,
	2213, 2198, 2200, 2209, 2215, 2220, 2199, 2211, 2216, 2229,
	2233, 2236, 2237, 2238, 2206, 2204, 2217, 2221, 2223, 2225,
	2231, 2234, 2207, 2205, 2218, 2222, 2224, 2226, 2232, 2235,
	2193, 2197, 2201, 2210, 2228, 2208, 2227, 2202, 2214, 2219,
	2230, 2203, 2195, 2010, 2013, 2000, 2001, 2003, 2005, 2011,
	2018, 2024, 2002, 2023, 2022, 0, 1998, 1999, 2004, 2015,
	2019, 2007, 2008, 2009, 2014, 2025, 2067, 2066, 2065, 2111,
	2036, 2110, 0, 0, 0, 0, 0, 1859, 1915, 1916,
	2239, 1388, 1389, 1390, 1391, 0, 0, 0, 0, 0,
	0, 0, 321, 322, 1517, 1518, 66, 1183, 1655, 1468,
	1468, 1468, 1468, 1468, 1468, 1122, 1123, 1124, 1125, 1126,
	1152, 1153, 1159, 1160, 2126, 2127, 2128, 2129, 1953, 2279,
	1962, 1963, 2107, 2108, 1975, 1976, 2311, 2312, -2, -2,
	-2, 263, 264, 265, 266, 267, 268, 269, 270, 0,
	1914, 2254, 2255, 259, 0, 1653, 1654, 326, 323, 324,
	325, 1166, 1167, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 290, 291, 292, 293, 294, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 307, 308, 309, 310, 311, 312, 313, 314, 315,
	316, 317, 318, 319, 320, 0, 328, 329, 2340, 0,
	893, 0, 0, 0, 0, 0, 0, 1697, 1698, 1542,
	0, 1534, 1533, 85, 0, 920, -2, 0, 0, 0,
	0, -2, 69, 0, 74, 981, 0, 923, 99, 98,
	1592, 1595, 0, 0, 0, 81, 1543, 89, 91, 1544,
	0, 925, 926, 0, 957, 961, 0, 0, 0, 1675,
	1674, 1674, 127, 0, 0, 128, 148, 149, 150, 0,
	0, 134, 135, 1661, 1662, 65, 0, 0, 206, 207,
	0, 1140, 459, 0, 202, 0, 452, 391, 0, 0,
	0, 985, 191, 192, 193, 432, 432, 432, 606, 0,
	0, 194, 194, 564, 565, 566, 0, 0, -2, 457,
	0, 544, 0, 0, 446, 446, 450, 448, 449, 0,
	0, 0, 0, 0, 0, 0, 0, 583, 0, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 701,
	0, 433, 0, 604, 605, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 1677, 1678, 0, 581, 582, 0,
	0, 0, 432, 432, 0, 0, 0, 0, 432, 432,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 1582,
	0, 0, 183, 184, 1561, 0, -2, 0, 745, 0,
	0, 0, 1670, 1670, 0, 1669, 752, 0, 0, 0,
	757, 0, 0, 758, 0, 821, 821, 819, 820, 760,
	761, 762, 763, 824, 0, 0, 441, 442, 443, 821,
	824, 0, 824, 824, 824, 824, 821, 821, 821, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2341,
	827, 824, 0, 791, 0, 792, 793, 794, 795, 798,
	799, 801, 2342, 2343, 1687, 1688, 1699, 1700, 1701, 1702,
	1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732,
	1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 2341, 2341, 805, 809, 813, 811, 1660,
	836, 842, 844, 845, 0, 0, 855, 858, 877, 71,
	1961, 863, 71, 865, 866, 867, 868, 869, 895, 896,
	901, 0, 0, 0, 0, 907, 908, 909, 0, 0,
	912, 913, 914, 0, 0, 0, 0, 0, 1046, 0,
	0, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 1072, 0,
	0, 0, 1096, 1097, 1098, 1099, 1102, 0, 1113, 0,
	1115, 1513, -2, 0, 0, 0, 1107, 1108, 0, 0,
	0, 1680, 1680, 0, 0, 0, 1505, 0, 0, 1198,
	0, 1199, 1201, 1202, 1203, 0, 1204, 1205, 930, 930,
	930, 930, 930, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 0, 1680, 1680, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	271, 272, 273, 274, 275, 330, 276, 277, 278, 1183,
	0, 0, 920, 0, 68, 885, 886, 0, 1007, 1680,
	0, 0, 936, 0, 1695, 79, 88, 90, 1542, 83,
	1542, 0, 940, 0, 0, -2, -2, 941, 942, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 76, 2339,
	77, 0, 96, 1565, 0, 1560, 1582, 0, 0, 0,
	0, 1672, 1583, 0, 0, 0, 70, 0, 101, 102,
	1643, 1647, 0, 1593, 0, 1596, 0, 0, 0, 405,
	1600, 0, 0, 1535, 1536, 1539, 0, 958, 2058, 962,
	0, 964, 965, 0, 0, 125, 0, 1023, 0, 0,
	0, 136, 0, 138, 139, 0, 0, 0, 416, 1663,
	1664, 1665, -2, 439, 0, 416, 400, 338, 339, 340,
	391, 342, 391, 391, 391, 391, 405, 405, 405, 405,
	373, 374, 375, 376, 377, 0, 391, 0, 359, 391,
	391, 391, 391, 381, 382, 383, 384, 385, 386, 387,
	388, 343, 344, 345, 346, 347, 348, 349, 350, 351,
	393, 393, 393, 393, 393, 397, 397, 0, 1141, 0,
	420, 0, 1539, 0, 0, 1569, 982, 0, 0, 0,
	0, 607, 651, 558, 595, 608, 0, 561, 562, -2,
	0, 0, 543, 0, 545, 0, 440, 0, -2, 0,
	450, 0, 446, 450, 447, 450, 438, 451, 585, 586,
	587, 0, 589, 590, 681, 993, 0, 0, 0, 0,
	0, 687, 688, 689, 0, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 596, 597, 598, 599, 600,
	601, 602, 603, 0, 0, 0, 0, 545, 0, 592,
	0, 0, 496, 497, 498, 0, 0, 501, 502, 503,
	504, 0, 0, 507, 508, 509, 1010, 1011, 510, 511,
	536, 537, 538, 512, 513, 514, 515, 516, 517, 518,
	530, 531, 532, 533, 534, 535, 519, 520, 521, 522,
	523, 524, 527, 0, 176, 1565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 939, 1025, 1693,
	1694, 754, 0, 0, 825, 826, 0, 444, 445, 824,
	824, 764, 806, 0, 824, 768, 807, 769, 771, 770,
	772, 785, 786, 824, 775, 822, 823, 776, 777, 778,
	779, 780, 781, 782, 802, 787, 788, 789, 828, 0,
	832, 833, 803, 804, 0, 814, 0, 0, 0, 848,
	849, 0, 856, 880, 878, 879, 881, 873, 874, 875,
	876, 0, 882, 0, 0, 898, 121, 903, 904, 905,
	906, 918, 911, 1185, 1043, 1044, 1045, 0, 1047, 1053,
	0, 1168, 1170, 1051, 1052, 1055, 0, 0, 0, 1049,
	1060, 1180, 1181, 1182, 0, 0, 0, 0, 0, 1064,
	1068, 1073, 1074, 1075, 1076, 1077, 0, 1078, 0, 1081,
	1082, 1083, 1084, 1085, 1086, 1092, 1481, 1482, 1483, 1111,
	331, 332, 0, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1184, 0, 1681, 0, 0, 0, 1511, 1508,
	0, 0, 0, 1467, 1469, 0, 0, 0, 931, 932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 0, 0, 1484, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 1117, 1118, 1119,
	0, 0, 0, 0, 0, 0, 1246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 168,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1392, 1393, 1394, 1395, 63, 0, 0, 0,
	0, 0, 0, 0, 1515, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1417, 0, 0, 0, 0, 0, 0, 1651, 0,
	0, 888, 889, 891, 0, 1027, 0, 1008, 0, 0,
	894, 0, 935, 0, 938, 82, 84, 944, 945, 0,
	966, 955, 943, 78, 1672, 0, 0, 1672, 1582, 1565,
	1682, 0, 0, 0, 0, 0, 157, 0, 73, 0,
	0, 0, 1594, 1597, 1598, 405, 1620, 0, 414, 414,
	411, 1545, 1546, 0, 1538, 1540, 1541, 103, 963, 959,
	0, 1041, 0, 0, 1022, 0, 969, 971, 972, 973,
	1005, 0, 976, 977, 0, 0, 0, 0, 0, 123,
	1024, 129, 0, 137, 0, 0, 142, 143, 130, 131,
	132, 133, 0, 640, -2, 491, 208, 210, 211, 212,
	203, -2, 403, 401, 402, 341, 405, 405, 367, 368,
	369, 370, 371, 372, 0, 379, 0, 360, 361, 362,
	363, 352, 0, 353, 354, 355, 395, 0, 356, 357,
	0, 358, 458, 0, 1547, 421, 422, 424, 432, 0,
	427, 428, 0, 432, 432, 0, 453, 454, 0, 1539,
	155, 1571, 986, 196, 197, 198, 199, 200, 201, 676,
	0, 0, 652, 674, 675, 194, 0, 0, 204, 547,
	546, 0, 708, 0, 456, 0, 0, 450, 450, 435,
	436, 588, 0, 0, 683, 684, 685, 686, 0, 0,
	0, 574, 485, 0, 575, 576, 545, 547, 0, 0,
	416, 499, 500, 505, 506, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 623, 624, 626, 629,
	631, 549, 635, 637, 0, 625, 628, 630, 632, 549,
	636, 638, 1562, 1563, 1564, 0, 0, 746, 0, 0,
	482, 119, 1671, 751, 755, 756, 821, 774, 808, 821,
	766, 773, 796, 810, 812, 846, 847, 852, 860, 861,
	862, 902, 0, 0, 0, 0, 910, 0, 0, 1054,
	1169, 1171, 1056, 1057, 1058, 1061, 0, 1065, 1069, 0,
	0, 0, 0, 0, 1116, 1114, 1515, 0, 0, 0,
	1165, 0, 0, 1188, 1189, 0, 0, 0, 0, 1509,
	0, 0, 1196, 0, 1470, 1146, 0, 0, 0, 0,
	0, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
	1146, 1533, 1223, 0, 0, 0, 0, 0, 1228, 1229,
	1230, 1146, 0, 1233, 1234, 0, 1236, 0, 1237, 0,
	0, 0, 0, 1244, 1245, 1247, 0, 0, 1250, 1251,
	0, 1253, 0, 1255, 1256, 1257, 1258, 1259, 1260, 0,
	1262, 0, 1264, 1265, 1266, 0, 1268, 0, 1270, 1271,
	0, 1273, 0, 1275, 0, 1278, 0, 1281, 0, 1284,
	0, 1287, 0, 1290, 0, 1293, 0, 1296, 0, 1299,
	0, 1302, 0, 1305, 0, 1308, 0, 1311, 0, 1314,
	0, 1317, 0, 1320, 0, 1323, 1324, 1325, 0, 1327,
	0, 1329, 0, 1332, 1333, 0, 1335, 0, 1338, 0,
	1341, 0, 0, 1342, 0, 0, 0, 1346, 0, 0,
	0, 0, 1355, 1356, 1357, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1369, 1370, 1371, 1372,
	1373, 1374, 0, 1376, 0, 1147, 0, 0, 1147, 0,
	0, 0, 0, 0, 1186, 1680, 0, 1471, 1472, 1473,
	1474, 1475, 0, 0, 0, 0, 0, 0, 1415, 1416,
	1418, 0, 0, 1421, 0, 1423, 0, 1652, 887, 890,
	892, 979, 1028, 1029, 0, 0, 0, 0, 1009, 1679,
	933, 934, 937, 987, 0, 1519, 0, 0, 966, 1041,
	0, 967, 0, 0, 0, 0, 0, 1565, 0, 0,
	1683, 1682, 1682, 1682, 181, 0, 1584, 1585, 1590, 1588,
	1589, 75, 1644, 1648, 1602, 1601, 1614, 1627, 414, 414,
	408, 409, 415, 410, 412, 413, 1537, 0, 1542, 0,
	1641, 0, 920, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 1012, 0, 0, 1015, 0, 0, 0, 0,
	1006, 977, 0, 978, 0, -2, 0, 0, 117, 118,
	0, 0, 0, 140, 141, 0, 0, 147, 417, 418,
	185, 194, 493, 209, 466, 0, 0, 337, 404, 364,
	365, 366, 0, 389, 0, 0, 0, 0, 487, 154,
	1551, 1550, 432, 432, 423, 0, 426, 0, 0, 0,
	1684, 392, 455, 0, 1572, 1573, 646, 0, 0, 653,
	0, 0, 0, 556, 0, 567, 568, 0, 680, -2,
	742, 420, 0, 434, 437, 994, 0, 0, 569, 0,
	572, 573, 486, 547, 578, 579, 593, 580, 528, 529,
	526, 0, 158, 614, 616, 620, 615, 619, 0, 0,
	0, 551, 0, 639, 551, 612, 0, 482, 1547, 0,
	750, 483, 484, 824, 824, 897, 122, 0, 900, 0,
	0, 0, 0, 1062, 1066, 1079, 1080, 1476, 1502, 391,
	391, 1489, 391, 397, 1492, 391, 1494, 391, 1497, 391,
	1500, 1501, 0, 0, 1109, 0, 0, 0, 0, 1195,
	1512, 0, 0, 1206, 1145, 1146, 1146, 1146, 1146, 1146,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1506, 0, 0, 0, 1227, 0, 0, 1231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 170, 0,
	0, 0, 0, 0, 0, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1140, 1144, 0,
	1148, 1149, 0, 0, 1378, 0, 0, 1396, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1030, 1037, 0, 1037,
	0, 1037, 0, 0, 0, 1666, 1667, 1520, 1521, 1041,
	1522, 956, 968, 0, 173, 1566, 1567, 1568, 172, 0,
	0, 0, 0, 0, 0, 1673, 0, 1587, 1591, 1620,
	0, 1613, 0, -2, 1622, 0, 0, 0, 1628, 406,
	407, 960, 104, 1042, 108, 0, 1641, 1656, 0, 1638,
	1645, 1649, 0, 0, 0, 1634, 0, 1041, 970, 1001,
	1003, 0, 998, 1013, 1014, 1016, 0, 1018, 0, 1020,
	1021, 981, 975, 0, 125, 0, 1041, 1041, 124, 0,
	1026, 144, 145, 146, 492, 213, 218, 0, 0, 0,
	223, 0, 225, 0, 0, 0, 230, 231, 432, 432,
	467, 0, 334, 336, 0, 0, 216, 405, 0, 405,
	0, 396, 398, 0, 468, 488, 1548, 1549, 0, 0,
	425, 429, 430, 431, 0, 649, 0, 677, 0, 0,
	0, 0, 0, 0, 205, 548, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 0, 432, 0, 0, 0,
	432, 432, 432, 0, 734, 419, 0, 0, 705, 702,
	570, 0, 249, 250, 257, 258, 260, 0, 0, 0,
	0, 0, 577, 981, 161, 0, 0, 0, 0, 622,
	627, 633, 0, 550, 634, 747, 748, 749, 120, 759,
	765, 899, 919, 1050, 1063, 1067, 0, 0, 0, 0,
	1503, 1487, 405, 1490, 1491, 1493, 1495, 1496, 1498, 1499,
	1105, 1106, 1110, 0, 1192, 0, 1194, 0, 1510, 0,
	1207, 1208, 1209, 1210, 1211, 1542, 0, 0, 0, 1226,
	0, 0, 1146, 0, 1239, 1238, 1240, 0, 1242, 1243,
	1248, 1249, 1252, 1254, 1261, 1263, 1267, 1269, 1272, 1274,
	1276, 0, 1279, 0, 1282, 0, 1285, 0, 1288, 0,
	1291, 0, 1294, 0, 1297, 0, 1300, 0, 1303, 0,
	1306, 0, 1309, 0, 1312, 0, 1315, 0, 1318, 0,
	1321, 0, 1326, 1328, 0, 1331, 1334, 1336, 0, 1339,
	0, 1343, 0, 1345, 1347, 1348, 0, 0, 0, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1375,
	0, 1138, 1377, 1150, 1151, 1156, 1380, 0, 0, 0,
	1383, 0, 0, 0, 1387, 1187, 1398, 0, 1403, 0,
	0, 1409, 0, 1413, 0, 1419, 1420, 1422, 1424, 0,
	0, 0, 0, 0, 0, 0, 1007, 988, 86, 1522,
	1526, 0, 1574, 0, 175, 177, 0, 0, 0, 1586,
	1607, 1605, 1605, 1615, 1616, 0, 0, 1623, 0, 0,
	0, 0, 109, 0, 0, 1629, 0, 0, 1650, 0,
	0, 0, 0, 126, 1533, 995, 1002, 0, 0, 996,
	0, 997, 1017, 1019, 974, 0, 1041, 1041, 115, 116,
	0, 219, 0, 221, 0, 224, 226, 227, 228, 234,
	235, 236, 237, 229, 0, 0, 333, 335, 0, 0,
	378, 390, 380, 0, 0, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1570, 641, 0, 651, 0, 983, 0,
	644, 0, 559, 0, 0, 0, 432, 432, 432, 0,
	0, 0, 0, 719, 0, 0, 682, 0, 690, 0,
	0, 0, 261, 262, 0, 613, 0, 159, 160, 0,
	0, 618, 552, 553, 1103, 0, 0, 0, 1104, 1488,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	1232, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 0, 0, 0, 671, 672,
	0, 1427, 1143, 1533, 0, 1147, 1157, 1158, 0, 1147,
	1397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1038, 0, 0, 0, 989, 990, 0, 0,
	0, 1027, 1526, 1531, 0, 0, 0, 1575, 1576, 0,
	1579, 1580, 1581, 174, 178, 179, 180, 1610, 0, 1603,
	1606, 1604, 1617, 0, 0, 1624, 0, 1626, 0, 1657,
	1658, 1646, 1639, 920, 1633, 1636, 1638, 1635, 1542, 999,
	0, 1004, 0, 1533, 114, 0, 222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 233,
	0, 0, 394, 399, 0, 0, 642, 0, 984, 654,
	645, 0, 732, 0, 736, 0, 0, 0, 739, 740,
	741, 718, 0, 722, 460, 706, 703, 704, 571, 0,
	162, 163, 0, 0, 0, 1477, 0, 1480, 1190, 1193,
	1191, 0, 1222, 1224, 1225, 1485, 1486, 1241, 1277, 1280,
	1283, 1286, 1289, 1292, 1295, 1298, 1301, 1304, 1307, 1310,
	1313, 1316, 1319, 1322, 1330, 1337, 1340, 1344, 1349, 0,
	1352, 0, 0, 1353, 0, 673, 1134, 0, 0, 1154,
	1155, 0, 1382, 1384, 1385, 1386, 1399, 0, 1404, 1405,
	0, 1410, 0, 1414, 1425, 0, 1032, 1039, 1040, 0,
	1035, 0, 1036, 0, 980, 1531, 106, 1532, 1529, 0,
	1527, 1524, 71, 0, 0, 1599, 0, 1608, 1609, 1618,
	1619, 1625, 0, 0, 1638, 0, 1632, 112, 0, 0,
	0, 1542, 220, 0, 240, 650, 0, 653, 643, 730,
	731, 0, 743, 735, 737, 738, 720, -2, 1569, 0,
	0, 0, 621, 1478, 0, 0, 1354, 0, 669, 670,
	1142, 1135, 0, 1120, 1121, 1139, 1379, 1381, 0, 0,
	0, 1031, 991, 992, 1033, 1034, 105, 0, 1528, 1162,
	0, 1523, 0, 171, 50, 51, 42, -2, 0, 0,
	1577, 1578, 1611, 1612, 1642, 0, 1631, 1637, 1000, 1007,
	0, 113, 473, 466, 0, 0, 0, 723, 724, 725,
	726, 727, 728, 729, 610, 164, 165, 0, 540, 541,
	542, 158, 0, 1197, 1350, 1136, 0, 0, 0, 0,
	0, 1400, 0, 1406, 0, 1411, 0, 1530, 0, 0,
	1525, 49, 0, -2, 54, 0, 0, 0, 1640, 655,
	0, 657, 0, -2, 461, 474, 0, 214, 241, 242,
	0, 0, 245, 0, 247, 248, 238, 239, 0, 0,
	744, 0, 161, 0, 0, 1127, 1128, 1129, 1130, 1132,
	0, 0, 0, 0, 1163, 1140, 43, 55, 71, 46,
	656, 0, 0, 416, 0, 666, 462, 463, 0, 469,
	470, 471, 472, 243, 244, 246, 678, 0, 539, 617,
	1479, 0, 0, 1401, 0, 1407, 0, 1412, 0, -2,
	45, 0, 658, 659, 667, 0, 464, 0, 465, 0,
	0, 0, 647, 0, 678, 1137, 1131, 1133, 0, 0,
	1161, 56, 59, 61, 0, 0, 48, 0, 668, 664,
	475, 477, 478, 0, 0, 476, 679, 648, 1402, 1408,
	0, 71, 60, 0, 0, 0, 479, 480, 481, 0,
	-2, 71, 47, 660, 44, -2, 661, 662, 663,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 187, 179, 3,
	95, 97, 184, 182, 96, 183, 237, 185, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 760,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 189, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 190,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 180,
	181, 186, 188, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 58083, 758, 58084, 759,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:665
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:670
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:674
		{
			setParseTree(yylex, nil)
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:680
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:721
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:725
		{
			yyLOCAL = &BeginEndStatement{Statements: yyDollar[2].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:729
		{
			yyLOCAL = &IfStatement{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion(), ElseIfBlocks: yyDollar[5].elseIfsUnion(), ElseStatements: yyDollar[6].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:733
		{
			yyDollar[3].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			yyLOCAL = &DeclareVar{VarNames: yyDollar[2].columnsUnion(), Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:739
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:743
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:747
		{
			yyLOCAL = &ColumnTypeOptions{Default: yyDollar[2].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:753
		{
			yyLOCAL = yyDollar[1].compoundStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:762
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:766
		{
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:772
		{
			yyLOCAL = CompoundStatements{yyDollar[1].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:776
		{
			yySLICE := (*CompoundStatements)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].compoundStatementUnion())
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:785
		{
			yyLOCAL = yyDollar[2].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:794
		{
			yyLOCAL = yyDollar[1].elseIfsUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:800
		{
			yySLICE := (*[]*ElseIfBlock)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].elseIfUnion())
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:804
		{
			yyLOCAL = []*ElseIfBlock{yyDollar[1].elseIfUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ElseIfBlock
//line sql.y:810
		{
			yyLOCAL = &ElseIfBlock{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:816
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:828
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:832
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:838
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:850
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:854
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:869
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:873
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:879
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:885
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:889
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:893
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:916
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:922
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:927
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:933
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:940
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:946
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:957
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:963
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:967
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:971
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:975
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:979
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:985
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:989
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:994
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:998
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1004
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1008
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1013
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1019
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1025
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1032
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1036
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1042
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1048
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1056
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1060
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1064
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1070
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1082
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1094
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1098
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1104
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1110
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1114
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1118
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1122
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1127
		{
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1132
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1142
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1146
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1152
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1165
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1171
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1177
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1181
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1187
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1191
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1195
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1199
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1205
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), NoScope)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1209
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1213
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1219
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1223
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1229
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1239
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1243
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1247
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1253
		{
			yyVAL.str = RepeatableReadStr
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1257
		{
			yyVAL.str = ReadCommittedStr
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.str = SerializableStr
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1271
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1275
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1279
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1285
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1291
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1298
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1302
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1311
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1318
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1326
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1331
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1341
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1346
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1351
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1357
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1368
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1377
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1383
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1387
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1399
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Statement: yyDollar[10].compoundStatementUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1406
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1422
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1426
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1430
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1437
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1444
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1449
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1454
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1459
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1466
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1473
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1484
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1495
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1501
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1505
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1509
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1513
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1527
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1531
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1537
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1541
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1547
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1551
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1557
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1567
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1571
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1577
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1581
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1587
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1592
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1601
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1625
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1634
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = ""
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = ""
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1656
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1660
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1665
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1670
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1675
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1681
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1686
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1691
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1696
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1705
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1714
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1719
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1724
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1729
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 233:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1733
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1739
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1743
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1747
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1751
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1757
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1761
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1766
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1770
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1775
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1780
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1785
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1790
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1795
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1800
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1805
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1812
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1819
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1823
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1827
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1831
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1835
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1839
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1849
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1856
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1860
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1866
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1870
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1874
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1878
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1882
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1886
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1890
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1894
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1898
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1902
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1906
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1910
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1914
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1919
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1923
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1927
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = Armscii8Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = ASCIIStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = Big5Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.str = UBinaryStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.str = Cp1250Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.str = Cp1251Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1957
		{
			yyVAL.str = Cp1256Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1961
		{
			yyVAL.str = Cp1257Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.str = Cp850Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.str = Cp852Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.str = Cp866Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.str = Cp932Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.str = Dec8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = EucjpmsStr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = EuckrStr
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = Gb18030Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = Gb2312Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = GbkStr
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = Geostd8Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = GreekStr
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = HebrewStr
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = Hp8Str
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = Keybcs2Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = Koi8rStr
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = Koi8uStr
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = Latin1Str
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = Latin2Str
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.str = Latin5Str
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.str = Latin7Str
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.str = MacceStr
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = MacromanStr
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = SjisStr
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = Swe7Str
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = Tis620Str
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = Ucs2Str
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = UjisStr
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = Utf16Str
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = Utf16leStr
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = Utf32Str
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = Utf8mb3Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = Utf8mb4Str
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = Utf8mb3Str
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2107
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2111
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2115
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2121
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2125
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2131
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2135
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2139
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2145
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2149
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2155
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2159
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2163
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2167
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2239
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2245
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2251
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2257
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2263
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2281
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2289
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2293
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2309
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2357
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2366
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2411
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2420
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2425
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2429
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2449
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2459
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2467
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2471
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2475
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2480
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2493
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2497
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2501
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2505
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2525
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = ""
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2554
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2563
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2569
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2579
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2583
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2588
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2592
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2596
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2600
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2604
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2608
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2614
		{
			yyVAL.str = ""
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2624
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2628
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2632
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2636
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2640
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2645
		{
			yyVAL.str = ""
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = yyDollar[2].str
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = ""
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = yyDollar[1].str
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = ""
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2707
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2711
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2717
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2721
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2727
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2731
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2737
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2741
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2747
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2753
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2757
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2761
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2765
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2769
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2778
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2784
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2790
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2796
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2800
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2804
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2809
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2813
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2819
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2825
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2831
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2835
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2839
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2843
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2847
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2870
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2875
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2879
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2888
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2894
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2898
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2902
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2908
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2918
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2922
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2926
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2930
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2934
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2938
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2942
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2946
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2950
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2954
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2958
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2962
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2966
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2970
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2974
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2978
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2982
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2986
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2990
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2994
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2998
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3002
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3006
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3010
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3014
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3018
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3022
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3026
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3030
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3034
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3038
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3043
		{
			yyVAL.str = ""
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3082
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3087
		{
			yyVAL.str = ""
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3093
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3097
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3106
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3111
		{
			yyVAL.str = ""
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3115
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3124
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3128
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3137
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3141
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3145
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3153
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3159
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3167
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3173
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3177
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3181
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3185
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3189
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3193
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3197
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3201
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3205
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3209
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3213
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3217
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3221
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3225
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3229
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3233
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3237
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3241
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3245
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3249
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3253
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3257
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3261
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3265
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3269
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3273
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3277
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3281
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3285
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3289
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3293
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3299
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3309
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3313
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3317
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3321
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3325
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3329
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3333
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3337
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3341
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3345
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3358
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3378
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3388
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3428
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3432
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3445
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3474
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3488
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3501
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3508
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3516
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3522
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3529
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3578
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3604
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3613
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3621
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3630
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3637
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3645
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3649
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3658
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3673
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3687
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3691
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3697
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3703
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3709
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3713
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3719
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3723
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3729
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3735
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3741
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3747
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3753
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3757
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3765
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3771
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3777
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3783
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3787
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3791
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3797
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3801
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3806
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3810
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3815
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3819
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3825
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3829
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3833
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3837
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3841
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3845
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3849
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3853
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3857
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3861
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3865
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3869
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3873
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3877
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3881
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3885
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3889
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3893
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3897
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3901
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3905
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3909
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3914
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3918
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3922
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3928
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3938
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3943
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3947
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3952
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3957
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3962
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3967
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3972
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3977
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3982
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3987
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3993
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3999
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:4009
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4014
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4018
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4023
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4028
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4033
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4038
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4043
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4048
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4055
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4062
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4069
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4077
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4081
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4087
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4093
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4099
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4105
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4111
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4117
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4129
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4139
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4151
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4155
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 748:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4174
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4178
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4200
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4204
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4222
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4250
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4254
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4258
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4262
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4266
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4270
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4274
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4278
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4282
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4322
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4326
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4330
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4334
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4338
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4342
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4346
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4358
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4362
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4366
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4370
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4374
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4378
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4382
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4393
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4409
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4413
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4417
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4421
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4425
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4429
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4433
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4438
		{
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = ""
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = "extended "
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4454
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4458
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4474
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4478
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4492
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4496
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4506
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4512
		{
			yyVAL.empty = struct{}{}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.empty = struct{}{}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4520
		{
			yyVAL.empty = struct{}{}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4536
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4540
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4544
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4574
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4583
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4589
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4593
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4599
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4603
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4607
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4614
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4620
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4624
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4629
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.empty = struct{}{}
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4634
		{
			yyVAL.empty = struct{}{}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.empty = struct{}{}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4640
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4646
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4651
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4655
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4659
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4663
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4667
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4672
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4676
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4680
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4684
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4688
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4692
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = yyDollar[1].str
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = yyDollar[1].str
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = yyDollar[1].str
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4712
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4716
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4720
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4724
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4729
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4743
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4747
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4753
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4759
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4763
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4769
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4775
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4785
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4791
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4795
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4799
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4803
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4809
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4815
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4821
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4825
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4829
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4833
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4837
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4841
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4857
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4861
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4869
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4889
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4906
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4910
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4928
		{
			setAllowComments(yylex, true)
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4932
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4938
		{
			yyVAL.strs = nil
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4942
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4948
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4961
		{
			yyVAL.str = ""
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.str = SQLCacheStr
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4974
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4978
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4982
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4988
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4992
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5002
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5011
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5017
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5021
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5026
		{
			yyVAL.strs = nil
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5030
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5040
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = SQLCacheStr
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5054
		{
			yyVAL.str = DistinctStr
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.str = DistinctStr
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.str = HighPriorityStr
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.str = StraightJoinHint
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5078
		{
			yyVAL.str = SQLBigResultStr
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5082
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5086
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5092
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5096
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5104
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5108
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5112
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5116
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5121
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5125
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5136
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5141
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5145
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5151
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5157
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5161
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5171
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5175
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5179
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5183
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5189
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5193
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5199
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5203
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5208
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5212
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5221
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5227
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5231
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5237
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5241
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5247
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5251
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5255
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5259
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5265
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5269
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5282
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5286
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5290
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5294
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5300
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5302
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5306
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5308
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5312
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5314
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5317
		{
			yyVAL.empty = struct{}{}
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.empty = struct{}{}
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5322
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5330
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5337
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5343
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5347
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5351
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5357
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5363
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5367
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5371
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5375
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5381
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5385
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5395
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5399
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5409
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5415
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5424
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5430
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5434
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5440
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5444
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5448
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5452
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5456
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5460
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5465
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5469
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5473
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5477
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5498
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5502
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5528
		{
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5531
		{
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5548
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5566
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5570
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5574
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5606
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5612
		{
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5615
		{
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5621
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5629
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5633
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5637
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5669
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5673
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5683
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5699
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5703
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5719
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5727
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5731
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5759
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5789
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5793
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5799
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5803
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5809
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5813
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5817
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5823
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5827
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5834
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5838
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5842
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5846
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5850
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5856
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5860
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5864
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5868
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5872
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5876
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5880
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5889
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5895
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5899
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5904
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5908
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5913
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5917
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5923
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5929
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5933
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5939
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5948
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5955
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5961
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5965
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5971
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5975
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5981
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5985
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5997
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6003
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:6007
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:6013
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6019
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6023
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6029
		{
			yyVAL.str = ""
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6033
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6039
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6043
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6050
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6054
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6058
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6062
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6068
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6072
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6078
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6082
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6086
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6090
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6094
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6098
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6104
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6108
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6112
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6119
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6125
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6129
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6684
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6688
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6692
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6696
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6700
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6704
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6708
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6744
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6748
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6752
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6756
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6812
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6824
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6828
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6832
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6836
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6840
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6876
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6880
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6884
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6888
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6892
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6896
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6900
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6904
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6908
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6912
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6916
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6920
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6924
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6928
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6932
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6936
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6940
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6944
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6948
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6952
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6956
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6960
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6970
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6974
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6978
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6982
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6991
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6997
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7001
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7005
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7009
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7013
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7018
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7022
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7026
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7030
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7034
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7038
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7043
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7047
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7051
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7055
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7062
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7066
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7072
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7076
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7080
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7084
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7090
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7094
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7098
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7102
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7106
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7110
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7114
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7123
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7129
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7133
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7137
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7141
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7145
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7149
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7153
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7157
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7161
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7165
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7169
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7173
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7177
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7181
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7185
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7189
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7193
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7197
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7201
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7205
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7211
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7215
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7219
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7223
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7227
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7231
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7235
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7239
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7243
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7247
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7251
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7255
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7259
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7263
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7267
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7271
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7275
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7279
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7289
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7293
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7297
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7307
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7311
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7315
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7319
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7323
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7329
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7333
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7337
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7341
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7345
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7351
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7355
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7359
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7369
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7373
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7379
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7383
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7387
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7391
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7395
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7401
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7405
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7409
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7413
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7417
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7421
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7425
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7429
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7437
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7443
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7447
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7456
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7461
		{
			yyVAL.str = string("")
		}
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7465
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7471
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7475
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7481
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7490
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7496
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7500
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7504
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7508
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7514
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7518
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7524
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7533
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7537
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7546
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7551
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7555
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7565
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7571
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7577
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7581
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7590
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7599
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7605
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7611
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7615
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7621
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7626
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7630
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7634
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7643
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7649
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7653
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7657
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7666
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7670
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7674
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7678
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7685
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7689
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7693
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7697
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7703
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7707
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7711
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7715
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7720
		{
			yyVAL.str = ""
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7727
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7731
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7735
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7740
		{
			yyVAL.str = ""
		}
	case 1566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7744
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7750
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7754
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7759
		{
			yyVAL.str = ""
		}
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7763
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7768
		{
			yyVAL.str = "cascaded"
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7772
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7776
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7785
		{
			yyLOCAL = yyDollar[1].procParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7791
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7795
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:7801
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7807
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7811
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7815
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7827
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7833
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7839
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7845
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7854
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7858
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7863
		{
			yyVAL.str = ""
		}
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7867
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7873
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7877
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7881
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7885
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7889
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7893
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7897
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7903
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7907
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7911
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7916
		{
			yyVAL.str = ""
		}
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7920
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7924
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7929
		{
			yyVAL.str = ""
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7933
		{
			yyVAL.str = " header"
		}
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7938
		{
			yyVAL.str = ""
		}
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7942
		{
			yyVAL.str = " manifest on"
		}
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7946
		{
			yyVAL.str = " manifest off"
		}
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7951
		{
			yyVAL.str = ""
		}
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7955
		{
			yyVAL.str = " overwrite on"
		}
	case 1612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7959
		{
			yyVAL.str = " overwrite off"
		}
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7965
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7970
		{
			yyVAL.str = ""
		}
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7974
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7980
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7984
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7990
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7994
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7999
		{
			yyVAL.str = ""
		}
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8003
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8009
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8013
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8019
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8023
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8027
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8032
		{
			yyVAL.str = ""
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8036
		{
			yyVAL.str = " optionally"
		}
	case 1629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8049
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8053
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8057
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8061
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8065
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8071
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8075
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8079
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8083
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8092
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8096
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8105
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8111
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8115
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8121
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8125
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8131
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8135
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8141
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8145
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8151
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8157
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8167
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8177
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8181
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8187
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8194
		{
			yyVAL.str = "charset"
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8204
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8208
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8212
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8221
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8223
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8226
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8228
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8231
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8233
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8236
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8241
		{
			yyVAL.empty = struct{}{}
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8243
		{
			yyVAL.empty = struct{}{}
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8245
		{
			yyVAL.empty = struct{}{}
		}
	case 1679:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8249
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8254
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8258
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8265
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8269
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8275
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8279
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8286
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8292
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8296
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8302
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8306
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8313
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8319
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8325
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8329
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8333
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9001
		{
		}
	case 2339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9006
		{
		}
	case 2340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9010
		{
			skipToEnd(yylex)
		}
	case 2341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9015
		{
			skipToEnd(yylex)
		}
	case 2342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9019
		{
			skipToEnd(yylex)
		}
	case 2343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9023
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
