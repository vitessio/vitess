// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const SCHEMA = 57561
const TABLE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const KEY_BLOCK_SIZE = 57572
const CHECK = 57573
const INDEXES = 57574
const ACTION = 57575
const CASCADE = 57576
const CONSTRAINT = 57577
const FOREIGN = 57578
const NO = 57579
const REFERENCES = 57580
const RESTRICT = 57581
const SHOW = 57582
const DESCRIBE = 57583
const EXPLAIN = 57584
const DATE = 57585
const ESCAPE = 57586
const REPAIR = 57587
const OPTIMIZE = 57588
const TRUNCATE = 57589
const COALESCE = 57590
const EXCHANGE = 57591
const REBUILD = 57592
const PARTITIONING = 57593
const REMOVE = 57594
const PREPARE = 57595
const EXECUTE = 57596
const MAXVALUE = 57597
const PARTITION = 57598
const REORGANIZE = 57599
const LESS = 57600
const THAN = 57601
const PROCEDURE = 57602
const TRIGGER = 57603
const VINDEX = 57604
const VINDEXES = 57605
const DIRECTORY = 57606
const NAME = 57607
const UPGRADE = 57608
const STATUS = 57609
const VARIABLES = 57610
const WARNINGS = 57611
const CASCADED = 57612
const DEFINER = 57613
const OPTION = 57614
const SQL = 57615
const UNDEFINED = 57616
const SEQUENCE = 57617
const MERGE = 57618
const TEMPORARY = 57619
const TEMPTABLE = 57620
const INVOKER = 57621
const SECURITY = 57622
const FIRST = 57623
const AFTER = 57624
const LAST = 57625
const VITESS_MIGRATION = 57626
const CANCEL = 57627
const RETRY = 57628
const LAUNCH = 57629
const COMPLETE = 57630
const CLEANUP = 57631
const THROTTLE = 57632
const UNTHROTTLE = 57633
const EXPIRE = 57634
const RATIO = 57635
const VITESS_THROTTLER = 57636
const BEGIN = 57637
const START = 57638
const TRANSACTION = 57639
const COMMIT = 57640
const ROLLBACK = 57641
const SAVEPOINT = 57642
const RELEASE = 57643
const WORK = 57644
const BIT = 57645
const TINYINT = 57646
const SMALLINT = 57647
const MEDIUMINT = 57648
const INT = 57649
const INTEGER = 57650
const BIGINT = 57651
const INTNUM = 57652
const REAL = 57653
const DOUBLE = 57654
const FLOAT_TYPE = 57655
const DECIMAL_TYPE = 57656
const NUMERIC = 57657
const TIME = 57658
const TIMESTAMP = 57659
const DATETIME = 57660
const YEAR = 57661
const CHAR = 57662
const VARCHAR = 57663
const BOOL = 57664
const CHARACTER = 57665
const VARBINARY = 57666
const NCHAR = 57667
const TEXT = 57668
const TINYTEXT = 57669
const MEDIUMTEXT = 57670
const LONGTEXT = 57671
const BLOB = 57672
const TINYBLOB = 57673
const MEDIUMBLOB = 57674
const LONGBLOB = 57675
const JSON = 57676
const JSON_SCHEMA_VALID = 57677
const JSON_SCHEMA_VALIDATION_REPORT = 57678
const ENUM = 57679
const GEOMETRY = 57680
const POINT = 57681
const LINESTRING = 57682
const POLYGON = 57683
const GEOMCOLLECTION = 57684
const GEOMETRYCOLLECTION = 57685
const MULTIPOINT = 57686
const MULTILINESTRING = 57687
const MULTIPOLYGON = 57688
const ASCII = 57689
const UNICODE = 57690
const NULLX = 57691
const AUTO_INCREMENT = 57692
const APPROXNUM = 57693
const SIGNED = 57694
const UNSIGNED = 57695
const ZEROFILL = 57696
const CODE = 57697
const COLLATION = 57698
const COLUMNS = 57699
const DATABASES = 57700
const ENGINES = 57701
const EVENT = 57702
const EXTENDED = 57703
const FIELDS = 57704
const FULL = 57705
const FUNCTION = 57706
const GTID_EXECUTED = 57707
const KEYSPACES = 57708
const OPEN = 57709
const PLUGINS = 57710
const PRIVILEGES = 57711
const PROCESSLIST = 57712
const SCHEMAS = 57713
const TABLES = 57714
const TRIGGERS = 57715
const USER = 57716
const VGTID_EXECUTED = 57717
const VITESS_KEYSPACES = 57718
const VITESS_METADATA = 57719
const VITESS_MIGRATIONS = 57720
const VITESS_REPLICATION_STATUS = 57721
const VITESS_SHARDS = 57722
const VITESS_TABLETS = 57723
const VITESS_TARGET = 57724
const VSCHEMA = 57725
const VITESS_THROTTLED_APPS = 57726
const NAMES = 57727
const GLOBAL = 57728
const SESSION = 57729
const ISOLATION = 57730
const LEVEL = 57731
const READ = 57732
const WRITE = 57733
const ONLY = 57734
const REPEATABLE = 57735
const COMMITTED = 57736
const UNCOMMITTED = 57737
const SERIALIZABLE = 57738
const CURRENT_TIMESTAMP = 57739
const DATABASE = 57740
const CURRENT_DATE = 57741
const NOW = 57742
const CURRENT_TIME = 57743
const LOCALTIME = 57744
const LOCALTIMESTAMP = 57745
const CURRENT_USER = 57746
const UTC_DATE = 57747
const UTC_TIME = 57748
const UTC_TIMESTAMP = 57749
const DAY = 57750
const DAY_HOUR = 57751
const DAY_MICROSECOND = 57752
const DAY_MINUTE = 57753
const DAY_SECOND = 57754
const HOUR = 57755
const HOUR_MICROSECOND = 57756
const HOUR_MINUTE = 57757
const HOUR_SECOND = 57758
const MICROSECOND = 57759
const MINUTE = 57760
const MINUTE_MICROSECOND = 57761
const MINUTE_SECOND = 57762
const MONTH = 57763
const QUARTER = 57764
const SECOND = 57765
const SECOND_MICROSECOND = 57766
const YEAR_MONTH = 57767
const WEEK = 57768
const REPLACE = 57769
const CONVERT = 57770
const CAST = 57771
const SUBSTR = 57772
const SUBSTRING = 57773
const SEPARATOR = 57774
const TIMESTAMPADD = 57775
const TIMESTAMPDIFF = 57776
const WEIGHT_STRING = 57777
const LTRIM = 57778
const RTRIM = 57779
const TRIM = 57780
const JSON_ARRAY = 57781
const JSON_OBJECT = 57782
const JSON_QUOTE = 57783
const JSON_DEPTH = 57784
const JSON_TYPE = 57785
const JSON_LENGTH = 57786
const JSON_VALID = 57787
const JSON_ARRAY_APPEND = 57788
const JSON_ARRAY_INSERT = 57789
const JSON_INSERT = 57790
const JSON_MERGE = 57791
const JSON_MERGE_PATCH = 57792
const JSON_MERGE_PRESERVE = 57793
const JSON_REMOVE = 57794
const JSON_REPLACE = 57795
const JSON_SET = 57796
const JSON_UNQUOTE = 57797
const COUNT = 57798
const AVG = 57799
const MAX = 57800
const MIN = 57801
const SUM = 57802
const GROUP_CONCAT = 57803
const BIT_AND = 57804
const BIT_OR = 57805
const BIT_XOR = 57806
const STD = 57807
const STDDEV = 57808
const STDDEV_POP = 57809
const STDDEV_SAMP = 57810
const VAR_POP = 57811
const VAR_SAMP = 57812
const VARIANCE = 57813
const REGEXP_INSTR = 57814
const REGEXP_LIKE = 57815
const REGEXP_REPLACE = 57816
const REGEXP_SUBSTR = 57817
const ExtractValue = 57818
const UpdateXML = 57819
const GET_LOCK = 57820
const RELEASE_LOCK = 57821
const RELEASE_ALL_LOCKS = 57822
const IS_FREE_LOCK = 57823
const IS_USED_LOCK = 57824
const LOCATE = 57825
const POSITION = 57826
const MATCH = 57827
const AGAINST = 57828
const BOOLEAN = 57829
const LANGUAGE = 57830
const WITH = 57831
const QUERY = 57832
const EXPANSION = 57833
const WITHOUT = 57834
const VALIDATION = 57835
const UNUSED = 57836
const ARRAY = 57837
const BYTE = 57838
const CUME_DIST = 57839
const DESCRIPTION = 57840
const DENSE_RANK = 57841
const EMPTY = 57842
const EXCEPT = 57843
const FIRST_VALUE = 57844
const GROUPING = 57845
const GROUPS = 57846
const JSON_TABLE = 57847
const LAG = 57848
const LAST_VALUE = 57849
const LATERAL = 57850
const LEAD = 57851
const NTH_VALUE = 57852
const NTILE = 57853
const OF = 57854
const OVER = 57855
const PERCENT_RANK = 57856
const RANK = 57857
const RECURSIVE = 57858
const ROW_NUMBER = 57859
const SYSTEM = 57860
const WINDOW = 57861
const ACTIVE = 57862
const ADMIN = 57863
const AUTOEXTEND_SIZE = 57864
const BUCKETS = 57865
const CLONE = 57866
const COLUMN_FORMAT = 57867
const COMPONENT = 57868
const DEFINITION = 57869
const ENFORCED = 57870
const ENGINE_ATTRIBUTE = 57871
const EXCLUDE = 57872
const FOLLOWING = 57873
const GET_MASTER_PUBLIC_KEY = 57874
const HISTOGRAM = 57875
const HISTORY = 57876
const INACTIVE = 57877
const INVISIBLE = 57878
const LOCKED = 57879
const MASTER_COMPRESSION_ALGORITHMS = 57880
const MASTER_PUBLIC_KEY_PATH = 57881
const MASTER_TLS_CIPHERSUITES = 57882
const MASTER_ZSTD_COMPRESSION_LEVEL = 57883
const NESTED = 57884
const NETWORK_NAMESPACE = 57885
const NOWAIT = 57886
const NULLS = 57887
const OJ = 57888
const OLD = 57889
const OPTIONAL = 57890
const ORDINALITY = 57891
const ORGANIZATION = 57892
const OTHERS = 57893
const PARTIAL = 57894
const PATH = 57895
const PERSIST = 57896
const PERSIST_ONLY = 57897
const PRECEDING = 57898
const PRIVILEGE_CHECKS_USER = 57899
const PROCESS = 57900
const RANDOM = 57901
const REFERENCE = 57902
const REQUIRE_ROW_FORMAT = 57903
const RESOURCE = 57904
const RESPECT = 57905
const RESTART = 57906
const RETAIN = 57907
const REUSE = 57908
const ROLE = 57909
const SECONDARY = 57910
const SECONDARY_ENGINE = 57911
const SECONDARY_ENGINE_ATTRIBUTE = 57912
const SECONDARY_LOAD = 57913
const SECONDARY_UNLOAD = 57914
const SIMPLE = 57915
const SKIP = 57916
const SRID = 57917
const THREAD_PRIORITY = 57918
const TIES = 57919
const UNBOUNDED = 57920
const VCPU = 57921
const VISIBLE = 57922
const RETURNING = 57923
const FORMAT_BYTES = 57924
const FORMAT_PICO_TIME = 57925
const PS_CURRENT_THREAD_ID = 57926
const PS_THREAD_ID = 57927
const GTID_SUBSET = 57928
const GTID_SUBTRACT = 57929
const WAIT_FOR_EXECUTED_GTID_SET = 57930
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57931
const FORMAT = 57932
const TREE = 57933
const VITESS = 57934
const TRADITIONAL = 57935
const VTEXPLAIN = 57936
const LOCAL = 57937
const LOW_PRIORITY = 57938
const NO_WRITE_TO_BINLOG = 57939
const LOGS = 57940
const ERROR = 57941
const GENERAL = 57942
const HOSTS = 57943
const OPTIMIZER_COSTS = 57944
const USER_RESOURCES = 57945
const SLOW = 57946
const CHANNEL = 57947
const RELAY = 57948
const EXPORT = 57949
const CURRENT = 57950
const ROW = 57951
const ROWS = 57952
const AVG_ROW_LENGTH = 57953
const CONNECTION = 57954
const CHECKSUM = 57955
const DELAY_KEY_WRITE = 57956
const ENCRYPTION = 57957
const ENGINE = 57958
const INSERT_METHOD = 57959
const MAX_ROWS = 57960
const MIN_ROWS = 57961
const PACK_KEYS = 57962
const PASSWORD = 57963
const FIXED = 57964
const DYNAMIC = 57965
const COMPRESSED = 57966
const REDUNDANT = 57967
const COMPACT = 57968
const ROW_FORMAT = 57969
const STATS_AUTO_RECALC = 57970
const STATS_PERSISTENT = 57971
const STATS_SAMPLE_PAGES = 57972
const STORAGE = 57973
const MEMORY = 57974
const DISK = 57975
const PARTITIONS = 57976
const LINEAR = 57977
const RANGE = 57978
const LIST = 57979
const SUBPARTITION = 57980
const SUBPARTITIONS = 57981
const HASH = 57982

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 48,
	14, 48,
	-2, 37,
	-1, 49,
	1, 156,
	658, 156,
	-2, 164,
	-1, 50,
	135, 164,
	176, 164,
	340, 164,
	-2, 514,
	-1, 57,
	36, 761,
	238, 761,
	249, 761,
	284, 775,
	285, 775,
	-2, 763,
	-1, 62,
	240, 792,
	-2, 790,
	-1, 116,
	237, 1439,
	-2, 130,
	-1, 118,
	1, 157,
	658, 157,
	-2, 164,
	-1, 129,
	136, 400,
	243, 400,
	-2, 503,
	-1, 148,
	135, 164,
	176, 164,
	340, 164,
	-2, 523,
	-1, 800,
	87, 1456,
	-2, 1310,
	-1, 801,
	87, 1457,
	221, 1461,
	-2, 1311,
	-1, 802,
	221, 1460,
	-2, 39,
	-1, 882,
	60, 861,
	-2, 876,
	-1, 968,
	248, 40,
	253, 40,
	-2, 411,
	-1, 1053,
	1, 571,
	658, 571,
	-2, 164,
	-1, 1343,
	221, 1461,
	-2, 1311,
	-1, 1491,
	60, 862,
	-2, 881,
	-1, 1492,
	60, 863,
	-2, 882,
	-1, 1543,
	135, 164,
	176, 164,
	340, 164,
	-2, 450,
	-1, 1622,
	136, 400,
	243, 400,
	-2, 503,
	-1, 1631,
	248, 41,
	253, 41,
	-2, 412,
	-1, 1985,
	221, 1465,
	-2, 1459,
	-1, 1986,
	221, 1461,
	-2, 1457,
	-1, 2086,
	135, 164,
	176, 164,
	340, 164,
	-2, 451,
	-1, 2093,
	26, 185,
	-2, 187,
	-1, 2454,
	78, 95,
	88, 95,
	-2, 940,
	-1, 2522,
	633, 687,
	-2, 661,
	-1, 2689,
	50, 1407,
	-2, 1401,
	-1, 3341,
	633, 687,
	-2, 675,
	-1, 3429,
	23, 1817,
	33, 1817,
	177, 1817,
	260, 1817,
	320, 1817,
	321, 1817,
	322, 1817,
	323, 1817,
	324, 1817,
	325, 1817,
	326, 1817,
	328, 1817,
	329, 1817,
	330, 1817,
	331, 1817,
	332, 1817,
	333, 1817,
	334, 1817,
	335, 1817,
	336, 1817,
	337, 1817,
	338, 1817,
	339, 1817,
	341, 1817,
	343, 1817,
	344, 1817,
	345, 1817,
	346, 1817,
	347, 1817,
	348, 1817,
	349, 1817,
	350, 1817,
	351, 1817,
	354, 1817,
	355, 1817,
	356, 1817,
	357, 1817,
	358, 1817,
	360, 1817,
	361, 1817,
	362, 1817,
	363, 1817,
	504, 1817,
	-2, 619,
}

const yyPrivate = 57344

const yyLast = 47871

var yyAct = [...]int{
	1499, 3500, 3089, 3511, 3090, 811, 3088, 3322, 3406, 804,
	3469, 3427, 674, 3470, 2916, 3059, 2034, 1546, 803, 1852,
	3372, 654, 3395, 2838, 2083, 2741, 2748, 3306, 3254, 2798,
	5, 2803, 2800, 2014, 2799, 2797, 2802, 2801, 2789, 3046,
	3304, 2705, 1117, 2702, 875, 3118, 3294, 2354, 2388, 2818,
	2016, 2648, 2756, 2153, 656, 2817, 2703, 3123, 2427, 2706,
	2949, 2955, 2583, 764, 766, 2975, 684, 2038, 1506, 2820,
	2054, 765, 2700, 2690, 2414, 1976, 2941, 652, 1065, 2488,
	2057, 2487, 771, 2567, 2116, 2141, 2121, 930, 2489, 2844,
	770, 1000, 2519, 39, 2184, 2071, 2439, 1647, 2058, 157,
	38, 2406, 40, 2390, 1947, 1493, 1094, 2059, 1806, 899,
	2559, 898, 877, 1848, 2162, 143, 1867, 2140, 2046, 1973,
	2201, 2123, 2481, 958, 963, 1535, 2456, 1629, 1515, 2061,
	1473, 1355, 1119, 2420, 666, 1825, 1746, 1871, 649, 94,
	1283, 1636, 937, 1981, 964, 969, 2112, 966, 965, 98,
	1520, 934, 99, 2138, 1534, 916, 889, 1750, 1728, 1943,
	1339, 1315, 918, 886, 10, 976, 79, 1982, 938, 9,
	879, 1600, 883, 1475, 661, 8, 1108, 1755, 2039, 101,
	1595, 161, 884, 121, 885, 93, 119, 1115, 120, 1621,
	126, 901, 127, 1049, 911, 660, 1359, 3331, 887, 1363,
	2512, 92, 100, 78, 3501, 87, 3047, 3167, 3169, 3168,
	3186, 3187, 3188, 3189, 3190, 3191, 3192, 706, 2155, 2156,
	2157, 1469, 906, 910, 2786, 2155, 2542, 2541, 2199, 586,
	2510, 122, 3357, 892, 3039, 89, 589, 1002, 931, 1880,
	128, 902, 1946, 643, 908, 908, 3002, 870, 1005, 623,
	1019, 1020, 1021, 2808, 1024, 1025, 1026, 1027, 3358, 1713,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 2, 979, 3453,
	893, 876, 89, 878, 2575, 925, 1284, 2576, 936, 926,
	956, 648, 3093, 820, 821, 822, 980, 1006, 1009, 1010,
	122, 955, 954, 2808, 184, 953, 900, 952, 3093, 2806,
	3352, 644, 89, 3353, 629, 1813, 2805, 1812, 1013, 105,
	106, 107, 1811, 110, 2011, 2012, 116, 1284, 123, 185,
	1810, 1828, 584, 1809, 1808, 2812, 1786, 646, 2386, 647,
	1022, 166, 3407, 642, 2686, 89, 820, 821, 822, 1500,
	2242, 3448, 871, 872, 873, 874, 1300, 2532, 882, 2806,
	2188, 2416, 947, 942, 3457, 3455, 3521, 2652, 122, 3468,
	924, 768, 769, 2921, 3491, 2920, 2535, 2186, 3307, 3092,
	924, 768, 769, 2355, 2470, 2812, 913, 914, 1818, 3456,
	3454, 2863, 3250, 1294, 3249, 3092, 3052, 163, 1004, 3053,
	164, 1003, 3482, 3260, 2187, 3451, 80, 80, 3071, 3353,
	3060, 80, 3396, 3403, 623, 623, 2181, 3413, 3259, 3070,
	3336, 1857, 3473, 183, 623, 3432, 2883, 2251, 1610, 1536,
	2430, 1537, 653, 2387, 1294, 2465, 3173, 2737, 2464, 2078,
	2079, 2466, 80, 2132, 2574, 82, 2809, 2738, 2739, 1316,
	2248, 3181, 3182, 2077, 624, 2431, 3136, 2042, 2558, 2549,
	2550, 1084, 869, 868, 1072, 2513, 2126, 3323, 2477, 1073,
	3413, 2860, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325,
	1324, 1326, 1327, 623, 89, 89, 2096, 2095, 2617, 89,
	2871, 1297, 2249, 1298, 1299, 1290, 2809, 1072, 1282, 1101,
	2952, 1103, 1073, 2423, 2424, 623, 2869, 637, 1089, 1090,
	1071, 1794, 1070, 772, 1532, 685, 776, 687, 773, 774,
	89, 683, 686, 775, 1023, 1112, 1085, 641, 2845, 635,
	2013, 2560, 1477, 1078, 167, 3282, 1290, 3283, 2520, 1100,
	1102, 2163, 2202, 173, 2545, 3503, 1105, 2840, 1048, 704,
	705, 3166, 3170, 3171, 3172, 3183, 3184, 3185, 3193, 3195,
	737, 3194, 3196, 3197, 3198, 3201, 3202, 3203, 3204, 3199,
	3200, 3205, 3150, 3154, 3151, 3152, 3153, 3165, 3155, 3156,
	3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3206, 3207,
	3208, 3209, 3210, 3211, 3176, 3180, 3179, 3177, 3178, 3174,
	3175, 2207, 951, 917, 1058, 1059, 1091, 2243, 2244, 2246,
	2245, 3474, 2125, 777, 1086, 778, 1092, 1729, 782, 624,
	624, 1079, 784, 783, 1110, 785, 751, 750, 1093, 624,
	779, 780, 3475, 781, 1111, 2841, 1061, 1054, 2222, 1098,
	2223, 2833, 2224, 1099, 2040, 2041, 1052, 2206, 2618, 2834,
	2562, 1087, 1088, 1104, 3041, 3040, 2208, 2225, 1029, 3037,
	949, 1028, 2842, 158, 2204, 3234, 2166, 623, 1703, 1068,
	1480, 1074, 1075, 1076, 1077, 946, 3449, 1097, 948, 3097,
	2055, 927, 921, 919, 1333, 1334, 1335, 1336, 624, 2205,
	989, 927, 921, 919, 1347, 1113, 1114, 1351, 3212, 3213,
	3214, 3215, 3216, 3217, 3218, 3219, 2651, 960, 998, 2042,
	624, 987, 1704, 997, 1705, 959, 1106, 3330, 996, 960,
	2511, 1614, 995, 994, 1289, 1286, 1287, 1288, 1293, 1295,
	1292, 993, 1291, 992, 1341, 991, 986, 1533, 999, 2760,
	3522, 3480, 1285, 1734, 935, 1330, 957, 1330, 935, 972,
	935, 1015, 2514, 2249, 933, 971, 1747, 1056, 2139, 1062,
	3437, 912, 1064, 2563, 2192, 1289, 1286, 1287, 1288, 1293,
	1295, 1292, 3036, 1291, 817, 951, 1008, 943, 3435, 2185,
	2191, 950, 971, 1285, 945, 944, 1007, 3441, 3442, 1301,
	2547, 2953, 3409, 2479, 2744, 2758, 2759, 1082, 3515, 1743,
	951, 1047, 3436, 1337, 2779, 1635, 1275, 1016, 978, 1271,
	1272, 2544, 2391, 2393, 1608, 2861, 1277, 1607, 1356, 1606,
	2566, 817, 3408, 2214, 2210, 2212, 2213, 2211, 2215, 2216,
	2579, 2530, 2263, 949, 1744, 159, 990, 1604, 1270, 2745,
	588, 583, 171, 2810, 2811, 3409, 2183, 2557, 3319, 3069,
	2556, 817, 2989, 3000, 3001, 2971, 2814, 988, 1733, 1331,
	1332, 2461, 978, 2747, 2426, 1051, 1715, 1714, 1716, 1717,
	1718, 2129, 624, 2363, 118, 3408, 3091, 83, 2534, 978,
	1361, 2742, 1362, 179, 1860, 1501, 1503, 1365, 1524, 1432,
	2421, 920, 3091, 2810, 2811, 1063, 2040, 2041, 2758, 2759,
	2084, 920, 2757, 88, 88, 2743, 2814, 1467, 88, 977,
	2250, 2130, 1634, 1327, 2760, 1330, 2569, 1468, 2128, 978,
	2736, 2568, 2533, 1484, 160, 165, 162, 168, 169, 170,
	172, 174, 175, 176, 177, 895, 1109, 1881, 2749, 88,
	178, 180, 181, 182, 1095, 3344, 113, 1060, 1057, 978,
	2905, 1882, 2131, 1069, 950, 1737, 1067, 1735, 1736, 1756,
	1738, 1739, 2127, 977, 1050, 1014, 1001, 1483, 3032, 1011,
	2965, 1487, 1438, 1439, 1440, 1441, 1442, 879, 2392, 950,
	977, 1468, 2203, 2569, 1803, 981, 971, 1481, 2568, 1485,
	983, 1740, 1486, 98, 984, 982, 99, 1538, 1474, 1081,
	2603, 1872, 1872, 2280, 2503, 2757, 1730, 1461, 1731, 3483,
	1083, 1732, 978, 1298, 1299, 985, 3513, 2760, 114, 3514,
	977, 3512, 1830, 101, 1299, 3132, 971, 974, 975, 3007,
	935, 3006, 2170, 1644, 968, 972, 1831, 1328, 1329, 1829,
	2182, 1643, 1516, 1633, 1641, 1300, 2180, 1611, 1612, 1613,
	977, 1820, 1822, 1823, 1627, 967, 971, 974, 975, 891,
	935, 1053, 2178, 2175, 968, 972, 1300, 3374, 2175, 989,
	1502, 1676, 987, 1300, 1679, 1821, 1681, 2277, 1620, 1602,
	1879, 876, 1482, 1698, 1649, 1528, 1650, 1505, 1652, 1654,
	878, 1096, 1658, 1660, 1662, 1664, 1666, 3523, 1680, 1066,
	3476, 2990, 2179, 1545, 1639, 3517, 1757, 2177, 1529, 1530,
	3312, 1471, 3375, 977, 1688, 1689, 3242, 1638, 981, 971,
	1694, 1695, 3241, 983, 2255, 2256, 2257, 984, 982, 2746,
	1723, 3066, 1500, 3067, 3232, 1603, 820, 821, 822, 1877,
	1637, 1637, 1322, 1323, 1325, 1324, 1326, 1327, 1878, 1630,
	2276, 1617, 1618, 1721, 1616, 3313, 3082, 1760, 1500, 1488,
	1710, 629, 3081, 1300, 1764, 1978, 1766, 1767, 1768, 1769,
	3014, 3013, 3003, 1773, 2787, 1532, 2775, 1758, 1759, 2485,
	1297, 2484, 1298, 1299, 3524, 1785, 1682, 2047, 2048, 2605,
	2135, 1763, 1724, 1708, 1722, 1684, 1752, 1748, 1770, 1771,
	1772, 1297, 1707, 1298, 1299, 1706, 1754, 1696, 1297, 1300,
	1298, 1299, 3440, 1690, 1687, 1686, 1685, 1720, 1656, 2584,
	1300, 1727, 2837, 1274, 1709, 1609, 1500, 1921, 1978, 1300,
	2997, 629, 1975, 2468, 629, 122, 3477, 954, 3339, 2878,
	953, 1977, 952, 1318, 1319, 1320, 1321, 1322, 1323, 1325,
	1324, 1326, 1327, 1761, 1300, 815, 3439, 1509, 1762, 3338,
	1765, 1320, 1321, 1322, 1323, 1325, 1324, 1326, 1327, 1300,
	3316, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1300, 2151,
	2150, 3315, 1784, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1302, 3314, 1783, 3487, 1500, 3332, 1300, 3237, 1297, 3221,
	1298, 1299, 2586, 1510, 2750, 1500, 2412, 3502, 2754, 1799,
	2149, 2148, 1300, 3485, 1500, 2753, 1913, 1902, 1903, 1904,
	1905, 1915, 1906, 1907, 1908, 1920, 1916, 1909, 1910, 1917,
	1918, 1919, 1911, 1912, 1914, 3220, 1834, 1855, 1855, 3478,
	3268, 1300, 3131, 2270, 1297, 1300, 1298, 1299, 3129, 2755,
	1853, 1853, 1856, 2269, 2751, 1297, 3078, 1298, 1299, 2752,
	1466, 1875, 3419, 1500, 1297, 1876, 1298, 1299, 1465, 39,
	2596, 2595, 2594, 2588, 1464, 2592, 3011, 2587, 2996, 2585,
	3263, 1824, 3464, 1500, 2590, 2147, 2146, 104, 2846, 1297,
	104, 1298, 1299, 2589, 1826, 2843, 3417, 1500, 103, 1939,
	102, 103, 2778, 102, 1297, 1341, 1298, 1299, 2317, 97,
	2777, 2591, 2593, 1297, 2494, 1298, 1299, 2482, 1296, 1500,
	3267, 95, 1873, 1296, 1500, 3415, 1500, 1971, 97, 3291,
	1500, 1297, 96, 1298, 1299, 1814, 1815, 1816, 1817, 2412,
	3402, 1467, 79, 1802, 2412, 3382, 1827, 1297, 1800, 1298,
	1299, 1468, 2000, 1463, 1801, 2197, 1807, 1791, 1792, 2412,
	3378, 3365, 1500, 3050, 3329, 3245, 1500, 3225, 1500, 1501,
	2007, 1500, 2412, 3233, 1832, 1983, 1297, 2196, 1298, 1299,
	1297, 2037, 1298, 1299, 1861, 1862, 2019, 1500, 3224, 1864,
	1787, 908, 908, 1869, 3050, 1500, 1300, 1874, 2412, 3048,
	1974, 1859, 1753, 2031, 2175, 1500, 3058, 2315, 2969, 1500,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1866, 1868, 2328, 1500, 1922, 1923, 1924, 1925, 1926, 1927,
	1929, 1719, 1934, 1300, 1936, 1937, 1938, 1711, 1940, 1941,
	1942, 1701, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955,
	1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965,
	1966, 1967, 1968, 1969, 1970, 1985, 1972, 1983, 1979, 1980,
	908, 2093, 908, 908, 908, 908, 908, 98, 1988, 1989,
	99, 1500, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	1984, 2001, 2002, 2003, 2004, 2005, 2024, 98, 2025, 2030,
	99, 1987, 2457, 2136, 1990, 1991, 1697, 1883, 1884, 1885,
	1886, 2768, 2767, 2457, 1933, 2764, 2765, 3289, 1500, 2521,
	2065, 1897, 2764, 2763, 1944, 2102, 2103, 2104, 2105, 908,
	95, 1297, 2088, 1298, 1299, 1693, 2018, 2436, 1500, 2069,
	1692, 96, 892, 2087, 2249, 2543, 1300, 1599, 2524, 2517,
	2518, 2043, 2044, 1691, 2006, 2412, 2411, 1985, 2029, 2408,
	1511, 2032, 2273, 1500, 2499, 2458, 1858, 1500, 1297, 2091,
	1298, 1299, 2050, 1107, 97, 2460, 2458, 2082, 2164, 2118,
	2731, 97, 2052, 2092, 2124, 1300, 2249, 2074, 2075, 2090,
	2249, 2049, 2008, 2089, 2073, 1300, 1500, 2964, 1944, 2053,
	2428, 2056, 1599, 1598, 1807, 103, 925, 2701, 1300, 1296,
	926, 2966, 1300, 3370, 2161, 1544, 1543, 2428, 2964, 2134,
	2176, 3343, 2412, 2097, 2436, 2098, 2099, 2100, 2101, 2925,
	3286, 1500, 2273, 2839, 2766, 1300, 2120, 2674, 2114, 2115,
	1500, 2108, 2109, 2110, 2111, 2435, 1833, 2119, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 2169, 2137, 2145, 2172, 2076, 2173, 2189, 2133, 3272,
	1500, 1300, 2436, 979, 1296, 2168, 2167, 2171, 2175, 2940,
	1500, 1297, 2119, 1298, 1299, 1316, 2273, 2328, 1312, 2964,
	1313, 980, 2933, 1500, 2304, 2190, 2930, 1500, 2193, 2303,
	2436, 1637, 2194, 2195, 1314, 1328, 1329, 1311, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1325, 1324, 1326, 1327, 2984,
	1297, 2175, 1298, 1299, 2158, 2045, 1504, 1935, 2009, 1858,
	1297, 1300, 1298, 1299, 3015, 2200, 1804, 2235, 2236, 1742,
	1300, 1531, 2238, 1297, 881, 1298, 1299, 1297, 1300, 1298,
	1299, 2239, 962, 2260, 961, 2928, 1500, 89, 3445, 3385,
	2266, 3256, 2307, 1507, 2271, 3222, 3143, 2274, 3031, 2275,
	1297, 3028, 1298, 1299, 2282, 1300, 3009, 2888, 2284, 2285,
	2286, 2228, 2887, 1601, 2117, 3016, 3017, 3018, 2292, 2293,
	2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2835, 2792,
	1807, 2788, 2525, 2267, 2113, 2107, 1297, 2209, 1298, 1299,
	2106, 1726, 1826, 1632, 1789, 2935, 2226, 2227, 1628, 1597,
	2231, 115, 89, 2265, 2308, 2309, 2310, 2311, 2312, 2234,
	2314, 2490, 2893, 1500, 2316, 2790, 2237, 2491, 2321, 2322,
	1052, 2323, 2976, 2977, 2326, 2247, 2327, 3257, 2132, 3497,
	2330, 2022, 3495, 1300, 2334, 3471, 3351, 1300, 2339, 2340,
	2341, 2342, 2240, 2982, 1827, 2258, 1297, 3277, 1298, 1299,
	2979, 2353, 2784, 2356, 2357, 1297, 1790, 1298, 1299, 2491,
	2783, 2359, 2361, 1297, 2782, 1298, 1299, 2701, 2364, 2365,
	2366, 2367, 2368, 1985, 2504, 2229, 1300, 2981, 2723, 2375,
	2376, 2720, 2377, 2724, 1316, 2380, 2382, 2031, 2279, 2384,
	1297, 2281, 1298, 1299, 2725, 1300, 2445, 2446, 1984, 2396,
	1508, 2719, 2288, 2289, 2290, 2291, 1855, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1325, 1324, 1326, 1327, 3327, 1853,
	2397, 2876, 1500, 3113, 1300, 3112, 1316, 3347, 2578, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1325, 1324, 1326, 1327,
	2313, 3258, 2036, 1300, 2028, 2970, 2268, 1356, 2395, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1325, 1324, 1326, 1327,
	2383, 1500, 2721, 2679, 1316, 2432, 2678, 2722, 1297, 3311,
	1298, 1299, 1297, 3111, 1298, 1299, 2398, 1316, 2400, 2262,
	3229, 3122, 2287, 1300, 3124, 2413, 2319, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1325, 1324, 1326, 1327, 2960, 2302,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1324, 1326,
	1327, 1297, 2688, 1298, 1299, 1300, 2409, 2691, 2693, 1474,
	2385, 1300, 1672, 2957, 2451, 39, 2694, 2381, 1500, 1300,
	1297, 2956, 1298, 1299, 2450, 896, 3019, 2452, 1741, 1300,
	867, 2762, 2475, 897, 1468, 1300, 2478, 2480, 2410, 2405,
	2495, 1018, 1017, 1300, 2425, 2422, 2516, 2455, 1881, 1297,
	1300, 1298, 1299, 1513, 1516, 1300, 2471, 2360, 1500, 2531,
	2854, 1300, 1882, 1673, 1674, 1675, 95, 2459, 1297, 1668,
	1298, 1299, 2462, 3020, 3021, 3022, 2490, 96, 2124, 2469,
	1273, 1300, 2572, 2472, 123, 2962, 1300, 2493, 2540, 2343,
	1500, 1300, 2496, 2497, 97, 2335, 1500, 2047, 2048, 1300,
	2483, 3509, 2780, 2232, 3033, 1300, 3424, 3328, 1297, 3252,
	1298, 1299, 2454, 2931, 2492, 2761, 1669, 1670, 1671, 1512,
	1300, 2942, 2449, 2033, 1300, 2500, 2538, 2903, 2501, 1300,
	2505, 2506, 2507, 2259, 2899, 2261, 904, 905, 2221, 2885,
	1297, 2220, 1298, 1299, 1620, 2884, 1297, 2219, 1298, 1299,
	2218, 2217, 2253, 2537, 1297, 2581, 1298, 1299, 2607, 2608,
	2609, 2610, 2611, 102, 1297, 2881, 1298, 1299, 2526, 2527,
	1297, 2486, 1298, 1299, 2536, 2379, 3299, 2616, 1297, 3298,
	1298, 1299, 2502, 2378, 95, 1297, 2677, 1298, 1299, 2374,
	1297, 97, 1298, 1299, 2676, 96, 1297, 3280, 1298, 1299,
	3130, 2561, 2597, 3128, 2373, 3127, 3120, 2564, 2372, 104,
	2580, 2570, 3029, 2371, 2571, 2961, 1297, 2612, 1298, 1299,
	103, 1297, 102, 1298, 1299, 2959, 1297, 2793, 1298, 1299,
	2159, 97, 1615, 104, 1297, 903, 1298, 1299, 103, 3119,
	1297, 2950, 1298, 1299, 103, 104, 102, 2428, 2551, 2552,
	2553, 2554, 2555, 3101, 2598, 1297, 103, 1298, 1299, 1297,
	2600, 1298, 1299, 2577, 1297, 2408, 1298, 1299, 2619, 3499,
	3498, 3498, 1807, 2565, 2305, 2653, 2658, 2020, 1525, 1498,
	1494, 2655, 908, 1517, 3499, 2601, 2602, 108, 109, 2604,
	3317, 2995, 2606, 2573, 1495, 894, 3, 91, 1, 2999,
	1974, 2621, 1974, 2627, 2710, 3434, 601, 2010, 1472, 3472,
	3430, 3431, 2613, 2614, 2615, 1712, 1702, 3061, 1945, 2026,
	2027, 1497, 2728, 1496, 2620, 3253, 2796, 2622, 2623, 2624,
	2165, 3027, 2122, 2625, 2626, 2681, 970, 1948, 2628, 2658,
	148, 2630, 2085, 2086, 2632, 2633, 2634, 2635, 2654, 2713,
	2656, 3398, 2636, 1948, 1948, 1948, 1948, 1948, 2730, 2682,
	112, 928, 2673, 2669, 2599, 2704, 111, 973, 1080, 2065,
	2704, 908, 2160, 3051, 2476, 2094, 2657, 2680, 2659, 2660,
	2661, 2662, 2663, 2664, 2707, 2683, 1550, 2665, 2666, 1548,
	2667, 1549, 2668, 1547, 883, 1552, 1551, 2065, 2065, 2065,
	2065, 2065, 2712, 2862, 884, 2714, 885, 2732, 2717, 2698,
	2733, 2306, 2816, 2904, 2726, 2715, 2716, 2065, 2718, 1793,
	2065, 2695, 2696, 2629, 636, 2631, 2734, 2670, 2671, 2672,
	98, 2448, 630, 99, 186, 1539, 1518, 2699, 2917, 2772,
	2740, 2642, 2643, 2644, 2645, 1012, 591, 2771, 2856, 2769,
	2198, 2770, 2773, 2774, 597, 2795, 1348, 2637, 2638, 2639,
	2640, 2641, 2729, 1300, 1752, 1788, 2824, 1300, 2873, 2874,
	2875, 2858, 2877, 2879, 2823, 2794, 801, 2675, 1300, 2463,
	2124, 2815, 923, 915, 2021, 2399, 2886, 1300, 922, 3230,
	2709, 2890, 2891, 2892, 2894, 2895, 2896, 2897, 2954, 2830,
	2898, 2687, 2900, 2901, 2902, 2689, 2415, 2906, 2907, 2908,
	2909, 2910, 2911, 2912, 2913, 2914, 2915, 2850, 2849, 2852,
	2853, 2847, 2791, 2692, 2685, 2922, 2857, 3310, 2926, 189,
	2927, 2929, 189, 2932, 2934, 634, 2936, 2937, 2938, 2939,
	640, 3121, 3383, 2867, 2945, 2473, 1514, 2370, 2781, 2924,
	189, 2369, 2278, 1498, 1494, 1870, 1300, 1338, 2062, 3096,
	1300, 1819, 2358, 658, 657, 189, 2919, 2582, 1495, 655,
	2401, 2352, 1300, 2923, 2819, 2429, 1300, 1303, 805, 2967,
	2968, 2389, 1526, 2972, 2440, 1300, 2438, 2437, 2831, 1300,
	640, 189, 640, 1491, 1492, 1497, 2230, 1496, 1297, 1300,
	1298, 1299, 1297, 1300, 1298, 1299, 2070, 2848, 2978, 2948,
	2851, 2974, 1300, 1297, 2880, 1298, 1299, 3426, 2943, 2944,
	2946, 2064, 1297, 2060, 1298, 1299, 2864, 2865, 2889, 2866,
	2951, 2407, 2868, 2958, 2870, 756, 2872, 755, 667, 659,
	2351, 1300, 2973, 651, 2350, 2963, 754, 1300, 753, 2992,
	2822, 1300, 3410, 2980, 2546, 1300, 2349, 2836, 2548, 2474,
	2348, 2987, 2988, 2832, 1300, 1281, 2983, 1490, 645, 2347,
	1300, 2985, 941, 2346, 1300, 2859, 3334, 2252, 2824, 3034,
	3035, 2993, 2986, 2345, 2994, 2882, 2823, 2344, 3049, 1489,
	1900, 1297, 2065, 1298, 1299, 1297, 2338, 1298, 1299, 1300,
	1901, 3010, 3341, 3012, 2804, 3055, 3056, 1297, 3045, 1298,
	1299, 1297, 2785, 1298, 1299, 2522, 3004, 3005, 2152, 2947,
	1297, 65, 1298, 1299, 1297, 2337, 1298, 1299, 43, 3305,
	3068, 2336, 3371, 3072, 1297, 2333, 1298, 1299, 1297, 2332,
	1298, 1299, 752, 749, 3098, 3099, 3100, 1297, 2331, 1298,
	1299, 2649, 2650, 3354, 2329, 3355, 748, 3356, 2325, 1928,
	3083, 1278, 3447, 1300, 1795, 90, 34, 33, 3038, 1300,
	3057, 32, 3042, 3043, 3044, 3087, 1297, 31, 1298, 1299,
	30, 25, 1297, 2324, 1298, 1299, 1297, 3095, 1298, 1299,
	1297, 24, 1298, 1299, 23, 3102, 22, 3030, 21, 1297,
	27, 1298, 1299, 3073, 3008, 1297, 20, 1298, 1299, 1297,
	19, 1298, 1299, 18, 2441, 2444, 2445, 2446, 2442, 2807,
	2443, 2447, 3467, 3023, 2976, 2977, 3024, 3025, 3026, 1300,
	3054, 3508, 117, 52, 1297, 49, 1298, 1299, 3094, 2441,
	2444, 2445, 2446, 2442, 47, 2443, 2447, 2320, 125, 3116,
	124, 50, 46, 2318, 1055, 44, 29, 1300, 28, 17,
	1855, 16, 15, 14, 3077, 13, 12, 11, 7, 3137,
	6, 37, 36, 1853, 3145, 35, 1798, 26, 4, 3117,
	2509, 3125, 3139, 2154, 0, 3074, 3126, 3075, 3141, 0,
	3076, 3133, 0, 3079, 3080, 0, 3135, 0, 1297, 2704,
	1298, 1299, 3084, 0, 1297, 0, 1298, 1299, 0, 0,
	0, 0, 3086, 2283, 3146, 3147, 3244, 0, 3231, 2707,
	3149, 0, 0, 2707, 0, 3251, 0, 0, 0, 39,
	0, 0, 0, 0, 3103, 0, 0, 3104, 0, 3105,
	3106, 2272, 3107, 0, 3108, 3261, 3262, 0, 3264, 3109,
	3265, 3266, 0, 3228, 3227, 3269, 3270, 3271, 0, 3273,
	3276, 3274, 3226, 3275, 1297, 3243, 1298, 1299, 0, 1855,
	3248, 3247, 0, 3255, 3134, 3285, 3287, 3288, 3290, 3292,
	3293, 3295, 1853, 3278, 0, 3142, 0, 0, 3144, 0,
	3235, 3085, 1297, 0, 1298, 1299, 0, 0, 0, 0,
	3148, 3238, 3239, 3240, 0, 0, 0, 0, 0, 0,
	0, 3279, 0, 0, 0, 0, 0, 0, 3223, 3325,
	3281, 0, 0, 0, 3284, 0, 0, 0, 0, 0,
	3321, 3300, 3301, 3303, 0, 3302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 3324, 189, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2707,
	0, 0, 0, 0, 0, 0, 640, 0, 640, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3326,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 189,
	0, 0, 0, 3320, 0, 0, 0, 0, 3308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3345, 0, 3350, 1343, 0, 0, 0,
	0, 0, 0, 3342, 0, 3340, 0, 0, 0, 3337,
	0, 0, 0, 0, 0, 3366, 0, 0, 0, 0,
	0, 3367, 3368, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3333, 0, 0,
	0, 0, 0, 3379, 0, 0, 0, 0, 0, 3360,
	0, 0, 3361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3309, 39, 3369, 0, 0, 0, 0, 3404,
	3405, 0, 0, 0, 0, 0, 0, 0, 0, 3384,
	0, 3376, 0, 3414, 3416, 3418, 3411, 0, 0, 3412,
	3386, 3389, 3397, 3394, 3391, 0, 3390, 3388, 3393, 3392,
	0, 0, 2704, 0, 0, 0, 3255, 3399, 3446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3422, 0,
	0, 0, 3348, 0, 0, 0, 0, 3443, 0, 3433,
	3438, 0, 0, 3425, 0, 0, 3452, 3411, 1343, 39,
	3412, 0, 0, 0, 0, 3362, 3450, 3463, 3363, 0,
	3364, 3346, 0, 0, 0, 1351, 3381, 0, 0, 0,
	0, 0, 0, 0, 3461, 3465, 3466, 0, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 0, 0, 3484,
	3486, 3488, 3479, 0, 0, 0, 3481, 0, 0, 0,
	0, 0, 0, 1855, 0, 189, 3490, 3489, 0, 640,
	640, 3496, 0, 3494, 0, 0, 1853, 3493, 0, 0,
	3507, 3492, 3504, 3411, 3349, 189, 3412, 0, 0, 0,
	0, 3510, 3359, 3516, 3518, 0, 3519, 3520, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 189, 0,
	0, 0, 0, 0, 3444, 0, 0, 1855, 3527, 3528,
	640, 3275, 3526, 0, 0, 0, 189, 0, 0, 0,
	1853, 3525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3458, 0, 3459, 0, 3460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 640, 640, 0, 640, 0, 640, 640, 1555,
	640, 640, 640, 640, 640, 640, 0, 0, 0, 0,
	0, 0, 0, 1343, 0, 0, 1343, 640, 1343, 189,
	0, 184, 0, 0, 3505, 0, 3506, 0, 0, 0,
	0, 0, 2515, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 123, 0, 145, 0, 0,
	0, 0, 640, 0, 189, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1568, 0, 0, 0, 189, 0, 0, 156,
	0, 0, 0, 189, 0, 144, 0, 0, 0, 0,
	0, 0, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 640, 0, 0, 163, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 1624, 155, 154,
	183, 0, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 0,
	1590, 1591, 1592, 1593, 1594, 1569, 1570, 1571, 1572, 1553,
	1554, 1582, 0, 1556, 0, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 0, 0, 1566, 1573, 1574, 1575,
	1576, 0, 1577, 1578, 1579, 1580, 629, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 816, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	1625, 152, 0, 1622, 0, 150, 151, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 156, 0, 0,
	173, 0, 0, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 620, 0, 1567, 0, 640, 640, 0, 0,
	0, 880, 163, 81, 640, 164, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 880, 0, 132, 133, 155, 154, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 940, 0, 0,
	605, 0, 0, 0, 0, 0, 1583, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	158, 615, 0, 0, 0, 0, 0, 0, 0, 640,
	640, 0, 0, 0, 0, 0, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 149, 130, 152,
	137, 129, 0, 150, 151, 0, 0, 0, 1555, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 138,
	0, 0, 0, 0, 0, 624, 0, 0, 0, 1986,
	0, 0, 0, 141, 139, 134, 135, 136, 140, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 153, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 590, 0,
	592, 606, 0, 626, 0, 625, 596, 0, 594, 598,
	607, 599, 189, 593, 0, 604, 0, 640, 595, 608,
	609, 612, 616, 617, 618, 614, 611, 0, 602, 627,
	0, 1568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 640, 0, 0, 0, 0, 146,
	0, 0, 147, 0, 189, 0, 0, 0, 640, 0,
	0, 1986, 189, 0, 189, 0, 189, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 640, 159, 0, 0, 0, 0, 0, 0, 171,
	0, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 0, 1590,
	1591, 1592, 1593, 1594, 1569, 1570, 1571, 1572, 1553, 1554,
	1582, 0, 1556, 0, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 0, 0, 1566, 1573, 1574, 1575, 1576,
	179, 1577, 1578, 1579, 1580, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 640,
	0, 160, 165, 162, 168, 169, 170, 172, 174, 175,
	176, 177, 0, 0, 0, 0, 0, 178, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 146, 0, 0,
	147, 640, 0, 0, 0, 640, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 171, 621, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 622, 0, 1583, 0, 0, 0, 189,
	189, 0, 0, 189, 0, 189, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	165, 162, 168, 169, 170, 172, 174, 175, 176, 177,
	0, 1116, 0, 1116, 1116, 178, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 0, 1986, 0, 0,
	880, 1340, 1345, 1346, 0, 1349, 0, 1350, 1352, 1353,
	1354, 0, 1357, 1358, 1360, 1360, 0, 1360, 1364, 1364,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 0, 0, 0, 0, 1431,
	0, 1433, 1434, 1435, 1436, 1437, 0, 0, 0, 0,
	0, 0, 0, 0, 1364, 1364, 1364, 1364, 1364, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 1470,
	0, 0, 0, 0, 189, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 640, 0, 0, 0, 166,
	184, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 145, 0, 0, 0,
	189, 0, 1476, 0, 0, 189, 0, 166, 880, 0,
	0, 0, 880, 0, 0, 0, 0, 0, 880, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 144, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 164, 0, 0, 640,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 1623, 1624, 155, 154, 183,
	0, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 189, 189, 189, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 189, 189, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 149, 1625,
	152, 0, 1622, 0, 150, 151, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 640, 0, 173,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	41, 42, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	0, 158, 640, 45, 71, 72, 0, 69, 73, 0,
	640, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 640, 0, 0, 0, 58, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 89, 0, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 0, 1343, 0, 0,
	640, 640, 1343, 189, 189, 189, 189, 189, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 189, 0, 189, 0, 0, 189, 189, 189, 0,
	0, 1116, 1116, 0, 0, 0, 0, 153, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 640, 0, 0, 1343, 0, 0,
	0, 0, 640, 159, 0, 0, 0, 189, 146, 0,
	171, 147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 48, 51, 54, 53, 56,
	0, 68, 0, 0, 77, 74, 0, 0, 0, 0,
	189, 159, 0, 189, 0, 0, 0, 0, 171, 0,
	0, 179, 0, 0, 0, 0, 0, 57, 85, 84,
	0, 0, 66, 67, 55, 0, 0, 818, 0, 1978,
	75, 76, 819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 160, 165, 162, 168, 169, 170, 172, 174,
	175, 176, 177, 0, 0, 0, 0, 0, 178, 180,
	181, 182, 59, 60, 0, 61, 62, 63, 64, 0,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	160, 165, 162, 168, 169, 170, 172, 174, 175, 176,
	177, 0, 0, 0, 0, 0, 178, 180, 181, 182,
	0, 0, 189, 0, 0, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 0, 0, 0,
	0, 2063, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 818, 0, 0, 189, 806, 819,
	820, 821, 822, 807, 83, 0, 808, 809, 0, 810,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 189,
	189, 189, 0, 815, 823, 824, 0, 0, 0, 640,
	640, 940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 940, 0, 88, 0, 0, 0,
	2825, 2826, 0, 0, 0, 0, 640, 640, 640, 640,
	0, 0, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 0, 0, 0, 0, 640, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2828, 2829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 640, 0, 0, 0, 0, 2264,
	0, 0, 0, 0, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 0,
	0, 776, 0, 773, 774, 0, 0, 0, 775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 640, 0, 0,
	0, 640, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 619, 0, 2433, 2434, 0, 0,
	639, 0, 0, 640, 189, 2063, 0, 0, 880, 2453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 0, 639, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 2529, 0,
	0, 89, 0, 0, 818, 0, 189, 640, 806, 819,
	820, 821, 822, 807, 0, 0, 808, 809, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 815, 823, 824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	2825, 2826, 0, 0, 0, 0, 0, 0, 0, 640,
	0, 640, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2827, 0, 0, 2646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 818, 0, 0, 0, 0, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2063, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2828, 2829, 0,
	0, 0, 0, 2708, 0, 81, 0, 0, 2063, 2063,
	2063, 2063, 2063, 0, 0, 0, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2063, 0,
	0, 2063, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 0, 0, 0, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 1269, 639, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1605, 0, 0, 3110, 0, 3114, 3115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 0, 1631, 0, 0, 2708, 0,
	81, 0, 2708, 1640, 0, 0, 1342, 1642, 0, 0,
	1645, 1646, 639, 639, 0, 639, 0, 639, 639, 0,
	639, 639, 639, 639, 639, 639, 0, 0, 0, 0,
	0, 0, 0, 1342, 1677, 1678, 1342, 639, 1342, 0,
	1683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3236,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 1118, 0, 1118, 1118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 639, 0, 0,
	0, 0, 0, 0, 639, 758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1478,
	1479, 0, 0, 0, 0, 3380, 0, 639, 187, 0,
	81, 587, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 0, 639, 587,
	0, 0, 0, 0, 1342, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 890, 0, 0, 0, 0, 0,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	639, 909, 909, 0, 0, 0, 0, 0, 0, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3462, 0, 0, 639,
	0, 0, 1648, 1648, 0, 1648, 0, 1648, 1648, 0,
	1657, 1648, 1648, 1648, 1648, 1648, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 1749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 2142, 2143, 2144, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 639,
	1640, 0, 0, 1640, 0, 1640, 0, 0, 0, 0,
	0, 2174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 639, 0, 0, 0, 639, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1118, 1118, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1898,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 0, 639, 0, 587,
	0, 587, 0, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1118,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1522, 0,
	0, 1118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 932, 0, 0, 0, 0, 0, 939,
	0, 2467, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 932, 0, 0, 639,
	0, 1849, 0, 0, 0, 1849, 1849, 0, 0, 0,
	0, 0, 0, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 639, 890, 0, 0, 1640, 1640, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 587, 1342, 2539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 1344, 0, 1344, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1118, 1699, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 0, 587, 0, 0, 0, 0,
	639, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1775, 587, 587, 587, 587, 587, 587, 587,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 1342, 0, 0,
	639, 639, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2417, 0, 0, 0,
	0, 0, 2776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 0, 0, 1342, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2855, 0, 0, 0, 0, 0, 2498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 0, 0,
	0, 0, 0, 2523, 0, 0, 1344, 0, 0, 0,
	0, 0, 2528, 0, 0, 0, 0, 0, 909, 909,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 909, 1751, 909,
	909, 909, 909, 909, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2998, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 909, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	890, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	639, 0, 0, 587, 0, 0, 0, 0, 0, 0,
	1751, 587, 2647, 587, 0, 587, 2072, 0, 0, 0,
	1118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 639, 639, 639,
	0, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2684,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1118, 0, 0, 0, 0, 0, 0,
	2711, 1648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1342, 0, 0, 932, 0, 639, 0, 639, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 587, 0, 0, 0, 0, 0, 0, 587,
	0, 0, 0, 0, 0, 0, 0, 0, 587, 587,
	0, 0, 587, 0, 2233, 0, 0, 0, 639, 0,
	0, 587, 0, 0, 0, 0, 0, 0, 587, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 0, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 639, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 0, 1751, 0, 0, 0,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2035,
	2035, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 587, 3062, 3063, 3064, 3065,
	0, 0, 0, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1342, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 587,
	639, 639, 0, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 0, 3138, 0, 3140, 0,
	639, 2508, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 639, 0, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	587, 587, 587, 587, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 587, 0, 1118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 587, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 909,
	0, 0, 0, 0, 0, 0, 0, 3296, 0, 0,
	0, 3296, 3296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2035, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2035,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 0, 1344, 0, 0, 0,
	0, 1344, 587, 587, 587, 587, 587, 0, 0, 0,
	0, 0, 0, 0, 2727, 0, 0, 0, 0, 0,
	1699, 0, 587, 0, 0, 587, 2735, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1118, 1118, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 587, 0, 0, 0,
	0, 0, 3420, 0, 0, 0, 0, 0, 0, 0,
	587, 0, 0, 0, 0, 0, 0, 3428, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 587,
	0, 0, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2918,
	0, 3428, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 587, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 587, 0, 0, 587, 587,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 0, 0, 0, 1252, 1237, 496, 0, 1180, 1255,
	1149, 1168, 1265, 1171, 1174, 1216, 1128, 1194, 399, 1165,
	1121, 1153, 1123, 1160, 1124, 1151, 1182, 257, 1148, 1239,
	1198, 1254, 350, 254, 1130, 1154, 413, 1170, 196, 1218,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 1261, 354, 1204, 0, 476, 384,
	0, 0, 0, 1184, 1243, 1192, 1230, 1179, 1217, 1138,
	1203, 1256, 1166, 1213, 1257, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 1699, 0, 3400, 629, 0, 0,
	0, 0, 3401, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 587, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1162, 1210, 1251, 1163, 1212, 252,
	307, 259, 251, 501, 1262, 1242, 1127, 1191, 1250, 0,
	0, 219, 1253, 1186, 0, 1215, 0, 1268, 1122, 1206,
	0, 1125, 1129, 1264, 1246, 1157, 262, 0, 0, 0,
	0, 0, 0, 0, 1183, 1193, 1227, 1231, 1177, 0,
	0, 0, 0, 1344, 0, 0, 1155, 0, 1202, 0,
	0, 0, 1134, 1126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1181, 0, 0, 0,
	0, 1137, 0, 1156, 1228, 1699, 1120, 284, 1131, 385,
	244, 0, 1235, 1245, 1178, 541, 1249, 1176, 1175, 1222,
	1135, 1241, 1169, 349, 1133, 316, 191, 215, 0, 1167,
	395, 441, 453, 1240, 1152, 1161, 242, 1159, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 1201, 1220,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 559, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 555, 203, 485,
	515, 229, 463, 0, 0, 561, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 562, 218, 536, 210, 1132, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 563, 224, 225,
	227, 1147, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 1236, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 556, 554, 390, 297,
	474, 319, 357, 1225, 1267, 408, 452, 230, 522, 475,
	1142, 1146, 1140, 1207, 1141, 1196, 1197, 1143, 1258, 1259,
	1260, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 0,
	1229, 1136, 0, 1144, 1145, 1238, 1247, 1248, 582, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 1200, 190,
	211, 352, 1263, 434, 275, 560, 532, 527, 197, 213,
	1139, 249, 1150, 1158, 0, 1164, 1172, 1173, 1185, 1187,
	1188, 1189, 1190, 1208, 1209, 1211, 1219, 1221, 1224, 1226,
	1233, 1244, 1266, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 557, 558, 286, 516, 545, 0, 0, 362, 1199,
	1205, 365, 268, 291, 306, 1214, 531, 481, 217, 446,
	277, 240, 1232, 1234, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 1195, 1223,
	360, 497, 498, 302, 380, 0, 0, 0, 1252, 1237,
	496, 0, 1180, 1255, 1149, 1168, 1265, 1171, 1174, 1216,
	1128, 1194, 399, 1165, 1121, 1153, 1123, 1160, 1124, 1151,
	1182, 257, 1148, 1239, 1198, 1254, 350, 254, 1130, 1154,
	413, 1170, 196, 1218, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 1261, 354,
	1204, 0, 476, 384, 0, 0, 0, 1184, 1243, 1192,
	1230, 1179, 1217, 1138, 1203, 1256, 1166, 1213, 1257, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 1162, 1210,
	1251, 1163, 1212, 252, 307, 259, 251, 501, 1262, 1242,
	1127, 1191, 1250, 0, 0, 219, 1253, 1186, 0, 1215,
	0, 1268, 1122, 1206, 0, 1125, 1129, 1264, 1246, 1157,
	262, 0, 0, 0, 0, 0, 0, 0, 1183, 1193,
	1227, 1231, 1177, 0, 0, 0, 0, 0, 2736, 0,
	1155, 0, 1202, 0, 0, 0, 1134, 1126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1181, 0, 0, 0, 0, 1137, 0, 1156, 1228, 0,
	1120, 284, 1131, 385, 244, 0, 1235, 1245, 1178, 541,
	1249, 1176, 1175, 1222, 1135, 1241, 1169, 349, 1133, 316,
	191, 215, 0, 1167, 395, 441, 453, 1240, 1152, 1161,
	242, 1159, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 1201, 1220, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 559, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 555, 203, 485, 515, 229, 463, 0, 0, 561,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 562, 218, 536, 210,
	1132, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 563, 224, 225, 227, 1147, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 1236, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	556, 554, 390, 297, 474, 319, 357, 1225, 1267, 408,
	452, 230, 522, 475, 1142, 1146, 1140, 1207, 1141, 1196,
	1197, 1143, 1258, 1259, 1260, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 0, 1229, 1136, 0, 1144, 1145, 1238,
	1247, 1248, 582, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 1200, 190, 211, 352, 1263, 434, 275, 560,
	532, 527, 197, 213, 1139, 249, 1150, 1158, 0, 1164,
	1172, 1173, 1185, 1187, 1188, 1189, 1190, 1208, 1209, 1211,
	1219, 1221, 1224, 1226, 1233, 1244, 1266, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 557, 558, 286, 516, 545,
	0, 0, 362, 1199, 1205, 365, 268, 291, 306, 1214,
	531, 481, 217, 446, 277, 240, 1232, 1234, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 1195, 1223, 360, 497, 498, 302, 380, 0,
	0, 0, 1252, 1237, 496, 0, 1180, 1255, 1149, 1168,
	1265, 1171, 1174, 1216, 1128, 1194, 399, 1165, 1121, 1153,
	1123, 1160, 1124, 1151, 1182, 257, 1148, 1239, 1198, 1254,
	350, 254, 1130, 1154, 413, 1170, 196, 1218, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 1261, 354, 1204, 0, 476, 384, 0, 0,
	0, 1184, 1243, 1192, 1230, 1179, 1217, 1138, 1203, 1256,
	1166, 1213, 1257, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1162, 1210, 1251, 1163, 1212, 252, 307, 259,
	251, 501, 1262, 1242, 1127, 1191, 1250, 0, 0, 219,
	1253, 1186, 0, 1215, 0, 1268, 1122, 1206, 0, 1125,
	1129, 1264, 1246, 1157, 262, 0, 0, 0, 0, 0,
	0, 0, 1183, 1193, 1227, 1231, 1177, 0, 0, 0,
	0, 0, 2697, 0, 1155, 0, 1202, 0, 0, 0,
	1134, 1126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1181, 0, 0, 0, 0, 1137,
	0, 1156, 1228, 0, 1120, 284, 1131, 385, 244, 0,
	1235, 1245, 1178, 541, 1249, 1176, 1175, 1222, 1135, 1241,
	1169, 349, 1133, 316, 191, 215, 0, 1167, 395, 441,
	453, 1240, 1152, 1161, 242, 1159, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 1201, 1220, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	559, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 555, 203, 485, 515, 229,
	463, 0, 0, 561, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	562, 218, 536, 210, 1132, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 563, 224, 225, 227, 1147,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 1236, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 556, 554, 390, 297, 474, 319,
	357, 1225, 1267, 408, 452, 230, 522, 475, 1142, 1146,
	1140, 1207, 1141, 1196, 1197, 1143, 1258, 1259, 1260, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 0, 1229, 1136,
	0, 1144, 1145, 1238, 1247, 1248, 582, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 1200, 190, 211, 352,
	1263, 434, 275, 560, 532, 527, 197, 213, 1139, 249,
	1150, 1158, 0, 1164, 1172, 1173, 1185, 1187, 1188, 1189,
	1190, 1208, 1209, 1211, 1219, 1221, 1224, 1226, 1233, 1244,
	1266, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 557,
	558, 286, 516, 545, 0, 0, 362, 1199, 1205, 365,
	268, 291, 306, 1214, 531, 481, 217, 446, 277, 240,
	1232, 1234, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 1195, 1223, 360, 497,
	498, 302, 380, 0, 0, 0, 1252, 1237, 496, 0,
	1180, 1255, 1149, 1168, 1265, 1171, 1174, 1216, 1128, 1194,
	399, 1165, 1121, 1153, 1123, 1160, 1124, 1151, 1182, 257,
	1148, 1239, 1198, 1254, 350, 254, 1130, 1154, 413, 1170,
	196, 1218, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 1261, 354, 1204, 0,
	476, 384, 0, 0, 0, 1184, 1243, 1192, 1230, 1179,
	1217, 1138, 1203, 1256, 1166, 1213, 1257, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 1162, 1210, 1251, 1163,
	1212, 252, 307, 259, 251, 501, 1262, 1242, 1127, 1191,
	1250, 0, 0, 219, 1253, 1186, 0, 1215, 0, 1268,
	1122, 1206, 0, 1125, 1129, 1264, 1246, 1157, 262, 0,
	0, 0, 0, 0, 0, 0, 1183, 1193, 1227, 1231,
	1177, 0, 0, 0, 0, 0, 2051, 0, 1155, 0,
	1202, 0, 0, 0, 1134, 1126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1181, 0,
	0, 0, 0, 1137, 0, 1156, 1228, 0, 1120, 284,
	1131, 385, 244, 0, 1235, 1245, 1178, 541, 1249, 1176,
	1175, 1222, 1135, 1241, 1169, 349, 1133, 316, 191, 215,
	0, 1167, 395, 441, 453, 1240, 1152, 1161, 242, 1159,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	1201, 1220, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 559, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 555,
	203, 485, 515, 229, 463, 0, 0, 561, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 562, 218, 536, 210, 1132, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 563,
	224, 225, 227, 1147, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 1236, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 556, 554,
	390, 297, 474, 319, 357, 1225, 1267, 408, 452, 230,
	522, 475, 1142, 1146, 1140, 1207, 1141, 1196, 1197, 1143,
	1258, 1259, 1260, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 0, 1229, 1136, 0, 1144, 1145, 1238, 1247, 1248,
	582, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	1200, 190, 211, 352, 1263, 434, 275, 560, 532, 527,
	197, 213, 1139, 249, 1150, 1158, 0, 1164, 1172, 1173,
	1185, 1187, 1188, 1189, 1190, 1208, 1209, 1211, 1219, 1221,
	1224, 1226, 1233, 1244, 1266, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 557, 558, 286, 516, 545, 0, 0,
	362, 1199, 1205, 365, 268, 291, 306, 1214, 531, 481,
	217, 446, 277, 240, 1232, 1234, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	1195, 1223, 360, 497, 498, 302, 380, 0, 0, 0,
	1252, 1237, 496, 0, 1180, 1255, 1149, 1168, 1265, 1171,
	1174, 1216, 1128, 1194, 399, 1165, 1121, 1153, 1123, 1160,
	1124, 1151, 1182, 257, 1148, 1239, 1198, 1254, 350, 254,
	1130, 1154, 413, 1170, 196, 1218, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	1261, 354, 1204, 0, 476, 384, 0, 0, 0, 1184,
	1243, 1192, 1230, 1179, 1217, 1138, 1203, 1256, 1166, 1213,
	1257, 309, 237, 311, 195, 396, 477, 273, 0, 89,
	0, 0, 0, 629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	1162, 1210, 1251, 1163, 1212, 252, 307, 259, 251, 501,
	1262, 1242, 1127, 1191, 1250, 0, 0, 219, 1253, 1186,
	0, 1215, 0, 1268, 1122, 1206, 0, 1125, 1129, 1264,
	1246, 1157, 262, 0, 0, 0, 0, 0, 0, 0,
	1183, 1193, 1227, 1231, 1177, 0, 0, 0, 0, 0,
	0, 0, 1155, 0, 1202, 0, 0, 0, 1134, 1126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1181, 0, 0, 0, 0, 1137, 0, 1156,
	1228, 0, 1120, 284, 1131, 385, 244, 0, 1235, 1245,
	1178, 541, 1249, 1176, 1175, 1222, 1135, 1241, 1169, 349,
	1133, 316, 191, 215, 0, 1167, 395, 441, 453, 1240,
	1152, 1161, 242, 1159, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 1201, 1220, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 559, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 555, 203, 485, 515, 229, 463, 0,
	0, 561, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 510, 511, 243, 562, 218,
	536, 210, 1132, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 563, 224, 225, 227, 1147, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	1236, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 556, 554, 390, 297, 474, 319, 357, 1225,
	1267, 408, 452, 230, 522, 475, 1142, 1146, 1140, 1207,
	1141, 1196, 1197, 1143, 1258, 1259, 1260, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 0, 1229, 1136, 0, 1144,
	1145, 1238, 1247, 1248, 582, 368, 465, 519, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 533, 534,
	538, 442, 443, 444, 445, 279, 528, 295, 448, 447,
	317, 318, 363, 431, 1200, 190, 211, 352, 1263, 434,
	275, 560, 532, 527, 197, 213, 1139, 249, 1150, 1158,
	0, 1164, 1172, 1173, 1185, 1187, 1188, 1189, 1190, 1208,
	1209, 1211, 1219, 1221, 1224, 1226, 1233, 1244, 1266, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 287, 288, 426, 427, 300, 301, 557, 558, 286,
	516, 545, 0, 0, 362, 1199, 1205, 365, 268, 291,
	306, 1214, 531, 481, 217, 446, 277, 240, 1232, 1234,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 1195, 1223, 360, 497, 498, 302,
	380, 0, 0, 0, 1252, 1237, 496, 0, 1180, 1255,
	1149, 1168, 1265, 1171, 1174, 1216, 1128, 1194, 399, 1165,
	1121, 1153, 1123, 1160, 1124, 1151, 1182, 257, 1148, 1239,
	1198, 1254, 350, 254, 1130, 1154, 413, 1170, 196, 1218,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 1261, 354, 1204, 0, 476, 384,
	0, 0, 0, 1184, 1243, 1192, 1230, 1179, 1217, 1138,
	1203, 1256, 1166, 1213, 1257, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 0, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1162, 1210, 1251, 1163, 1212, 252,
	307, 259, 251, 501, 1262, 1242, 1127, 1191, 1250, 0,
	0, 219, 1253, 1186, 0, 1215, 0, 1268, 1122, 1206,
	0, 1125, 1129, 1264, 1246, 1157, 262, 0, 0, 0,
	0, 0, 0, 0, 1183, 1193, 1227, 1231, 1177, 0,
	0, 0, 0, 0, 0, 0, 1155, 0, 1202, 0,
	0, 0, 1134, 1126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1181, 0, 0, 0,
	0, 1137, 0, 1156, 1228, 0, 1120, 284, 1131, 385,
	244, 0, 1235, 1245, 1178, 541, 1249, 1176, 1175, 1222,
	1135, 1241, 1169, 349, 1133, 316, 191, 215, 0, 1167,
	395, 441, 453, 1240, 1152, 1161, 242, 1159, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 1201, 1220,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 559, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 555, 203, 485,
	515, 229, 463, 0, 0, 561, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 562, 218, 536, 210, 1132, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 563, 224, 225,
	227, 1147, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 1236, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 556, 554, 390, 297,
	474, 319, 357, 1225, 1267, 408, 452, 230, 522, 475,
	1142, 1146, 1140, 1207, 1141, 1196, 1197, 1143, 1258, 1259,
	1260, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 0,
	1229, 1136, 0, 1144, 1145, 1238, 1247, 1248, 582, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 1200, 190,
	211, 352, 1263, 434, 275, 560, 532, 527, 197, 213,
	1139, 249, 1150, 1158, 0, 1164, 1172, 1173, 1185, 1187,
	1188, 1189, 1190, 1208, 1209, 1211, 1219, 1221, 1224, 1226,
	1233, 1244, 1266, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 557, 558, 286, 516, 545, 0, 0, 362, 1199,
	1205, 365, 268, 291, 306, 1214, 531, 481, 217, 446,
	277, 240, 1232, 1234, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 1195, 1223,
	360, 497, 498, 302, 380, 0, 0, 0, 1252, 1237,
	496, 0, 1180, 1255, 1149, 1168, 1265, 1171, 1174, 1216,
	1128, 1194, 399, 1165, 1121, 1153, 1123, 1160, 1124, 1151,
	1182, 257, 1148, 1239, 1198, 1254, 350, 254, 1130, 1154,
	413, 1170, 196, 1218, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 1261, 354,
	1204, 0, 476, 384, 0, 0, 0, 1184, 1243, 1192,
	1230, 1179, 1217, 1138, 1203, 1256, 1166, 1213, 1257, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 1162, 1210,
	1251, 1163, 1212, 252, 307, 259, 251, 501, 1262, 1242,
	1127, 1191, 1250, 0, 0, 219, 1253, 1186, 0, 1215,
	0, 1268, 1122, 1206, 0, 1125, 1129, 1264, 1246, 1157,
	262, 0, 0, 0, 0, 0, 0, 0, 1183, 1193,
	1227, 1231, 1177, 0, 0, 0, 0, 0, 0, 0,
	1155, 0, 1202, 0, 0, 0, 1134, 1126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1181, 0, 0, 0, 0, 1137, 0, 1156, 1228, 0,
	1120, 284, 1131, 385, 244, 0, 1235, 1245, 1178, 541,
	1249, 1176, 1175, 1222, 1135, 1241, 1169, 349, 1133, 316,
	191, 215, 0, 1167, 395, 441, 453, 1240, 1152, 1161,
	242, 1159, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 1201, 1220, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 559, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 555, 203, 485, 515, 229, 463, 0, 0, 561,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 562, 218, 536, 210,
	1132, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 563, 224, 225, 227, 1147, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 1236, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	556, 554, 390, 297, 474, 319, 357, 1225, 1267, 408,
	452, 230, 522, 475, 1142, 1146, 1140, 1207, 1141, 1196,
	1197, 1143, 1258, 1259, 1260, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 0, 1229, 1136, 0, 1144, 1145, 1238,
	1247, 1248, 582, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 1200, 190, 211, 352, 1263, 434, 275, 560,
	532, 527, 197, 213, 1139, 249, 1150, 1158, 0, 1164,
	1172, 1173, 1185, 1187, 1188, 1189, 1190, 1208, 1209, 1211,
	1219, 1221, 1224, 1226, 1233, 1244, 1266, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 557, 558, 286, 516, 545,
	0, 0, 362, 1199, 1205, 365, 268, 291, 306, 1214,
	531, 481, 217, 446, 277, 240, 1232, 1234, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 1195, 1223, 360, 497, 498, 302, 380, 0,
	0, 0, 1252, 1237, 496, 0, 1180, 1255, 1149, 1168,
	1265, 1171, 1174, 1216, 1128, 1194, 399, 1165, 1121, 1153,
	1123, 1160, 1124, 1151, 1182, 257, 1148, 1239, 1198, 1254,
	350, 254, 1130, 1154, 413, 1170, 196, 1218, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 1261, 354, 1204, 0, 476, 384, 0, 0,
	0, 1184, 1243, 1192, 1230, 1179, 1217, 1138, 1203, 1256,
	1166, 1213, 1257, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1162, 1210, 1251, 1163, 1212, 252, 307, 259,
	251, 501, 1262, 1242, 1127, 1191, 1250, 0, 0, 219,
	1253, 1186, 0, 1215, 0, 1268, 1122, 1206, 0, 1125,
	1129, 1264, 1246, 1157, 262, 0, 0, 0, 0, 0,
	0, 0, 1183, 1193, 1227, 1231, 1177, 0, 0, 0,
	0, 0, 0, 0, 1155, 0, 1202, 0, 0, 0,
	1134, 1126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1181, 0, 0, 0, 0, 1137,
	0, 1156, 1228, 0, 1120, 284, 1131, 385, 244, 0,
	1235, 1245, 1178, 541, 1249, 1176, 1175, 1222, 1135, 1241,
	1169, 349, 1133, 316, 191, 215, 0, 1167, 395, 441,
	453, 1240, 1152, 1161, 242, 1159, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 1201, 1220, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	559, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 555, 203, 485, 515, 229,
	463, 0, 0, 561, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	562, 218, 536, 210, 1132, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 563, 224, 225, 227, 1147,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 1236, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 556, 554, 390, 297, 474, 319,
	357, 1225, 1267, 408, 452, 230, 522, 475, 1142, 1146,
	1140, 1207, 1141, 1196, 1197, 1143, 1258, 1259, 1260, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 0, 1229, 1136,
	0, 1144, 1145, 1238, 1247, 1248, 582, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 1200, 190, 211, 352,
	1263, 434, 275, 560, 532, 527, 197, 213, 1139, 249,
	1150, 1158, 0, 1164, 1172, 1173, 1185, 1187, 1188, 1189,
	1190, 1208, 1209, 1211, 1219, 1221, 1224, 1226, 1233, 1244,
	1266, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 557,
	558, 286, 516, 545, 0, 0, 362, 1199, 1205, 365,
	268, 291, 306, 1214, 531, 481, 217, 446, 277, 240,
	1232, 1234, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 1195, 1223, 360, 497,
	498, 302, 380, 0, 0, 0, 0, 0, 496, 0,
	681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 668, 0, 0, 0, 257,
	673, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 680, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 676, 677, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 89, 0, 0, 818, 802,
	768, 769, 806, 819, 820, 821, 822, 807, 0, 228,
	808, 809, 235, 810, 0, 767, 708, 710, 709, 727,
	728, 729, 730, 731, 732, 733, 706, 815, 823, 824,
	0, 252, 307, 259, 251, 501, 0, 0, 1930, 1931,
	1932, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 650, 665, 0, 679, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 662, 663, 0, 0, 0, 0,
	762, 0, 664, 0, 0, 672, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 761, 0, 0, 541, 0, 0,
	759, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 812, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 559, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 555,
	203, 485, 515, 229, 463, 0, 0, 561, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 813, 814, 243, 562, 714, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	722, 723, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 563,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 556, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 772, 760, 685, 776, 687, 773, 774, 682,
	683, 686, 775, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 0, 763, 671, 670, 0, 678, 0, 704, 705,
	707, 711, 712, 713, 724, 725, 726, 734, 736, 737,
	735, 738, 739, 740, 743, 744, 745, 746, 741, 742,
	747, 688, 692, 689, 690, 691, 703, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 786, 787, 788,
	789, 790, 791, 717, 721, 720, 718, 719, 715, 716,
	669, 190, 211, 352, 0, 434, 275, 560, 532, 527,
	197, 213, 777, 249, 778, 0, 0, 782, 0, 0,
	0, 784, 783, 0, 785, 751, 750, 0, 0, 779,
	780, 0, 781, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 792, 793, 794,
	795, 796, 797, 798, 799, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 817, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 681, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 668, 0, 0, 0, 257, 673, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 680, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 676, 677, 0, 0, 0,
	0, 0, 0, 2080, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 89, 0, 0, 818, 802, 768, 769,
	806, 819, 820, 821, 822, 807, 0, 228, 808, 809,
	235, 810, 0, 767, 708, 710, 709, 727, 728, 729,
	730, 731, 732, 733, 706, 815, 823, 824, 2081, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 650,
	665, 0, 679, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 662, 663, 0, 0, 0, 0, 762, 0,
	664, 0, 0, 672, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 761, 0, 0, 541, 0, 0, 759, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 812, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 559, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 555, 203, 485,
	515, 229, 463, 0, 0, 561, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 813,
	814, 243, 562, 714, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 722, 723,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 563, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 556, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	772, 760, 685, 776, 687, 773, 774, 682, 683, 686,
	775, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 0,
	763, 671, 670, 0, 678, 0, 704, 705, 707, 711,
	712, 713, 724, 725, 726, 734, 736, 737, 735, 738,
	739, 740, 743, 744, 745, 746, 741, 742, 747, 688,
	692, 689, 690, 691, 703, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 786, 787, 788, 789, 790,
	791, 717, 721, 720, 718, 719, 715, 716, 669, 190,
	211, 352, 0, 434, 275, 560, 532, 527, 197, 213,
	777, 249, 778, 0, 0, 782, 0, 0, 0, 784,
	783, 0, 785, 751, 750, 0, 0, 779, 780, 0,
	781, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 792, 793, 794, 795, 796,
	797, 798, 799, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 817, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 0, 380,
	360, 497, 498, 302, 80, 496, 0, 681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 668, 0, 0, 0, 257, 673, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 680, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 676, 677, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 89, 0, 0, 818, 802, 768, 769, 806,
	819, 820, 821, 822, 807, 0, 228, 808, 809, 235,
	810, 0, 767, 708, 710, 709, 727, 728, 729, 730,
	731, 732, 733, 706, 815, 823, 824, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 650, 665,
	0, 679, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 663, 0, 0, 0, 0, 762, 0, 664,
	0, 0, 672, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 761, 0, 0, 541, 0, 0, 759, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 812, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 813, 814,
	243, 562, 714, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 722, 723, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 772,
	760, 685, 776, 687, 773, 774, 682, 683, 686, 775,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 763,
	671, 670, 0, 678, 0, 704, 705, 707, 711, 712,
	713, 724, 725, 726, 734, 736, 737, 735, 738, 739,
	740, 743, 744, 745, 746, 741, 742, 747, 688, 692,
	689, 690, 691, 703, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 786, 787, 788, 789, 790, 791,
	717, 721, 720, 718, 719, 715, 716, 669, 190, 211,
	352, 88, 434, 275, 560, 532, 527, 197, 213, 777,
	249, 778, 0, 0, 782, 0, 0, 0, 784, 783,
	0, 785, 751, 750, 0, 0, 779, 780, 0, 781,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 792, 793, 794, 795, 796, 797,
	798, 799, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 817, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	668, 0, 0, 0, 257, 673, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 680, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 676, 677, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	89, 0, 0, 818, 802, 768, 769, 806, 819, 820,
	821, 822, 807, 0, 228, 808, 809, 235, 810, 0,
	767, 708, 710, 709, 727, 728, 729, 730, 731, 732,
	733, 706, 815, 823, 824, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 650, 665, 0, 679,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	663, 0, 0, 0, 0, 762, 0, 664, 0, 0,
	672, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 761,
	0, 0, 541, 0, 0, 759, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 812, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 3387, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 813, 814, 243, 562,
	714, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 722, 723, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 772, 760, 685,
	776, 687, 773, 774, 682, 683, 686, 775, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 763, 671, 670,
	0, 678, 0, 704, 705, 707, 711, 712, 713, 724,
	725, 726, 734, 736, 737, 735, 738, 739, 740, 743,
	744, 745, 746, 741, 742, 747, 688, 692, 689, 690,
	691, 703, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 786, 787, 788, 789, 790, 791, 717, 721,
	720, 718, 719, 715, 716, 669, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 777, 249, 778,
	0, 0, 782, 0, 0, 0, 784, 783, 0, 785,
	751, 750, 0, 0, 779, 780, 0, 781, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 792, 793, 794, 795, 796, 797, 798, 799,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 817,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 668, 0,
	0, 0, 257, 673, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 680,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	676, 677, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 89, 0,
	1500, 818, 802, 768, 769, 806, 819, 820, 821, 822,
	807, 0, 228, 808, 809, 235, 810, 0, 767, 708,
	710, 709, 727, 728, 729, 730, 731, 732, 733, 706,
	815, 823, 824, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 650, 665, 0, 679, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 663, 0,
	0, 0, 0, 762, 0, 664, 0, 0, 672, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 761, 0, 0,
	541, 0, 0, 759, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 812, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 813, 814, 243, 562, 714, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 722, 723, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 772, 760, 685, 776, 687,
	773, 774, 682, 683, 686, 775, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 763, 671, 670, 0, 678,
	0, 704, 705, 707, 711, 712, 713, 724, 725, 726,
	734, 736, 737, 735, 738, 739, 740, 743, 744, 745,
	746, 741, 742, 747, 688, 692, 689, 690, 691, 703,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	786, 787, 788, 789, 790, 791, 717, 721, 720, 718,
	719, 715, 716, 669, 190, 211, 352, 0, 434, 275,
	560, 532, 527, 197, 213, 777, 249, 778, 0, 0,
	782, 0, 0, 0, 784, 783, 0, 785, 751, 750,
	0, 0, 779, 780, 0, 781, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	792, 793, 794, 795, 796, 797, 798, 799, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 817, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 668, 0, 0, 0,
	257, 673, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 680, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 676, 677,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 89, 0, 0, 818,
	802, 768, 769, 806, 819, 820, 821, 822, 807, 0,
	228, 808, 809, 235, 810, 0, 767, 708, 710, 709,
	727, 728, 729, 730, 731, 732, 733, 706, 815, 823,
	824, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 650, 665, 0, 679, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 663, 907, 0, 0,
	0, 762, 0, 664, 0, 0, 672, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 761, 0, 0, 541, 0,
	0, 759, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 812,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 559, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	555, 203, 485, 515, 229, 463, 0, 0, 561, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 813, 814, 243, 562, 714, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 722, 723, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	563, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 556,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 772, 760, 685, 776, 687, 773, 774,
	682, 683, 686, 775, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 763, 671, 670, 0, 678, 0, 704,
	705, 707, 711, 712, 713, 724, 725, 726, 734, 736,
	737, 735, 738, 739, 740, 743, 744, 745, 746, 741,
	742, 747, 688, 692, 689, 690, 691, 703, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 786, 787,
	788, 789, 790, 791, 717, 721, 720, 718, 719, 715,
	716, 669, 190, 211, 352, 0, 434, 275, 560, 532,
	527, 197, 213, 777, 249, 778, 0, 0, 782, 0,
	0, 0, 784, 783, 0, 785, 751, 750, 0, 0,
	779, 780, 0, 781, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 792, 793,
	794, 795, 796, 797, 798, 799, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 817, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 668, 0, 0, 0, 257, 673,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 680, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 676, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 89, 0, 0, 818, 802, 768,
	769, 806, 819, 820, 821, 822, 807, 0, 228, 808,
	809, 235, 810, 0, 767, 708, 710, 709, 727, 728,
	729, 730, 731, 732, 733, 706, 815, 823, 824, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	650, 665, 0, 679, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 662, 663, 0, 0, 0, 0, 762,
	0, 664, 0, 0, 672, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 761, 0, 0, 541, 0, 0, 759,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 812, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	813, 814, 243, 562, 714, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 722,
	723, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 772, 760, 685, 776, 687, 773, 774, 682, 683,
	686, 775, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 763, 671, 670, 0, 678, 0, 704, 705, 707,
	711, 712, 713, 724, 725, 726, 734, 736, 737, 735,
	738, 739, 740, 743, 744, 745, 746, 741, 742, 747,
	688, 692, 689, 690, 691, 703, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 786, 787, 788, 789,
	790, 791, 717, 721, 720, 718, 719, 715, 716, 669,
	190, 211, 352, 0, 434, 275, 560, 532, 527, 197,
	213, 777, 249, 778, 0, 0, 782, 0, 0, 0,
	784, 783, 0, 785, 751, 750, 0, 0, 779, 780,
	0, 781, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 792, 793, 794, 795,
	796, 797, 798, 799, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 817, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 668, 0, 0, 0, 257, 673, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 680, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 676, 677, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 89, 0, 0, 818, 802, 768, 769, 806,
	819, 820, 821, 822, 807, 0, 228, 808, 809, 235,
	810, 0, 767, 708, 710, 709, 727, 728, 729, 730,
	731, 732, 733, 706, 815, 823, 824, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	0, 679, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 663, 0, 0, 0, 0, 762, 0, 664,
	0, 0, 672, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 761, 0, 0, 541, 0, 0, 759, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 812, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 813, 814,
	243, 562, 714, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 722, 723, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 772,
	760, 685, 776, 687, 773, 774, 682, 683, 686, 775,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 763,
	671, 670, 0, 678, 0, 704, 705, 707, 711, 712,
	713, 724, 725, 726, 734, 736, 737, 735, 738, 739,
	740, 743, 744, 745, 746, 741, 742, 747, 688, 692,
	689, 690, 691, 703, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 786, 787, 788, 789, 790, 791,
	717, 721, 720, 718, 719, 715, 716, 669, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 777,
	249, 778, 0, 0, 782, 0, 0, 0, 784, 783,
	0, 785, 751, 750, 0, 0, 779, 780, 0, 781,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 792, 793, 794, 795, 796, 797,
	798, 799, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 817, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	978, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 977, 541, 0, 0, 0, 0, 0, 974, 975,
	349, 935, 316, 191, 215, 968, 972, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 1463, 802, 0, 0, 1460, 0, 0, 0, 0,
	1458, 0, 228, 1459, 1457, 235, 1462, 0, 767, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 562, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	560, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 557, 558, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 0, 380, 360, 497, 498, 302, 80,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 89, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 559, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 555, 203, 485, 515, 229, 463, 0, 0, 561,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 562, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 563, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	556, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 582, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 88, 434, 275, 560,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 557, 558, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 1519, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 1521, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 1523, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 1297, 0, 1298,
	1299, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 559, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 555,
	203, 485, 515, 229, 463, 0, 0, 561, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 562, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 563,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 556, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 560, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 557, 558, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	0, 380, 360, 497, 498, 302, 80, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 89, 0, 1500, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 562, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 88, 434, 275, 560, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 557, 558, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 89, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 562, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 2067, 0, 0,
	2066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	557, 558, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 2017,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 1700, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 2015, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 935,
	316, 191, 215, 933, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 562, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	560, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 557, 558, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 2017, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 1700,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 559, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	555, 203, 485, 515, 229, 463, 0, 0, 561, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 562, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	563, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 556,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 560, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 557, 558, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 1500, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	3297, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 562, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 560, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 557, 558, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 1850, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 562, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	557, 558, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 2418, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 2403, 0, 0,
	0, 0, 228, 0, 0, 235, 2404, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 562, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	560, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 557, 558, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 1542, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 1541,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 559, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	555, 203, 485, 515, 229, 463, 0, 0, 561, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 562, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	563, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 556,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 560, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 557, 558, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 631, 632,
	633, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 562, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 560, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 557, 558, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 3421, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 562, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	557, 558, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 1700, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 3297, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 562, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	560, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 557, 558, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 89, 0, 0, 0,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 559, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	555, 203, 485, 515, 229, 463, 0, 0, 561, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 562, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	563, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 556,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 560, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 557, 558, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 2068, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 562, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 560, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 557, 558, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 1523, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 562, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	557, 558, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 562, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 1805, 434, 275,
	560, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 557, 558, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 1797,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 559, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	555, 203, 485, 515, 229, 463, 0, 0, 561, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 562, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	563, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 556,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 560, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 557, 558, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 1667, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 562, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 560, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 557, 558, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 1665,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 562, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	557, 558, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 1663, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 1661, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 562, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	560, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 557, 558, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 1659, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 559, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	555, 203, 485, 515, 229, 463, 0, 0, 561, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 562, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	563, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 556,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 560, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 557, 558, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 1655, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 562, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 560, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 557, 558, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 1653,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 562, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	557, 558, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 1651, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 1626, 0,
	0, 0, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 562, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	560, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 557, 558, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 1527,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 559, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	555, 203, 485, 515, 229, 463, 0, 0, 561, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 562, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	563, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 556,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 560, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 557, 558, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 89, 0, 0, 0, 802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 562, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 560, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 557, 558, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1280, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 562, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	557, 558, 1279, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 888, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 585, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 559, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 555, 203, 485, 515, 229, 463, 0, 0,
	561, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 562, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 563, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 556, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 582, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	560, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 557, 558, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 559, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	555, 203, 485, 515, 229, 463, 0, 0, 561, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 562, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	563, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 556,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 582, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 560, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 3429, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 557, 558, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 559, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 555, 203,
	485, 515, 229, 463, 0, 0, 561, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 562, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 563, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 556, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 560, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 557, 558, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 559, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 555, 203, 485, 515,
	229, 463, 0, 0, 561, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 562, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 563, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 556, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 582, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 560, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	557, 558, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 559,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 555, 203, 485, 515, 229, 463,
	0, 0, 561, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 562,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 563, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 556, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 582, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 560, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 557, 558,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 0, 0, 360, 497, 498,
	302,
}

var yyPact = [...]int{
	-1000, -1000, 4930, -1000, -457, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2291, 2331,
	-1000, -1000, -1000, -1000, 2404, -1000, 859, 1834, -1000, 2182,
	3781, -1000, 47213, 604, -1000, 44621, 603, 3695, 29717, -1000,
	215, -1000, 188, 45917, 210, -1000, -1000, -1000, -275, 19347,
	2115, 74, 73, 47213, -1000, -1000, -1000, -1000, 2367, 1835,
	-1000, 402, -1000, -1000, -1000, -1000, -1000, -1000, 43973, -1000,
	959, -1000, -1000, 2194, 2173, 2412, 773, 2112, -1000, 2272,
	1835, -1000, 19347, 2345, 2242, 18699, 18699, 520, -1000, -1000,
	289, -1000, -1000, 25181, 47213, 32309, 539, -1000, 2182, -1000,
	-1000, -1000, 114, -1000, 446, 1766, -1000, 1764, -1000, 782,
	742, 463, 584, 563, 462, 460, 458, 450, 449, 445,
	440, 435, 470, -1000, 815, 815, -109, -112, 4594, 538,
	511, 511, 725, 567, 2136, 2135, -1000, -1000, 815, 815,
	815, 348, 815, 815, 815, 815, 380, 377, 815, 815,
	815, 815, 815, 815, 815, 815, 815, 815, 815, 815,
	815, 815, 815, 815, 815, 564, 2182, 354, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 47213, 366, 47213, -1000, 674, 47213, 940,
	940, 123, 940, 940, 940, 940, 249, 761, 72, -1000,
	242, 367, 224, 344, 929, 262, -1000, -1000, 261, 929,
	1583, -1000, 777, 340, 245, -1000, 940, 940, -1000, 12842,
	223, 12842, 12842, -1000, 2177, -1000, -1000, -1000, -1000, -1000,
	1131, -1000, -1000, -1000, -1000, -1000, 566, -1000, -1000, -1000,
	-1000, 45917, 43325, -1000, -1000, 109, -1000, -1000, 1621, 1871,
	19347, 1132, -1000, 1645, 739, -1000, -1000, -1000, -1000, -1000,
	636, -1000, 19995, 19995, 19995, 19995, -1000, -1000, 1770, 42677,
	1770, 1770, 19995, 1770, -1000, 19995, 1770, 1770, 1770, 19347,
	1770, 1770, 1770, 1770, -1000, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, -1000, -1000, -1000, -1000, 1770, 668, 1770,
	1770, 1770, 1770, 1770, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1770, 1770, 1770, 1770, 1770, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21291, 1284, 1278, 1270, -1000, 16755, 1770, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47213, -1000,
	1770, 231, 45917, 45917, 400, 2272, 1835, -1000, 2367, 2355,
	402, -1000, 2659, 1379, 1398, 1137, 1835, 1738, 47213, -1000,
	1776, -1000, -1000, -1000, -1000, 1958, 1213, 1570, -1000, -1000,
	-1000, -1000, 2161, 19347, -1000, -1000, 2398, -1000, 22588, 667,
	2393, 42029, -1000, 520, 520, 1753, 423, 24, -1000, -1000,
	-1000, -1000, 846, 29069, -1000, -1000, -1000, -1000, 1627, 47213,
	-1000, -1000, 3841, 1070, -1000, 1832, -1000, 1614, -1000, 1796,
	19347, 1858, 600, 1070, 581, 579, 576, -1000, -16, -1000,
	-1000, -1000, -1000, -1000, -1000, 815, 815, 815, -1000, 453,
	2342, 3781, 4632, -1000, -1000, -1000, 41381, 1831, 1070, -1000,
	1826, -1000, 906, 669, 671, 671, 1070, -1000, -1000, 46565,
	1070, 904, 896, 1070, 1070, 45917, 45917, -1000, 40733, -1000,
	40085, 39437, 1122, 45917, 38789, 38141, 37493, 36845, 36197, -1000,
	2167, -1000, 2110, -1000, -1000, -1000, 46565, 1070, 1070, 46565,
	45917, 46565, 47213, 1070, -1000, -1000, 370, -1000, -1000, 1120,
	1119, 1118, 815, 815, 1117, 1563, 1550, 1545, 815, 815,
	1111, 1516, 31013, 1451, 414, 1109, 1106, 1097, 1128, 1447,
	227, 1441, 1121, 1098, 1096, 45917, 1824, 47213, -1000, 329,
	781, 653, 840, 2182, 2113, 1751, 559, 597, 1070, 514,
	514, 45917, -1000, 14804, -1000, -1000, 1412, 19347, -1000, 944,
	929, 929, -1000, -1000, -1000, -1000, -1000, -1000, 940, 47213,
	944, -1000, -1000, -1000, 929, 940, 47213, 940, 940, 940,
	940, 929, 929, 929, 940, 47213, 47213, 47213, 47213, 47213,
	47213, 47213, 47213, 47213, 12842, 777, 940, -279, -1000, 1400,
	-1000, -1000, 1899, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12842,
	12842, -1000, -1000, -1000, -1000, 194, -1000, 35549, 433, 833,
	-1000, 1748, 34901, -1000, -281, -282, -285, -293, -1000, -1000,
	-1000, -298, -300, -1000, -1000, -1000, 19347, 19347, 19347, 19347,
	-141, -1000, 932, 19995, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 225, 877, 19995, 19995, 19995, 19995, 19995, 19995, 19995,
	19995, 19995, 19995, 19995, 19995, 19995, 19995, 19995, -1000, -1000,
	27125, 6084, 6084, 739, 739, 739, 739, -1000, -82, 1741,
	46565, -1000, -1000, -1000, 663, 19347, 19347, 739, -1000, 1070,
	16755, 34253, 18699, 18699, 19347, 855, 1871, 46565, 19347, -1000,
	1137, -1000, -1000, -1000, 1043, -1000, 912, 2153, 2153, 2153,
	2153, 19347, 19347, 19347, 19347, 19347, 19347, 19347, 19347, 19347,
	19347, 2153, 45917, 45917, 891, 19347, 19347, 19347, 19347, 19347,
	19347, 15458, 19347, 19347, 19995, 19347, 19347, 19347, 1137, 19347,
	19347, 19347, 19347, 19347, 19347, 19347, 19347, 19347, 19347, 19347,
	19347, 19347, 19347, 19347, 19347, 19347, 19347, 19347, 19347, 19347,
	19347, 19347, 19347, 19347, 19347, 19347, 1137, 19347, 1136, 19347,
	19347, 18699, 14150, 18699, 18699, 18699, 18699, 18699, -1000, -1000,
	-1000, -1000, -1000, 19347, 19347, 19347, 19347, 19347, 19347, 19347,
	19347, 1137, 19347, 19347, 19347, 19347, 19347, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1382, 1607, 1335,
	19347, -1000, 1740, -1000, -83, 24533, 19347, 1396, 2392, 1873,
	45917, -1000, -1000, -1000, 2272, -1000, 2272, 1382, 2385, 2004,
	18699, -1000, -1000, 2385, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1651, -1000, 47213, 1738, 2227, 45917, 1999, 1391,
	532, -1000, 19347, 19347, 1737, -1000, 1159, 47213, -1000, -141,
	-1000, 33605, -1000, -1000, 12188, 47213, 407, 47213, -1000, 23885,
	32957, 279, -1000, 24, 1677, -1000, 47, 31, 16106, 724,
	-1000, -1000, -1000, 4594, 20643, 1594, 724, 117, -1000, -1000,
	-1000, 1796, -1000, 1796, 1796, 1796, 1796, 532, 532, 532,
	532, -1000, -1000, -1000, -1000, -1000, 1823, 1818, -1000, 1796,
	1796, 1796, 1796, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1817, 1817, 1817, 1797, 1797, 500, -1000, 19347, 365, 32309,
	2199, 1094, 1069, 329, 516, 1870, 1070, 1070, 1070, 516,
	-1000, 1295, 1220, 1189, -1000, -434, 1736, -1000, -1000, 2340,
	-1000, -1000, 812, 945, 942, 875, 45917, 243, 393, -1000,
	496, -1000, 32309, 1070, 895, 671, 1070, -1000, 1070, -1000,
	-1000, -1000, -1000, -1000, 1070, -1000, -1000, 1733, -1000, 1690,
	980, 935, 975, 919, 1733, -1000, -1000, -90, 1733, -1000,
	1733, -1000, 1733, -1000, 1733, -1000, 1733, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 813, 234, -193, 45917,
	243, 540, -1000, 524, 27125, -1000, -1000, -1000, 27125, 27125,
	-1000, -1000, -1000, -1000, 1387, 1365, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -420, 47213, -1000, 252, 831,
	385, 410, 364, 47213, 521, 2257, 2256, 2253, 2247, 2244,
	347, 376, 47213, 47213, 514, 1918, 47213, 2206, 47213, -1000,
	-1000, -1000, -1000, -1000, 1871, 47213, -1000, -1000, 940, 940,
	-1000, -1000, 47213, 940, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 940, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47213, -1000,
	-1000, -1000, -1000, 45917, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1, 150, 43, 404, -1000, -1000, -1000,
	-1000, -1000, 2259, -1000, 1871, 872, 882, -1000, 1770, -1000,
	-1000, 1005, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 225,
	19995, 19995, 19995, 1957, 571, 1864, 1886, 1079, 1095, 1095,
	974, 974, 740, 740, 740, 740, 740, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1363, -1000, 1770, 46565, 1578,
	14150, 2040, 1265, 1137, 2983, -1000, 1574, -1000, 1574, 1062,
	854, -1000, 19347, 1137, 2955, -1000, -1000, 1137, 1137, 1137,
	19347, -1000, -1000, 19347, 19347, 19347, 19347, 1069, 1069, 1069,
	1069, 1069, 1069, 1069, 1069, 1069, 1069, 19347, 1711, 1706,
	2389, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1836, 1069, 1069, 1069, 1069, 1069, 19347, 1492,
	-1000, -1000, -1000, 1330, 2895, 1944, 2889, 1069, 1069, -1000,
	1069, 2825, 2800, 1137, 1621, 1137, 1699, -1000, 2796, 1069,
	2790, 2781, 2777, 2137, 2773, 2767, 2738, 1069, 1069, 1069,
	2131, 2729, 2725, 2715, 2711, 2702, 2698, 2686, 2682, 2613,
	1069, -147, 1069, 1137, -1000, -1000, -1000, -1000, -1000, 2604,
	2099, 1137, 1698, 1770, 652, -1000, -1000, 1574, 1137, 1137,
	1574, 1574, 2593, 2589, 2255, 2250, 2246, 2231, 1069, 1069,
	-1000, 1069, 2225, 2217, 2059, 1992, 1137, -1000, 1335, 47213,
	-1000, -274, -1000, 25, 737, 1770, -1000, 31013, 1137, -1000,
	5107, -1000, 1073, -1000, -1000, -1000, -1000, -1000, 28421, 1644,
	2385, -1000, -1000, 1770, 1567, -1000, -1000, 532, 90, 27773,
	713, 713, 139, 1871, 1871, 19347, -1000, -1000, -1000, -1000,
	-1000, -1000, 643, 2361, 397, 1770, -1000, 1712, 2902, -1000,
	-1000, -1000, 2226, 21940, -1000, -1000, 1770, 1770, 47213, 1598,
	1587, -1000, 640, -1000, 1084, 1677, 24, 28, -1000, -1000,
	-1000, -1000, 1871, -1000, 1143, 434, 296, -1000, 502, -1000,
	-1000, -1000, -1000, 2121, 97, -1000, -1000, -1000, 280, 532,
	-1000, -1000, -1000, -1000, -1000, -1000, 1327, 1327, -1000, -1000,
	-1000, -1000, -1000, 1085, -1000, -1000, -1000, 1083, -1000, -1000,
	2212, 1897, 365, -1000, -1000, 815, 1324, -1000, -1000, 2130,
	815, 815, 45917, -1000, -1000, 1575, 2199, 252, 47213, 861,
	1917, -1000, 1870, 1870, 1870, 47213, -1000, -1000, -1000, -1000,
	-1000, -1000, -421, 63, 378, -1000, -1000, -1000, 3613, 45917,
	1561, -1000, 239, -1000, 1530, -1000, 45917, -1000, 1559, 1815,
	1070, 1070, -1000, -1000, -1000, 45917, 1770, -1000, -1000, -1000,
	-1000, 594, 2157, 325, -1000, -1000, -169, -1000, -1000, 243,
	239, 46565, 1070, 724, -1000, -1000, -1000, -1000, -1000, -423,
	1556, 572, 247, 369, 47213, 47213, 47213, 47213, 47213, 620,
	-1000, -1000, 61, -1000, -1000, 222, -1000, -1000, -1000, -1000,
	222, -1000, -1000, -1000, -1000, 368, 523, -1000, 47213, 47213,
	732, -1000, -1000, -1000, 929, -1000, -1000, 929, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2178, 47213,
	37, -340, -1000, -335, 19347, -1000, -1000, -1000, -1000, 1906,
	569, 1864, 19995, 19995, 19995, -1000, -1000, -1000, 1042, 1042,
	27125, -1000, 19347, 18699, -1000, -1000, 19347, 19347, 850, -1000,
	19347, 1041, -1000, 19347, -1000, -1000, -1000, 1335, 1069, 1069,
	1069, 1069, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1686, 19347, 19347, 19347, 1137, 311, -1000, -1000,
	-1000, -1000, -1000, 2383, -1000, 19347, -1000, 27125, 19347, 19347,
	19347, -1000, -1000, -1000, 19347, 19347, -1000, -1000, 19347, 19347,
	-1000, 19347, 19347, 19347, -1000, 19347, 19347, 19347, 19347, -1000,
	-1000, -1000, -1000, 19347, 19347, 19347, 19347, 19347, 19347, 19347,
	19347, 19347, 19347, -1000, -1000, 32309, 126, -147, 1136, 126,
	1136, -1000, 18699, 13496, -1000, -1000, -1000, -1000, -1000, 19347,
	19347, 19347, 19347, 19347, 19347, -1000, -1000, -1000, 19347, 19347,
	-1000, 19347, -1000, 19347, -1000, -1000, -1000, -1000, -1000, 737,
	-1000, 671, 671, 671, 45917, -1000, -1000, -1000, -1000, 1649,
	-1000, 2301, -1000, 2028, 2025, 2380, 2361, -1000, 23885, 2385,
	-1000, -1000, 45917, -263, -1000, 2085, 2089, 713, 713, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11534, 2272, 19347, 1910,
	46565, 195, -1000, 23237, 45917, 46565, 23885, 23885, 23885, 23885,
	23885, -1000, 1954, 1934, -1000, 2015, 1931, 1947, 47213, -1000,
	1382, 1549, -1000, 19347, 25829, 1602, 23885, -1000, -1000, 23885,
	47213, 10880, -1000, -1000, 30, 36, -1000, -1000, -1000, -1000,
	4594, -1000, -1000, 762, 2219, 2119, -1000, -1000, -1000, -1000,
	-1000, 1534, -1000, 1527, 1646, 1523, 234, -1000, 1855, 2172,
	815, 815, -1000, 1080, -1000, 1070, 1320, 1312, -1000, -1000,
	-1000, 565, -1000, 2205, 47213, 1907, 1903, 1895, -1000, -431,
	1078, 1814, 1853, 19347, 1812, 2337, 1634, 45917, -1000, -1000,
	46565, -1000, 258, -1000, 365, 45917, -1000, -1000, -1000, 393,
	47213, -1000, 5894, -1000, -1000, -1000, 239, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 47213, 353, -1000, 1811, 1130, -1000,
	-1000, 1655, -1000, -1000, -1000, -1000, 268, 383, 1305, 218,
	1298, 218, -1000, 47213, 665, 1897, 47213, -1000, -1000, -1000,
	940, 940, -1000, -1000, 2156, -1000, 1070, 1069, 19995, 19995,
	-1000, 739, 309, -121, 1796, 1796, -1000, 1796, 1797, -1000,
	1796, 181, 1796, 165, 1796, -1000, -1000, 1137, 1137, 1335,
	-1000, 1953, 1216, -1000, 1871, 19347, 2207, -1000, -1000, -1000,
	-1000, -1000, -23, 2187, 2181, 1069, -1000, 1795, 1790, 19347,
	1069, 1137, 1844, 1069, 1069, 1069, 1069, -1000, 1871, 1335,
	2176, 1335, 1069, 1069, 2169, 352, 1069, 1434, 1434, 1434,
	1434, 1434, 1335, 1335, 1335, 1335, 45917, -1000, -147, -1000,
	-1000, -187, -189, -1000, 1137, -147, 1641, 1137, -1000, 1767,
	1708, 2155, 1704, 1069, 1827, 1069, 1069, 1069, 1691, -1000,
	2228, 2228, 2228, 1416, 1073, 47213, -1000, -1000, -1000, -1000,
	2361, 2354, 1636, -1000, -1000, 90, 448, -1000, 2095, 2089,
	-1000, 2335, 2068, 2325, -1000, -1000, -1000, -1000, -1000, 1871,
	-1000, 2184, 1630, -1000, 819, 1623, -1000, -1000, 18051, 1420,
	2007, 634, 1416, 1701, 2902, 1865, 1893, 2877, -1000, -1000,
	-1000, -1000, 1930, -1000, 1896, -1000, -1000, 1776, -1000, 1731,
	407, 23885, 1684, 1684, -1000, 631, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 982, 5274, 2408, -1000, 1288, -1000, 1140,
	214, 1076, -1000, -1000, 815, 815, -1000, 894, 892, -1000,
	47213, 1789, -1000, 532, 1286, 532, 1075, -1000, 1074, -1000,
	-1000, -1000, -1000, 1802, 2124, -1000, -1000, -1000, -1000, 47213,
	-1000, -1000, 47213, 47213, 47213, 1784, 2322, -1000, 19347, 1781,
	817, 2145, 45917, 45917, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 497, 815, -399, 374, 373,
	815, 815, 815, -449, -1000, -1000, 1410, 1406, -1000, -110,
	-1000, 19347, -1000, -1000, -1000, 1040, 1040, 1284, 1278, 1270,
	-1000, 1776, -1000, -1000, -1000, 1417, -1000, -1000, -96, 45917,
	45917, 45917, 45917, -1000, -1000, 1035, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 739, 1137,
	345, -99, 1137, -1000, -1000, 532, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19347, -1000, 19347, -1000,
	1871, 19347, 2272, 1266, 19347, 19347, -1000, 1066, 1060, 1069,
	-1000, -1000, -1000, 19347, -1000, -1000, -1000, -1000, -1000, 19347,
	-1000, -1000, -1000, 19347, 260, 1042, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1137, 406, -1000, -1000,
	-1000, -1000, 2368, -1000, 1137, 19347, -1000, -1000, 19347, -1000,
	19347, 19347, -1000, 19347, -1000, 19347, -1000, -1000, -1000, -1000,
	19347, 1770, 2026, 1770, 1770, 25829, -1000, -1000, 2354, 2351,
	2316, 2047, 2051, 2051, 2095, -1000, 2315, 2313, -1000, 1258,
	2310, 1252, 888, -1000, 46565, 19347, 195, -1000, 398, 45917,
	195, 45917, -1000, 2349, -1000, -1000, 19347, 1779, -1000, 19347,
	-1000, -1000, -1000, -1000, 6084, 2361, 1684, -1000, -1000, 752,
	-1000, 19347, -1000, -1000, -1000, 99, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1245, 1209, -1000, -1000, 1778, 19347,
	-1000, -1000, -1000, 1399, 1378, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1776, -1000, -1000, -1000, -1000, 393, -427,
	2011, 45917, 1038, -1000, 1384, 1634, 389, 195, 1207, 815,
	815, 815, 1026, 1020, 31013, 1377, -1000, 45917, 484, -1000,
	393, -1000, -116, -118, 1069, -1000, -1000, 2213, -1000, -1000,
	13496, -1000, -1000, 1774, 1869, -1000, -1000, -1000, -1000, 1998,
	-87, -105, -1000, -1000, 1069, 1069, 1292, 1137, -1000, 1069,
	1069, 1331, 1251, -1000, 1069, 1335, 1681, -1000, 260, 1137,
	1890, -1000, -1000, 6084, -1000, -1000, 2349, 2307, 126, -1000,
	-1000, 237, 126, 1871, 1642, 1069, 1529, 1341, 1069, 1069,
	26477, -1000, 2289, 2286, 31661, 31661, 737, 2351, -158, 19347,
	19347, 2034, 1033, -1000, -1000, -1000, -1000, 1201, 1191, -1000,
	1180, -1000, 2407, -1000, 1871, -1000, 195, -1000, 627, 1623,
	-1000, 2272, 1871, 45917, 1871, 93, 2349, -1000, 1069, -1000,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770, 1770,
	-1000, -1000, 45917, 1949, -1000, -1000, 2211, 1375, 60, -1000,
	1206, 1634, -1000, -1000, 148, -1000, 19347, -1000, 31013, 1169,
	1148, -1000, -1000, -1000, -1000, -449, -1000, -1000, -1000, -1000,
	-1000, -1000, 402, 1633, -1000, 794, 45917, 47213, -1000, 1984,
	-1000, -1000, -1000, 19347, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19347, -1000, 1137, 1879, -1000, -207, -1000, -395,
	19347, -147, -1000, -1000, -147, -1000, 19347, -1000, -1000, 19347,
	-1000, 19347, -1000, -1000, 1373, -1000, -1000, -1000, -1000, -1000,
	1373, 1373, -1000, -158, -1000, 1625, -1000, 45917, 1871, 1621,
	-1000, 990, -1000, -1000, -1000, -1000, -1000, 46565, 1623, 45917,
	-1000, 1371, 1137, 1770, 2272, -1000, 1356, -1000, 402, -1000,
	1772, 1853, -1000, -1000, -1000, 17403, -1000, -1000, -1000, -1000,
	-1000, 208, -94, 13496, 10226, 1351, -1000, -93, 1069, 1335,
	-1000, -303, -1000, -1000, -1000, -1000, 197, -1000, -1000, 1621,
	-1000, -1000, 1337, 1308, 1274, 30365, -1000, -1000, -1000, -1000,
	-158, -1000, -1000, 2210, -1000, -1000, 1609, -1000, -1000, 25829,
	45269, -1000, -77, 659, -94, 19347, 1771, 1137, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 64, -1000, -1000, -1000,
	-1000, -1000, 1655, -102, -1000, -1000, -1000, 250, -347, -183,
	-184, -1000, -1000, 19995, -1000, 19347, -1000, 19347, -1000, 19347,
	-1000, -1000, -1000, 45917, 1770, -1000, 1294, -1000, 3422, -201,
	1878, -1000, 42, -1000, -1000, -1000, 981, 1146, -1000, -1000,
	-1000, -1000, -1000, -1000, 1250, 45917, -1000, 493, -1000, -1000,
	-96, -106, 867, -1000, -1000, -1000, -1000, -1000, 1225, 1205,
	1069, -1000, 45917, -1000, 45269, -192, 724, 6084, -1000, 1875,
	1872, 2386, -1000, -1000, -1000, -1000, -1000, -1000, -452, 1218,
	256, -1000, -1000, 250, -1000, 19347, -1000, 19347, -1000, 1137,
	-1000, -1000, 2204, 93, -1000, 2401, -1000, 2387, 765, 765,
	-1000, 1009, -452, -1000, -1000, 1069, 1069, -1000, -204, -1000,
	-1000, -1000, -1000, -1000, 490, 1065, -1000, -1000, -1000, -1000,
	-1000, 6084, -1000, -1000, -1000, 276, 276, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3013, 3010, 38, 1, 37, 36, 3008, 90, 100,
	203, 30, 205, 102, 3007, 3006, 3005, 3002, 3001, 3000,
	2998, 175, 169, 164, 2997, 2996, 2995, 2993, 2992, 2991,
	2989, 2988, 2986, 2985, 163, 156, 198, 2984, 2982, 2981,
	115, 189, 79, 88, 192, 2980, 2978, 81, 2974, 2965,
	2963, 188, 186, 183, 874, 2962, 181, 114, 53, 2961,
	2952, 2949, 2943, 2940, 2936, 2930, 2928, 2926, 2924, 2921,
	2911, 2910, 2907, 2901, 2897, 2896, 277, 2895, 2894, 22,
	2892, 83, 2891, 2889, 2887, 2886, 8, 2885, 2883, 14,
	47, 2882, 2881, 51, 2876, 2875, 2874, 2873, 2872, 20,
	2862, 27, 2859, 40, 2858, 2851, 123, 2848, 2845, 2842,
	39, 2838, 2834, 2832, 2830, 2820, 2819, 2815, 140, 2807,
	2806, 2805, 239, 202, 2802, 2798, 167, 143, 116, 2797,
	2795, 105, 193, 2793, 120, 2789, 2788, 2787, 158, 2784,
	138, 2782, 2780, 69, 71, 2779, 432, 2778, 2776, 12,
	21, 63, 9, 18, 19, 2773, 2769, 66, 77, 2768,
	119, 2767, 2765, 101, 80, 2761, 98, 107, 2753, 2751,
	11, 7, 2747, 2, 6, 4, 65, 2741, 2738, 108,
	2736, 2726, 2717, 96, 2716, 2714, 173, 2712, 95, 129,
	103, 76, 2711, 48, 58, 2708, 2707, 2705, 2700, 2699,
	54, 2694, 2693, 2691, 135, 221, 159, 2689, 41, 82,
	59, 134, 2688, 64, 92, 195, 160, 2687, 2685, 137,
	131, 2682, 2679, 60, 45, 44, 2676, 112, 128, 118,
	111, 109, 139, 2675, 2672, 57, 74, 2671, 2657, 2654,
	2653, 161, 2636, 2635, 73, 2631, 61, 2628, 185, 2620,
	16, 68, 2619, 46, 174, 2618, 75, 2615, 2614, 70,
	97, 72, 43, 2613, 154, 162, 125, 178, 2612, 2609,
	56, 2607, 2595, 2586, 194, 361, 2584, 2580, 78, 176,
	136, 153, 94, 2579, 363, 2576, 2575, 132, 2606, 6246,
	2568, 42, 150, 2566, 2565, 7075, 157, 50, 33, 2564,
	106, 2562, 2561, 2554, 2549, 243, 187, 113, 155, 62,
	2543, 2541, 2533, 17, 2526, 2525, 2523, 2521, 2519, 2516,
	171, 35, 34, 32, 199, 67, 24, 133, 146, 84,
	2505, 2504, 2503, 122, 87, 2502, 148, 144, 124, 165,
	2498, 177, 141, 127, 2497, 91, 31, 2496, 2491, 2490,
	2481, 99, 2473, 2472, 2470, 2466, 168, 142, 121, 85,
	2462, 86, 117, 145, 151, 55, 2461, 49, 2460, 2456,
	29, 190, 28, 2455, 15, 104, 242, 2448, 5796, 180,
	2447, 23, 362, 147, 2446, 2445, 3, 10, 13, 2441,
	2440, 2439, 2438, 130, 2437, 2436, 2435, 2429, 26, 52,
	25, 5, 110, 89, 2428, 2427, 3801, 0, 126, 2426,
	196,
}

//line sql.y:7885
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 404, 405, 405, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 256, 378,
	379, 379, 254, 254, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 408, 408, 181, 181, 179, 179, 180, 180, 259,
	259, 24, 263, 263, 265, 265, 265, 265, 255, 255,
	255, 25, 25, 264, 264, 266, 266, 266, 269, 269,
	269, 269, 308, 308, 308, 26, 26, 26, 26, 26,
	124, 124, 381, 381, 380, 374, 374, 373, 373, 372,
	377, 377, 376, 376, 375, 38, 39, 48, 48, 48,
	48, 49, 50, 382, 382, 347, 55, 55, 54, 54,
	54, 54, 54, 54, 56, 56, 52, 52, 51, 51,
	53, 53, 349, 349, 335, 335, 348, 348, 348, 348,
	348, 348, 348, 334, 334, 135, 135, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 397, 397, 397, 396, 396, 234,
	234, 234, 234, 234, 234, 234, 234, 145, 145, 157,
	157, 157, 157, 157, 143, 143, 144, 142, 142, 142,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 156,
	156, 152, 152, 152, 153, 153, 153, 154, 154, 398,
	398, 398, 398, 313, 313, 313, 313, 316, 316, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 315, 315,
	315, 315, 315, 317, 317, 317, 317, 317, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 319, 319, 319, 319, 319, 319,
	319, 319, 333, 333, 320, 320, 328, 328, 329, 329,
	329, 330, 330, 330, 331, 331, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 327, 327, 326, 326, 326,
	336, 361, 361, 360, 360, 358, 358, 358, 358, 358,
	358, 358, 358, 345, 345, 355, 355, 355, 355, 355,
	344, 344, 340, 340, 340, 341, 341, 342, 342, 339,
	339, 343, 343, 357, 357, 356, 356, 337, 337, 338,
	338, 363, 399, 399, 399, 399, 399, 400, 400, 364,
	389, 391, 391, 391, 390, 390, 387, 388, 386, 386,
	386, 386, 386, 81, 81, 81, 282, 282, 283, 283,
	353, 353, 352, 352, 352, 354, 354, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 277, 277,
	277, 385, 385, 385, 385, 385, 385, 384, 384, 384,
	350, 350, 350, 383, 383, 57, 57, 214, 214, 402,
	402, 403, 403, 403, 45, 45, 45, 45, 45, 45,
	44, 44, 44, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 46, 46, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 106, 106, 107, 107, 107, 107,
	109, 109, 109, 366, 366, 58, 58, 3, 3, 169,
	171, 172, 172, 170, 170, 170, 170, 170, 170, 60,
	60, 59, 59, 174, 173, 175, 175, 175, 1, 1,
	2, 2, 4, 4, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 332, 332, 332, 365,
	365, 367, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 112, 111, 111, 110, 113, 113, 113, 113,
	113, 113, 113, 113, 369, 369, 369, 61, 61, 370,
	321, 322, 323, 5, 6, 346, 368, 120, 120, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 62, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 276, 276, 285, 285, 275, 275, 300, 300, 300,
	278, 278, 278, 279, 279, 395, 395, 395, 272, 272,
	64, 64, 64, 301, 301, 301, 301, 66, 66, 67,
	68, 68, 303, 303, 304, 304, 69, 70, 82, 82,
	82, 82, 82, 82, 82, 105, 105, 105, 15, 15,
	15, 15, 78, 78, 78, 14, 14, 65, 65, 72,
	392, 392, 393, 394, 394, 394, 394, 73, 75, 31,
	31, 31, 31, 31, 31, 130, 130, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 125,
	125, 125, 119, 119, 409, 76, 77, 77, 123, 123,
	123, 116, 116, 116, 122, 122, 122, 16, 16, 17,
	258, 258, 18, 18, 127, 127, 129, 129, 129, 129,
	129, 131, 131, 131, 131, 131, 131, 131, 126, 126,
	128, 128, 128, 128, 293, 293, 293, 292, 292, 163,
	163, 165, 164, 164, 166, 166, 167, 167, 167, 167,
	212, 212, 189, 189, 251, 251, 252, 252, 250, 250,
	257, 257, 253, 253, 253, 253, 260, 260, 168, 168,
	168, 168, 176, 176, 177, 177, 178, 178, 302, 302,
	298, 298, 298, 297, 297, 182, 182, 182, 184, 183,
	183, 183, 183, 185, 185, 187, 187, 186, 186, 188,
	193, 193, 192, 192, 190, 190, 190, 190, 191, 191,
	191, 191, 194, 194, 140, 140, 140, 140, 140, 140,
	140, 155, 155, 155, 155, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 241, 241, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 149, 217, 217, 216,
	216, 83, 83, 83, 84, 84, 85, 85, 85, 85,
	85, 86, 86, 86, 86, 86, 141, 141, 88, 88,
	87, 87, 207, 207, 290, 290, 89, 90, 90, 93,
	93, 92, 91, 91, 97, 97, 94, 94, 96, 96,
	95, 98, 98, 99, 100, 100, 273, 273, 195, 195,
	203, 203, 203, 203, 196, 196, 196, 196, 196, 196,
	196, 204, 204, 204, 211, 205, 205, 201, 201, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 160, 160, 160, 160, 222,
	222, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 148, 148, 161, 161,
	161, 161, 162, 162, 162, 162, 162, 162, 162, 310,
	310, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 410, 410, 324, 324, 324, 324, 202, 202,
	202, 202, 202, 121, 121, 121, 121, 121, 307, 307,
	307, 311, 311, 311, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 312,
	312, 220, 220, 117, 117, 218, 218, 219, 221, 221,
	213, 213, 213, 213, 215, 215, 198, 198, 198, 223,
	223, 224, 224, 101, 102, 102, 103, 103, 225, 225,
	227, 226, 226, 228, 229, 229, 229, 230, 230, 231,
	231, 231, 47, 47, 47, 47, 47, 42, 42, 42,
	42, 43, 43, 43, 43, 132, 132, 132, 132, 134,
	134, 133, 133, 79, 79, 80, 80, 80, 138, 138,
	139, 139, 139, 136, 136, 137, 137, 248, 248, 232,
	232, 232, 239, 239, 239, 235, 235, 237, 237, 237,
	238, 238, 238, 236, 245, 245, 247, 247, 246, 246,
	242, 242, 243, 243, 244, 244, 244, 240, 240, 197,
	197, 197, 197, 197, 249, 249, 249, 249, 261, 261,
	208, 208, 210, 210, 209, 209, 159, 262, 262, 270,
	267, 267, 268, 268, 294, 294, 294, 271, 271, 284,
	284, 280, 280, 281, 281, 274, 274, 286, 286, 286,
	74, 206, 206, 362, 362, 359, 289, 289, 291, 291,
	295, 295, 299, 299, 296, 296, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 406, 407,
	305, 306, 306, 306,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 1, 3, 3, 3, 3, 3, 1, 1,
	2, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 2, 2, 6, 12, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	0, 1, 1, 3, 3, 6, 4, 7, 8, 8,
	8, 6, 3, 1, 1, 5, 0, 1, 1, 1,
	1, 2, 2, 2, 0, 1, 4, 4, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 3, 3,
	2, 2, 4, 4, 1, 1, 1, 1, 1, 0,
	2, 2, 3, 3, 2, 2, 2, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 3, 3, 2,
	2, 2, 1, 2, 2, 0, 1, 0, 2, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 1, 1,
	3, 3, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 4, 3, 1, 3,
	1, 7, 6, 7, 7, 8, 8, 0, 1, 5,
	2, 1, 1, 1, 0, 1, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 1, 2, 0, 1,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 7, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 4, 4, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 5, 5, 4,
	0, 2, 4, 4, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 3, 1, 1, 1, 4, 3, 1,
	1, 2, 3, 7, 0, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 7, 7, 6, 6,
	2, 2, 1, 6, 3, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 0, 1,
	2, 5, 0, 3, 0, 1, 4, 4, 2, 0,
	1, 1, 2, 2, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 5, 1, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	4, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	8, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 4, 6, 6, 6, 8, 6, 6, 4,
	4, 3, 4, 6, 6, 4, 4, 4, 6, 8,
	6, 4, 6, 6, 8, 10, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 4, 6, 5, 9, 6,
	9, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 6, 8, 10, 12, 14, 6, 8, 8, 10,
	12, 14, 6, 8, 10, 12, 6, 8, 4, 4,
	3, 4, 6, 6, 4, 6, 4, 6, 8, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 1, 3, 5, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 2, 1, 3, 0, 1, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 4, 1, 1, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -404, -76, -409, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 10, 11, -104, -33, 33, -38, -48, 225, -49,
	-39, 226, -50, 228, 227, 264, 229, 257, 75, 312,
	313, 315, 316, 317, 318, -105, 262, 263, 231, 37,
	46, 34, 35, 38, 235, 270, 271, 234, -10, -34,
	9, -406, 12, 444, 259, 258, 29, -12, 506, 87,
	-77, -405, 658, -248, -232, 23, 34, 30, -231, -227,
	-123, -232, 21, 19, 8, -76, -76, -76, 13, 14,
	-76, -347, -349, 87, 159, 87, -76, -55, -54, -52,
	-51, -53, -56, 32, -45, -46, -371, -44, -41, 230,
	227, 274, 123, 124, 264, 265, 266, 229, 248, 263,
	267, 262, 283, -40, 82, 34, 506, 509, -354, 226,
	232, 233, 228, 445, 126, 125, 76, -351, 367, 539,
	628, -56, 630, 101, 104, 629, 45, 238, 631, 632,
	633, 546, 634, 247, 635, 636, 637, 638, 644, 587,
	645, 646, 647, 127, 8, -76, -299, -295, 91, -288,
	503, 250, 537, 538, 299, 82, 42, 512, 364, 367,
	539, 474, 628, 312, 326, 320, 479, 480, 481, 347,
	339, 504, 540, 513, 302, 251, 287, 622, 337, 135,
	630, 306, 541, 265, 372, 373, 542, 374, 101, 315,
	411, 643, 305, 543, 641, 104, 629, 80, 473, 52,
	625, 45, 260, 335, 234, 331, 631, 288, 544, 515,
	281, 126, 123, 650, 37, 329, 51, 31, 640, 125,
	50, 632, 150, 545, 633, 546, 376, 354, 616, 49,
	377, 266, 547, 85, 271, 508, 309, 624, 378, 493,
	330, 379, 298, 639, 231, 548, 607, 599, 600, 380,
	381, 617, 359, 355, 360, 495, 549, 403, 478, 382,
	603, 604, 657, 53, 550, 551, 618, 124, 552, 79,
	634, 81, 324, 325, 553, 296, 249, 498, 499, 405,
	351, 456, 463, 464, 111, 112, 459, 113, 465, 114,
	466, 467, 468, 457, 115, 108, 458, 469, 470, 352,
	353, 116, 471, 110, 109, 460, 462, 117, 472, 247,
	36, 383, 505, 300, 59, 304, 275, 406, 47, 357,
	654, 46, 612, 500, 554, 615, 350, 346, 453, 54,
	555, 556, 557, 558, 475, 635, 349, 323, 345, 649,
	4, 293, 476, 636, 63, 233, 362, 361, 363, 282,
	402, 342, 559, 560, 561, 254, 83, 562, 332, 22,
	563, 564, 384, 289, 565, 57, 566, 567, 409, 263,
	568, 55, 637, 40, 569, 268, 651, 638, 570, 571,
	572, 573, 270, 574, 386, 575, 601, 602, 385, 356,
	358, 501, 277, 387, 507, 576, 310, 328, 267, 642,
	577, 255, 489, 490, 491, 492, 623, 497, 496, 269,
	274, 262, 410, 256, 578, 579, 580, 581, 582, 303,
	598, 583, 584, 316, 644, 454, 44, 585, 586, 587,
	588, 589, 297, 292, 404, 413, 62, 84, 369, 590,
	591, 621, 322, 290, 592, 313, 56, 645, 646, 647,
	284, 648, 482, 483, 484, 485, 10, 655, 656, 477,
	389, 127, 294, 295, 48, 343, 276, 593, 307, 594,
	333, 334, 348, 321, 344, 314, 608, 278, 390, 455,
	264, 595, 412, 291, 365, 370, 308, 511, 494, 283,
	391, 620, 510, 486, 487, 341, 338, 285, 488, 596,
	392, 239, 279, 280, 597, 609, 393, 394, 301, 395,
	396, 397, 398, 399, 401, 311, 400, 605, 606, 286,
	509, 319, 336, 371, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 452, 237, -76, 237, -186, -295, 237, -267,
	373, -285, 375, 388, 383, 393, 381, -276, 384, 386,
	277, -395, 403, 237, 390, 225, 376, 385, 394, 395,
	301, 401, 396, 311, 400, 286, 397, 398, 399, -378,
	177, 633, 648, 135, 340, 380, 378, 404, 612, 91,
	-301, 91, 92, 93, -288, 314, -303, 319, -289, -378,
	-288, 317, -76, -305, -305, -125, 612, 614, -205, -140,
	143, -155, -158, -146, -150, -199, -200, -201, -202, -156,
	-215, -254, 166, 167, 174, 144, -211, -159, 27, 502,
	446, 445, 177, 32, -149, 220, 69, 70, 448, 146,
	58, 12, 421, 422, -157, 416, 423, 418, 473, 475,
	476, 477, 474, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 478, 450, 451, 118, 452, 108, 110,
	109, 453, 454, 455, 337, 500, 501, 495, 498, 499,
	497, 496, 352, 353, 456, 457, 458, 111, 112, 113,
	114, 115, 116, 117, 459, 462, 460, 461, 463, 464,
	465, 470, 471, 466, 467, 468, 469, 472, -85, -97,
	528, 527, -98, -147, -148, -161, -162, -289, -295, 242,
	415, 236, 172, 444, -151, -144, -213, 107, 92, 93,
	-8, -209, 414, 419, 420, 424, 417, 514, 516, 531,
	532, 534, 519, 524, 523, 526, 489, 490, 491, 492,
	493, 494, 599, 600, 601, 602, 603, 604, 605, 606,
	-378, -288, 91, -153, -152, -195, 94, 99, 102, 103,
	105, -401, 260, 333, 334, 119, -406, 626, 90, 95,
	96, 97, 98, 120, 121, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 45, 389, 389,
	-186, -76, -76, -76, -76, -225, -123, -227, -10, -8,
	-406, 9, -76, -8, -9, -13, -34, -36, 533, -35,
	-295, 100, -232, -248, 13, 162, 43, 51, -230, -231,
	-12, -8, -140, 20, 24, 25, -128, 168, -140, -295,
	-128, -274, 241, -76, -76, -263, -308, 314, -265, 404,
	612, 403, -255, -268, 91, -254, -267, 402, -348, 159,
	-334, -338, -289, 252, -364, 248, -186, -357, -356, -289,
	-406, -124, -284, 238, 246, 245, 136, -382, 139, 294,
	415, 236, -51, -52, -53, -267, 176, 632, -106, 269,
	273, 88, 88, -338, -337, -336, -383, 273, 252, -363,
	-355, 244, 253, -344, 245, 246, -339, 238, 137, -383,
	-339, 243, 253, 248, 252, 273, 273, 127, 273, 127,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 268,
	-345, 151, -345, 510, 510, -351, -383, 248, 238, -383,
	-383, 244, -286, -339, 240, 26, 240, 36, 36, -345,
	-345, -345, -267, 176, -345, -345, -345, -345, 281, 281,
	-345, -345, -345, -345, -345, -345, -345, -345, -345, -345,
	-345, -345, -345, -345, -345, -345, -345, 237, -382, -132,
	400, 301, 82, -54, 283, -37, -186, -284, 238, 239,
	-382, 270, -186, 221, -186, -278, 159, 16, -278, -275,
	389, 387, 374, 379, -278, -278, -278, -278, 284, 372,
	-340, 238, 36, 249, 389, 284, 372, 284, 285, 284,
	285, 382, 392, 284, -300, 15, 162, 415, 377, 381,
	277, 237, 278, 239, 391, 285, -300, 90, -279, 159,
	284, 389, 280, -278, -278, -306, -406, -291, -289, -287,
	230, 24, 142, 26, 28, 145, 177, 130, 20, 146,
	38, 232, 340, 248, 176, 244, 445, 225, 73, 514,
	416, 418, 414, 421, 447, 448, 415, 375, 32, 14,
	516, 29, 258, 25, 39, 170, 227, 149, 517, 261,
	27, 259, 118, 121, 519, 23, 76, 253, 15, 246,
	41, 17, 520, 521, 18, 242, 241, 162, 238, 71,
	12, 220, 30, 158, 67, 522, 137, 523, 524, 525,
	526, 131, 69, 159, 21, 652, 419, 420, 34, 613,
	502, 272, 172, 74, 60, 614, 143, 417, 527, 528,
	119, 529, 122, 77, 619, 139, 19, 72, 43, 530,
	273, 531, 243, 653, 532, 407, 533, 160, 228, 444,
	70, 161, 626, 534, 627, 236, 388, 9, 449, 33,
	257, 245, 129, 68, 535, 237, 148, 450, 451, 240,
	132, 120, 8, 136, 35, 13, 75, 78, 422, 423,
	424, 58, 128, 506, 147, 16, 536, 408, 141, -378,
	615, -306, -306, 33, 92, 240, -289, -186, -82, 607,
	229, -130, 389, -118, 177, 633, 616, 617, 618, 615,
	386, 623, 621, 619, 284, 620, 88, 139, 141, 142,
	4, -140, 158, -196, 151, 152, 153, 154, 155, 156,
	157, 162, 143, 145, 159, -241, 140, 163, 164, 165,
	166, 167, 168, 169, 171, 170, 172, 173, 160, 161,
	176, 223, 224, -150, -150, -150, -150, -211, -217, -216,
	-406, -213, -378, -288, -295, -406, -406, -150, -273, -406,
	-406, -150, -406, -406, -406, -220, -140, -406, -406, -410,
	-406, -410, -410, -324, -406, -324, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, 221, -406, -406, -406, -406, -406, -324, -324,
	-324, -324, -324, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, 103, 99, 102,
	94, -215, 105, 90, 90, 90, 90, -8, -9, -205,
	-406, -305, -392, -393, -189, -186, -406, 301, -289, -289,
	270, -230, -12, -8, -225, -231, -227, -8, -76, -116,
	-129, 64, 65, -131, 25, 39, 68, 66, 24, -407,
	89, -407, -248, -407, 88, -36, -251, 87, 62, 44,
	90, 90, 88, 22, -226, -228, -140, 15, -293, 4,
	-292, 26, -289, 90, 221, 15, -187, 30, -186, -274,
	-274, 88, 91, 314, -264, -266, 405, 407, 151, -294,
	-289, 90, 32, 89, 88, -186, -313, -316, -318, -317,
	-319, -314, -315, 337, 338, 177, 341, 343, 344, 345,
	346, 347, 348, 349, 350, 351, 354, 33, 260, 333,
	334, 335, 336, 355, 356, 357, 358, 360, 361, 362,
	363, 320, 339, 504, 321, 322, 323, 324, 325, 326,
	328, 329, 330, 331, 332, -379, -378, 87, 89, 88,
	-320, 87, -140, -132, 237, -378, 238, 238, 238, -76,
	444, -345, -345, -345, 268, 20, -44, -41, -371, 19,
	-40, -41, 230, 123, 124, 227, 87, -334, 87, -343,
	-379, -378, 87, 137, 243, 136, -342, -339, -342, -343,
	-378, -213, -378, 137, 137, -378, -378, -260, -289, -260,
	-260, 24, -260, 24, -260, 24, 96, -289, -260, 24,
	-260, 24, -260, 24, -260, 24, -260, 24, 32, 79,
	80, 81, 32, 83, 84, 85, -213, -378, -378, -213,
	-334, -213, -186, -378, -267, 96, 96, 96, -345, -345,
	96, 90, 90, 90, -345, -345, 96, 90, -297, -295,
	90, 90, -384, 254, 298, 300, 96, 96, 96, 96,
	32, 90, -385, 32, 640, 639, 641, 642, 643, 90,
	96, 32, 96, 32, 96, -289, 87, -186, -138, 288,
	225, 227, 230, 77, 90, 304, 305, 302, 307, 308,
	151, 45, 88, 240, 237, -378, -280, 242, -280, -289,
	-296, -295, -287, 90, -140, -341, 15, 162, -300, -300,
	-278, -186, -341, -300, -278, -186, -278, -278, -278, -278,
	-300, -300, -300, -278, -295, -295, -186, -186, -186, -186,
	-186, -186, -186, -306, -279, -278, 615, 90, -272, 15,
	77, -306, -306, -304, 317, -78, -289, 90, -15, -11,
	-22, -21, -23, 151, 88, 506, -179, -186, 615, 615,
	615, 615, 615, 615, -140, -140, -140, -140, 529, -203,
	119, 143, 120, 121, -158, -204, -209, -211, 106, 162,
	145, 159, -241, -146, -150, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -307, -289,
	90, 177, -154, -153, 105, -401, -154, 503, 88, -216,
	221, -140, -140, -378, -140, -289, -126, -128, -126, -140,
	-218, -219, 147, -213, -140, -407, -407, 96, 105, 168,
	-122, 25, 39, -122, -122, -122, -122, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -122, -289, -289,
	-115, -114, 426, 427, 428, 429, 431, 432, 433, 436,
	437, 441, 442, 425, 443, 430, 435, 438, 439, 440,
	434, 336, -140, -140, -140, -140, -140, -140, -83, -140,
	130, 131, 132, -205, -140, -146, -140, -140, -140, -407,
	-140, -140, -140, -206, -205, -377, -376, -375, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -407, -140, -160, -144, 96, -256, 105, 92, -140,
	-140, -127, -126, -291, -296, -287, -288, -126, -127, -127,
	-126, -126, -140, -140, -140, -140, -140, -140, -140, -140,
	-407, -140, -140, -140, -140, -140, -248, -407, -205, 88,
	-394, 407, 408, 613, -298, 273, -297, 26, -206, 90,
	15, -258, 78, -289, -230, -230, 64, 65, 60, -126,
	-131, -407, -35, 26, -250, -289, 63, 90, -325, -267,
	364, 365, 177, -140, -140, 88, -229, 28, 29, -186,
	-292, 168, -296, -186, -259, 273, -186, -164, -166, -167,
	-168, -189, -212, -406, -169, -8, 525, 522, 15, -179,
	-180, -188, -295, -265, -308, -264, 88, 406, 408, 409,
	77, 122, -140, -326, 176, -353, -352, -351, -334, -336,
	-337, -338, 89, -326, -330, 370, 369, -320, -320, -320,
	-320, -320, -325, -325, -325, -325, 87, 87, -320, -320,
	-320, -320, -328, 87, -328, -328, -329, 87, -329, -364,
	-140, -361, -360, -358, -359, 247, 101, 597, 553, 506,
	546, 587, 78, -356, -229, 96, -407, -138, -281, 242,
	-362, -359, -378, -378, -378, -281, 91, 90, 91, 90,
	91, 90, -107, -58, -1, 652, 653, 654, 88, 20,
	-335, -334, -57, 298, -367, -368, 273, -363, -357, -343,
	137, -342, -343, -343, -378, 88, 30, 127, 127, 127,
	127, 506, 227, 33, -282, 545, 143, 597, 553, -334,
	-57, 240, 240, -307, -307, -307, 90, 90, -277, 648,
	-179, -134, 290, 151, 279, 279, 237, 237, 292, -186,
	303, 306, 304, 305, 302, 307, 308, 24, 24, 24,
	24, 24, 291, 293, 295, 281, -186, -186, -280, 77,
	-181, -186, 27, -295, -186, -278, -278, -186, -278, -278,
	-186, -289, 351, 608, 609, 611, 610, -118, 407, 88,
	506, 23, -119, 23, -406, 119, 120, 121, -204, -146,
	-150, -146, 142, 261, -406, -213, -407, -291, 26, 88,
	78, -407, 88, 88, -407, -407, 88, 15, -221, -219,
	149, -140, -407, 88, -407, -407, -407, -205, -140, -140,
	-140, -140, -407, -407, -407, -407, -407, -407, -407, -407,
	-407, -407, -205, 88, 88, 15, -311, 26, -407, -407,
	-407, -407, -407, -220, -407, 15, -407, 78, 88, 162,
	88, -407, -407, -407, 88, 88, -407, -407, 88, 88,
	-407, 88, 88, 88, -407, 88, 88, 88, 88, -407,
	-407, -407, -407, 88, 88, 88, 88, 88, 88, 88,
	88, 88, 88, -407, -90, 530, -407, -407, 88, -407,
	88, -407, -406, 221, -407, -407, -407, -407, -407, 88,
	88, 88, 88, 88, 88, -407, -407, -407, 88, 88,
	-407, 88, -407, 88, -407, -393, 612, 408, -193, -192,
	-190, 75, 241, 76, -406, -297, -407, -154, -256, -257,
	-256, -198, -289, 96, 105, -232, -163, -165, 15, -131,
	-211, 89, 88, -325, -236, -242, -275, -289, 90, 177,
	-327, 177, -327, 364, 365, -228, 221, -194, 16, -197,
	33, 58, -11, -406, -406, 33, 88, -182, -184, -183,
	-185, 67, 71, 73, 68, 69, 70, 74, -302, 26,
	-8, -164, -8, -406, -186, -179, -408, 15, 78, -408,
	88, 221, -266, -269, 410, 407, 413, -378, 90, -106,
	88, -351, -338, -233, -135, 41, -331, 371, -325, 513,
	-325, -333, 90, -333, 96, 96, 89, -47, -42, -43,
	34, 82, -358, -345, 90, 40, -345, -345, -289, 89,
	-229, -134, -186, 143, 77, -362, -362, -362, -295, -2,
	651, 657, 137, 87, 374, 19, -250, 88, 89, -214,
	299, 89, -108, -289, 89, 87, -343, -343, -289, -406,
	237, 32, 32, 597, 553, 545, -57, -214, -213, -378,
	-326, 650, 649, 89, 239, 297, -139, 421, -136, 90,
	91, -186, -186, -186, -186, -186, 230, 227, 397, -402,
	309, -402, 282, 240, -179, -186, 88, -81, 256, 251,
	-300, -300, 34, -186, 407, 624, 622, -140, 142, 261,
	-158, -150, -146, -309, 177, 337, 260, 335, 331, 351,
	342, 369, 333, 370, 330, 329, 328, -309, -307, -205,
	-128, -140, -140, 150, -140, 148, -140, -407, -407, -407,
	-407, -407, -225, -140, -140, -140, -407, 177, 337, 15,
	-140, -307, -140, -140, -140, -140, -140, -375, -140, -205,
	-140, -205, -140, -140, -140, -140, -140, -376, -376, -376,
	-376, -376, -205, -205, -205, -205, -406, -289, -93, -92,
	-91, 580, 241, -90, -160, -93, -160, -127, -291, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -190,
	-339, -339, -339, -260, 88, -271, 23, 15, 58, 58,
	-163, -194, -164, -131, -289, -239, 607, -245, 47, -243,
	-244, 48, -240, 49, 57, -327, -327, 168, -230, -140,
	-261, 77, -262, -270, -213, -208, -210, -209, -406, -249,
	-407, -289, -260, -262, -166, -167, -167, -166, -167, 67,
	67, 67, 72, 67, 72, 67, -183, -295, -407, -140,
	-298, 78, -164, -164, -188, -295, 168, 407, 411, 412,
	-351, -400, 119, 143, 32, 77, 367, 101, -398, 176,
	542, 592, 597, 553, 546, 587, -399, 243, 136, 137,
	255, 26, 42, 89, 88, 89, 88, 89, 88, -283,
	-282, -43, -42, -345, -345, 96, -378, 90, 90, 239,
	27, -186, 77, 77, 77, -109, 655, 96, 87, -3,
	82, -140, 87, 20, -334, -213, -369, -321, -370, -322,
	-323, -5, -6, -346, -112, 58, 101, -61, 45, 238,
	635, 636, 127, -406, 648, -361, -250, -365, -367, -186,
	-143, -406, -142, -144, -151, 166, 167, 260, 333, 334,
	-214, -186, -133, 288, 296, 87, -137, 92, -381, 78,
	279, 367, 279, 90, -403, 310, 90, -403, -186, -81,
	-47, -186, -278, -278, 34, -378, -407, -158, -150, -121,
	162, 506, -312, 512, -320, -320, -320, -329, -320, 325,
	-320, 325, -320, -407, -407, -407, 88, -407, 23, -407,
	-140, 88, -117, 449, 88, 88, -407, 87, 87, -140,
	-407, -407, -407, 88, -407, -407, -407, -407, -407, 88,
	-407, -407, -407, 88, -310, 598, -407, -407, -407, -407,
	-407, -407, -407, -407, -407, -407, -89, -290, -289, -90,
	562, 562, -407, -90, -222, 88, -407, -407, 88, -407,
	88, 88, -407, 88, -407, 88, -407, -407, -407, -407,
	88, -191, 23, -191, -191, -407, -256, -186, -194, -223,
	17, -236, 52, 343, -247, -246, 56, 48, -244, 20,
	50, 20, 31, -261, 88, 151, 88, -407, -407, 88,
	58, 221, -407, -194, -177, -176, 77, 78, -178, 77,
	-176, 67, 67, -251, 88, -259, -164, -194, -194, 221,
	119, -406, -145, -157, -143, 13, 90, 90, -378, -397,
	639, 640, 32, 96, -345, -345, 137, 137, -186, 87,
	-325, 90, -325, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -186, -186, -186, -186, -366, 87, 20,
	-140, 87, 151, 89, -250, -250, 275, 162, -345, 633,
	281, 281, -345, -345, -345, -111, -110, 655, 89, -407,
	88, -332, 506, 509, -140, -152, -152, -251, 89, -374,
	506, -380, -289, -289, -289, -289, 96, 98, -407, 504,
	74, 507, -407, -325, -140, -140, -140, -230, 90, -140,
	-140, 96, 96, -407, -140, -205, -140, -407, -174, -173,
	-175, 616, 119, 32, -309, -407, -207, 273, -96, -95,
	-94, 15, -407, -140, -140, -140, -140, -140, -140, -140,
	-406, 67, 19, 17, -406, -406, -298, -223, -224, 18,
	20, -237, 54, -235, 53, -235, -246, 20, 20, 90,
	20, 90, 137, -270, -140, -210, 58, -11, -289, -208,
	-289, -225, -140, 87, -140, -154, -194, -194, -140, -200,
	473, 475, 476, 477, 474, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 478, 452, 108, 110, 109,
	453, 454, 455, 337, 500, 501, 495, 498, 499, 497,
	496, 352, 353, 456, 457, 458, 111, 112, 113, 114,
	115, 116, 117, 459, 462, 460, 463, 464, 465, 470,
	471, 466, 467, 468, 469, 472, 489, 490, 491, 492,
	493, 494, 599, 600, 601, 602, 603, 604, 605, 606,
	90, 90, 87, -140, 89, 89, -251, -365, -58, 89,
	-252, -250, 96, 89, 276, -209, -406, 90, -345, -345,
	-345, 96, 96, -297, -407, 88, -289, -399, -367, 510,
	510, -407, 26, -373, -372, -291, 87, 78, 63, 505,
	508, -407, -407, 88, -407, -407, -407, 89, 89, -407,
	-407, -407, 88, -407, -173, -175, -407, 77, -154, -225,
	20, -93, 298, 300, -93, -407, 88, -407, -407, 88,
	-407, 88, -407, -407, -253, -407, -289, 243, 20, 20,
	-253, -253, -193, -224, -103, -102, -101, 536, -140, -205,
	-238, 55, 77, 122, 90, 90, 90, 13, -208, 221,
	-230, -250, -171, 374, -225, -407, -250, 89, 26, 89,
	657, 137, 89, -209, -120, -406, 272, -297, 90, 90,
	-110, -113, -11, 88, 151, -250, -186, 63, -140, -205,
	-407, 77, 517, 616, -88, -87, -84, 627, 653, -205,
	-90, -90, -140, -140, -140, 88, -407, -407, -407, -103,
	88, -100, -99, -289, 77, 122, -262, -289, 89, -407,
	-406, -230, 89, -234, -11, 87, -3, 272, -321, -370,
	-322, -323, -5, -6, -346, -79, 506, -372, -350, -291,
	90, 96, 89, 506, -407, -407, -86, 145, 625, 595,
	-141, -152, -149, 220, -407, 88, -407, 88, -407, 88,
	-289, 243, -101, 88, 26, -298, -172, -170, -289, 559,
	-390, -389, 502, -400, -396, 119, 143, 101, -398, 597,
	553, 128, 129, -79, -140, 87, -407, -80, 287, 612,
	-381, 507, -86, 626, 573, 548, 573, 548, -140, -140,
	-140, -99, -406, -407, 88, 23, -313, -60, 570, -387,
	-388, 77, -391, 380, 569, 590, 119, 90, 89, -250,
	248, -374, 508, 142, -407, 88, -407, 88, -407, -89,
	-170, 566, -326, -154, -388, 77, -387, 77, 14, 13,
	-4, 656, 89, 289, -86, -140, -140, -407, -59, 27,
	-171, -386, 256, 251, 254, 33, -386, 96, -4, -407,
	-407, 570, 250, 32, 119, -154, -174, -173, -173,
}

var yyDef = [...]int{
	854, -2, -2, 856, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 854, 854, 854, 0, 854, 0, 0, 854, -2,
	-2, 854, 1462, 0, 854, 0, 0, -2, 781, 787,
	0, 789, -2, 0, 0, 854, 2010, 2010, 849, 0,
	0, 0, 0, 0, 854, 854, 854, 854, 1328, 49,
	854, 0, 84, 85, 805, 806, 807, 64, 0, 2008,
	855, 1, 3, 70, 74, 0, 0, 0, 57, 1337,
	0, 77, 0, 0, 858, 0, 0, 1445, 854, 854,
	0, 125, 126, 0, 0, 0, -2, 129, -2, 158,
	159, 160, 0, 165, 594, 517, 569, 515, 554, -2,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 393, 393, 0, 0, -2, 503,
	503, 503, 1447, 0, 0, 0, 551, 455, 393, 393,
	393, 0, 393, 393, 393, 393, 0, 0, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 393, 393, 1355, 164, 1463, 1460, 1461,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 0, 1439, 0, 707, 957, 0, 770,
	770, 0, 770, 770, 770, 770, 0, 0, 0, 719,
	0, 0, 0, 0, 767, 0, 735, 736, 0, 767,
	0, 742, 773, 0, 0, 748, 770, 770, 751, 2011,
	0, 2011, 2011, 1430, 0, 764, 762, 776, 777, 39,
	780, 783, 784, 785, 786, 788, 0, 793, 796, 1456,
	1457, 0, 798, 817, 818, 0, 850, 851, 44, 1105,
	0, 979, 984, 995, 1010, 1011, 1012, 1013, 1014, 1016,
	1017, 1018, 0, 0, 0, 0, 1023, 1024, 0, 0,
	0, 0, 0, 1086, 1032, 0, 0, 0, 0, 1301,
	0, 0, 1262, 1262, 1120, 1262, 1264, 1264, 1663, 1799,
	1807, 1924, 1626, 1631, 1632, 1633, 1917, 1918, 1919, 1920,
	1958, 1959, 1963, 1723, 0, 0, 0, 2007, 1760, 1768,
	1769, 1793, 1890, 1944, 1643, 1788, 1856, 1720, 1742, 1743,
	1872, 1873, 1764, 1765, 1746, 1758, 1761, 1749, 1750, 1752,
	1754, 1759, 1766, 1772, 1751, 1771, 1770, 0, 1747, 1748,
	1753, 1763, 1767, 1755, 1756, 1757, 1762, 1773, 0, 0,
	0, 0, 0, 1201, 1202, 1203, 1204, 0, 0, 0,
	0, 0, 0, 0, 289, 290, 1314, 1315, 42, 43,
	1104, 1426, 1264, 1264, 1264, 1264, 1264, 1046, 1047, 1048,
	1049, 1050, 1074, 1075, 1081, 1082, 1867, 1868, 1869, 1870,
	1704, 1953, 1712, 1713, 1851, 1852, 1725, 1726, 1982, 1983,
	-2, -2, -2, 230, 231, 232, 233, 234, 235, 236,
	237, 0, 1667, 1935, 1936, 226, 0, 0, 294, 295,
	291, 292, 293, 1088, 1089, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 286, 287, 288, 2010, 0, 827,
	0, 0, 0, 0, 0, 1337, 0, 1329, 1328, 62,
	0, 854, -2, 0, 0, 0, 0, 46, 0, 51,
	914, 857, 76, 75, 1377, 0, 0, 0, 58, 1338,
	66, 68, 1339, 0, 859, 860, 0, 890, 894, 0,
	0, 0, 1446, 1445, 1445, 101, 0, 0, 102, 122,
	123, 124, 0, 0, 108, 109, 1432, 1433, 0, 0,
	176, 177, 0, 40, 420, 0, 172, 0, 413, 354,
	0, 1355, 0, 0, 0, 0, 0, 854, 0, 1440,
	153, 154, 161, 162, 163, 393, 393, 393, 566, 0,
	0, 164, 164, 524, 525, 526, 0, 0, -2, 418,
	0, 504, 0, 0, 407, 407, 411, 409, 410, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 655,
	0, 394, 0, 564, 565, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 1448, 1449, 0, 541, 542, 0,
	0, 0, 393, 393, 0, 0, 0, 0, 393, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 1368,
	0, 0, 0, -2, 0, 699, 0, 0, 0, 1441,
	1441, 0, 706, 0, 708, 709, 0, 0, 710, 0,
	767, 767, 765, 766, 712, 713, 714, 715, 770, 0,
	0, 402, 403, 404, 767, 770, 0, 770, 770, 770,
	770, 767, 767, 767, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 773, 770, 0, 743, 0,
	744, 745, 746, 749, 750, 752, 2012, 2013, 1458, 1459,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 2011,
	2011, 756, 760, 1431, 782, 794, 797, 812, 48, 1711,
	804, 829, 830, 835, 0, 0, 0, 0, 841, 842,
	843, 0, 0, 846, 847, 848, 0, 0, 0, 0,
	0, 977, 0, 0, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 996, 997,
	0, 0, 0, 1019, 1020, 1021, 1022, 1025, 0, 1037,
	0, 1039, 1310, -2, 0, 0, 0, 1030, 1031, 0,
	0, 0, 0, 0, 0, 0, 1302, 0, 0, 1118,
	0, 1119, 1121, 1122, 0, 1123, 864, 864, 864, 864,
	864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1451, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 874, 0, 0, 874, 874, 0, 0, 219, 220,
	221, 222, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 239, 240,
	241, 242, 243, 296, 244, 245, 246, 1104, 0, 0,
	0, 45, 819, 820, 0, 940, 1451, 0, 0, 870,
	0, 56, 65, 67, 1337, 60, 1337, 0, 876, 0,
	0, -2, -2, 877, 883, 884, 885, 886, 887, 53,
	2009, 54, 0, 73, 0, 47, 0, 0, 0, 0,
	366, 1380, 0, 0, 1330, 1331, 1334, 0, 891, 1805,
	895, 0, 897, 898, 0, 0, 99, 0, 956, 0,
	0, 0, 110, 0, 112, 113, 0, 0, 0, 377,
	1434, 1435, 1436, -2, 400, 0, 377, 361, 304, 305,
	306, 354, 308, 354, 354, 354, 354, 366, 366, 366,
	366, 337, 338, 339, 340, 341, 0, 0, 323, 354,
	354, 354, 354, 344, 345, 346, 347, 348, 349, 350,
	351, 309, 310, 311, 312, 313, 314, 315, 316, 317,
	356, 356, 356, 358, 358, 0, 41, 0, 381, 0,
	1334, 0, 0, 1368, 1443, 1453, 0, 0, 0, 1443,
	131, 0, 0, 0, 567, 605, 518, 555, 568, 0,
	521, 522, -2, 0, 0, 503, 0, 505, 0, 401,
	0, -2, 0, 411, 0, 407, 411, 408, 411, 399,
	412, 545, 546, 547, 0, 549, 550, 635, 926, 0,
	0, 0, 0, 0, 641, 642, 643, 0, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 556, 557,
	558, 559, 560, 561, 562, 563, 0, 0, 0, 0,
	505, 0, 552, 0, 0, 457, 458, 459, 0, 0,
	462, 463, 464, 465, 0, 0, 468, 469, 470, 943,
	944, 471, 472, 497, 498, 499, 473, 474, 475, 476,
	477, 478, 479, 491, 492, 493, 494, 495, 496, 480,
	481, 482, 483, 484, 485, 488, 0, 146, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1441, 0, 0, 0, 0, 873,
	958, 1464, 1465, 771, 772, 0, 405, 406, 770, 770,
	716, 757, 0, 770, 720, 758, 721, 723, 722, 724,
	737, 738, 770, 727, 768, 769, 728, 729, 730, 731,
	732, 733, 734, 753, 739, 740, 741, 774, 0, 778,
	779, 754, 755, 0, 795, 815, 813, 814, 816, 808,
	809, 810, 811, 0, 0, 0, 832, 95, 837, 838,
	839, 840, 852, 845, 1106, 974, 975, 976, 0, 978,
	981, 0, 1090, 1092, 983, 985, 1101, 1102, 1103, 0,
	0, 0, 0, 0, 989, 993, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1015, 1278,
	1279, 1280, 1034, 297, 298, 0, 1035, 0, 0, 0,
	0, 0, 0, 0, 1105, 1036, 0, 888, 0, 0,
	1308, 1305, 0, 0, 0, 1263, 1265, 0, 0, 0,
	0, 865, 866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1281, 0, 0, 0, 0, 0, 1301, 0,
	1041, 1042, 1043, 0, 0, 0, 0, 0, 0, 1161,
	0, 0, 0, 0, 1452, 0, 141, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 1206, 1207, 1208, 38, 0,
	0, 0, 875, 1312, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1230, 0, 0, 0, 0, 0, 0, 1424, 0, 0,
	822, 823, 825, 0, 960, 0, 941, 0, 0, 828,
	0, 869, 0, 872, 59, 61, 881, 882, 0, 899,
	878, 55, 50, 0, 0, 918, 1378, 366, 1400, 0,
	375, 375, 372, 1340, 1341, 0, 1333, 1335, 1336, 78,
	896, 892, 0, 972, 0, 0, 955, 0, 902, 904,
	905, 906, 938, 0, 909, 910, 0, 0, 0, 0,
	0, 97, 957, 103, 0, 111, 0, 0, 116, 117,
	104, 105, 106, 107, 0, 594, -2, 452, 178, 180,
	181, 182, 173, -2, 364, 362, 363, 307, 366, 366,
	331, 332, 333, 334, 335, 336, 0, 0, 324, 325,
	326, 327, 318, 0, 319, 320, 321, 0, 322, 419,
	0, 1342, 382, 383, 385, 393, 0, 388, 389, 0,
	393, 393, 0, 414, 415, 0, 1334, 1359, 0, 0,
	0, 1454, 1453, 1453, 1453, 0, 166, 167, 168, 169,
	170, 171, 630, 0, 0, 606, 628, 629, 164, 0,
	0, 174, 507, 506, 0, 662, 0, 417, 0, 0,
	411, 411, 396, 397, 548, 0, 0, 637, 638, 639,
	640, 0, 0, 0, 534, 446, 0, 535, 536, 505,
	507, 0, 0, 377, 460, 461, 466, 467, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 582, 583, 586, 588, 509, 592, 585, 587, 589,
	509, 593, 1356, 1357, 1358, 0, 0, 700, 0, 0,
	443, 93, 1442, 705, 767, 726, 759, 767, 718, 725,
	747, 791, 799, 800, 801, 802, 803, 836, 0, 0,
	0, 0, 844, 0, 0, 982, 1091, 1093, 986, 0,
	990, 994, 0, 0, 0, 1040, 1038, 1312, 0, 0,
	0, 1087, 0, 0, 1109, 1110, 0, 0, 0, 1306,
	0, 0, 1116, 0, 1266, 1267, 1124, 0, 0, 0,
	0, 0, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1328, 0, 0, 0, 0, 0, 1145, 1146,
	1147, 1148, 1149, 0, 1151, 0, 1152, 0, 0, 0,
	0, 1159, 1160, 1162, 0, 0, 1165, 1166, 0, 0,
	1167, 0, 0, 0, 1171, 0, 0, 0, 0, 1180,
	1181, 1182, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1194, 1195, 0, 1069, 0, 0, 1069,
	0, 1107, 874, 0, 1268, 1269, 1270, 1271, 1272, 0,
	0, 0, 0, 0, 0, 1228, 1229, 1231, 0, 0,
	1234, 0, 1236, 0, 1425, 821, 824, 826, 912, 961,
	962, 0, 0, 0, 0, 942, 1450, 867, 868, 871,
	920, 0, 1316, 0, 0, 899, 972, 900, 0, 879,
	52, 915, 0, 1382, 1381, 1394, 1407, 375, 375, 369,
	370, 376, 371, 373, 374, 1332, 0, 1337, 0, 1418,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 945, 0, 0, 948, 0, 0, 0, 0, 939,
	910, 0, 911, 0, -2, 0, 0, 91, 92, 0,
	0, 0, 114, 115, 0, 0, 121, 378, 379, 155,
	164, 454, 179, 427, 0, 0, 303, 365, 328, 329,
	330, 0, 352, 0, 0, 0, 448, 127, 1346, 1345,
	393, 393, 384, 0, 387, 0, 0, 0, 1455, 355,
	416, 0, 145, 0, 0, 0, 0, 0, 151, 600,
	0, 0, 607, 0, 0, 0, 516, 0, 527, 528,
	0, 634, -2, 696, 381, 0, 395, 398, 927, 0,
	0, 529, 0, 532, 533, 447, 507, 538, 539, 553,
	540, 489, 490, 487, 0, 0, 1369, 1370, 1375, 1373,
	1374, 132, 574, 576, 575, 579, 0, 0, 0, 511,
	0, 511, 572, 0, 443, 1342, 0, 704, 444, 445,
	770, 770, 831, 96, 0, 834, 0, 0, 0, 0,
	987, 991, 1273, 1299, 354, 354, 1286, 354, 358, 1289,
	354, 1291, 354, 1294, 354, 1297, 1298, 0, 0, 0,
	889, 0, 0, 1115, 1309, 0, 0, 1125, 1126, 1127,
	1128, 1129, 1303, 0, 0, 0, 1144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 144, 0,
	0, 0, 0, 0, 0, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1064, 1068, 0, 1070,
	1071, 0, 0, 1197, 0, 0, 1209, 0, 1313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 963,
	968, 968, 968, 0, 0, 0, 1437, 1438, 1317, 1318,
	972, 1319, 901, 880, 919, 1400, 0, 1393, 0, -2,
	1402, 0, 0, 0, 1408, 367, 368, 893, 79, 973,
	82, 0, 1418, 1427, 0, 1409, 1420, 1422, 0, 0,
	0, 1414, 0, 972, 903, 934, 936, 0, 931, 946,
	947, 949, 0, 951, 0, 953, 954, 914, 908, 0,
	99, 0, 972, 972, 98, 0, 959, 118, 119, 120,
	453, 183, 188, 0, 0, 0, 193, 0, 195, 0,
	0, 0, 200, 201, 393, 393, 428, 0, 300, 302,
	0, 0, 186, 366, 0, 366, 0, 359, 0, 429,
	449, 1343, 1344, 0, 0, 386, 390, 391, 392, 0,
	1444, 147, 0, 0, 0, 603, 0, 631, 0, 0,
	0, 0, 0, 0, 175, 508, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 0, 393, 0, 0, 0,
	393, 393, 393, 0, 688, 380, 0, 0, 659, 656,
	530, 0, 224, 225, 227, 0, 0, 0, 0, 0,
	537, 914, 1360, 1361, 1362, 0, 1372, 1376, 135, 0,
	0, 0, 0, 584, 590, 0, 510, 591, 701, 702,
	703, 94, 711, 717, 833, 853, 980, 988, 992, 0,
	0, 0, 0, 1300, 1284, 366, 1287, 1288, 1290, 1292,
	1293, 1295, 1296, 1028, 1029, 1033, 0, 1112, 0, 1114,
	1307, 0, 1337, 0, 0, 0, 1143, 0, 0, 0,
	1154, 1153, 1155, 0, 1157, 1158, 1163, 1164, 1168, 0,
	1170, 1172, 1173, 0, 0, 0, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 0, 1062, 1065, 1196,
	1072, 1073, 1078, 1199, 0, 0, 1108, 1211, 0, 1216,
	0, 0, 1222, 0, 1226, 0, 1232, 1233, 1235, 1237,
	0, 0, 0, 0, 0, 940, 921, 63, 1319, 1321,
	0, 1387, 1385, 1385, 1395, 1396, 0, 0, 1403, 0,
	0, 0, 0, 83, 0, 0, 0, 1423, 0, 0,
	0, 0, 100, 1328, 928, 935, 0, 0, 929, 0,
	930, 950, 952, 907, 0, 972, 972, 89, 90, 0,
	189, 0, 191, 217, 218, 0, 194, 196, 197, 198,
	204, 205, 206, 199, 0, 0, 299, 301, 0, 0,
	342, 353, 343, 0, 0, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 914, 148, 149, 150, 595, 0, 605,
	0, 916, 0, 598, 0, 519, 0, 0, 0, 393,
	393, 393, 0, 0, 0, 0, 673, 0, 0, 636,
	0, 644, 0, 0, 0, 228, 229, 0, 1371, 573,
	0, 133, 134, 0, 0, 578, 512, 513, 1026, 0,
	0, 0, 1027, 1285, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 1150, 0, 0, 0, 1176, 0, 0,
	0, 625, 626, 0, 1240, 1067, 1328, 0, 1069, 1079,
	1080, 0, 1069, 1210, 0, 0, 0, 0, 0, 0,
	0, 969, 0, 0, 0, 0, 960, 1321, 1326, 0,
	0, 1390, 0, 1383, 1386, 1384, 1397, 0, 0, 1404,
	0, 1406, 0, 1428, 1429, 1421, 0, 1413, 1416, 1412,
	1415, 1337, 932, 0, 937, 0, 1328, 88, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 203, 0, 0, 357, 360, 0, 0, 0, 596,
	0, 917, 608, 599, 0, 686, 0, 690, 0, 0,
	0, 693, 694, 695, 672, 0, 676, 421, 660, 657,
	658, 531, 0, 136, 137, 0, 0, 0, 1274, 0,
	1277, 1111, 1113, 0, 1140, 1141, 1142, 1282, 1283, 1156,
	1169, 1174, 0, 1177, 0, 0, 1178, 0, 627, 1058,
	0, 0, 1076, 1077, 0, 1212, 0, 1217, 1218, 0,
	1223, 0, 1227, 1238, 0, 965, 922, 923, 970, 971,
	0, 0, 913, 1326, 81, 1327, 1324, 0, 1322, 1320,
	1379, 0, 1388, 1389, 1398, 1399, 1405, 0, 1411, 0,
	86, 0, 0, 0, 1337, 190, 0, 209, 0, 604,
	0, 607, 597, 684, 685, 0, 697, 689, 691, 692,
	674, -2, 1363, 0, 0, 0, 580, 1275, 0, 0,
	1179, 0, 623, 624, 1066, 1059, 0, 1044, 1045, 1063,
	1198, 1200, 0, 0, 0, 0, 964, 966, 967, 80,
	0, 1323, 1084, 0, 1391, 1392, 1419, 1417, 933, 940,
	0, 87, 434, 427, 1363, 0, 0, 0, 677, 678,
	679, 680, 681, 682, 683, 570, 1365, 138, 139, 500,
	501, 502, 132, 0, 1117, 1175, 1060, 0, 0, 0,
	0, 1056, 1057, 0, 1213, 0, 1219, 0, 1224, 0,
	924, 925, 1325, 0, 0, 609, 0, 611, 0, -2,
	422, 435, 0, 184, 210, 211, 0, 0, 214, 215,
	216, 207, 208, 128, 0, 0, 698, 0, 1366, 1367,
	135, 0, 0, 1051, 1052, 1053, 1054, 1055, 0, 0,
	0, 1085, 1064, 610, 0, 0, 377, 0, 620, 423,
	424, 0, 430, 431, 432, 433, 212, 213, 632, 0,
	0, 577, 1276, 0, 1214, 0, 1220, 0, 1225, 0,
	612, 613, 621, 0, 425, 0, 426, 0, 0, 0,
	601, 0, 632, 1364, 1061, 0, 0, 1083, 0, 622,
	618, 436, 438, 439, 0, 0, 437, 633, 602, 1215,
	1221, 0, 440, 441, 442, 614, 615, 616, 617,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 658,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:594
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:607
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:608
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:612
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:648
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:654
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:660
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:665
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:675
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:679
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:685
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:691
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:697
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:701
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:710
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:716
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:720
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:726
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:800
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:851
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:855
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:866
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:879
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:885
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:893
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:897
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:927
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:931
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:937
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:947
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:960
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:961
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:965
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:969
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:975
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:985
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:989
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:998
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1010
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1014
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1020
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1024
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1028
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1032
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1038
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1042
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1046
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1052
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1056
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1062
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1072
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1076
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1080
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.str = RepeatableReadStr
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1090
		{
			yyVAL.str = ReadCommittedStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.str = SerializableStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1104
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1108
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1112
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1118
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1124
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1131
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1144
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1151
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1155
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1160
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1175
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1180
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1186
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1197
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1206
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1212
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1228
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1235
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1242
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1247
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1252
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1264
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1271
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1282
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1293
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1299
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1303
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1307
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1325
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1329
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1335
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1339
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1345
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1349
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1355
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1359
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1365
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1369
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1375
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1385
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1390
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1395
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1399
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1423
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1432
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1441
		{
			yyVAL.str = ""
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1454
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1458
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1524
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1540
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1544
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1548
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1554
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1558
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1563
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1567
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1578
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1584
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1589
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1600
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1608
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1641
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1674
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1686
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1724
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Armscii8Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = ASCIIStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Big5Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = UBinaryStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Cp1250Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Cp1251Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Cp1256Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Cp1257Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Cp850Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp852Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp866Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp932Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Dec8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = EucjpmsStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = EuckrStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Gb18030Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Gb2312Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = GbkStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Geostd8Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = GreekStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = HebrewStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = Hp8Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Keybcs2Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = Koi8rStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = Koi8uStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Latin1Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Latin2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Latin5Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Latin7Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = MacceStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = MacromanStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = SjisStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Swe7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = Tis620Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = Ucs2Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = UjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Utf16Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Utf16leStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Utf32Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Utf8Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Utf8mb4Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf8Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1904
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1908
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1912
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1918
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1922
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1926
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1932
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1943
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1947
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1951
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1955
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2079
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2183
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2192
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2197
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2201
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2209
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2219
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2227
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2235
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2240
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2244
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2249
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2257
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2261
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2300
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2314
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2323
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2329
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2339
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2343
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2348
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2352
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2356
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2360
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2364
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2368
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2384
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2388
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2392
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2396
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2400
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2405
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = yyDollar[2].str
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2433
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = "key"
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = yyDollar[1].str
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = ""
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2467
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2471
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2477
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2481
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2487
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2491
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2497
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2501
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2507
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2513
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2517
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2521
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2525
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2529
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2534
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2538
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2544
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2550
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2556
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2560
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2564
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2569
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2573
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2579
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2585
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2591
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2595
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2599
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2603
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2607
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2612
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2620
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2626
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2630
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2635
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2639
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2644
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2648
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2654
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2658
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2662
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2668
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2672
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2678
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2682
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2686
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2690
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2694
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2698
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2702
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2706
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2710
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2714
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2718
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2722
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2726
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2730
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2734
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2738
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2742
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2746
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2750
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2754
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2758
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2762
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2766
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2770
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2774
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2778
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2782
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2786
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2790
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2794
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2798
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2807
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2811
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = ""
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2849
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2853
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2862
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2867
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2880
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2884
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2893
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2897
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2901
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2905
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2909
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2915
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2923
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3027
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3031
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3035
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3039
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3043
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3047
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3051
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3057
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3061
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3067
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3071
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3075
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3079
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3083
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3087
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3091
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3095
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3099
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3103
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3109
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3116
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3123
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3136
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3324
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3333
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3341
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3350
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3357
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3369
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3378
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3393
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3398
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3402
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3407
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3411
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3417
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3423
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3429
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3433
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3439
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3443
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3449
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3455
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3461
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3467
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3473
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3477
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3481
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3485
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3491
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3497
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3503
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3507
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3511
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3517
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3521
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3526
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3530
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3535
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3539
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3545
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3549
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3553
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3557
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3561
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3565
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3569
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3573
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3577
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3581
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3585
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3589
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3593
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3597
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3601
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3605
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3609
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3613
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3617
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3621
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3625
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3629
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3634
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3638
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3642
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3648
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3652
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3658
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3663
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3667
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3672
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3677
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3682
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3687
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3692
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3698
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3704
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3709
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3715
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3721
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3725
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3731
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3736
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3740
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3750
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3755
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3760
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3766
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3772
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3779
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3786
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3793
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3801
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3805
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3811
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3817
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3823
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3829
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3835
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3841
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3853
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3875
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3879
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3889
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3918
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.str = "extended "
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4151
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4157
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4161
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4167
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4171
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4175
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4185
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4189
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4195
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4199
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4205
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4229
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4233
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4237
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4263
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4267
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4273
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4279
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4283
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4288
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4293
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4299
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4310
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4314
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4318
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4322
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4326
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4330
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4334
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = yyDollar[1].str
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = yyDollar[1].str
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = yyDollar[1].str
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4358
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4362
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4366
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4385
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4389
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4395
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4399
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4405
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4411
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4415
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4421
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4427
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4431
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4435
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4439
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4445
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4451
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4457
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4461
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4477
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4487
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4493
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4497
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4525
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4542
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4546
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4550
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4559
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4564
		{
			setAllowComments(yylex, true)
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4568
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4574
		{
			yyVAL.strs = nil
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4578
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4584
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4592
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4597
		{
			yyVAL.str = ""
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.str = SQLCacheStr
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4618
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4624
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4628
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4638
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4647
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4653
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4657
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4666
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4671
		{
			yyVAL.strs = nil
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4683
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4687
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = SQLCacheStr
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = DistinctStr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = DistinctStr
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = StraightJoinHint
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4713
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4717
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4723
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4727
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4733
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4737
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4741
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4745
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4750
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4758
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4765
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4770
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4774
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4780
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4786
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4790
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4800
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4804
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4808
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4812
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4818
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4822
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4828
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4832
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4841
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4850
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4856
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4866
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4876
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4880
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4884
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4888
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4894
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4911
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4915
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4919
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4923
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4929
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4931
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4935
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4941
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4943
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4946
		{
			yyVAL.empty = struct{}{}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.empty = struct{}{}
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4951
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4959
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4966
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4972
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4976
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4980
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4986
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4992
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4996
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5000
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5004
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5010
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5014
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5024
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5028
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5038
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5044
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5053
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5059
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5063
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5069
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5073
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5077
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5081
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5086
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5090
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5094
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5098
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5209
		{
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5212
		{
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5218
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5222
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5226
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5242
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5254
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5258
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5262
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5266
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5376
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5388
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5392
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5398
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5402
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5408
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5412
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5416
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5422
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5426
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5433
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5437
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5441
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5445
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5449
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5455
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5459
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5463
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5467
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5471
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5490
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5496
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5500
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5509
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5514
		{
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5517
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5523
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5529
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5533
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5545
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5551
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5555
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5561
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5565
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5571
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5575
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5587
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5593
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5597
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5603
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5609
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5613
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5619
		{
			yyVAL.str = ""
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5623
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5629
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5633
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5640
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5644
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5648
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5652
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5658
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5662
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5666
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5670
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5674
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5678
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5682
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5688
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5692
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5696
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5703
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5709
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5713
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5727
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5784
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5788
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5811
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5815
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5819
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5823
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5839
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5847
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5851
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5855
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5859
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5863
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5867
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5871
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5963
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5967
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5971
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5975
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5979
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5983
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5987
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5991
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5995
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5999
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6003
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6007
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6011
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6015
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6019
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6023
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6027
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6043
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6047
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6051
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6055
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6059
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6063
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6067
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6071
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6075
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6079
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6103
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6107
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6111
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6143
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6275
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6281
		{
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6283
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6287
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6291
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6295
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6299
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6303
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6307
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6311
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6315
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6319
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6323
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6329
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6333
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6337
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6341
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6345
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6349
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6353
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6357
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6361
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6379
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6383
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6416
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6420
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6424
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6428
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6432
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6438
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6442
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6446
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6456
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6460
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6466
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6470
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6474
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6478
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6482
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6488
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6492
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6496
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6500
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6504
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6508
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6512
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6516
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6520
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6524
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6530
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6534
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6539
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6543
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6548
		{
			yyVAL.str = string("")
		}
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6552
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6558
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6562
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6568
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6583
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6587
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6591
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6595
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6611
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6634
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6649
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6655
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6659
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6664
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6668
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6673
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6677
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6683
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6689
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6693
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6699
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6704
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6708
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6712
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6717
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6721
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6727
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6731
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6735
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6740
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6744
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6748
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6752
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6756
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6763
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6767
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6771
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6775
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6781
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6785
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6789
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6793
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6798
		{
			yyVAL.str = ""
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6802
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6806
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6810
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6815
		{
			yyVAL.str = ""
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6819
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6825
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6829
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6834
		{
			yyVAL.str = ""
		}
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6838
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6843
		{
			yyVAL.str = "cascaded"
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6847
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6851
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6860
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6866
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6872
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6878
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6887
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6891
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6896
		{
			yyVAL.str = ""
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6900
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6906
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6910
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6916
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6920
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6924
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6929
		{
			yyVAL.str = ""
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6933
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6937
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6942
		{
			yyVAL.str = ""
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6946
		{
			yyVAL.str = " header"
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6951
		{
			yyVAL.str = ""
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6955
		{
			yyVAL.str = " manifest on"
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6959
		{
			yyVAL.str = " manifest off"
		}
	case 1390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6964
		{
			yyVAL.str = ""
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6968
		{
			yyVAL.str = " overwrite on"
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6972
		{
			yyVAL.str = " overwrite off"
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6978
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6983
		{
			yyVAL.str = ""
		}
	case 1395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6987
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6993
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6997
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7003
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7007
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7012
		{
			yyVAL.str = ""
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7016
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7022
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7026
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7032
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7036
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7040
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7045
		{
			yyVAL.str = ""
		}
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7049
		{
			yyVAL.str = " optionally"
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7062
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7066
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7070
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7074
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7078
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7084
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7088
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7092
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7096
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7105
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7111
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7115
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7121
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7125
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7131
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7135
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7150
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7154
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7160
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7167
		{
			yyVAL.str = "charset"
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7177
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7181
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7185
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7199
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7209
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7214
		{
			yyVAL.empty = struct{}{}
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7216
		{
			yyVAL.empty = struct{}{}
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7218
		{
			yyVAL.empty = struct{}{}
		}
	case 1450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7222
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7231
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7238
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7242
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7248
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7252
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7259
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7265
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7269
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7275
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7279
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7286
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7855
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7864
		{
			decNesting(yylex)
		}
	case 2010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7869
		{
			skipToEnd(yylex)
		}
	case 2011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7874
		{
			skipToEnd(yylex)
		}
	case 2012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7878
		{
			skipToEnd(yylex)
		}
	case 2013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7882
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
