// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const EMPTY_FROM_CLAUSE = 57485
const LOWER_THAN_CHARSET = 57486
const CHARSET = 57487
const UNIQUE = 57488
const KEY = 57489
const EXPRESSION_PREC_SETTER = 57490
const OR = 57491
const XOR = 57492
const AND = 57493
const NOT = 57494
const BETWEEN = 57495
const CASE = 57496
const WHEN = 57497
const THEN = 57498
const ELSE = 57499
const END = 57500
const LE = 57501
const GE = 57502
const NE = 57503
const NULL_SAFE_EQUAL = 57504
const IS = 57505
const LIKE = 57506
const REGEXP = 57507
const RLIKE = 57508
const IN = 57509
const ASSIGNMENT_OPT = 57510
const SHIFT_LEFT = 57511
const SHIFT_RIGHT = 57512
const DIV = 57513
const MOD = 57514
const UNARY = 57515
const COLLATE = 57516
const BINARY = 57517
const UNDERSCORE_ARMSCII8 = 57518
const UNDERSCORE_ASCII = 57519
const UNDERSCORE_BIG5 = 57520
const UNDERSCORE_BINARY = 57521
const UNDERSCORE_CP1250 = 57522
const UNDERSCORE_CP1251 = 57523
const UNDERSCORE_CP1256 = 57524
const UNDERSCORE_CP1257 = 57525
const UNDERSCORE_CP850 = 57526
const UNDERSCORE_CP852 = 57527
const UNDERSCORE_CP866 = 57528
const UNDERSCORE_CP932 = 57529
const UNDERSCORE_DEC8 = 57530
const UNDERSCORE_EUCJPMS = 57531
const UNDERSCORE_EUCKR = 57532
const UNDERSCORE_GB18030 = 57533
const UNDERSCORE_GB2312 = 57534
const UNDERSCORE_GBK = 57535
const UNDERSCORE_GEOSTD8 = 57536
const UNDERSCORE_GREEK = 57537
const UNDERSCORE_HEBREW = 57538
const UNDERSCORE_HP8 = 57539
const UNDERSCORE_KEYBCS2 = 57540
const UNDERSCORE_KOI8R = 57541
const UNDERSCORE_KOI8U = 57542
const UNDERSCORE_LATIN1 = 57543
const UNDERSCORE_LATIN2 = 57544
const UNDERSCORE_LATIN5 = 57545
const UNDERSCORE_LATIN7 = 57546
const UNDERSCORE_MACCE = 57547
const UNDERSCORE_MACROMAN = 57548
const UNDERSCORE_SJIS = 57549
const UNDERSCORE_SWE7 = 57550
const UNDERSCORE_TIS620 = 57551
const UNDERSCORE_UCS2 = 57552
const UNDERSCORE_UJIS = 57553
const UNDERSCORE_UTF16 = 57554
const UNDERSCORE_UTF16LE = 57555
const UNDERSCORE_UTF32 = 57556
const UNDERSCORE_UTF8 = 57557
const UNDERSCORE_UTF8MB4 = 57558
const UNDERSCORE_UTF8MB3 = 57559
const INTERVAL = 57560
const WINDOW_EXPR = 57561
const JSON_EXTRACT_OP = 57562
const JSON_UNQUOTE_EXTRACT_OP = 57563
const CREATE = 57564
const ALTER = 57565
const DROP = 57566
const RENAME = 57567
const ANALYZE = 57568
const ADD = 57569
const FLUSH = 57570
const CHANGE = 57571
const MODIFY = 57572
const DEALLOCATE = 57573
const REVERT = 57574
const QUERIES = 57575
const SCHEMA = 57576
const TABLE = 57577
const INDEX = 57578
const VIEW = 57579
const TO = 57580
const IGNORE = 57581
const IF = 57582
const PRIMARY = 57583
const COLUMN = 57584
const SPATIAL = 57585
const FULLTEXT = 57586
const KEY_BLOCK_SIZE = 57587
const CHECK = 57588
const INDEXES = 57589
const ACTION = 57590
const CASCADE = 57591
const CONSTRAINT = 57592
const FOREIGN = 57593
const NO = 57594
const REFERENCES = 57595
const RESTRICT = 57596
const SHOW = 57597
const DESCRIBE = 57598
const EXPLAIN = 57599
const DATE = 57600
const ESCAPE = 57601
const REPAIR = 57602
const OPTIMIZE = 57603
const TRUNCATE = 57604
const COALESCE = 57605
const EXCHANGE = 57606
const REBUILD = 57607
const PARTITIONING = 57608
const REMOVE = 57609
const PREPARE = 57610
const EXECUTE = 57611
const MAXVALUE = 57612
const PARTITION = 57613
const REORGANIZE = 57614
const LESS = 57615
const THAN = 57616
const PROCEDURE = 57617
const TRIGGER = 57618
const VINDEX = 57619
const VINDEXES = 57620
const DIRECTORY = 57621
const NAME = 57622
const UPGRADE = 57623
const STATUS = 57624
const VARIABLES = 57625
const WARNINGS = 57626
const CASCADED = 57627
const DEFINER = 57628
const OPTION = 57629
const SQL = 57630
const UNDEFINED = 57631
const SEQUENCE = 57632
const MERGE = 57633
const TEMPORARY = 57634
const TEMPTABLE = 57635
const INVOKER = 57636
const SECURITY = 57637
const FIRST = 57638
const AFTER = 57639
const LAST = 57640
const VITESS_MIGRATION = 57641
const CANCEL = 57642
const RETRY = 57643
const LAUNCH = 57644
const COMPLETE = 57645
const CLEANUP = 57646
const THROTTLE = 57647
const UNTHROTTLE = 57648
const FORCE_CUTOVER = 57649
const EXPIRE = 57650
const RATIO = 57651
const VITESS_THROTTLER = 57652
const BEGIN = 57653
const START = 57654
const TRANSACTION = 57655
const COMMIT = 57656
const ROLLBACK = 57657
const SAVEPOINT = 57658
const RELEASE = 57659
const WORK = 57660
const CONSISTENT = 57661
const SNAPSHOT = 57662
const UNRESOLVED = 57663
const TRANSACTIONS = 57664
const BIT = 57665
const TINYINT = 57666
const SMALLINT = 57667
const MEDIUMINT = 57668
const INT = 57669
const INTEGER = 57670
const BIGINT = 57671
const INTNUM = 57672
const REAL = 57673
const DOUBLE = 57674
const FLOAT_TYPE = 57675
const FLOAT4_TYPE = 57676
const FLOAT8_TYPE = 57677
const DECIMAL_TYPE = 57678
const NUMERIC = 57679
const TIME = 57680
const TIMESTAMP = 57681
const DATETIME = 57682
const YEAR = 57683
const CHAR = 57684
const VARCHAR = 57685
const BOOL = 57686
const CHARACTER = 57687
const VARBINARY = 57688
const NCHAR = 57689
const TEXT = 57690
const TINYTEXT = 57691
const MEDIUMTEXT = 57692
const LONGTEXT = 57693
const BLOB = 57694
const TINYBLOB = 57695
const MEDIUMBLOB = 57696
const LONGBLOB = 57697
const JSON = 57698
const JSON_SCHEMA_VALID = 57699
const JSON_SCHEMA_VALIDATION_REPORT = 57700
const ENUM = 57701
const GEOMETRY = 57702
const POINT = 57703
const LINESTRING = 57704
const POLYGON = 57705
const GEOMCOLLECTION = 57706
const GEOMETRYCOLLECTION = 57707
const MULTIPOINT = 57708
const MULTILINESTRING = 57709
const MULTIPOLYGON = 57710
const ASCII = 57711
const UNICODE = 57712
const VECTOR = 57713
const NULLX = 57714
const AUTO_INCREMENT = 57715
const APPROXNUM = 57716
const SIGNED = 57717
const UNSIGNED = 57718
const ZEROFILL = 57719
const PURGE = 57720
const BEFORE = 57721
const CODE = 57722
const COLLATION = 57723
const COLUMNS = 57724
const DATABASES = 57725
const ENGINES = 57726
const EVENT = 57727
const EXTENDED = 57728
const FIELDS = 57729
const FULL = 57730
const FUNCTION = 57731
const GTID_EXECUTED = 57732
const KEYSPACES = 57733
const OPEN = 57734
const PLUGINS = 57735
const PRIVILEGES = 57736
const PROCESSLIST = 57737
const SCHEMAS = 57738
const TABLES = 57739
const TRIGGERS = 57740
const USER = 57741
const VGTID_EXECUTED = 57742
const VITESS_KEYSPACES = 57743
const VITESS_METADATA = 57744
const VITESS_MIGRATIONS = 57745
const VITESS_REPLICATION_STATUS = 57746
const VITESS_SHARDS = 57747
const VITESS_TABLETS = 57748
const VITESS_TARGET = 57749
const VSCHEMA = 57750
const VITESS_THROTTLED_APPS = 57751
const NAMES = 57752
const GLOBAL = 57753
const SESSION = 57754
const ISOLATION = 57755
const LEVEL = 57756
const READ = 57757
const WRITE = 57758
const ONLY = 57759
const REPEATABLE = 57760
const COMMITTED = 57761
const UNCOMMITTED = 57762
const SERIALIZABLE = 57763
const ADDDATE = 57764
const CURRENT_TIMESTAMP = 57765
const DATABASE = 57766
const CURRENT_DATE = 57767
const CURDATE = 57768
const DATE_ADD = 57769
const DATE_SUB = 57770
const NOW = 57771
const SUBDATE = 57772
const CURTIME = 57773
const CURRENT_TIME = 57774
const LOCALTIME = 57775
const LOCALTIMESTAMP = 57776
const CURRENT_USER = 57777
const UTC_DATE = 57778
const UTC_TIME = 57779
const UTC_TIMESTAMP = 57780
const SYSDATE = 57781
const DAY = 57782
const DAY_HOUR = 57783
const DAY_MICROSECOND = 57784
const DAY_MINUTE = 57785
const DAY_SECOND = 57786
const HOUR = 57787
const HOUR_MICROSECOND = 57788
const HOUR_MINUTE = 57789
const HOUR_SECOND = 57790
const MICROSECOND = 57791
const MINUTE = 57792
const MINUTE_MICROSECOND = 57793
const MINUTE_SECOND = 57794
const MONTH = 57795
const QUARTER = 57796
const SECOND = 57797
const SECOND_MICROSECOND = 57798
const YEAR_MONTH = 57799
const WEEK = 57800
const SQL_TSI_DAY = 57801
const SQL_TSI_WEEK = 57802
const SQL_TSI_HOUR = 57803
const SQL_TSI_MINUTE = 57804
const SQL_TSI_MONTH = 57805
const SQL_TSI_QUARTER = 57806
const SQL_TSI_SECOND = 57807
const SQL_TSI_MICROSECOND = 57808
const SQL_TSI_YEAR = 57809
const REPLACE = 57810
const CONVERT = 57811
const CAST = 57812
const SUBSTR = 57813
const SUBSTRING = 57814
const MID = 57815
const SEPARATOR = 57816
const TIMESTAMPADD = 57817
const TIMESTAMPDIFF = 57818
const WEIGHT_STRING = 57819
const LTRIM = 57820
const RTRIM = 57821
const TRIM = 57822
const JSON_ARRAY = 57823
const JSON_OBJECT = 57824
const JSON_QUOTE = 57825
const JSON_DEPTH = 57826
const JSON_TYPE = 57827
const JSON_LENGTH = 57828
const JSON_VALID = 57829
const JSON_ARRAY_APPEND = 57830
const JSON_ARRAY_INSERT = 57831
const JSON_INSERT = 57832
const JSON_MERGE = 57833
const JSON_MERGE_PATCH = 57834
const JSON_MERGE_PRESERVE = 57835
const JSON_REMOVE = 57836
const JSON_REPLACE = 57837
const JSON_SET = 57838
const JSON_UNQUOTE = 57839
const COUNT = 57840
const AVG = 57841
const MAX = 57842
const MIN = 57843
const SUM = 57844
const GROUP_CONCAT = 57845
const BIT_AND = 57846
const BIT_OR = 57847
const BIT_XOR = 57848
const STD = 57849
const STDDEV = 57850
const STDDEV_POP = 57851
const STDDEV_SAMP = 57852
const VAR_POP = 57853
const VAR_SAMP = 57854
const VARIANCE = 57855
const ANY_VALUE = 57856
const REGEXP_INSTR = 57857
const REGEXP_LIKE = 57858
const REGEXP_REPLACE = 57859
const REGEXP_SUBSTR = 57860
const ExtractValue = 57861
const UpdateXML = 57862
const GET_LOCK = 57863
const RELEASE_LOCK = 57864
const RELEASE_ALL_LOCKS = 57865
const IS_FREE_LOCK = 57866
const IS_USED_LOCK = 57867
const LOCATE = 57868
const POSITION = 57869
const ST_GeometryCollectionFromText = 57870
const ST_GeometryFromText = 57871
const ST_LineStringFromText = 57872
const ST_MultiLineStringFromText = 57873
const ST_MultiPointFromText = 57874
const ST_MultiPolygonFromText = 57875
const ST_PointFromText = 57876
const ST_PolygonFromText = 57877
const ST_GeometryCollectionFromWKB = 57878
const ST_GeometryFromWKB = 57879
const ST_LineStringFromWKB = 57880
const ST_MultiLineStringFromWKB = 57881
const ST_MultiPointFromWKB = 57882
const ST_MultiPolygonFromWKB = 57883
const ST_PointFromWKB = 57884
const ST_PolygonFromWKB = 57885
const ST_AsBinary = 57886
const ST_AsText = 57887
const ST_Dimension = 57888
const ST_Envelope = 57889
const ST_IsSimple = 57890
const ST_IsEmpty = 57891
const ST_GeometryType = 57892
const ST_X = 57893
const ST_Y = 57894
const ST_Latitude = 57895
const ST_Longitude = 57896
const ST_EndPoint = 57897
const ST_IsClosed = 57898
const ST_Length = 57899
const ST_NumPoints = 57900
const ST_StartPoint = 57901
const ST_PointN = 57902
const ST_Area = 57903
const ST_Centroid = 57904
const ST_ExteriorRing = 57905
const ST_InteriorRingN = 57906
const ST_NumInteriorRings = 57907
const ST_NumGeometries = 57908
const ST_GeometryN = 57909
const ST_LongFromGeoHash = 57910
const ST_PointFromGeoHash = 57911
const ST_LatFromGeoHash = 57912
const ST_GeoHash = 57913
const ST_AsGeoJSON = 57914
const ST_GeomFromGeoJSON = 57915
const MATCH = 57916
const AGAINST = 57917
const BOOLEAN = 57918
const LANGUAGE = 57919
const WITH = 57920
const QUERY = 57921
const EXPANSION = 57922
const WITHOUT = 57923
const VALIDATION = 57924
const ROLLUP = 57925
const UNUSED = 57926
const ARRAY = 57927
const BYTE = 57928
const CUME_DIST = 57929
const DESCRIPTION = 57930
const DENSE_RANK = 57931
const EMPTY = 57932
const EXCEPT = 57933
const FIRST_VALUE = 57934
const GROUPING = 57935
const GROUPS = 57936
const JSON_TABLE = 57937
const LAG = 57938
const LAST_VALUE = 57939
const LATERAL = 57940
const LEAD = 57941
const NTH_VALUE = 57942
const NTILE = 57943
const OF = 57944
const OVER = 57945
const PERCENT_RANK = 57946
const RANK = 57947
const RECURSIVE = 57948
const ROW_NUMBER = 57949
const SYSTEM = 57950
const WINDOW = 57951
const ACTIVE = 57952
const ADMIN = 57953
const AUTOEXTEND_SIZE = 57954
const BUCKETS = 57955
const CLONE = 57956
const COLUMN_FORMAT = 57957
const COMPONENT = 57958
const DEFINITION = 57959
const ENFORCED = 57960
const ENGINE_ATTRIBUTE = 57961
const EXCLUDE = 57962
const FOLLOWING = 57963
const GET_MASTER_PUBLIC_KEY = 57964
const HISTOGRAM = 57965
const HISTORY = 57966
const INACTIVE = 57967
const INVISIBLE = 57968
const LOCKED = 57969
const MASTER_COMPRESSION_ALGORITHMS = 57970
const MASTER_PUBLIC_KEY_PATH = 57971
const MASTER_TLS_CIPHERSUITES = 57972
const MASTER_ZSTD_COMPRESSION_LEVEL = 57973
const NESTED = 57974
const NETWORK_NAMESPACE = 57975
const NOWAIT = 57976
const NULLS = 57977
const OJ = 57978
const OLD = 57979
const OPTIONAL = 57980
const ORDINALITY = 57981
const ORGANIZATION = 57982
const OTHERS = 57983
const PARTIAL = 57984
const PATH = 57985
const PERSIST = 57986
const PERSIST_ONLY = 57987
const PRECEDING = 57988
const PRIVILEGE_CHECKS_USER = 57989
const PROCESS = 57990
const RANDOM = 57991
const REFERENCE = 57992
const REQUIRE_ROW_FORMAT = 57993
const RESOURCE = 57994
const RESPECT = 57995
const RESTART = 57996
const RETAIN = 57997
const REUSE = 57998
const ROLE = 57999
const SECONDARY = 58000
const SECONDARY_ENGINE = 58001
const SECONDARY_ENGINE_ATTRIBUTE = 58002
const SECONDARY_LOAD = 58003
const SECONDARY_UNLOAD = 58004
const SIMPLE = 58005
const SKIP = 58006
const SRID = 58007
const THREAD_PRIORITY = 58008
const TIES = 58009
const UNBOUNDED = 58010
const VCPU = 58011
const VISIBLE = 58012
const RETURNING = 58013
const FORMAT_BYTES = 58014
const FORMAT_PICO_TIME = 58015
const PS_CURRENT_THREAD_ID = 58016
const PS_THREAD_ID = 58017
const GTID_SUBSET = 58018
const GTID_SUBTRACT = 58019
const WAIT_FOR_EXECUTED_GTID_SET = 58020
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58021
const FORMAT = 58022
const TREE = 58023
const VITESS = 58024
const TRADITIONAL = 58025
const VTEXPLAIN = 58026
const VEXPLAIN = 58027
const PLAN = 58028
const LOCAL = 58029
const LOW_PRIORITY = 58030
const NO_WRITE_TO_BINLOG = 58031
const LOGS = 58032
const ERROR = 58033
const GENERAL = 58034
const HOSTS = 58035
const OPTIMIZER_COSTS = 58036
const USER_RESOURCES = 58037
const SLOW = 58038
const CHANNEL = 58039
const RELAY = 58040
const EXPORT = 58041
const CURRENT = 58042
const ROW = 58043
const ROWS = 58044
const AVG_ROW_LENGTH = 58045
const CONNECTION = 58046
const CHECKSUM = 58047
const DELAY_KEY_WRITE = 58048
const ENCRYPTION = 58049
const ENGINE = 58050
const INSERT_METHOD = 58051
const MAX_ROWS = 58052
const MIN_ROWS = 58053
const PACK_KEYS = 58054
const PASSWORD = 58055
const FIXED = 58056
const DYNAMIC = 58057
const COMPRESSED = 58058
const REDUNDANT = 58059
const COMPACT = 58060
const ROW_FORMAT = 58061
const STATS_AUTO_RECALC = 58062
const STATS_PERSISTENT = 58063
const STATS_SAMPLE_PAGES = 58064
const STORAGE = 58065
const MEMORY = 58066
const DISK = 58067
const PARTITIONS = 58068
const LINEAR = 58069
const RANGE = 58070
const LIST = 58071
const SUBPARTITION = 58072
const SUBPARTITIONS = 58073
const HASH = 58074

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 49,
	17, 49,
	-2, 40,
	-1, 52,
	1, 159,
	750, 159,
	-2, 167,
	-1, 53,
	148, 167,
	190, 167,
	362, 167,
	-2, 526,
	-1, 61,
	38, 786,
	253, 786,
	264, 786,
	299, 800,
	300, 800,
	-2, 788,
	-1, 66,
	255, 824,
	-2, 822,
	-1, 124,
	252, 1621,
	-2, 133,
	-1, 126,
	1, 160,
	750, 160,
	-2, 167,
	-1, 137,
	149, 411,
	258, 411,
	-2, 515,
	-1, 156,
	148, 167,
	190, 167,
	362, 167,
	-2, 535,
	-1, 749,
	176, 41,
	-2, 43,
	-1, 958,
	95, 1638,
	-2, 1482,
	-1, 959,
	95, 1639,
	235, 1643,
	-2, 1483,
	-1, 960,
	235, 1642,
	-2, 42,
	-1, 1044,
	65, 896,
	-2, 909,
	-1, 1133,
	263, 1109,
	268, 1109,
	-2, 422,
	-1, 1218,
	1, 583,
	750, 583,
	-2, 167,
	-1, 1527,
	235, 1643,
	-2, 1483,
	-1, 1741,
	65, 897,
	-2, 913,
	-1, 1742,
	65, 898,
	-2, 914,
	-1, 1802,
	148, 167,
	190, 167,
	362, 167,
	-2, 461,
	-1, 1884,
	149, 411,
	258, 411,
	-2, 515,
	-1, 1893,
	263, 1110,
	268, 1110,
	-2, 423,
	-1, 2342,
	235, 1647,
	-2, 1641,
	-1, 2343,
	235, 1643,
	-2, 1639,
	-1, 2446,
	148, 167,
	190, 167,
	362, 167,
	-2, 462,
	-1, 2453,
	28, 188,
	-2, 190,
	-1, 2916,
	86, 98,
	96, 98,
	-2, 976,
	-1, 2985,
	725, 704,
	-2, 678,
	-1, 3209,
	55, 1586,
	-2, 1580,
	-1, 4047,
	725, 704,
	-2, 692,
	-1, 4139,
	98, 636,
	104, 636,
	114, 636,
	192, 636,
	193, 636,
	194, 636,
	195, 636,
	196, 636,
	197, 636,
	198, 636,
	199, 636,
	200, 636,
	201, 636,
	202, 636,
	203, 636,
	204, 636,
	205, 636,
	206, 636,
	207, 636,
	208, 636,
	209, 636,
	210, 636,
	211, 636,
	212, 636,
	213, 636,
	214, 636,
	215, 636,
	216, 636,
	217, 636,
	218, 636,
	219, 636,
	220, 636,
	221, 636,
	222, 636,
	223, 636,
	224, 636,
	225, 636,
	226, 636,
	227, 636,
	228, 636,
	229, 636,
	230, 636,
	231, 636,
	232, 636,
	233, 636,
	-2, 2018,
}

const yyPrivate = 57344

const yyLast = 56326

var yyAct = [...]int{
	974, 3698, 3699, 87, 3697, 4028, 4182, 4214, 4118, 962,
	4137, 2147, 3361, 2371, 4010, 4227, 4106, 3933, 4181, 1286,
	969, 3647, 961, 2135, 3261, 2443, 3268, 2073, 1284, 3222,
	5, 3310, 3497, 3319, 3324, 4008, 3321, 3320, 3318, 3323,
	3322, 3075, 3634, 3339, 3160, 2518, 3276, 753, 2014, 3338,
	3226, 2373, 3223, 3537, 3049, 3074, 3543, 3220, 3740, 747,
	3210, 748, 3341, 3031, 3565, 3527, 1862, 2398, 2950, 2876,
	3368, 1805, 781, 922, 2481, 2982, 2506, 1761, 2486, 4079,
	2951, 2414, 2549, 2952, 1095, 1063, 1042, 165, 87, 2901,
	2417, 923, 2431, 41, 2419, 2882, 1070, 1039, 2852, 2868,
	2295, 2418, 2131, 1165, 1141, 927, 2327, 3023, 42, 1042,
	2081, 1891, 2527, 151, 2294, 43, 2169, 2505, 2406, 2566,
	2488, 1909, 2943, 1128, 1105, 1123, 1794, 2918, 106, 1774,
	1540, 2421, 1722, 2175, 102, 2106, 2095, 1465, 1450, 2010,
	107, 1102, 1099, 2503, 1134, 1898, 763, 1990, 2477, 1103,
	1129, 3225, 1130, 2478, 1793, 1080, 1051, 1082, 1131, 758,
	1779, 1744, 2202, 1523, 1499, 2889, 3735, 2183, 1048, 2850,
	2072, 85, 1274, 2022, 169, 129, 127, 109, 128, 1883,
	2399, 1046, 134, 1062, 135, 3727, 1214, 1075, 3498, 1049,
	740, 1041, 757, 1045, 3554, 101, 100, 93, 4215, 1544,
	2520, 2521, 2522, 1047, 751, 3635, 3307, 1282, 2520, 4063,
	1260, 1074, 924, 2973, 1065, 108, 3005, 3004, 84, 2564,
	1466, 3627, 1036, 4164, 3039, 3040, 4058, 130, 4059, 3590,
	2368, 2369, 2088, 136, 1549, 4064, 1055, 2087, 2086, 2085,
	2084, 750, 683, 1145, 1170, 1096, 2083, 2053, 1230, 4158,
	680, 1231, 681, 2848, 2617, 3702, 3206, 1167, 4185, 3164,
	4237, 4180, 4205, 741, 3501, 1178, 1461, 1112, 2553, 3500,
	1184, 1185, 1186, 2395, 1189, 1190, 1191, 1192, 1089, 2394,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1144, 1056, 1090,
	1038, 130, 1119, 1118, 1040, 1117, 1064, 1975, 2, 2878,
	3329, 1120, 2552, 1765, 4037, 1763, 1171, 1174, 1175, 95,
	3329, 95, 2998, 4011, 4220, 1107, 2975, 4059, 1476, 2813,
	725, 1482, 2093, 3326, 3387, 4133, 95, 3702, 1037, 719,
	2392, 1053, 4168, 1766, 3929, 1764, 3928, 1035, 95, 4219,
	1187, 3701, 928, 113, 114, 115, 725, 118, 1169, 2995,
	124, 4166, 1168, 193, 4195, 95, 675, 4167, 2109, 130,
	3327, 1088, 1092, 926, 192, 3939, 4162, 3659, 738, 739,
	3327, 1121, 1088, 1092, 926, 3648, 4165, 86, 1030, 1031,
	1032, 1033, 2624, 1452, 86, 1044, 4107, 131, 192, 3333,
	1755, 4115, 2546, 3938, 719, 977, 978, 979, 2140, 3333,
	977, 978, 979, 174, 3640, 4142, 3413, 3641, 1478, 719,
	1872, 131, 3258, 3259, 2849, 1077, 1078, 1795, 2927, 1796,
	719, 2926, 3257, 3701, 2928, 2438, 2439, 174, 97, 3038,
	1472, 2065, 2066, 1464, 2621, 3754, 2437, 714, 3022, 1116,
	1250, 1223, 1224, 1028, 1027, 1255, 1256, 1111, 4119, 2932,
	1113, 1213, 2622, 86, 4029, 1279, 1238, 1251, 1244, 2497,
	95, 1239, 2018, 171, 2939, 1462, 172, 95, 3658, 1479,
	3365, 1480, 1481, 1226, 3363, 3096, 2892, 2456, 2455, 719,
	2551, 1238, 3395, 2491, 719, 699, 1239, 171, 4147, 3393,
	172, 1445, 191, 2370, 1237, 2068, 1236, 1114, 697, 2885,
	2886, 4042, 4186, 3330, 2893, 2615, 2064, 733, 4145, 719,
	737, 1791, 731, 3330, 1726, 3369, 191, 3024, 4151, 4152,
	2983, 1188, 2528, 4187, 4123, 1466, 4217, 3278, 3279, 4123,
	3981, 1965, 3982, 3008, 4146, 2573, 95, 3356, 694, 1991,
	2567, 86, 1271, 720, 88, 3357, 1451, 709, 1444, 1116,
	1276, 1108, 2402, 1257, 1259, 1252, 1245, 1219, 1110, 1109,
	2569, 3026, 704, 1258, 1253, 1254, 3366, 3629, 1278, 2618,
	3364, 2619, 2571, 707, 1277, 1966, 717, 1967, 3628, 2591,
	1143, 2592, 2594, 2593, 718, 1194, 1154, 1193, 3913, 1143,
	2574, 1081, 97, 2580, 2576, 2578, 2579, 2577, 2581, 2582,
	2583, 1152, 2531, 2019, 3706, 1876, 175, 1114, 720, 3012,
	3625, 3013, 1124, 2415, 2570, 181, 1125, 1125, 1163, 1514,
	1162, 1161, 1164, 720, 95, 1160, 1159, 2572, 1158, 1115,
	175, 1157, 1156, 1476, 720, 2490, 3277, 1151, 3280, 181,
	1729, 4159, 4192, 3097, 684, 4238, 686, 700, 3280, 722,
	1514, 721, 690, 1100, 688, 692, 701, 693, 2976, 687,
	1136, 698, 2011, 3163, 689, 702, 703, 706, 710, 711,
	712, 708, 705, 3540, 696, 723, 1100, 2504, 1100, 1076,
	3027, 1137, 1098, 1142, 1870, 1173, 1500, 3300, 1091, 1085,
	1083, 1136, 1142, 720, 3007, 1172, 1869, 2557, 720, 1091,
	1085, 1083, 1868, 2556, 1283, 3043, 1283, 1283, 3384, 2007,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1508, 1510,
	1511, 1453, 1181, 720, 3191, 3624, 1471, 1468, 1469, 1470,
	1475, 1477, 1474, 3189, 1473, 1155, 2639, 2993, 2008, 1115,
	1866, 1792, 1229, 166, 1467, 1472, 674, 2400, 2401, 3021,
	1153, 3172, 3020, 1515, 1516, 4160, 1042, 1524, 1529, 1530,
	4024, 1533, 1535, 1536, 1537, 1538, 1539, 166, 1542, 1543,
	1545, 1545, 3579, 1545, 1545, 1550, 1550, 1550, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1521, 4036, 1272, 1122, 1677, 4082, 1679, 1680,
	1681, 1682, 1683, 1442, 1443, 2974, 3588, 3589, 1460, 3700,
	1550, 1550, 1550, 1550, 1550, 1550, 1234, 1441, 1240, 1241,
	1242, 1243, 975, 1225, 975, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 975,
	724, 2623, 1280, 1281, 1517, 1518, 1519, 1520, 2997, 2550,
	94, 975, 2977, 3010, 1531, 1084, 1719, 94, 2494, 1525,
	1546, 715, 1547, 1548, 719, 4121, 1084, 3331, 3332, 3657,
	4121, 3541, 167, 1143, 1897, 1235, 716, 3331, 3332, 179,
	3335, 1222, 2548, 4231, 1977, 1976, 1978, 1979, 1980, 1217,
	3335, 3700, 2996, 1534, 3561, 3485, 167, 4120, 2923, 2495,
	1551, 1552, 4120, 179, 89, 2622, 2493, 2402, 2853, 2855,
	1725, 4150, 2888, 2825, 2143, 1248, 1783, 1995, 1143, 1042,
	187, 1754, 1678, 1042, 1228, 3050, 94, 2883, 3171, 1042,
	682, 1471, 1468, 1469, 1470, 1475, 1477, 1474, 3030, 1473,
	2496, 2444, 126, 916, 187, 1267, 1514, 1269, 1716, 1467,
	2492, 1511, 1143, 3256, 1755, 4149, 2650, 1494, 1059, 1275,
	1715, 1261, 4050, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 1996, 121, 1142, 1166, 2023, 186,
	188, 189, 190, 1896, 2184, 1266, 1268, 168, 173, 170,
	176, 177, 178, 180, 182, 183, 184, 185, 3620, 195,
	3553, 2185, 678, 186, 188, 189, 190, 1735, 2568, 3052,
	2077, 106, 2176, 2004, 94, 1233, 1716, 1797, 3385, 1736,
	2966, 1142, 678, 107, 1733, 3070, 1146, 1136, 1737, 4196,
	2176, 1148, 2659, 1481, 1041, 1149, 1147, 2650, 1052, 1723,
	1480, 1481, 1709, 3749, 1684, 1685, 1686, 1687, 1688, 1689,
	1116, 1212, 122, 3595, 3594, 1142, 1150, 1073, 1073, 2535,
	109, 1136, 1139, 1140, 1906, 1100, 678, 1143, 1180, 1133,
	1137, 1992, 1905, 1993, 1895, 3033, 1994, 2545, 720, 2543,
	3032, 2854, 3062, 3061, 3060, 1154, 1152, 3054, 2547, 3058,
	1132, 3053, 1053, 3051, 4188, 1264, 1889, 1720, 3056, 1265,
	2540, 1731, 2400, 2401, 1873, 1874, 1875, 3055, 3033, 1270,
	1482, 2540, 1143, 3032, 4229, 1216, 1732, 4230, 1262, 4228,
	1760, 1882, 1757, 3580, 1899, 1899, 3057, 3059, 2016, 1960,
	1247, 1054, 4083, 1901, 1263, 2024, 1038, 1218, 4016, 2182,
	1942, 1249, 4239, 2544, 4233, 1788, 1789, 1040, 3654, 95,
	3655, 1283, 2170, 1911, 2542, 1912, 3921, 1914, 1916, 2332,
	1985, 1920, 1922, 1924, 1926, 1928, 1900, 1857, 1232, 1053,
	1142, 1950, 1951, 1865, 1755, 1146, 1136, 1956, 1957, 1500,
	1148, 4084, 2181, 3920, 1149, 1147, 1879, 4017, 2332, 1880,
	1143, 1878, 2329, 2000, 3911, 1998, 1999, 1997, 2001, 2002,
	2003, 2331, 1892, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1509, 1508, 1510, 1511, 3264, 1142, 3671, 973, 1983, 2111,
	1972, 1136, 1139, 1140, 1215, 1100, 3670, 743, 3602, 1133,
	1137, 1984, 1738, 2112, 1512, 1513, 2110, 1903, 4240, 3601,
	1115, 3591, 1946, 2211, 3308, 2012, 1504, 1505, 1506, 1507,
	1509, 1508, 1510, 1511, 1500, 3296, 3042, 2948, 1479, 1734,
	1480, 1481, 2947, 2946, 1938, 3265, 2500, 1941, 1986, 1943,
	977, 978, 979, 130, 1119, 1118, 1970, 1117, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1509, 1508, 1510, 1511, 1982,
	3267, 1971, 1969, 1142, 1968, 1179, 1958, 1952, 1949, 1176,
	2029, 1871, 1506, 1507, 1509, 1508, 1510, 1511, 1482, 1948,
	3262, 1488, 1489, 1490, 1491, 1492, 1493, 1487, 1484, 2941,
	3360, 1283, 1283, 1947, 2051, 1918, 1730, 2025, 2026, 3278,
	3279, 1482, 1447, 725, 2407, 2408, 3263, 87, 1791, 4189,
	87, 2030, 2203, 2099, 2100, 2629, 2630, 2205, 2037, 2038,
	2039, 2210, 2206, 2874, 4216, 2207, 2208, 2209, 2050, 4045,
	2204, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	3269, 3585, 2930, 725, 725, 1482, 2027, 2516, 2514, 2515,
	2513, 1500, 4044, 2031, 2167, 2033, 2034, 2035, 2036, 2512,
	4020, 2511, 2040, 1502, 1503, 1504, 1505, 1506, 1507, 1509,
	1508, 1510, 1511, 2700, 2052, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1509, 1508, 1510, 1511, 2138, 2138, 2136, 2136,
	2139, 1482, 2698, 4201, 1755, 1482, 112, 2101, 1768, 4176,
	1755, 1482, 1478, 1755, 2874, 1755, 1755, 111, 3277, 110,
	1482, 1500, 42, 2167, 1496, 42, 1497, 1482, 1478, 1755,
	3280, 2874, 4114, 3402, 2696, 4019, 1479, 4018, 1480, 1481,
	1498, 1512, 1513, 1495, 2222, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1509, 1508, 1510, 1511, 3916, 1769, 3900, 1479,
	3899, 1480, 1481, 2159, 2148, 2149, 2150, 2151, 2161, 2152,
	2153, 2154, 2166, 2162, 2155, 2156, 2163, 2164, 2165, 2157,
	2158, 2160, 2874, 4093, 4038, 85, 103, 3748, 85, 1716,
	2078, 3746, 1755, 4199, 1755, 3948, 104, 4129, 1755, 2874,
	4089, 1715, 2108, 1479, 1755, 1480, 1481, 3667, 2058, 2059,
	4001, 1755, 3072, 1755, 2171, 2099, 2100, 2097, 2098, 4127,
	1755, 2113, 2159, 2148, 2149, 2150, 2151, 2161, 2152, 2153,
	2154, 2166, 2162, 2155, 2156, 2163, 2164, 2165, 2157, 2158,
	2160, 2096, 1714, 3638, 4035, 3924, 1755, 3947, 2142, 1479,
	3266, 1480, 1481, 1479, 1713, 1480, 1481, 1755, 2342, 1479,
	1712, 1480, 1481, 2115, 2874, 3912, 103, 2340, 1479, 2246,
	1480, 1481, 105, 1482, 3599, 1479, 104, 1480, 1481, 1542,
	3638, 1755, 2186, 2187, 2188, 2189, 3584, 2341, 2874, 3636,
	2330, 2540, 1755, 3904, 2221, 3370, 2200, 1525, 678, 2114,
	678, 2116, 2117, 2118, 2119, 2120, 2121, 2123, 2125, 2126,
	2127, 2128, 2129, 2130, 1500, 2177, 2638, 3559, 1755, 2780,
	1755, 2919, 2328, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1509, 1508, 1510, 1511, 1482, 3367, 3299, 1755, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1509, 1508, 1510, 1511, 2423,
	3298, 3289, 3288, 3903, 2339, 3286, 3287, 2345, 2346, 3284,
	3285, 106, 678, 2342, 2957, 4125, 1755, 3284, 3283, 1482,
	2898, 1755, 2340, 107, 1482, 2622, 3006, 3646, 1482, 1861,
	2987, 2980, 2981, 106, 1482, 1500, 2238, 2944, 1711, 2920,
	1528, 2453, 2412, 2874, 2873, 107, 2919, 2387, 1704, 2922,
	1482, 2984, 2375, 2141, 1755, 2962, 1482, 2612, 2107, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1509, 1508, 1510, 1511,
	2604, 1479, 1105, 1480, 1481, 2603, 3994, 1755, 3362, 2562,
	2561, 2397, 2376, 2054, 2020, 2871, 1981, 2457, 1973, 2458,
	2459, 2460, 2461, 1963, 2462, 2463, 2464, 2465, 2448, 105,
	2447, 1482, 1055, 2467, 2425, 1105, 2469, 2470, 2471, 2472,
	2429, 3992, 1755, 2452, 2920, 2388, 3989, 1755, 2890, 1959,
	3971, 1755, 2363, 105, 2622, 1482, 2390, 1755, 2381, 1955,
	2382, 1954, 1479, 1953, 1480, 1481, 1482, 2451, 1861, 1860,
	1482, 2483, 3270, 4190, 2529, 1482, 3274, 2489, 3526, 1755,
	2890, 2410, 1482, 3273, 1803, 1802, 2434, 2435, 2433, 1770,
	1089, 1273, 3552, 2869, 2450, 1478, 2449, 1479, 1482, 1480,
	1481, 4077, 1479, 3556, 1480, 1481, 1479, 1482, 1480, 1481,
	111, 1090, 1479, 2526, 1480, 1481, 1482, 3275, 1755, 3251,
	1482, 2499, 3271, 3519, 1755, 2898, 2897, 3272, 1479, 2622,
	1480, 1481, 1145, 2541, 1479, 1482, 1480, 1481, 4049, 2874,
	2484, 1043, 1899, 2480, 2473, 2475, 2476, 2534, 4033, 1482,
	2537, 2498, 2538, 2502, 3221, 2510, 1772, 3552, 3516, 1755,
	1482, 2898, 3514, 1755, 2648, 3552, 2554, 3477, 1755, 1482,
	3505, 3555, 3286, 1528, 2647, 2484, 2533, 2532, 3603, 1479,
	1482, 1480, 1481, 2536, 1478, 1482, 1144, 2898, 3194, 2558,
	3475, 1755, 97, 2559, 2560, 2555, 1482, 2540, 2436, 3471,
	1755, 1482, 2780, 1479, 2683, 1480, 1481, 2682, 3468, 1755,
	2540, 1482, 3466, 1755, 1479, 2523, 1480, 1481, 1479, 2405,
	1480, 1481, 1759, 1479, 95, 1480, 1481, 1771, 1756, 1758,
	1479, 678, 1480, 1481, 2627, 3604, 3605, 3606, 2366, 2565,
	3311, 3464, 1755, 1042, 1042, 1042, 1479, 2141, 1480, 1481,
	2079, 2063, 3462, 1755, 1052, 1479, 2006, 1480, 1481, 1790,
	1127, 3460, 1755, 1535, 1479, 1535, 1480, 1481, 1479, 1126,
	1480, 1481, 3458, 1755, 95, 1482, 2954, 3456, 1755, 678,
	4155, 2642, 1934, 1479, 4096, 1480, 1481, 2385, 2597, 3908,
	1482, 3935, 1217, 3454, 1755, 1762, 3901, 1479, 678, 1480,
	1481, 3761, 1482, 2342, 3621, 3619, 3616, 3597, 1479, 3418,
	1480, 1481, 2645, 1482, 3417, 1863, 2482, 1479, 3358, 1480,
	1481, 3313, 3309, 2988, 2479, 2474, 2468, 1482, 1479, 2466,
	1480, 1481, 2341, 1479, 1988, 1480, 1481, 1482, 1894, 1935,
	1936, 1937, 2614, 3936, 1479, 1890, 1480, 1481, 1528, 1479,
	1482, 1480, 1481, 1859, 123, 3607, 2497, 2620, 2953, 1479,
	1930, 1480, 1481, 3566, 3567, 2379, 1482, 3452, 1755, 2056,
	1482, 3572, 4211, 2628, 4209, 1528, 4183, 4057, 1528, 3976,
	1528, 678, 3450, 1755, 2655, 3569, 2634, 1717, 3305, 2631,
	2632, 2633, 3304, 3303, 3448, 1755, 3221, 2108, 1482, 2967,
	2598, 1961, 3243, 3571, 3240, 3446, 1755, 3244, 3608, 3609,
	3610, 1482, 2954, 1931, 1932, 1933, 678, 2606, 2607, 3444,
	1755, 4053, 2609, 1479, 3239, 1480, 1481, 3560, 3937, 3442,
	1755, 2610, 2015, 678, 3241, 1482, 2057, 2396, 1479, 3242,
	1480, 1481, 3440, 1755, 1482, 679, 1057, 1767, 2658, 678,
	1479, 1482, 1480, 1481, 3199, 3198, 678, 2636, 3438, 1755,
	1482, 1479, 2654, 1480, 1481, 2041, 2042, 678, 678, 678,
	678, 678, 678, 678, 3726, 1479, 3725, 1480, 1481, 1482,
	4015, 2824, 3739, 1482, 3741, 1479, 2005, 1480, 1481, 3548,
	3424, 1755, 1482, 2635, 2643, 2637, 1482, 1058, 1479, 1026,
	1480, 1481, 2694, 3943, 2640, 1482, 2641, 2812, 3245, 3208,
	2907, 2908, 3282, 2856, 1479, 2958, 1480, 1481, 1479, 742,
	1480, 1481, 3211, 3213, 2937, 2184, 3545, 3400, 1755, 3724,
	2590, 3214, 1042, 1482, 3544, 2589, 2845, 1755, 2138, 1060,
	2136, 2859, 2185, 2843, 1755, 2588, 1479, 1061, 1480, 1481,
	2587, 1069, 2818, 1755, 2586, 2895, 2896, 1482, 2585, 1479,
	2584, 1480, 1481, 1183, 2423, 1068, 2857, 1042, 2915, 1182,
	1482, 2795, 1755, 1745, 3378, 2787, 1755, 2860, 2953, 2862,
	3036, 103, 2894, 1479, 3574, 1480, 1481, 1753, 2778, 1755,
	1746, 104, 1479, 1482, 1480, 1481, 1446, 2776, 1755, 1479,
	3550, 1480, 1481, 2107, 1482, 2875, 2994, 131, 1479, 105,
	1480, 1481, 2104, 2102, 2103, 2383, 2384, 1752, 1750, 1751,
	1747, 4225, 1748, 3301, 1482, 2763, 1755, 1479, 2601, 1480,
	1481, 1479, 4132, 1480, 1481, 2407, 2408, 2884, 1723, 2847,
	1479, 3528, 1480, 1481, 1479, 1749, 1480, 1481, 2626, 2761,
	1755, 4034, 3931, 1479, 2913, 1480, 1481, 1716, 1482, 3281,
	42, 2867, 2759, 1755, 1482, 2911, 2940, 2942, 678, 2912,
	2391, 1482, 2914, 2062, 2933, 2887, 1482, 2061, 2872, 2917,
	110, 1479, 2992, 1480, 1481, 2757, 1755, 1482, 2903, 2906,
	2907, 2908, 2904, 1482, 2905, 2909, 2755, 1755, 2921, 4000,
	3999, 1482, 3979, 2924, 2489, 1479, 1482, 1480, 1481, 3747,
	1482, 2931, 2934, 103, 1482, 3745, 2753, 1755, 1479, 105,
	1480, 1481, 3197, 104, 3003, 3538, 3744, 2179, 1528, 111,
	3196, 2945, 2180, 1482, 2956, 3737, 112, 1482, 2686, 2959,
	2960, 1479, 3617, 1480, 1481, 3549, 1528, 111, 2955, 110,
	2751, 1755, 1479, 1482, 1480, 1481, 2749, 1755, 3547, 3314,
	2963, 2524, 2964, 2747, 1755, 2968, 2969, 2970, 2745, 1755,
	2242, 3000, 1479, 1877, 1480, 1481, 1482, 1882, 112, 2743,
	1755, 1067, 3736, 2890, 1482, 2741, 1755, 2989, 2990, 111,
	4213, 4212, 3046, 3047, 2949, 3710, 2871, 3100, 2739, 1755,
	2646, 1482, 2737, 1755, 2684, 2377, 1479, 2999, 1480, 1481,
	1482, 1784, 1479, 1776, 1480, 1481, 116, 117, 1482, 1479,
	4212, 1480, 1481, 1482, 1479, 3521, 1480, 1481, 1482, 2735,
	1755, 4213, 4021, 3583, 3, 1479, 3025, 1480, 1481, 99,
	3044, 1479, 3063, 1480, 1481, 2733, 1755, 1, 3028, 1479,
	2325, 1480, 1481, 1482, 1479, 1034, 1480, 1481, 1479, 1449,
	1480, 1481, 1479, 1448, 1480, 1481, 3081, 3082, 3083, 3084,
	3085, 3086, 3087, 3088, 3089, 3090, 2731, 1755, 1482, 112,
	2357, 1479, 2015, 1480, 1481, 1479, 3098, 1480, 1481, 3587,
	111, 3064, 110, 2729, 1755, 4144, 695, 2367, 1756, 2364,
	105, 1479, 3517, 1480, 1481, 2076, 1721, 4184, 10, 3001,
	2724, 1755, 4140, 4141, 2074, 2720, 1755, 9, 1482, 2075,
	2718, 1755, 8, 1482, 1479, 1974, 1480, 1481, 1961, 112,
	1964, 3649, 1479, 2293, 1480, 1481, 3932, 3317, 1482, 2389,
	111, 3102, 110, 1482, 1073, 2711, 1755, 2530, 1717, 1479,
	105, 1480, 1481, 1482, 3158, 3615, 3034, 2487, 1479, 3035,
	1480, 1481, 1135, 1052, 156, 1755, 1479, 2445, 1480, 1481,
	3483, 1479, 1482, 1480, 1481, 2446, 1479, 4109, 1480, 1481,
	678, 120, 1093, 119, 3045, 1138, 1246, 2015, 678, 2525,
	678, 3639, 678, 2432, 3176, 2236, 2938, 3165, 2454, 1809,
	1807, 1479, 3167, 1480, 1481, 2979, 1808, 1806, 1811, 1810,
	2709, 1755, 2423, 4081, 3386, 3479, 2330, 2685, 2330, 3484,
	1482, 3138, 2067, 732, 3048, 2910, 1479, 726, 1480, 1481,
	3415, 194, 3065, 1482, 3228, 3414, 87, 1798, 1482, 2423,
	2423, 2423, 2423, 2423, 1777, 3406, 2501, 2060, 2328, 1177,
	2328, 3148, 3149, 3150, 3151, 3152, 685, 3176, 3290, 2423,
	2563, 691, 2423, 3166, 3404, 3168, 1479, 3233, 1480, 1481,
	3250, 1479, 1532, 1480, 1481, 2319, 2320, 2321, 2322, 2323,
	2055, 3175, 3195, 2016, 2925, 1087, 1479, 1079, 1480, 1481,
	3187, 1479, 2344, 1480, 1481, 2347, 2348, 2378, 3188, 3190,
	3192, 1479, 3203, 1480, 1481, 2861, 3202, 3200, 1086, 3909,
	3229, 3542, 2841, 3207, 3209, 3215, 3216, 2425, 3193, 2877,
	1479, 3212, 1480, 1481, 3205, 2840, 3334, 4014, 3738, 1046,
	2836, 1482, 2365, 4094, 3235, 3236, 3342, 3238, 106, 3246,
	3234, 1045, 1482, 3237, 2425, 2425, 2425, 2425, 2425, 3252,
	107, 1047, 3253, 2935, 1482, 3254, 1773, 3504, 3232, 3091,
	3260, 1482, 2657, 2174, 2425, 1522, 2422, 2425, 1479, 1482,
	1480, 1481, 3291, 3293, 3201, 3292, 3705, 2094, 755, 754,
	752, 1479, 2863, 1480, 1481, 2891, 1479, 1486, 1480, 1481,
	1485, 963, 678, 1482, 2851, 1785, 2902, 3294, 3295, 678,
	2900, 2899, 2599, 2430, 2489, 3315, 3336, 1482, 3343, 3347,
	678, 678, 3568, 3218, 678, 3353, 2602, 3564, 2903, 2906,
	2907, 2908, 2904, 2835, 2905, 2909, 678, 3346, 3566, 3567,
	4136, 2424, 3373, 678, 2834, 2420, 3371, 2870, 3374, 1482,
	914, 913, 764, 756, 3381, 3224, 2833, 746, 976, 912,
	3224, 911, 3344, 2832, 3345, 3009, 3359, 3388, 3389, 678,
	3390, 2831, 3011, 3392, 2936, 3394, 2613, 3396, 3355, 3391,
	1463, 1740, 3407, 3408, 3409, 3410, 3411, 1743, 2386, 1479,
	1106, 1480, 1481, 3383, 4040, 2822, 2625, 3412, 1739, 4047,
	1479, 3325, 1480, 1481, 3633, 3306, 2985, 2517, 69, 2821,
	46, 4009, 1479, 4078, 1480, 1481, 906, 903, 3707, 1479,
	1535, 1480, 1481, 3708, 1535, 3709, 3161, 1479, 3162, 1480,
	1481, 4060, 4061, 902, 2644, 4062, 2231, 1459, 2649, 1456,
	3529, 2820, 3531, 4157, 2069, 98, 3316, 36, 35, 34,
	33, 1479, 3499, 1480, 1481, 1528, 32, 2015, 26, 3503,
	25, 2652, 24, 2653, 23, 1479, 22, 1480, 1481, 2661,
	29, 19, 21, 2663, 2664, 20, 18, 3328, 4179, 4224,
	125, 55, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 52, 2681, 1482, 50, 3227, 1479, 3382, 1480,
	1481, 133, 2423, 132, 3534, 53, 3530, 49, 3532, 1220,
	47, 96, 31, 30, 17, 3581, 2687, 2688, 2689, 2690,
	3546, 2692, 2693, 16, 2695, 3539, 15, 14, 2697, 13,
	3551, 12, 2702, 2703, 11, 2704, 3376, 3377, 2707, 2708,
	2710, 2712, 2713, 2714, 2715, 2716, 2717, 2719, 2721, 2722,
	2723, 2725, 3570, 2727, 2728, 2730, 2732, 2734, 2736, 2738,
	2740, 2742, 2744, 2746, 2748, 2750, 2752, 2754, 2756, 2758,
	2760, 2762, 2764, 2765, 2766, 3573, 2768, 3582, 2770, 3337,
	2772, 2773, 3575, 2775, 2777, 2779, 2819, 3343, 3347, 2782,
	7, 6, 3576, 2786, 39, 38, 37, 2791, 2792, 2793,
	2794, 3598, 1482, 3600, 28, 27, 3346, 2425, 3643, 3644,
	2805, 2806, 2807, 2808, 2809, 2810, 3536, 40, 2814, 2815,
	4, 2972, 2519, 0, 0, 1482, 2817, 0, 3592, 3593,
	0, 2823, 0, 0, 1482, 0, 2826, 2827, 2828, 2829,
	2830, 1482, 1479, 0, 1480, 1481, 0, 2837, 2838, 3563,
	2839, 1482, 0, 2842, 2844, 2389, 0, 2846, 0, 0,
	0, 3506, 1482, 3508, 3509, 3510, 0, 2858, 3577, 3578,
	1482, 0, 0, 0, 0, 1482, 0, 0, 0, 0,
	678, 3626, 3645, 0, 0, 3630, 3631, 3632, 1961, 0,
	0, 0, 0, 0, 2816, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 2665, 3661, 0, 0,
	0, 1482, 0, 0, 1745, 1482, 0, 2811, 0, 0,
	0, 0, 0, 2680, 1482, 3672, 2804, 0, 1753, 0,
	0, 1746, 0, 2803, 0, 0, 0, 678, 0, 0,
	0, 1482, 678, 2802, 0, 1482, 0, 0, 0, 1482,
	1479, 0, 1480, 1481, 2801, 0, 1741, 1742, 1752, 1750,
	1751, 1747, 2800, 1748, 0, 0, 0, 2799, 3713, 0,
	3714, 3715, 3716, 1479, 0, 1480, 1481, 0, 3723, 0,
	0, 3730, 1479, 3732, 1480, 1481, 1749, 1482, 0, 1479,
	3703, 1480, 1481, 0, 0, 2798, 0, 3733, 0, 1479,
	0, 1480, 1481, 2797, 0, 0, 3228, 2796, 0, 87,
	1479, 3228, 1480, 1481, 0, 1482, 2790, 678, 1479, 0,
	1480, 1481, 0, 1479, 2971, 1480, 1481, 0, 0, 0,
	0, 0, 0, 2789, 0, 0, 3755, 2788, 1482, 0,
	3734, 2785, 0, 0, 0, 2138, 3666, 2136, 3763, 3743,
	3742, 1479, 0, 1480, 1481, 3750, 3752, 0, 3753, 1479,
	1482, 1480, 1481, 1479, 0, 1480, 1481, 0, 0, 0,
	1528, 0, 1479, 0, 1480, 1481, 3915, 0, 0, 2784,
	0, 3767, 0, 678, 678, 678, 678, 678, 678, 1479,
	0, 1480, 1481, 1479, 0, 1480, 1481, 1479, 0, 1480,
	1481, 0, 0, 0, 3622, 3623, 0, 2783, 0, 0,
	0, 678, 678, 3907, 42, 0, 3906, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3934, 0, 0,
	2781, 0, 3927, 3926, 3922, 1479, 678, 1480, 1481, 3905,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3973,
	3974, 0, 2774, 0, 0, 0, 0, 3076, 3077, 3078,
	3079, 3080, 3757, 1479, 0, 1480, 1481, 3731, 0, 0,
	0, 0, 0, 2138, 0, 2136, 3977, 3095, 0, 0,
	0, 3917, 3918, 3919, 0, 0, 1479, 0, 1480, 1481,
	0, 3764, 3765, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3980, 0, 4022, 3228, 3983, 0, 1479, 0,
	1480, 1481, 0, 0, 0, 3224, 0, 0, 0, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1673, 1674, 1675, 1676, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	744, 4007, 3759, 4006, 1482, 0, 4023, 0, 3227, 3997,
	0, 0, 0, 3227, 4041, 1482, 4003, 0, 4005, 0,
	0, 0, 0, 0, 3066, 0, 0, 0, 0, 0,
	0, 0, 87, 1073, 0, 678, 0, 3230, 0, 0,
	0, 0, 0, 4026, 0, 0, 0, 1482, 0, 0,
	0, 0, 4025, 0, 0, 3248, 1528, 0, 0, 4048,
	3910, 1528, 678, 678, 678, 678, 678, 4046, 0, 4043,
	0, 0, 1482, 0, 3247, 0, 0, 0, 3914, 0,
	1961, 0, 678, 0, 0, 678, 3255, 2015, 0, 0,
	0, 0, 0, 0, 0, 0, 2771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2769, 0, 0,
	0, 1066, 0, 0, 1072, 1072, 0, 0, 0, 0,
	0, 0, 4066, 0, 0, 4067, 0, 0, 0, 0,
	4091, 678, 0, 0, 0, 87, 0, 42, 0, 2767,
	0, 0, 0, 4076, 3978, 0, 0, 1528, 0, 0,
	0, 4085, 1479, 0, 1480, 1481, 3140, 678, 3142, 0,
	0, 0, 4095, 1479, 2726, 1480, 1481, 4108, 0, 4097,
	0, 678, 4122, 0, 3153, 3154, 3155, 3156, 3934, 4111,
	0, 4100, 4105, 3380, 4102, 4101, 4099, 4104, 4103, 0,
	0, 678, 4130, 0, 678, 1479, 0, 1480, 1481, 0,
	0, 0, 4027, 4030, 4135, 3397, 3398, 3227, 3399, 3401,
	3403, 0, 4153, 0, 0, 0, 0, 0, 0, 4143,
	1479, 4148, 1480, 1481, 0, 0, 0, 4161, 4163, 4122,
	0, 0, 0, 4174, 0, 0, 3416, 0, 0, 0,
	42, 3419, 0, 3421, 3422, 3423, 3425, 3426, 3427, 3428,
	3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3439,
	3441, 3443, 3445, 3447, 3449, 3451, 3453, 3455, 3457, 3459,
	3461, 3463, 3465, 3467, 3469, 3470, 3472, 3473, 3474, 3476,
	2016, 4197, 3478, 4194, 3480, 3481, 3482, 4204, 4208, 3486,
	3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496,
	2138, 4210, 2136, 4207, 4206, 4218, 4122, 4203, 3502, 4193,
	4178, 4173, 3507, 4226, 4092, 192, 3511, 3512, 4087, 3513,
	3515, 0, 3518, 3520, 4234, 3522, 3523, 3524, 3525, 4232,
	0, 0, 0, 0, 3224, 3533, 0, 0, 131, 0,
	153, 0, 4032, 4243, 4244, 3974, 4242, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 2138, 678,
	2136, 4241, 0, 0, 0, 0, 4039, 0, 0, 0,
	3557, 3558, 0, 0, 3562, 0, 4051, 0, 0, 1482,
	0, 0, 0, 1482, 0, 0, 0, 1024, 164, 0,
	2332, 0, 0, 1025, 152, 0, 0, 0, 0, 0,
	0, 0, 0, 2137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 678, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	141, 163, 162, 191, 678, 0, 0, 1482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 1482, 0, 4086, 678, 4169, 1482, 678, 678, 678,
	0, 2706, 1482, 0, 0, 2705, 0, 1482, 0, 0,
	3637, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 0, 0, 3656, 0, 1479, 3660, 1480,
	1481, 1479, 0, 1480, 1481, 0, 0, 0, 0, 2701,
	0, 0, 0, 0, 157, 138, 160, 145, 137, 2699,
	158, 159, 0, 2691, 0, 0, 0, 175, 2662, 0,
	0, 0, 3673, 0, 2656, 0, 181, 146, 0, 2651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 147, 142, 143, 144, 148, 0, 0, 0,
	0, 0, 0, 139, 0, 1479, 4191, 1480, 1481, 0,
	0, 1717, 150, 0, 0, 1479, 0, 1480, 1481, 1479,
	0, 1480, 1481, 0, 1479, 0, 1480, 1481, 0, 0,
	1479, 0, 1480, 1481, 0, 1479, 3696, 1480, 1481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3704,
	0, 0, 0, 0, 0, 0, 3711, 0, 0, 0,
	0, 0, 86, 44, 45, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 0, 0, 0, 48, 76, 77, 0, 74,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 0, 166, 0, 0, 1961, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 0, 0,
	1961, 0, 0, 62, 915, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3923, 0, 1541, 0, 0,
	0, 0, 0, 0, 3930, 83, 0, 0, 0, 0,
	161, 0, 734, 0, 0, 0, 1961, 0, 0, 0,
	0, 0, 0, 0, 3940, 3941, 3942, 0, 3944, 0,
	3945, 3946, 0, 0, 0, 0, 3949, 3950, 3951, 3952,
	3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962,
	3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 0, 3972,
	3975, 0, 0, 0, 0, 0, 1097, 0, 1104, 0,
	0, 0, 3694, 0, 0, 3984, 3985, 3986, 3987, 3988,
	3990, 3991, 3993, 3995, 3996, 3998, 0, 0, 0, 4002,
	0, 0, 0, 4004, 0, 0, 0, 0, 0, 51,
	54, 57, 56, 59, 0, 73, 0, 0, 82, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 155, 0, 0, 0, 0, 0, 4031, 0,
	0, 0, 61, 91, 90, 0, 0, 71, 72, 58,
	0, 0, 0, 0, 0, 80, 81, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 63, 64,
	0, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 173, 170, 176, 177, 178,
	180, 182, 183, 184, 185, 60, 0, 0, 0, 0,
	186, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	678, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	4013, 0, 0, 0, 0, 4056, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 89, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4071,
	0, 0, 0, 0, 0, 4074, 0, 4075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 197, 0, 1528, 0, 730, 0, 0,
	0, 0, 736, 0, 0, 0, 4116, 4117, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	4124, 4126, 4128, 0, 4110, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 4134, 0,
	0, 0, 0, 0, 2021, 94, 0, 0, 0, 0,
	4156, 0, 0, 0, 0, 0, 736, 197, 736, 0,
	0, 0, 0, 0, 1961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1024, 0, 0, 0, 0, 0, 1025, 4175, 0,
	0, 0, 0, 0, 0, 0, 0, 2137, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4198, 4200, 4202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 70, 0, 4055, 4223, 0, 0, 0, 0,
	0, 0, 4065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4235, 4236, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 0,
	1285, 1285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2089,
	2090, 2091, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2144, 2145, 0, 0, 0, 0, 2168, 0, 0, 2172,
	2173, 0, 0, 0, 2178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 0,
	2201, 0, 0, 0, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2232, 0, 2237, 0, 2239, 2240, 2241, 0,
	2243, 2244, 2245, 0, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 0, 0, 0, 0, 0, 2324, 0,
	2326, 0, 2333, 2334, 2335, 2336, 2337, 2338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4177, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 1827,
	2358, 2359, 2360, 2361, 2362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2403, 2404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 2442, 197,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 736, 0,
	736, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 1097, 0, 1893, 0,
	2485, 0, 736, 197, 0, 0, 1902, 0, 0, 0,
	1904, 0, 0, 1907, 1908, 1910, 1910, 0, 1910, 0,
	1910, 1910, 0, 1919, 1910, 1910, 1910, 1910, 1910, 0,
	0, 1527, 0, 0, 0, 0, 0, 1939, 1940, 0,
	1097, 0, 0, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 0,
	0, 2013, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1844, 1845, 1846, 1847, 1848,
	1849, 0, 1850, 1851, 1853, 1854, 1852, 1855, 1856, 1829,
	1830, 1831, 1832, 1812, 1813, 1842, 0, 1815, 0, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 0, 0,
	1825, 1833, 1834, 1835, 1836, 0, 1837, 1838, 1839, 1840,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1527, 0, 0, 0, 0, 0,
	0, 0, 0, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 677, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1029, 0, 0,
	0, 0, 197, 0, 0, 0, 736, 736, 0, 0,
	0, 0, 0, 0, 0, 1285, 1285, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 2660, 0, 0,
	2070, 0, 0, 0, 0, 0, 0, 2666, 2667, 2668,
	2669, 1101, 0, 0, 0, 0, 0, 736, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 1541, 736, 0, 0, 0, 0, 0, 2132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 1843, 736, 1814,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 1527,
	736, 0, 0, 736, 736, 736, 736, 0, 736, 0,
	736, 736, 0, 736, 736, 736, 736, 736, 736, 0,
	0, 0, 0, 0, 0, 0, 1527, 736, 736, 1527,
	736, 1527, 197, 736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 197, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 736, 0,
	0, 736, 0, 197, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 736, 0, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 1775, 0, 1841, 1844,
	1845, 1846, 1847, 1848, 1849, 0, 1850, 1851, 1853, 1854,
	1852, 1855, 1856, 1829, 1830, 1831, 1832, 1812, 1813, 1842,
	0, 1815, 0, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 0, 0, 1825, 1833, 1834, 1835, 1836, 0,
	1837, 1838, 1839, 1840, 2380, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 1104, 0, 0, 197,
	0, 0, 0, 2507, 2508, 2509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 1104,
	1902, 0, 0, 1902, 0, 1902, 0, 0, 3041, 0,
	0, 2539, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1527,
	0, 0, 0, 0, 0, 3067, 3068, 3069, 0, 0,
	3071, 1843, 0, 3073, 0, 0, 1097, 1527, 0, 0,
	0, 2132, 0, 0, 0, 2132, 2132, 0, 0, 0,
	0, 0, 0, 3092, 3093, 3094, 0, 0, 0, 0,
	0, 0, 3099, 0, 0, 0, 0, 3101, 0, 0,
	3103, 3104, 3105, 0, 0, 0, 3106, 3107, 0, 0,
	3108, 0, 3109, 0, 0, 0, 0, 0, 0, 3110,
	0, 3111, 0, 0, 0, 3112, 0, 3113, 0, 0,
	3114, 0, 3115, 0, 3116, 0, 3117, 0, 3118, 0,
	3119, 0, 3120, 1221, 3121, 1227, 3122, 0, 3123, 0,
	3124, 0, 3125, 0, 3126, 0, 3127, 0, 3128, 0,
	3129, 0, 3130, 0, 3131, 0, 0, 0, 3132, 0,
	3133, 0, 3134, 0, 0, 3135, 0, 3136, 0, 3137,
	0, 2296, 3139, 0, 0, 3141, 0, 0, 3143, 3144,
	3145, 3146, 2616, 0, 0, 0, 3147, 2296, 2296, 2296,
	2296, 2296, 0, 2343, 0, 0, 0, 1455, 0, 0,
	0, 0, 3157, 0, 0, 0, 0, 0, 0, 0,
	3170, 0, 0, 3174, 0, 0, 0, 0, 0, 0,
	0, 0, 3177, 3178, 3179, 3180, 3181, 3182, 0, 0,
	0, 3183, 3184, 0, 3185, 0, 3186, 0, 0, 197,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 0,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 736, 0, 0,
	0, 3219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 736, 0, 0, 2343, 197,
	0, 197, 0, 197, 197, 0, 3249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2978, 0, 0, 0, 0, 0, 3312, 0, 0,
	0, 0, 0, 131, 0, 153, 736, 0, 0, 0,
	0, 0, 0, 736, 736, 736, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 736,
	736, 0, 0, 736, 0, 736, 0, 0, 0, 0,
	0, 736, 0, 164, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 958, 172, 0, 0, 0, 736, 0, 0, 0,
	0, 736, 0, 3405, 0, 736, 736, 0, 0, 0,
	0, 0, 0, 0, 1885, 1886, 163, 162, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3420, 0, 0, 0, 0, 0, 0, 0, 0,
	2864, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 713, 2879, 0, 0, 0, 0, 735,
	0, 197, 197, 0, 0, 197, 0, 197, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 735, 0, 735, 0, 197, 0, 157,
	1887, 160, 736, 1884, 0, 158, 159, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2961, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1944, 0, 0, 2393,
	0, 0, 192, 0, 0, 0, 2986, 0, 0, 0,
	1902, 1902, 0, 1881, 0, 2991, 1527, 0, 2343, 0,
	0, 0, 0, 0, 0, 131, 0, 153, 0, 0,
	0, 1989, 3002, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3618, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 152, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 166,
	0, 0, 0, 3642, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2132, 0, 0, 1885, 1886, 163, 162,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3662, 0, 3663, 0, 3664, 0, 3665, 0, 0,
	0, 0, 0, 0, 0, 3668, 3669, 0, 0, 0,
	0, 0, 0, 2132, 0, 3674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 3675,
	0, 3676, 0, 3677, 0, 3678, 0, 3679, 0, 3680,
	0, 3681, 0, 3682, 0, 3683, 0, 3684, 0, 3685,
	0, 3686, 0, 3687, 0, 3688, 0, 3689, 0, 3690,
	0, 0, 3691, 0, 0, 0, 3692, 0, 3693, 0,
	0, 157, 1887, 160, 3695, 1884, 0, 158, 159, 0,
	0, 197, 0, 0, 175, 0, 0, 0, 0, 197,
	0, 0, 0, 181, 0, 0, 3712, 0, 0, 0,
	736, 0, 0, 0, 0, 3717, 0, 3718, 3719, 0,
	3720, 0, 3721, 0, 736, 0, 0, 3722, 0, 0,
	0, 0, 0, 2082, 0, 0, 0, 0, 3159, 0,
	0, 0, 0, 0, 154, 0, 0, 155, 197, 0,
	1285, 0, 0, 197, 3751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3760, 0, 0,
	3762, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 1910, 3766, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3902, 3204,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 0, 0, 0, 0,
	3231, 1910, 736, 0, 0, 0, 187, 0, 197, 0,
	0, 166, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	736, 736, 0, 0, 0, 736, 0, 0, 0, 168,
	173, 170, 176, 177, 178, 180, 182, 183, 184, 185,
	0, 1527, 736, 0, 0, 186, 188, 189, 190, 0,
	0, 0, 0, 0, 197, 197, 197, 197, 197, 197,
	0, 0, 0, 0, 0, 1097, 0, 0, 0, 0,
	0, 0, 0, 2393, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 197, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 735, 1440, 735, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 1526, 0,
	0, 0, 0, 0, 0, 0, 154, 0, 0, 155,
	0, 0, 0, 0, 0, 2409, 0, 0, 0, 0,
	0, 0, 0, 2413, 0, 2416, 0, 0, 2082, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 0, 0, 0, 4054, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 173, 170, 176, 177, 178, 180, 182, 183,
	184, 185, 0, 0, 0, 0, 0, 186, 188, 189,
	190, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	4068, 0, 0, 4069, 0, 4070, 197, 0, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 1527, 0, 0,
	736, 736, 1527, 197, 197, 197, 197, 197, 0, 0,
	0, 1526, 0, 0, 0, 197, 0, 0, 2393, 2393,
	0, 197, 0, 197, 0, 0, 197, 197, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 2082, 0, 0,
	0, 0, 0, 0, 2575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2595, 2596, 0, 0, 2600,
	0, 0, 0, 0, 0, 0, 0, 3650, 3651, 3652,
	3653, 2605, 197, 735, 735, 0, 0, 4154, 2608, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 1527, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 2611, 0, 4170, 0, 4171, 0,
	4172, 0, 197, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 197, 0, 0, 197, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 735, 0, 0, 0, 0,
	4221, 0, 4222, 735, 0, 0, 1526, 735, 0, 0,
	735, 735, 735, 735, 0, 735, 0, 735, 735, 0,
	735, 735, 735, 735, 735, 735, 0, 0, 0, 0,
	0, 0, 0, 1526, 735, 735, 1526, 735, 1526, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3728, 0, 3728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 3756, 735, 3758, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3925, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1285, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 197, 197,
	197, 0, 0, 95, 0, 0, 1024, 0, 736, 736,
	0, 964, 1025, 977, 978, 979, 965, 0, 3728, 966,
	967, 0, 968, 0, 0, 3728, 0, 3728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 973, 0,
	980, 981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2393, 736, 736, 736,
	736, 0, 0, 0, 0, 0, 0, 2916, 0, 0,
	0, 0, 735, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 3348, 3349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 2965, 0, 0, 0, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1526, 0, 0, 0,
	0, 0, 0, 0, 0, 2146, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	0, 0, 0, 3350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3014, 3015,
	3016, 3017, 3018, 3019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 736, 0, 197, 0,
	2393, 0, 0, 0, 0, 0, 2082, 3029, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 197, 0, 0, 736, 0, 736, 0, 0, 0,
	0, 3037, 0, 3351, 3352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4080, 0, 0, 0,
	735, 0, 0, 0, 736, 0, 0, 2393, 0, 4088,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 1285, 1285, 0, 0, 929, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 930, 931,
	0, 735, 0, 932, 934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4138, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 735, 0, 0, 736, 0,
	0, 0, 0, 0, 0, 736, 4080, 736, 0, 0,
	0, 0, 0, 0, 0, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2393, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 4138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	735, 735, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 735, 735, 0, 0,
	735, 0, 735, 0, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 735, 0,
	0, 0, 735, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3302, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 197, 3340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3372, 0, 0, 3375,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 735,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1527, 736, 0, 736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 2343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 0, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 3535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3611,
	0, 0, 3612, 3613, 3614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3788,
	3790, 3789, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3791,
	3792, 806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 735, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 735, 735, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1526, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3804, 3805, 0, 0,
	3880, 3879, 3878, 0, 0, 3876, 3877, 3875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 3881, 929, 0, 782, 783, 3882, 3883, 933, 3884,
	785, 786, 930, 931, 0, 780, 784, 932, 934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 3785, 3786, 3787, 3793, 3794, 3795,
	3806, 3853, 3854, 3862, 3864, 885, 3863, 3865, 3866, 3867,
	3870, 3871, 3872, 3873, 3868, 3869, 3874, 3768, 3772, 3769,
	3770, 3771, 3783, 3773, 3774, 3775, 3776, 3777, 3778, 3779,
	3780, 3781, 3782, 3784, 3885, 3886, 3887, 3888, 3889, 3890,
	3799, 3803, 3802, 3800, 3801, 3797, 3798, 3825, 3824, 3826,
	3827, 3828, 3829, 3830, 3831, 3833, 3832, 3834, 3835, 3836,
	3837, 3838, 3839, 3807, 3808, 3811, 3812, 3810, 3809, 3813,
	3822, 3823, 3814, 3815, 3816, 3817, 3818, 3819, 3821, 3820,
	3840, 3841, 3842, 3843, 3844, 3846, 3845, 3849, 3850, 3848,
	3847, 3852, 3851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 935, 0, 936, 0,
	0, 940, 0, 0, 0, 942, 941, 735, 943, 905,
	904, 0, 0, 937, 938, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 1526, 0, 0, 735, 735, 1526,
	0, 3891, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 1526, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 735, 735, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1526, 0, 0, 0, 0, 0,
	0, 735, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 735, 0, 0, 0, 0,
	0, 0, 735, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 735, 0, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 0, 0, 0, 735, 0, 735, 1423,
	1407, 530, 0, 1349, 1426, 1317, 1336, 1436, 1339, 1342,
	1386, 1295, 1364, 418, 1333, 1321, 1290, 1328, 1291, 1319,
	1351, 272, 1316, 1409, 1368, 1425, 368, 269, 1297, 1288,
	206, 507, 1322, 432, 1338, 205, 1388, 489, 254, 379,
	376, 585, 284, 275, 271, 252, 319, 387, 430, 520,
	424, 1432, 372, 1374, 0, 499, 403, 0, 0, 0,
	1413, 1412, 1343, 1353, 1415, 1362, 1400, 1348, 1387, 1305,
	1373, 1427, 1334, 1383, 1428, 325, 250, 327, 204, 415,
	500, 288, 0, 0, 0, 0, 4112, 509, 960, 0,
	0, 0, 0, 4113, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 353, 362, 361, 341, 342,
	344, 346, 352, 359, 365, 338, 347, 1330, 1380, 610,
	1422, 1331, 1382, 267, 323, 274, 266, 582, 1433, 1414,
	1294, 1361, 1421, 1356, 0, 0, 231, 1424, 1355, 0,
	1385, 0, 1439, 1289, 1376, 0, 1292, 1296, 1435, 1419,
	1325, 277, 0, 0, 0, 0, 0, 0, 0, 1352,
	1363, 1397, 1401, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 1372, 0, 0, 0, 1301, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 1304, 0, 1324,
	1398, 0, 1287, 299, 1298, 404, 259, 0, 455, 1405,
	1418, 1347, 630, 1420, 1345, 1344, 1392, 1302, 1411, 1337,
	367, 1300, 332, 199, 227, 0, 1335, 414, 463, 475,
	1410, 1320, 1329, 255, 1327, 473, 428, 605, 235, 286,
	460, 434, 471, 442, 289, 1371, 1390, 472, 374, 587,
	452, 602, 631, 632, 265, 408, 616, 524, 624, 649,
	228, 262, 422, 508, 608, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 637, 226, 481, 373, 244, 233,
	589, 613, 301, 291, 458, 644, 215, 519, 599, 241,
	485, 0, 0, 652, 249, 506, 611, 600, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 653, 230, 623, 222,
	1299, 622, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 609, 627, 0, 210, 0,
	501, 612, 654, 454, 214, 236, 237, 239, 1315, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 1406, 581, 603, 617, 629, 635, 636, 638, 639,
	640, 641, 642, 645, 643, 409, 313, 497, 335, 375,
	1395, 1438, 427, 474, 242, 607, 498, 201, 1309, 1314,
	1307, 0, 256, 257, 1377, 577, 1310, 1308, 1366, 1367,
	1311, 1429, 1430, 1431, 1416, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 650, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 1399, 1303, 0, 1312, 1313, 400, 1408,
	593, 594, 673, 386, 488, 604, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 620, 621, 625, 207,
	464, 465, 466, 467, 294, 615, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 1370,
	198, 223, 370, 1434, 456, 290, 651, 619, 486, 614,
	208, 225, 1306, 264, 1318, 1326, 0, 1332, 1340, 1341,
	1354, 1357, 1358, 1359, 1360, 1378, 1379, 1381, 1389, 1391,
	1394, 1396, 1403, 1417, 1437, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 606, 626, 633, 482, 303, 304, 446,
	447, 316, 317, 647, 648, 302, 601, 634, 598, 646,
	628, 440, 380, 1369, 1375, 383, 283, 307, 322, 1384,
	618, 504, 229, 468, 292, 253, 1402, 1404, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 1365, 1393, 378, 578, 579, 318, 398, 0,
	0, 0, 0, 0, 0, 1423, 1407, 530, 0, 1349,
	1426, 1317, 1336, 1436, 1339, 1342, 1386, 1295, 1364, 418,
	1333, 1321, 1290, 1328, 1291, 1319, 1351, 272, 1316, 1409,
	1368, 1425, 368, 269, 1297, 1288, 206, 507, 1322, 432,
	1338, 205, 1388, 489, 254, 379, 376, 585, 284, 275,
	271, 252, 319, 387, 430, 520, 424, 1432, 372, 1374,
	0, 499, 403, 0, 0, 0, 1413, 1412, 1343, 1353,
	1415, 1362, 1400, 1348, 1387, 1305, 1373, 1427, 1334, 1383,
	1428, 325, 250, 327, 204, 415, 500, 288, 0, 0,
	0, 0, 0, 509, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 353, 362, 361, 341, 342, 344, 346, 352, 359,
	365, 338, 347, 1330, 1380, 610, 1422, 1331, 1382, 267,
	323, 274, 266, 582, 1433, 1414, 1294, 1361, 1421, 1356,
	0, 0, 231, 1424, 1355, 0, 1385, 0, 1439, 1289,
	1376, 0, 1292, 1296, 1435, 1419, 1325, 277, 0, 0,
	0, 0, 0, 0, 0, 1352, 1363, 1397, 1401, 1346,
	0, 0, 0, 0, 0, 0, 3256, 0, 1323, 0,
	1372, 0, 0, 0, 1301, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 1304, 0, 1324, 1398, 0, 1287, 299,
	1298, 404, 259, 0, 455, 1405, 1418, 1347, 630, 1420,
	1345, 1344, 1392, 1302, 1411, 1337, 367, 1300, 332, 199,
	227, 0, 1335, 414, 463, 475, 1410, 1320, 1329, 255,
	1327, 473, 428, 605, 235, 286, 460, 434, 471, 442,
	289, 1371, 1390, 472, 374, 587, 452, 602, 631, 632,
	265, 408, 616, 524, 624, 649, 228, 262, 422, 508,
	608, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	637, 226, 481, 373, 244, 233, 589, 613, 301, 291,
	458, 644, 215, 519, 599, 241, 485, 0, 0, 652,
	249, 506, 611, 600, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 653, 230, 623, 222, 1299, 622, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 609, 627, 0, 210, 0, 501, 612, 654, 454,
	214, 236, 237, 239, 1315, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 1406, 581, 603,
	617, 629, 635, 636, 638, 639, 640, 641, 642, 645,
	643, 409, 313, 497, 335, 375, 1395, 1438, 427, 474,
	242, 607, 498, 201, 1309, 1314, 1307, 0, 256, 257,
	1377, 577, 1310, 1308, 1366, 1367, 1311, 1429, 1430, 1431,
	1416, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 650,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 1399,
	1303, 0, 1312, 1313, 400, 1408, 593, 594, 673, 386,
	488, 604, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 620, 621, 625, 207, 464, 465, 466, 467,
	294, 615, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 1370, 198, 223, 370, 1434,
	456, 290, 651, 619, 486, 614, 208, 225, 1306, 264,
	1318, 1326, 0, 1332, 1340, 1341, 1354, 1357, 1358, 1359,
	1360, 1378, 1379, 1381, 1389, 1391, 1394, 1396, 1403, 1417,
	1437, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 606,
	626, 633, 482, 303, 304, 446, 447, 316, 317, 647,
	648, 302, 601, 634, 598, 646, 628, 440, 380, 1369,
	1375, 383, 283, 307, 322, 1384, 618, 504, 229, 468,
	292, 253, 1402, 1404, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 1365, 1393,
	378, 578, 579, 318, 398, 0, 0, 0, 0, 0,
	0, 1423, 1407, 530, 0, 1349, 1426, 1317, 1336, 1436,
	1339, 1342, 1386, 1295, 1364, 418, 1333, 1321, 1290, 1328,
	1291, 1319, 1351, 272, 1316, 1409, 1368, 1425, 368, 269,
	1297, 1288, 206, 507, 1322, 432, 1338, 205, 1388, 489,
	254, 379, 376, 585, 284, 275, 271, 252, 319, 387,
	430, 520, 424, 1432, 372, 1374, 0, 499, 403, 0,
	0, 0, 1413, 1412, 1343, 1353, 1415, 1362, 1400, 1348,
	1387, 1305, 1373, 1427, 1334, 1383, 1428, 325, 250, 327,
	204, 415, 500, 288, 0, 0, 0, 0, 0, 509,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 353, 362, 361,
	341, 342, 344, 346, 352, 359, 365, 338, 347, 1330,
	1380, 610, 1422, 1331, 1382, 267, 323, 274, 266, 582,
	1433, 1414, 1294, 1361, 1421, 1356, 0, 0, 231, 1424,
	1355, 0, 1385, 0, 1439, 1289, 1376, 0, 1292, 1296,
	1435, 1419, 1325, 277, 0, 0, 0, 0, 0, 0,
	0, 1352, 1363, 1397, 1401, 1346, 0, 0, 0, 0,
	0, 0, 3217, 0, 1323, 0, 1372, 0, 0, 0,
	1301, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 1304,
	0, 1324, 1398, 0, 1287, 299, 1298, 404, 259, 0,
	455, 1405, 1418, 1347, 630, 1420, 1345, 1344, 1392, 1302,
	1411, 1337, 367, 1300, 332, 199, 227, 0, 1335, 414,
	463, 475, 1410, 1320, 1329, 255, 1327, 473, 428, 605,
	235, 286, 460, 434, 471, 442, 289, 1371, 1390, 472,
	374, 587, 452, 602, 631, 632, 265, 408, 616, 524,
	624, 649, 228, 262, 422, 508, 608, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 637, 226, 481, 373,
	244, 233, 589, 613, 301, 291, 458, 644, 215, 519,
	599, 241, 485, 0, 0, 652, 249, 506, 611, 600,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 653, 230,
	623, 222, 1299, 622, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 609, 627, 0,
	210, 0, 501, 612, 654, 454, 214, 236, 237, 239,
	1315, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 1406, 581, 603, 617, 629, 635, 636,
	638, 639, 640, 641, 642, 645, 643, 409, 313, 497,
	335, 375, 1395, 1438, 427, 474, 242, 607, 498, 201,
	1309, 1314, 1307, 0, 256, 257, 1377, 577, 1310, 1308,
	1366, 1367, 1311, 1429, 1430, 1431, 1416, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 650, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 1399, 1303, 0, 1312, 1313,
	400, 1408, 593, 594, 673, 386, 488, 604, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 620, 621,
	625, 207, 464, 465, 466, 467, 294, 615, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 1370, 198, 223, 370, 1434, 456, 290, 651, 619,
	486, 614, 208, 225, 1306, 264, 1318, 1326, 0, 1332,
	1340, 1341, 1354, 1357, 1358, 1359, 1360, 1378, 1379, 1381,
	1389, 1391, 1394, 1396, 1403, 1417, 1437, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 606, 626, 633, 482, 303,
	304, 446, 447, 316, 317, 647, 648, 302, 601, 634,
	598, 646, 628, 440, 380, 1369, 1375, 383, 283, 307,
	322, 1384, 618, 504, 229, 468, 292, 253, 1402, 1404,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 1365, 1393, 378, 578, 579, 318,
	398, 0, 0, 0, 0, 0, 0, 1423, 1407, 530,
	0, 1349, 1426, 1317, 1336, 1436, 1339, 1342, 1386, 1295,
	1364, 418, 1333, 1321, 1290, 1328, 1291, 1319, 1351, 272,
	1316, 1409, 1368, 1425, 368, 269, 1297, 1288, 206, 507,
	1322, 432, 1338, 205, 1388, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 1432,
	372, 1374, 0, 499, 403, 0, 0, 0, 1413, 1412,
	1343, 1353, 1415, 1362, 1400, 1348, 1387, 1305, 1373, 1427,
	1334, 1383, 1428, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 1330, 1380, 610, 1422, 1331,
	1382, 267, 323, 274, 266, 582, 1433, 1414, 1294, 1361,
	1421, 1356, 0, 0, 231, 1424, 1355, 0, 1385, 0,
	1439, 1289, 1376, 0, 1292, 1296, 1435, 1419, 1325, 277,
	0, 0, 0, 0, 0, 0, 0, 1352, 1363, 1397,
	1401, 1346, 0, 0, 0, 0, 0, 0, 2411, 0,
	1323, 0, 1372, 0, 0, 0, 1301, 1293, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 1304, 0, 1324, 1398, 0,
	1287, 299, 1298, 404, 259, 0, 455, 1405, 1418, 1347,
	630, 1420, 1345, 1344, 1392, 1302, 1411, 1337, 367, 1300,
	332, 199, 227, 0, 1335, 414, 463, 475, 1410, 1320,
	1329, 255, 1327, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 1371, 1390, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 1299, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 1315, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 1406,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 1395, 1438,
	427, 474, 242, 607, 498, 201, 1309, 1314, 1307, 0,
	256, 257, 1377, 577, 1310, 1308, 1366, 1367, 1311, 1429,
	1430, 1431, 1416, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 1399, 1303, 0, 1312, 1313, 400, 1408, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 1370, 198, 223,
	370, 1434, 456, 290, 651, 619, 486, 614, 208, 225,
	1306, 264, 1318, 1326, 0, 1332, 1340, 1341, 1354, 1357,
	1358, 1359, 1360, 1378, 1379, 1381, 1389, 1391, 1394, 1396,
	1403, 1417, 1437, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 1369, 1375, 383, 283, 307, 322, 1384, 618, 504,
	229, 468, 292, 253, 1402, 1404, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	1365, 1393, 378, 578, 579, 318, 398, 0, 0, 0,
	0, 0, 0, 1423, 1407, 530, 0, 1349, 1426, 1317,
	1336, 1436, 1339, 1342, 1386, 1295, 1364, 418, 1333, 1321,
	1290, 1328, 1291, 1319, 1351, 272, 1316, 1409, 1368, 1425,
	368, 269, 1297, 1288, 206, 507, 1322, 432, 1338, 205,
	1388, 489, 254, 379, 376, 585, 284, 275, 271, 252,
	319, 387, 430, 520, 424, 1432, 372, 1374, 0, 499,
	403, 0, 0, 0, 1413, 1412, 1343, 1353, 1415, 1362,
	1400, 1348, 1387, 1305, 1373, 1427, 1334, 1383, 1428, 325,
	250, 327, 204, 415, 500, 288, 0, 95, 0, 0,
	0, 509, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 247, 0, 0, 0, 353,
	362, 361, 341, 342, 344, 346, 352, 359, 365, 338,
	347, 1330, 1380, 610, 1422, 1331, 1382, 267, 323, 274,
	266, 582, 1433, 1414, 1294, 1361, 1421, 1356, 0, 0,
	231, 1424, 1355, 0, 1385, 0, 1439, 1289, 1376, 0,
	1292, 1296, 1435, 1419, 1325, 277, 0, 0, 0, 0,
	0, 0, 0, 1352, 1363, 1397, 1401, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 1323, 0, 1372, 0,
	0, 0, 1301, 1293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 1304, 0, 1324, 1398, 0, 1287, 299, 1298, 404,
	259, 0, 455, 1405, 1418, 1347, 630, 1420, 1345, 1344,
	1392, 1302, 1411, 1337, 367, 1300, 332, 199, 227, 0,
	1335, 414, 463, 475, 1410, 1320, 1329, 255, 1327, 473,
	428, 605, 235, 286, 460, 434, 471, 442, 289, 1371,
	1390, 472, 374, 587, 452, 602, 631, 632, 265, 408,
	616, 524, 624, 649, 228, 262, 422, 508, 608, 496,
	399, 583, 584, 331, 495, 297, 203, 371, 637, 226,
	481, 373, 244, 233, 589, 613, 301, 291, 458, 644,
	215, 519, 599, 241, 485, 0, 0, 652, 249, 506,
	611, 600, 217, 596, 505, 395, 328, 329, 216, 0,
	459, 270, 295, 0, 0, 260, 417, 591, 592, 258,
	653, 230, 623, 222, 1299, 622, 410, 586, 597, 396,
	385, 221, 595, 394, 384, 336, 357, 358, 282, 309,
	449, 377, 450, 308, 310, 406, 405, 407, 209, 609,
	627, 0, 210, 0, 501, 612, 654, 454, 214, 236,
	237, 239, 1315, 281, 285, 293, 296, 305, 306, 315,
	369, 421, 448, 444, 453, 1406, 581, 603, 617, 629,
	635, 636, 638, 639, 640, 641, 642, 645, 643, 409,
	313, 497, 335, 375, 1395, 1438, 427, 474, 242, 607,
	498, 201, 1309, 1314, 1307, 0, 256, 257, 1377, 577,
	1310, 1308, 1366, 1367, 1311, 1429, 1430, 1431, 1416, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 650, 510, 516,
	511, 512, 513, 514, 515, 0, 517, 1399, 1303, 0,
	1312, 1313, 400, 1408, 593, 594, 673, 386, 488, 604,
	337, 351, 354, 343, 363, 0, 364, 339, 340, 345,
	348, 349, 350, 355, 356, 360, 366, 251, 212, 392,
	401, 580, 314, 218, 219, 220, 526, 527, 528, 529,
	620, 621, 625, 207, 464, 465, 466, 467, 294, 615,
	311, 470, 469, 333, 334, 381, 451, 542, 544, 555,
	559, 561, 563, 569, 572, 543, 545, 556, 560, 562,
	564, 570, 573, 532, 534, 536, 538, 551, 550, 547,
	575, 576, 553, 558, 537, 549, 554, 567, 574, 571,
	531, 535, 539, 548, 566, 565, 546, 557, 568, 552,
	540, 533, 541, 1370, 198, 223, 370, 1434, 456, 290,
	651, 619, 486, 614, 208, 225, 1306, 264, 1318, 1326,
	0, 1332, 1340, 1341, 1354, 1357, 1358, 1359, 1360, 1378,
	1379, 1381, 1389, 1391, 1394, 1396, 1403, 1417, 1437, 200,
	202, 211, 224, 234, 238, 245, 263, 278, 280, 287,
	300, 312, 320, 321, 324, 330, 382, 388, 389, 390,
	391, 411, 412, 413, 416, 419, 420, 423, 425, 426,
	429, 433, 437, 438, 439, 441, 443, 445, 457, 462,
	476, 477, 478, 479, 480, 483, 484, 490, 491, 492,
	493, 494, 502, 503, 518, 588, 590, 606, 626, 633,
	482, 303, 304, 446, 447, 316, 317, 647, 648, 302,
	601, 634, 598, 646, 628, 440, 380, 1369, 1375, 383,
	283, 307, 322, 1384, 618, 504, 229, 468, 292, 253,
	1402, 1404, 213, 248, 232, 261, 276, 279, 326, 393,
	402, 431, 436, 298, 273, 246, 461, 243, 487, 521,
	522, 523, 525, 397, 268, 435, 1365, 1393, 378, 578,
	579, 318, 398, 0, 0, 0, 0, 0, 0, 1423,
	1407, 530, 0, 1349, 1426, 1317, 1336, 1436, 1339, 1342,
	1386, 1295, 1364, 418, 1333, 1321, 1290, 1328, 1291, 1319,
	1351, 272, 1316, 1409, 1368, 1425, 368, 269, 1297, 1288,
	206, 507, 1322, 432, 1338, 205, 1388, 489, 254, 379,
	376, 585, 284, 275, 271, 252, 319, 387, 430, 520,
	424, 1432, 372, 1374, 0, 499, 403, 0, 0, 0,
	1413, 1412, 1343, 1353, 1415, 1362, 1400, 1348, 1387, 1305,
	1373, 1427, 1334, 1383, 1428, 325, 250, 327, 204, 415,
	500, 288, 0, 0, 0, 0, 0, 509, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 247, 0, 0, 0, 353, 362, 361, 341, 342,
	344, 346, 352, 359, 365, 338, 347, 1330, 1380, 610,
	1422, 1331, 1382, 267, 323, 274, 266, 582, 1433, 1414,
	1294, 1361, 1421, 1356, 0, 0, 231, 1424, 1355, 0,
	1385, 0, 1439, 1289, 1376, 0, 1292, 1296, 1435, 1419,
	1325, 277, 0, 0, 0, 0, 0, 0, 0, 1352,
	1363, 1397, 1401, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 1372, 0, 0, 0, 1301, 1293,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 1304, 0, 1324,
	1398, 0, 1287, 299, 1298, 404, 259, 0, 455, 1405,
	1418, 1347, 630, 1420, 1345, 1344, 1392, 1302, 1411, 1337,
	367, 1300, 332, 199, 227, 0, 1335, 414, 463, 475,
	1410, 1320, 1329, 255, 1327, 473, 428, 605, 235, 286,
	460, 434, 471, 442, 289, 1371, 1390, 472, 374, 587,
	452, 602, 631, 632, 265, 408, 616, 524, 624, 649,
	228, 262, 422, 508, 608, 496, 399, 583, 584, 331,
	495, 297, 203, 371, 637, 226, 481, 373, 244, 233,
	589, 613, 301, 291, 458, 644, 215, 519, 599, 241,
	485, 0, 0, 652, 249, 506, 611, 600, 217, 596,
	505, 395, 328, 329, 216, 0, 459, 270, 295, 0,
	0, 260, 417, 591, 592, 258, 653, 230, 623, 222,
	1299, 622, 410, 586, 597, 396, 385, 221, 595, 394,
	384, 336, 357, 358, 282, 309, 449, 377, 450, 308,
	310, 406, 405, 407, 209, 609, 627, 0, 210, 0,
	501, 612, 654, 454, 214, 236, 237, 239, 1315, 281,
	285, 293, 296, 305, 306, 315, 369, 421, 448, 444,
	453, 1406, 581, 603, 617, 629, 635, 636, 638, 639,
	640, 641, 642, 645, 643, 409, 313, 497, 335, 375,
	1395, 1438, 427, 474, 242, 607, 498, 201, 1309, 1314,
	1307, 0, 256, 257, 1377, 577, 1310, 1308, 1366, 1367,
	1311, 1429, 1430, 1431, 1416, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 650, 510, 516, 511, 512, 513, 514,
	515, 0, 517, 1399, 1303, 0, 1312, 1313, 400, 1408,
	593, 594, 673, 386, 488, 604, 337, 351, 354, 343,
	363, 0, 364, 339, 340, 345, 348, 349, 350, 355,
	356, 360, 366, 251, 212, 392, 401, 580, 314, 218,
	219, 220, 526, 527, 528, 529, 620, 621, 625, 207,
	464, 465, 466, 467, 294, 615, 311, 470, 469, 333,
	334, 381, 451, 542, 544, 555, 559, 561, 563, 569,
	572, 543, 545, 556, 560, 562, 564, 570, 573, 532,
	534, 536, 538, 551, 550, 547, 575, 576, 553, 558,
	537, 549, 554, 567, 574, 571, 531, 535, 539, 548,
	566, 565, 546, 557, 568, 552, 540, 533, 541, 1370,
	198, 223, 370, 1434, 456, 290, 651, 619, 486, 614,
	208, 225, 1306, 264, 1318, 1326, 0, 1332, 1340, 1341,
	1354, 1357, 1358, 1359, 1360, 1378, 1379, 1381, 1389, 1391,
	1394, 1396, 1403, 1417, 1437, 200, 202, 211, 224, 234,
	238, 245, 263, 278, 280, 287, 300, 312, 320, 321,
	324, 330, 382, 388, 389, 390, 391, 411, 412, 413,
	416, 419, 420, 423, 425, 426, 429, 433, 437, 438,
	439, 441, 443, 445, 457, 462, 476, 477, 478, 479,
	480, 483, 484, 490, 491, 492, 493, 494, 502, 503,
	518, 588, 590, 606, 626, 633, 482, 303, 304, 446,
	447, 316, 317, 647, 648, 302, 601, 634, 598, 646,
	628, 440, 380, 1369, 1375, 383, 283, 307, 322, 1384,
	618, 504, 229, 468, 292, 253, 1402, 1404, 213, 248,
	232, 261, 276, 279, 326, 393, 402, 431, 436, 298,
	273, 246, 461, 243, 487, 521, 522, 523, 525, 397,
	268, 435, 1365, 1393, 378, 578, 579, 318, 398, 0,
	0, 0, 0, 0, 0, 1423, 1407, 530, 0, 1349,
	1426, 1317, 1336, 1436, 1339, 1342, 1386, 1295, 1364, 418,
	1333, 1321, 1290, 1328, 1291, 1319, 1351, 272, 1316, 1409,
	1368, 1425, 368, 269, 1297, 1288, 206, 507, 1322, 432,
	1338, 205, 1388, 489, 254, 379, 376, 585, 284, 275,
	271, 252, 319, 387, 430, 520, 424, 1432, 372, 1374,
	0, 499, 403, 0, 0, 0, 1413, 1412, 1343, 1353,
	1415, 1362, 1400, 1348, 1387, 1305, 1373, 1427, 1334, 1383,
	1428, 325, 250, 327, 204, 415, 500, 288, 0, 0,
	0, 0, 0, 509, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 247, 0, 0,
	0, 353, 362, 361, 341, 342, 344, 346, 352, 359,
	365, 338, 347, 1330, 1380, 610, 1422, 1331, 1382, 267,
	323, 274, 266, 582, 1433, 1414, 1294, 1361, 1421, 1356,
	0, 0, 231, 1424, 1355, 0, 1385, 0, 1439, 1289,
	1376, 0, 1292, 1296, 1435, 1419, 1325, 277, 0, 0,
	0, 0, 0, 0, 0, 1352, 1363, 1397, 1401, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 1323, 0,
	1372, 0, 0, 0, 1301, 1293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 1304, 0, 1324, 1398, 0, 1287, 299,
	1298, 404, 259, 0, 455, 1405, 1418, 1347, 630, 1420,
	1345, 1344, 1392, 1302, 1411, 1337, 367, 1300, 332, 199,
	227, 0, 1335, 414, 463, 475, 1410, 1320, 1329, 255,
	1327, 473, 428, 605, 235, 286, 460, 434, 471, 442,
	289, 1371, 1390, 472, 374, 587, 452, 602, 631, 632,
	265, 408, 616, 524, 624, 649, 228, 262, 422, 508,
	608, 496, 399, 583, 584, 331, 495, 297, 203, 371,
	637, 226, 481, 373, 244, 233, 589, 613, 301, 291,
	458, 644, 215, 519, 599, 241, 485, 0, 0, 652,
	249, 506, 611, 600, 217, 596, 505, 395, 328, 329,
	216, 0, 459, 270, 295, 0, 0, 260, 417, 591,
	592, 258, 653, 230, 623, 222, 1299, 622, 410, 586,
	597, 396, 385, 221, 595, 394, 384, 336, 357, 358,
	282, 309, 449, 377, 450, 308, 310, 406, 405, 407,
	209, 609, 627, 0, 210, 0, 501, 612, 654, 454,
	214, 236, 237, 239, 1315, 281, 285, 293, 296, 305,
	306, 315, 369, 421, 448, 444, 453, 1406, 581, 603,
	617, 629, 635, 636, 638, 639, 640, 641, 642, 645,
	643, 409, 313, 497, 335, 375, 1395, 1438, 427, 474,
	242, 607, 498, 201, 1309, 1314, 1307, 0, 256, 257,
	1377, 577, 1310, 1308, 1366, 1367, 1311, 1429, 1430, 1431,
	1416, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 668, 669, 670, 671, 672, 650,
	510, 516, 511, 512, 513, 514, 515, 0, 517, 1399,
	1303, 0, 1312, 1313, 400, 1408, 593, 594, 673, 386,
	488, 604, 337, 351, 354, 343, 363, 0, 364, 339,
	340, 345, 348, 349, 350, 355, 356, 360, 366, 251,
	212, 392, 401, 580, 314, 218, 219, 220, 526, 527,
	528, 529, 620, 621, 625, 207, 464, 465, 466, 467,
	294, 615, 311, 470, 469, 333, 334, 381, 451, 542,
	544, 555, 559, 561, 563, 569, 572, 543, 545, 556,
	560, 562, 564, 570, 573, 532, 534, 536, 538, 551,
	550, 547, 575, 576, 553, 558, 537, 549, 554, 567,
	574, 571, 531, 535, 539, 548, 566, 565, 546, 557,
	568, 552, 540, 533, 541, 1370, 198, 223, 370, 1434,
	456, 290, 651, 619, 486, 614, 208, 225, 1306, 264,
	1318, 1326, 0, 1332, 1340, 1341, 1354, 1357, 1358, 1359,
	1360, 1378, 1379, 1381, 1389, 1391, 1394, 1396, 1403, 1417,
	1437, 200, 202, 211, 224, 234, 238, 245, 263, 278,
	280, 287, 300, 312, 320, 321, 324, 330, 382, 388,
	389, 390, 391, 411, 412, 413, 416, 419, 420, 423,
	425, 426, 429, 433, 437, 438, 439, 441, 443, 445,
	457, 462, 476, 477, 478, 479, 480, 483, 484, 490,
	491, 492, 493, 494, 502, 503, 518, 588, 590, 606,
	626, 633, 482, 303, 304, 446, 447, 316, 317, 647,
	648, 302, 601, 634, 598, 646, 628, 440, 380, 1369,
	1375, 383, 283, 307, 322, 1384, 618, 504, 229, 468,
	292, 253, 1402, 1404, 213, 248, 232, 261, 276, 279,
	326, 393, 402, 431, 436, 298, 273, 246, 461, 243,
	487, 521, 522, 523, 525, 397, 268, 435, 1365, 1393,
	378, 578, 579, 318, 398, 0, 0, 0, 0, 0,
	0, 1423, 1407, 530, 0, 1349, 1426, 1317, 1336, 1436,
	1339, 1342, 1386, 1295, 1364, 418, 1333, 1321, 1290, 1328,
	1291, 1319, 1351, 272, 1316, 1409, 1368, 1425, 368, 269,
	1297, 1288, 206, 507, 1322, 432, 1338, 205, 1388, 489,
	254, 379, 376, 585, 284, 275, 271, 252, 319, 387,
	430, 520, 424, 1432, 372, 1374, 0, 499, 403, 0,
	0, 0, 1413, 1412, 1343, 1353, 1415, 1362, 1400, 1348,
	1387, 1305, 1373, 1427, 1334, 1383, 1428, 325, 250, 327,
	204, 415, 500, 288, 0, 0, 0, 0, 0, 509,
	960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 247, 0, 0, 0, 353, 362, 361,
	341, 342, 344, 346, 352, 359, 365, 338, 347, 1330,
	1380, 610, 1422, 1331, 1382, 267, 323, 274, 266, 582,
	1433, 1414, 1294, 1361, 1421, 1356, 0, 0, 231, 1424,
	1355, 0, 1385, 0, 1439, 1289, 1376, 0, 1292, 1296,
	1435, 1419, 1325, 277, 0, 0, 0, 0, 0, 0,
	0, 1352, 1363, 1397, 1401, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 1372, 0, 0, 0,
	1301, 1293, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 1304,
	0, 1324, 1398, 0, 1287, 299, 1298, 404, 259, 0,
	455, 1405, 1418, 1347, 630, 1420, 1345, 1344, 1392, 1302,
	1411, 1337, 367, 1300, 332, 199, 227, 0, 1335, 414,
	463, 475, 1410, 1320, 1329, 255, 1327, 473, 428, 605,
	235, 286, 460, 434, 471, 442, 289, 1371, 1390, 472,
	374, 587, 452, 602, 631, 632, 265, 408, 616, 524,
	624, 649, 228, 262, 422, 508, 608, 496, 399, 583,
	584, 331, 495, 297, 203, 371, 637, 226, 481, 373,
	244, 233, 589, 613, 301, 291, 458, 644, 215, 519,
	599, 241, 485, 0, 0, 652, 249, 506, 611, 600,
	217, 596, 505, 395, 328, 329, 216, 0, 459, 270,
	295, 0, 0, 260, 417, 591, 592, 258, 653, 230,
	623, 222, 1299, 622, 410, 586, 597, 396, 385, 221,
	595, 394, 384, 336, 357, 358, 282, 309, 449, 377,
	450, 308, 310, 406, 405, 407, 209, 609, 627, 0,
	210, 0, 501, 612, 654, 454, 214, 236, 237, 239,
	1315, 281, 285, 293, 296, 305, 306, 315, 369, 421,
	448, 444, 453, 1406, 581, 603, 617, 629, 635, 636,
	638, 639, 640, 641, 642, 645, 643, 409, 313, 497,
	335, 375, 1395, 1438, 427, 474, 242, 607, 498, 201,
	1309, 1314, 1307, 0, 256, 257, 1377, 577, 1310, 1308,
	1366, 1367, 1311, 1429, 1430, 1431, 1416, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 650, 510, 516, 511, 512,
	513, 514, 515, 0, 517, 1399, 1303, 0, 1312, 1313,
	400, 1408, 593, 594, 673, 386, 488, 604, 337, 351,
	354, 343, 363, 0, 364, 339, 340, 345, 348, 349,
	350, 355, 356, 360, 366, 251, 212, 392, 401, 580,
	314, 218, 219, 220, 526, 527, 528, 529, 620, 621,
	625, 207, 464, 465, 466, 467, 294, 615, 311, 470,
	469, 333, 334, 381, 451, 542, 544, 555, 559, 561,
	563, 569, 572, 543, 545, 556, 560, 562, 564, 570,
	573, 532, 534, 536, 538, 551, 550, 547, 575, 576,
	553, 558, 537, 549, 554, 567, 574, 571, 531, 535,
	539, 548, 566, 565, 546, 557, 568, 552, 540, 533,
	541, 1370, 198, 223, 370, 1434, 456, 290, 651, 619,
	486, 614, 208, 225, 1306, 264, 1318, 1326, 0, 1332,
	1340, 1341, 1354, 1357, 1358, 1359, 1360, 1378, 1379, 1381,
	1389, 1391, 1394, 1396, 1403, 1417, 1437, 200, 202, 211,
	224, 234, 238, 245, 263, 278, 280, 287, 300, 312,
	320, 321, 324, 330, 382, 388, 389, 390, 391, 411,
	412, 413, 416, 419, 420, 423, 425, 426, 429, 433,
	437, 438, 439, 441, 443, 445, 457, 462, 476, 477,
	478, 479, 480, 483, 484, 490, 491, 492, 493, 494,
	502, 503, 518, 588, 590, 606, 626, 633, 482, 303,
	304, 446, 447, 316, 317, 647, 648, 302, 601, 634,
	598, 646, 628, 440, 380, 1369, 1375, 383, 283, 307,
	322, 1384, 618, 504, 229, 468, 292, 253, 1402, 1404,
	213, 248, 232, 261, 276, 279, 326, 393, 402, 431,
	436, 298, 273, 246, 461, 243, 487, 521, 522, 523,
	525, 397, 268, 435, 1365, 1393, 378, 578, 579, 318,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 2233, 2234,
	2235, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 2440, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	2441, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 86, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 1718,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 94, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 4098, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 1755, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 1071, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	3173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 749, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 745, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	3169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 1092, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 1092, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	2124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 765, 0, 0, 0, 272,
	770, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 777,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 1024, 509, 960, 1092, 926, 964,
	1025, 977, 978, 979, 965, 0, 240, 966, 967, 247,
	968, 0, 925, 808, 810, 809, 875, 876, 877, 878,
	879, 880, 881, 811, 812, 806, 973, 610, 980, 981,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 762, 0, 776, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 760, 0, 0,
	0, 0, 920, 0, 761, 0, 0, 769, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	2122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 919, 0, 0,
	630, 0, 0, 917, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 970, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 971, 972, 258, 653, 816, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	824, 825, 282, 309, 901, 900, 899, 308, 310, 897,
	898, 896, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 907, 929, 918, 782, 783,
	908, 909, 933, 910, 785, 786, 930, 931, 779, 780,
	784, 932, 934, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 921, 768, 767, 0, 774, 775, 0, 804, 805,
	807, 813, 814, 815, 826, 873, 874, 882, 884, 885,
	883, 886, 887, 888, 891, 892, 893, 894, 889, 890,
	895, 787, 791, 788, 789, 790, 802, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 803, 944, 945,
	946, 947, 948, 949, 819, 823, 822, 820, 821, 817,
	818, 845, 844, 846, 847, 848, 849, 850, 851, 853,
	852, 854, 855, 856, 857, 858, 859, 827, 828, 831,
	832, 830, 829, 833, 842, 843, 834, 835, 836, 837,
	838, 839, 841, 840, 860, 861, 862, 863, 864, 866,
	865, 869, 870, 868, 867, 872, 871, 766, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	935, 264, 936, 0, 0, 940, 0, 0, 0, 942,
	941, 0, 943, 905, 904, 0, 0, 937, 938, 0,
	939, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 950, 951, 952, 953, 954,
	955, 956, 957, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 975, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 1143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 1142,
	630, 0, 0, 0, 0, 0, 1139, 1140, 367, 1100,
	332, 199, 227, 1133, 1137, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 1711, 509, 960, 0, 0, 1708,
	0, 0, 0, 0, 1706, 0, 240, 1707, 1705, 247,
	1710, 0, 925, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 86, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 97,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 94, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 2427, 0,
	0, 2426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 86, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 97,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 1755, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 94, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	1778, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 1780, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 1782, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 1479, 0,
	1480, 1481, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 2427, 0,
	0, 2426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 2374, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 1962, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 2372, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 1100,
	332, 199, 227, 1098, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 2374, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 1962, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 1755, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 3729, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 2133, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 2880, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 2865, 0, 0, 0, 0, 240, 0, 0, 247,
	2866, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	1801, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 1800, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 727, 728, 729, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 4073, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 1962, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 3729, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 2428, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 1782, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 2080, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 2071, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 1929, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 1927, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 1925, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 1923, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 1921, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 1917, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 1915, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 1913, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 1888, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 1786, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 95, 0, 0, 0, 509, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1458,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 1457, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1050,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 676, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 4139, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	398, 0, 378, 578, 579, 318, 0, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 368, 269, 0, 0, 206, 507,
	0, 432, 0, 205, 0, 489, 254, 379, 376, 585,
	284, 275, 271, 252, 319, 387, 430, 520, 424, 0,
	372, 0, 0, 499, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 250, 327, 204, 415, 500, 288,
	0, 0, 0, 0, 0, 509, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 247,
	0, 0, 0, 353, 362, 361, 341, 342, 344, 346,
	352, 359, 365, 338, 347, 0, 0, 610, 0, 0,
	0, 267, 323, 274, 266, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 404, 259, 0, 455, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 0, 0, 367, 0,
	332, 199, 227, 0, 0, 414, 463, 475, 0, 0,
	0, 255, 0, 473, 428, 605, 235, 286, 460, 434,
	471, 442, 289, 0, 0, 472, 374, 587, 452, 602,
	631, 632, 265, 408, 616, 524, 624, 649, 228, 262,
	422, 508, 608, 496, 399, 583, 584, 331, 495, 297,
	203, 371, 637, 226, 481, 373, 244, 233, 589, 613,
	301, 291, 458, 644, 215, 519, 599, 241, 485, 0,
	0, 652, 249, 506, 611, 600, 217, 596, 505, 395,
	328, 329, 216, 0, 459, 270, 295, 0, 0, 260,
	417, 591, 592, 258, 653, 230, 623, 222, 0, 622,
	410, 586, 597, 396, 385, 221, 595, 394, 384, 336,
	357, 358, 282, 309, 449, 377, 450, 308, 310, 406,
	405, 407, 209, 609, 627, 0, 210, 0, 501, 612,
	654, 454, 214, 236, 237, 239, 0, 281, 285, 293,
	296, 305, 306, 315, 369, 421, 448, 444, 453, 0,
	581, 603, 617, 629, 635, 636, 638, 639, 640, 641,
	642, 645, 643, 409, 313, 497, 335, 375, 0, 0,
	427, 474, 242, 607, 498, 201, 0, 0, 0, 0,
	256, 257, 0, 577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 650, 510, 516, 511, 512, 513, 514, 515, 0,
	517, 0, 0, 0, 0, 0, 400, 0, 593, 594,
	673, 386, 488, 604, 337, 351, 354, 343, 363, 0,
	364, 339, 340, 345, 348, 349, 350, 355, 356, 360,
	366, 251, 212, 392, 401, 580, 314, 218, 219, 220,
	526, 527, 528, 529, 620, 621, 625, 207, 464, 465,
	466, 467, 294, 615, 311, 470, 469, 333, 334, 381,
	451, 542, 544, 555, 559, 561, 563, 569, 572, 543,
	545, 556, 560, 562, 564, 570, 573, 532, 534, 536,
	538, 551, 550, 547, 575, 576, 553, 558, 537, 549,
	554, 567, 574, 571, 531, 535, 539, 548, 566, 565,
	546, 557, 568, 552, 540, 533, 541, 0, 198, 223,
	370, 0, 456, 290, 651, 619, 486, 614, 208, 225,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 211, 224, 234, 238, 245,
	263, 278, 280, 287, 300, 312, 320, 321, 324, 330,
	382, 388, 389, 390, 391, 411, 412, 413, 416, 419,
	420, 423, 425, 426, 429, 433, 437, 438, 439, 441,
	443, 445, 457, 462, 476, 477, 478, 479, 480, 483,
	484, 490, 491, 492, 493, 494, 502, 503, 518, 588,
	590, 606, 626, 633, 482, 303, 304, 446, 447, 316,
	317, 647, 648, 302, 601, 634, 598, 646, 628, 440,
	380, 0, 0, 383, 283, 307, 322, 0, 618, 504,
	229, 468, 292, 253, 0, 0, 213, 248, 232, 261,
	276, 279, 326, 393, 402, 431, 436, 298, 273, 246,
	461, 243, 487, 521, 522, 523, 525, 397, 268, 435,
	0, 0, 378, 578, 579, 318,
}

var yyPact = [...]int{
	-1000, -1000, 4540, -1000, -554, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2547, 2778, -1000, -1000, -1000, -1000, 2660, -1000, 1000,
	2119, -1000, 2433, 4204, -1000, 55576, 504, -1000, 52616, -454,
	859, 256, 36336, -1000, 192, -1000, 182, 54096, 187, -1000,
	-1000, -1000, -1000, -454, 21536, 2309, 40, 39, 55576, -1000,
	-1000, -1000, -1000, -374, 2627, 1989, -1000, 375, -1000, -1000,
	-1000, -1000, -1000, -1000, 51876, -1000, -1000, 1097, 1142, -1000,
	-1000, 2437, 2415, 2290, 903, 2351, -1000, 2516, 1989, -1000,
	21536, 2618, 2384, 20796, 20796, 433, -1000, -1000, 271, -1000,
	-1000, 31156, 55576, 39296, 308, -1000, 2433, -1000, -1000, -1000,
	191, -1000, 338, 2033, -1000, 2024, -1000, 922, 888, 359,
	472, 457, 354, 353, 350, 348, 347, 343, 342, 340,
	349, -1000, 933, 933, -237, -241, 387, 442, 411, 411,
	1160, 477, 2391, 2385, -1000, -1000, 933, 933, 933, 341,
	933, 933, 933, 933, 301, 299, 933, 933, 933, 933,
	933, 933, 933, 933, 933, 933, 933, 933, 933, 933,
	933, 933, 933, 919, 2433, 269, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 55576, 198, 55576, -1000, 809, 500,
	-1000, -1000, -459, 1116, 1116, 92, 1116, 1116, 1116, 1116,
	169, 997, 36, -1000, 168, 275, 156, 265, 1063, 813,
	-1000, -1000, 252, 1063, 1853, -1000, 907, 261, 170, -1000,
	1116, 1116, -1000, 14112, 230, 14112, 14112, 259, 162, -1000,
	2421, -1000, -1000, -1000, -1000, -1000, 1351, -1000, -1000, -1000,
	-1000, -39, 476, -1000, -1000, -1000, -1000, 54096, 51136, 225,
	-1000, -1000, 29, 1859, 1226, 21536, 1267, 901, -1000, -1000,
	1408, 876, -1000, -1000, -1000, -1000, -1000, 526, -1000, 23756,
	23756, 23756, 23756, -1000, -1000, 2039, 50396, 2039, 2039, 23756,
	2039, 23756, 2039, 2039, 2039, 2039, 21536, 2039, 2039, 2039,
	2039, -1000, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, -1000, -1000, -1000, -1000, 2039, 807, 2039, 2039, 2039,
	2039, 2039, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2039,
	2039, 2039, 2039, 2039, 2039, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, -1000, -1000,
	-1000, 1740, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26716,
	1602, 1596, 1584, -1000, 18576, 2039, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55576, -1000, 2039,
	208, 54096, 54096, 365, 1341, -1000, -1000, 2516, 1989, -1000,
	2627, 2585, 375, -1000, 3437, 2728, 1680, 1459, 1989, 1986,
	55576, -1000, 2060, -1000, -1000, -1000, -1000, -336, -338, 2240,
	1499, 1851, -1000, -1000, -1000, -1000, 1991, 21536, -1000, -1000,
	2655, -1000, 28936, 801, 2653, 49656, -1000, 433, 433, 2023,
	421, -3, -1000, -1000, -1000, -1000, 973, 35596, -1000, -1000,
	-1000, -1000, -1000, 1848, 55576, -1000, -1000, 5968, 54096, -1000,
	2118, -1000, 1832, -1000, 2080, 21536, 2062, 498, 54096, 459,
	453, 441, -1000, -65, -1000, -1000, -1000, -1000, -1000, -1000,
	933, 933, 933, -1000, 332, 2610, 4204, 7141, -1000, -1000,
	-1000, 48916, 2110, 54096, -1000, 2103, -1000, 1044, 845, 843,
	843, 54096, -1000, -1000, 54836, 54096, 1042, 1034, 54096, 54096,
	54096, 54096, -1000, 48176, -1000, 47436, 46696, 1340, 54096, 45956,
	45216, 44476, 43736, 42996, -1000, 2186, -1000, 2108, -1000, -1000,
	-1000, 54836, 54096, 54096, 54836, 54096, 54836, 55576, 54096, -1000,
	-1000, 346, -1000, -1000, 1338, 1324, 1313, 933, 933, 1312,
	1825, 1823, 1821, 933, 933, 1311, 1811, 37816, 1785, 272,
	1309, 1307, 1291, 1306, 1780, 273, 1778, 1304, 1246, 1283,
	54096, 2099, 55576, -1000, 246, 952, 996, 969, 2433, 2296,
	2020, 464, 496, 54096, 415, 415, 54096, -1000, 14858, 55576,
	217, -1000, 1776, 21536, -1000, 1080, 1063, 1063, -1000, -1000,
	-1000, -1000, -1000, -1000, 1116, 55576, 1080, -1000, -1000, -1000,
	1063, 1116, 55576, 1116, 1116, 1116, 1116, 1063, 1063, 1063,
	1116, 55576, 55576, 55576, 55576, 55576, 55576, 55576, 55576, 55576,
	14112, 907, 1116, -460, -1000, 1775, -1000, -1000, -1000, 2211,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	14112, 14112, -1000, -1000, 2511, 2507, -1000, -1000, -1000, 2015,
	-1000, 180, 8, 172, -1000, 42256, 539, 966, -1000, 539,
	-1000, -1000, -1000, 2014, 41516, -1000, -461, -467, -468, -469,
	-1000, -1000, -1000, -470, -475, -1000, -1000, -1000, 21536, 21536,
	21536, 21536, -287, -1000, 1525, 23756, 2431, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21536, 253, 1181, 23756, 23756, 23756,
	23756, 23756, 23756, 23756, 25236, 24496, 23756, 23756, 23756, 23756,
	23756, 23756, -1000, -1000, 33376, 5073, 5073, 876, 876, 876,
	876, -1000, -184, 2011, 54836, -1000, -1000, -1000, 799, 21536,
	21536, 876, -1000, 1353, 1146, 18576, 21536, 21536, 21536, 21536,
	972, 1226, 54836, 21536, -1000, 1459, -1000, -1000, -1000, -1000,
	1197, -1000, -1000, 1077, 2358, 2358, 2358, 2358, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 2358, 21536,
	1005, 1005, 1205, 21536, 21536, 21536, 21536, 21536, 21536, 21536,
	21536, 17096, 21536, 21536, 23756, 21536, 21536, 21536, 1459, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 1459, 21536,
	1207, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 16350, 21536,
	21536, 21536, 21536, 21536, -1000, -1000, -1000, -1000, -1000, -1000,
	21536, 21536, 21536, 21536, 21536, 21536, 21536, 21536, 1459, 21536,
	21536, 21536, 21536, 21536, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1535, 1600, 1472, 1174, 21536,
	-1000, 2002, -1000, -202, 30416, 21536, 1774, 2647, 2139, 54096,
	-1000, -1000, -1000, -1000, 2516, -1000, 2516, 1535, 2406, 2082,
	20796, -1000, -1000, 2406, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1881, -1000, 55576,
	1986, 2502, 54096, -1000, -365, -1000, -371, 2229, 1773, 371,
	-1000, 21536, 21536, 1983, -1000, 1424, 55576, -1000, -287, -1000,
	40776, -1000, -1000, 13366, 55576, 335, 55576, -1000, 29676, 40036,
	282, -1000, -3, 1962, -1000, 15, 2, 17836, 871, -1000,
	-1000, -1000, 387, 25976, 1806, 871, 95, -1000, -1000, -1000,
	2080, -1000, 2080, 2080, 2080, 2080, 371, 371, 371, 371,
	-1000, -1000, -1000, -1000, -1000, 2094, 2080, 2091, -1000, 2080,
	2080, 2080, 2080, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2090, 2090, 2090, 2089, 2089, 2081, 2081, 400, -1000, 21536,
	383, 39296, 2465, 1281, 1820, 246, 430, 2130, 54096, 54096,
	54096, 430, -1000, 1411, 1400, 1399, -1000, -544, 1979, -1000,
	-1000, 2598, -1000, -1000, 1082, 1067, 1066, 1037, 54096, 219,
	324, -1000, 423, -1000, 39296, 54096, 1029, 843, 54096, -1000,
	54096, -1000, -1000, -1000, -1000, -1000, 54096, -1000, -1000, 1974,
	-1000, 1961, 1135, 1060, 1124, 1058, 1974, -1000, -1000, -193,
	1974, -1000, 1974, -1000, 1974, -1000, 1974, -1000, 1974, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 967, 334,
	-375, 54096, 219, 458, -1000, 452, 33376, -1000, -1000, -1000,
	33376, 33376, -1000, -1000, -1000, -1000, 1772, 1771, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -521, 55576, -1000,
	245, 964, 276, 330, 293, 55576, 286, 2379, 2377, 2373,
	2369, 2364, 2354, 2349, 283, 296, 55576, 55576, 415, 2175,
	55576, 2459, 55576, -1000, -1000, -1000, -1000, -1000, 1767, 1762,
	-1000, 1226, 55576, -1000, -1000, 1116, 1116, -1000, -1000, 55576,
	1116, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1116,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 55576, -1000, -1000, -1000, -1000,
	1749, -1000, 55576, -39, 178, -1000, -1000, 54096, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -119, -1000, 344,
	12, 366, -1000, -1000, -1000, -1000, -1000, 2482, -1000, 1226,
	1006, 998, -1000, 2039, -1000, -1000, 1333, -1000, -1000, -1000,
	-1000, -1000, 2039, 2039, 2039, -1000, -1000, -1000, -1000, -1000,
	253, 23756, 23756, 23756, 1601, 470, 1672, 1586, 1335, 1186,
	1186, 1240, 23756, 1240, 23756, 884, 884, 884, 884, 884,
	-1000, -1000, -1000, -1000, -1000, -1000, 1740, -1000, 1730, -1000,
	2039, 54836, 1747, 16350, 2632, 1938, 1459, 896, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4373, 1459,
	1859, 1459, 2226, 4368, 990, -1000, 21536, 1459, 4362, -1000,
	-1000, 1459, 1459, 21536, -1000, -1000, 21536, 21536, 21536, 21536,
	1820, 1820, 1820, 1820, 1820, 1820, 1820, 1820, 1820, 1820,
	21536, 1820, 1971, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1968, 2646, 2570, 1820, 1820, 1820, 1820, 4357, 1820,
	1820, 21536, 1556, -1000, -1000, -1000, 1456, 4353, 1348, 4343,
	1820, 1820, -1000, 1820, 4279, 4275, 1459, 2774, 2709, 1820,
	1820, 1820, 1820, 1820, 2684, 2679, 1820, 1820, 2674, 1820,
	3968, 1820, 2657, 2640, 2609, 2593, 2566, 2562, 2549, 2543,
	2532, 2527, 2520, 2514, 2480, 2460, 2449, 2426, 2413, 2389,
	1820, 1820, 1820, 3943, 1820, 3911, 1820, 3900, 1820, 1820,
	3606, 2361, 2352, 1459, 1966, -1000, 3584, 1820, 3561, 3533,
	3495, 2339, 3491, 3487, 3470, 1820, 1820, 1820, 2335, 3461,
	3457, 3449, 3421, 3416, 3408, 3397, 3387, 3380, 1820, 1472,
	1472, 1472, 1472, 1472, 3371, -291, 1820, 1459, -1000, -1000,
	-1000, -1000, -1000, 3348, 2316, 3240, 3095, 3063, 3049, 1459,
	2039, 798, -1000, -1000, 1472, 1459, 1459, 1472, 1472, 3025,
	3017, 3010, 2998, 2987, 2894, 1820, 1820, -1000, 1820, 2889,
	2876, 2307, 2300, 1459, -1000, 1472, 55576, -1000, -451, -1000,
	-9, 945, 2039, -1000, 37816, 1459, -1000, 4189, -1000, 1178,
	-1000, -1000, -1000, -1000, -1000, 34856, 1857, -1000, -1000, -1000,
	-1000, 2039, 1737, -1000, -1000, -1000, -1000, 371, 67, 34116,
	856, 856, 123, 1226, 1226, 21536, -1000, -1000, -1000, -1000,
	-1000, -1000, 797, 2624, 451, 2039, -1000, 1951, 2473, -1000,
	-1000, -1000, 2497, 27456, -1000, -1000, 2039, 2039, 55576, 1818,
	1743, -1000, 783, -1000, 1358, 1962, -3, -4, -1000, -1000,
	-1000, -1000, 1226, -1000, 1394, 339, 363, -1000, 425, -1000,
	-1000, -1000, -1000, 2338, 80, -1000, -1000, -1000, 836, 371,
	-1000, -1000, -1000, -1000, -1000, -1000, 1729, -1000, 1729, -1000,
	-1000, -1000, -1000, -1000, 1278, -1000, -1000, -1000, -1000, 1277,
	-1000, -1000, 1272, -1000, -1000, 2557, 2182, 383, -1000, -1000,
	933, 1706, -1000, -1000, 2330, 933, 933, 54096, -1000, -1000,
	1748, 2465, 245, 55576, 984, 2174, -1000, 2130, 2130, 2130,
	55576, -1000, -1000, -1000, -1000, -1000, -1000, -530, 176, 573,
	-1000, -1000, -1000, 6849, 54096, 1725, -1000, 216, -1000, 1744,
	-1000, 54096, -1000, 1723, 2088, 54096, 54096, -1000, -1000, -1000,
	54096, 2039, -1000, -1000, -1000, -1000, 495, 2432, 325, -1000,
	-1000, -313, -1000, -1000, 219, 216, 54836, 54096, 871, -1000,
	-1000, -1000, -1000, -1000, -525, 1719, 450, 231, 521, 55576,
	55576, 55576, 55576, 55576, 55576, 518, -1000, -1000, 26, -1000,
	-1000, 202, -1000, -1000, -1000, -1000, -1000, -1000, 202, -1000,
	-1000, -1000, -1000, -1000, 274, 435, -1000, 55576, 55576, 962,
	-1000, -1000, -1000, -1000, -1000, 1063, -1000, -1000, 1063, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2404, 55576, 7, -492, -1000, -489, 21536, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1221, 439, 1672, 23756, 23756,
	1146, 1146, 23756, -1000, -1000, -1000, 854, 854, 33376, -1000,
	23756, 21536, -1000, -1000, 21536, 21536, 21536, 982, -1000, 21536,
	1491, -1000, 21536, -1000, -291, 1472, 1820, 1820, 1820, 1820,
	-291, -291, -291, -291, -291, -291, -291, -291, -291, -291,
	1948, -1000, 21536, 21536, 21536, 1459, 294, -1000, -1000, -1000,
	-291, 21536, -1000, -1000, 2639, -1000, 21536, -1000, 33376, 21536,
	21536, 21536, -1000, -1000, -1000, 21536, 21536, -1000, -1000, 21536,
	-1000, 21536, -1000, -1000, -1000, -1000, -1000, -1000, 21536, -1000,
	21536, -1000, -1000, -1000, 21536, -1000, 21536, -1000, -1000, 21536,
	-1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536,
	-1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536,
	-1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536,
	-1000, 21536, -1000, 21536, -1000, -1000, -1000, 21536, -1000, 21536,
	-1000, 21536, -1000, -1000, 21536, -1000, 21536, -1000, 21536, -1000,
	21536, 21536, -1000, 21536, 21536, 21536, -1000, 21536, 21536, 21536,
	21536, -1000, -1000, -1000, -1000, 21536, 21536, 21536, 21536, 21536,
	21536, 21536, 21536, 21536, 21536, -1000, -1000, -1000, -1000, -1000,
	-1000, 21536, -1000, 39296, 3, -291, 1207, 3, 1207, 23016,
	814, 527, 22276, -1000, 21536, 15604, -1000, -1000, -1000, -1000,
	-1000, 21536, 21536, 21536, 21536, 21536, 21536, -1000, -1000, -1000,
	21536, 21536, -1000, 21536, -1000, 21536, -1000, -1000, -1000, -1000,
	-1000, 945, -1000, 449, 440, 843, 54096, -1000, -1000, -1000,
	-1000, 1952, -1000, 2564, -1000, 2252, 2251, 2638, 2624, 20796,
	-1000, 29676, -1000, -1000, 54096, -441, -1000, 2317, 2329, 856,
	856, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12620, 2516,
	21536, 2171, 54836, 226, -1000, 28196, 54096, 54836, 29676, 29676,
	29676, 29676, 29676, -1000, 2209, 2189, -1000, 2219, 2187, 2293,
	55576, -1000, 1535, 1714, -1000, 21536, 31896, 1893, 29676, -1000,
	-1000, 29676, 55576, 11874, -1000, -1000, 0, -14, -1000, -1000,
	-1000, -1000, 387, -1000, -1000, 1300, 2491, 2325, -1000, -1000,
	-1000, -1000, -1000, 1711, -1000, 1703, 1936, 1699, 1695, 334,
	-1000, 2046, 2402, 933, 933, -1000, 1270, -1000, 1353, 1692,
	1678, -1000, -1000, -1000, 443, -1000, 2454, 55576, 2168, 2167,
	2163, -1000, -541, 1259, 2087, 2010, 21536, 2086, 2596, 1903,
	54096, -1000, -1000, 54836, -1000, 270, -1000, 383, 54096, -1000,
	-1000, -1000, 324, 55576, -1000, 8238, -1000, -1000, -1000, 216,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 55576, 244, -1000,
	2083, 1339, -1000, -1000, 1782, -1000, -1000, -1000, -1000, -1000,
	190, 186, 1677, 199, 1637, 199, -1000, 55576, 929, 2182,
	55576, -1000, -1000, -1000, 1116, 1116, -1000, -1000, 2398, -1000,
	1353, 1820, 23756, 23756, -1000, 876, -1000, -1000, 543, -268,
	2080, 2080, -1000, 2080, 2081, -1000, 2080, 154, 2080, 147,
	2080, -1000, -1000, 1459, 1459, -1000, 1472, 2291, 1547, 2828,
	-1000, 1226, 21536, 2809, -1000, -1000, -291, -291, -291, -291,
	-291, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -75, 2799, 2794, 1820, -1000, 2079, 2074, -1000, 1820,
	21536, 1820, 1459, 2254, 1820, 1820, 1820, 1820, 1820, 1820,
	1820, 1820, 1820, 1820, 1820, 1820, 2222, 2206, 2193, 2183,
	2169, 2158, 2146, 2131, 2057, 2041, 2036, 2025, 2016, 2005,
	1976, 1972, 1820, 1820, 1963, 1820, 1954, 1931, -1000, 1226,
	1472, 2779, 1472, 1820, 1820, 2734, 327, 1820, 1663, 1663,
	1663, 1663, 1663, 1472, 1472, 1472, 1472, 1820, 54096, -1000,
	-291, -1000, -1000, -383, -388, -1000, 1459, -291, 1934, 23756,
	1820, 23756, 23756, 23756, 1820, 1459, -1000, 1926, 1922, 2666,
	1887, 1820, 2589, 1820, 1820, 1820, 1842, -1000, 2475, 2039,
	2475, 2039, 2475, 1635, 1178, 55576, -1000, -1000, -1000, -1000,
	2624, 2565, -1000, 1925, -1000, 67, 626, -1000, 2333, 2329,
	-1000, 2595, 2294, 2582, -1000, -1000, -1000, -1000, -1000, 1226,
	-1000, 2427, 1929, -1000, 956, 1935, -1000, -1000, 20056, 1661,
	2224, 779, 1635, 1921, 2473, 2138, 2160, 3003, -1000, -1000,
	-1000, -1000, 2188, -1000, 2156, -1000, -1000, 2060, -1000, 2348,
	335, 29676, 1889, 1889, -1000, 547, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1113, 8238, 2677, -1000, 1628, -1000, 1393,
	195, 1256, -1000, -1000, 933, 933, -1000, 1024, 1023, -1000,
	55576, 2072, -1000, 371, 1616, 371, 1254, -1000, -1000, 1243,
	-1000, -1000, -1000, -1000, 2004, 2181, -1000, -1000, -1000, -1000,
	55576, -1000, -1000, 55576, 55576, 55576, 2071, 2579, -1000, 21536,
	2070, 954, 2067, 54096, 54096, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 445, 933, -504, 292,
	281, 933, 933, 933, -542, -1000, -1000, 1632, 1624, -1000,
	-181, -1000, 21536, -1000, -1000, -1000, -1000, -1000, 1285, 1285,
	1602, 1596, 1584, -1000, 2060, -1000, -1000, -1000, 1720, -1000,
	-1000, -210, 54096, 54096, 54096, 54096, -1000, -1000, -1000, 1163,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 876, 1459, 396, -219, 1459, -1000, -1000, 371,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	21536, -1000, 21536, -1000, 21536, 1226, 21536, -1000, -1000, -1000,
	-1000, -1000, 2516, 1549, 21536, 21536, -1000, 1241, 1231, -291,
	1820, -1000, -1000, -1000, 21536, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21536, -1000,
	21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000,
	21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000,
	21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000, 21536, -1000,
	-1000, 21536, -1000, -1000, -1000, 21536, -1000, 21536, -1000, 21536,
	-1000, -1000, -1000, 21536, 303, 854, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1459, 326, -1000,
	-1000, -1000, 2637, -1000, 1459, 21536, 1146, -1000, 1146, 1146,
	1146, -1000, -1000, -1000, 21536, -1000, 21536, 21536, -1000, 21536,
	-1000, 21536, -1000, -1000, -1000, -1000, 21536, 2039, 2314, 38556,
	2039, 38556, 2039, 31896, -1000, -1000, 2565, 2621, 2572, 2283,
	2286, 2286, 2333, -1000, 2563, 2552, -1000, 1533, 2546, 1529,
	1013, -1000, 54836, 21536, -1000, 241, 37816, -1000, 382, 54096,
	241, 54096, -1000, 2567, -1000, -1000, 21536, 2066, -1000, 21536,
	-1000, -1000, -1000, -1000, 5073, 2624, 1889, -1000, -1000, 891,
	-1000, 21536, -1000, 9172, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1502, 1500, -1000, -1000, 2061, 21536, -1000, -1000,
	-1000, 1696, 1636, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2060, -1000, -1000, -1000, -1000, 324, -536, 2052, 54096,
	1209, -1000, 1608, 1903, 307, 241, 1498, 933, 933, 933,
	1198, 1171, 37816, 1589, -1000, 54096, 378, -1000, 324, -1000,
	-253, -255, 1820, -1000, -1000, 2484, -1000, -1000, 15604, -1000,
	-1000, 2056, 2117, -1000, -1000, -1000, -1000, 2220, -191, -222,
	-1000, -1000, 1820, 1820, 1820, 2267, 1459, -1000, 1820, 1820,
	1590, 1538, -1000, -1000, 1820, 1820, 1820, 1820, 1820, 1820,
	1820, 1820, 1820, 1820, 1820, 1820, 1820, 1820, 1820, 1820,
	1820, 1820, 1820, 1820, 1472, 1814, -1000, 303, 1459, 2154,
	-1000, -1000, 5073, -1000, -1000, 2567, 2539, 3, -1000, -1000,
	227, 3, 1226, 977, 1459, 1459, 977, 1810, 1820, 1805,
	1770, 1820, 1820, 32636, -1000, 2537, 2536, 1554, -1000, -1000,
	38556, 1554, 38556, 945, 2621, -303, 21536, 21536, 2280, 1173,
	-1000, -1000, -1000, -1000, 1479, 1477, -1000, 1412, -1000, 2676,
	-1000, 1226, -1000, 2039, 226, -1000, 535, 1935, -1000, 2516,
	1226, 54096, 1226, 65, 2567, -1000, 1820, -1000, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039,
	2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, 2039, -1000,
	-1000, 54096, 1911, -1000, -1000, 2483, 1587, 164, -1000, 1527,
	1903, -1000, -1000, 224, -1000, 21536, -1000, 37816, 1404, 1381,
	-1000, -1000, -1000, -1000, -542, -1000, -1000, -1000, -1000, -1000,
	-1000, 375, 1902, -1000, 918, 54096, 55576, -1000, 2213, -1000,
	-1000, -1000, -1000, 21536, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21536, -1000, 1459, 2152, -1000, -381, -1000, -510, 21536,
	-291, -1000, -1000, -291, -1000, -1000, -1000, -1000, -1000, 21536,
	-1000, -1000, 21536, -1000, 21536, -1000, -1000, 1554, -1000, -1000,
	-1000, 37076, -1000, 1554, -1000, 1554, -1000, -303, -1000, 1865,
	-1000, 54096, 1226, 322, -1000, 1167, -1000, -1000, -1000, -1000,
	-1000, 54836, 54096, 1935, 54096, -1000, -1000, 1543, 1459, 2039,
	2516, -1000, 1526, -1000, 375, -1000, 2049, 2010, -1000, -1000,
	-1000, 19316, -1000, -1000, -1000, -1000, -1000, 260, -199, 15604,
	11128, 1475, -1000, -194, 1820, 1472, -1000, -480, -1000, -1000,
	-1000, -1000, 300, -1000, -1000, 1859, -1000, -1000, 1709, 1563,
	1541, -1000, -1000, -1000, -1000, -1000, -1000, -303, -1000, -1000,
	2464, -1000, -265, -1000, -1000, 1856, 1458, -1000, -1000, -1000,
	31896, 53356, -1000, -176, 388, -199, 21536, 2045, 1459, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -53, -1000, -1000,
	530, -1000, -1000, -1000, 1782, -220, -1000, -1000, -1000, 305,
	-495, -277, -296, 23756, -1000, 21536, -1000, 21536, -1000, 21536,
	-1000, 54096, 2039, -1000, -1000, -1000, 1453, -1000, 5564, -399,
	2151, -1000, -147, -1000, -1000, -1000, 1084, 1361, -1000, -1000,
	-1000, -1000, -1000, -1000, 1836, 54096, -1000, 389, -1000, -1000,
	14858, -210, -233, 994, -1000, -1000, -1000, -1000, -1000, 1146,
	1537, 1447, 1820, -1000, 54096, -1000, 53356, -394, 871, 5073,
	-1000, 2149, 2147, 2634, -1000, -1000, -1000, -1000, -1000, -1000,
	-550, 1377, 232, -1000, -1000, -1000, 305, -314, -1000, 21536,
	-1000, 21536, -1000, 1459, -1000, -1000, 2452, 65, -1000, 2675,
	-1000, 2663, 968, 968, -1000, 1159, -550, -1000, -1000, -1000,
	-1000, 1820, 1820, -1000, -400, -1000, -1000, -1000, -1000, -1000,
	390, 1228, -1000, -1000, -1000, -1000, -1000, 5073, -1000, -1000,
	-1000, 221, 221, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3372, 3371, 31, 7, 40, 39, 3370, 3367, 3355,
	170, 3354, 3346, 3345, 3344, 3341, 3340, 2779, 2774, 2765,
	3284, 3281, 3279, 3277, 3276, 3273, 3264, 3263, 3262, 27,
	115, 105, 93, 218, 197, 3261, 3260, 168, 156, 189,
	3259, 3257, 3255, 113, 179, 80, 83, 184, 3253, 3251,
	68, 3245, 3242, 3231, 178, 176, 175, 1062, 3230, 174,
	112, 45, 3229, 3228, 3227, 3226, 3225, 3222, 3221, 3220,
	3216, 3214, 3212, 3210, 3208, 3206, 3200, 3199, 3198, 3197,
	308, 3195, 3194, 16, 3193, 63, 3189, 3187, 3186, 3185,
	3183, 8, 3182, 3181, 32, 41, 55, 3178, 3176, 44,
	3175, 3173, 3168, 3167, 3166, 79, 3163, 14, 3161, 35,
	3160, 3158, 125, 3157, 3156, 3155, 42, 3154, 3151, 3149,
	11, 162, 3148, 3147, 137, 3146, 3144, 3143, 167, 215,
	3140, 2305, 3138, 96, 3137, 3131, 3130, 161, 186, 3128,
	119, 3124, 3122, 3116, 147, 3115, 3900, 3114, 3112, 91,
	62, 241, 3111, 3109, 204, 73, 9, 3108, 22, 23,
	3107, 3103, 72, 61, 3102, 106, 3101, 3100, 99, 90,
	3097, 101, 94, 3095, 3091, 10, 5, 3090, 1, 4,
	2, 64, 3077, 3072, 110, 3063, 3062, 3061, 89, 3060,
	3056, 5968, 3055, 92, 131, 98, 65, 3054, 169, 165,
	3051, 3050, 3047, 3045, 3042, 3040, 47, 3039, 3038, 3037,
	135, 1272, 116, 3036, 151, 352, 50, 146, 3026, 212,
	75, 192, 163, 3025, 3023, 133, 130, 3022, 3017, 53,
	166, 338, 3016, 97, 129, 118, 183, 85, 134, 3013,
	2993, 58, 69, 2988, 2987, 2984, 2981, 164, 2979, 2974,
	60, 2973, 56, 2971, 195, 2970, 340, 77, 2969, 185,
	159, 2968, 59, 2965, 2957, 81, 121, 57, 29, 2947,
	154, 157, 126, 180, 2945, 2944, 52, 2942, 2940, 2932,
	187, 309, 2921, 2920, 251, 172, 139, 143, 82, 2918,
	325, 2916, 2909, 2907, 19, 5024, 4624, 188, 28, 160,
	2904, 2897, 1063, 48, 51, 13, 2891, 210, 2887, 194,
	2885, 2883, 2882, 190, 207, 102, 155, 54, 2879, 2877,
	2874, 2873, 71, 2869, 2868, 2867, 2866, 2860, 2859, 38,
	37, 36, 66, 234, 67, 25, 95, 153, 148, 74,
	2858, 2856, 2851, 122, 84, 2849, 152, 150, 123, 104,
	2846, 173, 145, 111, 2845, 103, 34, 2843, 2842, 2841,
	2837, 87, 2835, 2827, 2824, 2822, 149, 141, 120, 76,
	2817, 78, 117, 144, 142, 49, 2815, 43, 2807, 2797,
	33, 182, 17, 2796, 21, 100, 114, 2793, 6961, 2791,
	12, 267, 158, 2790, 2785, 15, 18, 6, 2773, 2772,
	2767, 2766, 132, 2757, 2756, 2755, 2749, 26, 46, 24,
	20, 107, 136, 70, 2723, 2719, 138, 2715, 2707, 2699,
	0, 1041, 127, 2694, 199,
}

//line sql.y:8761
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 418, 419, 419, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 262, 388, 260, 260, 28, 75, 37, 37, 36,
	36, 39, 39, 38, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 35,
	15, 16, 34, 34, 34, 17, 17, 110, 110, 18,
	19, 19, 19, 19, 422, 422, 186, 186, 184, 184,
	185, 185, 265, 265, 20, 269, 269, 271, 271, 271,
	271, 261, 261, 261, 21, 21, 270, 270, 272, 272,
	272, 275, 275, 275, 275, 316, 316, 316, 22, 22,
	22, 22, 22, 130, 130, 390, 390, 389, 384, 384,
	383, 383, 382, 387, 387, 386, 386, 385, 41, 42,
	51, 51, 51, 51, 52, 53, 391, 391, 357, 58,
	58, 57, 57, 57, 57, 57, 57, 59, 59, 55,
	55, 54, 54, 56, 56, 359, 359, 345, 345, 358,
	358, 358, 358, 358, 358, 358, 344, 344, 141, 141,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 406, 406, 406,
	405, 405, 240, 240, 240, 240, 240, 240, 240, 240,
	150, 150, 162, 162, 162, 162, 162, 162, 148, 148,
	149, 147, 147, 147, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 161, 161, 156, 156, 156, 158, 158,
	157, 157, 157, 159, 159, 407, 407, 407, 407, 322,
	322, 322, 322, 325, 325, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 324, 324, 324, 324, 324, 324,
	324, 326, 326, 326, 326, 326, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 328, 328, 328, 328, 328, 328, 328,
	328, 343, 343, 332, 332, 337, 337, 338, 338, 339,
	339, 339, 340, 340, 340, 341, 341, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 336, 336, 335, 335,
	335, 346, 371, 371, 370, 370, 368, 368, 368, 368,
	368, 368, 368, 368, 355, 355, 365, 365, 365, 365,
	365, 354, 354, 350, 350, 350, 351, 351, 352, 352,
	349, 349, 353, 353, 367, 367, 366, 366, 347, 347,
	348, 348, 373, 408, 408, 408, 408, 408, 409, 409,
	374, 398, 400, 400, 400, 399, 399, 396, 397, 395,
	395, 395, 395, 395, 85, 85, 85, 288, 288, 289,
	289, 363, 363, 362, 362, 362, 364, 364, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 283,
	283, 283, 394, 394, 394, 394, 394, 394, 393, 393,
	393, 360, 360, 360, 360, 392, 392, 60, 60, 220,
	220, 411, 411, 413, 413, 413, 48, 48, 48, 48,
	48, 48, 47, 47, 47, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 49, 49, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 44, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 112, 112, 113, 113, 113, 113, 115, 115, 115,
	376, 376, 61, 61, 3, 3, 174, 176, 177, 177,
	175, 175, 175, 175, 175, 175, 63, 63, 62, 62,
	179, 178, 180, 180, 180, 1, 1, 2, 2, 4,
	4, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 342, 342, 342, 375, 375, 377, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 118,
	117, 117, 116, 119, 119, 119, 119, 119, 119, 119,
	119, 379, 379, 379, 64, 64, 380, 329, 330, 331,
	5, 6, 356, 378, 126, 126, 24, 40, 40, 25,
	25, 25, 25, 26, 26, 65, 68, 68, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 293, 293, 282, 282, 291, 291,
	281, 281, 307, 307, 307, 284, 284, 284, 285, 285,
	404, 404, 404, 278, 278, 67, 67, 67, 308, 308,
	308, 308, 70, 70, 414, 414, 415, 415, 416, 416,
	416, 71, 72, 72, 311, 311, 312, 312, 73, 74,
	86, 86, 86, 86, 86, 87, 87, 87, 87, 111,
	111, 111, 10, 10, 10, 10, 82, 82, 82, 9,
	9, 11, 69, 69, 76, 401, 401, 402, 403, 403,
	403, 403, 77, 79, 27, 27, 27, 27, 27, 27,
	136, 136, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 131, 131, 131, 125, 125, 423,
	80, 81, 81, 129, 129, 129, 122, 122, 122, 128,
	128, 128, 12, 12, 13, 264, 264, 14, 14, 135,
	135, 134, 134, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 132, 132, 133, 133, 133, 133,
	300, 300, 300, 299, 299, 168, 168, 170, 169, 169,
	171, 171, 172, 172, 172, 172, 218, 218, 194, 194,
	257, 257, 258, 258, 256, 256, 263, 263, 259, 259,
	259, 259, 266, 266, 173, 173, 173, 173, 181, 181,
	182, 182, 183, 183, 310, 310, 305, 305, 305, 304,
	304, 187, 187, 187, 189, 188, 188, 188, 188, 190,
	190, 192, 192, 191, 191, 193, 198, 198, 197, 197,
	195, 195, 195, 195, 195, 195, 196, 196, 196, 196,
	199, 199, 146, 146, 146, 146, 146, 146, 146, 146,
	412, 412, 160, 160, 160, 160, 160, 160, 160, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	247, 247, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 223, 223, 222, 222, 88, 88, 88, 89,
	89, 90, 90, 90, 90, 90, 91, 91, 91, 91,
	91, 91, 91, 93, 93, 92, 92, 213, 213, 297,
	297, 94, 95, 95, 96, 96, 99, 99, 98, 97,
	97, 103, 103, 100, 100, 102, 102, 101, 104, 104,
	105, 106, 106, 279, 279, 200, 200, 209, 209, 209,
	209, 201, 201, 202, 202, 202, 202, 202, 202, 210,
	210, 210, 217, 211, 211, 207, 207, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 165, 165, 165, 165, 228, 228, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 153, 153, 166, 166, 166, 166, 167, 167,
	167, 167, 167, 167, 167, 318, 318, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 424, 424, 333, 333, 333,
	208, 208, 208, 208, 208, 127, 127, 127, 127, 127,
	315, 315, 315, 319, 319, 319, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 320, 320, 226, 226, 123, 123, 224, 224, 225,
	227, 227, 219, 219, 219, 219, 221, 221, 204, 204,
	204, 229, 229, 321, 321, 230, 230, 107, 108, 108,
	109, 109, 231, 231, 233, 232, 232, 234, 235, 235,
	235, 236, 236, 237, 237, 237, 50, 50, 50, 50,
	50, 45, 45, 45, 45, 46, 46, 46, 46, 138,
	138, 138, 138, 140, 140, 139, 139, 83, 83, 84,
	84, 84, 144, 144, 145, 145, 145, 142, 142, 143,
	143, 254, 254, 254, 254, 254, 254, 254, 238, 238,
	238, 245, 245, 245, 241, 241, 243, 243, 243, 244,
	244, 244, 242, 251, 251, 253, 253, 252, 252, 248,
	248, 249, 249, 250, 250, 250, 246, 246, 203, 203,
	203, 203, 203, 255, 255, 255, 255, 309, 309, 309,
	267, 267, 214, 214, 216, 216, 215, 215, 164, 268,
	268, 276, 273, 273, 274, 274, 301, 301, 301, 277,
	277, 290, 290, 286, 286, 287, 287, 280, 280, 292,
	292, 292, 78, 212, 212, 372, 372, 369, 296, 296,
	298, 298, 302, 302, 306, 306, 303, 303, 8, 417,
	417, 417, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 420, 421, 313, 314, 314, 314,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 2,
	5, 7, 10, 9, 1, 7, 8, 1, 1, 10,
	11, 9, 8, 8, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 1, 3, 3, 3, 3,
	3, 1, 1, 2, 5, 4, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 0, 1, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 1, 2, 2, 2, 0, 1, 4,
	4, 4, 4, 4, 4, 2, 4, 1, 3, 1,
	1, 3, 4, 3, 3, 3, 5, 10, 0, 2,
	0, 2, 3, 5, 3, 4, 2, 3, 2, 3,
	3, 3, 3, 2, 2, 4, 4, 1, 1, 1,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 2,
	1, 1, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 2, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 2, 0, 2, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 5, 5, 4, 4, 4, 6,
	5, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 3, 3, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 6, 10, 7, 5, 5, 5, 5, 7,
	5, 5, 5, 5, 5, 7, 7, 5, 5, 5,
	5, 0, 6, 5, 6, 4, 5, 0, 8, 9,
	0, 3, 0, 1, 0, 3, 8, 4, 1, 3,
	3, 6, 7, 7, 8, 4, 0, 1, 0, 1,
	3, 3, 1, 1, 2, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 3, 3, 0, 2, 2, 2, 2, 2, 2,
	2, 4, 4, 3, 0, 1, 4, 3, 4, 4,
	3, 3, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 4, 5, 5, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 5, 3, 5, 0, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 1, 1, 2, 1, 3, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 3, 2,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 4,
	4, 4, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 1, 2, 3, 7,
	0, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 5, 5, 0, 2, 3, 3,
	0, 2, 3, 3, 3, 2, 3, 1, 3, 6,
	1, 1, 3, 4, 3, 4, 4, 4, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 5, 5,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 5, 6,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	4, 2, 4, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 1, 0, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 4, 8,
	8, 6, 8, 6, 5, 4, 10, 2, 2, 1,
	2, 2, 2, 2, 2, 5, 6, 6, 6, 6,
	6, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 8, 4, 8, 8, 6, 5, 4, 4, 4,
	5, 7, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 6, 4, 6, 4, 4, 4, 4, 4, 4,
	6, 4, 6, 4, 4, 4, 6, 4, 6, 4,
	4, 6, 4, 6, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 4, 4, 6, 4, 6, 4, 8,
	6, 4, 4, 6, 4, 6, 8, 4, 6, 8,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 4, 4, 6, 4, 6, 5, 9, 6,
	9, 8, 6, 8, 8, 8, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 6, 8, 10,
	12, 14, 6, 8, 8, 10, 12, 14, 6, 8,
	10, 12, 6, 8, 4, 4, 3, 4, 6, 6,
	4, 6, 4, 6, 8, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 5, 1, 1, 1, 2,
	2, 0, 4, 0, 2, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 3, 4, 2, 3, 4, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 3, 1,
	6, 5, 4, 1, 3, 3, 5, 0, 2, 5,
	0, 5, 1, 3, 1, 2, 3, 4, 1, 1,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -418, -80, -423, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -65, -68,
	-66, -67, -70, -71, -72, -73, -74, -9, -11, -69,
	-27, -28, -75, -76, -77, -78, -79, -12, -13, -14,
	-8, -32, -31, -30, 13, 14, -110, -36, 35, -41,
	-51, 239, -52, -42, 240, -53, 242, 241, 279, 243,
	395, 272, 83, 328, 329, 331, 332, 333, 334, -111,
	702, 277, 278, 245, 39, 51, 36, 37, 40, 249,
	285, 286, 248, 145, -33, -37, 12, -420, 15, 485,
	274, 273, 31, -34, 595, 95, -35, 63, -81, -419,
	750, -254, -238, 26, 36, 32, -237, -233, -129, -238,
	24, 22, 11, -80, -80, -80, 16, 17, -80, -357,
	-359, 95, 172, 95, -80, -58, -57, -55, -54, -56,
	-59, 34, -48, -49, -381, -47, -44, 244, 241, 289,
	135, 136, 279, 280, 281, 243, 263, 278, 282, 277,
	298, -43, 90, 36, 595, 598, -364, 240, 246, 247,
	242, 486, 138, 137, 84, -361, 390, 629, 720, -59,
	722, 110, 113, 721, 50, 253, 723, 724, 725, 636,
	726, 262, 727, 728, 729, 730, 736, 677, 737, 738,
	739, 139, 11, -80, -306, -302, 100, -295, 592, 265,
	627, 439, 628, 314, 90, 47, 42, 531, 602, 386,
	390, 629, 516, 720, 396, 328, 346, 340, 521, 522,
	523, 369, 361, 593, 630, 603, 317, 266, 302, 714,
	359, 148, 722, 321, 631, 280, 397, 398, 632, 399,
	110, 331, 436, 735, 320, 633, 733, 113, 721, 336,
	88, 515, 57, 717, 50, 275, 444, 445, 357, 248,
	353, 723, 303, 634, 605, 296, 138, 135, 742, 39,
	349, 56, 33, 732, 137, 55, 724, 163, 635, 725,
	636, 401, 376, 708, 54, 402, 281, 637, 93, 286,
	597, 325, 716, 403, 536, 350, 404, 313, 731, 245,
	638, 324, 697, 689, 690, 405, 406, 709, 381, 377,
	382, 538, 639, 428, 520, 407, 693, 694, 749, 58,
	640, 641, 710, 136, 642, 87, 726, 89, 344, 345,
	643, 311, 264, 541, 542, 430, 373, 498, 127, 505,
	506, 120, 121, 501, 122, 507, 123, 128, 508, 509,
	510, 499, 124, 117, 500, 511, 512, 374, 375, 125,
	513, 119, 118, 502, 504, 126, 514, 262, 38, 408,
	594, 315, 64, 319, 290, 431, 52, 379, 746, 51,
	704, 543, 644, 707, 372, 368, 495, 59, 645, 646,
	647, 648, 517, 727, 371, 343, 367, 741, 4, 308,
	490, 518, 728, 68, 247, 384, 383, 385, 297, 427,
	364, 649, 650, 651, 269, 91, 652, 354, 25, 653,
	654, 409, 304, 655, 62, 656, 657, 434, 278, 658,
	60, 729, 45, 659, 283, 743, 730, 660, 661, 662,
	703, 663, 285, 664, 411, 665, 691, 692, 410, 378,
	380, 544, 292, 412, 395, 250, 596, 666, 326, 348,
	282, 734, 667, 270, 532, 533, 534, 535, 715, 540,
	539, 284, 289, 277, 435, 271, 668, 669, 670, 671,
	672, 318, 688, 673, 674, 332, 600, 736, 496, 49,
	675, 676, 677, 678, 679, 312, 307, 429, 438, 67,
	92, 392, 680, 681, 713, 342, 337, 43, 305, 99,
	476, 478, 479, 480, 481, 482, 477, 484, 682, 329,
	61, 737, 738, 739, 299, 740, 524, 525, 526, 527,
	13, 578, 561, 589, 562, 579, 563, 572, 564, 580,
	588, 590, 545, 553, 546, 554, 584, 567, 581, 573,
	566, 565, 587, 570, 574, 547, 555, 585, 571, 548,
	556, 549, 557, 550, 558, 583, 582, 575, 586, 551,
	559, 577, 552, 560, 576, 568, 569, 447, 747, 748,
	519, 414, 139, 309, 310, 53, 365, 291, 683, 322,
	684, 355, 356, 492, 493, 370, 341, 366, 700, 330,
	339, 698, 293, 415, 497, 279, 685, 437, 306, 387,
	131, 338, 393, 323, 601, 537, 298, 416, 712, 599,
	528, 529, 363, 360, 300, 530, 686, 388, 702, 417,
	254, 294, 295, 687, 699, 418, 419, 316, 420, 421,
	422, 423, 424, 426, 327, 425, 701, 695, 696, 301,
	475, 598, 335, 358, 394, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 494, 252, -80, 252, -191, -302, -131,
	704, 706, 191, -273, 398, -291, 400, 413, 408, 418,
	406, -282, 409, 411, 292, -404, 428, 252, 415, 239,
	401, 410, 419, 420, 316, 426, 421, 327, 425, 301,
	422, 423, 424, -388, 191, 725, 740, 330, 338, 148,
	362, 405, 403, 429, 704, 100, -308, 100, 101, 102,
	-295, 330, -311, 335, -296, -388, -295, 333, -80, -80,
	-313, -313, -131, -211, -146, 156, -160, -262, -163, 101,
	-151, -154, -205, -206, -207, -208, -161, -221, -260, 180,
	181, 188, 157, -217, -164, 29, 591, 487, 486, 191,
	34, 234, 77, 78, 489, 490, 159, 63, 15, 452,
	453, -162, 442, 443, 454, 448, 449, 515, 517, 518,
	519, 516, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 520, 531, 492, 493, 129, 494, 117, 119,
	118, 127, 128, 495, 496, 497, 359, 543, 544, 538,
	541, 542, 540, 539, 374, 375, 498, 561, 562, 566,
	565, 563, 564, 567, 570, 571, 572, 573, 574, 575,
	577, 576, 568, 569, 546, 545, 547, 548, 549, 550,
	551, 552, 554, 553, 555, 556, 557, 558, 559, 560,
	578, 579, 580, 581, 582, 584, 583, 588, 587, 585,
	586, 590, 589, 499, 500, 120, 121, 122, 123, 124,
	125, 126, 501, 504, 502, 503, 505, 506, 507, 512,
	513, 508, 509, 510, 511, 514, 385, 383, 384, 380,
	379, 378, -90, -103, 618, 617, -104, 439, 444, 445,
	447, -152, -153, -166, -167, -296, -302, 257, 441, 251,
	186, 485, -155, -149, -219, 116, 102, -31, -215, 440,
	450, 451, 455, 446, 456, 604, 606, 621, 622, 624,
	609, 614, 613, 616, 532, 533, 534, 535, 536, 537,
	689, 690, 691, 692, 693, 694, 695, 696, -388, -295,
	100, -158, -156, -200, 103, 108, 111, 112, 114, -410,
	275, 355, 356, 130, -420, 718, -157, 105, 106, 107,
	132, 133, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 98, 104, 50, 414, 414, -191,
	-80, -80, -80, -80, -417, 721, 596, -231, -129, -233,
	-33, -31, -420, 12, -80, -31, -32, -30, -37, -39,
	623, -38, -302, 115, 109, -238, -254, 16, 67, 175,
	48, 56, -236, -237, -34, -31, -146, 23, 41, 27,
	-133, 182, -146, -302, -133, -280, 256, -80, -80, -269,
	-316, 330, -271, 429, 704, 428, -261, -274, 100, -260,
	-273, 427, 101, -358, 172, -344, -348, -296, 267, -374,
	263, -191, -367, -366, -296, -420, -130, -290, 253, 261,
	260, 149, -391, 152, 309, 441, 251, -54, -55, -56,
	-273, 190, 724, -112, 284, 288, 96, 96, -348, -347,
	-346, -392, 288, 267, -373, -365, 259, 268, -354, 260,
	261, -349, 253, 150, -392, -349, 258, 268, 263, 267,
	288, 288, 139, 288, 139, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 283, -355, 164, -355, 599, 599,
	-361, -392, 263, 253, -392, -392, 259, -292, -349, 255,
	28, 255, 38, 38, -355, -355, -355, -273, 190, -355,
	-355, -355, -355, 296, 296, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, 252, -391, -138, 425, 316, 90, -57, 298,
	-40, -191, -290, 253, 254, -391, 285, -191, 235, 252,
	707, -284, 172, 19, -284, -281, 414, 412, 399, 404,
	-284, -284, -284, -284, 299, 397, -350, 253, 38, 264,
	414, 299, 397, 299, 300, 299, 300, 407, 417, 299,
	-307, 18, 175, 441, 402, 406, 292, 252, 293, 254,
	416, 300, -307, 98, -285, 172, 299, 414, 408, 295,
	-284, -284, -314, -420, -298, -296, -294, 244, 41, 155,
	28, 30, 158, 191, 142, 23, 159, 40, 246, 362,
	263, 190, 259, 486, 239, 81, 604, 442, 449, 440,
	448, 452, 488, 489, 441, 400, 34, 17, 606, 31,
	273, 27, 44, 184, 241, 162, 607, 276, 29, 274,
	129, 133, 609, 26, 84, 268, 18, 261, 46, 20,
	610, 611, 21, 74, 257, 256, 175, 253, 79, 15,
	234, 32, 171, 75, 612, 150, 145, 613, 614, 615,
	616, 143, 77, 172, 24, 744, 450, 451, 36, 705,
	591, 287, 186, 82, 65, 706, 156, 446, 617, 618,
	130, 619, 134, 85, 711, 152, 22, 80, 48, 620,
	288, 621, 258, 745, 622, 432, 623, 173, 242, 485,
	78, 174, 718, 624, 719, 251, 413, 12, 491, 35,
	272, 260, 73, 72, 141, 76, 456, 625, 252, 161,
	255, 144, 132, 11, 149, 37, 16, 83, 86, 453,
	454, 455, 63, 140, 595, 160, 19, 626, 433, 154,
	-388, 707, -314, -314, 299, 339, 35, 101, -414, -415,
	-416, 595, 432, 255, -296, -191, -86, 697, 243, -87,
	703, 41, 250, -136, 414, -124, 191, 725, 708, 709,
	710, 707, 411, 715, 713, 711, 299, 712, 96, 152,
	154, 155, 4, -146, 171, -201, -202, 170, 164, 165,
	166, 167, 168, 169, 176, 175, 156, 158, 172, -247,
	153, 177, 178, 179, 180, 181, 182, 183, 185, 184,
	186, 187, 173, 174, 190, 237, 238, -154, -154, -154,
	-154, -217, -223, -222, -420, -219, -388, -295, -302, -420,
	-420, -154, -279, -420, -151, -420, -420, -420, -420, -420,
	-226, -146, -420, -420, -424, -420, -424, -424, -424, -333,
	-420, -333, -333, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, 235, -420,
	-420, -420, -420, -420, -333, -333, -333, -333, -333, -333,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, 98, 112, 108, 111, 103, -221,
	114, 98, 98, 98, 98, -31, -32, -211, 63, -420,
	-313, -401, -402, -194, -191, -420, 316, -296, -296, 285,
	105, -236, -34, -31, -231, -237, -233, -31, -80, -122,
	-135, 69, 70, -134, -137, 27, 44, 74, 76, 99,
	72, 73, 71, 41, -421, 97, -421, -254, -421, 96,
	-39, -257, 95, 651, 681, 651, 681, 67, 49, 98,
	98, 96, 25, -232, -234, -146, 18, -300, 4, -299,
	28, -296, 98, 235, 18, -192, 32, -191, -280, -280,
	96, 100, 330, -270, -272, 430, 432, 164, -301, -296,
	98, 34, 97, 96, -191, -322, -325, -327, -326, -328,
	-323, -324, 359, 360, 191, 363, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 376, 388, 35, 275, 355,
	356, 357, 358, 377, 378, 379, 380, 382, 383, 384,
	385, 340, 361, 593, 341, 342, 343, 344, 345, 346,
	348, 349, 352, 350, 351, 353, 354, -297, -296, 95,
	97, 96, -332, 95, -146, -138, 252, -296, 253, 253,
	253, -80, 485, -355, -355, -355, 283, 23, -47, -44,
	-381, 22, -43, -44, 244, 135, 136, 241, 95, -344,
	95, -353, -297, -296, 95, 150, 258, 149, -352, -349,
	-352, -353, -296, -219, -296, 150, 150, -296, -296, -266,
	-296, -266, -266, 41, -266, 41, -266, 41, 105, -296,
	-266, 41, -266, 41, -266, 41, -266, 41, -266, 41,
	34, 87, 88, 89, 34, 91, 92, 93, -219, -296,
	-296, -219, -344, -219, -191, -296, -273, 105, 105, 105,
	-355, -355, 105, 98, 98, 98, -355, -355, 105, 98,
	-304, -302, 98, 98, -393, 269, 313, 315, 105, 105,
	105, 105, 34, 98, -394, 34, 732, 731, 733, 734,
	735, 98, 105, 34, 105, 34, 105, -296, 95, -191,
	-144, 303, 239, 241, 244, 85, 98, 321, 319, 320,
	317, 322, 323, 324, 164, 50, 96, 255, 252, -296,
	-286, 257, -286, -296, -303, -302, -294, -191, 255, 396,
	98, -146, -351, 18, 175, -307, -307, -284, -191, -351,
	-307, -284, -191, -284, -284, -284, -284, -307, -307, -307,
	-284, -302, -302, -191, -191, -191, -191, -191, -191, -191,
	-314, -285, -284, 707, 98, -278, 18, 85, -314, -314,
	-293, 26, 26, 96, 336, 433, 434, -312, 333, -82,
	-296, 98, -10, -29, -18, -17, -19, 164, -10, 96,
	595, -184, -191, 707, 707, 707, 707, 707, 707, -146,
	-146, -146, -146, 619, -209, -412, 156, 132, 133, 130,
	131, -163, 42, 43, 41, -146, -210, -215, -217, 115,
	175, 158, 172, -247, -151, -154, -151, -151, -151, -151,
	-151, -151, 234, -151, 234, -151, -151, -151, -151, -151,
	-151, -315, -296, 98, 191, -159, -158, 114, -410, -159,
	592, 96, -222, 235, -146, -146, -388, -120, 458, 459,
	460, 461, 463, 464, 465, 468, 469, 473, 474, 457,
	475, 462, 467, 470, 471, 472, 466, 358, -146, -212,
	-211, -212, -146, -146, -224, -225, 160, -219, -146, -421,
	-421, 105, 182, -128, 27, 44, -128, -128, -128, -128,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-128, -146, -121, 457, 475, 462, 467, 470, 471, 472,
	466, 358, 476, 477, 478, 479, 480, 481, 482, 483,
	484, -121, -120, -146, -146, -146, -146, -146, -146, -146,
	-146, -88, -146, 142, 143, 144, -211, -146, -151, -146,
	-146, -146, -421, -146, -146, -146, -212, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -387, -386, -385, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -211,
	-211, -211, -211, -211, -146, -421, -146, -165, -149, 105,
	-262, 114, 101, -146, -146, -146, -146, -146, -146, -212,
	-298, -303, -294, -295, -211, -212, -212, -211, -211, -146,
	-146, -146, -146, -146, -146, -146, -146, -421, -146, -146,
	-146, -146, -146, -254, -421, -211, 96, -403, 432, 433,
	705, -305, 288, -304, 28, -212, 98, 18, -264, 86,
	-296, -236, -236, 69, 70, 65, -132, -133, -137, -421,
	-38, 28, -256, -296, 644, 644, 68, 98, -334, -273,
	386, 387, 191, -146, -146, 96, -235, 30, 31, -191,
	-299, 182, -303, -191, -265, 288, -191, -169, -171, -172,
	-173, -194, -218, -420, -174, -31, 615, 612, 18, -184,
	-185, -193, -302, -271, -316, -270, 96, 431, 433, 434,
	85, 134, -146, -335, 190, -363, -362, -361, -344, -346,
	-347, -348, 97, -335, -340, 393, 392, -332, -332, -332,
	-332, -332, -334, -334, -334, -334, 95, -332, 95, -332,
	-332, -332, -332, -337, 95, -337, -337, -338, -337, 95,
	-338, -339, 95, -339, -374, -146, -371, -370, -368, -369,
	262, 110, 687, 643, 595, 636, 677, 86, -366, -235,
	105, -421, -144, -287, 257, -372, -369, -296, -296, -296,
	-287, 100, 98, 100, 98, 100, 98, -113, -61, -1,
	744, 745, 746, 96, 23, -345, -344, -60, 313, -377,
	-378, 288, -373, -367, -353, 150, -352, -353, -353, -296,
	96, 32, 139, 139, 139, 139, 595, 241, 35, -288,
	635, 156, 687, 643, -344, -60, 255, 255, -315, -315,
	-315, 98, 98, -283, 740, -184, -140, 305, 164, 294,
	294, 252, 307, 252, 307, -191, 318, 321, 319, 320,
	317, 322, 323, 324, 41, 41, 41, 41, 41, 41,
	41, 306, 308, 310, 296, -191, -191, -286, 85, -186,
	-191, 29, -302, 98, 98, -191, -284, -284, -191, -284,
	-284, -191, 98, -302, -416, 337, -296, 373, 698, 700,
	-124, 432, 96, 595, 26, -125, 26, -420, -412, 132,
	133, -217, -217, -217, -210, -151, -154, -151, 155, 276,
	-151, -151, -420, -219, -421, -298, 28, 96, 86, -421,
	180, 96, -421, -421, 96, 18, 96, -227, -225, 162,
	-146, -421, 96, -421, -421, -211, -146, -146, -146, -146,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-211, -421, 96, 96, 18, -319, 28, -421, -421, -421,
	-421, 96, -421, -421, -226, -421, 18, -421, 86, 96,
	175, 96, -421, -421, -421, 96, 96, -421, -421, 96,
	-421, 96, -421, -421, -421, -421, -421, -421, 96, -421,
	96, -421, -421, -421, 96, -421, 96, -421, -421, 96,
	-421, 96, -421, 96, -421, 96, -421, 96, -421, 96,
	-421, 96, -421, 96, -421, 96, -421, 96, -421, 96,
	-421, 96, -421, 96, -421, 96, -421, 96, -421, 96,
	-421, 96, -421, 96, -421, -421, -421, 96, -421, 96,
	-421, 96, -421, -421, 96, -421, 96, -421, 96, -421,
	96, 96, -421, 96, 96, 96, -421, 96, 96, 96,
	96, -421, -421, -421, -421, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, -421, -421, -421, -421, -421,
	-421, 96, -95, 620, -421, -421, 96, -421, 96, 96,
	96, 96, 96, -421, -420, 235, -421, -421, -421, -421,
	-421, 96, 96, 96, 96, 96, 96, -421, -421, -421,
	96, 96, -421, 96, -421, 96, -421, -402, 704, 433,
	-198, -197, -195, 83, 256, 84, -420, -304, -421, -159,
	-262, -263, -262, -204, -296, 105, 114, -238, -168, 96,
	-170, 18, -217, 97, 96, -334, -242, -248, -281, -296,
	98, 191, -336, 191, -336, 386, 387, -234, 235, -199,
	19, -203, 35, 63, -29, -420, -420, 35, 96, -187,
	-189, -188, -190, 75, 79, 81, 76, 77, 78, 82,
	-310, 28, -31, -169, -31, -420, -191, -184, -422, 18,
	86, -422, 96, 235, -272, -275, 435, 432, 438, -388,
	98, -112, 96, -361, -348, -239, -141, 46, -341, 394,
	-334, 603, -334, -343, 98, -343, 105, 105, 105, 97,
	-50, -45, -46, 36, 90, -368, -355, 98, 45, -355,
	-355, -296, 97, -235, -140, -191, 156, 85, -372, -372,
	-372, -302, -2, 743, 749, 150, 95, 399, 22, -256,
	96, 97, -220, 314, 97, -114, -296, 97, 95, -353,
	-353, -296, -420, 252, 34, 34, 687, 643, 635, -60,
	-220, -219, -296, -335, 742, 741, 97, 254, 312, -145,
	452, -142, 98, 100, -191, -191, -191, -191, -191, -191,
	244, 241, 422, -411, 325, -411, 297, 255, -184, -191,
	96, -85, 271, 266, -307, -307, 36, -191, 432, 716,
	714, -146, 155, 276, -163, -154, -120, -120, -151, -317,
	191, 359, 275, 357, 353, 373, 364, 392, 355, 393,
	350, 349, 348, -317, -315, -151, -211, -146, -146, -146,
	163, -146, 161, -146, -96, -95, -421, -421, -421, -421,
	-421, -96, -96, -96, -96, -96, -96, -96, -96, -96,
	-96, -231, -146, -146, -146, -421, 191, 359, -96, -146,
	18, -146, -315, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -385, -146,
	-211, -146, -211, -146, -146, -146, -146, -146, -386, -386,
	-386, -386, -386, -211, -211, -211, -211, -146, -420, -296,
	-99, -98, -97, 670, 256, -95, -165, -99, -165, 234,
	-146, 234, 234, 234, -146, -212, -298, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -195, -349, 294,
	-349, 294, -349, -266, 96, -277, 26, 18, 63, 63,
	-168, -199, -133, -169, -296, -245, 697, -251, 52, -249,
	-250, 53, -246, 54, 62, -336, -336, 182, -236, -146,
	-267, 85, -268, -276, -219, -214, -216, -215, -420, -255,
	-421, -296, -266, -268, -171, -172, -172, -171, -172, 75,
	75, 75, 80, 75, 80, 75, -188, -302, -421, -146,
	-305, 86, -169, -169, -193, -302, 182, 432, 436, 437,
	-361, -409, 130, 156, 34, 85, 390, 110, -407, 190,
	632, 682, 687, 643, 636, 677, -408, 258, 149, 150,
	270, 28, 47, 97, 96, 97, 96, 97, 97, 96,
	-289, -288, -46, -45, -355, -355, 105, -388, 98, 98,
	254, 29, -191, 85, 85, 85, -115, 747, 105, 95,
	-3, 90, -146, 95, 23, -344, -219, -379, -329, -380,
	-330, -331, -5, -6, -356, -118, 63, 110, -64, 50,
	253, 727, 728, 139, -420, 740, -371, -256, -375, -377,
	-191, -150, -420, -162, -148, -147, -149, -155, 180, 181,
	275, 355, 356, -220, -191, -139, 303, 311, 95, -143,
	101, -390, 86, 294, 390, 294, 390, 98, -413, 326,
	98, -413, -191, -85, -50, -191, -284, -284, 36, -388,
	-421, -163, -154, -127, 175, 595, -320, 602, -332, -332,
	-332, -339, -332, 345, -332, 345, -332, -421, -421, -421,
	96, -421, 26, -421, 96, -146, 96, -96, -96, -96,
	-96, -96, -123, 491, 96, 96, -421, 95, 95, -421,
	-146, -421, -421, -421, 96, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, 96, -421,
	96, -421, 96, -421, 96, -421, 96, -421, 96, -421,
	96, -421, 96, -421, 96, -421, 96, -421, 96, -421,
	96, -421, 96, -421, 96, -421, 96, -421, 96, -421,
	-421, 96, -421, -421, -421, 96, -421, 96, -421, 96,
	-421, -421, -421, 96, -318, 688, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -94, -297, -95,
	652, 652, -421, -95, -228, 96, -151, -421, -151, -151,
	-151, -421, -421, -421, 96, -421, 96, 96, -421, 96,
	-421, 96, -421, -421, -421, -421, 96, -196, 26, -420,
	-196, -420, -196, -421, -262, -191, -199, -229, 20, -242,
	57, 365, -253, -252, 61, 53, -250, 23, 55, 23,
	33, -267, 96, 164, -309, 96, 28, -421, -421, 96,
	63, 235, -421, -199, -182, -181, 85, 86, -183, 85,
	-181, 75, 75, -257, 96, -265, -169, -199, -199, 235,
	130, -420, -150, 16, 98, 98, -388, -406, 731, 732,
	34, 105, -355, -355, 150, 150, -191, 95, -334, 98,
	-334, 105, 105, 34, 91, 92, 93, 34, 87, 88,
	89, -191, -191, -191, -191, -376, 95, 23, -146, 95,
	164, 97, -256, -256, 290, 175, -355, 725, 296, 296,
	-355, -355, -355, -117, -116, 747, 97, -421, 96, -342,
	595, 598, -146, -156, -156, -257, 97, -384, 595, -389,
	-296, -296, -296, -296, 105, 107, -421, 593, 82, 596,
	-421, -334, -146, -146, -146, -146, -236, 98, -146, -146,
	105, 105, -96, -421, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -211, -146, -421, -179, -178, -180,
	708, 130, 34, -317, -421, -213, 288, -102, -101, -100,
	18, -421, -146, -120, -120, -120, -120, -146, -146, -146,
	-146, -146, -146, -420, 75, 22, 20, -259, -296, 258,
	-420, -259, -420, -305, -229, -230, 21, 23, -243, 59,
	-241, 58, -241, -252, 23, 23, 98, 23, 98, 150,
	-276, -146, -216, -304, 63, -29, -296, -214, -296, -231,
	-146, 95, -146, -159, -199, -199, -146, -206, 515, 517,
	518, 519, 516, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 520, 531, 492, 493, 494, 117, 119,
	118, 127, 128, 495, 496, 497, 359, 543, 544, 538,
	541, 542, 540, 539, 374, 375, 498, 561, 562, 566,
	565, 563, 564, 567, 570, 571, 572, 573, 574, 575,
	577, 576, 568, 569, 546, 545, 547, 548, 549, 550,
	551, 552, 554, 553, 555, 556, 557, 558, 559, 560,
	578, 579, 580, 581, 582, 584, 583, 588, 587, 585,
	586, 590, 589, 499, 500, 120, 121, 122, 123, 124,
	125, 126, 501, 504, 502, 505, 506, 507, 512, 513,
	508, 509, 510, 511, 514, 385, 383, 384, 380, 379,
	378, 439, 444, 445, 447, 532, 533, 534, 535, 536,
	537, 689, 690, 691, 692, 693, 694, 695, 696, 98,
	98, 95, -146, 97, 97, -257, -375, -61, 97, -258,
	-256, 105, 97, 291, -215, -420, 98, -355, -355, -355,
	105, 105, -304, -421, 96, -296, -408, -377, 599, 599,
	-421, 28, -383, -382, -298, 95, 86, 68, 594, 597,
	-421, -421, -421, 96, -421, -421, -421, 97, 97, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, 96, -421, -178, -180, -421, 85, -159, -231, 23,
	-99, 313, 315, -99, -421, -421, -421, -421, -421, 96,
	-421, -421, 96, -421, 96, -421, -421, -259, -421, 23,
	23, 96, -421, -259, -421, -259, -198, -230, -109, -108,
	-107, 626, -146, -211, -244, 60, 85, 134, 98, 98,
	98, 16, -420, -214, 235, -309, -236, -256, -176, 399,
	-231, -421, -256, 97, 28, 97, 749, 150, 97, -215,
	-126, -420, 287, -304, 98, 98, -116, -119, -29, 96,
	164, -256, -191, 68, -146, -211, -421, 85, 607, 708,
	-93, -92, -89, 719, 745, -211, -95, -95, -146, -146,
	-146, -421, -296, 258, -421, -421, -109, 96, -106, -105,
	-296, -321, 595, 85, 134, -268, -256, -309, -296, 97,
	-421, -420, -236, 97, -240, -29, 95, -3, 287, -329,
	-380, -330, -331, -5, -6, -356, -83, 595, -382, -360,
	-302, -298, 98, 105, 97, 595, -421, -421, -91, 158,
	717, 685, -156, 234, -421, 96, -421, 96, -421, 96,
	-107, 96, 28, 600, -421, -305, -177, -175, -296, 649,
	-399, -398, 591, -409, -405, 130, 156, 110, -407, 687,
	643, 140, 141, -83, -146, 95, -421, -84, 302, 704,
	235, -390, 596, -91, 718, 663, 638, 663, 638, -151,
	-146, -146, -146, -105, -420, -421, 96, 26, -322, -63,
	660, -396, -397, 85, -400, 405, 659, 680, 130, 98,
	97, -256, 263, -303, -384, 597, 155, -120, -421, 96,
	-421, 96, -421, -94, -175, 656, -335, -159, -397, 85,
	-396, 85, 17, 16, -4, 748, 97, 304, -91, 663,
	638, -146, -146, -421, -62, 29, -176, -395, 271, 266,
	269, 35, -395, 105, -4, -421, -421, 660, 265, 34,
	130, -159, -179, -178, -178,
}

var yyDef = [...]int{
	889, -2, -2, 891, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 889, 889, 889, 0, 889, 0,
	0, 889, -2, -2, 889, 1644, 0, 889, 0, 884,
	0, -2, 806, 812, 0, 821, -2, 0, 0, 889,
	889, 2283, 2283, 884, 0, 0, 0, 0, 0, 889,
	889, 889, 889, 1649, 1502, 50, 889, 0, 87, 88,
	839, 840, 841, 65, 0, 2281, 84, 0, 890, 1,
	3, 71, 75, 0, 0, 0, 58, 1511, 0, 78,
	0, 0, 893, 0, 0, 1627, 889, 889, 0, 128,
	129, 0, 0, 0, -2, 132, -2, 161, 162, 163,
	0, 168, 611, 529, 581, 527, 566, -2, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 404, 404, 0, 0, -2, 515, 515, 515,
	1629, 0, 0, 0, 563, 466, 404, 404, 404, 0,
	404, 404, 404, 404, 0, 0, 404, 404, 404, 404,
	404, 404, 404, 404, 404, 404, 404, 404, 404, 404,
	404, 404, 404, 1529, 167, 1645, 1642, 1643, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 0, 1621, 0, 724, 993, 0,
	885, 886, 0, 795, 795, 0, 795, 795, 795, 795,
	0, 0, 0, 738, 0, 0, 0, 0, 792, 0,
	754, 755, 0, 792, 0, 761, 798, 0, 0, 768,
	795, 795, 771, 2284, 0, 2284, 2284, 0, 0, 1612,
	0, 789, 787, 801, 802, 42, 805, 808, 809, 810,
	811, 814, 0, 825, 828, 1638, 1639, 0, 830, 835,
	852, 853, 0, 45, 1153, 0, 1017, 0, 1028, -2,
	1039, 1056, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 0,
	0, 0, 0, 1069, 1070, 0, 0, 0, 0, 0,
	1133, 0, 0, 0, 0, 2007, 1473, 0, 0, 1435,
	1435, 1169, 1435, 1435, 1437, 1437, 1437, 1858, 1999, 2008,
	2187, 1819, 1825, 1826, 1827, 2133, 2134, 2135, 2136, 2227,
	2228, 2232, 1921, 1814, 2200, 2201, 0, 2280, 1960, 1968,
	1969, 1945, 1954, 1993, 2095, 2211, 1837, 1988, 2058, 1918,
	1940, 1941, 2076, 2077, 1964, 1965, 1944, 2139, 2141, 2157,
	2158, 2143, 2145, 2154, 2160, 2165, 2144, 2156, 2161, 2174,
	2178, 2181, 2182, 2183, 2151, 2149, 2162, 2166, 2168, 2170,
	2176, 2179, 2152, 2150, 2163, 2167, 2169, 2171, 2177, 2180,
	2138, 2142, 2146, 2155, 2173, 2153, 2172, 2147, 2159, 2164,
	2175, 2148, 2140, 1958, 1961, 1948, 1949, 1951, 1953, 1959,
	1966, 1972, 1950, 1971, 1970, 0, 1946, 1947, 1952, 1963,
	1967, 1955, 1956, 1957, 1962, 1973, 2014, 2013, 2012, 2057,
	1984, 2056, 0, 0, 0, 0, 0, 1808, 1863, 1864,
	2184, 1357, 1358, 1359, 1360, 0, 0, 0, 0, 0,
	0, 0, 293, 294, 1486, 1487, 44, 1152, 1608, 1437,
	1437, 1437, 1437, 1437, 1437, 1091, 1092, 1093, 1094, 1095,
	1121, 1122, 1128, 1129, 2071, 2072, 2073, 2074, 1901, 2222,
	1910, 1911, 2053, 2054, 1923, 1924, 2254, 2255, -2, -2,
	-2, 234, 235, 236, 237, 238, 239, 240, 241, 0,
	1862, 2198, 2199, 230, 0, 0, 298, 295, 296, 297,
	1135, 1136, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 291, 292, 300, 301, 2283, 0, 862, 0,
	0, 0, 0, 0, 0, 1650, 1651, 1511, 0, 1503,
	1502, 63, 0, 889, -2, 0, 0, 0, 0, 47,
	0, 52, 950, 79, 892, 77, 76, 1551, 1554, 0,
	0, 0, 59, 1512, 67, 69, 1513, 0, 894, 895,
	0, 926, 930, 0, 0, 0, 1628, 1627, 1627, 104,
	0, 0, 105, 125, 126, 127, 0, 0, 111, 112,
	1614, 1615, 43, 0, 0, 179, 180, 0, 1109, 431,
	0, 175, 0, 424, 363, 0, 1529, 0, 0, 0,
	0, 0, 889, 0, 1622, 156, 157, 164, 165, 166,
	404, 404, 404, 578, 0, 0, 167, 167, 536, 537,
	538, 0, 0, -2, 429, 0, 516, 0, 0, 418,
	418, 422, 420, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 405, 0, 576, 577,
	467, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	1631, 0, 553, 554, 0, 0, 0, 404, 404, 0,
	0, 0, 0, 404, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 1542, 0, 0, 0, -2, 0,
	716, 0, 0, 0, 1623, 1623, 0, 723, 0, 0,
	0, 728, 0, 0, 729, 0, 792, 792, 790, 791,
	731, 732, 733, 734, 795, 0, 0, 413, 414, 415,
	792, 795, 0, 795, 795, 795, 795, 792, 792, 792,
	795, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2284, 798, 795, 0, 762, 0, 763, 764, 765, 766,
	769, 770, 772, 2285, 2286, 1640, 1641, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	2284, 2284, 776, 780, 784, 782, 1613, 807, 813, 815,
	816, 0, 0, 826, 829, 846, 49, 1909, 834, 49,
	836, 837, 838, 864, 865, 870, 0, 0, 0, 0,
	876, 877, 878, 0, 0, 881, 882, 883, 0, 0,
	0, 0, 0, 1015, 0, 0, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1040, 1041, 0, 0, 0, 1065, 1066, 1067,
	1068, 1071, 0, 1082, 0, 1084, 1482, -2, 0, 0,
	0, 1076, 1077, 0, 0, 0, 1633, 1633, 0, 0,
	0, 1474, 0, 0, 1167, 0, 1168, 1170, 1171, 1172,
	0, 1173, 1174, 899, 899, 899, 899, 899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 899, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1633, 0, 0,
	1633, 1633, 0, 0, 222, 223, 224, 225, 226, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 242, 243, 244, 245, 246,
	247, 302, 248, 249, 250, 1152, 0, 0, 0, 0,
	46, 854, 855, 0, 976, 1633, 0, 0, 905, 0,
	1648, 57, 66, 68, 1511, 61, 1511, 0, 909, 0,
	0, -2, -2, 910, 911, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 54, 2282, 55, 0, 74, 0,
	48, 0, 0, 1552, 0, 1555, 0, 0, 0, 377,
	1559, 0, 0, 1504, 1505, 1508, 0, 927, 2005, 931,
	0, 933, 934, 0, 0, 102, 0, 992, 0, 0,
	0, 113, 0, 115, 116, 0, 0, 0, 388, 1616,
	1617, 1618, -2, 411, 0, 388, 372, 310, 311, 312,
	363, 314, 363, 363, 363, 363, 377, 377, 377, 377,
	345, 346, 347, 348, 349, 0, 363, 0, 331, 363,
	363, 363, 363, 353, 354, 355, 356, 357, 358, 359,
	360, 315, 316, 317, 318, 319, 320, 321, 322, 323,
	365, 365, 365, 365, 365, 369, 369, 0, 1110, 0,
	392, 0, 1508, 0, 0, 1542, 1625, 1635, 0, 0,
	0, 1625, 134, 0, 0, 0, 579, 622, 530, 567,
	580, 0, 533, 534, -2, 0, 0, 515, 0, 517,
	0, 412, 0, -2, 0, 422, 0, 418, 422, 419,
	422, 410, 423, 557, 558, 559, 0, 561, 562, 652,
	962, 0, 0, 0, 0, 0, 658, 659, 660, 0,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 0,
	0, 0, 517, 0, 564, 0, 0, 468, 469, 470,
	0, 0, 473, 474, 475, 476, 0, 0, 479, 480,
	481, 979, 980, 482, 483, 508, 509, 510, 484, 485,
	486, 487, 488, 489, 490, 502, 503, 504, 505, 506,
	507, 491, 492, 493, 494, 495, 496, 499, 0, 149,
	1533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 908, 994, 1646, 1647, 725, 0, 0,
	796, 797, 0, 416, 417, 795, 795, 735, 777, 0,
	795, 739, 778, 740, 742, 741, 743, 756, 757, 795,
	746, 793, 794, 747, 748, 749, 750, 751, 752, 753,
	773, 758, 759, 760, 799, 0, 803, 804, 774, 775,
	0, 785, 0, 0, 0, 819, 820, 0, 827, 849,
	847, 848, 850, 842, 843, 844, 845, 0, 851, 0,
	0, 867, 98, 872, 873, 874, 875, 887, 880, 1154,
	1012, 1013, 1014, 0, 1016, 1022, 0, 1137, 1139, 1020,
	1021, 1024, 0, 0, 0, 1018, 1029, 1149, 1150, 1151,
	0, 0, 0, 0, 0, 1033, 1037, 1042, 1043, 1044,
	1045, 1046, 0, 1047, 0, 1050, 1051, 1052, 1053, 1054,
	1055, 1061, 1450, 1451, 1452, 1080, 303, 304, 0, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1153, 0,
	1634, 0, 0, 0, 1480, 1477, 0, 0, 0, 1436,
	1438, 0, 0, 0, 900, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 0, 0, 1453, 0, 0, 0, 0, 0, 0,
	0, 1473, 0, 1086, 1087, 1088, 0, 0, 0, 0,
	0, 0, 1215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1361, 1362,
	1363, 1364, 41, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1386, 0, 0,
	0, 0, 0, 0, 1606, 0, 0, 857, 858, 860,
	0, 996, 0, 977, 0, 0, 863, 0, 904, 0,
	907, 60, 62, 913, 914, 0, 935, 924, 912, 56,
	51, 0, 0, 954, 1553, 1556, 1557, 377, 1579, 0,
	386, 386, 383, 1514, 1515, 0, 1507, 1509, 1510, 80,
	932, 928, 0, 1010, 0, 0, 991, 0, 938, 940,
	941, 942, 974, 0, 945, 946, 0, 0, 0, 0,
	0, 100, 993, 106, 0, 114, 0, 0, 119, 120,
	107, 108, 109, 110, 0, 611, -2, 463, 181, 183,
	184, 185, 176, -2, 375, 373, 374, 313, 377, 377,
	339, 340, 341, 342, 343, 344, 0, 351, 0, 332,
	333, 334, 335, 324, 0, 325, 326, 327, 367, 0,
	328, 329, 0, 330, 430, 0, 1516, 393, 394, 396,
	404, 0, 399, 400, 0, 404, 404, 0, 425, 426,
	0, 1508, 1533, 0, 0, 0, 1636, 1635, 1635, 1635,
	0, 169, 170, 171, 172, 173, 174, 647, 0, 0,
	623, 645, 646, 167, 0, 0, 177, 519, 518, 0,
	679, 0, 428, 0, 0, 422, 422, 407, 408, 560,
	0, 0, 654, 655, 656, 657, 0, 0, 0, 546,
	457, 0, 547, 548, 517, 519, 0, 0, 388, 471,
	472, 477, 478, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 596, 598, 601,
	603, 521, 607, 609, 597, 600, 602, 604, 521, 608,
	610, 1530, 1531, 1532, 0, 0, 717, 0, 0, 454,
	96, 1624, 722, 726, 727, 792, 745, 779, 792, 737,
	744, 767, 781, 783, 817, 818, 823, 831, 832, 833,
	871, 0, 0, 0, 0, 879, 0, 0, 1023, 1138,
	1140, 1025, 1026, 1027, 1030, 0, 1034, 1038, 0, 0,
	0, 0, 0, 1085, 1083, 1484, 0, 0, 0, 1134,
	0, 0, 1157, 1158, 0, 0, 0, 0, 1478, 0,
	0, 1165, 0, 1439, 1115, 0, 0, 0, 0, 0,
	1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
	1502, 1192, 0, 0, 0, 0, 0, 1197, 1198, 1199,
	1115, 0, 1202, 1203, 0, 1205, 0, 1206, 0, 0,
	0, 0, 1213, 1214, 1216, 0, 0, 1219, 1220, 0,
	1222, 0, 1224, 1225, 1226, 1227, 1228, 1229, 0, 1231,
	0, 1233, 1234, 1235, 0, 1237, 0, 1239, 1240, 0,
	1242, 0, 1244, 0, 1247, 0, 1250, 0, 1253, 0,
	1256, 0, 1259, 0, 1262, 0, 1265, 0, 1268, 0,
	1271, 0, 1274, 0, 1277, 0, 1280, 0, 1283, 0,
	1286, 0, 1289, 0, 1292, 1293, 1294, 0, 1296, 0,
	1298, 0, 1301, 1302, 0, 1304, 0, 1307, 0, 1310,
	0, 0, 1311, 0, 0, 0, 1315, 0, 0, 0,
	0, 1324, 1325, 1326, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1338, 1339, 1340, 1341, 1342,
	1343, 0, 1345, 0, 1116, 0, 0, 1116, 0, 0,
	0, 0, 0, 1155, 1633, 0, 1440, 1441, 1442, 1443,
	1444, 0, 0, 0, 0, 0, 0, 1384, 1385, 1387,
	0, 0, 1390, 0, 1392, 0, 1607, 856, 859, 861,
	948, 997, 998, 0, 0, 0, 0, 978, 1632, 902,
	903, 906, 956, 0, 1488, 0, 0, 935, 1010, 0,
	936, 0, 53, 951, 0, 1561, 1560, 1573, 1586, 386,
	386, 380, 381, 387, 382, 384, 385, 1506, 0, 1511,
	0, 1600, 0, 0, 1589, 0, 0, 0, 0, 0,
	0, 0, 0, 981, 0, 0, 984, 0, 0, 0,
	0, 975, 946, 0, 947, 0, -2, 0, 0, 94,
	95, 0, 0, 0, 117, 118, 0, 0, 124, 389,
	390, 158, 167, 465, 182, 438, 0, 0, 309, 376,
	336, 337, 338, 0, 361, 0, 0, 0, 0, 459,
	130, 1520, 1519, 404, 404, 395, 0, 398, 0, 0,
	0, 1637, 364, 427, 0, 148, 0, 0, 0, 0,
	0, 154, 617, 0, 0, 624, 0, 0, 0, 528,
	0, 539, 540, 0, 651, -2, 713, 392, 0, 406,
	409, 963, 0, 0, 541, 0, 544, 545, 458, 519,
	550, 551, 565, 552, 500, 501, 498, 0, 0, 1543,
	1544, 1549, 1547, 1548, 135, 586, 588, 592, 587, 591,
	0, 0, 0, 523, 0, 523, 584, 0, 454, 1516,
	0, 721, 455, 456, 795, 795, 866, 99, 0, 869,
	0, 0, 0, 0, 1031, 1035, 1048, 1049, 1445, 1471,
	363, 363, 1458, 363, 369, 1461, 363, 1463, 363, 1466,
	363, 1469, 1470, 0, 0, 1078, 0, 0, 0, 0,
	1164, 1481, 0, 0, 1175, 1114, 1115, 1115, 1115, 1115,
	1115, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1475, 0, 0, 0, 1196, 0, 0, 1200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 147,
	0, 0, 0, 0, 0, 0, 1395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 1113,
	0, 1117, 1118, 0, 0, 1347, 0, 0, 1365, 0,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 999, 1006, 0,
	1006, 0, 1006, 0, 0, 0, 1619, 1620, 1489, 1490,
	1010, 1491, 925, 937, 955, 1579, 0, 1572, 0, -2,
	1581, 0, 0, 0, 1587, 378, 379, 929, 81, 1011,
	85, 0, 1600, 1609, 0, 1597, 1602, 1604, 0, 0,
	0, 1593, 0, 1010, 939, 970, 972, 0, 967, 982,
	983, 985, 0, 987, 0, 989, 990, 950, 944, 0,
	102, 0, 1010, 1010, 101, 0, 995, 121, 122, 123,
	464, 186, 191, 0, 0, 0, 196, 0, 198, 0,
	0, 0, 203, 204, 404, 404, 439, 0, 306, 308,
	0, 0, 189, 377, 0, 377, 0, 368, 370, 0,
	440, 460, 1517, 1518, 0, 0, 397, 401, 402, 403,
	0, 1626, 150, 0, 0, 0, 620, 0, 648, 0,
	0, 0, 0, 0, 0, 178, 520, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 0, 404, 0, 0,
	0, 404, 404, 404, 0, 705, 391, 0, 0, 676,
	673, 542, 0, 220, 221, 228, 229, 231, 0, 0,
	0, 0, 0, 549, 950, 1534, 1535, 1536, 0, 1546,
	1550, 138, 0, 0, 0, 0, 594, 599, 605, 0,
	522, 606, 718, 719, 720, 97, 730, 736, 868, 888,
	1019, 1032, 1036, 0, 0, 0, 0, 1472, 1456, 377,
	1459, 1460, 1462, 1464, 1465, 1467, 1468, 1074, 1075, 1079,
	0, 1161, 0, 1163, 0, 1479, 0, 1176, 1177, 1178,
	1179, 1180, 1511, 0, 0, 0, 1195, 0, 0, 1115,
	0, 1208, 1207, 1209, 0, 1211, 1212, 1217, 1218, 1221,
	1223, 1230, 1232, 1236, 1238, 1241, 1243, 1245, 0, 1248,
	0, 1251, 0, 1254, 0, 1257, 0, 1260, 0, 1263,
	0, 1266, 0, 1269, 0, 1272, 0, 1275, 0, 1278,
	0, 1281, 0, 1284, 0, 1287, 0, 1290, 0, 1295,
	1297, 0, 1300, 1303, 1305, 0, 1308, 0, 1312, 0,
	1314, 1316, 1317, 0, 0, 0, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1344, 0, 1107, 1346,
	1119, 1120, 1125, 1349, 0, 0, 0, 1352, 0, 0,
	0, 1356, 1156, 1367, 0, 1372, 0, 0, 1378, 0,
	1382, 0, 1388, 1389, 1391, 1393, 0, 0, 0, 0,
	0, 0, 0, 976, 957, 64, 1491, 1495, 0, 1566,
	1564, 1564, 1574, 1575, 0, 0, 1582, 0, 0, 0,
	0, 86, 0, 0, 1588, 0, 0, 1605, 0, 0,
	0, 0, 103, 1502, 964, 971, 0, 0, 965, 0,
	966, 986, 988, 943, 0, 1010, 1010, 92, 93, 0,
	192, 0, 194, 0, 197, 199, 200, 201, 207, 208,
	209, 202, 0, 0, 305, 307, 0, 0, 350, 362,
	352, 0, 0, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 950, 151, 152, 153, 612, 0, 622, 0, 952,
	0, 615, 0, 531, 0, 0, 0, 404, 404, 404,
	0, 0, 0, 0, 690, 0, 0, 653, 0, 661,
	0, 0, 0, 232, 233, 0, 1545, 585, 0, 136,
	137, 0, 0, 590, 524, 525, 1072, 0, 0, 0,
	1073, 1457, 0, 0, 0, 0, 0, 1476, 0, 0,
	0, 0, 1201, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1320, 0, 0, 0,
	642, 643, 0, 1396, 1112, 1502, 0, 1116, 1126, 1127,
	0, 1116, 1366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1007, 0, 0, 0, 958, 959,
	0, 0, 0, 996, 1495, 1500, 0, 0, 1569, 0,
	1562, 1565, 1563, 1576, 0, 0, 1583, 0, 1585, 0,
	1610, 1611, 1603, 1598, 0, 1592, 1595, 1597, 1594, 1511,
	968, 0, 973, 0, 1502, 91, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	206, 0, 0, 366, 371, 0, 0, 0, 613, 0,
	953, 625, 616, 0, 703, 0, 707, 0, 0, 0,
	710, 711, 712, 689, 0, 693, 432, 677, 674, 675,
	543, 0, 139, 140, 0, 0, 0, 1446, 0, 1449,
	1159, 1162, 1160, 0, 1191, 1193, 1194, 1454, 1455, 1210,
	1246, 1249, 1252, 1255, 1258, 1261, 1264, 1267, 1270, 1273,
	1276, 1279, 1282, 1285, 1288, 1291, 1299, 1306, 1309, 1313,
	1318, 0, 1321, 0, 0, 1322, 0, 644, 1103, 0,
	0, 1123, 1124, 0, 1351, 1353, 1354, 1355, 1368, 0,
	1373, 1374, 0, 1379, 0, 1383, 1394, 0, 1001, 1008,
	1009, 0, 1004, 0, 1005, 0, 949, 1500, 83, 1501,
	1498, 0, 1496, 1493, 1558, 0, 1567, 1568, 1577, 1578,
	1584, 0, 0, 1597, 0, 1591, 89, 0, 0, 0,
	1511, 193, 0, 212, 0, 621, 0, 624, 614, 701,
	702, 0, 714, 706, 708, 709, 691, -2, 1537, 0,
	0, 0, 593, 1447, 0, 0, 1323, 0, 640, 641,
	1111, 1104, 0, 1089, 1090, 1108, 1348, 1350, 0, 0,
	0, 1000, 960, 961, 1002, 1003, 82, 0, 1497, 1131,
	0, 1492, 0, 1570, 1571, 1601, 0, 1590, 1596, 969,
	976, 0, 90, 445, 438, 1537, 0, 0, 0, 694,
	695, 696, 697, 698, 699, 700, 582, 1539, 141, 142,
	0, 512, 513, 514, 135, 0, 1166, 1319, 1105, 0,
	0, 0, 0, 0, 1369, 0, 1375, 0, 1380, 0,
	1499, 0, 0, 1494, 1599, 626, 0, 628, 0, -2,
	433, 446, 0, 187, 213, 214, 0, 0, 217, 218,
	219, 210, 211, 131, 0, 0, 715, 0, 1540, 1541,
	0, 138, 0, 0, 1096, 1097, 1098, 1099, 1101, 0,
	0, 0, 0, 1132, 1109, 627, 0, 0, 388, 0,
	637, 434, 435, 0, 441, 442, 443, 444, 215, 216,
	649, 0, 0, 511, 589, 1448, 0, 0, 1370, 0,
	1376, 0, 1381, 0, 629, 630, 638, 0, 436, 0,
	437, 0, 0, 0, 618, 0, 649, 1538, 1106, 1100,
	1102, 0, 0, 1130, 0, 639, 635, 447, 449, 450,
	0, 0, 448, 650, 619, 1371, 1377, 0, 451, 452,
	453, 631, 632, 633, 634,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 157, 3, 3, 3, 185, 177, 3,
	95, 97, 182, 180, 96, 181, 235, 183, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 750,
	165, 164, 166, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 187, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 188,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 154, 155,
	156, 158, 159, 160, 161, 162, 163, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 178, 179, 184,
	186, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:644
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:688
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:694
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:700
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:706
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:710
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:716
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:741
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:747
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:751
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:757
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:763
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:794
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:831
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:849
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:876
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:891
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:897
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:903
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:910
		{
			yyLOCAL = &ValuesStatement{ListArg: ListArg(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:930
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:934
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:939
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:969
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:973
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:989
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:993
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:997
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1002
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1003
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1007
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1017
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1027
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1031
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1040
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1046
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1052
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1062
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1066
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1070
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1074
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1080
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1084
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1088
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1094
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1098
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1104
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1114
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1118
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1122
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.str = RepeatableReadStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.str = ReadCommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.str = SerializableStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1146
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1150
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1154
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1160
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1166
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1173
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1182
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1186
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1202
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1212
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1217
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1222
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1228
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1248
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1254
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1270
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1277
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1284
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1289
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1294
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1299
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1306
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1313
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1324
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1331
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1335
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1341
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1345
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1349
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1357
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1367
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1371
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1377
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1381
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1387
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1391
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1397
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1401
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1407
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1411
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1417
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1427
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1432
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1437
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1441
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1446
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1465
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1474
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1496
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1536
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1550
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1554
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1559
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1564
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1569
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1573
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1579
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1583
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1587
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1593
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1597
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1621
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1626
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1631
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1636
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1643
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1666
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1737
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1741
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1745
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1749
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1754
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1758
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Armscii8Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = ASCIIStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Big5Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = UBinaryStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp1250Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp1251Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp1256Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Cp1257Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = Cp850Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = Cp852Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Cp866Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Cp932Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = Dec8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = EucjpmsStr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = EuckrStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = Gb18030Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Gb2312Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = GbkStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Geostd8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = GreekStr
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = HebrewStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Hp8Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Keybcs2Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Koi8rStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = Koi8uStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = Latin1Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = Latin2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Latin5Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Latin7Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = MacceStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = MacromanStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = SjisStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Swe7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Tis620Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Ucs2Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = UjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf16Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = Utf16leStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = Utf32Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = Utf8mb3Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.str = Utf8mb4Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1956
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1966
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1970
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1974
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1980
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1984
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1990
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1994
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1998
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2002
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2201
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2255
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2284
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2294
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2306
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2310
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2315
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2324
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2366
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2370
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2383
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2389
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2398
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2404
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2414
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2423
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2427
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2431
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2435
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2439
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2443
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = ""
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2459
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2463
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2467
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2471
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2475
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = ""
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = yyDollar[2].str
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2513
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.str = yyDollar[1].str
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = ""
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2542
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2552
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2556
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2562
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2566
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2572
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2576
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2582
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2596
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2600
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2604
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2613
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2619
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2625
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2631
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2635
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2639
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2644
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2648
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2660
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2666
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2670
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2674
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2678
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2682
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2687
		{
			yyVAL.str = ""
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2701
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2705
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2714
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2723
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2729
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2743
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2853
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2857
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2865
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2869
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2873
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = ""
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2928
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2932
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2937
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2941
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2959
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2963
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2972
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2976
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2980
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2988
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2994
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2998
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3116
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3134
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3156
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3160
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3164
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3168
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3172
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3176
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3180
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3364
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3370
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3392
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3407
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3431
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3440
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3448
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3457
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3464
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3476
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3485
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3500
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3505
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3509
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3514
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3518
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3524
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3530
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3536
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3546
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3550
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3556
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3562
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3568
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3574
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3580
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3584
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3588
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3592
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3598
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3604
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3610
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3614
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3618
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3624
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3628
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3633
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3637
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3642
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3646
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3680
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3684
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3688
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3692
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3696
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3700
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3704
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3708
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3712
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3716
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3720
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3724
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3728
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3732
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3736
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3741
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3745
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3749
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3755
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3770
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3774
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3779
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3784
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3789
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3794
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3799
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3804
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3809
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3814
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3820
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3826
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3836
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3841
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3845
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3850
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3855
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3860
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3865
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3870
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3875
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3882
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3889
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3896
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3914
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3920
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3926
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3932
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3938
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3944
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3956
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3966
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3978
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3982
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4161
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4165
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4177
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4181
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4193
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4197
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4201
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4216
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4248
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4260
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4265
		{
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = ""
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4275
		{
			yyVAL.str = "extended "
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4301
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4305
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4319
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4323
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4333
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4339
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4347
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4367
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4371
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4378
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4386
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4397
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4406
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4410
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4416
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4420
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4426
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4430
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4434
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4441
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4447
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4451
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4456
		{
			yyVAL.empty = struct{}{}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4461
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4467
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4478
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4482
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4486
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4490
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4494
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4499
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4503
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4507
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4511
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.str = yyDollar[1].str
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.str = yyDollar[1].str
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.str = yyDollar[1].str
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4562
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4566
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4572
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4578
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4588
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4594
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4604
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4610
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4614
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4618
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4622
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4628
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4634
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4640
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4644
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4648
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4652
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4656
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4660
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4670
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4725
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4729
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4733
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4742
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4747
		{
			setAllowComments(yylex, true)
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4751
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4757
		{
			yyVAL.strs = nil
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4761
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4767
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4771
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4775
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4780
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4784
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.str = SQLCacheStr
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4793
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4797
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4801
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4807
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4811
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4821
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4826
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4830
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4836
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4840
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4845
		{
			yyVAL.strs = nil
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4865
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.str = SQLCacheStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.str = DistinctStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4877
		{
			yyVAL.str = DistinctStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.str = HighPriorityStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.str = StraightJoinHint
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = SQLBigResultStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4905
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4911
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4921
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4925
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4929
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4933
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4938
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4942
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4946
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4953
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4958
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4962
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4968
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4974
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4988
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4992
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4996
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5000
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5006
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5010
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5016
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5020
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5029
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5038
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5044
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5048
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5054
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5058
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5064
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5068
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5072
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5076
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5082
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5086
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5099
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5103
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5107
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5111
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5117
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5119
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5123
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5125
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5129
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5131
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5134
		{
			yyVAL.empty = struct{}{}
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5136
		{
			yyVAL.empty = struct{}{}
		}
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5139
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5147
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5160
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5164
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5168
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5174
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5180
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5184
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5188
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5192
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5198
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5202
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5212
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5216
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5222
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5226
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5232
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5241
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5247
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5251
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5257
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5261
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5265
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5269
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5273
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5277
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5282
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5286
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5290
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5294
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5345
		{
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5348
		{
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5365
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5369
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5373
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5377
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5429
		{
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5432
		{
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5450
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5454
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5458
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5462
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5466
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5470
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5474
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5478
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5494
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5536
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5540
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5544
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5548
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5552
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5556
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5560
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5564
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5568
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5572
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5576
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5606
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5610
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5616
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5620
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5626
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5630
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5634
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5640
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5644
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5651
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5655
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5659
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5663
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5667
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5673
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5677
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5681
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5685
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5689
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5693
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5697
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5706
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5712
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5716
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5725
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5730
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5740
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5746
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5750
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5756
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5772
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5778
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5782
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5788
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5792
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5798
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5802
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5814
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5820
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5824
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5830
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5836
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5840
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5846
		{
			yyVAL.str = ""
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5850
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5856
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5860
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5867
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5871
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5875
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5879
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5885
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5889
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5895
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5899
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5903
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5907
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5911
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5915
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5921
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5925
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5929
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5936
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5942
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5946
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6031
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6035
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6039
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6787
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6791
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6795
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6799
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6808
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6814
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6818
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6822
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6826
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6830
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6835
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6839
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6843
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6847
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6851
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6855
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6879
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6883
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6897
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6901
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6907
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6911
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6915
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6919
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6923
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6927
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6931
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6940
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6946
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6950
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6954
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6958
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6962
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6966
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6970
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6974
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6978
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6982
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6986
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6990
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6994
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6998
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7002
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7006
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7010
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7014
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7018
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7022
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7028
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7032
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7036
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7040
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7044
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7048
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7052
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7056
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7060
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7064
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7068
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7072
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7076
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7080
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7084
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7088
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7092
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7096
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7106
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7110
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7114
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7124
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7128
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7132
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7136
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7146
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7150
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7154
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7158
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7162
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7168
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7172
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7182
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7186
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7190
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7196
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7200
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7204
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7208
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7212
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7218
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7222
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7226
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7230
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7234
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7238
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7242
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7260
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7273
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7278
		{
			yyVAL.str = string("")
		}
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7282
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7288
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7292
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7298
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7307
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7313
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7317
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7321
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7325
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7331
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7335
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7341
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7350
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7354
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7363
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7368
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7372
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7382
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7388
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7394
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7398
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7407
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7416
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7422
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7428
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7432
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7438
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7443
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7447
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7451
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7456
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7460
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7466
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7470
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7474
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7483
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7487
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7491
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7495
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7502
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7506
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7510
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7514
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7520
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7524
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7528
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7532
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7537
		{
			yyVAL.str = ""
		}
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7541
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7545
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7549
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7554
		{
			yyVAL.str = ""
		}
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7558
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7564
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7568
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7573
		{
			yyVAL.str = ""
		}
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7577
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7582
		{
			yyVAL.str = "cascaded"
		}
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7586
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7590
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7599
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7605
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7611
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7617
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7626
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7630
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7635
		{
			yyVAL.str = ""
		}
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7639
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7645
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7649
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7653
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7657
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7661
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7665
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7669
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7675
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7679
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7683
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7688
		{
			yyVAL.str = ""
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7692
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7696
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7701
		{
			yyVAL.str = ""
		}
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7705
		{
			yyVAL.str = " header"
		}
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7710
		{
			yyVAL.str = ""
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7714
		{
			yyVAL.str = " manifest on"
		}
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7718
		{
			yyVAL.str = " manifest off"
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7723
		{
			yyVAL.str = ""
		}
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7727
		{
			yyVAL.str = " overwrite on"
		}
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7731
		{
			yyVAL.str = " overwrite off"
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7737
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7742
		{
			yyVAL.str = ""
		}
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7746
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7752
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7756
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7762
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7766
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7771
		{
			yyVAL.str = ""
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7775
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7781
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7785
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7791
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7795
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7799
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7804
		{
			yyVAL.str = ""
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7808
		{
			yyVAL.str = " optionally"
		}
	case 1588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7821
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7825
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7829
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7833
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7837
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7843
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7847
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7851
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7855
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7864
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7868
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7877
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7883
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7887
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7893
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7897
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7903
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7907
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7912
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7922
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7926
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7932
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7939
		{
			yyVAL.str = "charset"
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7949
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7953
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7957
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7966
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7968
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7973
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7976
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7978
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7983
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7986
		{
			yyVAL.empty = struct{}{}
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7988
		{
			yyVAL.empty = struct{}{}
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7990
		{
			yyVAL.empty = struct{}{}
		}
	case 1632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7994
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:8003
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8010
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8014
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8020
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8024
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8031
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8037
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8041
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8047
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8051
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8058
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8064
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8070
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8074
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8078
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8736
		{
		}
	case 2282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8741
		{
		}
	case 2283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8745
		{
			skipToEnd(yylex)
		}
	case 2284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8750
		{
			skipToEnd(yylex)
		}
	case 2285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8754
		{
			skipToEnd(yylex)
		}
	case 2286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8758
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
