// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const BOTH = 57453
const LEADING = 57454
const TRAILING = 57455
const EMPTY_FROM_CLAUSE = 57456
const LOWER_THAN_CHARSET = 57457
const CHARSET = 57458
const UNIQUE = 57459
const KEY = 57460
const EXPRESSION_PREC_SETTER = 57461
const OR = 57462
const XOR = 57463
const AND = 57464
const NOT = 57465
const BETWEEN = 57466
const CASE = 57467
const WHEN = 57468
const THEN = 57469
const ELSE = 57470
const END = 57471
const LE = 57472
const GE = 57473
const NE = 57474
const NULL_SAFE_EQUAL = 57475
const IS = 57476
const LIKE = 57477
const REGEXP = 57478
const IN = 57479
const SHIFT_LEFT = 57480
const SHIFT_RIGHT = 57481
const DIV = 57482
const MOD = 57483
const UNARY = 57484
const COLLATE = 57485
const BINARY = 57486
const UNDERSCORE_ARMSCII8 = 57487
const UNDERSCORE_ASCII = 57488
const UNDERSCORE_BIG5 = 57489
const UNDERSCORE_BINARY = 57490
const UNDERSCORE_CP1250 = 57491
const UNDERSCORE_CP1251 = 57492
const UNDERSCORE_CP1256 = 57493
const UNDERSCORE_CP1257 = 57494
const UNDERSCORE_CP850 = 57495
const UNDERSCORE_CP852 = 57496
const UNDERSCORE_CP866 = 57497
const UNDERSCORE_CP932 = 57498
const UNDERSCORE_DEC8 = 57499
const UNDERSCORE_EUCJPMS = 57500
const UNDERSCORE_EUCKR = 57501
const UNDERSCORE_GB18030 = 57502
const UNDERSCORE_GB2312 = 57503
const UNDERSCORE_GBK = 57504
const UNDERSCORE_GEOSTD8 = 57505
const UNDERSCORE_GREEK = 57506
const UNDERSCORE_HEBREW = 57507
const UNDERSCORE_HP8 = 57508
const UNDERSCORE_KEYBCS2 = 57509
const UNDERSCORE_KOI8R = 57510
const UNDERSCORE_KOI8U = 57511
const UNDERSCORE_LATIN1 = 57512
const UNDERSCORE_LATIN2 = 57513
const UNDERSCORE_LATIN5 = 57514
const UNDERSCORE_LATIN7 = 57515
const UNDERSCORE_MACCE = 57516
const UNDERSCORE_MACROMAN = 57517
const UNDERSCORE_SJIS = 57518
const UNDERSCORE_SWE7 = 57519
const UNDERSCORE_TIS620 = 57520
const UNDERSCORE_UCS2 = 57521
const UNDERSCORE_UJIS = 57522
const UNDERSCORE_UTF16 = 57523
const UNDERSCORE_UTF16LE = 57524
const UNDERSCORE_UTF32 = 57525
const UNDERSCORE_UTF8 = 57526
const UNDERSCORE_UTF8MB4 = 57527
const INTERVAL = 57528
const JSON_EXTRACT_OP = 57529
const JSON_UNQUOTE_EXTRACT_OP = 57530
const CREATE = 57531
const ALTER = 57532
const DROP = 57533
const RENAME = 57534
const ANALYZE = 57535
const ADD = 57536
const FLUSH = 57537
const CHANGE = 57538
const MODIFY = 57539
const REVERT = 57540
const SCHEMA = 57541
const TABLE = 57542
const INDEX = 57543
const VIEW = 57544
const TO = 57545
const IGNORE = 57546
const IF = 57547
const PRIMARY = 57548
const COLUMN = 57549
const SPATIAL = 57550
const FULLTEXT = 57551
const KEY_BLOCK_SIZE = 57552
const CHECK = 57553
const INDEXES = 57554
const ACTION = 57555
const CASCADE = 57556
const CONSTRAINT = 57557
const FOREIGN = 57558
const NO = 57559
const REFERENCES = 57560
const RESTRICT = 57561
const SHOW = 57562
const DESCRIBE = 57563
const EXPLAIN = 57564
const DATE = 57565
const ESCAPE = 57566
const REPAIR = 57567
const OPTIMIZE = 57568
const TRUNCATE = 57569
const COALESCE = 57570
const EXCHANGE = 57571
const REBUILD = 57572
const PARTITIONING = 57573
const REMOVE = 57574
const MAXVALUE = 57575
const PARTITION = 57576
const REORGANIZE = 57577
const LESS = 57578
const THAN = 57579
const PROCEDURE = 57580
const TRIGGER = 57581
const VINDEX = 57582
const VINDEXES = 57583
const DIRECTORY = 57584
const NAME = 57585
const UPGRADE = 57586
const STATUS = 57587
const VARIABLES = 57588
const WARNINGS = 57589
const CASCADED = 57590
const DEFINER = 57591
const OPTION = 57592
const SQL = 57593
const UNDEFINED = 57594
const SEQUENCE = 57595
const MERGE = 57596
const TEMPORARY = 57597
const TEMPTABLE = 57598
const INVOKER = 57599
const SECURITY = 57600
const FIRST = 57601
const AFTER = 57602
const LAST = 57603
const VITESS_MIGRATION = 57604
const CANCEL = 57605
const RETRY = 57606
const COMPLETE = 57607
const CLEANUP = 57608
const BEGIN = 57609
const START = 57610
const TRANSACTION = 57611
const COMMIT = 57612
const ROLLBACK = 57613
const SAVEPOINT = 57614
const RELEASE = 57615
const WORK = 57616
const BIT = 57617
const TINYINT = 57618
const SMALLINT = 57619
const MEDIUMINT = 57620
const INT = 57621
const INTEGER = 57622
const BIGINT = 57623
const INTNUM = 57624
const REAL = 57625
const DOUBLE = 57626
const FLOAT_TYPE = 57627
const DECIMAL_TYPE = 57628
const NUMERIC = 57629
const TIME = 57630
const TIMESTAMP = 57631
const DATETIME = 57632
const YEAR = 57633
const CHAR = 57634
const VARCHAR = 57635
const BOOL = 57636
const CHARACTER = 57637
const VARBINARY = 57638
const NCHAR = 57639
const TEXT = 57640
const TINYTEXT = 57641
const MEDIUMTEXT = 57642
const LONGTEXT = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const ASCII = 57658
const UNICODE = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const CODE = 57666
const COLLATION = 57667
const COLUMNS = 57668
const DATABASES = 57669
const ENGINES = 57670
const EVENT = 57671
const EXTENDED = 57672
const FIELDS = 57673
const FULL = 57674
const FUNCTION = 57675
const GTID_EXECUTED = 57676
const KEYSPACES = 57677
const OPEN = 57678
const PLUGINS = 57679
const PRIVILEGES = 57680
const PROCESSLIST = 57681
const SCHEMAS = 57682
const TABLES = 57683
const TRIGGERS = 57684
const USER = 57685
const VGTID_EXECUTED = 57686
const VITESS_KEYSPACES = 57687
const VITESS_METADATA = 57688
const VITESS_MIGRATIONS = 57689
const VITESS_REPLICATION_STATUS = 57690
const VITESS_SHARDS = 57691
const VITESS_TABLETS = 57692
const VSCHEMA = 57693
const NAMES = 57694
const GLOBAL = 57695
const SESSION = 57696
const ISOLATION = 57697
const LEVEL = 57698
const READ = 57699
const WRITE = 57700
const ONLY = 57701
const REPEATABLE = 57702
const COMMITTED = 57703
const UNCOMMITTED = 57704
const SERIALIZABLE = 57705
const CURRENT_TIMESTAMP = 57706
const DATABASE = 57707
const CURRENT_DATE = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const CURRENT_USER = 57712
const UTC_DATE = 57713
const UTC_TIME = 57714
const UTC_TIMESTAMP = 57715
const DAY = 57716
const DAY_HOUR = 57717
const DAY_MICROSECOND = 57718
const DAY_MINUTE = 57719
const DAY_SECOND = 57720
const HOUR = 57721
const HOUR_MICROSECOND = 57722
const HOUR_MINUTE = 57723
const HOUR_SECOND = 57724
const MICROSECOND = 57725
const MINUTE = 57726
const MINUTE_MICROSECOND = 57727
const MINUTE_SECOND = 57728
const MONTH = 57729
const QUARTER = 57730
const SECOND = 57731
const SECOND_MICROSECOND = 57732
const YEAR_MONTH = 57733
const WEEK = 57734
const REPLACE = 57735
const CONVERT = 57736
const CAST = 57737
const SUBSTR = 57738
const SUBSTRING = 57739
const GROUP_CONCAT = 57740
const SEPARATOR = 57741
const TIMESTAMPADD = 57742
const TIMESTAMPDIFF = 57743
const WEIGHT_STRING = 57744
const LTRIM = 57745
const RTRIM = 57746
const TRIM = 57747
const MATCH = 57748
const AGAINST = 57749
const BOOLEAN = 57750
const LANGUAGE = 57751
const WITH = 57752
const QUERY = 57753
const EXPANSION = 57754
const WITHOUT = 57755
const VALIDATION = 57756
const UNUSED = 57757
const ARRAY = 57758
const CUME_DIST = 57759
const DESCRIPTION = 57760
const DENSE_RANK = 57761
const EMPTY = 57762
const EXCEPT = 57763
const FIRST_VALUE = 57764
const GROUPING = 57765
const GROUPS = 57766
const JSON_TABLE = 57767
const LAG = 57768
const LAST_VALUE = 57769
const LATERAL = 57770
const LEAD = 57771
const MEMBER = 57772
const NTH_VALUE = 57773
const NTILE = 57774
const OF = 57775
const OVER = 57776
const PERCENT_RANK = 57777
const RANK = 57778
const RECURSIVE = 57779
const ROW_NUMBER = 57780
const SYSTEM = 57781
const WINDOW = 57782
const ACTIVE = 57783
const ADMIN = 57784
const BUCKETS = 57785
const CLONE = 57786
const COMPONENT = 57787
const DEFINITION = 57788
const ENFORCED = 57789
const EXCLUDE = 57790
const FOLLOWING = 57791
const GEOMCOLLECTION = 57792
const GET_MASTER_PUBLIC_KEY = 57793
const HISTOGRAM = 57794
const HISTORY = 57795
const INACTIVE = 57796
const INVISIBLE = 57797
const LOCKED = 57798
const MASTER_COMPRESSION_ALGORITHMS = 57799
const MASTER_PUBLIC_KEY_PATH = 57800
const MASTER_TLS_CIPHERSUITES = 57801
const MASTER_ZSTD_COMPRESSION_LEVEL = 57802
const NESTED = 57803
const NETWORK_NAMESPACE = 57804
const NOWAIT = 57805
const NULLS = 57806
const OJ = 57807
const OLD = 57808
const OPTIONAL = 57809
const ORDINALITY = 57810
const ORGANIZATION = 57811
const OTHERS = 57812
const PATH = 57813
const PERSIST = 57814
const PERSIST_ONLY = 57815
const PRECEDING = 57816
const PRIVILEGE_CHECKS_USER = 57817
const PROCESS = 57818
const RANDOM = 57819
const REFERENCE = 57820
const REQUIRE_ROW_FORMAT = 57821
const RESOURCE = 57822
const RESPECT = 57823
const RESTART = 57824
const RETAIN = 57825
const REUSE = 57826
const ROLE = 57827
const SECONDARY = 57828
const SECONDARY_ENGINE = 57829
const SECONDARY_LOAD = 57830
const SECONDARY_UNLOAD = 57831
const SKIP = 57832
const SRID = 57833
const THREAD_PRIORITY = 57834
const TIES = 57835
const UNBOUNDED = 57836
const VCPU = 57837
const VISIBLE = 57838
const FORMAT = 57839
const TREE = 57840
const VITESS = 57841
const TRADITIONAL = 57842
const LOCAL = 57843
const LOW_PRIORITY = 57844
const NO_WRITE_TO_BINLOG = 57845
const LOGS = 57846
const ERROR = 57847
const GENERAL = 57848
const HOSTS = 57849
const OPTIMIZER_COSTS = 57850
const USER_RESOURCES = 57851
const SLOW = 57852
const CHANNEL = 57853
const RELAY = 57854
const EXPORT = 57855
const AVG_ROW_LENGTH = 57856
const CONNECTION = 57857
const CHECKSUM = 57858
const DELAY_KEY_WRITE = 57859
const ENCRYPTION = 57860
const ENGINE = 57861
const INSERT_METHOD = 57862
const MAX_ROWS = 57863
const MIN_ROWS = 57864
const PACK_KEYS = 57865
const PASSWORD = 57866
const FIXED = 57867
const DYNAMIC = 57868
const COMPRESSED = 57869
const REDUNDANT = 57870
const COMPACT = 57871
const ROW_FORMAT = 57872
const STATS_AUTO_RECALC = 57873
const STATS_PERSISTENT = 57874
const STATS_SAMPLE_PAGES = 57875
const STORAGE = 57876
const MEMORY = 57877
const DISK = 57878
const PARTITIONS = 57879
const LINEAR = 57880
const RANGE = 57881
const LIST = 57882
const SUBPARTITION = 57883
const SUBPARTITIONS = 57884
const HASH = 57885

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	561, 137,
	-2, 143,
	-1, 45,
	119, 143,
	159, 143,
	312, 143,
	-2, 444,
	-1, 52,
	33, 623,
	218, 623,
	229, 623,
	262, 637,
	263, 637,
	-2, 625,
	-1, 57,
	220, 648,
	-2, 646,
	-1, 108,
	217, 1118,
	-2, 116,
	-1, 110,
	1, 138,
	561, 138,
	-2, 143,
	-1, 120,
	120, 347,
	223, 347,
	-2, 438,
	-1, 139,
	119, 143,
	159, 143,
	312, 143,
	-2, 453,
	-1, 605,
	203, 1139,
	-2, 1135,
	-1, 606,
	203, 1140,
	-2, 1136,
	-1, 677,
	57, 716,
	-2, 724,
	-1, 714,
	135, 1504,
	-2, 109,
	-1, 715,
	135, 1381,
	-2, 110,
	-1, 721,
	135, 1435,
	-2, 1112,
	-1, 869,
	135, 1314,
	-2, 1109,
	-1, 907,
	228, 38,
	233, 38,
	-2, 358,
	-1, 984,
	1, 492,
	561, 492,
	-2, 143,
	-1, 1185,
	57, 717,
	-2, 729,
	-1, 1186,
	57, 718,
	-2, 730,
	-1, 1238,
	119, 143,
	159, 143,
	312, 143,
	-2, 388,
	-1, 1315,
	120, 347,
	223, 347,
	-2, 438,
	-1, 1324,
	228, 39,
	233, 39,
	-2, 359,
	-1, 1582,
	203, 1144,
	-2, 1138,
	-1, 1659,
	119, 143,
	159, 143,
	312, 143,
	-2, 389,
	-1, 1666,
	23, 162,
	-2, 164,
	-1, 1909,
	75, 91,
	84, 91,
	-2, 782,
	-1, 2080,
	47, 1080,
	-2, 1074,
	-1, 2286,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 757,
}

const yyPrivate = 57344

const yyLast = 35149

var yyAct = [...]int{
	605, 2540, 2546, 2345, 2511, 2201, 2497, 2172, 2091, 1167,
	2370, 2131, 2138, 2424, 2184, 1047, 2438, 1613, 599, 34,
	2094, 2140, 1852, 90, 3, 692, 2183, 670, 1719, 2095,
	553, 1882, 2375, 2092, 2257, 1200, 2251, 557, 582, 608,
	597, 1596, 1905, 600, 598, 2186, 2277, 2089, 176, 550,
	1632, 176, 2081, 517, 176, 1689, 2244, 2011, 1941, 533,
	1874, 176, 1942, 719, 33, 1970, 1645, 551, 872, 176,
	1943, 995, 148, 1894, 545, 1709, 549, 1694, 1637, 693,
	1854, 176, 1187, 1728, 1576, 1519, 1617, 2027, 35, 937,
	674, 1526, 678, 1478, 672, 1866, 1636, 134, 1708, 1761,
	1696, 897, 1656, 533, 1935, 1230, 533, 176, 533, 562,
	695, 902, 1911, 1598, 89, 1209, 1639, 1170, 716, 1545,
	1579, 1496, 1066, 1426, 1322, 876, 908, 879, 1429, 1329,
	1706, 880, 1412, 1685, 903, 1624, 85, 904, 679, 1229,
	1213, 1045, 1040, 905, 684, 1290, 1314, 117, 118, 1434,
	706, 682, 1589, 1135, 2469, 151, 111, 112, 980, 70,
	1227, 1618, 680, 91, 540, 1139, 83, 1024, 1963, 1338,
	2547, 92, 2169, 178, 179, 180, 1721, 79, 1721, 1722,
	1723, 1990, 1989, 1759, 1961, 1067, 84, 8, 700, 2019,
	705, 7, 119, 681, 71, 6, 2020, 1485, 1484, 915,
	113, 178, 179, 180, 1593, 1594, 520, 1398, 1067, 1483,
	1482, 1481, 942, 1480, 490, 1467, 543, 873, 544, 1472,
	2525, 686, 1850, 616, 73, 1295, 939, 541, 2077, 883,
	888, 673, 2310, 96, 671, 1876, 2420, 2419, 687, 953,
	954, 2155, 957, 958, 959, 960, 941, 507, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 713, 720, 918, 113, 894, 893, 694,
	2338, 98, 99, 2339, 102, 895, 940, 108, 1701, 2556,
	173, 2507, 1799, 485, 943, 944, 945, 1077, 72, 2550,
	72, 2480, 72, 506, 2539, 675, 2346, 73, 72, 2498,
	1747, 74, 1699, 669, 504, 2506, 677, 2026, 2479, 2236,
	1077, 1304, 1885, 955, 1998, 675, 588, 1231, 1997, 1232,
	887, 919, 1851, 889, 2127, 892, 1920, 989, 990, 1919,
	113, 1098, 1921, 2018, 708, 709, 1796, 1886, 1031, 2388,
	1033, 1650, 501, 2128, 2129, 1014, 1797, 950, 1043, 1595,
	667, 515, 2429, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1107, 1106, 1108, 1109, 666, 81, 512, 81, 1015, 81,
	1651, 1652, 1932, 2055, 1002, 81, 1030, 1032, 983, 1003,
	1073, 890, 1964, 1065, 1008, 1019, 1020, 1001, 1002, 1000,
	1669, 1668, 2254, 1003, 520, 2225, 2203, 520, 520, 521,
	2223, 531, 1471, 1073, 979, 535, 1773, 1770, 1772, 1771,
	529, 1473, 1474, 1475, 1174, 1971, 892, 1388, 884, 1729,
	520, 1418, 1993, 1767, 1762, 886, 885, 2196, 1413, 491,
	1698, 493, 508, 2549, 523, 2197, 522, 497, 956, 495,
	499, 509, 500, 1037, 494, 985, 505, 1016, 1042, 496,
	510, 511, 513, 527, 526, 514, 1023, 503, 524, 1389,
	896, 1390, 1775, 1009, 1776, 2006, 1777, 1028, 1778, 962,
	961, 1029, 890, 2526, 1021, 2204, 1768, 1017, 1018, 2205,
	1764, 1034, 926, 1766, 1022, 176, 2331, 176, 1307, 1732,
	176, 891, 898, 2180, 899, 1633, 81, 924, 899, 935,
	934, 933, 932, 1027, 931, 930, 929, 928, 1035, 923,
	1110, 936, 1110, 2551, 1328, 2144, 892, 978, 533, 533,
	533, 877, 2056, 1765, 2537, 877, 911, 910, 1797, 875,
	877, 1427, 1707, 707, 1855, 1857, 533, 533, 2007, 2010,
	1753, 1423, 1053, 917, 946, 2162, 1072, 1069, 1070, 1071,
	1076, 1078, 1075, 1992, 1074, 1302, 34, 1301, 1300, 2544,
	917, 1068, 1059, 998, 1982, 1004, 1005, 1006, 1007, 1072,
	1069, 1070, 1071, 1076, 1078, 1075, 1424, 1074, 2154, 982,
	2134, 1298, 891, 489, 1068, 484, 2005, 521, 1044, 2004,
	521, 521, 2022, 2468, 1810, 601, 2459, 583, 585, 602,
	603, 2179, 581, 584, 604, 525, 1749, 1962, 1619, 1620,
	1012, 1419, 1417, 521, 2291, 1995, 1110, 1327, 1111, 1112,
	2273, 1916, 927, 518, 1881, 2135, 1113, 1114, 1115, 1116,
	1700, 586, 587, 2401, 2430, 1165, 1036, 925, 519, 1124,
	916, 1127, 1965, 1842, 1588, 920, 910, 110, 1217, 1147,
	2137, 993, 1160, 1657, 2132, 921, 1109, 916, 2255, 2126,
	1049, 1050, 2478, 2416, 1025, 689, 105, 176, 981, 917,
	1041, 2142, 2143, 922, 1117, 2013, 2474, 2327, 2133, 1038,
	2012, 1166, 891, 1856, 176, 2267, 2013, 952, 1435, 1798,
	1177, 2012, 938, 997, 1181, 1763, 1175, 672, 1180, 1420,
	674, 1178, 75, 533, 1233, 1063, 2048, 176, 1954, 80,
	2139, 80, 533, 80, 1082, 988, 991, 1546, 533, 80,
	1400, 1399, 1401, 1402, 1403, 1062, 106, 716, 999, 1060,
	1546, 71, 1829, 1061, 2517, 1137, 2384, 1138, 2515, 917,
	1166, 1046, 1046, 1046, 1414, 2302, 1415, 2519, 2520, 1416,
	917, 1141, 1081, 1082, 1179, 2142, 2143, 2301, 89, 1736,
	2542, 73, 2516, 2543, 1337, 2541, 916, 1153, 1154, 1155,
	1156, 920, 910, 1080, 2141, 1081, 1082, 1336, 178, 179,
	180, 921, 1521, 1171, 1748, 917, 2144, 1326, 675, 1118,
	1119, 1120, 1121, 1122, 1123, 1011, 1126, 1026, 1128, 1129,
	1130, 1131, 1741, 1134, 1136, 1136, 1013, 1136, 1140, 1140,
	1142, 1143, 1144, 1145, 1146, 92, 1148, 1149, 1150, 1151,
	1152, 1436, 984, 996, 1501, 1140, 1140, 1140, 1140, 1745,
	1168, 1746, 1196, 1744, 926, 1199, 916, 671, 1502, 1503,
	1500, 673, 910, 913, 914, 924, 877, 916, 1741, 1176,
	907, 911, 1522, 910, 913, 914, 2535, 877, 2141, 1223,
	1224, 907, 911, 1104, 1105, 1107, 1106, 1108, 1109, 906,
	2144, 2465, 176, 720, 2552, 1743, 1291, 1080, 2533, 1081,
	1082, 2485, 916, 2452, 951, 1299, 2050, 2136, 2292, 1837,
	2233, 1218, 1173, 81, 1080, 675, 1081, 1082, 2554, 675,
	2411, 1491, 1493, 1494, 2361, 675, 533, 1499, 1324, 1080,
	1182, 1081, 1082, 2486, 2534, 2453, 1333, 1802, 1803, 1804,
	1335, 1815, 2360, 533, 533, 1492, 533, 1194, 533, 533,
	1814, 533, 533, 533, 533, 533, 533, 1102, 1103, 1104,
	1105, 1107, 1106, 1108, 1109, 1819, 533, 1228, 2553, 1825,
	176, 1371, 619, 620, 621, 1194, 1334, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1084, 1080, 176, 1081, 1082, 1080,
	2309, 1081, 1082, 1194, 1320, 1625, 1626, 533, 2308, 176,
	1550, 1366, 1367, 2231, 1194, 1305, 1306, 2170, 2160, 1080,
	1425, 1081, 1082, 1080, 176, 1081, 1082, 1939, 1938, 1313,
	1100, 1101, 1102, 1103, 1104, 1105, 1107, 1106, 1108, 1109,
	176, 1704, 1408, 606, 1368, 1407, 1393, 176, 1194, 1207,
	1405, 1824, 1080, 1395, 1081, 1082, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 533, 533, 533, 1392, 1391,
	1332, 1297, 2456, 1382, 1331, 1374, 1375, 1310, 1311, 1309,
	711, 1380, 1381, 1323, 1376, 1373, 1080, 1431, 1081, 1082,
	1080, 177, 1081, 1082, 177, 1372, 176, 177, 1347, 1203,
	2455, 2454, 534, 1080, 177, 1081, 1082, 2383, 1406, 1384,
	1439, 1194, 177, 1404, 1206, 2381, 1394, 1443, 2357, 1445,
	1446, 1447, 1448, 1340, 177, 1341, 1452, 1343, 1345, 2306,
	2298, 1349, 1351, 1353, 1355, 1357, 1948, 1936, 1369, 1757,
	1466, 1520, 1756, 1330, 1330, 1428, 534, 1616, 1204, 534,
	177, 534, 1303, 1080, 1602, 1081, 1082, 1536, 533, 178,
	179, 180, 1524, 2299, 178, 179, 180, 1497, 1923, 1523,
	113, 894, 893, 533, 533, 1504, 2409, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1441, 1468, 1495, 1580, 1505, 1432, 1396, 2328, 1437, 1438,
	1383, 1379, 1547, 176, 2028, 2239, 1462, 1463, 1464, 1378,
	1465, 2200, 1442, 1601, 1080, 1377, 1081, 1082, 1205, 1449,
	1450, 1451, 1039, 178, 179, 180, 1813, 1717, 86, 176,
	1052, 2437, 533, 1498, 1603, 1080, 1604, 1081, 1082, 87,
	2436, 1582, 176, 88, 1080, 533, 1081, 1082, 1872, 2548,
	176, 2405, 176, 2266, 176, 176, 533, 1940, 2404, 533,
	178, 179, 180, 1580, 1584, 1585, 2238, 1872, 2504, 1525,
	533, 716, 1872, 2491, 716, 89, 1872, 2489, 2344, 1538,
	1539, 178, 179, 180, 2030, 1715, 2481, 1194, 1046, 1046,
	1046, 89, 1098, 1194, 2021, 1080, 1635, 1081, 1082, 1583,
	1609, 1194, 1586, 1587, 1972, 1080, 1581, 1081, 1082, 1872,
	2470, 1582, 2336, 2467, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1107, 1106, 1108, 1109, 533, 1080, 1951, 1081, 1082,
	2090, 1710, 1711, 1712, 94, 1608, 1714, 1716, 1661, 1574,
	2266, 1660, 1872, 2412, 2040, 2039, 2038, 2032, 1643, 2036,
	533, 2031, 1665, 2029, 86, 2121, 533, 1333, 2034, 2268,
	1333, 88, 1333, 686, 1797, 87, 1730, 2033, 1740, 1675,
	1676, 1677, 1678, 1611, 1666, 1691, 1630, 1079, 95, 2336,
	1194, 1664, 2035, 2037, 1883, 1628, 1872, 2334, 2473, 94,
	95, 93, 1741, 1194, 2271, 1194, 1648, 1872, 533, 1697,
	1520, 94, 1811, 93, 1663, 1520, 1520, 1662, 2152, 2151,
	2148, 2149, 88, 2148, 2147, 1891, 1647, 720, 1727, 1194,
	720, 1742, 1566, 1555, 1556, 1557, 1558, 1568, 1559, 1560,
	1561, 1573, 1569, 1562, 1563, 1570, 1571, 1572, 1564, 1565,
	1567, 176, 1891, 1194, 1811, 1194, 1692, 2523, 176, 1890,
	1687, 1688, 2150, 176, 176, 1891, 1702, 176, 1194, 176,
	1705, 1703, 1797, 1991, 1713, 176, 1750, 1294, 1976, 1912,
	1194, 1883, 176, 1968, 1969, 1912, 1649, 1641, 1741, 1692,
	1733, 1735, 1751, 1734, 1738, 1752, 1739, 1098, 1737, 1809,
	1754, 1755, 918, 1872, 1871, 1811, 590, 1079, 1194, 2311,
	176, 533, 1670, 1891, 1671, 1672, 1673, 1674, 1834, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1107, 1106, 1108, 1109,
	1681, 1682, 1683, 1684, 1294, 1293, 1239, 1238, 177, 1833,
	177, 1868, 1913, 177, 1760, 1741, 1724, 1623, 1913, 1788,
	1789, 1915, 2266, 2494, 1791, 1198, 88, 1797, 919, 2312,
	2313, 2314, 1591, 1792, 81, 532, 1476, 1422, 1330, 1225,
	676, 534, 534, 534, 901, 1098, 1362, 900, 1094, 2426,
	1095, 1201, 2402, 2395, 1497, 2326, 2323, 2304, 1781, 534,
	534, 1806, 2242, 1808, 1096, 1097, 1093, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1107, 1106, 1108, 1109, 2241, 718,
	1807, 1296, 874, 1811, 881, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1107, 1106, 1108, 1109, 1363, 1364, 1365, 1690,
	2530, 2198, 176, 2175, 2171, 1977, 1686, 1680, 1679, 1795,
	176, 1098, 1410, 1325, 1848, 1321, 1292, 81, 533, 107,
	1498, 2173, 1944, 1945, 983, 2278, 2279, 2202, 2315, 533,
	1359, 2427, 1805, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1107, 1106, 1108, 1109, 1896, 1899, 1900, 1901, 1897, 1701,
	1898, 1902, 176, 176, 2278, 2279, 2512, 2281, 2167, 2166,
	2165, 34, 1582, 2090, 1955, 2528, 1782, 1887, 1922, 1945,
	1907, 1469, 1826, 2284, 1828, 2316, 2317, 1360, 1361, 1896,
	1899, 1900, 1901, 1897, 2112, 1898, 1902, 2110, 2283, 2113,
	177, 2114, 2111, 1900, 1901, 2109, 2108, 2505, 1615, 1202,
	1607, 2365, 1869, 2364, 2272, 2082, 2084, 177, 1839, 1840,
	2070, 2069, 533, 1873, 2085, 2451, 1906, 176, 1171, 1849,
	1974, 2259, 2374, 1859, 176, 2376, 534, 1581, 2262, 2258,
	177, 690, 1870, 2079, 1421, 534, 533, 665, 2146, 691,
	1930, 534, 1926, 533, 1192, 1188, 1910, 1333, 1333, 1880,
	1949, 2363, 533, 1967, 948, 1865, 1051, 1542, 947, 1189,
	2212, 86, 1944, 2016, 1988, 1917, 1984, 1914, 1933, 1934,
	1924, 1543, 87, 1983, 114, 176, 176, 176, 176, 176,
	86, 1697, 2264, 1927, 1605, 1606, 1191, 88, 1190, 88,
	95, 87, 176, 176, 2163, 1937, 1192, 1188, 1947, 1625,
	1626, 94, 1785, 93, 2466, 2422, 1946, 2145, 176, 1904,
	1612, 1189, 88, 1774, 1841, 1952, 698, 699, 2245, 1956,
	1957, 1958, 2068, 1801, 93, 2443, 1520, 1986, 95, 2442,
	2067, 1858, 1313, 2382, 2380, 2379, 1185, 1186, 1191, 94,
	1190, 93, 2372, 2324, 1985, 2263, 675, 2261, 2176, 1725,
	1308, 95, 697, 533, 94, 2371, 2252, 1883, 2532, 2531,
	672, 1868, 94, 1835, 2047, 1987, 1888, 1889, 2060, 533,
	1820, 1978, 1979, 1219, 1211, 1908, 100, 101, 2532, 176,
	2457, 2297, 688, 533, 97, 2008, 82, 1, 2024, 614,
	2514, 502, 533, 1592, 1169, 177, 2023, 516, 2510, 533,
	533, 1397, 176, 176, 176, 176, 176, 2060, 2072, 2102,
	1387, 2042, 2041, 2025, 176, 2347, 2423, 678, 2087, 176,
	176, 2073, 176, 1973, 1731, 176, 176, 176, 2322, 534,
	1695, 909, 139, 2093, 1658, 1659, 2059, 1181, 2093, 2500,
	2096, 104, 870, 103, 2061, 912, 534, 534, 1010, 534,
	1726, 534, 534, 2337, 534, 534, 534, 534, 534, 534,
	2161, 2120, 2074, 679, 2122, 2014, 176, 2123, 2015, 534,
	1931, 2071, 1667, 177, 1245, 1243, 1981, 1244, 1242, 533,
	1247, 2104, 2105, 2119, 2107, 1246, 2115, 680, 533, 177,
	1431, 1241, 2124, 176, 718, 718, 718, 89, 2103, 1836,
	534, 2106, 177, 176, 1470, 2182, 530, 1903, 2130, 174,
	1234, 1212, 1054, 1056, 949, 492, 2157, 177, 176, 2178,
	2153, 176, 1758, 2156, 498, 1125, 2066, 1918, 717, 710,
	2098, 2213, 2256, 177, 2078, 2190, 2080, 1875, 2065, 2189,
	177, 2083, 2076, 2450, 2158, 2159, 2373, 2177, 2492, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 534, 534,
	534, 2193, 1697, 1928, 2181, 2062, 2063, 2064, 1208, 2101,
	1827, 1132, 1544, 1640, 1600, 1490, 2207, 176, 2208, 555,
	554, 552, 1861, 1884, 1085, 609, 1853, 1220, 1895, 177,
	1893, 1163, 1892, 1783, 1644, 2280, 2210, 2211, 2221, 2276,
	2215, 1638, 1641, 1867, 563, 556, 548, 607, 2214, 2294,
	2188, 1994, 2199, 2250, 1996, 1929, 2195, 1064, 1184, 542,
	2097, 882, 73, 1541, 2428, 1641, 1641, 1641, 1641, 1641,
	2246, 2247, 176, 2414, 1800, 2235, 1183, 1553, 1554, 2168,
	1718, 60, 1908, 2260, 2275, 1641, 38, 2253, 1641, 2265,
	2300, 534, 1532, 537, 2524, 176, 1055, 704, 32, 31,
	30, 29, 2285, 2282, 2289, 2290, 534, 534, 28, 23,
	22, 21, 20, 176, 2288, 19, 176, 176, 176, 1215,
	25, 2287, 18, 2295, 17, 2190, 533, 533, 718, 2189,
	2296, 16, 109, 47, 1235, 44, 177, 42, 116, 115,
	45, 41, 986, 2329, 2330, 39, 27, 26, 15, 14,
	13, 12, 11, 533, 533, 533, 533, 10, 2187, 9,
	5, 4, 177, 1058, 24, 534, 2, 1960, 1720, 0,
	0, 0, 0, 0, 2332, 177, 0, 0, 534, 0,
	2343, 2341, 2342, 177, 2305, 177, 2307, 177, 177, 534,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 176,
	2216, 0, 0, 534, 2218, 2219, 0, 2220, 0, 0,
	2222, 2356, 2224, 0, 2226, 0, 2352, 0, 0, 0,
	0, 0, 533, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2369, 2377, 34,
	2368, 2378, 0, 2391, 0, 2389, 0, 0, 2387, 672,
	2385, 0, 0, 2393, 2093, 0, 2353, 0, 534, 0,
	0, 0, 2096, 0, 0, 0, 2096, 0, 0, 2397,
	2398, 0, 0, 0, 0, 0, 0, 533, 2400, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 2410, 1641, 0, 533, 0, 0,
	2407, 2418, 0, 2408, 2406, 0, 2417, 0, 2293, 0,
	0, 0, 2425, 533, 0, 0, 0, 533, 533, 0,
	0, 0, 874, 0, 0, 2413, 0, 0, 0, 0,
	2447, 534, 2449, 2444, 2445, 1163, 0, 0, 0, 1339,
	1339, 2446, 1339, 0, 1339, 1339, 533, 1348, 1339, 1339,
	1339, 1339, 1339, 533, 2333, 0, 0, 0, 0, 2458,
	1163, 1163, 874, 2461, 0, 0, 0, 0, 0, 2460,
	2464, 672, 0, 0, 177, 2462, 0, 533, 176, 0,
	0, 177, 2096, 0, 0, 0, 177, 177, 0, 0,
	177, 34, 177, 1409, 2475, 0, 0, 2472, 177, 0,
	0, 0, 702, 0, 0, 177, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 2487, 0, 2362, 0,
	2366, 2367, 0, 0, 533, 533, 0, 2495, 0, 0,
	0, 591, 533, 177, 534, 34, 0, 2499, 2490, 2425,
	2501, 2493, 2097, 0, 73, 2093, 2097, 0, 0, 0,
	2521, 718, 718, 718, 2513, 2518, 0, 0, 0, 0,
	2527, 0, 0, 0, 1193, 2529, 0, 546, 0, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 175,
	0, 2538, 488, 0, 2545, 528, 0, 0, 0, 0,
	0, 2536, 488, 0, 0, 0, 696, 0, 0, 0,
	488, 2555, 0, 0, 0, 2415, 0, 0, 0, 0,
	0, 0, 685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 703, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 1537, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 177, 0, 0, 0, 1551,
	1552, 172, 2097, 177, 718, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 1145, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 156, 0,
	0, 0, 0, 0, 0, 177, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 0, 0, 718, 0, 0, 0, 0, 0,
	73, 0, 718, 0, 0, 718, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 153, 874, 154, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 171, 0, 0,
	177, 114, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1925, 0, 177, 177,
	177, 177, 177, 0, 0, 0, 874, 0, 0, 0,
	0, 153, 881, 154, 0, 177, 177, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 1262, 0, 0,
	0, 0, 0, 162, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 534, 534, 0, 177, 177, 177, 177, 177,
	157, 0, 0, 0, 0, 0, 0, 177, 0, 162,
	0, 0, 177, 177, 0, 177, 0, 0, 177, 177,
	177, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 488, 177,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 177, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 177, 0, 0, 0, 149, 0,
	0, 1133, 0, 0, 0, 0, 0, 1263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 1877, 0, 0, 0, 1276,
	1279, 1280, 1281, 1282, 1283, 1284, 1164, 1285, 1286, 1287,
	1288, 1289, 1264, 1265, 1266, 1267, 1248, 1249, 1277, 0,
	1251, 0, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	0, 0, 0, 0, 0, 177, 0, 150, 155, 152,
	158, 159, 160, 161, 163, 164, 165, 166, 488, 0,
	1210, 0, 0, 167, 168, 169, 170, 0, 177, 0,
	0, 0, 0, 0, 0, 685, 0, 0, 1950, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 177,
	177, 177, 0, 0, 0, 0, 0, 0, 488, 534,
	534, 0, 1614, 0, 1195, 1197, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 0, 0, 0, 0, 534, 534, 534, 534,
	0, 0, 1278, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1172, 0, 0, 534, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1339, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 2075,
	534, 0, 0, 536, 0, 0, 0, 0, 718, 0,
	0, 668, 1163, 488, 0, 2100, 1339, 1163, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	534, 534, 0, 0, 0, 0, 0, 0, 0, 878,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1164, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 1164, 1164, 0, 0, 0,
	0, 488, 0, 0, 0, 874, 0, 0, 1163, 0,
	534, 177, 0, 0, 1614, 0, 0, 1385, 0, 0,
	1433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 0, 1430, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 534, 0,
	0, 488, 0, 0, 0, 534, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 1453, 1454, 488,
	488, 488, 488, 488, 488, 488, 72, 36, 37, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1486, 1487, 1488, 1489, 78, 534, 0, 0,
	40, 66, 67, 0, 64, 68, 0, 488, 0, 0,
	0, 0, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1527, 1528, 1529, 1530, 1531, 0, 0, 0,
	0, 0, 53, 1540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 1575, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	703, 703, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 546, 0, 703, 1430,
	703, 703, 703, 703, 703, 0, 0, 0, 0, 0,
	0, 0, 1614, 1614, 0, 0, 0, 0, 0, 0,
	0, 1548, 0, 0, 1385, 1549, 0, 0, 0, 1621,
	1622, 0, 0, 0, 0, 0, 703, 0, 0, 2348,
	2349, 2350, 2351, 0, 0, 0, 0, 0, 0, 0,
	685, 1195, 1590, 0, 0, 0, 1655, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 1430,
	0, 488, 0, 488, 0, 488, 1646, 0, 0, 0,
	0, 1610, 0, 0, 0, 0, 43, 46, 49, 48,
	51, 0, 63, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 2390, 0,
	2392, 0, 0, 0, 0, 1693, 0, 52, 77, 76,
	0, 0, 61, 62, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 987, 0, 992,
	0, 0, 994, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 54, 55, 0, 56, 57, 58,
	59, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2440,
	0, 0, 0, 2440, 2440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 0, 1614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 1614, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 488, 488, 0, 0, 488, 0,
	1786, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	75, 0, 0, 488, 1163, 0, 2488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	718, 718, 0, 0, 0, 0, 0, 0, 2508, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1222,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 1816, 1817, 1818, 0, 0, 0,
	0, 1821, 0, 1822, 1823, 0, 0, 0, 0, 703,
	703, 0, 1831, 0, 0, 1832, 0, 0, 0, 0,
	1430, 0, 0, 488, 0, 0, 1210, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1845, 1846, 1847, 0, 1610, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 488, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1370, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 488, 488, 488,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 488, 488, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 0, 0, 0, 2045, 2046, 488,
	0, 0, 2049, 0, 0, 0, 2051, 2052, 2053, 0,
	0, 0, 1440, 703, 0, 0, 0, 0, 0, 1444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 0, 0, 0,
	0, 0, 0, 703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1479, 0,
	488, 2054, 0, 0, 2057, 2058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 0, 1164, 488, 488, 488, 488, 488, 0, 0,
	0, 0, 0, 0, 0, 2116, 0, 0, 0, 0,
	488, 1385, 0, 488, 0, 0, 488, 2125, 1430, 0,
	0, 0, 0, 2099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2174, 0, 0,
	2117, 2118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 488,
	0, 0, 488, 0, 1627, 0, 0, 0, 0, 0,
	0, 0, 1631, 2237, 1634, 0, 0, 1479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2217, 0, 0, 0, 0, 0, 488, 0,
	546, 0, 0, 0, 0, 0, 2227, 2228, 2229, 2230,
	2232, 2234, 172, 0, 0, 0, 0, 0, 2240, 0,
	0, 0, 0, 0, 2243, 0, 0, 0, 0, 0,
	2248, 0, 0, 0, 0, 0, 114, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 2269, 2270, 0, 0, 2274, 0, 0, 0,
	0, 0, 0, 0, 2325, 0, 488, 0, 0, 0,
	146, 0, 0, 0, 2286, 135, 0, 0, 0, 0,
	2340, 0, 0, 0, 488, 0, 0, 488, 488, 488,
	0, 0, 0, 0, 0, 0, 153, 0, 154, 0,
	0, 0, 0, 0, 123, 124, 145, 144, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2354, 0, 2355, 0, 0, 0,
	0, 2358, 2359, 1479, 0, 0, 0, 0, 2335, 0,
	1769, 0, 0, 0, 0, 1779, 1780, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	2386, 0, 0, 0, 1790, 0, 0, 0, 0, 0,
	1385, 2394, 0, 0, 2396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2399, 0, 1164, 0,
	0, 0, 1793, 0, 0, 0, 0, 2403, 0, 0,
	0, 0, 0, 0, 140, 121, 147, 128, 120, 0,
	141, 142, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 129, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	130, 125, 126, 127, 131, 0, 0, 0, 0, 122,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 0, 0, 0, 2448, 546, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 2421, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 546, 2431,
	2432, 2433, 0, 2434, 2435, 0, 0, 2439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 2463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 1909, 154, 0, 0, 0,
	0, 0, 1316, 1317, 145, 144, 171, 0, 0, 1164,
	0, 0, 0, 2477, 0, 0, 0, 2522, 0, 0,
	0, 0, 0, 2482, 0, 0, 0, 0, 0, 2483,
	2484, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 2496, 138, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 1318, 147, 0, 1315, 0, 141, 142,
	0, 0, 0, 157, 0, 0, 0, 1999, 2000, 2001,
	2002, 2003, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1479, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 150, 155,
	152, 158, 159, 160, 161, 163, 164, 165, 166, 0,
	0, 0, 81, 0, 167, 168, 169, 170, 610, 617,
	618, 619, 620, 621, 611, 613, 0, 0, 0, 612,
	0, 0, 615, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 2191, 2192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 0, 81, 0, 0, 0, 0, 0, 610, 617,
	618, 619, 620, 621, 611, 613, 143, 0, 2164, 612,
	0, 0, 615, 622, 623, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2191, 2192,
	2206, 0, 0, 2209, 0, 0, 0, 0, 0, 0,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 2249,
	0, 0, 0, 0, 0, 0, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 0, 0, 0,
	0, 0, 167, 168, 169, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 0, 0, 0, 602, 603, 0, 0, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2318, 0, 0, 2319, 2320,
	2321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 852, 836, 410, 0, 781, 855, 751,
	769, 865, 772, 775, 817, 730, 795, 333, 766, 0,
	755, 725, 761, 726, 753, 783, 237, 750, 838, 799,
	854, 289, 234, 732, 756, 347, 771, 187, 819, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 861, 293, 806, 0, 395, 318, 0,
	0, 0, 785, 842, 793, 831, 780, 818, 740, 805,
	856, 767, 814, 857, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 2502, 0,
	2503, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	763, 811, 851, 764, 813, 232, 277, 239, 231, 414,
	862, 841, 729, 792, 849, 0, 0, 203, 853, 787,
	0, 816, 0, 868, 724, 808, 0, 727, 731, 864,
	845, 759, 242, 0, 0, 0, 0, 0, 0, 0,
	784, 794, 828, 778, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 804, 0, 0, 0, 736, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 0, 0, 0, 739, 0, 758, 829, 0, 722,
	260, 733, 319, 0, 834, 844, 779, 447, 848, 777,
	776, 823, 737, 840, 770, 288, 735, 285, 182, 199,
	2476, 768, 329, 369, 375, 839, 754, 762, 223, 760,
	373, 343, 431, 207, 250, 366, 348, 371, 803, 821,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	1048, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 749, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 835, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 826, 867, 342, 374, 213, 433, 394, 744,
	748, 742, 743, 797, 798, 745, 858, 859, 860, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 830, 738,
	0, 746, 747, 0, 837, 846, 847, 483, 801, 833,
	850, 802, 181, 196, 291, 863, 363, 253, 461, 441,
	437, 723, 741, 229, 752, 0, 0, 765, 773, 774,
	786, 788, 789, 790, 791, 315, 809, 810, 812, 820,
	822, 825, 827, 832, 843, 866, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 800, 807, 302,
	247, 265, 276, 815, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 796, 824, 298, 411, 412, 272, 852,
	836, 410, 0, 781, 855, 751, 769, 865, 772, 775,
	817, 730, 795, 333, 766, 0, 755, 725, 761, 726,
	753, 783, 237, 750, 838, 799, 854, 289, 234, 732,
	756, 347, 771, 187, 819, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 861,
	293, 806, 0, 395, 318, 0, 0, 0, 785, 842,
	793, 831, 780, 818, 740, 805, 856, 767, 814, 857,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 763, 811, 851, 764,
	813, 232, 277, 239, 231, 414, 862, 841, 729, 792,
	849, 0, 0, 203, 853, 787, 0, 816, 0, 868,
	724, 808, 0, 727, 731, 864, 845, 759, 242, 0,
	0, 0, 0, 0, 0, 0, 784, 794, 828, 778,
	0, 0, 0, 0, 0, 2126, 0, 757, 0, 804,
	0, 0, 0, 736, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 782, 0, 0, 0,
	739, 0, 758, 829, 0, 722, 260, 733, 319, 0,
	834, 844, 779, 447, 848, 777, 776, 823, 737, 840,
	770, 288, 735, 285, 182, 199, 0, 768, 329, 369,
	375, 839, 754, 762, 223, 760, 373, 343, 431, 207,
	250, 366, 348, 371, 803, 821, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 1048, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 749, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 835, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 826, 867,
	342, 374, 213, 433, 394, 744, 748, 742, 743, 797,
	798, 745, 858, 859, 860, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 830, 738, 0, 746, 747, 0,
	837, 846, 847, 483, 801, 833, 850, 802, 181, 196,
	291, 863, 363, 253, 461, 441, 437, 723, 741, 229,
	752, 0, 0, 765, 773, 774, 786, 788, 789, 790,
	791, 315, 809, 810, 812, 820, 822, 825, 827, 832,
	843, 866, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 800, 807, 302, 247, 265, 276, 815,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 796,
	824, 298, 411, 412, 272, 852, 836, 410, 0, 781,
	855, 751, 769, 865, 772, 775, 817, 730, 795, 333,
	766, 0, 755, 725, 761, 726, 753, 783, 237, 750,
	838, 799, 854, 289, 234, 732, 756, 347, 771, 187,
	819, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 861, 293, 806, 0, 395,
	318, 0, 0, 0, 785, 842, 793, 831, 780, 818,
	740, 805, 856, 767, 814, 857, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 763, 811, 851, 764, 813, 232, 277, 239,
	231, 414, 862, 841, 729, 792, 849, 0, 0, 203,
	853, 787, 0, 816, 0, 868, 724, 808, 0, 727,
	731, 864, 845, 759, 242, 0, 0, 0, 0, 0,
	0, 0, 784, 794, 828, 778, 0, 0, 0, 0,
	0, 2086, 0, 757, 0, 804, 0, 0, 0, 736,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 782, 0, 0, 0, 739, 0, 758, 829,
	0, 722, 260, 733, 319, 0, 834, 844, 779, 447,
	848, 777, 776, 823, 737, 840, 770, 288, 735, 285,
	182, 199, 0, 768, 329, 369, 375, 839, 754, 762,
	223, 760, 373, 343, 431, 207, 250, 366, 348, 371,
	803, 821, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 1048, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 749, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 835, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 826, 867, 342, 374, 213, 433,
	394, 744, 748, 742, 743, 797, 798, 745, 858, 859,
	860, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	830, 738, 0, 746, 747, 0, 837, 846, 847, 483,
	801, 833, 850, 802, 181, 196, 291, 863, 363, 253,
	461, 441, 437, 723, 741, 229, 752, 0, 0, 765,
	773, 774, 786, 788, 789, 790, 791, 315, 809, 810,
	812, 820, 822, 825, 827, 832, 843, 866, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 800,
	807, 302, 247, 265, 276, 815, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 796, 824, 298, 411, 412,
	272, 852, 836, 410, 0, 781, 855, 751, 769, 865,
	772, 775, 817, 730, 795, 333, 766, 0, 755, 725,
	761, 726, 753, 783, 237, 750, 838, 799, 854, 289,
	234, 732, 756, 347, 771, 187, 819, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 861, 293, 806, 0, 395, 318, 0, 0, 0,
	785, 842, 793, 831, 780, 818, 740, 805, 856, 767,
	814, 857, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 763, 811,
	851, 764, 813, 232, 277, 239, 231, 414, 862, 841,
	729, 792, 849, 0, 0, 203, 853, 787, 0, 816,
	0, 868, 724, 808, 0, 727, 731, 864, 845, 759,
	242, 0, 0, 0, 0, 0, 0, 0, 784, 794,
	828, 778, 0, 0, 0, 0, 0, 1629, 0, 757,
	0, 804, 0, 0, 0, 736, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 0,
	0, 0, 739, 0, 758, 829, 0, 722, 260, 733,
	319, 0, 834, 844, 779, 447, 848, 777, 776, 823,
	737, 840, 770, 288, 735, 285, 182, 199, 0, 768,
	329, 369, 375, 839, 754, 762, 223, 760, 373, 343,
	431, 207, 250, 366, 348, 371, 803, 821, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 1048, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	749, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 835, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	826, 867, 342, 374, 213, 433, 394, 744, 748, 742,
	743, 797, 798, 745, 858, 859, 860, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 830, 738, 0, 746,
	747, 0, 837, 846, 847, 483, 801, 833, 850, 802,
	181, 196, 291, 863, 363, 253, 461, 441, 437, 723,
	741, 229, 752, 0, 0, 765, 773, 774, 786, 788,
	789, 790, 791, 315, 809, 810, 812, 820, 822, 825,
	827, 832, 843, 866, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 800, 807, 302, 247, 265,
	276, 815, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 796, 824, 298, 411, 412, 272, 852, 836, 410,
	0, 781, 855, 751, 769, 865, 772, 775, 817, 730,
	795, 333, 766, 0, 755, 725, 761, 726, 753, 783,
	237, 750, 838, 799, 854, 289, 234, 732, 756, 347,
	771, 187, 819, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 861, 293, 806,
	0, 395, 318, 0, 0, 0, 785, 842, 793, 831,
	780, 818, 740, 805, 856, 767, 814, 857, 279, 220,
	186, 330, 396, 252, 0, 81, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 763, 811, 851, 764, 813, 232,
	277, 239, 231, 414, 862, 841, 729, 792, 849, 0,
	0, 203, 853, 787, 0, 816, 0, 868, 724, 808,
	0, 727, 731, 864, 845, 759, 242, 0, 0, 0,
	0, 0, 0, 0, 784, 794, 828, 778, 0, 0,
	0, 0, 0, 0, 0, 757, 0, 804, 0, 0,
	0, 736, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 0, 0, 0, 739, 0,
	758, 829, 0, 722, 260, 733, 319, 0, 834, 844,
	779, 447, 848, 777, 776, 823, 737, 840, 770, 288,
	735, 285, 182, 199, 0, 768, 329, 369, 375, 839,
	754, 762, 223, 760, 373, 343, 431, 207, 250, 366,
	348, 371, 803, 821, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 1048, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 749, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 835,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 826, 867, 342, 374,
	213, 433, 394, 744, 748, 742, 743, 797, 798, 745,
	858, 859, 860, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 830, 738, 0, 746, 747, 0, 837, 846,
	847, 483, 801, 833, 850, 802, 181, 196, 291, 863,
	363, 253, 461, 441, 437, 723, 741, 229, 752, 0,
	0, 765, 773, 774, 786, 788, 789, 790, 791, 315,
	809, 810, 812, 820, 822, 825, 827, 832, 843, 866,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 800, 807, 302, 247, 265, 276, 815, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 796, 824, 298,
	411, 412, 272, 852, 836, 410, 0, 781, 855, 751,
	769, 865, 772, 775, 817, 730, 795, 333, 766, 0,
	755, 725, 761, 726, 753, 783, 237, 750, 838, 799,
	854, 289, 234, 732, 756, 347, 771, 187, 819, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 861, 293, 806, 0, 395, 318, 0,
	0, 0, 785, 842, 793, 831, 780, 818, 740, 805,
	856, 767, 814, 857, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	763, 811, 851, 764, 813, 232, 277, 239, 231, 414,
	862, 841, 729, 792, 849, 0, 0, 203, 853, 787,
	0, 816, 0, 868, 724, 808, 0, 727, 731, 864,
	845, 759, 242, 0, 0, 0, 0, 0, 0, 0,
	784, 794, 828, 778, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 804, 0, 0, 0, 736, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 0, 0, 0, 739, 0, 758, 829, 0, 722,
	260, 733, 319, 0, 834, 844, 779, 447, 848, 777,
	776, 823, 737, 840, 770, 288, 735, 285, 182, 199,
	0, 768, 329, 369, 375, 839, 754, 762, 223, 760,
	373, 343, 431, 207, 250, 366, 348, 371, 803, 821,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	1048, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 749, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 835, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 826, 867, 342, 374, 213, 433, 394, 744,
	748, 742, 743, 797, 798, 745, 858, 859, 860, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 830, 738,
	0, 746, 747, 0, 837, 846, 847, 483, 801, 833,
	850, 802, 181, 196, 291, 863, 363, 253, 461, 441,
	437, 723, 741, 229, 752, 0, 0, 765, 773, 774,
	786, 788, 789, 790, 791, 315, 809, 810, 812, 820,
	822, 825, 827, 832, 843, 866, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 800, 807, 302,
	247, 265, 276, 815, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 796, 824, 298, 411, 412, 272, 852,
	836, 410, 0, 781, 855, 751, 769, 865, 772, 775,
	817, 730, 795, 333, 766, 0, 755, 725, 761, 726,
	753, 783, 237, 750, 838, 799, 854, 289, 234, 732,
	756, 347, 771, 187, 819, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 861,
	293, 806, 0, 395, 318, 0, 0, 0, 785, 842,
	793, 831, 780, 818, 740, 805, 856, 767, 814, 857,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 763, 811, 851, 764,
	813, 232, 277, 239, 231, 414, 862, 841, 729, 792,
	849, 0, 0, 869, 853, 787, 0, 816, 0, 868,
	724, 808, 0, 727, 731, 864, 845, 759, 242, 0,
	0, 0, 0, 0, 0, 0, 784, 794, 828, 778,
	0, 0, 0, 0, 0, 0, 0, 757, 0, 804,
	0, 0, 0, 736, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 782, 0, 0, 0,
	739, 0, 758, 829, 0, 722, 260, 733, 319, 0,
	834, 844, 779, 447, 848, 777, 776, 823, 737, 840,
	770, 288, 735, 285, 182, 199, 0, 768, 329, 369,
	375, 839, 754, 762, 223, 760, 373, 343, 431, 207,
	250, 366, 348, 371, 803, 821, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 734, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 749, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 835, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 721, 715, 714, 286, 295, 826, 867,
	342, 374, 213, 433, 394, 744, 748, 742, 743, 797,
	798, 745, 858, 859, 860, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 830, 738, 0, 746, 747, 0,
	837, 846, 847, 483, 801, 833, 850, 802, 181, 196,
	291, 863, 363, 253, 461, 441, 437, 723, 741, 229,
	752, 0, 0, 765, 773, 774, 786, 788, 789, 790,
	791, 315, 809, 810, 812, 820, 822, 825, 827, 832,
	843, 866, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 800, 807, 302, 247, 265, 276, 815,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 796,
	824, 298, 411, 412, 272, 852, 836, 410, 0, 781,
	855, 751, 769, 865, 772, 775, 817, 730, 795, 333,
	766, 0, 755, 725, 761, 726, 753, 783, 237, 750,
	838, 799, 854, 289, 234, 732, 756, 347, 771, 187,
	819, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 861, 293, 806, 0, 395,
	318, 0, 0, 0, 785, 842, 793, 831, 780, 818,
	740, 805, 856, 767, 814, 857, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 763, 811, 851, 764, 813, 232, 277, 239,
	231, 414, 862, 841, 729, 792, 849, 0, 0, 869,
	853, 787, 0, 816, 0, 868, 724, 808, 0, 727,
	731, 864, 845, 759, 242, 0, 0, 0, 0, 0,
	0, 0, 784, 794, 828, 778, 0, 0, 0, 0,
	0, 0, 0, 757, 0, 804, 0, 0, 0, 736,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 782, 0, 0, 0, 739, 0, 758, 829,
	0, 722, 260, 733, 319, 0, 834, 844, 779, 447,
	848, 777, 776, 823, 737, 840, 770, 288, 735, 285,
	182, 199, 0, 768, 329, 369, 375, 839, 754, 762,
	223, 760, 373, 343, 431, 207, 250, 366, 348, 371,
	803, 821, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 1226, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 734, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 749, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 835, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 721,
	715, 714, 286, 295, 826, 867, 342, 374, 213, 433,
	394, 744, 748, 742, 743, 797, 798, 745, 858, 859,
	860, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	830, 738, 0, 746, 747, 0, 837, 846, 847, 483,
	801, 833, 850, 802, 181, 196, 291, 863, 363, 253,
	461, 441, 437, 723, 741, 229, 752, 0, 0, 765,
	773, 774, 786, 788, 789, 790, 791, 315, 809, 810,
	812, 820, 822, 825, 827, 832, 843, 866, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 800,
	807, 302, 247, 265, 276, 815, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 796, 824, 298, 411, 412,
	272, 852, 836, 410, 0, 781, 855, 751, 769, 865,
	772, 775, 817, 730, 795, 333, 766, 0, 755, 725,
	761, 726, 753, 783, 237, 750, 838, 799, 854, 289,
	234, 732, 756, 347, 771, 187, 819, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 861, 293, 806, 0, 395, 318, 0, 0, 0,
	785, 842, 793, 831, 780, 818, 740, 805, 856, 767,
	814, 857, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 763, 811,
	851, 764, 813, 232, 277, 239, 231, 414, 862, 841,
	729, 792, 849, 0, 0, 869, 853, 787, 0, 816,
	0, 868, 724, 808, 0, 727, 731, 864, 845, 759,
	242, 0, 0, 0, 0, 0, 0, 0, 784, 794,
	828, 778, 0, 0, 0, 0, 0, 0, 0, 757,
	0, 804, 0, 0, 0, 736, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 0,
	0, 0, 739, 0, 758, 829, 0, 722, 260, 733,
	319, 0, 834, 844, 779, 447, 848, 777, 776, 823,
	737, 840, 770, 288, 735, 285, 182, 199, 0, 768,
	329, 369, 375, 839, 754, 762, 223, 760, 373, 343,
	431, 207, 250, 366, 348, 371, 803, 821, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 712, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 734, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	749, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 835, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 721, 715, 714, 286, 295,
	826, 867, 342, 374, 213, 433, 394, 744, 748, 742,
	743, 797, 798, 745, 858, 859, 860, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 830, 738, 0, 746,
	747, 0, 837, 846, 847, 483, 801, 833, 850, 802,
	181, 196, 291, 863, 363, 253, 461, 441, 437, 723,
	741, 229, 752, 0, 0, 765, 773, 774, 786, 788,
	789, 790, 791, 315, 809, 810, 812, 820, 822, 825,
	827, 832, 843, 866, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 800, 807, 302, 247, 265,
	276, 815, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 796, 824, 298, 411, 412, 272, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 1577, 0, 564, 0, 0, 0, 237, 572,
	0, 0, 0, 289, 234, 0, 1578, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 579, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 81, 0, 0, 178, 179, 180, 610,
	617, 618, 619, 620, 621, 611, 613, 0, 0, 211,
	612, 218, 588, 615, 622, 623, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 547, 561, 0,
	578, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	559, 701, 0, 0, 0, 595, 0, 560, 0, 0,
	571, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 594, 0, 0, 447,
	0, 0, 592, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 601, 593, 583, 585, 602, 603, 580, 581, 584,
	604, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	596, 567, 566, 0, 576, 577, 0, 586, 587, 589,
	568, 569, 570, 565, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 564, 0, 0, 0, 237, 572, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 579, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 81, 0, 0, 178, 179, 180, 610, 617, 618,
	619, 620, 621, 611, 613, 0, 0, 211, 612, 218,
	588, 615, 622, 623, 0, 232, 277, 239, 231, 414,
	0, 0, 1533, 1534, 1535, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 547, 561, 0, 578, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 559, 0,
	0, 0, 0, 595, 0, 560, 0, 0, 571, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 594, 0, 0, 447, 0, 0,
	592, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 601,
	593, 583, 585, 602, 603, 580, 581, 584, 604, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 596, 567,
	566, 0, 576, 577, 0, 586, 587, 589, 568, 569,
	570, 565, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	564, 0, 0, 0, 237, 572, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 579, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 574, 575, 0, 0, 0, 0, 0, 0,
	1653, 0, 279, 220, 186, 330, 396, 252, 0, 81,
	0, 0, 178, 179, 180, 610, 617, 618, 619, 620,
	621, 611, 613, 0, 0, 211, 612, 218, 588, 615,
	622, 623, 1654, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 547, 561, 0, 578, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 558, 559, 0, 0, 0,
	0, 595, 0, 560, 0, 0, 571, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 594, 0, 0, 447, 0, 0, 592, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 601, 593, 583,
	585, 602, 603, 580, 581, 584, 604, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 596, 567, 566, 0,
	576, 577, 0, 586, 587, 589, 568, 569, 570, 565,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 72, 410, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 564,
	0, 0, 0, 237, 572, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	579, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 81, 0,
	0, 178, 179, 180, 610, 617, 618, 619, 620, 621,
	611, 613, 0, 0, 211, 612, 218, 588, 615, 622,
	623, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 547, 561, 0, 578, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 559, 0, 0, 0, 0,
	595, 0, 560, 0, 0, 571, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 594, 0, 0, 447, 0, 0, 592, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 601, 593, 583, 585,
	602, 603, 580, 581, 584, 604, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 596, 567, 566, 0, 576,
	577, 0, 586, 587, 589, 568, 569, 570, 565, 181,
	196, 291, 80, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 564, 0, 0,
	0, 237, 572, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 579, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 81, 0, 0, 178,
	179, 180, 610, 617, 618, 619, 620, 621, 611, 613,
	0, 0, 211, 612, 218, 588, 615, 622, 623, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	547, 561, 0, 578, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 559, 0, 0, 0, 0, 595, 0,
	560, 0, 0, 571, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 594,
	0, 0, 447, 0, 0, 592, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 2471, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 601, 593, 583, 585, 602, 603,
	580, 581, 584, 604, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 596, 567, 566, 0, 576, 577, 0,
	586, 587, 589, 568, 569, 570, 565, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 564, 0, 0, 0, 237,
	572, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 579, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 81, 0, 1194, 178, 179, 180,
	610, 617, 618, 619, 620, 621, 611, 613, 0, 0,
	211, 612, 218, 588, 615, 622, 623, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 547, 561,
	0, 578, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 559, 0, 0, 0, 0, 595, 0, 560, 0,
	0, 571, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 594, 0, 0,
	447, 0, 0, 592, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 601, 593, 583, 585, 602, 603, 580, 581,
	584, 604, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 596, 567, 566, 0, 576, 577, 0, 586, 587,
	589, 568, 569, 570, 565, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 564, 0, 0, 0, 237, 572, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 579, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 81, 0, 0, 178, 179, 180, 610, 617,
	618, 619, 620, 621, 611, 613, 0, 0, 211, 612,
	218, 588, 615, 622, 623, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 547, 561, 0, 578,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 559,
	701, 0, 0, 0, 595, 0, 560, 0, 0, 571,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 594, 0, 0, 447, 0,
	0, 592, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	601, 593, 583, 585, 602, 603, 580, 581, 584, 604,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 596,
	567, 566, 0, 576, 577, 0, 586, 587, 589, 568,
	569, 570, 565, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 564, 0, 0, 0, 237, 572, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 579, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	81, 0, 0, 178, 179, 180, 610, 617, 618, 619,
	620, 621, 611, 613, 0, 0, 211, 612, 218, 588,
	615, 622, 623, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 547, 561, 0, 578, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 559, 0, 0,
	0, 0, 595, 0, 560, 0, 0, 571, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 594, 0, 0, 447, 0, 0, 592,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 601, 593,
	583, 585, 602, 603, 580, 581, 584, 604, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 596, 567, 566,
	0, 576, 577, 0, 586, 587, 589, 568, 569, 570,
	565, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 564,
	0, 0, 0, 237, 572, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	579, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 81, 0,
	0, 178, 179, 180, 610, 617, 618, 619, 620, 621,
	611, 613, 0, 0, 211, 612, 218, 588, 615, 622,
	623, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 561, 0, 578, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 559, 0, 0, 0, 0,
	595, 0, 560, 0, 0, 571, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 594, 0, 0, 447, 0, 0, 592, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 601, 593, 583, 585,
	602, 603, 580, 581, 584, 604, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 596, 567, 566, 0, 576,
	577, 0, 586, 587, 589, 568, 569, 570, 565, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 917, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 916, 447, 0, 0, 0, 0, 0, 913, 914,
	288, 877, 285, 182, 199, 907, 911, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 1214, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 1080, 0, 1081, 1082, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 1159, 1162,
	0, 0, 0, 0, 1158, 1161, 0, 0, 211, 1157,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 0, 447, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 72, 410, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 81, 0, 1194, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 181, 196, 291, 80, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 72, 410, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	81, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 0, 0, 0, 447, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 181, 196, 291, 80, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 1599, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 1597, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	288, 877, 285, 182, 199, 875, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 1194, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 2441, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 1599, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 1386,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 0, 447, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 0, 0, 0, 447, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 1863, 0, 0,
	0, 1864, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 1237, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 1236, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 2509, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 0, 447, 0,
	0, 0, 2441, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	81, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 0, 0, 0, 447, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	0, 410, 298, 411, 412, 272, 1642, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 181, 196, 291, 1477, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 1358, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 1356, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 1354, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 1352, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 1350,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 1346, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 1344, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 1342, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 1319, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 1221, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 1057, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 683, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 538, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 486, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 172, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 154,
	0, 0, 0, 0, 0, 1316, 1317, 145, 144, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 1318, 147, 0, 1315,
	0, 141, 142, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 0, 0, 0, 0, 167, 168, 169, 170,
}

var yyPact = [...]int{
	3510, -1000, -395, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1750, 1775, -1000, -1000, -1000, -1000, 1856,
	-1000, 583, 1526, -1000, 1735, 4557, -1000, 34048, 368, -1000,
	33500, 366, 87, 34048, -1000, 124, -1000, 110, 34048, 116,
	32952, -1000, -1000, -302, 14317, 1685, 6, -8, 34048, -1000,
	1836, 1524, -1000, 286, -1000, -1000, -1000, -1000, -1000, -1000,
	32404, -1000, -1000, -1000, 1752, 1731, 1862, 520, 1681, -1000,
	1796, 1524, -1000, 14317, 1825, 1785, 13769, -1000, 13769, 312,
	-1000, -1000, 9926, -1000, -1000, 18703, 34048, 34048, 200, -1000,
	1735, -1000, -1000, 301, -1000, 243, 1453, -1000, 1450, -1000,
	618, 422, 258, 386, 371, 256, 255, 254, 253, 251,
	250, 249, 248, 263, -1000, 557, 557, -155, -185, 2606,
	303, 303, 303, 324, 1715, 1711, -1000, 664, -1000, 557,
	557, 279, 557, 557, 557, 557, 211, 210, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 300, 1735, 184, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 34048, 109, 34048, -1000, 448, 34048,
	680, 680, 31, 680, 680, 680, 680, 122, 577, -13,
	-1000, 106, 215, 123, 194, 652, 121, 115, -1000, -1000,
	180, 652, 1102, 527, 90, -1000, 680, 7702, 7702, 7702,
	-1000, 1716, -1000, -1000, -1000, -1000, -1000, -1000, 1113, -1000,
	322, -1000, -1000, -1000, -1000, 34048, 31856, 292, 570, -1000,
	-1000, -1000, 25, -1000, -1000, 1263, 650, 14317, 822, -1000,
	1411, 457, -1000, -1000, -1000, -1000, -1000, 414, 14865, 14865,
	14865, 14865, -1000, -1000, 1441, 1441, 1441, 1441, 1441, 1441,
	1441, 14865, 1441, 14865, 1441, 1441, 1441, 1441, 14317, 1441,
	1441, 1441, -1000, 1441, 1441, 1441, 1441, 1441, 1441, 1441,
	1441, 446, 1441, 1441, 1441, 1441, 1441, -1000, -1000, -1000,
	-1000, 1441, 1441, 1441, 1441, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 16509, -1000, 12125, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34048, -1000, 1441, 135,
	1796, 1524, -1000, 1836, 1813, 286, -1000, 1765, 1355, 1304,
	996, 1524, 1431, 34048, -1000, 1458, -1000, -1000, -1000, 1630,
	1028, 1098, -1000, -1000, -1000, -1000, 1000, 14317, -1000, -1000,
	1852, -1000, 15961, 445, 793, 1851, 31308, -1000, 312, 312,
	1445, 9370, -55, -1000, -1000, -1000, 569, 21443, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1716, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1412, 34048, -1000, -1000, 2797, 1144, -1000, 1523, -1000, 1410,
	-1000, 1488, 1536, 364, 1144, 340, 339, 337, -1000, -99,
	-1000, -1000, -1000, -1000, -1000, 557, 557, -1000, 240, 1823,
	4557, 34598, -1000, -1000, -1000, 30760, 1522, 1144, -1000, 1520,
	-1000, 666, 394, 439, 439, 1144, -1000, -1000, 34048, 1144,
	656, 643, 34048, 34048, -1000, 30212, -1000, 29664, 29116, 976,
	34048, 28568, 28020, 27472, 26924, 26376, -1000, 1591, -1000, 1507,
	-1000, -1000, -1000, 34048, 34048, 34048, 278, -1000, -1000, 34048,
	1144, -1000, -1000, 973, 963, 557, 557, 962, 1095, 1089,
	1081, 557, 557, 951, 1080, 23635, 183, 947, 946, 924,
	994, 1076, 178, 991, 986, 920, 34048, 1519, 34048, -1000,
	162, 538, 331, 564, 1735, 1682, 1443, 321, 359, 1144,
	309, 309, -1000, 8258, -1000, -1000, 1075, 14317, -1000, 676,
	652, 652, -1000, -1000, -1000, -1000, -1000, -1000, 680, 34048,
	676, -1000, -1000, -1000, 652, 680, 34048, 680, 680, 680,
	680, 652, 652, 652, 680, 34048, 34048, 34048, 34048, 34048,
	34048, 34048, 34048, 34048, 7702, 7702, 7702, 527, 680, -306,
	-1000, 1071, -1000, 1587, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 113, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -104, 1442, 25828, -1000, -308, -310, -311,
	-312, -1000, -1000, -1000, -323, -324, -1000, -1000, -1000, 14317,
	14317, 14317, 14317, -1000, 798, 14865, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 810, 695, 14865, 14865, 14865, 14865, 14865,
	14865, 14865, 14865, 14865, 14865, 14865, 14865, 14865, 14865, 14865,
	692, 1049, 1042, 457, 457, 457, 457, -1000, 13769, 14317,
	14317, 14317, 14317, 11028, 457, -1000, 1144, 25280, 13769, 13769,
	14317, 1725, 586, 650, 34048, -1000, 996, -1000, -1000, -1000,
	888, -1000, 34048, 34048, 1001, 14317, 10480, 8258, 13769, 13769,
	13769, 13769, 13769, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 441, 1343, 1178, 1383, -1000, 1438,
	-1000, -170, 18155, 14317, 1034, -1000, -1000, -1000, 1796, -1000,
	1796, 1343, 1713, 1633, 13769, -1000, -1000, 1713, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1186, -1000, 34048, 1431,
	1777, 34048, 1628, 1027, 275, -1000, 14317, 14317, 1423, -1000,
	950, 34048, -1000, -1000, 24732, -1000, -1000, 7146, -1000, 34048,
	244, 34048, -1000, 23087, 24184, 8814, -55, -1000, 8814, 1362,
	-1000, -32, -5, 11576, 494, -1000, -1000, -1000, 2606, 15413,
	1237, 494, 52, -1000, -1000, -1000, 1488, -1000, 1488, 1488,
	1488, 1488, 275, 275, 275, 275, -1000, -1000, -1000, -1000,
	-1000, 1515, 1514, -1000, 1488, 1488, 1488, 1488, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1513, 1513, 1513, 1506, 1506,
	302, -1000, 14317, 203, 34048, 1764, 919, 162, 310, 1564,
	1144, 1144, 1144, 310, -1000, 1165, 1107, -1000, -377, 1422,
	-1000, -1000, 1822, -1000, -1000, 629, 734, 723, 548, 34048,
	143, 238, -1000, 293, -1000, 34048, 1144, 638, 439, 1144,
	-1000, 1144, -1000, -1000, -1000, -1000, -1000, 1144, 1421, -1000,
	1364, 764, 722, 718, 720, 1421, -1000, -1000, -127, 1421,
	-1000, 1421, -1000, 1421, -1000, 1421, -1000, 1421, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 576, 34048, 143, 692,
	-1000, 320, -1000, -1000, 692, 692, -1000, -1000, -1000, -1000,
	1022, 1019, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -368,
	34048, -1000, 156, 560, 223, 266, 206, 34048, 126, 1782,
	193, 209, 34048, 34048, 309, 1582, 34048, 1768, 34048, -1000,
	-1000, -1000, -1000, 650, 34048, -1000, -1000, 680, 680, -1000,
	-1000, 34048, 680, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 680, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34048,
	34048, -1000, -1000, -1000, -1000, -1000, 48, -38, 262, -1000,
	-1000, -1000, -1000, -1000, 1793, -1000, 650, 627, 588, -1000,
	-1000, -1000, 814, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	810, 14865, 14865, 14865, 1333, 353, 1477, 1429, 853, 788,
	788, 712, 712, 500, 500, 500, 500, 500, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1330, -1000, 1173, 846, 842,
	842, 933, 1848, -1000, -1000, -1000, 996, -1000, 1330, 1330,
	937, 13769, -1000, -1000, 599, -1000, 14317, 996, -1000, -1000,
	996, 1415, 1394, 1841, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 866, 996, 13769, 13769, 1381,
	1441, 440, -1000, 1330, 996, 996, 1330, 1330, 8258, 996,
	-1000, 34048, -1000, -296, -1000, -53, 462, 1441, -1000, 23635,
	996, 1263, -1000, -1000, -1000, -1000, -1000, 20895, 1489, 1713,
	-1000, -1000, 1441, 1379, -1000, -1000, 275, 45, 20347, -1000,
	-1000, 650, 650, 14317, -1000, -1000, -1000, -1000, -1000, -1000,
	421, 1834, 282, 1441, -1000, 1389, 1605, -1000, -1000, -1000,
	1776, 17607, 34048, 1433, 1427, -1000, 418, -1000, 1362, -55,
	-48, -1000, -1000, -1000, -1000, 650, -1000, 1048, 247, 2692,
	-1000, 297, -1000, -1000, -1000, -1000, 1692, 32, -1000, -1000,
	-1000, 275, 275, -1000, -1000, -1000, -1000, -1000, -1000, 1017,
	1017, -1000, -1000, -1000, -1000, -1000, 906, -1000, -1000, -1000,
	905, -1000, -1000, 1142, 1581, 203, -1000, -1000, 557, 1016,
	1703, 34048, -1000, -1000, 1212, 156, 34048, 581, 1580, -1000,
	1564, 1564, 1564, 34048, -1000, -1000, -1000, -1000, -370, 47,
	299, -1000, -1000, -1000, 4825, 34048, 1359, -1000, 138, -1000,
	1189, 1655, 34048, -1000, 1353, 1512, 1144, 1144, -1000, -1000,
	-1000, 34048, 1441, -1000, -1000, -1000, -1000, 347, 1734, 1727,
	143, 138, 494, 1144, -1000, -1000, -1000, -1000, -1000, -371,
	1348, 334, 147, 228, 34048, 34048, 34048, 34048, 34048, 378,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 205, 318,
	-1000, 34048, 34048, 455, -1000, -1000, -1000, 652, -1000, -1000,
	652, -1000, -1000, -1000, -1000, -1000, 1722, 34048, -41, -341,
	-1000, -332, -1000, -1000, -1000, -1000, 1138, 351, 1477, 14865,
	14865, 13769, -117, 1014, 1014, 692, -1000, -1000, -1000, 14317,
	14317, -1000, -1000, -1000, 14317, 14317, 1288, 572, -1000, 14317,
	754, -1000, -1000, 14317, 14317, 14317, 996, 213, -1000, 1330,
	1330, 13769, 8258, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 462, -1000, 439, 439, 439, 34048, -1000,
	-1000, 1800, -1000, 1646, 1645, 1839, 1834, -1000, 23087, 1713,
	-1000, -1000, 34048, -286, -1000, 1679, 1650, -1000, -1000, -1000,
	-1000, 6590, 1796, 14317, 1579, 34048, 1441, -1000, 17058, 34048,
	34048, 23087, 23087, 23087, 23087, 23087, -1000, 1622, 1621, -1000,
	1613, 1610, 1617, 34048, -1000, 1328, 996, 1813, 17607, 19799,
	1250, 23087, -1000, -1000, 23087, 34048, 6034, -1000, -1000, -50,
	-35, -1000, -1000, -1000, -1000, 2606, -1000, -1000, 551, 1774,
	1689, -1000, -1000, -1000, -1000, 1299, -1000, 1296, 1338, 1294,
	114, -1000, 1535, 1721, 557, 557, -1000, 896, -1000, 1144,
	-1000, -1000, 326, -1000, 1760, 34048, 1576, 1575, 1574, -1000,
	-386, 895, 1511, 1533, 14317, 1510, 1821, 1283, 34048, -1000,
	-1000, 34048, -1000, -1000, 348, -1000, 203, 34048, -1000, -1000,
	-1000, 238, 34048, -1000, 5139, 138, -1000, -1000, -1000, -1000,
	-1000, -1000, 34048, 161, -1000, 1508, 1094, -1000, -1000, 1542,
	-1000, -1000, -1000, -1000, 139, 222, -1000, 34048, 444, 1581,
	34048, -1000, -1000, -1000, 680, 680, -1000, -1000, 1719, -1000,
	1144, 14865, 14865, -1000, 457, -1000, 1441, 996, 1488, 1488,
	-1000, 1488, 1506, -1000, 1488, 103, 1488, 98, 1488, -1000,
	-1000, 996, 996, 842, 842, 899, 870, -107, -1000, 650,
	14317, 1152, 1091, 842, -1000, 1485, 1469, -1000, -1000, 996,
	-1000, -1000, 1788, 1788, 1788, 1278, 34048, -1000, -1000, -1000,
	-1000, 1834, 1832, 1301, -1000, -1000, 45, 343, -1000, 1666,
	1650, -1000, 1820, 1671, 1818, -1000, -1000, -1000, 650, -1000,
	1744, 1226, -1000, 550, 1245, -1000, -1000, 13221, 1280, 1639,
	417, 1278, 1428, 1605, 1541, 1573, 1570, -1000, -1000, -1000,
	-1000, 1614, -1000, 1599, -1000, -1000, 1458, -1000, -1000, 1178,
	244, 23087, 1341, 1341, -1000, 411, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 785, 5019, 1861, -1000, 1010, -1000, 1043,
	-1000, 636, 624, -1000, 34048, 1464, -1000, 275, 1009, 275,
	886, -1000, 878, -1000, -1000, -232, -1000, -1000, 1440, 1589,
	-1000, -1000, 34048, -1000, -1000, 34048, 34048, 34048, 1463, 1816,
	-1000, 14317, 1462, 542, 1082, 34048, 34048, -1000, -1000, 232,
	1441, -1000, 1272, 1265, -1000, -157, -1000, 14317, -1000, -1000,
	-1000, 860, 860, -1000, 1458, -1000, -1000, -1000, 1163, -1000,
	-1000, -131, 34048, 34048, 34048, 34048, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 457, 14865, -1000, -1000, 275,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 14317, -1000, 14317, -1000, 1796, 998, 650, 14317, 14317,
	-1000, 830, 812, -1000, 1441, 1677, 1441, 1441, 19799, -1000,
	1832, 1830, 1815, 1661, 1665, 1665, 1666, -1000, 1808, 1807,
	-1000, 995, 1806, 987, 615, -1000, 34048, 14317, 1441, -1000,
	284, 34048, 1441, 34048, -1000, 1828, -1000, -1000, 14317, 1460,
	-1000, 14317, -1000, -1000, -1000, -1000, -1000, 1834, 1341, -1000,
	-1000, 508, -1000, 14317, -1000, -1000, -1000, 214, -1000, -1000,
	-1000, -1000, -1000, 1459, 14317, -1000, -1000, -1000, 1143, 1136,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1458, -1000,
	-1000, -1000, -1000, 238, -379, 1061, 34048, 808, -1000, 1228,
	1283, 413, -1000, 14317, 280, -1000, 238, -1000, -194, -195,
	842, -1000, -1000, 1772, -1000, -1000, 8258, -1000, -1000, 1456,
	1546, -1000, 207, -1000, 842, 842, 996, -1000, 842, 842,
	1125, 1116, 19251, -1000, 1802, 1798, 22539, 22539, 462, 1830,
	-1000, 14317, 14317, 1653, 809, -1000, -1000, -1000, -1000, 981,
	980, -1000, 952, -1000, 1860, -1000, 650, -1000, 1441, -1000,
	393, 1245, -1000, 1796, 650, 34048, 650, 1828, -1000, 842,
	-1000, 1441, 34048, 786, -1000, -1000, 1771, 1198, 33, -1000,
	1195, -1000, -1000, -1000, -1000, 12673, -1000, -1000, -1000, -1000,
	-1000, -1000, 286, 1274, -1000, 541, 34048, 34048, 996, 237,
	-137, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1172, -1000,
	-1000, -1000, -1000, -1000, 1172, 1172, -1000, -1000, 650, 1263,
	-1000, 807, -1000, -1000, -1000, -1000, -1000, 34048, 1245, 34048,
	-1000, 1162, 1796, -1000, 1158, -1000, 286, -1000, 1430, 1533,
	-1000, 996, -128, 8258, 5478, 1153, -1000, -1000, 1627, -121,
	-148, 21991, -1000, -1000, -1000, -1000, -1000, 1139, -1000, -1000,
	-1000, 1572, 635, -128, 14317, 1334, -1000, -1000, -45, -1000,
	-1000, -1000, -1000, -1000, 1542, -1000, 1595, -1000, -1000, -1000,
	1516, -1000, 1838, -1000, -1000, -1000, 775, 824, -1000, -1000,
	-1000, -1000, 771, 34048, 296, -1000, -1000, -131, -133, -1000,
	1858, 529, 529, -1000, -1000, -389, 1134, 166, -1000, -139,
	-1000, -1000, -1000, 283, 845, -1000, -1000, 806, -389, -1000,
	-150, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2218, 2217, 7, 2, 2216, 18, 64, 159, 24,
	177, 88, 2214, 2213, 2211, 2210, 195, 191, 187, 2209,
	2207, 2202, 2201, 2200, 2199, 2198, 2197, 2196, 2195, 193,
	144, 151, 2192, 2191, 2190, 97, 146, 62, 70, 148,
	2189, 2188, 58, 2187, 2185, 2183, 157, 156, 647, 2182,
	155, 83, 28, 2181, 2174, 2172, 2170, 2165, 2162, 2161,
	2160, 2159, 2158, 2151, 2150, 2149, 2148, 233, 2147, 2146,
	6, 2144, 57, 2143, 2142, 2136, 2131, 101, 2130, 2129,
	2128, 2127, 2126, 2125, 122, 2124, 2123, 2114, 2113, 163,
	2111, 2109, 120, 84, 91, 2108, 2107, 82, 158, 2106,
	99, 2105, 2104, 2102, 132, 2101, 2452, 2100, 45, 44,
	2099, 49, 67, 40, 39, 2097, 2096, 2095, 38, 76,
	2094, 95, 42, 2093, 96, 78, 2091, 46, 2089, 2085,
	93, 2084, 2083, 2082, 73, 2080, 2078, 3282, 2077, 66,
	116, 80, 56, 2076, 22, 31, 2075, 2074, 2073, 2072,
	2071, 30, 2070, 2069, 2065, 121, 9, 2064, 20, 43,
	29, 109, 2063, 37, 65, 2062, 119, 2061, 2060, 36,
	10, 27, 2058, 23, 115, 135, 25, 79, 136, 2053,
	2038, 32, 60, 2036, 2033, 2032, 2031, 2027, 2026, 52,
	2024, 34, 2022, 152, 2020, 17, 35, 16, 50, 169,
	47, 8, 2019, 161, 2018, 33, 160, 105, 139, 2017,
	2016, 2015, 150, 235, 2014, 2012, 71, 142, 123, 130,
	2010, 229, 2005, 2004, 63, 1013, 1466, 15, 140, 2001,
	2000, 2481, 128, 113, 41, 1999, 167, 1997, 1996, 1994,
	164, 141, 85, 947, 87, 1989, 1981, 1975, 1970, 1968,
	1967, 1965, 1964, 225, 165, 86, 102, 133, 55, 1962,
	1960, 1943, 104, 68, 1940, 137, 134, 111, 199, 1938,
	149, 129, 124, 1935, 89, 1933, 1932, 1931, 1929, 72,
	1925, 1924, 1922, 1921, 131, 127, 100, 75, 1920, 77,
	98, 126, 125, 26, 1918, 14, 1914, 1913, 147, 13,
	1906, 3, 0, 1905, 5, 145, 230, 143, 1900, 1891,
	1, 1888, 4, 1887, 1884, 117, 1883, 1881, 1880, 12,
	21, 11, 1879, 1877, 1876, 223, 2514, 112, 1874, 153,
}

//line sql.y:6201
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 323, 324, 324, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 302, 302, 302, 305, 305,
	27, 62, 29, 29, 28, 28, 31, 31, 30, 6,
	6, 6, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 9, 9, 11,
	11, 11, 11, 11, 14, 15, 10, 10, 16, 16,
	75, 75, 17, 18, 18, 18, 18, 327, 327, 132,
	132, 130, 130, 131, 131, 198, 198, 19, 20, 20,
	208, 208, 207, 207, 207, 209, 209, 209, 209, 243,
	243, 21, 21, 21, 21, 21, 90, 90, 304, 304,
	303, 301, 301, 300, 300, 299, 33, 34, 43, 43,
	43, 43, 44, 45, 306, 306, 275, 49, 49, 48,
	48, 48, 48, 50, 50, 47, 47, 46, 46, 277,
	277, 264, 264, 276, 276, 276, 276, 276, 276, 276,
	263, 263, 101, 101, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 318, 318, 180, 180, 180,
	180, 180, 180, 110, 110, 118, 118, 118, 118, 108,
	108, 109, 107, 107, 107, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 117, 117,
	114, 114, 114, 115, 115, 115, 319, 319, 319, 319,
	246, 246, 246, 246, 249, 249, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 248, 248, 248, 248, 248,
	250, 250, 250, 250, 250, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	252, 252, 252, 252, 252, 252, 252, 252, 262, 262,
	253, 253, 257, 257, 258, 258, 258, 259, 259, 259,
	260, 260, 255, 255, 255, 255, 255, 255, 256, 256,
	256, 265, 289, 289, 288, 288, 286, 286, 286, 286,
	274, 274, 283, 283, 283, 283, 283, 273, 273, 269,
	269, 269, 270, 270, 271, 271, 268, 268, 272, 272,
	285, 285, 284, 266, 266, 267, 267, 291, 320, 320,
	320, 320, 321, 321, 292, 311, 312, 310, 310, 310,
	310, 310, 72, 72, 72, 220, 220, 220, 281, 281,
	280, 280, 280, 282, 282, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 215, 215, 215, 309, 309, 309, 309,
	309, 309, 308, 308, 308, 278, 278, 278, 307, 307,
	51, 51, 164, 164, 40, 40, 40, 40, 40, 40,
	39, 39, 39, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 41, 41, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 77, 77, 78,
	78, 78, 78, 79, 79, 79, 294, 294, 52, 52,
	3, 3, 1, 1, 2, 2, 4, 4, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	261, 261, 261, 293, 293, 295, 297, 297, 297, 297,
	296, 86, 86, 23, 32, 32, 24, 24, 24, 24,
	25, 25, 53, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 313, 313, 214, 214, 222, 222, 213, 213, 236,
	236, 236, 216, 216, 216, 217, 217, 317, 317, 317,
	55, 55, 55, 57, 57, 58, 59, 59, 238, 238,
	239, 239, 60, 61, 73, 73, 73, 73, 73, 73,
	76, 76, 76, 13, 13, 13, 13, 69, 69, 69,
	12, 12, 56, 56, 63, 314, 314, 315, 316, 316,
	316, 316, 64, 66, 26, 26, 26, 26, 26, 26,
	96, 96, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 91, 91, 91, 85, 85, 328,
	67, 68, 68, 89, 89, 89, 82, 82, 82, 88,
	88, 88, 93, 93, 95, 95, 95, 95, 95, 97,
	97, 97, 97, 97, 97, 97, 92, 92, 94, 94,
	94, 94, 229, 229, 229, 228, 228, 121, 121, 123,
	122, 122, 124, 124, 125, 125, 125, 162, 140, 140,
	196, 196, 195, 195, 197, 197, 197, 197, 199, 199,
	126, 126, 126, 126, 127, 127, 128, 128, 129, 129,
	237, 237, 234, 234, 234, 233, 233, 133, 133, 133,
	135, 134, 134, 134, 134, 136, 136, 138, 138, 137,
	137, 139, 144, 144, 143, 143, 141, 141, 141, 141,
	142, 142, 142, 142, 145, 145, 106, 106, 106, 106,
	106, 106, 116, 116, 116, 116, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 74, 74,
	74, 74, 211, 211, 146, 146, 154, 154, 154, 154,
	147, 147, 147, 147, 147, 147, 147, 155, 155, 155,
	161, 156, 156, 152, 152, 152, 152, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 329, 329, 254,
	254, 254, 153, 153, 153, 153, 153, 87, 87, 87,
	87, 87, 242, 242, 242, 245, 245, 245, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 167, 167, 83, 83, 165, 165, 166,
	168, 168, 163, 163, 163, 149, 149, 149, 169, 169,
	170, 170, 171, 171, 173, 172, 172, 174, 175, 175,
	175, 176, 176, 177, 177, 177, 42, 42, 42, 42,
	42, 37, 37, 37, 37, 38, 38, 38, 98, 98,
	98, 98, 100, 100, 99, 99, 70, 70, 71, 71,
	71, 104, 104, 105, 105, 105, 102, 102, 103, 103,
	193, 193, 178, 178, 178, 185, 185, 185, 181, 181,
	183, 183, 183, 184, 184, 184, 182, 190, 190, 192,
	192, 191, 191, 187, 187, 188, 188, 189, 189, 189,
	186, 186, 148, 148, 148, 148, 148, 194, 194, 194,
	194, 200, 200, 158, 158, 160, 160, 159, 120, 201,
	201, 205, 202, 202, 206, 206, 206, 206, 206, 203,
	203, 204, 204, 230, 230, 230, 210, 210, 221, 221,
	218, 218, 219, 219, 212, 212, 223, 223, 223, 65,
	157, 157, 290, 290, 287, 226, 226, 227, 227, 231,
	231, 235, 235, 232, 232, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 325, 326, 240, 241, 241,
	241,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	5, 10, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 4, 4, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 4, 2, 4, 5, 4, 4, 4,
	4, 4, 3, 3, 3, 5, 2, 3, 3, 3,
	3, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 4, 4,
	4, 6, 6, 2, 2, 3, 3, 3, 0, 1,
	1, 1, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 5, 5, 6, 4, 4, 8,
	6, 8, 6, 8, 5, 4, 2, 2, 1, 2,
	2, 2, 8, 8, 6, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 2, 2, 0, 3,
	0, 2, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -323, -5, -9, -14, -15, -16, -17, -18, -19,
	-20, -21, -22, -23, -24, -25, -53, -54, -55, -57,
	-58, -59, -60, -61, -12, -56, -26, -27, -62, -63,
	-64, -65, -66, -7, -6, -11, 7, 8, -75, -28,
	30, -33, -43, 206, -44, -34, 207, -45, 209, 208,
	244, 210, 237, 72, 284, 285, 287, 288, 289, 290,
	-76, 242, 243, 212, 34, 43, 31, 32, 35, 215,
	-8, -29, 6, -325, 9, 410, 239, 238, 26, -10,
	427, 83, -324, 561, -193, -178, 20, 31, 27, -177,
	-173, -89, -178, 18, 16, 5, -67, -328, -67, -67,
	10, 11, -67, -275, -277, 83, 143, 83, -67, -49,
	-48, -47, -46, -50, 29, -40, -41, -298, -39, -36,
	211, 208, 252, 107, 108, 244, 245, 246, 210, 228,
	243, 247, 242, 261, -35, 78, 31, 427, 430, -282,
	207, 213, 214, 411, 110, 109, 73, 209, -279, 336,
	531, -50, 533, 99, 101, 532, 42, 218, 534, 535,
	536, 537, 227, 538, 539, 540, 541, 547, 548, 549,
	550, 111, 5, -67, -235, -231, -302, -225, 86, 87,
	88, 424, 230, 458, 459, 277, 78, 39, 333, 336,
	531, 284, 298, 292, 319, 311, 425, 460, 280, 231,
	265, 528, 309, 119, 533, 283, 461, 245, 341, 342,
	343, 99, 287, 378, 546, 282, 462, 544, 101, 532,
	77, 49, 42, 240, 307, 303, 534, 266, 463, 435,
	259, 110, 107, 553, 34, 301, 48, 28, 543, 109,
	47, 535, 134, 464, 536, 345, 324, 522, 46, 346,
	246, 465, 81, 429, 530, 347, 302, 348, 276, 542,
	212, 466, 514, 349, 350, 523, 467, 325, 329, 468,
	370, 351, 560, 50, 469, 470, 524, 108, 471, 76,
	537, 296, 297, 472, 274, 229, 372, 323, 227, 33,
	352, 426, 278, 56, 253, 373, 44, 327, 557, 43,
	518, 473, 521, 322, 318, 51, 474, 475, 476, 477,
	538, 321, 295, 317, 552, 447, 271, 539, 60, 214,
	331, 330, 332, 260, 369, 314, 478, 479, 480, 234,
	79, 481, 304, 19, 482, 483, 353, 267, 484, 54,
	485, 486, 376, 243, 487, 52, 540, 37, 248, 554,
	541, 488, 489, 490, 491, 492, 355, 493, 354, 326,
	328, 255, 356, 428, 494, 300, 247, 545, 495, 235,
	529, 249, 252, 242, 377, 236, 496, 497, 498, 499,
	500, 281, 501, 502, 288, 547, 41, 503, 504, 505,
	506, 275, 270, 371, 380, 59, 80, 338, 507, 527,
	294, 268, 508, 285, 53, 548, 549, 550, 262, 551,
	7, 558, 559, 358, 111, 272, 273, 45, 315, 254,
	509, 510, 305, 306, 320, 293, 316, 286, 515, 256,
	359, 244, 511, 379, 269, 334, 339, 432, 261, 360,
	526, 431, 313, 310, 263, 512, 361, 219, 257, 258,
	513, 516, 362, 363, 279, 364, 365, 366, 367, 368,
	264, 430, 291, 308, 340, 391, 392, 393, 394, 395,
	396, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 419, 217, -67, 217, -137, -231, 217,
	-203, 342, -222, 344, 357, 352, 362, 350, -214, 353,
	355, 255, -317, 370, 217, 359, 206, 160, 345, 354,
	363, 364, 279, 365, 368, 264, -313, -302, 536, 551,
	119, 312, 349, 347, 371, 518, 367, 366, -231, 286,
	-238, 291, -226, -302, -225, 289, -137, -73, 514, 210,
	-240, -240, -91, 518, 520, -156, -106, 127, -116, -119,
	-111, -112, -150, -151, -152, -153, -117, -163, 149, 150,
	157, 128, -161, -120, 24, 423, 412, 411, 420, 421,
	422, 160, 29, 202, 66, 67, 414, 415, 130, 55,
	387, 388, -118, 383, 389, 384, 417, 418, 102, 419,
	-226, -231, 222, 382, 216, 155, 410, -113, -109, -6,
	-159, 381, 385, 386, 390, -302, -225, -115, -114, -146,
	89, 95, 100, 96, -322, 103, -325, 90, 91, 92,
	93, 94, 104, 105, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 42, 358, 358, -137, -67,
	-171, -89, -173, -8, -6, -325, 6, -67, -6, -7,
	-11, -29, -31, 454, -30, -231, -178, -193, 10, 145,
	40, 48, -176, -177, -10, -6, -106, 17, 21, 22,
	-94, 151, -106, -231, -68, -94, -212, 221, -67, -67,
	-202, -243, 286, -206, 371, 370, -227, -204, -226, -224,
	-203, 369, 211, 433, 126, 23, 25, 129, 160, 114,
	17, 130, 35, 213, 312, 228, 159, 224, 411, 206,
	70, 434, 383, 384, 381, 387, 413, 414, 382, 344,
	29, 11, 436, 26, 238, 22, 36, 153, 208, 133,
	241, 24, 239, 102, 105, 439, 20, 73, 233, 12,
	226, 38, 14, 440, 441, 15, 222, 221, 145, 218,
	68, 9, 202, 27, 142, 64, 442, 121, 443, 444,
	445, 446, 115, 66, 143, 18, 555, 385, 386, 31,
	519, 420, 423, 250, 155, 71, 57, 520, 127, 448,
	449, 103, 450, 106, 74, 525, 123, 16, 69, 40,
	451, 251, 452, 223, 556, 453, 374, 454, 144, 209,
	410, 67, 455, 421, 216, 357, 6, 416, 30, 237,
	225, 113, 65, 456, 217, 132, 417, 418, 220, 116,
	422, 104, 5, 120, 32, 10, 72, 75, 388, 389,
	390, 55, 112, 427, 131, 13, 457, 375, 125, 119,
	-276, 143, -263, -267, -226, 232, -292, 228, -137, -285,
	-284, -226, -90, -221, 218, 226, 225, 120, -306, 123,
	272, 382, 216, -46, -47, -203, 159, -77, 249, 251,
	84, 84, -267, -266, -265, -307, 251, 232, -291, -283,
	224, 233, -273, 225, 226, -268, 218, 121, -307, -268,
	223, 233, 251, 251, 111, 251, 111, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 248, -274, 135, -274,
	431, 431, -279, -307, -307, -307, 220, 33, 33, -223,
	-268, 220, 23, -274, -274, -203, 159, -274, -274, -274,
	-274, 259, 259, -274, -274, -274, -274, -274, -274, -274,
	-274, -274, -274, -274, -274, -274, -274, -274, 217, -306,
	-98, 368, 279, 78, -48, 261, -32, -137, -221, 218,
	219, -306, -137, 203, -137, -216, 143, 13, -216, -213,
	358, 356, 343, 348, -216, -216, -216, -216, 262, 341,
	-269, 218, 33, 229, 358, 262, 341, 262, 263, 262,
	263, 351, 361, 262, -236, 12, 145, 382, 346, 350,
	255, 217, 256, 219, 360, -302, 521, 263, -236, 90,
	-217, 143, 358, 258, -216, -241, -325, -227, 312, -241,
	-241, 30, 87, 220, -226, -69, -226, 90, -13, -9,
	-17, -16, -18, 135, -96, 358, -84, 160, 536, 522,
	523, 524, 521, 355, 529, 527, 525, 262, 526, 84,
	123, 125, 126, -106, 142, -147, 135, 136, 137, 138,
	139, 140, 141, 145, 127, 129, 143, 144, 124, 146,
	147, 148, 149, 150, 151, 152, 154, 153, 155, 156,
	159, 204, 205, -112, -112, -112, -112, -161, -325, -325,
	-325, -325, -325, -325, -112, -211, -325, -112, -325, -325,
	-325, -325, -167, -106, -325, -329, -325, -329, -329, -254,
	-325, -254, -325, -325, -325, -325, -325, 203, -325, -325,
	-325, -325, -325, -254, -254, -254, -254, 100, 95, 89,
	-163, 96, 90, -226, -231, -6, -7, -156, -240, -314,
	-315, -140, -137, -325, 279, -176, -10, -6, -171, -177,
	-173, -6, -67, -82, -95, 61, 62, -97, 22, 36,
	65, 63, 21, -326, 85, -326, -193, -326, 84, -31,
	-196, 83, 59, 41, 90, 90, 84, 19, -172, -174,
	-106, 12, -229, -228, 23, -226, 90, 203, 98, 12,
	-138, 27, -137, -212, -212, 84, 286, -206, -243, -208,
	-207, 372, 374, 135, -230, -226, 90, 29, 85, 84,
	-137, -246, -249, -251, -250, -252, -247, -248, 309, 310,
	160, 313, 315, 316, 317, 318, 319, 320, 321, 322,
	323, 324, 30, 240, 305, 306, 307, 308, 325, 326,
	327, 328, 329, 330, 331, 332, 292, 311, 425, 293,
	294, 295, 296, 297, 298, 300, 301, 302, 303, 304,
	-305, -302, 83, 85, 84, -253, 83, -98, 217, -302,
	218, 218, 218, -67, 410, -274, -274, 248, 17, -39,
	-36, -298, 16, -35, -36, 211, 107, 108, 208, 83,
	-263, 83, -272, -305, -302, 83, 121, 223, 120, -271,
	-268, -271, -272, -302, -163, -302, 121, 121, -199, -226,
	-199, -199, 21, -199, 21, -199, 21, 92, -226, -199,
	21, -199, 21, -199, 21, -199, 21, -199, 21, 29,
	76, 77, 29, 79, 80, 81, -163, -163, -263, -203,
	-137, -302, 92, 92, -274, -274, 92, 90, 90, 90,
	-274, -274, 92, 90, -233, -231, 90, -308, 234, 276,
	278, 92, 92, 92, 92, 29, 90, -309, 29, 543,
	542, 544, 545, 546, 92, 29, 92, 29, 92, -226,
	83, -137, -104, 266, 206, 208, 211, 74, 90, 280,
	135, 42, 84, 220, 217, -302, -218, 222, -218, -232,
	-231, -224, 90, -106, -270, 12, 145, -236, -236, -216,
	-137, -270, -236, -216, -137, -216, -216, -216, -216, -236,
	-236, -236, -216, -231, -231, -137, -137, -137, -137, -137,
	-137, -137, -241, -241, -241, -217, -216, 521, 90, 74,
	-239, 289, 323, 515, 516, 517, 84, 427, -130, -137,
	521, 521, 521, 521, 521, 521, -106, -106, -106, -106,
	-154, 103, 127, 104, 105, -119, -155, -159, -161, 97,
	145, 129, 143, 144, -111, -112, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -242,
	-302, 90, 160, 90, 90, -92, -94, -106, -106, -106,
	-106, -106, -74, 114, 115, 116, -302, -226, -92, -92,
	-106, -88, 22, 36, -165, -166, 131, -163, -326, -326,
	92, -226, -226, -81, -80, 392, 393, 394, 395, 397,
	398, 399, 402, 403, 407, 408, 391, 409, 396, 401,
	404, 405, 406, 400, 308, -106, -93, 22, 36, -92,
	-227, -232, -224, -92, -93, -93, -92, -92, 203, -193,
	-326, 84, -316, 374, 375, 519, -234, 251, -233, 23,
	-157, -156, 90, -176, -176, 61, 62, 57, -92, -97,
	-326, -30, 23, -195, -226, 60, 90, -255, -203, 333,
	334, -106, -106, 84, -175, 25, 26, -137, -228, 151,
	-232, -137, -198, 251, -137, -122, -124, -125, -126, -140,
	-162, -325, 12, -130, -131, -139, -231, -206, -208, 84,
	373, 375, 376, 74, 106, -106, -256, 159, -281, -280,
	-279, -263, -265, -266, -267, 85, -256, -259, 339, 338,
	-253, -253, -253, -253, -253, -255, -255, -255, -255, 83,
	83, -253, -253, -253, -253, -257, 83, -257, -257, -258,
	83, -258, -292, -106, -289, -288, -286, -287, 227, 99,
	427, 75, -284, -175, 92, -104, -219, 222, -290, -287,
	-302, -302, -302, -219, -302, 90, -302, 90, -78, -52,
	-1, 555, 556, 557, 84, 17, -264, -263, -51, 276,
	-295, -296, 251, -291, -285, -272, 121, -271, -272, -272,
	-302, 84, 27, 111, 111, 111, 111, 427, 208, 30,
	-263, -51, -242, 220, -242, -242, 90, 90, -215, 551,
	-130, -100, 268, 135, 257, 257, 217, 217, 270, -137,
	281, 283, 282, 280, 21, 269, 271, 273, 259, -137,
	-137, -218, 74, -132, -137, 24, -231, -137, -216, -216,
	-137, -216, -216, -137, -226, -84, 374, 84, 427, 20,
	-85, 20, 103, 104, 105, -155, -111, -112, -111, 126,
	241, 84, -326, 23, 84, 75, -326, -326, -326, 12,
	12, -326, -326, -326, 84, 12, -92, -168, -166, 133,
	-106, -326, -326, 84, 84, 12, -245, 23, -326, -92,
	-92, -325, 203, -326, -326, -326, -326, -326, -227, -315,
	518, 375, -144, -143, -141, 72, 221, 73, -325, -233,
	-326, -149, -226, 92, 96, -178, -121, -123, 12, -97,
	-161, 85, 84, -255, -182, -187, -213, -226, 90, 160,
	-174, 203, -145, 13, -148, 30, 55, -9, -325, -325,
	30, 84, -133, -135, -134, -136, 64, 68, 70, 65,
	66, 67, 71, -237, 23, -122, -7, -6, -325, -137,
	-130, -327, 12, 75, -327, 84, 203, -207, -209, 377,
	374, 380, -302, 90, -77, 84, -279, -267, -179, -101,
	38, -260, 340, -255, -255, -262, 90, -262, 92, 92,
	85, -42, -37, -38, 31, 78, -286, -274, 90, 37,
	-226, 85, -100, -137, 127, 74, -290, -290, -290, -231,
	-2, 554, 560, 121, 83, 343, 16, -195, 84, 85,
	-164, 277, 85, -297, 55, -226, 85, 83, -272, -272,
	-226, -325, 217, 29, 29, -51, -164, -256, -302, 553,
	552, 85, 219, 275, -105, 387, -102, 90, 86, -137,
	-137, -137, -137, -137, 211, 208, 260, 220, -130, -137,
	84, -72, 236, 231, -236, -236, 31, -137, 374, 530,
	528, 126, 241, -119, -112, -94, 424, -244, 160, 309,
	240, 307, 303, 323, 314, 338, 305, 339, 302, 301,
	300, -244, -242, -106, -106, -106, -106, -171, 134, -106,
	132, -106, -106, -106, -326, 160, 309, -326, -326, -93,
	-227, -141, -268, -268, -268, -199, -210, 20, 12, 55,
	55, -121, -145, -122, -97, -226, -185, 514, -190, 44,
	-188, -189, 45, -186, 46, 54, 151, -176, -106, -200,
	74, -201, -205, -163, -158, -160, -159, -325, -194, -326,
	-226, -199, -201, -124, -125, -125, -124, -125, 64, 64,
	64, 69, 64, 69, 64, -134, -231, -326, -326, -7,
	-234, 75, -122, -122, -139, -231, 151, 374, 378, 379,
	-279, -321, 103, 127, 29, 74, 336, 99, -319, 159,
	-320, 223, 120, 121, 235, 23, 39, 85, 84, 85,
	84, 85, 84, -220, 464, 127, -38, -37, -274, -274,
	92, -302, 219, 24, -137, 74, 74, 74, -79, 558,
	92, 83, -3, 78, -106, 83, 17, -263, -163, 253,
	145, -289, -195, -293, -295, -137, -108, -325, -107, -109,
	-113, 149, 150, -164, -137, -99, 266, 274, 83, -103,
	87, -304, 75, 257, 336, 257, -137, -72, -42, -137,
	-216, -216, 31, -302, -119, -112, -325, -326, -253, -253,
	-253, -258, -253, 297, -253, 297, -253, -326, -326, -326,
	-326, 84, -326, 20, -326, -83, 416, -106, 84, 84,
	-326, 83, 83, -326, -142, 20, -142, -142, -326, -137,
	-145, -169, 14, -182, 49, 315, -192, -191, 53, 45,
	-189, 17, 47, 17, 28, -200, 84, 135, 84, -326,
	-326, 84, 55, 203, -326, -145, -128, -127, 74, 75,
	-129, 74, -127, 64, 64, -196, -326, -198, -122, -145,
	-145, 203, 103, -325, -110, -118, -108, 10, 90, 90,
	-302, 121, 121, -137, 83, -255, 90, -255, 92, 92,
	464, 29, 79, 80, 81, 29, 76, 77, -137, -137,
	-137, -137, -294, 83, 17, -106, 83, 135, 85, -195,
	-195, 254, -159, -325, 85, -326, 84, -261, 427, 430,
	-106, -114, -114, -196, 85, -301, 427, -303, -226, -226,
	-226, -226, -111, -255, -106, -106, -176, 90, -106, -106,
	92, 92, -325, 64, 16, 14, -325, -325, -234, -169,
	-170, 15, 17, -183, 51, -181, 50, -181, -191, 17,
	17, 90, 17, 90, 121, -205, -106, -160, 55, -9,
	-226, -158, -226, -171, -106, 83, -106, -145, -145, -106,
	-151, 419, 83, -106, 85, 85, -196, -293, -52, 85,
	-195, 92, 85, -159, -86, -325, 250, -320, -295, 431,
	431, -326, 23, -300, -299, -227, 83, 75, -87, 145,
	427, -326, -326, -326, -326, -326, 85, 85, -197, -326,
	-226, 223, 17, 17, -197, -197, -144, -170, -106, -156,
	-184, 52, 74, 106, 90, 90, 90, 10, -158, 203,
	-176, -195, -171, -326, -195, 85, 23, 85, 560, 121,
	85, 250, -9, 84, 135, -195, -137, -326, 425, 71,
	428, 84, -326, -326, -326, 74, 106, -201, -226, 85,
	-176, 85, -180, -9, 83, -3, -326, -70, 427, -299,
	-278, -227, 90, 92, 85, 60, 426, 429, -226, 223,
	-311, -312, 74, -321, -318, 103, 127, 99, -319, 112,
	113, -70, -106, 83, -71, 265, 518, -304, 60, -312,
	74, 11, 10, 103, 90, 85, -195, 228, -301, 427,
	-310, 236, 231, 234, 30, -310, -4, 559, 85, 267,
	428, 230, 29, 103, 92, -4, 429,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 709, 709, 709, 0,
	709, 0, 0, 709, -2, -2, 709, 1141, 0, 709,
	0, 0, -2, 641, 643, 0, 645, -2, 0, 0,
	654, 1597, 1597, 704, 0, 0, 0, 0, 0, 709,
	1002, 45, 709, 0, 80, 81, 660, 661, 662, 60,
	0, 1595, 1, 3, 66, 70, 0, 0, 0, 53,
	1011, 0, 73, 0, 0, 713, 0, 711, 0, 1124,
	709, 709, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 507, 447, 490, 445, 476,
	-2, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 340, 340, 0, 0, -2,
	438, 438, 438, 0, 0, 0, 473, 1126, 393, 340,
	340, 0, 340, 340, 340, 340, 0, 0, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 1028, 143, 1142, 1139, 1140, 35, 36,
	37, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 0, 1118, 0, 571, 799, 0,
	632, 632, 0, 632, 632, 632, 632, 0, 0, 0,
	583, 0, 0, 0, 0, 629, 0, 0, 602, 604,
	0, 629, 0, 635, 0, 616, 632, 1598, 1598, 1598,
	1109, 0, 626, 624, 638, 639, 621, 622, 640, 644,
	0, 649, 652, 1135, 1136, 0, 667, 44, 1373, 659,
	672, 673, 0, 705, 706, 40, 901, 0, 821, 825,
	836, 849, 850, 851, 852, 853, 855, 856, 0, 0,
	0, 0, 861, 862, 0, 0, 0, 0, 0, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 983, 0,
	947, 947, 918, 947, 949, 949, 0, 0, 0, 1594,
	992, 0, 0, 0, 0, 0, 0, 248, 249, 900,
	1098, 949, 949, 949, 949, -2, -2, 195, 196, 197,
	198, 199, 200, 201, 0, 191, 0, 253, 254, 250,
	251, 252, 884, 885, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 1597, 0, 682, 0, 0,
	1011, 0, 1003, 1002, 58, 0, 709, -2, 0, 0,
	0, 0, 42, 0, 47, 760, 72, 71, 1050, 0,
	0, 0, 54, 1012, 62, 64, 1013, 0, 714, 715,
	0, 738, 742, 0, 710, 0, 0, 1125, 1124, 1124,
	97, 0, 1538, 1102, -2, -2, 0, 0, 1137, 1138,
	1111, -2, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, -2,
	0, 0, 153, 154, 0, 38, 366, 0, 149, 0,
	360, 310, 1028, 0, 0, 0, 0, 0, 709, 0,
	1119, 134, 135, 141, 142, 340, 340, 487, 0, 0,
	143, 143, 454, 455, 456, 0, 0, -2, 364, 0,
	439, 0, 0, 354, 354, 358, 356, 357, 0, 0,
	0, 0, 0, 0, 467, 0, 468, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 341, 0,
	485, 486, 394, 0, 0, 0, 0, 465, 466, 0,
	0, 1127, 1128, 0, 0, 340, 340, 0, 0, 0,
	0, 340, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	1041, 0, 0, 0, -2, 0, 563, 0, 0, 0,
	1120, 1120, 570, 0, 572, 573, 0, 0, 574, 0,
	629, 629, 627, 628, 576, 577, 578, 579, 632, 0,
	0, 349, 350, 351, 629, 632, 0, 632, 632, 632,
	632, 629, 629, 629, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 1598, 1598, 635, 632, 0,
	612, 0, 613, 614, 617, 618, 1599, 1600, 1157, 619,
	620, 1110, 642, 650, 653, 670, 668, 669, 671, 663,
	664, 665, 666, 0, 684, 685, 690, 0, 0, 0,
	0, 696, 697, 698, 0, 0, 701, 702, 703, 0,
	0, 0, 0, 819, 0, 0, 890, 891, 892, 893,
	894, 895, 896, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 857, 858, 859, 860, 863, 0, 0,
	0, 0, 0, 878, 873, 874, 0, 0, 0, 0,
	0, 719, 0, 984, 0, 916, 0, 917, 919, 920,
	0, 921, 0, 0, 0, 0, 722, 0, 0, 722,
	722, 0, 0, 185, 186, 187, 188, 202, 203, 204,
	205, 206, 255, 992, 0, 900, 0, 0, 41, 674,
	675, 0, 782, 1130, 0, 52, 61, 63, 1011, 56,
	1011, 0, 724, 0, 0, -2, -2, 725, 731, 732,
	733, 734, 735, 49, 1596, 50, 0, 69, 0, 43,
	0, 0, 0, 0, 322, 1053, 0, 0, 1004, 1005,
	1008, 0, 739, 743, 0, 745, 746, 0, 712, 0,
	95, 0, 798, 0, 0, 0, 1538, 1108, 0, 99,
	100, 0, 0, 0, 328, 1113, 1114, 1115, -2, 347,
	0, 328, 317, 261, 262, 263, 310, 265, 310, 310,
	310, 310, 322, 322, 322, 322, 293, 294, 295, 296,
	297, 0, 0, 280, 310, 310, 310, 310, 300, 301,
	302, 303, 304, 305, 306, 307, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 312, 312, 312, 314, 314,
	0, 39, 0, 332, 0, 1008, 0, 1041, 1122, 1132,
	0, 0, 0, 1122, 117, 0, 0, 488, 518, 448,
	477, 489, 0, 451, 452, -2, 0, 0, 438, 0,
	440, 0, 348, 0, -2, 0, 358, 0, 354, 358,
	355, 358, 346, 359, 469, 470, 471, 0, 529, 768,
	0, 0, 0, 0, 0, 535, 536, 537, 0, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 478,
	479, 480, 481, 482, 483, 484, 0, 0, 440, 0,
	474, 0, 395, 396, 0, 0, 399, 400, 401, 402,
	0, 0, 405, 406, 407, 785, 786, 408, 432, 433,
	434, 409, 410, 411, 412, 413, 414, 415, 426, 427,
	428, 429, 430, 431, 416, 417, 418, 419, 420, 423,
	0, 127, 1032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1120, 0, 0, 0, 0, 800,
	1143, 1144, 633, 634, 0, 352, 353, 632, 632, 580,
	603, 0, 632, 584, 605, 585, 587, 586, 588, 607,
	608, 632, 591, 630, 631, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 609, 610, 611, 636, 0,
	0, 651, 655, 656, 657, 658, 0, 0, 687, 91,
	692, 693, 694, 695, 707, 700, 902, 816, 817, 818,
	820, 822, 0, 886, 888, 824, 826, 897, 898, 899,
	0, 0, 0, 0, 0, 830, 834, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 854,
	962, 963, 964, 876, 877, 0, 736, 0, 0, 0,
	0, 0, 0, 879, 880, 881, 0, 875, 0, 0,
	0, 0, 720, 721, 990, 987, 0, 0, 948, 950,
	0, 0, 0, 0, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 946, 965, 0, 0, 0, 723,
	993, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	1097, 0, 677, 678, 680, 0, 802, 0, 783, 0,
	0, 1131, 683, 55, 57, 729, 730, 0, 747, 726,
	51, 46, 0, 0, 762, 1051, 322, 1073, 0, 326,
	327, 1014, 1015, 0, 1007, 1009, 1010, 74, 744, 740,
	0, 814, 0, 0, 797, 0, 750, 752, 753, 754,
	780, 0, 0, 0, 0, 93, 799, 1103, 98, 0,
	0, 103, 104, 1104, 1105, 1106, 1107, 0, 507, -2,
	390, 155, 157, 158, 159, 150, -2, 320, 318, 319,
	264, 322, 322, 287, 288, 289, 290, 291, 292, 0,
	0, 281, 282, 283, 284, 275, 0, 276, 277, 278,
	0, 279, 365, 0, 1016, 333, 334, 336, 340, 0,
	0, 0, 361, 362, 0, 1032, 0, 0, 0, 1133,
	1132, 1132, 1132, 0, 145, 146, 147, 148, 524, 0,
	0, 519, 522, 523, 143, 0, 0, 151, 442, 441,
	0, 556, 0, 363, 0, 0, 358, 358, 343, 344,
	472, 0, 0, 531, 532, 533, 534, 0, 0, 0,
	440, 442, 328, 0, 397, 398, 403, 404, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	502, 503, 504, 505, 506, 1029, 1030, 1031, 0, 0,
	564, 0, 0, 382, 89, 1121, 569, 629, 590, 606,
	629, 582, 589, 615, 647, 691, 0, 0, 0, 0,
	699, 0, 823, 887, 889, 827, 0, 831, 835, 0,
	0, 0, 0, 0, 0, 0, 868, 869, 870, 0,
	0, 883, 907, 908, 0, 0, 1002, 0, 988, 0,
	0, 915, 951, 0, 0, 0, 0, 0, 903, 0,
	0, 722, 0, 952, 953, 954, 955, 956, 993, 676,
	679, 681, 758, 803, 804, 0, 0, 0, 0, 784,
	1129, 0, 995, 0, 0, 747, 814, 748, 0, 727,
	48, 761, 0, 1055, 1054, 1067, 1080, 323, 324, 325,
	1006, 0, 1011, 0, 1091, 0, 0, 1083, 0, 0,
	0, 0, 0, 0, 0, 0, 787, 0, 0, 790,
	0, 0, 0, 0, 781, 0, 0, 0, 0, -2,
	0, 0, 87, 88, 0, 0, 0, 101, 102, 0,
	0, 108, 329, 330, 136, 143, 392, 156, 372, 0,
	0, 260, 321, 285, 286, 0, 308, 0, 0, 0,
	385, 113, 1020, 1019, 340, 340, 335, 0, 338, 0,
	1134, 311, 0, 126, 0, 0, 0, 0, 0, 132,
	513, 0, 0, 520, 0, 0, 0, 446, 0, 457,
	458, 0, 528, 555, 0, 560, 332, 0, 342, 345,
	769, 0, 0, 459, 0, 442, 463, 464, 475, 424,
	425, 422, 0, 0, 1042, 1043, 1048, 1046, 1047, 118,
	495, 497, 496, 500, 0, 0, 493, 0, 382, 1016,
	0, 568, 383, 384, 632, 632, 686, 92, 0, 689,
	0, 0, 0, 828, 832, 737, 0, 0, 310, 310,
	970, 310, 314, 973, 310, 975, 310, 978, 310, 981,
	982, 0, 0, 0, 0, 0, 0, 985, 914, 991,
	0, 0, 0, 0, 925, 0, 0, 904, 905, 0,
	994, 805, 810, 810, 810, 0, 0, 1116, 1117, 996,
	997, 814, 998, 749, 728, 763, 1073, 0, 1066, 0,
	-2, 1075, 0, 0, 0, 1081, 741, 75, 815, 78,
	0, 1091, 1099, 0, 1082, 1093, 1095, 0, 0, 0,
	1087, 0, 814, 751, 776, 778, 0, 773, 788, 789,
	791, 0, 793, 0, 795, 796, 760, 756, 757, 0,
	95, 0, 814, 814, 94, 0, 801, 105, 106, 107,
	391, 160, 165, 0, 0, 0, 170, 0, 172, 0,
	373, 0, 257, 259, 0, 0, 163, 322, 0, 322,
	0, 315, 0, 374, 386, 0, 1017, 1018, 0, 0,
	337, 339, 0, 1123, 128, 0, 0, 0, 516, 0,
	525, 0, 0, 0, 0, 0, 0, 152, 443, 0,
	0, 331, 0, 0, 553, 550, 460, 0, 189, 190,
	192, 0, 0, 462, 760, 1033, 1034, 1035, 0, 1045,
	1049, 121, 0, 0, 0, 0, 565, 566, 567, 90,
	575, 581, 688, 708, 829, 833, 0, 865, 968, 322,
	971, 972, 974, 976, 977, 979, 980, 866, 867, 871,
	872, 0, 910, 0, 912, 1011, 0, 989, 0, 0,
	924, 0, 0, 906, 0, 0, 0, 0, 782, 59,
	998, 1000, 0, 1060, 1058, 1058, 1068, 1069, 0, 0,
	1076, 0, 0, 0, 0, 79, 0, 0, 0, 1096,
	0, 0, 0, 0, 96, 1002, 770, 777, 0, 0,
	771, 0, 772, 792, 794, 755, -2, 814, 814, 85,
	86, 0, 166, 0, 168, 183, 184, 0, 171, 173,
	174, 256, 258, 0, 0, 298, 309, 299, 0, 0,
	387, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 760, 129,
	130, 131, 508, 0, 518, 0, 0, 0, 511, 0,
	449, 0, 559, 0, 0, 530, 0, 538, 0, 0,
	0, 193, 194, 0, 1044, 494, 0, 119, 120, 0,
	0, 499, 957, 969, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 811, 0, 0, 0, 0, 802, 1000,
	77, 0, 0, 1063, 0, 1056, 1059, 1057, 1070, 0,
	0, 1077, 0, 1079, 0, 1100, 1101, 1094, 0, 1086,
	1089, 1085, 1088, 1011, 774, 0, 779, 1002, 84, 0,
	169, 0, 0, 0, 313, 316, 0, 0, 0, 509,
	0, 521, 512, 557, 558, 0, 561, 367, 554, 551,
	552, 461, 0, 122, 123, 0, 0, 0, 0, 0,
	0, 909, 911, 913, 922, 923, 966, 967, 0, 807,
	764, 765, 812, 813, 0, 0, 759, 76, 1001, 999,
	1052, 0, 1061, 1062, 1071, 1072, 1078, 0, 1084, 0,
	82, 0, 1011, 167, 0, 177, 0, 517, 0, 520,
	510, 0, 1036, 0, 0, 0, 501, 864, 0, 0,
	0, 0, 806, 808, 809, 1064, 1065, 1092, 1090, 775,
	83, 368, 372, 1036, 0, 0, 562, 491, 1038, 124,
	125, 435, 436, 437, 118, 958, 0, 961, 766, 767,
	369, 370, 0, 161, 178, 179, 0, 0, 182, 175,
	176, 114, 0, 0, 0, 1039, 1040, 121, 959, 371,
	0, 0, 0, 180, 181, 526, 0, 0, 498, 0,
	375, 377, 378, 0, 0, 376, 514, 0, 526, 1037,
	0, 379, 380, 381, 527, 515, 960,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 128, 3, 3, 3, 154, 146, 3,
	83, 85, 151, 149, 84, 150, 203, 152, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 561,
	136, 135, 137, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 124, 3, 157,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 125,
	126, 127, 129, 130, 131, 132, 133, 134, 138, 139,
	140, 141, 142, 143, 144, 145, 147, 148, 153, 155,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:477
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:482
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:483
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:487
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:520
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:526
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:530
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:534
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:539
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:549
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:555
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:561
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:565
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:574
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:580
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:584
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:590
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:600
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:604
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:627
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:633
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:638
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:743
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:749
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:781
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:793
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:797
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:803
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:817
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:827
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:831
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:835
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:841
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:851
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:864
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:870
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:886
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:896
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:900
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:904
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:910
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:914
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:918
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:922
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:928
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:932
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:980
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:984
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:995
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1000
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1006
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1023
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1030
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1037
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1042
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1047
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1052
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1059
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1066
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1077
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1088
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1094
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1098
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1112
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1116
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1122
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1126
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1132
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1143
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1147
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1153
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1163
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1168
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1177
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1186
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1201
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1210
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1219
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1232
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1236
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1248
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1253
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1258
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1263
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1268
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1282
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1289
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1293
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1319
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1324
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1331
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1338
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1342
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1346
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1350
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1361
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1368
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1372
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1386
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1390
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1394
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1398
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1402
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1423
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = Armscii8Str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.str = ASCIIStr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.str = Big5Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.str = UBinaryStr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.str = Cp1250Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = Cp1251Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = Cp1256Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = Cp1257Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = Cp850Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = Cp852Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = Cp866Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = Cp932Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = Dec8Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = EucjpmsStr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = EuckrStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = Gb18030Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = Gb2312Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = GbkStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Geostd8Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = GreekStr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = HebrewStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Hp8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Keybcs2Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Koi8rStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Koi8uStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Latin1Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Latin2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Latin5Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Latin7Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = MacceStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = MacromanStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = SjisStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = Swe7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Tis620Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Ucs2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = UjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Utf16Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Utf16leStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = Utf32Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Utf8Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Utf8mb4Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1604
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1608
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1629
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1633
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1637
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1641
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1647
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1658
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1872
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1877
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1881
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1889
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1893
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1899
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1911
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1915
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1920
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1924
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1956
		{
			yyVAL.str = ""
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1971
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1980
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1986
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1996
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2000
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2005
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2009
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2025
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2029
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2033
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2037
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2041
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = yyDollar[2].str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2080
		{
			yyVAL.str = "key"
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.str = yyDollar[1].str
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2109
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2119
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2125
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2129
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2135
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2139
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2145
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2151
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2155
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2159
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2163
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2172
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2178
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2184
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2190
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2196
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2200
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2204
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2208
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2212
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2217
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2230
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2238
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2247
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2253
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2257
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2261
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2267
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2271
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2277
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2281
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2285
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2289
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2293
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2297
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2301
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2305
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2309
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2313
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2317
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2321
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2325
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2329
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2333
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2337
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2390
		{
			yyVAL.str = ""
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2430
		{
			yyVAL.str = ""
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2449
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2458
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2462
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2466
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 449:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2474
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2480
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2494
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2498
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2502
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2506
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2510
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2514
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2518
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2522
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2526
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2530
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2534
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2538
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2542
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2546
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2550
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2554
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2588
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2636
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2643
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2650
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2657
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2674
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2681
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2693
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2756
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2763
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2788
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2797
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2805
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2814
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2821
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2833
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2842
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2857
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2862
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2871
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2875
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2881
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2885
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2890
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2894
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2899
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2903
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2909
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2913
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2917
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2921
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2925
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2929
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2933
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2937
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2941
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2945
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2949
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2953
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2957
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2961
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2965
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2969
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2973
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2977
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2981
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2985
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2989
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2993
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2998
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3002
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3013
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3032
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3039
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3046
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3055
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3077
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3081
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3104
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3141
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = ""
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.str = "extended "
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3372
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3376
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3380
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3390
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3394
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3404
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3410
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3428
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3432
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3463
		{
			yyVAL.empty = struct{}{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.empty = struct{}{}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3468
		{
			yyVAL.empty = struct{}{}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3470
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3486
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3490
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3494
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3498
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3502
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3506
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = yyDollar[1].str
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3583
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3593
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3599
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3603
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3607
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3611
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3617
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3681
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3722
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3736
		{
			setAllowComments(yylex, true)
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3746
		{
			yyVAL.strs = nil
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3760
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3764
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = SQLCacheStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3782
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3786
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3790
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3799
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3804
		{
			yyVAL.strs = nil
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3812
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3820
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = SQLCacheStr
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = DistinctStr
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = DistinctStr
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = StraightJoinHint
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3856
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3860
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3866
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3870
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3874
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3878
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3883
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3891
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3903
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3907
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3913
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3919
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3933
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3937
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3941
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3947
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3953
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3957
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3966
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3972
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3982
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3986
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4000
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4017
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4021
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4025
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4029
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4037
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4041
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4047
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4049
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4052
		{
			yyVAL.empty = struct{}{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4054
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4065
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4072
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4078
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4082
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4086
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4092
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4098
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4102
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4106
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4110
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4116
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4120
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4130
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4144
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4150
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4159
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4165
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4169
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4175
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4179
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4183
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4187
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4192
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4196
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4200
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4204
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4214
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4221
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4225
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4229
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4233
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4237
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4241
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4248
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4252
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4256
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4260
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4290
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4306
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4312
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4316
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4320
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4324
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4344
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4352
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4356
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4360
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4370
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4378
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4382
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4386
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4390
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4394
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4398
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4402
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4406
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4410
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4414
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4418
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4434
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = &LTrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = &RTrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4446
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4450
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4466
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4470
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4478
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4482
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4487
		{
			yyLOCAL = NoTrimType
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4491
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4495
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4499
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4515
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4519
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4526
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4530
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4534
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4538
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4544
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4548
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4552
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4556
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4560
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4564
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4568
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4574
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4578
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4582
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4589
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4595
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4688
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4692
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4701
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4705
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4721
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4725
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4729
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4733
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4737
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4741
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4745
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4749
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4753
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4757
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4761
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4767
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4771
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4775
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4779
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4783
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4787
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4791
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4795
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4799
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4817
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4839
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4843
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4849
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4853
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4857
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4861
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4865
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4889
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4893
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4899
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4903
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4907
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4911
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4915
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4921
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4925
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4929
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4933
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4937
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4941
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4945
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4949
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4953
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4957
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4972
		{
			yyVAL.str = string("")
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4982
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4986
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4992
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5007
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5011
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5015
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5044
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5062
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5068
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5074
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5078
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5084
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5089
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5093
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5097
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5106
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5112
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5116
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5120
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5129
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5133
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5137
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5141
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5148
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5152
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5156
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5160
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5166
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5170
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5174
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = ""
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5191
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5196
		{
			yyVAL.str = ""
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5200
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5210
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5215
		{
			yyVAL.str = ""
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5219
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5224
		{
			yyVAL.str = "cascaded"
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5228
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5241
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5247
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5253
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5259
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5268
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5272
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = ""
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5287
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5291
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5297
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5301
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5305
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = ""
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5314
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5323
		{
			yyVAL.str = ""
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = " header"
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5332
		{
			yyVAL.str = ""
		}
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5336
		{
			yyVAL.str = " manifest on"
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5340
		{
			yyVAL.str = " manifest off"
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5345
		{
			yyVAL.str = ""
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5349
		{
			yyVAL.str = " overwrite on"
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = " overwrite off"
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5364
		{
			yyVAL.str = ""
		}
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5368
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5378
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5388
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = ""
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5413
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5417
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5421
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = ""
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = " optionally"
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5443
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5447
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5451
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5455
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5459
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5465
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5469
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5473
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5477
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5486
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5492
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5496
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5502
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5506
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5512
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5527
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5531
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5537
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5543
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5553
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5557
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5561
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5565
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5569
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.str = "charset"
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5595
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5604
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5606
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5609
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5611
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5614
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5616
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5619
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5621
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5624
		{
			yyVAL.empty = struct{}{}
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5626
		{
			yyVAL.empty = struct{}{}
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.empty = struct{}{}
		}
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5632
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5641
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5648
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5652
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5658
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5669
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5675
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5685
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5696
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6171
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6180
		{
			decNesting(yylex)
		}
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6185
		{
			skipToEnd(yylex)
		}
	case 1598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6190
		{
			skipToEnd(yylex)
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6194
		{
			skipToEnd(yylex)
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6198
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
