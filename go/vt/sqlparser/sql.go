// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const SELECT_OPTIONS = 57351
const LEX_ERROR = 57352
const UNION = 57353
const SELECT = 57354
const STREAM = 57355
const VSTREAM = 57356
const INSERT = 57357
const UPDATE = 57358
const DELETE = 57359
const FROM = 57360
const WHERE = 57361
const GROUP = 57362
const HAVING = 57363
const ORDER = 57364
const BY = 57365
const LIMIT = 57366
const OFFSET = 57367
const FOR = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const INTO = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const DO = 57381
const CALL = 57382
const ALL = 57383
const ANY = 57384
const SOME = 57385
const DISTINCTROW = 57386
const PARSER = 57387
const GENERATED = 57388
const ALWAYS = 57389
const OUTFILE = 57390
const S3 = 57391
const DATA = 57392
const LOAD = 57393
const LINES = 57394
const TERMINATED = 57395
const ESCAPED = 57396
const ENCLOSED = 57397
const DUMPFILE = 57398
const CSV = 57399
const HEADER = 57400
const MANIFEST = 57401
const OVERWRITE = 57402
const STARTING = 57403
const OPTIONALLY = 57404
const VALUES = 57405
const LAST_INSERT_ID = 57406
const NEXT = 57407
const VALUE = 57408
const SHARE = 57409
const MODE = 57410
const SQL_NO_CACHE = 57411
const SQL_CACHE = 57412
const SQL_CALC_FOUND_ROWS = 57413
const SQL_SMALL_RESULT = 57414
const SQL_BIG_RESULT = 57415
const HIGH_PRIORITY = 57416
const JOIN = 57417
const STRAIGHT_JOIN = 57418
const LEFT = 57419
const RIGHT = 57420
const INNER = 57421
const OUTER = 57422
const CROSS = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const ELSEIF = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const SHIFT_LEFT = 57513
const SHIFT_RIGHT = 57514
const DIV = 57515
const MOD = 57516
const UNARY = 57517
const COLLATE = 57518
const BINARY = 57519
const UNDERSCORE_ARMSCII8 = 57520
const UNDERSCORE_ASCII = 57521
const UNDERSCORE_BIG5 = 57522
const UNDERSCORE_BINARY = 57523
const UNDERSCORE_CP1250 = 57524
const UNDERSCORE_CP1251 = 57525
const UNDERSCORE_CP1256 = 57526
const UNDERSCORE_CP1257 = 57527
const UNDERSCORE_CP850 = 57528
const UNDERSCORE_CP852 = 57529
const UNDERSCORE_CP866 = 57530
const UNDERSCORE_CP932 = 57531
const UNDERSCORE_DEC8 = 57532
const UNDERSCORE_EUCJPMS = 57533
const UNDERSCORE_EUCKR = 57534
const UNDERSCORE_GB18030 = 57535
const UNDERSCORE_GB2312 = 57536
const UNDERSCORE_GBK = 57537
const UNDERSCORE_GEOSTD8 = 57538
const UNDERSCORE_GREEK = 57539
const UNDERSCORE_HEBREW = 57540
const UNDERSCORE_HP8 = 57541
const UNDERSCORE_KEYBCS2 = 57542
const UNDERSCORE_KOI8R = 57543
const UNDERSCORE_KOI8U = 57544
const UNDERSCORE_LATIN1 = 57545
const UNDERSCORE_LATIN2 = 57546
const UNDERSCORE_LATIN5 = 57547
const UNDERSCORE_LATIN7 = 57548
const UNDERSCORE_MACCE = 57549
const UNDERSCORE_MACROMAN = 57550
const UNDERSCORE_SJIS = 57551
const UNDERSCORE_SWE7 = 57552
const UNDERSCORE_TIS620 = 57553
const UNDERSCORE_UCS2 = 57554
const UNDERSCORE_UJIS = 57555
const UNDERSCORE_UTF16 = 57556
const UNDERSCORE_UTF16LE = 57557
const UNDERSCORE_UTF32 = 57558
const UNDERSCORE_UTF8 = 57559
const UNDERSCORE_UTF8MB4 = 57560
const UNDERSCORE_UTF8MB3 = 57561
const INTERVAL = 57562
const WINDOW_EXPR = 57563
const JSON_EXTRACT_OP = 57564
const JSON_UNQUOTE_EXTRACT_OP = 57565
const CREATE = 57566
const ALTER = 57567
const DROP = 57568
const RENAME = 57569
const ANALYZE = 57570
const ADD = 57571
const FLUSH = 57572
const CHANGE = 57573
const MODIFY = 57574
const DEALLOCATE = 57575
const REVERT = 57576
const QUERIES = 57577
const SCHEMA = 57578
const TABLE = 57579
const INDEX = 57580
const VIEW = 57581
const TO = 57582
const IGNORE = 57583
const IF = 57584
const PRIMARY = 57585
const COLUMN = 57586
const SPATIAL = 57587
const FULLTEXT = 57588
const KEY_BLOCK_SIZE = 57589
const CHECK = 57590
const INDEXES = 57591
const ACTION = 57592
const CASCADE = 57593
const CONSTRAINT = 57594
const FOREIGN = 57595
const NO = 57596
const REFERENCES = 57597
const RESTRICT = 57598
const SHOW = 57599
const DESCRIBE = 57600
const EXPLAIN = 57601
const DATE = 57602
const ESCAPE = 57603
const REPAIR = 57604
const OPTIMIZE = 57605
const TRUNCATE = 57606
const COALESCE = 57607
const EXCHANGE = 57608
const REBUILD = 57609
const PARTITIONING = 57610
const REMOVE = 57611
const PREPARE = 57612
const EXECUTE = 57613
const MAXVALUE = 57614
const PARTITION = 57615
const REORGANIZE = 57616
const LESS = 57617
const THAN = 57618
const PROCEDURE = 57619
const TRIGGER = 57620
const VINDEX = 57621
const VINDEXES = 57622
const DIRECTORY = 57623
const NAME = 57624
const UPGRADE = 57625
const STATUS = 57626
const VARIABLES = 57627
const WARNINGS = 57628
const CASCADED = 57629
const DEFINER = 57630
const OPTION = 57631
const SQL = 57632
const UNDEFINED = 57633
const SEQUENCE = 57634
const MERGE = 57635
const TEMPORARY = 57636
const TEMPTABLE = 57637
const INVOKER = 57638
const SECURITY = 57639
const FIRST = 57640
const AFTER = 57641
const LAST = 57642
const VITESS_MIGRATION = 57643
const CANCEL = 57644
const RETRY = 57645
const LAUNCH = 57646
const COMPLETE = 57647
const CLEANUP = 57648
const THROTTLE = 57649
const UNTHROTTLE = 57650
const FORCE_CUTOVER = 57651
const CUTOVER_THRESHOLD = 57652
const EXPIRE = 57653
const RATIO = 57654
const VITESS_THROTTLER = 57655
const BEGIN = 57656
const START = 57657
const TRANSACTION = 57658
const COMMIT = 57659
const ROLLBACK = 57660
const SAVEPOINT = 57661
const RELEASE = 57662
const WORK = 57663
const CONSISTENT = 57664
const SNAPSHOT = 57665
const UNRESOLVED = 57666
const TRANSACTIONS = 57667
const BIT = 57668
const TINYINT = 57669
const SMALLINT = 57670
const MEDIUMINT = 57671
const INT = 57672
const INTEGER = 57673
const BIGINT = 57674
const INTNUM = 57675
const REAL = 57676
const DOUBLE = 57677
const FLOAT_TYPE = 57678
const FLOAT4_TYPE = 57679
const FLOAT8_TYPE = 57680
const DECIMAL_TYPE = 57681
const NUMERIC = 57682
const TIME = 57683
const TIMESTAMP = 57684
const DATETIME = 57685
const YEAR = 57686
const CHAR = 57687
const VARCHAR = 57688
const BOOL = 57689
const CHARACTER = 57690
const VARBINARY = 57691
const NCHAR = 57692
const TEXT = 57693
const TINYTEXT = 57694
const MEDIUMTEXT = 57695
const LONGTEXT = 57696
const BLOB = 57697
const TINYBLOB = 57698
const MEDIUMBLOB = 57699
const LONGBLOB = 57700
const JSON = 57701
const JSON_SCHEMA_VALID = 57702
const JSON_SCHEMA_VALIDATION_REPORT = 57703
const ENUM = 57704
const GEOMETRY = 57705
const POINT = 57706
const LINESTRING = 57707
const POLYGON = 57708
const GEOMCOLLECTION = 57709
const GEOMETRYCOLLECTION = 57710
const MULTIPOINT = 57711
const MULTILINESTRING = 57712
const MULTIPOLYGON = 57713
const ASCII = 57714
const UNICODE = 57715
const VECTOR = 57716
const NULLX = 57717
const AUTO_INCREMENT = 57718
const APPROXNUM = 57719
const SIGNED = 57720
const UNSIGNED = 57721
const ZEROFILL = 57722
const PURGE = 57723
const BEFORE = 57724
const CODE = 57725
const COLLATION = 57726
const COLUMNS = 57727
const DATABASES = 57728
const ENGINES = 57729
const EVENT = 57730
const EXTENDED = 57731
const FIELDS = 57732
const FULL = 57733
const FUNCTION = 57734
const GTID_EXECUTED = 57735
const KEYSPACES = 57736
const OPEN = 57737
const PLUGINS = 57738
const PRIVILEGES = 57739
const PROCESSLIST = 57740
const SCHEMAS = 57741
const TABLES = 57742
const TRIGGERS = 57743
const USER = 57744
const VGTID_EXECUTED = 57745
const VITESS_KEYSPACES = 57746
const VITESS_METADATA = 57747
const VITESS_MIGRATIONS = 57748
const VITESS_REPLICATION_STATUS = 57749
const VITESS_SHARDS = 57750
const VITESS_TABLETS = 57751
const VITESS_TARGET = 57752
const VSCHEMA = 57753
const VITESS_THROTTLED_APPS = 57754
const NAMES = 57755
const GLOBAL = 57756
const SESSION = 57757
const ISOLATION = 57758
const LEVEL = 57759
const READ = 57760
const WRITE = 57761
const ONLY = 57762
const REPEATABLE = 57763
const COMMITTED = 57764
const UNCOMMITTED = 57765
const SERIALIZABLE = 57766
const ADDDATE = 57767
const CURRENT_TIMESTAMP = 57768
const DATABASE = 57769
const CURRENT_DATE = 57770
const CURDATE = 57771
const DATE_ADD = 57772
const DATE_SUB = 57773
const NOW = 57774
const SUBDATE = 57775
const CURTIME = 57776
const CURRENT_TIME = 57777
const LOCALTIME = 57778
const LOCALTIMESTAMP = 57779
const CURRENT_USER = 57780
const UTC_DATE = 57781
const UTC_TIME = 57782
const UTC_TIMESTAMP = 57783
const SYSDATE = 57784
const DAY = 57785
const DAY_HOUR = 57786
const DAY_MICROSECOND = 57787
const DAY_MINUTE = 57788
const DAY_SECOND = 57789
const HOUR = 57790
const HOUR_MICROSECOND = 57791
const HOUR_MINUTE = 57792
const HOUR_SECOND = 57793
const MICROSECOND = 57794
const MINUTE = 57795
const MINUTE_MICROSECOND = 57796
const MINUTE_SECOND = 57797
const MONTH = 57798
const QUARTER = 57799
const SECOND = 57800
const SECOND_MICROSECOND = 57801
const YEAR_MONTH = 57802
const WEEK = 57803
const SQL_TSI_DAY = 57804
const SQL_TSI_WEEK = 57805
const SQL_TSI_HOUR = 57806
const SQL_TSI_MINUTE = 57807
const SQL_TSI_MONTH = 57808
const SQL_TSI_QUARTER = 57809
const SQL_TSI_SECOND = 57810
const SQL_TSI_MICROSECOND = 57811
const SQL_TSI_YEAR = 57812
const REPLACE = 57813
const CONVERT = 57814
const CAST = 57815
const SUBSTR = 57816
const SUBSTRING = 57817
const MID = 57818
const SEPARATOR = 57819
const TIMESTAMPADD = 57820
const TIMESTAMPDIFF = 57821
const WEIGHT_STRING = 57822
const LTRIM = 57823
const RTRIM = 57824
const TRIM = 57825
const JSON_ARRAY = 57826
const JSON_OBJECT = 57827
const JSON_QUOTE = 57828
const JSON_DEPTH = 57829
const JSON_TYPE = 57830
const JSON_LENGTH = 57831
const JSON_VALID = 57832
const JSON_ARRAY_APPEND = 57833
const JSON_ARRAY_INSERT = 57834
const JSON_INSERT = 57835
const JSON_MERGE = 57836
const JSON_MERGE_PATCH = 57837
const JSON_MERGE_PRESERVE = 57838
const JSON_REMOVE = 57839
const JSON_REPLACE = 57840
const JSON_SET = 57841
const JSON_UNQUOTE = 57842
const COUNT = 57843
const AVG = 57844
const MAX = 57845
const MIN = 57846
const SUM = 57847
const GROUP_CONCAT = 57848
const BIT_AND = 57849
const BIT_OR = 57850
const BIT_XOR = 57851
const STD = 57852
const STDDEV = 57853
const STDDEV_POP = 57854
const STDDEV_SAMP = 57855
const VAR_POP = 57856
const VAR_SAMP = 57857
const VARIANCE = 57858
const ANY_VALUE = 57859
const REGEXP_INSTR = 57860
const REGEXP_LIKE = 57861
const REGEXP_REPLACE = 57862
const REGEXP_SUBSTR = 57863
const ExtractValue = 57864
const UpdateXML = 57865
const GET_LOCK = 57866
const RELEASE_LOCK = 57867
const RELEASE_ALL_LOCKS = 57868
const IS_FREE_LOCK = 57869
const IS_USED_LOCK = 57870
const LOCATE = 57871
const POSITION = 57872
const ST_GeometryCollectionFromText = 57873
const ST_GeometryFromText = 57874
const ST_LineStringFromText = 57875
const ST_MultiLineStringFromText = 57876
const ST_MultiPointFromText = 57877
const ST_MultiPolygonFromText = 57878
const ST_PointFromText = 57879
const ST_PolygonFromText = 57880
const ST_GeometryCollectionFromWKB = 57881
const ST_GeometryFromWKB = 57882
const ST_LineStringFromWKB = 57883
const ST_MultiLineStringFromWKB = 57884
const ST_MultiPointFromWKB = 57885
const ST_MultiPolygonFromWKB = 57886
const ST_PointFromWKB = 57887
const ST_PolygonFromWKB = 57888
const ST_AsBinary = 57889
const ST_AsText = 57890
const ST_Dimension = 57891
const ST_Envelope = 57892
const ST_IsSimple = 57893
const ST_IsEmpty = 57894
const ST_GeometryType = 57895
const ST_X = 57896
const ST_Y = 57897
const ST_Latitude = 57898
const ST_Longitude = 57899
const ST_EndPoint = 57900
const ST_IsClosed = 57901
const ST_Length = 57902
const ST_NumPoints = 57903
const ST_StartPoint = 57904
const ST_PointN = 57905
const ST_Area = 57906
const ST_Centroid = 57907
const ST_ExteriorRing = 57908
const ST_InteriorRingN = 57909
const ST_NumInteriorRings = 57910
const ST_NumGeometries = 57911
const ST_GeometryN = 57912
const ST_LongFromGeoHash = 57913
const ST_PointFromGeoHash = 57914
const ST_LatFromGeoHash = 57915
const ST_GeoHash = 57916
const ST_AsGeoJSON = 57917
const ST_GeomFromGeoJSON = 57918
const MATCH = 57919
const AGAINST = 57920
const BOOLEAN = 57921
const LANGUAGE = 57922
const WITH = 57923
const QUERY = 57924
const EXPANSION = 57925
const WITHOUT = 57926
const VALIDATION = 57927
const ROLLUP = 57928
const UNUSED = 57929
const ARRAY = 57930
const BYTE = 57931
const CUME_DIST = 57932
const DESCRIPTION = 57933
const DENSE_RANK = 57934
const EMPTY = 57935
const EXCEPT = 57936
const FIRST_VALUE = 57937
const GROUPING = 57938
const GROUPS = 57939
const JSON_TABLE = 57940
const LAG = 57941
const LAST_VALUE = 57942
const LATERAL = 57943
const LEAD = 57944
const NTH_VALUE = 57945
const NTILE = 57946
const OF = 57947
const OVER = 57948
const PERCENT_RANK = 57949
const RANK = 57950
const RECURSIVE = 57951
const ROW_NUMBER = 57952
const SYSTEM = 57953
const WINDOW = 57954
const ACTIVE = 57955
const ADMIN = 57956
const AUTOEXTEND_SIZE = 57957
const BUCKETS = 57958
const CLONE = 57959
const COLUMN_FORMAT = 57960
const COMPONENT = 57961
const DEFINITION = 57962
const ENFORCED = 57963
const ENGINE_ATTRIBUTE = 57964
const EXCLUDE = 57965
const FOLLOWING = 57966
const GET_MASTER_PUBLIC_KEY = 57967
const HISTOGRAM = 57968
const HISTORY = 57969
const INACTIVE = 57970
const INVISIBLE = 57971
const LOCKED = 57972
const MASTER_COMPRESSION_ALGORITHMS = 57973
const MASTER_PUBLIC_KEY_PATH = 57974
const MASTER_TLS_CIPHERSUITES = 57975
const MASTER_ZSTD_COMPRESSION_LEVEL = 57976
const NESTED = 57977
const NETWORK_NAMESPACE = 57978
const NOWAIT = 57979
const NULLS = 57980
const OJ = 57981
const OLD = 57982
const OPTIONAL = 57983
const ORDINALITY = 57984
const ORGANIZATION = 57985
const OTHERS = 57986
const PARTIAL = 57987
const PATH = 57988
const PERSIST = 57989
const PERSIST_ONLY = 57990
const PRECEDING = 57991
const PRIVILEGE_CHECKS_USER = 57992
const PROCESS = 57993
const RANDOM = 57994
const REFERENCE = 57995
const REQUIRE_ROW_FORMAT = 57996
const RESOURCE = 57997
const RESPECT = 57998
const RESTART = 57999
const RETAIN = 58000
const REUSE = 58001
const ROLE = 58002
const SECONDARY = 58003
const SECONDARY_ENGINE = 58004
const SECONDARY_ENGINE_ATTRIBUTE = 58005
const SECONDARY_LOAD = 58006
const SECONDARY_UNLOAD = 58007
const SIMPLE = 58008
const SKIP = 58009
const SRID = 58010
const THREAD_PRIORITY = 58011
const TIES = 58012
const UNBOUNDED = 58013
const VCPU = 58014
const VISIBLE = 58015
const RETURNING = 58016
const MANUAL = 58017
const PARALLEL = 58018
const QUALIFY = 58019
const TABLESAMPLE = 58020
const OUT = 58021
const INOUT = 58022
const FORMAT_BYTES = 58023
const FORMAT_PICO_TIME = 58024
const PS_CURRENT_THREAD_ID = 58025
const PS_THREAD_ID = 58026
const GTID_SUBSET = 58027
const GTID_SUBTRACT = 58028
const WAIT_FOR_EXECUTED_GTID_SET = 58029
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58030
const FORMAT = 58031
const TREE = 58032
const VITESS = 58033
const TRADITIONAL = 58034
const VTEXPLAIN = 58035
const VEXPLAIN = 58036
const PLAN = 58037
const LOCAL = 58038
const LOW_PRIORITY = 58039
const NO_WRITE_TO_BINLOG = 58040
const LOGS = 58041
const ERROR = 58042
const GENERAL = 58043
const HOSTS = 58044
const OPTIMIZER_COSTS = 58045
const USER_RESOURCES = 58046
const SLOW = 58047
const CHANNEL = 58048
const RELAY = 58049
const EXPORT = 58050
const CURRENT = 58051
const ROW = 58052
const ROWS = 58053
const AVG_ROW_LENGTH = 58054
const CONNECTION = 58055
const CHECKSUM = 58056
const DELAY_KEY_WRITE = 58057
const ENCRYPTION = 58058
const ENGINE = 58059
const INSERT_METHOD = 58060
const MAX_ROWS = 58061
const MIN_ROWS = 58062
const PACK_KEYS = 58063
const PASSWORD = 58064
const FIXED = 58065
const DYNAMIC = 58066
const COMPRESSED = 58067
const REDUNDANT = 58068
const COMPACT = 58069
const ROW_FORMAT = 58070
const STATS_AUTO_RECALC = 58071
const STATS_PERSISTENT = 58072
const STATS_SAMPLE_PAGES = 58073
const STORAGE = 58074
const MEMORY = 58075
const DISK = 58076
const PARTITIONS = 58077
const LINEAR = 58078
const RANGE = 58079
const LIST = 58080
const SUBPARTITION = 58081
const SUBPARTITIONS = 58082
const HASH = 58083

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	16, 67,
	17, 67,
	-2, 5,
	-1, 54,
	1, 182,
	759, 182,
	-2, 190,
	-1, 55,
	149, 190,
	192, 190,
	365, 190,
	-2, 550,
	-1, 63,
	38, 811,
	255, 811,
	266, 811,
	301, 825,
	302, 825,
	-2, 813,
	-1, 68,
	257, 849,
	-2, 847,
	-1, 130,
	1, 183,
	759, 183,
	-2, 190,
	-1, 141,
	150, 435,
	260, 435,
	-2, 539,
	-1, 160,
	149, 190,
	192, 190,
	365, 190,
	-2, 559,
	-1, 759,
	178, 59,
	-2, 61,
	-1, 968,
	95, 1679,
	-2, 1509,
	-1, 969,
	95, 1680,
	237, 1684,
	-2, 1510,
	-1, 970,
	237, 1683,
	-2, 60,
	-1, 1056,
	65, 923,
	-2, 936,
	-1, 1061,
	254, 1662,
	-2, 1576,
	-1, 1138,
	265, 1136,
	270, 1136,
	-2, 446,
	-1, 1226,
	1, 607,
	759, 607,
	-2, 190,
	-1, 1541,
	237, 1684,
	-2, 1510,
	-1, 1754,
	65, 924,
	-2, 940,
	-1, 1755,
	65, 925,
	-2, 941,
	-1, 1831,
	149, 190,
	192, 190,
	365, 190,
	-2, 485,
	-1, 1908,
	150, 435,
	260, 435,
	-2, 539,
	-1, 1917,
	265, 1137,
	270, 1137,
	-2, 447,
	-1, 2365,
	237, 1688,
	-2, 1682,
	-1, 2366,
	237, 1684,
	-2, 1680,
	-1, 2483,
	149, 190,
	192, 190,
	365, 190,
	-2, 486,
	-1, 2490,
	28, 211,
	-2, 213,
	-1, 2964,
	86, 117,
	96, 117,
	-2, 1003,
	-1, 3028,
	734, 729,
	-2, 703,
	-1, 3262,
	55, 1621,
	-2, 1615,
	-1, 4105,
	734, 729,
	-2, 717,
	-1, 4145,
	16, 67,
	17, 67,
	165, 48,
	-2, 837,
	-1, 4200,
	165, 49,
	-2, 67,
	-1, 4209,
	98, 661,
	104, 661,
	114, 661,
	194, 661,
	195, 661,
	196, 661,
	197, 661,
	198, 661,
	199, 661,
	200, 661,
	201, 661,
	202, 661,
	203, 661,
	204, 661,
	205, 661,
	206, 661,
	207, 661,
	208, 661,
	209, 661,
	210, 661,
	211, 661,
	212, 661,
	213, 661,
	214, 661,
	215, 661,
	216, 661,
	217, 661,
	218, 661,
	219, 661,
	220, 661,
	221, 661,
	222, 661,
	223, 661,
	224, 661,
	225, 661,
	226, 661,
	227, 661,
	228, 661,
	229, 661,
	230, 661,
	231, 661,
	232, 661,
	233, 661,
	234, 661,
	235, 661,
	-2, 2064,
	-1, 4274,
	163, 54,
	165, 54,
	-2, 67,
	-1, 4320,
	165, 53,
	-2, 67,
	-1, 4324,
	16, 67,
	17, 67,
	-2, 58,
}

const yyPrivate = 57344

const yyLast = 57659

var yyAct = [...]int{
	984, 4200, 3746, 89, 979, 4201, 3745, 4296, 3744, 4285,
	4301, 4087, 4182, 4251, 937, 932, 2480, 43, 971, 3539,
	4252, 2158, 4207, 3694, 1834, 2170, 4137, 3314, 3403, 3321,
	4066, 1293, 3367, 3989, 2394, 1295, 2539, 3358, 3372, 3369,
	3275, 4202, 3368, 3366, 3371, 3370, 3786, 4064, 87, 6,
	3682, 3329, 2396, 3387, 2549, 3279, 3386, 763, 3198, 3276,
	3593, 3579, 3797, 3087, 791, 127, 933, 3615, 2435, 3112,
	3389, 2454, 3569, 3273, 2451, 3263, 757, 2518, 2924, 972,
	758, 2998, 3410, 3069, 3025, 2909, 2523, 2999, 1054, 3113,
	89, 1108, 3000, 2580, 169, 2468, 1076, 2949, 2930, 2456,
	1891, 1933, 1053, 2414, 1057, 44, 1051, 42, 1170, 2455,
	2037, 2908, 1054, 1083, 2898, 2882, 2937, 2318, 2104, 2192,
	3060, 155, 2350, 2558, 1915, 2317, 1078, 1118, 2154, 2443,
	2525, 2991, 1133, 1128, 1823, 2966, 1803, 986, 1060, 1789,
	109, 2423, 1120, 3604, 1772, 1075, 2458, 105, 1735, 1554,
	110, 3278, 2198, 2033, 1922, 1115, 934, 2129, 2118, 1116,
	1139, 1112, 2514, 1136, 1134, 1135, 761, 1822, 1093, 1808,
	1095, 2515, 1064, 1479, 1219, 1757, 1146, 2225, 1537, 1513,
	2095, 104, 3782, 2206, 2880, 2436, 768, 11, 2045, 3774,
	1283, 112, 1462, 173, 10, 1059, 773, 1058, 9, 133,
	2193, 131, 132, 3540, 1088, 1907, 1049, 138, 1291, 139,
	1269, 1062, 1230, 750, 1224, 1558, 4198, 103, 4286, 3683,
	3355, 86, 2551, 760, 111, 4121, 3016, 96, 3048, 3047,
	1563, 1087, 2551, 2552, 2553, 2595, 1218, 3675, 1048, 1480,
	4231, 1999, 1791, 3077, 3078, 4116, 3640, 4117, 134, 693,
	2111, 4122, 1068, 2110, 2109, 1175, 2108, 1109, 2107, 2106,
	2076, 140, 1239, 3013, 2391, 2392, 1172, 690, 2878, 691,
	3259, 2647, 3202, 4315, 4250, 4276, 3543, 753, 2584, 1189,
	1190, 1191, 1794, 1194, 1195, 1196, 1197, 1069, 751, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1149, 1103, 1102, 1052,
	4255, 1050, 1795, 4290, 1066, 2, 4095, 2926, 3018, 1150,
	1125, 1792, 2583, 4235, 134, 1176, 1179, 1180, 3749, 3749,
	1124, 1496, 1123, 1122, 3542, 2432, 2431, 3041, 4289, 1077,
	1476, 1183, 3377, 1473, 4067, 4233, 2843, 1490, 4234, 2116,
	3429, 1793, 4117, 4197, 3985, 735, 3984, 1174, 1787, 1192,
	116, 117, 118, 3377, 121, 3688, 1173, 4229, 3689, 1047,
	4232, 197, 4265, 985, 685, 3038, 3374, 1101, 1105, 936,
	1101, 1105, 936, 1240, 3995, 729, 748, 749, 3706, 3695,
	1464, 1768, 134, 4179, 2540, 2577, 1042, 1043, 1044, 1045,
	3994, 2163, 3375, 1056, 1036, 4212, 88, 1061, 98, 974,
	1037, 988, 989, 990, 975, 3455, 88, 976, 977, 2425,
	978, 3311, 3312, 3375, 3748, 3748, 729, 2879, 1126, 729,
	2918, 3381, 2919, 3310, 1090, 1091, 3076, 2975, 991, 992,
	2974, 2475, 2476, 2976, 4217, 2088, 2089, 2651, 1475, 1824,
	1480, 1825, 3381, 2474, 3059, 1259, 1247, 100, 1264, 1265,
	1486, 1248, 1040, 1478, 4215, 4183, 3788, 3811, 1288, 1246,
	2534, 1245, 1039, 1247, 4222, 4223, 4088, 1260, 1248, 2987,
	1493, 2654, 1494, 1495, 3331, 3332, 1492, 1253, 729, 98,
	3705, 4216, 2041, 3134, 2528, 2493, 2492, 3437, 3407, 98,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 4187, 2393, 2582, 3435, 88, 3378, 1457, 90,
	3405, 2652, 88, 1463, 1474, 2933, 2934, 2645, 1490, 2087,
	743, 2091, 747, 741, 4256, 1739, 3411, 1266, 3378, 3061,
	2415, 2234, 3026, 2559, 2904, 2940, 1261, 1267, 1223, 3662,
	1231, 1232, 1287, 3398, 3245, 4257, 1254, 1989, 1286, 4037,
	1514, 4038, 3246, 1280, 3330, 3408, 2621, 100, 2622, 754,
	2623, 730, 2648, 2941, 2649, 2602, 3333, 1227, 1783, 1456,
	1094, 1285, 1234, 3426, 2413, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1523, 1522, 1524, 1525, 2600, 2415, 3064, 98,
	2190, 1990, 1268, 1991, 2042, 98, 1235, 1262, 1263, 3673,
	3677, 3676, 730, 2624, 1199, 730, 1198, 3406, 2527, 2609,
	2605, 2607, 2608, 2606, 2610, 2611, 2612, 2613, 2598, 3969,
	2603, 2562, 3135, 1129, 3399, 3400, 3753, 1130, 2599, 2452,
	2226, 1486, 3014, 3590, 1900, 2228, 3019, 3333, 1130, 2233,
	2229, 2601, 1168, 2230, 2231, 2232, 1167, 3201, 2227, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 4316, 1166,
	1165, 1164, 1163, 1162, 730, 1161, 1156, 1104, 1098, 1096,
	1104, 1098, 1096, 1079, 1742, 1169, 1085, 1085, 1113, 3353,
	1141, 1113, 1113, 1142, 1292, 1111, 1292, 1292, 4323, 2182,
	2171, 2172, 2173, 2174, 2184, 2175, 2176, 2177, 2189, 2185,
	2178, 2179, 2186, 2187, 2188, 2180, 2181, 2183, 2424, 1178,
	2034, 1089, 3065, 2588, 3672, 1141, 1820, 2587, 2030, 1177,
	1465, 1186, 1485, 1482, 1483, 1484, 1489, 1491, 1488, 1222,
	1487, 3582, 3249, 3050, 2903, 2422, 1054, 1538, 1543, 1544,
	1481, 1547, 1549, 1550, 1551, 1552, 1553, 2916, 1556, 1557,
	1559, 1559, 2421, 1559, 1559, 1564, 1564, 1564, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1233, 4094, 1281, 3017, 1691, 1225, 1693, 1694,
	1695, 1696, 1697, 1539, 1454, 1455, 1531, 1532, 1533, 1534,
	1564, 1564, 1564, 1564, 1564, 1564, 1545, 2001, 2000, 2002,
	2003, 2004, 3638, 3639, 3641, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1127,
	1791, 1453, 1535, 1485, 1482, 1483, 1484, 1489, 1491, 1488,
	4221, 1487, 2531, 3020, 3591, 3790, 3789, 3040, 4140, 1821,
	1097, 1481, 97, 1097, 4185, 1148, 1148, 729, 1276, 1728,
	1278, 729, 97, 729, 3704, 1548, 1560, 1159, 1561, 1562,
	1157, 3747, 3747, 1244, 1472, 98, 1921, 2652, 3527, 4219,
	1528, 1528, 91, 2532, 4220, 2581, 1565, 1566, 3379, 3380,
	2530, 3039, 4184, 1060, 3427, 1225, 1732, 2420, 1275, 1277,
	1193, 3383, 1738, 3068, 1148, 2439, 3036, 2439, 2416, 3379,
	3380, 1054, 4305, 2653, 2031, 1054, 2883, 2885, 1238, 684,
	2018, 1054, 3383, 4227, 2533, 1746, 1257, 3058, 4083, 1750,
	3057, 2579, 3629, 1148, 2529, 1053, 3611, 2971, 1243, 2936,
	1249, 1250, 1251, 1252, 1514, 1529, 1530, 1185, 2855, 3210,
	1223, 1217, 1729, 2166, 1812, 1779, 1692, 1237, 1782, 1147,
	1147, 3209, 2019, 1060, 1289, 1290, 3081, 2669, 2931, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1523, 1522, 1524, 1525,
	89, 692, 1525, 2481, 1528, 130, 1920, 3309, 2680, 1768,
	1270, 1786, 97, 1508, 43, 2207, 1072, 1284, 97, 4319,
	3229, 3227, 1520, 1521, 1523, 1522, 1524, 1525, 1147, 1273,
	1748, 4108, 2208, 1274, 109, 1221, 1171, 1242, 1160, 124,
	1749, 1158, 1729, 1279, 110, 3668, 3603, 2426, 1060, 1894,
	1698, 1699, 1700, 1701, 1702, 1703, 2046, 1147, 2100, 2027,
	1826, 4242, 1151, 1141, 3108, 1730, 1736, 1153, 1272, 3071,
	4297, 1154, 1152, 4312, 3070, 1744, 2199, 4266, 1223, 1148,
	1776, 2199, 2914, 2689, 1790, 112, 1495, 1778, 1777, 4100,
	1148, 3806, 1155, 730, 2680, 3071, 2015, 730, 2016, 730,
	3070, 2017, 1494, 1495, 2122, 2123, 2120, 2121, 1913, 3646,
	2134, 2884, 3645, 2566, 1897, 1898, 1899, 1930, 125, 1929,
	1770, 2437, 2438, 2437, 2438, 2135, 1526, 1527, 2133, 1148,
	1783, 2119, 1733, 1919, 1906, 1984, 1235, 2576, 1935, 1747,
	1936, 2571, 1938, 1940, 2574, 1220, 1944, 1946, 1948, 1950,
	1952, 1925, 1966, 2039, 1773, 1785, 1775, 1050, 1745, 2578,
	1292, 1222, 1052, 1256, 1159, 4303, 1157, 4258, 4304, 1271,
	4302, 2190, 2205, 3630, 1258, 1817, 1818, 2571, 1780, 98,
	1924, 1974, 1975, 1147, 2575, 1148, 1927, 1980, 1981, 1141,
	1144, 1145, 1241, 1113, 1147, 1886, 1184, 1138, 1142, 2132,
	1181, 1923, 1923, 2023, 1226, 2021, 2022, 2020, 2024, 2025,
	2026, 1067, 3701, 1962, 3702, 2047, 1965, 1903, 1967, 1904,
	2573, 1902, 1916, 3088, 2122, 2123, 2659, 2660, 1514, 1768,
	3080, 2009, 4307, 1147, 2007, 1497, 2355, 2204, 4260, 1141,
	1144, 1145, 1496, 1113, 2014, 4317, 3977, 1138, 1142, 4149,
	1751, 3976, 1970, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1523, 1522, 1524, 1525, 1996, 3967, 1555, 2035, 1137, 1222,
	2182, 2171, 2172, 2173, 2174, 2184, 2175, 2176, 2177, 2189,
	2185, 2178, 2179, 2186, 2187, 2188, 2180, 2181, 2183, 1147,
	4075, 1496, 3718, 3317, 1151, 1141, 1496, 3717, 4150, 1153,
	134, 3653, 2008, 1154, 1152, 2006, 1124, 3090, 1123, 1122,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1522, 1524,
	1525, 3652, 2444, 2445, 2052, 1518, 1519, 1520, 1521, 1523,
	1522, 1524, 1525, 1292, 1292, 1995, 2048, 2049, 2989, 4076,
	3642, 4318, 1496, 3257, 3318, 1514, 3356, 2668, 3349, 89,
	2053, 2074, 89, 988, 989, 990, 1459, 2060, 2061, 2062,
	1496, 2996, 2995, 43, 1496, 2994, 43, 2537, 2073, 3320,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1522, 1524,
	1525, 3100, 3099, 3098, 2010, 1994, 3092, 4259, 3096, 3315,
	3091, 1493, 3089, 1494, 1495, 1993, 1992, 3094, 2096, 1982,
	4321, 2096, 1976, 1496, 1973, 735, 3093, 1972, 1971, 3331,
	3332, 1942, 1743, 1820, 2161, 2161, 3316, 1502, 1503, 1504,
	1505, 1506, 1507, 1501, 1498, 3095, 3097, 4103, 2159, 2159,
	4102, 3635, 2162, 735, 4271, 1768, 1514, 4079, 1496, 1510,
	1493, 1511, 1494, 1495, 1728, 1493, 4078, 1494, 1495, 4244,
	4077, 3322, 2685, 2978, 1514, 735, 1512, 1526, 1527, 1509,
	2124, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1522,
	1524, 1525, 1514, 2547, 2545, 2546, 2544, 2730, 1060, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1523, 1522, 1524, 1525,
	3972, 1493, 2245, 1494, 1495, 4269, 1768, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1523, 1522, 1524, 1525, 1496, 1493,
	3957, 1494, 1495, 1493, 1797, 1494, 1495, 2050, 3110, 3330,
	3956, 2543, 1496, 2542, 2054, 106, 2056, 2057, 2058, 2059,
	2684, 3333, 2101, 2063, 106, 107, 2099, 1729, 2728, 2099,
	108, 2081, 2082, 2097, 107, 2075, 2097, 2098, 1492, 1768,
	2098, 2194, 1493, 115, 1494, 1495, 3805, 1496, 3803, 2138,
	1804, 3714, 1496, 1798, 114, 1727, 113, 1896, 4287, 1496,
	2136, 4246, 1768, 1768, 1496, 1539, 1516, 1517, 1518, 1519,
	1520, 1521, 1523, 1522, 1524, 1525, 2131, 1493, 1726, 1494,
	1495, 1725, 1496, 2200, 1896, 1768, 1768, 2165, 1893, 3650,
	4193, 1768, 2901, 1496, 2363, 1768, 2269, 3634, 2365, 1492,
	1768, 4096, 1556, 3412, 3999, 2137, 108, 2139, 2140, 2141,
	2142, 2143, 2144, 2146, 2148, 2149, 2150, 2151, 2152, 2153,
	1730, 2351, 2209, 2210, 2211, 2212, 3409, 1496, 3352, 1768,
	2355, 2353, 3351, 2244, 2352, 3062, 2223, 1896, 4178, 4191,
	1768, 4004, 3319, 2354, 4189, 1768, 1496, 1493, 3005, 1494,
	1495, 4050, 1768, 98, 2992, 1724, 4048, 1768, 3606, 983,
	1722, 1493, 2430, 1494, 1495, 1720, 115, 2259, 1721, 1719,
	2899, 1723, 4003, 2364, 4045, 1768, 3961, 114, 1724, 113,
	1718, 2362, 1896, 4159, 2368, 2369, 1768, 108, 2460, 2642,
	1496, 2634, 2261, 1896, 4155, 109, 1493, 2633, 1494, 1495,
	2593, 1493, 2462, 1494, 1495, 110, 4057, 1768, 1493, 2592,
	1494, 1495, 2044, 1493, 2363, 1494, 1495, 109, 2365, 4027,
	1768, 2490, 3686, 4093, 4071, 1768, 3605, 110, 2398, 1496,
	2434, 1493, 2399, 1494, 1495, 3980, 1768, 2410, 3568, 1768,
	1896, 3968, 1493, 2077, 1494, 1495, 108, 2342, 2343, 2344,
	2345, 2346, 1768, 2130, 1496, 3686, 1768, 3960, 1496, 1896,
	3684, 1118, 2043, 2404, 2367, 2405, 2005, 2370, 2371, 2571,
	1768, 3609, 1768, 2810, 1768, 3588, 1493, 1997, 1494, 1495,
	1987, 2386, 3561, 1768, 2499, 2500, 2501, 2502, 1068, 1118,
	2418, 1496, 1983, 2449, 2485, 1493, 2484, 1494, 1495, 1979,
	1496, 1978, 2411, 2388, 1496, 3342, 3341, 2466, 3339, 3340,
	2494, 1768, 2495, 2496, 2497, 2498, 3337, 3338, 3027, 2417,
	1977, 3558, 1768, 3337, 3336, 2938, 2504, 2427, 1799, 2506,
	2507, 2508, 2509, 2520, 1496, 2488, 2946, 1768, 2560, 1493,
	1496, 1494, 1495, 2652, 3049, 2526, 3556, 1768, 2938, 2447,
	3519, 1768, 3010, 1496, 1282, 1801, 114, 1496, 2471, 2472,
	2470, 1890, 3030, 3023, 3024, 2164, 1768, 2487, 2486, 1896,
	1895, 2726, 3304, 2678, 2557, 1103, 1102, 2716, 1493, 1496,
	1494, 1495, 2652, 2677, 3323, 1890, 1889, 1496, 3327, 2967,
	3274, 2536, 3517, 1768, 2489, 3326, 3513, 1768, 2967, 1832,
	1831, 3602, 2946, 1493, 3602, 1494, 1495, 1493, 1492, 1494,
	1495, 2572, 4135, 4107, 2565, 1896, 2517, 2568, 2521, 2569,
	2535, 2510, 2512, 2513, 2946, 3602, 1800, 2585, 3547, 3328,
	1492, 3339, 3510, 1768, 3324, 3232, 3654, 2473, 2945, 3325,
	1493, 2810, 1494, 1495, 2564, 1149, 2567, 2563, 2521, 1493,
	1768, 1494, 1495, 1493, 2713, 1494, 1495, 2968, 1150, 2712,
	2586, 2571, 2112, 2113, 2114, 2115, 2968, 2970, 1923, 2589,
	2554, 3508, 1768, 2590, 2591, 2571, 2652, 2442, 2128, 3506,
	1768, 2429, 1784, 1493, 2389, 1494, 1495, 2657, 2597, 1493,
	2164, 1494, 1495, 3655, 3656, 3657, 1054, 1054, 1054, 2946,
	2102, 2596, 1493, 2086, 1494, 1495, 1493, 2029, 1494, 1495,
	1819, 1132, 1131, 2167, 2168, 4225, 1549, 4161, 1549, 2191,
	3991, 3958, 2195, 2196, 3818, 128, 3667, 2201, 1493, 3664,
	1494, 1495, 3648, 3460, 2672, 3459, 1493, 1892, 1494, 1495,
	2519, 3361, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 1496, 2224, 3357, 2627, 3255, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2255, 3031, 2260, 2675, 2262,
	2263, 2264, 2365, 2266, 2267, 2268, 2676, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2650, 2364, 2658, 2644,
	1958, 2347, 2516, 2349, 2511, 2356, 2357, 2358, 2359, 2360,
	2361, 2664, 1496, 1055, 2505, 2503, 1496, 2012, 1918, 1914,
	1888, 126, 2666, 3001, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 3359, 2381, 2382, 2383, 2384, 2385, 1496, 3658,
	3002, 2673, 2661, 2662, 2663, 1225, 3404, 1954, 3616, 3617,
	2131, 1493, 4282, 1494, 1495, 1496, 3992, 1959, 1960, 1961,
	2534, 2402, 1496, 4280, 100, 2079, 4253, 1496, 4115, 4032,
	2688, 3619, 3622, 1085, 3587, 3586, 3585, 3002, 2665, 3274,
	2667, 3250, 1496, 2628, 2854, 3296, 1496, 4111, 3993, 2670,
	3297, 2671, 3659, 3660, 3661, 3773, 98, 3772, 3294, 1496,
	1955, 1956, 1957, 3295, 3504, 1768, 689, 3621, 3502, 1768,
	1496, 3298, 3293, 2955, 2956, 3292, 2886, 1496, 2433, 1796,
	2440, 2441, 2408, 3610, 2724, 2161, 1070, 2695, 3237, 3236,
	3500, 1768, 2080, 4074, 2951, 2954, 2955, 2956, 2952, 2159,
	2953, 2957, 2889, 3796, 2710, 3798, 2479, 3498, 1768, 1054,
	3771, 1496, 2636, 2637, 3496, 1768, 3598, 2639, 2842, 3494,
	1768, 1493, 1496, 1494, 1495, 1493, 2640, 1494, 1495, 3261,
	2887, 2028, 2943, 2944, 3492, 1768, 1038, 1071, 3490, 1768,
	1496, 2460, 752, 3335, 1054, 2963, 43, 1493, 1496, 1494,
	1495, 3488, 1768, 3595, 2985, 2960, 3006, 2890, 2962, 2892,
	2620, 3594, 3486, 1768, 1493, 2619, 1494, 1495, 2522, 3484,
	1768, 1493, 1082, 1494, 1495, 1188, 1493, 1496, 1494, 1495,
	1060, 2942, 1073, 2923, 2618, 1496, 1081, 2130, 2207, 1060,
	1074, 1493, 1496, 1494, 1495, 1493, 2617, 1494, 1495, 3444,
	2616, 1496, 2907, 3482, 1768, 2208, 2615, 2614, 1493, 1496,
	1494, 1495, 2961, 1496, 3480, 1768, 1736, 2932, 2877, 1493,
	106, 1494, 1495, 2127, 2125, 2126, 1493, 1187, 1494, 1495,
	107, 1496, 3466, 1768, 3420, 2902, 3001, 2897, 2905, 1496,
	3442, 1768, 2906, 3074, 2988, 2990, 1496, 1790, 1729, 2921,
	1496, 1458, 3037, 3035, 1496, 135, 3264, 3266, 2981, 2935,
	1493, 3600, 1494, 1495, 2965, 3267, 2444, 2445, 4299, 106,
	1768, 1493, 108, 1494, 1495, 108, 1496, 2875, 1768, 107,
	3254, 1496, 2631, 2969, 2873, 1768, 3046, 4196, 2972, 1493,
	2526, 1494, 1495, 2848, 1768, 3987, 2979, 1493, 2982, 1494,
	1495, 2825, 1768, 3334, 2959, 2920, 4261, 2428, 1119, 1767,
	3235, 2388, 3570, 2656, 2085, 1496, 3004, 2993, 3234, 2084,
	1496, 3007, 3008, 2817, 1768, 1496, 1493, 113, 1494, 1495,
	4056, 2808, 1768, 4055, 1493, 3003, 1494, 1495, 2806, 1768,
	4035, 1493, 3624, 1494, 1495, 1496, 2793, 1768, 3011, 1496,
	1493, 3043, 1494, 1495, 1496, 3804, 1906, 3802, 1493, 3801,
	1494, 1495, 1493, 3784, 1494, 1495, 3665, 3599, 2791, 1768,
	1496, 3032, 3033, 2789, 1768, 3597, 3084, 3085, 3022, 3362,
	1493, 2555, 1494, 1495, 1901, 1080, 114, 1496, 1493, 3042,
	1494, 1495, 1496, 115, 3783, 1493, 1496, 1494, 1495, 1493,
	3580, 1494, 1495, 1493, 114, 1494, 1495, 2787, 1768, 2938,
	4284, 4283, 2785, 1768, 3757, 2901, 3138, 2783, 1768, 3063,
	2714, 3101, 1496, 115, 3044, 1493, 3066, 1494, 1495, 3082,
	1493, 2400, 1494, 1495, 114, 1813, 113, 2781, 1768, 1496,
	1805, 2779, 1768, 4283, 108, 4284, 2777, 1768, 119, 120,
	3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128,
	4080, 1496, 2775, 1768, 1493, 3633, 1494, 1495, 1496, 1493,
	3136, 1494, 1495, 3, 1493, 4144, 1494, 1495, 5, 2690,
	4092, 102, 115, 1, 2773, 1768, 1046, 3102, 3563, 2696,
	2697, 2698, 2699, 114, 1493, 113, 1494, 1495, 1493, 1461,
	1494, 1495, 1460, 1493, 3637, 1494, 1495, 1496, 4214, 705,
	2390, 1734, 196, 4254, 2771, 1768, 3083, 4210, 4211, 1493,
	1998, 1494, 1495, 1988, 3196, 3696, 3072, 2316, 3988, 3073,
	3785, 2769, 1768, 1496, 1555, 135, 1493, 3140, 1494, 1495,
	3787, 1493, 3365, 1494, 1495, 1493, 2561, 1494, 1495, 3663,
	2524, 178, 1140, 2767, 1768, 160, 2482, 2483, 4173, 123,
	2765, 1768, 3104, 1106, 122, 1143, 1255, 3214, 2556, 3687,
	2986, 1493, 2491, 1494, 1495, 1838, 3086, 1836, 1837, 1835,
	1840, 1839, 2460, 4139, 3103, 3428, 3205, 2715, 1493, 3526,
	1494, 1495, 2090, 2351, 742, 2351, 2462, 3129, 2958, 2763,
	1768, 736, 198, 2353, 1827, 2353, 1806, 2083, 3176, 1182,
	1493, 175, 1494, 1495, 176, 3203, 695, 1493, 1496, 1494,
	1495, 3343, 3281, 2594, 89, 2761, 1768, 2460, 2460, 2460,
	2460, 2460, 3186, 3187, 3188, 3189, 3190, 701, 1057, 1546,
	195, 2462, 2462, 2462, 2462, 2462, 2078, 2460, 3214, 3204,
	2460, 3206, 3233, 3241, 3213, 2973, 1493, 1496, 1494, 1495,
	196, 2462, 1100, 1092, 2462, 1496, 3286, 2401, 3231, 2891,
	1099, 1496, 1060, 3965, 3282, 3592, 3260, 3225, 3262, 3303,
	2925, 3265, 1493, 135, 1494, 1495, 1496, 2039, 3258, 4073,
	3248, 1496, 3238, 3240, 3178, 3239, 3180, 3795, 4160, 178,
	1496, 2983, 3251, 3252, 3253, 1802, 3268, 3269, 1496, 3382,
	2759, 1768, 3191, 3192, 3193, 3194, 3546, 2687, 3305, 3390,
	2197, 3306, 1804, 1536, 767, 2459, 3285, 3288, 3289, 1059,
	3291, 1058, 1496, 938, 3395, 3299, 3287, 109, 1788, 3290,
	3226, 3228, 3230, 3752, 1496, 2980, 3307, 110, 2117, 2754,
	1768, 765, 764, 762, 1496, 3313, 179, 2750, 1768, 175,
	1496, 2893, 176, 3271, 3964, 185, 1496, 1493, 3346, 1494,
	1495, 3344, 3345, 2939, 1500, 1499, 973, 3277, 2748, 1768,
	2881, 1496, 3277, 3391, 3669, 3394, 1814, 2950, 195, 2948,
	3347, 3348, 2741, 1768, 1496, 3363, 2526, 3384, 1496, 2947,
	2739, 1768, 2629, 2467, 3618, 1496, 1493, 3401, 1494, 1495,
	1496, 3614, 4206, 2461, 1493, 2457, 1494, 1495, 2900, 924,
	1493, 923, 1494, 1495, 3559, 774, 3413, 1496, 766, 3416,
	3415, 756, 987, 922, 921, 1493, 3525, 1494, 1495, 1496,
	1493, 3423, 1494, 1495, 3392, 3393, 3521, 2915, 1781, 1493,
	3433, 1494, 1495, 2997, 3385, 3256, 1496, 1493, 3457, 1494,
	1495, 2917, 2984, 3364, 3449, 3450, 3451, 3452, 3453, 3430,
	3431, 1496, 3432, 3456, 3244, 3434, 1477, 3436, 1753, 3438,
	1756, 1493, 2409, 1494, 1495, 1774, 3448, 3425, 1549, 4098,
	3446, 2655, 1549, 1493, 170, 1494, 1495, 2871, 3454, 1752,
	4105, 3373, 2870, 1493, 179, 1494, 1495, 3681, 3571, 1493,
	3573, 1494, 1495, 185, 3354, 1493, 3028, 1494, 1495, 2866,
	2548, 71, 47, 3581, 4065, 4136, 916, 913, 3424, 3754,
	1493, 2865, 1494, 1495, 3755, 3756, 3199, 3079, 3200, 4118,
	4119, 912, 4120, 1493, 2254, 1494, 1495, 1493, 2864, 1494,
	1495, 1471, 1468, 3012, 1493, 2092, 1494, 1495, 101, 1493,
	37, 1494, 1495, 2863, 3105, 3106, 3107, 36, 3541, 3109,
	35, 34, 3111, 33, 1496, 3545, 1493, 27, 1494, 1495,
	26, 3572, 25, 3574, 24, 2460, 23, 30, 1493, 3576,
	1494, 1495, 3130, 3131, 3132, 3280, 20, 22, 3631, 2462,
	21, 3137, 19, 4294, 4295, 1493, 3139, 1494, 1495, 3141,
	3142, 3143, 4311, 3395, 4199, 3144, 3145, 3589, 3596, 3146,
	1493, 3147, 1494, 1495, 4141, 3376, 1496, 4249, 3148, 3601,
	3149, 4298, 129, 57, 3150, 3578, 3151, 54, 3620, 3152,
	52, 3153, 170, 3154, 137, 3155, 3623, 3156, 136, 3157,
	55, 3158, 53, 3159, 51, 3160, 3626, 3161, 3625, 3162,
	50, 3163, 3391, 3164, 3394, 3165, 2862, 3166, 3632, 3167,
	1228, 3168, 48, 3169, 1496, 99, 32, 3170, 31, 3171,
	18, 3172, 17, 3613, 3173, 3649, 3174, 3651, 3175, 16,
	2319, 3177, 15, 14, 3179, 13, 12, 3181, 3182, 3183,
	3184, 8, 3627, 3628, 7, 3185, 2319, 2319, 2319, 2319,
	2319, 3548, 1496, 3550, 3551, 3552, 3643, 3644, 2861, 40,
	39, 3195, 38, 1493, 1496, 1494, 1495, 29, 28, 3208,
	41, 4, 3212, 171, 3015, 2550, 3418, 3419, 0, 0,
	183, 3215, 3216, 3217, 3218, 3219, 3220, 0, 3693, 1496,
	3221, 3222, 0, 3223, 0, 3224, 3691, 3692, 0, 1496,
	0, 0, 1730, 0, 3674, 0, 2852, 1496, 3678, 3679,
	3680, 0, 0, 1496, 0, 1493, 0, 1494, 1495, 1085,
	3708, 191, 0, 0, 3670, 3671, 2951, 2954, 2955, 2956,
	2952, 0, 2953, 2957, 0, 1496, 3616, 3617, 0, 0,
	1496, 0, 0, 0, 2851, 0, 0, 0, 0, 0,
	1496, 3719, 0, 0, 1496, 0, 2850, 0, 3272, 0,
	0, 1496, 0, 1493, 0, 1494, 1495, 0, 0, 0,
	172, 177, 174, 180, 181, 182, 184, 186, 187, 188,
	189, 2849, 0, 3302, 0, 0, 190, 192, 193, 194,
	3770, 2846, 0, 3777, 3760, 3779, 3761, 3762, 3763, 2841,
	0, 1493, 0, 1494, 1495, 2834, 0, 0, 0, 0,
	0, 3750, 0, 1493, 0, 1494, 1495, 0, 0, 0,
	3713, 171, 0, 0, 1496, 0, 3281, 2833, 183, 89,
	3780, 3281, 2832, 0, 0, 0, 0, 0, 1493, 3360,
	1494, 1495, 2831, 43, 0, 0, 2830, 1496, 1493, 2161,
	1494, 1495, 0, 2829, 0, 0, 1493, 0, 1494, 1495,
	3781, 0, 1493, 2159, 1494, 1495, 3820, 1496, 0, 191,
	0, 0, 1496, 3800, 3799, 0, 1496, 1060, 3812, 3810,
	0, 3809, 3807, 0, 1493, 0, 1494, 1495, 0, 1493,
	0, 1494, 1495, 1496, 3971, 0, 0, 0, 0, 1493,
	0, 1494, 1495, 1493, 0, 1494, 1495, 0, 1769, 1771,
	1493, 3824, 1494, 1495, 0, 0, 2828, 0, 172, 177,
	174, 180, 181, 182, 184, 186, 187, 188, 189, 0,
	3447, 0, 0, 0, 190, 192, 193, 194, 0, 2827,
	3963, 3962, 3741, 0, 0, 0, 0, 3990, 0, 0,
	0, 0, 0, 3978, 0, 0, 3982, 0, 3462, 2826,
	3983, 0, 3821, 3822, 2820, 0, 0, 4030, 2819, 0,
	0, 4029, 0, 1493, 2161, 1494, 1495, 0, 0, 3277,
	0, 0, 3814, 3778, 0, 2818, 0, 0, 2159, 0,
	0, 4033, 0, 0, 0, 0, 1493, 0, 1494, 1495,
	0, 0, 0, 0, 3973, 3974, 3975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 1494, 1495,
	0, 1493, 0, 1494, 1495, 1493, 0, 1494, 1495, 0,
	3966, 4081, 3281, 4036, 0, 0, 0, 4039, 0, 0,
	3816, 0, 1493, 0, 1494, 1495, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1687,
	1688, 1689, 1690, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 3666, 4084, 4034,
	4053, 4086, 4085, 4082, 4063, 4062, 0, 4059, 0, 4061,
	4099, 1496, 0, 0, 0, 0, 0, 0, 0, 3280,
	0, 0, 0, 0, 3280, 4069, 0, 0, 89, 0,
	3690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 43, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 1496, 0, 0, 0, 4101, 0, 4089, 0,
	0, 4104, 1496, 0, 0, 0, 1060, 4106, 0, 0,
	0, 0, 3709, 0, 3710, 0, 3711, 3970, 3712, 0,
	0, 0, 0, 0, 0, 0, 3715, 3716, 0, 0,
	0, 1496, 0, 2815, 0, 0, 3721, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 4143, 0, 1496, 0,
	3722, 0, 3723, 0, 3724, 43, 3725, 0, 3726, 4157,
	3727, 0, 3728, 0, 3729, 2814, 3730, 4148, 3731, 0,
	3732, 4091, 3733, 0, 3734, 2813, 3735, 0, 3736, 0,
	3737, 4134, 4142, 3738, 2811, 0, 0, 3739, 4147, 3740,
	1493, 4151, 1494, 1495, 2804, 3742, 4124, 0, 0, 4125,
	0, 0, 0, 4162, 4109, 0, 4186, 0, 4165, 3990,
	4175, 4172, 1496, 4171, 4170, 4167, 89, 3759, 4166, 4164,
	4169, 4168, 1493, 2801, 1494, 1495, 3764, 1496, 3765, 3766,
	43, 3767, 1493, 3768, 1494, 1495, 4194, 0, 3769, 0,
	2799, 1493, 1730, 1494, 1495, 0, 0, 0, 0, 0,
	0, 1493, 0, 1494, 1495, 3280, 0, 0, 4213, 2202,
	4218, 4205, 0, 0, 2203, 1496, 4230, 4241, 0, 4186,
	1496, 89, 0, 3808, 1496, 0, 4243, 4228, 0, 0,
	1493, 0, 1494, 1495, 0, 43, 3817, 0, 1496, 3819,
	0, 0, 4240, 1496, 4152, 0, 4153, 1493, 4113, 1494,
	1495, 3823, 2265, 4248, 2797, 4158, 4123, 3277, 0, 0,
	0, 1496, 0, 0, 0, 89, 4274, 0, 3959, 2756,
	0, 0, 4264, 1496, 2161, 0, 0, 0, 4247, 43,
	0, 4273, 4267, 2039, 0, 4277, 4281, 1856, 2159, 4275,
	1496, 4278, 4279, 0, 0, 89, 0, 0, 0, 4288,
	4243, 0, 4186, 0, 0, 0, 0, 2736, 0, 43,
	4300, 1493, 2735, 1494, 1495, 4306, 2731, 4308, 0, 0,
	1730, 0, 0, 4313, 0, 0, 1493, 0, 1494, 1495,
	2729, 0, 2348, 89, 4320, 2721, 0, 0, 0, 0,
	2161, 89, 89, 4324, 0, 89, 4243, 43, 4030, 4326,
	4243, 4325, 4327, 2692, 2159, 43, 43, 4322, 4263, 43,
	0, 0, 2380, 4097, 1493, 2686, 1494, 1495, 0, 1493,
	0, 1494, 1495, 1493, 0, 1494, 1495, 0, 0, 1769,
	2387, 0, 2681, 0, 0, 0, 0, 1493, 4262, 1494,
	1495, 0, 1493, 0, 1494, 1495, 0, 0, 0, 0,
	0, 0, 0, 4068, 1758, 0, 0, 0, 0, 0,
	1493, 0, 1494, 1495, 0, 1758, 0, 0, 1766, 0,
	2412, 1759, 1493, 0, 1494, 1495, 0, 0, 0, 1766,
	0, 4236, 1759, 0, 0, 0, 1737, 0, 0, 1493,
	0, 1494, 1495, 0, 0, 1843, 2406, 2407, 1765, 1763,
	1764, 1760, 0, 1761, 0, 196, 0, 1754, 1755, 1765,
	1763, 1764, 1760, 0, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 0, 135, 0,
	157, 0, 0, 0, 0, 0, 0, 1762, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 1857,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 2538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 176, 0, 0,
	0, 0, 1114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	145, 167, 166, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 1873, 1874, 1875, 1876,
	1877, 1878, 0, 1879, 1880, 1882, 1883, 1881, 1884, 1885,
	1858, 1859, 1860, 1861, 1841, 1842, 1871, 0, 1844, 4112,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 0,
	0, 1854, 1862, 1863, 1864, 1865, 0, 1866, 1867, 1868,
	1869, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4126, 0, 0, 4127, 0,
	4128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 142, 164, 149,
	141, 0, 162, 163, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 151, 146, 147, 148, 152, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4237,
	0, 4238, 0, 4239, 0, 2674, 0, 0, 0, 2679,
	0, 3845, 3847, 3846, 3912, 3913, 3914, 3915, 3916, 3917,
	3918, 3848, 3849, 816, 0, 0, 0, 170, 0, 0,
	0, 0, 2682, 0, 2683, 0, 0, 0, 1872, 0,
	2691, 0, 0, 0, 2693, 2694, 0, 0, 0, 0,
	0, 0, 0, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 0, 2711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4291,
	0, 4292, 0, 0, 0, 0, 0, 2717, 2718, 2719,
	2720, 0, 2722, 2723, 0, 2725, 0, 0, 0, 2727,
	0, 0, 0, 2732, 2733, 0, 2734, 4314, 0, 2737,
	2738, 2740, 2742, 2743, 2744, 2745, 2746, 2747, 2749, 2751,
	2752, 2753, 2755, 165, 2757, 2758, 2760, 2762, 2764, 2766,
	2768, 2770, 2772, 2774, 2776, 2778, 2780, 2782, 2784, 2786,
	2788, 2790, 2792, 2794, 2795, 2796, 0, 2798, 0, 2800,
	0, 2802, 2803, 0, 2805, 2807, 2809, 0, 0, 0,
	2812, 0, 0, 0, 2816, 0, 0, 0, 2821, 2822,
	2823, 2824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2835, 2836, 2837, 2838, 2839, 2840, 0, 0, 2844,
	2845, 0, 0, 0, 0, 0, 0, 2847, 0, 0,
	0, 0, 2853, 0, 0, 0, 0, 2856, 2857, 2858,
	2859, 2860, 0, 0, 0, 0, 0, 0, 2867, 2868,
	0, 2869, 0, 0, 2872, 2874, 2412, 0, 2876, 0,
	0, 0, 158, 0, 0, 159, 0, 0, 2888, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	2922, 3861, 3862, 183, 0, 3937, 3936, 3935, 0, 0,
	3933, 3934, 3932, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 1236, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3938, 939, 0, 792,
	793, 3939, 3940, 943, 3941, 795, 796, 940, 941, 0,
	790, 794, 942, 944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 177, 174, 180, 181, 182, 184,
	186, 187, 188, 189, 0, 1467, 0, 0, 0, 190,
	192, 193, 194, 0, 0, 0, 0, 0, 0, 3842,
	3843, 3844, 3850, 3851, 3852, 3863, 3910, 3911, 3919, 3921,
	895, 3920, 3922, 3923, 3924, 3927, 3928, 3929, 3930, 3925,
	3926, 3931, 3825, 3829, 3826, 3827, 3828, 3840, 3830, 3831,
	3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3841, 3942,
	3943, 3944, 3945, 3946, 3947, 3856, 3860, 3859, 3857, 3858,
	3854, 3855, 3882, 3881, 3883, 3884, 3885, 3886, 3887, 3888,
	3890, 3889, 3891, 3892, 3893, 3894, 3895, 3896, 3864, 3865,
	3868, 3869, 3867, 3866, 3870, 3879, 3880, 3871, 3872, 3873,
	3874, 3875, 3876, 3878, 3877, 3897, 3898, 3899, 3900, 3901,
	3903, 3902, 3906, 3907, 3905, 3904, 3909, 3908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 945, 0, 946, 0, 0, 950, 0, 0, 0,
	952, 951, 0, 953, 915, 914, 0, 0, 947, 948,
	0, 949, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 3114, 3115, 3116, 3117, 3118,
	0, 0, 0, 0, 0, 0, 0, 969, 0, 0,
	0, 0, 0, 0, 0, 3133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 729, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955,
	0, 0, 0, 0, 0, 201, 0, 0, 201, 0,
	0, 0, 740, 0, 0, 0, 0, 746, 0, 0,
	724, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 746, 201, 746, 0, 746, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 135, 0, 157,
	0, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 178, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	727, 0, 0, 0, 0, 0, 0, 168, 728, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3283, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 175, 0, 0, 176, 0, 0, 0,
	0, 3301, 0, 0, 0, 0, 0, 0, 0, 1968,
	0, 0, 0, 0, 0, 0, 0, 0, 1909, 1910,
	167, 166, 195, 0, 0, 0, 0, 0, 694, 0,
	696, 710, 0, 732, 0, 731, 700, 0, 698, 702,
	711, 703, 0, 697, 2013, 708, 0, 0, 699, 712,
	713, 716, 720, 721, 722, 718, 715, 0, 706, 733,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2051, 0, 0, 0, 0, 0, 0, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3422,
	0, 0, 0, 0, 0, 161, 1911, 164, 0, 1908,
	0, 162, 163, 0, 0, 0, 0, 0, 179, 0,
	0, 3439, 3440, 0, 3441, 3443, 3445, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3458, 0, 0, 0, 0, 3461, 0, 3463,
	3464, 3465, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474,
	3475, 3476, 3477, 3478, 3479, 3481, 3483, 3485, 3487, 3489,
	3491, 3493, 3495, 3497, 3499, 3501, 3503, 3505, 3507, 3509,
	3511, 3512, 3514, 3515, 3516, 3518, 0, 0, 3520, 0,
	3522, 3523, 3524, 0, 0, 3528, 3529, 3530, 3531, 3532,
	3533, 3534, 3535, 3536, 3537, 3538, 0, 0, 0, 0,
	0, 0, 0, 0, 3544, 0, 0, 0, 3549, 0,
	0, 0, 3553, 3554, 0, 3555, 3557, 0, 3560, 3562,
	0, 3564, 3565, 3566, 3567, 0, 0, 0, 0, 0,
	0, 3575, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 3607, 3608, 0, 0, 3612, 0, 0, 0, 0,
	0, 1905, 0, 0, 0, 0, 0, 0, 0, 1856,
	734, 0, 0, 135, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 176, 0, 0, 0, 3685, 0, 0, 0,
	0, 0, 201, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1909, 1910, 167, 166, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3703, 0, 0, 3707, 0,
	0, 746, 0, 746, 746, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 201, 1843, 0, 0,
	0, 0, 3720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 183, 0, 1541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 1911, 164, 0, 1908, 0, 162, 163, 0,
	0, 0, 0, 191, 179, 0, 3743, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 3751,
	0, 1857, 0, 0, 0, 0, 3758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 177, 174, 180, 181, 182, 184, 186,
	187, 188, 189, 0, 0, 0, 0, 0, 190, 192,
	193, 194, 2446, 0, 0, 0, 0, 0, 0, 0,
	2450, 0, 2453, 0, 0, 2105, 0, 1870, 1873, 1874,
	1875, 1876, 1877, 1878, 0, 1879, 1880, 1882, 1883, 1881,
	1884, 1885, 1858, 1859, 1860, 1861, 1841, 1842, 1871, 0,
	1844, 0, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 0, 0, 1854, 1862, 1863, 1864, 1865, 0, 1866,
	1867, 1868, 1869, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3979, 0, 0, 0, 0, 0, 0, 0, 0,
	3986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3996,
	3997, 3998, 0, 4000, 0, 4001, 4002, 0, 0, 0,
	0, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013,
	4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023,
	4024, 4025, 4026, 0, 4028, 4031, 0, 201, 0, 0,
	0, 746, 746, 0, 0, 0, 0, 0, 165, 0,
	4040, 4041, 4042, 4043, 4044, 4046, 4047, 4049, 4051, 4052,
	4054, 201, 0, 0, 4058, 0, 0, 0, 4060, 0,
	0, 0, 0, 0, 0, 4070, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 201, 0, 0, 2105,
	0, 0, 0, 0, 0, 2604, 0, 0, 746, 0,
	0, 0, 0, 0, 0, 201, 2625, 2626, 0, 746,
	2630, 0, 0, 4090, 0, 0, 0, 0, 0, 0,
	0, 0, 2635, 0, 0, 0, 0, 0, 0, 2638,
	0, 0, 0, 0, 746, 0, 746, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 1541, 746, 0,
	1872, 746, 746, 746, 746, 2641, 746, 158, 746, 746,
	159, 746, 746, 746, 746, 746, 746, 0, 0, 0,
	0, 0, 0, 0, 1541, 746, 746, 1541, 746, 1541,
	201, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 183, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 0, 746, 0, 0, 201, 201, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 177,
	174, 180, 181, 182, 184, 186, 187, 188, 189, 0,
	0, 0, 0, 0, 190, 192, 193, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4129, 0, 0, 0, 0, 0, 4132,
	0, 4133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4180, 4181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4188, 4190, 4192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4204, 0, 0, 0, 0, 0, 0, 0,
	746, 746, 0, 4226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1036, 0, 0, 0,
	0, 974, 1037, 988, 989, 990, 975, 0, 0, 976,
	977, 0, 978, 0, 0, 0, 746, 4268, 4270, 4272,
	0, 968, 0, 0, 0, 0, 1541, 0, 0, 0,
	991, 992, 2964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 0, 0, 0,
	0, 0, 0, 4293, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4309, 4310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 723, 0, 0, 0, 0,
	0, 745, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 4187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 745, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 88, 45,
	46, 90, 0, 0, 0, 3051, 3052, 3053, 3054, 3055,
	3056, 0, 0, 0, 0, 3398, 0, 95, 0, 0,
	2366, 49, 78, 79, 0, 76, 80, 0, 0, 0,
	0, 0, 0, 0, 2105, 3067, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3075,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 64,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 98, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3399, 3400, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 201, 0, 0, 0, 746, 0, 0,
	2366, 201, 0, 201, 0, 201, 201, 0, 0, 0,
	4297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	746, 88, 45, 46, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 49, 78, 79, 0, 76, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 100, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 0, 0, 746, 0, 0, 92, 56, 59,
	58, 61, 64, 75, 0, 0, 84, 81, 0, 0,
	746, 0, 0, 0, 98, 4146, 746, 746, 0, 0,
	746, 0, 746, 0, 0, 0, 0, 0, 746, 0,
	63, 94, 93, 0, 0, 73, 74, 60, 0, 0,
	0, 0, 0, 82, 83, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 85, 0, 0, 0, 746, 0,
	0, 0, 746, 746, 0, 88, 45, 46, 90, 0,
	3243, 0, 3247, 0, 0, 0, 0, 4145, 66, 0,
	67, 68, 69, 70, 95, 0, 0, 0, 49, 78,
	79, 0, 76, 80, 0, 0, 0, 0, 0, 0,
	201, 925, 0, 0, 77, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 201, 201, 0,
	0, 201, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 201, 0, 0, 64, 0, 0, 0,
	201, 0, 0, 0, 62, 0, 0, 0, 98, 0,
	92, 56, 59, 58, 61, 0, 75, 0, 0, 84,
	81, 0, 0, 0, 0, 0, 201, 0, 4146, 0,
	0, 744, 0, 201, 0, 0, 0, 0, 746, 0,
	0, 0, 0, 63, 94, 93, 4185, 0, 73, 74,
	60, 0, 0, 0, 0, 0, 82, 83, 85, 0,
	0, 0, 0, 3388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3402, 0, 0,
	0, 0, 0, 0, 4184, 0, 1110, 0, 1117, 0,
	1121, 0, 3414, 0, 91, 3417, 0, 0, 0, 0,
	4145, 66, 0, 67, 68, 69, 70, 0, 0, 0,
	0, 0, 1541, 0, 2366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 56, 59, 58, 61, 0,
	75, 0, 0, 84, 81, 0, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 63, 94, 93,
	0, 0, 73, 74, 60, 0, 0, 0, 0, 0,
	82, 83, 0, 0, 97, 745, 1452, 745, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 65, 66, 0, 67, 68, 69,
	70, 0, 0, 0, 0, 0, 0, 91, 1540, 0,
	3577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3583, 3584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 0, 0, 0, 0, 98, 72, 0, 1036,
	0, 0, 0, 0, 974, 1037, 988, 989, 990, 975,
	0, 0, 976, 977, 0, 978, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 983, 0, 991, 992, 0, 746, 0, 0, 0,
	3647, 0, 0, 0, 0, 0, 0, 97, 746, 746,
	746, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 91, 0, 3396, 3397, 0, 0, 0, 201, 0,
	0, 0, 0, 201, 0, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	72, 0, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3398, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	746, 97, 0, 0, 746, 746, 0, 0, 0, 746,
	0, 0, 0, 0, 0, 745, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 201, 201, 201, 201,
	201, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 201, 201, 0, 0, 3399,
	3400, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 3791,
	0, 0, 3792, 3793, 3794, 0, 0, 0, 745, 0,
	745, 0, 0, 1036, 72, 0, 746, 0, 745, 1037,
	0, 1540, 745, 0, 0, 745, 745, 745, 745, 2160,
	745, 0, 745, 745, 0, 745, 745, 745, 745, 745,
	745, 0, 0, 0, 0, 0, 0, 0, 1540, 745,
	745, 1540, 745, 1540, 939, 745, 0, 0, 0, 0,
	943, 0, 0, 0, 940, 941, 746, 0, 0, 942,
	944, 0, 0, 0, 0, 1294, 0, 1294, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1466,
	0, 0, 0, 745, 0, 0, 745, 0, 0, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 201,
	201, 201, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 746, 0, 0, 0, 1541, 0,
	0, 746, 746, 1541, 201, 201, 201, 201, 201, 0,
	0, 0, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 201, 0, 201, 0, 0, 201, 201, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 0, 1541, 0, 0, 0, 0, 746,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 1740, 1741, 0, 0, 0,
	745, 0, 0, 201, 0, 0, 201, 0, 0, 4110,
	1540, 0, 0, 0, 0, 0, 0, 0, 0, 2169,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 0,
	1917, 0, 0, 0, 0, 0, 0, 0, 1926, 0,
	0, 0, 1928, 0, 926, 1931, 1932, 1934, 1934, 0,
	1934, 0, 1934, 1934, 0, 1943, 1934, 1934, 1934, 1934,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 1963,
	1964, 0, 1110, 0, 746, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 745, 688, 0, 2011, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 688, 2036, 201, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 1086, 1086, 0, 0, 0, 0, 0, 0, 0,
	688, 1294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	746, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 746, 746, 746, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	745, 745, 0, 0, 745, 0, 745, 0, 0, 0,
	0, 0, 745, 0, 1294, 1294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 745, 0, 0, 0, 745, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1036, 0, 0,
	2355, 0, 0, 1037, 0, 0, 0, 0, 0, 0,
	2155, 0, 0, 2160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 746, 0, 201, 0, 0, 0, 0, 0, 0,
	201, 0, 0, 201, 201, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1541, 0, 0, 0, 201, 0, 0, 746, 0, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0,
	0, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 1540, 0, 745, 0,
	0, 0, 0, 0, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 746, 0,
	0, 0, 0, 0, 0, 746, 0, 746, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 2419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	0, 1810, 0, 0, 1294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 0, 688,
	0, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 0, 0, 0, 0, 0, 2541, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 0, 0,
	1117, 1926, 0, 0, 1926, 0, 1926, 0, 0, 0,
	745, 1542, 2570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 745, 745, 0, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 201, 0, 0, 0, 0, 0, 1110, 0, 0,
	0, 0, 2155, 0, 0, 0, 2155, 2155, 0, 746,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 746, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1541, 746,
	0, 746, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 0, 745, 745,
	0, 0, 2646, 745, 0, 746, 2366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1540,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 201, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 201, 0, 0, 1065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 0, 0, 0, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 1542, 0, 1542, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 0, 0,
	0, 0, 688, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 688,
	2894, 0, 0, 0, 0, 0, 688, 0, 0, 0,
	0, 0, 2910, 2911, 2912, 2064, 2065, 688, 688, 688,
	688, 688, 688, 688, 0, 0, 0, 0, 2927, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 1540, 0, 0, 745, 745, 1540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3350, 0,
	0, 0, 0, 0, 0, 0, 3009, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 0, 0, 1540, 0,
	0, 0, 0, 745, 0, 0, 0, 1121, 0, 0,
	0, 0, 0, 0, 3029, 0, 0, 0, 1926, 1926,
	0, 0, 0, 3034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3045, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 0, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3636, 3197, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 745, 0, 0, 0, 1934, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 745, 745, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 1065,
	0, 0, 0, 0, 0, 3284, 1934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 2038, 688, 0,
	688, 0, 688, 2469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1110, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1540, 0, 0, 0, 0, 0,
	0, 745, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 688, 0, 0, 688, 745,
	2632, 0, 0, 0, 0, 0, 0, 0, 1887, 0,
	688, 0, 0, 0, 0, 745, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	2643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 745,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1542,
	0, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 1121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3697, 3698, 3699, 3700,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3775, 0, 3775, 0, 0, 2913, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1540, 745, 0, 745, 0, 0, 0, 0,
	0, 3813, 0, 3815, 0, 688, 0, 0, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	0, 0, 0, 0, 0, 3981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 688, 688, 688, 688, 688, 688, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 745, 0,
	0, 0, 3775, 0, 0, 0, 0, 0, 0, 3775,
	0, 3775, 688, 688, 0, 0, 0, 0, 0, 4072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1121, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 688, 3242, 688, 4130,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 4138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 4154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	1542, 688, 688, 688, 688, 688, 0, 0, 0, 1294,
	1294, 0, 0, 3300, 0, 0, 0, 0, 0, 1985,
	0, 688, 0, 0, 688, 3308, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 0, 0, 0, 0, 4138, 0, 0,
	0, 0, 0, 0, 0, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	688, 0, 0, 688, 0, 0, 0, 1121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1887, 0, 0, 0, 0, 4208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 688, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	688, 688, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1542, 0, 0,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 1435, 1419, 538, 0, 1360, 1438, 1326, 1346,
	1448, 1349, 1352, 1397, 1304, 1375, 424, 1343, 1330, 1299,
	1338, 1300, 1328, 1362, 277, 1325, 1421, 1379, 1437, 373,
	274, 1306, 1297, 210, 515, 1331, 439, 1348, 209, 1400,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 1444, 377, 1385, 0, 507, 409,
	0, 0, 2038, 1425, 1424, 1353, 1364, 1427, 1373, 1412,
	1358, 1399, 1314, 1384, 1439, 1344, 1394, 1440, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 4176,
	517, 970, 0, 0, 0, 0, 4177, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	1340, 1391, 620, 1434, 1341, 1393, 272, 328, 279, 271,
	591, 1445, 1426, 1303, 1372, 1433, 1367, 607, 0, 0,
	235, 1436, 1366, 0, 1396, 0, 1451, 1298, 1387, 0,
	1301, 1305, 1447, 1431, 1334, 1335, 282, 0, 0, 0,
	0, 0, 0, 0, 1363, 1374, 1409, 1413, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 1383,
	0, 0, 0, 1310, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 1313, 0, 1333, 1410, 0, 1296, 304, 1307,
	410, 264, 0, 463, 1417, 1430, 1357, 640, 1432, 1355,
	1354, 1404, 1311, 1423, 1347, 372, 1309, 337, 203, 231,
	0, 1345, 420, 471, 483, 1422, 1329, 1339, 260, 1337,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	1382, 1402, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 600,
	601, 263, 663, 234, 633, 226, 1308, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 362, 363,
	287, 314, 456, 382, 457, 313, 315, 412, 411, 413,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 1324, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 1418, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 1407, 1450, 433, 482,
	246, 617, 506, 205, 1318, 1323, 1316, 0, 261, 262,
	1388, 585, 1319, 1317, 1377, 1378, 1320, 1441, 1442, 1443,
	1428, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 1411,
	1312, 0, 1321, 1322, 406, 1420, 602, 603, 683, 391,
	496, 614, 342, 356, 359, 348, 368, 0, 369, 344,
	345, 350, 353, 354, 355, 360, 361, 365, 371, 255,
	216, 398, 407, 588, 319, 222, 223, 224, 534, 535,
	536, 537, 630, 631, 635, 211, 472, 473, 474, 475,
	299, 625, 316, 478, 477, 338, 339, 386, 458, 550,
	552, 563, 567, 569, 571, 577, 580, 551, 553, 564,
	568, 570, 572, 578, 581, 540, 542, 544, 546, 559,
	558, 555, 583, 584, 561, 566, 545, 557, 562, 575,
	582, 579, 539, 543, 547, 556, 574, 573, 554, 565,
	576, 560, 548, 541, 549, 1381, 202, 227, 375, 1446,
	464, 295, 661, 629, 494, 624, 212, 229, 1315, 269,
	1327, 1336, 0, 1342, 1350, 1351, 1365, 1368, 1369, 1370,
	1371, 1389, 1390, 1392, 1401, 1403, 1406, 1408, 1415, 1429,
	1449, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 1398, 1359, 308,
	309, 453, 454, 321, 322, 657, 658, 307, 611, 644,
	608, 656, 638, 447, 385, 1380, 1386, 388, 288, 312,
	327, 1395, 628, 512, 233, 476, 297, 257, 1414, 1416,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 1376, 1405, 383, 586, 587, 323,
	404, 0, 0, 0, 0, 0, 0, 1435, 1419, 538,
	0, 1360, 1438, 1326, 1346, 1448, 1349, 1352, 1397, 1304,
	1375, 424, 1343, 1330, 1299, 1338, 1300, 1328, 1362, 277,
	1325, 1421, 1379, 1437, 373, 274, 1306, 1297, 210, 515,
	1331, 439, 1348, 209, 1400, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 1444,
	377, 1385, 0, 507, 409, 0, 0, 0, 1425, 1424,
	1353, 1364, 1427, 1373, 1412, 1358, 1399, 1314, 1384, 1439,
	1344, 1394, 1440, 330, 254, 332, 208, 421, 508, 293,
	0, 0, 0, 0, 0, 517, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 358, 367, 366, 346, 347, 349, 351,
	357, 364, 370, 343, 352, 1340, 1391, 620, 1434, 1341,
	1393, 272, 328, 279, 271, 591, 1445, 1426, 1303, 1372,
	1433, 1367, 607, 0, 0, 235, 1436, 1366, 0, 1396,
	0, 1451, 1298, 1387, 0, 1301, 1305, 1447, 1431, 1334,
	1335, 282, 0, 0, 0, 0, 0, 0, 0, 1363,
	1374, 1409, 1413, 1356, 0, 0, 0, 0, 0, 0,
	3309, 0, 1332, 0, 1383, 0, 0, 0, 1310, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 1313, 0, 1333,
	1410, 0, 1296, 304, 1307, 410, 264, 0, 463, 1417,
	1430, 1357, 640, 1432, 1355, 1354, 1404, 1311, 1423, 1347,
	372, 1309, 337, 203, 231, 0, 1345, 420, 471, 483,
	1422, 1329, 1339, 260, 1337, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 1382, 1402, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 1308, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 1324,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 1418, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 1407, 1450, 433, 482, 246, 617, 506, 205, 1318,
	1323, 1316, 0, 261, 262, 1388, 585, 1319, 1317, 1377,
	1378, 1320, 1441, 1442, 1443, 1428, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 1411, 1312, 0, 1321, 1322, 406,
	1420, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	1381, 202, 227, 375, 1446, 464, 295, 661, 629, 494,
	624, 212, 229, 1315, 269, 1327, 1336, 0, 1342, 1350,
	1351, 1365, 1368, 1369, 1370, 1371, 1389, 1390, 1392, 1401,
	1403, 1406, 1408, 1415, 1429, 1449, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 1398, 1359, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	1380, 1386, 388, 288, 312, 327, 1395, 628, 512, 233,
	476, 297, 257, 1414, 1416, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 1376,
	1405, 383, 586, 587, 323, 404, 0, 0, 0, 0,
	0, 0, 1435, 1419, 538, 0, 1360, 1438, 1326, 1346,
	1448, 1349, 1352, 1397, 1304, 1375, 424, 1343, 1330, 1299,
	1338, 1300, 1328, 1362, 277, 1325, 1421, 1379, 1437, 373,
	274, 1306, 1297, 210, 515, 1331, 439, 1348, 209, 1400,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 1444, 377, 1385, 0, 507, 409,
	0, 0, 0, 1425, 1424, 1353, 1364, 1427, 1373, 1412,
	1358, 1399, 1314, 1384, 1439, 1344, 1394, 1440, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	1340, 1391, 620, 1434, 1341, 1393, 272, 328, 279, 271,
	591, 1445, 1426, 1303, 1372, 1433, 1367, 607, 0, 0,
	235, 1436, 1366, 0, 1396, 0, 1451, 1298, 1387, 0,
	1301, 1305, 1447, 1431, 1334, 1335, 282, 0, 0, 0,
	0, 0, 0, 0, 1363, 1374, 1409, 1413, 1356, 0,
	0, 0, 0, 0, 0, 3270, 0, 1332, 0, 1383,
	0, 0, 0, 1310, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 1313, 0, 1333, 1410, 0, 1296, 304, 1307,
	410, 264, 0, 463, 1417, 1430, 1357, 640, 1432, 1355,
	1354, 1404, 1311, 1423, 1347, 372, 1309, 337, 203, 231,
	0, 1345, 420, 471, 483, 1422, 1329, 1339, 260, 1337,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	1382, 1402, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 600,
	601, 263, 663, 234, 633, 226, 1308, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 362, 363,
	287, 314, 456, 382, 457, 313, 315, 412, 411, 413,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 1324, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 1418, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 1407, 1450, 433, 482,
	246, 617, 506, 205, 1318, 1323, 1316, 0, 261, 262,
	1388, 585, 1319, 1317, 1377, 1378, 1320, 1441, 1442, 1443,
	1428, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 1411,
	1312, 0, 1321, 1322, 406, 1420, 602, 603, 683, 391,
	496, 614, 342, 356, 359, 348, 368, 0, 369, 344,
	345, 350, 353, 354, 355, 360, 361, 365, 371, 255,
	216, 398, 407, 588, 319, 222, 223, 224, 534, 535,
	536, 537, 630, 631, 635, 211, 472, 473, 474, 475,
	299, 625, 316, 478, 477, 338, 339, 386, 458, 550,
	552, 563, 567, 569, 571, 577, 580, 551, 553, 564,
	568, 570, 572, 578, 581, 540, 542, 544, 546, 559,
	558, 555, 583, 584, 561, 566, 545, 557, 562, 575,
	582, 579, 539, 543, 547, 556, 574, 573, 554, 565,
	576, 560, 548, 541, 549, 1381, 202, 227, 375, 1446,
	464, 295, 661, 629, 494, 624, 212, 229, 1315, 269,
	1327, 1336, 0, 1342, 1350, 1351, 1365, 1368, 1369, 1370,
	1371, 1389, 1390, 1392, 1401, 1403, 1406, 1408, 1415, 1429,
	1449, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 1398, 1359, 308,
	309, 453, 454, 321, 322, 657, 658, 307, 611, 644,
	608, 656, 638, 447, 385, 1380, 1386, 388, 288, 312,
	327, 1395, 628, 512, 233, 476, 297, 257, 1414, 1416,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 1376, 1405, 383, 586, 587, 323,
	404, 0, 0, 0, 0, 0, 0, 1435, 1419, 538,
	0, 1360, 1438, 1326, 1346, 1448, 1349, 1352, 1397, 1304,
	1375, 424, 1343, 1330, 1299, 1338, 1300, 1328, 1362, 277,
	1325, 1421, 1379, 1437, 373, 274, 1306, 1297, 210, 515,
	1331, 439, 1348, 209, 1400, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 1444,
	377, 1385, 0, 507, 409, 0, 0, 0, 1425, 1424,
	1353, 1364, 1427, 1373, 1412, 1358, 1399, 1314, 1384, 1439,
	1344, 1394, 1440, 330, 254, 332, 208, 421, 508, 293,
	0, 0, 0, 0, 0, 517, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 358, 367, 366, 346, 347, 349, 351,
	357, 364, 370, 343, 352, 1340, 1391, 620, 1434, 1341,
	1393, 272, 328, 279, 271, 591, 1445, 1426, 1303, 1372,
	1433, 1367, 607, 0, 0, 235, 1436, 1366, 0, 1396,
	0, 1451, 1298, 1387, 0, 1301, 1305, 1447, 1431, 1334,
	1335, 282, 0, 0, 0, 0, 0, 0, 0, 1363,
	1374, 1409, 1413, 1356, 0, 0, 0, 0, 0, 0,
	2448, 0, 1332, 0, 1383, 0, 0, 0, 1310, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 1313, 0, 1333,
	1410, 0, 1296, 304, 1307, 410, 264, 0, 463, 1417,
	1430, 1357, 640, 1432, 1355, 1354, 1404, 1311, 1423, 1347,
	372, 1309, 337, 203, 231, 0, 1345, 420, 471, 483,
	1422, 1329, 1339, 260, 1337, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 1382, 1402, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 1308, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 1324,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 1418, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 1407, 1450, 433, 482, 246, 617, 506, 205, 1318,
	1323, 1316, 0, 261, 262, 1388, 585, 1319, 1317, 1377,
	1378, 1320, 1441, 1442, 1443, 1428, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 1411, 1312, 0, 1321, 1322, 406,
	1420, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	1381, 202, 227, 375, 1446, 464, 295, 661, 629, 494,
	624, 212, 229, 1315, 269, 1327, 1336, 0, 1342, 1350,
	1351, 1365, 1368, 1369, 1370, 1371, 1389, 1390, 1392, 1401,
	1403, 1406, 1408, 1415, 1429, 1449, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 1398, 1359, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	1380, 1386, 388, 288, 312, 327, 1395, 628, 512, 233,
	476, 297, 257, 1414, 1416, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 1376,
	1405, 383, 586, 587, 323, 404, 0, 0, 0, 0,
	0, 0, 1435, 1419, 538, 0, 1360, 1438, 1326, 1346,
	1448, 1349, 1352, 1397, 1304, 1375, 424, 1343, 1330, 1299,
	1338, 1300, 1328, 1362, 277, 1325, 1421, 1379, 1437, 373,
	274, 1306, 1297, 210, 515, 1331, 439, 1348, 209, 1400,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 1444, 377, 1385, 0, 507, 409,
	0, 0, 0, 1425, 1424, 1353, 1364, 1427, 1373, 1412,
	1358, 1399, 1314, 1384, 1439, 1344, 1394, 1440, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	1340, 1391, 620, 1434, 1341, 1393, 272, 328, 279, 271,
	591, 1445, 1426, 1303, 1372, 1433, 1367, 607, 0, 0,
	235, 1436, 1366, 0, 1396, 0, 1451, 1298, 1387, 0,
	1301, 1305, 1447, 1431, 1334, 1335, 282, 0, 0, 0,
	0, 0, 0, 0, 1363, 1374, 1409, 1413, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 1383,
	0, 0, 0, 1310, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 1313, 0, 1333, 1410, 0, 1296, 304, 1307,
	410, 264, 0, 463, 1417, 1430, 1357, 640, 1432, 1355,
	1354, 1404, 1311, 1423, 1347, 372, 1309, 337, 203, 231,
	0, 1345, 420, 471, 483, 1422, 1329, 1339, 260, 1337,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	1382, 1402, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 600,
	601, 263, 663, 234, 633, 226, 1308, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 362, 363,
	287, 314, 456, 382, 457, 313, 315, 412, 411, 413,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 1324, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 1418, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 1407, 1450, 433, 482,
	246, 617, 506, 205, 1318, 1323, 1316, 0, 261, 262,
	1388, 585, 1319, 1317, 1377, 1378, 1320, 1441, 1442, 1443,
	1428, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 1411,
	1312, 0, 1321, 1322, 406, 1420, 602, 603, 683, 391,
	496, 614, 342, 356, 359, 348, 368, 0, 369, 344,
	345, 350, 353, 354, 355, 360, 361, 365, 371, 255,
	216, 398, 407, 588, 319, 222, 223, 224, 534, 535,
	536, 537, 630, 631, 635, 211, 472, 473, 474, 475,
	299, 625, 316, 478, 477, 338, 339, 386, 458, 550,
	552, 563, 567, 569, 571, 577, 580, 551, 553, 564,
	568, 570, 572, 578, 581, 540, 542, 544, 546, 559,
	558, 555, 583, 584, 561, 566, 545, 557, 562, 575,
	582, 579, 539, 543, 547, 556, 574, 573, 554, 565,
	576, 560, 548, 541, 549, 1381, 202, 227, 375, 1446,
	464, 295, 661, 629, 494, 624, 212, 229, 1315, 269,
	1327, 1336, 0, 1342, 1350, 1351, 1365, 1368, 1369, 1370,
	1371, 1389, 1390, 1392, 1401, 1403, 1406, 1408, 1415, 1429,
	1449, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 1398, 1359, 308,
	309, 453, 454, 321, 322, 657, 658, 307, 611, 644,
	608, 656, 638, 447, 385, 1380, 1386, 388, 288, 312,
	327, 1395, 628, 512, 233, 476, 297, 257, 1414, 1416,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 1376, 1405, 383, 586, 587, 323,
	404, 0, 0, 0, 0, 0, 0, 1435, 1419, 538,
	0, 1360, 1438, 1326, 1346, 1448, 1349, 1352, 1397, 1304,
	1375, 424, 1343, 1330, 1299, 1338, 1300, 1328, 1362, 277,
	1325, 1421, 1379, 1437, 373, 274, 1306, 1297, 210, 515,
	1331, 439, 1348, 209, 1400, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 1444,
	377, 1385, 0, 507, 409, 0, 0, 0, 1425, 1424,
	1353, 1364, 1427, 1373, 1412, 1358, 1399, 1314, 1384, 1439,
	1344, 1394, 1440, 330, 254, 332, 208, 421, 508, 293,
	0, 0, 0, 0, 0, 517, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 358, 367, 366, 346, 347, 349, 351,
	357, 364, 370, 343, 352, 1340, 1391, 620, 1434, 1341,
	1393, 272, 328, 279, 271, 591, 1445, 1426, 1303, 1372,
	1433, 1367, 607, 0, 0, 235, 1436, 1366, 0, 1396,
	0, 1451, 1298, 1387, 0, 1301, 1305, 1447, 1431, 1334,
	1335, 282, 0, 0, 0, 0, 0, 0, 0, 1363,
	1374, 1409, 1413, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 1383, 0, 0, 0, 1310, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 1313, 0, 1333,
	1410, 0, 1296, 304, 1307, 410, 264, 0, 463, 1417,
	1430, 1357, 640, 1432, 1355, 1354, 1404, 1311, 1423, 1347,
	372, 1309, 337, 203, 231, 0, 1345, 420, 471, 483,
	1422, 1329, 1339, 260, 1337, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 1382, 1402, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 1308, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 1324,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 1418, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 1407, 1450, 433, 482, 246, 617, 506, 205, 1318,
	1323, 1316, 0, 261, 262, 1388, 585, 1319, 1317, 1377,
	1378, 1320, 1441, 1442, 1443, 1428, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 1411, 1312, 0, 1321, 1322, 406,
	1420, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	1381, 202, 227, 375, 1446, 464, 295, 661, 629, 494,
	624, 212, 229, 1315, 269, 1327, 1336, 0, 1342, 1350,
	1351, 1365, 1368, 1369, 1370, 1371, 1389, 1390, 1392, 1401,
	1403, 1406, 1408, 1415, 1429, 1449, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 1398, 1359, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	1380, 1386, 388, 288, 312, 327, 1395, 628, 512, 233,
	476, 297, 257, 1414, 1416, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 1376,
	1405, 383, 586, 587, 323, 404, 0, 0, 0, 0,
	0, 0, 1435, 1419, 538, 0, 1360, 1438, 1326, 1346,
	1448, 1349, 1352, 1397, 1304, 1375, 424, 1343, 1330, 1299,
	1338, 1300, 1328, 1362, 277, 1325, 1421, 1379, 1437, 373,
	274, 1306, 1297, 210, 515, 1331, 439, 1348, 209, 1400,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 1444, 377, 1385, 0, 507, 409,
	0, 0, 0, 1425, 1424, 1353, 1364, 1427, 1373, 1412,
	1358, 1399, 1314, 1384, 1439, 1344, 1394, 1440, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	1340, 1391, 620, 1434, 1341, 1393, 272, 328, 279, 271,
	591, 1445, 1426, 1303, 1372, 1433, 1367, 607, 0, 0,
	235, 1436, 1366, 0, 1396, 0, 1451, 1298, 1387, 0,
	1301, 1305, 1447, 1431, 1334, 1335, 282, 0, 0, 0,
	0, 0, 0, 0, 1363, 1374, 1409, 1413, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 1383,
	0, 0, 0, 1310, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 1313, 0, 1333, 1410, 0, 1296, 304, 1307,
	410, 264, 0, 463, 1417, 1430, 1357, 640, 1432, 1355,
	1354, 1404, 1311, 1423, 1347, 372, 1309, 337, 203, 231,
	0, 1345, 420, 471, 483, 1422, 1329, 1339, 260, 1337,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	1382, 1402, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 600,
	601, 263, 663, 234, 633, 226, 1308, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 362, 363,
	287, 314, 456, 382, 457, 313, 315, 412, 411, 413,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 1324, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 1418, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 1407, 1450, 433, 482,
	246, 617, 506, 205, 1318, 1323, 1316, 0, 261, 262,
	1388, 585, 1319, 1317, 1377, 1378, 1320, 1441, 1442, 1443,
	1428, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 1411,
	1312, 0, 1321, 1322, 406, 1420, 602, 603, 683, 391,
	496, 614, 342, 356, 359, 348, 368, 0, 369, 344,
	345, 350, 353, 354, 355, 360, 361, 365, 371, 255,
	216, 398, 407, 588, 319, 222, 223, 224, 534, 535,
	536, 537, 630, 631, 635, 211, 472, 473, 474, 475,
	299, 625, 316, 478, 477, 338, 339, 386, 458, 550,
	552, 563, 567, 569, 571, 577, 580, 551, 553, 564,
	568, 570, 572, 578, 581, 540, 542, 544, 546, 559,
	558, 555, 583, 584, 561, 566, 545, 557, 562, 575,
	582, 579, 539, 543, 547, 556, 574, 573, 554, 565,
	576, 560, 548, 541, 549, 1381, 202, 227, 375, 1446,
	464, 295, 661, 629, 494, 624, 212, 229, 1315, 269,
	1327, 1336, 0, 1342, 1350, 1351, 1365, 1368, 1369, 1370,
	1371, 1389, 1390, 1392, 1401, 1403, 1406, 1408, 1415, 1429,
	1449, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 1398, 1359, 308,
	309, 453, 454, 321, 322, 657, 658, 307, 611, 644,
	608, 656, 638, 447, 385, 1380, 1386, 388, 288, 312,
	327, 1395, 628, 512, 233, 476, 297, 257, 1414, 1416,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 1376, 1405, 383, 586, 587, 323,
	404, 0, 0, 0, 0, 0, 0, 1435, 1419, 538,
	0, 1360, 1438, 1326, 1346, 1448, 1349, 1352, 1397, 1304,
	1375, 424, 1343, 1330, 1299, 1338, 1300, 1328, 1362, 277,
	1325, 1421, 1379, 1437, 373, 274, 1306, 1297, 210, 515,
	1331, 439, 1348, 209, 1400, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 1444,
	377, 1385, 0, 507, 409, 0, 0, 0, 1425, 1424,
	1353, 1364, 1427, 1373, 1412, 1358, 1399, 1314, 1384, 1439,
	1344, 1394, 1440, 330, 254, 332, 208, 421, 508, 293,
	0, 0, 0, 0, 0, 517, 970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 358, 367, 366, 346, 347, 349, 351,
	357, 364, 370, 343, 352, 1340, 1391, 620, 1434, 1341,
	1393, 272, 328, 279, 271, 591, 1445, 1426, 1303, 1372,
	1433, 1367, 607, 0, 0, 235, 1436, 1366, 0, 1396,
	0, 1451, 1298, 1387, 0, 1301, 1305, 1447, 1431, 1334,
	1335, 282, 0, 0, 0, 0, 0, 0, 0, 1363,
	1374, 1409, 1413, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 1383, 0, 0, 0, 1310, 1302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 1313, 0, 1333,
	1410, 0, 1296, 304, 1307, 410, 264, 0, 463, 1417,
	1430, 1357, 640, 1432, 1355, 1354, 1404, 1311, 1423, 1347,
	372, 1309, 337, 203, 231, 0, 1345, 420, 471, 483,
	1422, 1329, 1339, 260, 1337, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 1382, 1402, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 1308, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 1324,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 1418, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 1407, 1450, 433, 482, 246, 617, 506, 205, 1318,
	1323, 1316, 0, 261, 262, 1388, 585, 1319, 1317, 1377,
	1378, 1320, 1441, 1442, 1443, 1428, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 1411, 1312, 0, 1321, 1322, 406,
	1420, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	1381, 202, 227, 375, 1446, 464, 295, 661, 629, 494,
	624, 212, 229, 1315, 269, 1327, 1336, 0, 1342, 1350,
	1351, 1365, 1368, 1369, 1370, 1371, 1389, 1390, 1392, 1401,
	1403, 1406, 1408, 1415, 1429, 1449, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 1398, 1359, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	1380, 1386, 388, 288, 312, 327, 1395, 628, 512, 233,
	476, 297, 257, 1414, 1416, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 1376,
	1405, 383, 586, 587, 323, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 759, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 2256, 2257, 2258, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 755, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 929, 0, 0, 640, 0, 0,
	927, 0, 0, 0, 0, 372, 0, 337, 203, 231,
	0, 0, 420, 471, 483, 0, 0, 0, 980, 0,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	0, 0, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 981,
	982, 263, 663, 826, 633, 226, 0, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 834, 835,
	287, 314, 911, 910, 909, 313, 315, 907, 908, 906,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 0, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 0, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 0, 0, 433, 482,
	246, 617, 506, 917, 939, 928, 792, 793, 918, 919,
	943, 920, 795, 796, 940, 941, 789, 790, 794, 942,
	944, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 931,
	778, 777, 0, 784, 785, 0, 814, 815, 817, 823,
	824, 825, 836, 883, 884, 892, 894, 895, 893, 896,
	897, 898, 901, 902, 903, 904, 899, 900, 905, 797,
	801, 798, 799, 800, 812, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 813, 954, 955, 956, 957,
	958, 959, 829, 833, 832, 830, 831, 827, 828, 855,
	854, 856, 857, 858, 859, 860, 861, 863, 862, 864,
	865, 866, 867, 868, 869, 837, 838, 841, 842, 840,
	839, 843, 852, 853, 844, 845, 846, 847, 848, 849,
	851, 850, 870, 871, 872, 873, 874, 876, 875, 879,
	880, 878, 877, 882, 881, 776, 202, 227, 375, 0,
	464, 295, 661, 629, 494, 624, 212, 229, 945, 269,
	946, 0, 0, 950, 0, 0, 0, 952, 951, 0,
	953, 915, 914, 0, 0, 947, 948, 0, 949, 0,
	0, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 0, 0, 960,
	961, 962, 963, 964, 965, 966, 967, 307, 611, 644,
	608, 656, 638, 447, 385, 0, 0, 388, 288, 312,
	327, 0, 628, 512, 233, 476, 297, 257, 1035, 0,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 404, 0, 383, 586, 587, 323,
	0, 0, 0, 538, 0, 788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 775,
	0, 0, 0, 277, 780, 0, 0, 0, 373, 274,
	0, 0, 210, 515, 0, 439, 0, 209, 0, 497,
	259, 384, 381, 594, 289, 280, 276, 256, 324, 393,
	436, 528, 430, 787, 377, 0, 0, 507, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 782, 783, 0,
	0, 0, 0, 0, 0, 2477, 0, 330, 254, 332,
	208, 421, 508, 293, 0, 98, 0, 0, 1036, 517,
	970, 759, 936, 974, 1037, 988, 989, 990, 975, 0,
	244, 976, 977, 251, 978, 0, 935, 818, 820, 819,
	885, 886, 887, 888, 889, 890, 891, 821, 822, 816,
	983, 620, 991, 992, 2478, 272, 328, 279, 271, 591,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 755, 772, 0,
	786, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 770, 0, 0, 0, 0, 930, 0,
	771, 0, 0, 779, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 781, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 929, 0, 0, 640, 0, 0, 927,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 980, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 981, 982,
	263, 663, 826, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 834, 835, 287,
	314, 911, 910, 909, 313, 315, 907, 908, 906, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 917, 939, 928, 792, 793, 918, 919, 943,
	920, 795, 796, 940, 941, 789, 790, 794, 942, 944,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 931, 778,
	777, 0, 784, 785, 0, 814, 815, 817, 823, 824,
	825, 836, 883, 884, 892, 894, 895, 893, 896, 897,
	898, 901, 902, 903, 904, 899, 900, 905, 797, 801,
	798, 799, 800, 812, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 813, 954, 955, 956, 957, 958,
	959, 829, 833, 832, 830, 831, 827, 828, 855, 854,
	856, 857, 858, 859, 860, 861, 863, 862, 864, 865,
	866, 867, 868, 869, 837, 838, 841, 842, 840, 839,
	843, 852, 853, 844, 845, 846, 847, 848, 849, 851,
	850, 870, 871, 872, 873, 874, 876, 875, 879, 880,
	878, 877, 882, 881, 776, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 945, 269, 946,
	0, 0, 950, 0, 0, 0, 952, 951, 0, 953,
	915, 914, 0, 0, 947, 948, 0, 949, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 960, 961,
	962, 963, 964, 965, 966, 967, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 1035, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 88, 538, 0, 788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 775, 0,
	0, 0, 277, 780, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 1731, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 782, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 98, 0, 0, 1036, 517, 970,
	759, 936, 974, 1037, 988, 989, 990, 975, 0, 244,
	976, 977, 251, 978, 0, 935, 818, 820, 819, 885,
	886, 887, 888, 889, 890, 891, 821, 822, 816, 983,
	620, 991, 992, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 755, 772, 0, 786,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 769, 770, 0, 0, 0, 0, 930, 0, 771,
	0, 0, 779, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 410, 264,
	0, 463, 929, 0, 0, 640, 0, 0, 927, 0,
	0, 0, 0, 372, 0, 337, 203, 231, 0, 0,
	420, 471, 483, 0, 0, 0, 980, 0, 481, 434,
	615, 239, 291, 468, 441, 479, 449, 294, 0, 0,
	480, 379, 596, 459, 612, 641, 642, 270, 414, 626,
	532, 634, 659, 232, 267, 428, 516, 618, 504, 405,
	592, 593, 336, 503, 302, 207, 376, 647, 230, 489,
	378, 248, 237, 598, 623, 306, 258, 296, 466, 654,
	219, 527, 609, 245, 493, 0, 0, 662, 253, 514,
	621, 610, 221, 605, 513, 401, 333, 334, 220, 0,
	467, 275, 300, 0, 0, 265, 423, 981, 982, 263,
	663, 826, 633, 226, 0, 632, 416, 595, 606, 402,
	390, 225, 604, 400, 389, 341, 834, 835, 287, 314,
	911, 910, 909, 313, 315, 907, 908, 906, 213, 619,
	637, 0, 214, 0, 509, 622, 664, 461, 218, 240,
	241, 243, 0, 286, 290, 298, 301, 310, 311, 320,
	374, 427, 455, 451, 460, 0, 589, 613, 627, 639,
	645, 646, 648, 649, 650, 651, 652, 655, 653, 415,
	318, 505, 340, 380, 0, 0, 433, 482, 246, 617,
	506, 917, 939, 928, 792, 793, 918, 919, 943, 920,
	795, 796, 940, 941, 789, 790, 794, 942, 944, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 660, 518, 524,
	519, 520, 521, 522, 523, 0, 525, 931, 778, 777,
	0, 784, 785, 0, 814, 815, 817, 823, 824, 825,
	836, 883, 884, 892, 894, 895, 893, 896, 897, 898,
	901, 902, 903, 904, 899, 900, 905, 797, 801, 798,
	799, 800, 812, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 813, 954, 955, 956, 957, 958, 959,
	829, 833, 832, 830, 831, 827, 828, 855, 854, 856,
	857, 858, 859, 860, 861, 863, 862, 864, 865, 866,
	867, 868, 869, 837, 838, 841, 842, 840, 839, 843,
	852, 853, 844, 845, 846, 847, 848, 849, 851, 850,
	870, 871, 872, 873, 874, 876, 875, 879, 880, 878,
	877, 882, 881, 776, 202, 227, 375, 97, 464, 295,
	661, 629, 494, 624, 212, 229, 945, 269, 946, 0,
	0, 950, 0, 0, 0, 952, 951, 0, 953, 915,
	914, 0, 0, 947, 948, 0, 949, 0, 0, 204,
	206, 215, 228, 238, 242, 249, 268, 283, 285, 292,
	305, 317, 325, 326, 329, 335, 387, 394, 395, 396,
	397, 417, 418, 419, 422, 425, 426, 429, 431, 432,
	435, 440, 444, 445, 446, 448, 450, 452, 465, 470,
	484, 485, 486, 487, 488, 491, 492, 498, 499, 500,
	501, 502, 510, 511, 526, 597, 599, 616, 636, 643,
	490, 392, 438, 462, 590, 0, 0, 960, 961, 962,
	963, 964, 965, 966, 967, 307, 611, 644, 608, 656,
	638, 447, 385, 0, 0, 388, 288, 312, 327, 0,
	628, 512, 233, 476, 297, 257, 1035, 0, 217, 252,
	236, 266, 281, 284, 331, 399, 408, 437, 443, 303,
	278, 250, 469, 247, 495, 529, 530, 531, 533, 403,
	273, 442, 404, 0, 383, 586, 587, 323, 0, 0,
	0, 538, 0, 788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 775, 0, 0,
	0, 277, 780, 0, 0, 0, 373, 274, 0, 0,
	210, 515, 0, 439, 0, 209, 0, 497, 259, 384,
	381, 594, 289, 280, 276, 256, 324, 393, 436, 528,
	430, 787, 377, 0, 0, 507, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 783, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 254, 332, 208, 421,
	508, 293, 0, 98, 0, 0, 1036, 517, 970, 759,
	936, 974, 1037, 988, 989, 990, 975, 0, 244, 976,
	977, 251, 978, 0, 935, 818, 820, 819, 885, 886,
	887, 888, 889, 890, 891, 821, 822, 816, 983, 620,
	991, 992, 0, 272, 328, 279, 271, 591, 0, 0,
	0, 0, 0, 0, 607, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 755, 772, 0, 786, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	769, 770, 0, 0, 0, 0, 930, 0, 771, 0,
	0, 779, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 929, 0, 0, 640, 0, 0, 927, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 980, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 4163, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 981, 982, 263, 663,
	826, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 834, 835, 287, 314, 911,
	910, 909, 313, 315, 907, 908, 906, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	917, 939, 928, 792, 793, 918, 919, 943, 920, 795,
	796, 940, 941, 789, 790, 794, 942, 944, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 931, 778, 777, 0,
	784, 785, 0, 814, 815, 817, 823, 824, 825, 836,
	883, 884, 892, 894, 895, 893, 896, 897, 898, 901,
	902, 903, 904, 899, 900, 905, 797, 801, 798, 799,
	800, 812, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 813, 954, 955, 956, 957, 958, 959, 829,
	833, 832, 830, 831, 827, 828, 855, 854, 856, 857,
	858, 859, 860, 861, 863, 862, 864, 865, 866, 867,
	868, 869, 837, 838, 841, 842, 840, 839, 843, 852,
	853, 844, 845, 846, 847, 848, 849, 851, 850, 870,
	871, 872, 873, 874, 876, 875, 879, 880, 878, 877,
	882, 881, 776, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 945, 269, 946, 0, 0,
	950, 0, 0, 0, 952, 951, 0, 953, 915, 914,
	0, 0, 947, 948, 0, 949, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 960, 961, 962, 963,
	964, 965, 966, 967, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 1035, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 788, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 775, 0, 0, 0,
	277, 780, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	787, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 782, 783, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 98, 0, 1768, 1036, 517, 970, 759, 936,
	974, 1037, 988, 989, 990, 975, 0, 244, 976, 977,
	251, 978, 0, 935, 818, 820, 819, 885, 886, 887,
	888, 889, 890, 891, 821, 822, 816, 983, 620, 991,
	992, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 755, 772, 0, 786, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 769,
	770, 0, 0, 0, 0, 930, 0, 771, 0, 0,
	779, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 410, 264, 0, 463,
	929, 0, 0, 640, 0, 0, 927, 0, 0, 0,
	0, 372, 0, 337, 203, 231, 0, 0, 420, 471,
	483, 0, 0, 0, 980, 0, 481, 434, 615, 239,
	291, 468, 441, 479, 449, 294, 0, 0, 480, 379,
	596, 459, 612, 641, 642, 270, 414, 626, 532, 634,
	659, 232, 267, 428, 516, 618, 504, 405, 592, 593,
	336, 503, 302, 207, 376, 647, 230, 489, 378, 248,
	237, 598, 623, 306, 258, 296, 466, 654, 219, 527,
	609, 245, 493, 0, 0, 662, 253, 514, 621, 610,
	221, 605, 513, 401, 333, 334, 220, 0, 467, 275,
	300, 0, 0, 265, 423, 981, 982, 263, 663, 826,
	633, 226, 0, 632, 416, 595, 606, 402, 390, 225,
	604, 400, 389, 341, 834, 835, 287, 314, 911, 910,
	909, 313, 315, 907, 908, 906, 213, 619, 637, 0,
	214, 0, 509, 622, 664, 461, 218, 240, 241, 243,
	0, 286, 290, 298, 301, 310, 311, 320, 374, 427,
	455, 451, 460, 0, 589, 613, 627, 639, 645, 646,
	648, 649, 650, 651, 652, 655, 653, 415, 318, 505,
	340, 380, 0, 0, 433, 482, 246, 617, 506, 917,
	939, 928, 792, 793, 918, 919, 943, 920, 795, 796,
	940, 941, 789, 790, 794, 942, 944, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 660, 518, 524, 519, 520,
	521, 522, 523, 0, 525, 931, 778, 777, 0, 784,
	785, 0, 814, 815, 817, 823, 824, 825, 836, 883,
	884, 892, 894, 895, 893, 896, 897, 898, 901, 902,
	903, 904, 899, 900, 905, 797, 801, 798, 799, 800,
	812, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 813, 954, 955, 956, 957, 958, 959, 829, 833,
	832, 830, 831, 827, 828, 855, 854, 856, 857, 858,
	859, 860, 861, 863, 862, 864, 865, 866, 867, 868,
	869, 837, 838, 841, 842, 840, 839, 843, 852, 853,
	844, 845, 846, 847, 848, 849, 851, 850, 870, 871,
	872, 873, 874, 876, 875, 879, 880, 878, 877, 882,
	881, 776, 202, 227, 375, 0, 464, 295, 661, 629,
	494, 624, 212, 229, 945, 269, 946, 0, 0, 950,
	0, 0, 0, 952, 951, 0, 953, 915, 914, 0,
	0, 947, 948, 0, 949, 0, 0, 204, 206, 215,
	228, 238, 242, 249, 268, 283, 285, 292, 305, 317,
	325, 326, 329, 335, 387, 394, 395, 396, 397, 417,
	418, 419, 422, 425, 426, 429, 431, 432, 435, 440,
	444, 445, 446, 448, 450, 452, 465, 470, 484, 485,
	486, 487, 488, 491, 492, 498, 499, 500, 501, 502,
	510, 511, 526, 597, 599, 616, 636, 643, 490, 392,
	438, 462, 590, 0, 0, 960, 961, 962, 963, 964,
	965, 966, 967, 307, 611, 644, 608, 656, 638, 447,
	385, 0, 0, 388, 288, 312, 327, 0, 628, 512,
	233, 476, 297, 257, 1035, 0, 217, 252, 236, 266,
	281, 284, 331, 399, 408, 437, 443, 303, 278, 250,
	469, 247, 495, 529, 530, 531, 533, 403, 273, 442,
	404, 0, 383, 586, 587, 323, 0, 0, 0, 538,
	0, 788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 0, 775, 0, 0, 0, 277,
	780, 0, 0, 0, 373, 274, 0, 0, 210, 515,
	0, 439, 0, 209, 0, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 787,
	377, 0, 0, 507, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 782, 783, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 254, 332, 208, 421, 508, 293,
	0, 98, 0, 0, 1036, 517, 970, 759, 936, 974,
	1037, 988, 989, 990, 975, 0, 244, 976, 977, 251,
	978, 0, 935, 818, 820, 819, 885, 886, 887, 888,
	889, 890, 891, 821, 822, 816, 983, 620, 991, 992,
	0, 272, 328, 279, 271, 591, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 755, 772, 0, 786, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 770,
	1084, 0, 0, 0, 930, 0, 771, 0, 0, 779,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 929,
	0, 0, 640, 0, 0, 927, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 980, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 981, 982, 263, 663, 826, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 834, 835, 287, 314, 911, 910, 909,
	313, 315, 907, 908, 906, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 917, 939,
	928, 792, 793, 918, 919, 943, 920, 795, 796, 940,
	941, 789, 790, 794, 942, 944, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 931, 778, 777, 0, 784, 785,
	0, 814, 815, 817, 823, 824, 825, 836, 883, 884,
	892, 894, 895, 893, 896, 897, 898, 901, 902, 903,
	904, 899, 900, 905, 797, 801, 798, 799, 800, 812,
	802, 803, 804, 805, 806, 807, 808, 809, 810, 811,
	813, 954, 955, 956, 957, 958, 959, 829, 833, 832,
	830, 831, 827, 828, 855, 854, 856, 857, 858, 859,
	860, 861, 863, 862, 864, 865, 866, 867, 868, 869,
	837, 838, 841, 842, 840, 839, 843, 852, 853, 844,
	845, 846, 847, 848, 849, 851, 850, 870, 871, 872,
	873, 874, 876, 875, 879, 880, 878, 877, 882, 881,
	776, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 945, 269, 946, 0, 0, 950, 0,
	0, 0, 952, 951, 0, 953, 915, 914, 0, 0,
	947, 948, 0, 949, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 960, 961, 962, 963, 964, 965,
	966, 967, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 1035, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 775, 0, 0, 0, 277, 780,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 787, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 782, 783, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	98, 0, 0, 1036, 517, 970, 759, 936, 974, 1037,
	988, 989, 990, 975, 0, 244, 976, 977, 251, 978,
	0, 935, 818, 820, 819, 885, 886, 887, 888, 889,
	890, 891, 821, 822, 816, 983, 620, 991, 992, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 755, 772, 0, 786, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 769, 770, 0,
	0, 0, 0, 930, 0, 771, 0, 0, 779, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 781, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 410, 264, 0, 463, 929, 0,
	0, 640, 0, 0, 927, 0, 0, 0, 0, 372,
	0, 337, 203, 231, 0, 0, 420, 471, 483, 0,
	0, 0, 980, 0, 481, 434, 615, 239, 291, 468,
	441, 479, 449, 294, 0, 0, 480, 379, 596, 459,
	612, 641, 642, 270, 414, 626, 532, 634, 659, 232,
	267, 428, 516, 618, 504, 405, 592, 593, 336, 503,
	302, 207, 376, 647, 230, 489, 378, 248, 237, 598,
	623, 306, 258, 296, 466, 654, 219, 527, 609, 245,
	493, 0, 0, 662, 253, 514, 621, 610, 221, 605,
	513, 401, 333, 334, 220, 0, 467, 275, 300, 0,
	0, 265, 423, 981, 982, 263, 663, 826, 633, 226,
	0, 632, 416, 595, 606, 402, 390, 225, 604, 400,
	389, 341, 834, 835, 287, 314, 911, 910, 909, 313,
	315, 907, 908, 906, 213, 619, 637, 0, 214, 0,
	509, 622, 664, 461, 218, 240, 241, 243, 0, 286,
	290, 298, 301, 310, 311, 320, 374, 427, 455, 451,
	460, 0, 589, 613, 627, 639, 645, 646, 648, 649,
	650, 651, 652, 655, 653, 415, 318, 505, 340, 380,
	0, 0, 433, 482, 246, 617, 506, 917, 939, 928,
	792, 793, 918, 919, 943, 920, 795, 796, 940, 941,
	789, 790, 794, 942, 944, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 660, 518, 524, 519, 520, 521, 522,
	523, 0, 525, 931, 778, 777, 0, 784, 785, 0,
	814, 815, 817, 823, 824, 825, 836, 883, 884, 892,
	894, 895, 893, 896, 897, 898, 901, 902, 903, 904,
	899, 900, 905, 797, 801, 798, 799, 800, 812, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 813,
	954, 955, 956, 957, 958, 959, 829, 833, 832, 830,
	831, 827, 828, 855, 854, 856, 857, 858, 859, 860,
	861, 863, 862, 864, 865, 866, 867, 868, 869, 837,
	838, 841, 842, 840, 839, 843, 852, 853, 844, 845,
	846, 847, 848, 849, 851, 850, 870, 871, 872, 873,
	874, 876, 875, 879, 880, 878, 877, 882, 881, 776,
	202, 227, 375, 0, 464, 295, 661, 629, 494, 624,
	212, 229, 945, 269, 946, 0, 0, 950, 0, 0,
	0, 952, 951, 0, 953, 915, 914, 0, 0, 947,
	948, 0, 949, 0, 0, 204, 206, 215, 228, 238,
	242, 249, 268, 283, 285, 292, 305, 317, 325, 326,
	329, 335, 387, 394, 395, 396, 397, 417, 418, 419,
	422, 425, 426, 429, 431, 432, 435, 440, 444, 445,
	446, 448, 450, 452, 465, 470, 484, 485, 486, 487,
	488, 491, 492, 498, 499, 500, 501, 502, 510, 511,
	526, 597, 599, 616, 636, 643, 490, 392, 438, 462,
	590, 0, 0, 960, 961, 962, 963, 964, 965, 966,
	967, 307, 611, 644, 608, 656, 638, 447, 385, 0,
	0, 388, 288, 312, 327, 0, 628, 512, 233, 476,
	297, 257, 1035, 0, 217, 252, 236, 266, 281, 284,
	331, 399, 408, 437, 443, 303, 278, 250, 469, 247,
	495, 529, 530, 531, 533, 403, 273, 442, 404, 0,
	383, 586, 587, 323, 0, 0, 0, 538, 0, 788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 0, 775, 0, 0, 0, 277, 780, 0,
	0, 0, 373, 274, 0, 0, 210, 515, 0, 439,
	0, 209, 0, 497, 259, 384, 381, 594, 289, 280,
	276, 256, 324, 393, 436, 528, 430, 787, 377, 0,
	0, 507, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 782, 783, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 254, 332, 208, 421, 508, 293, 0, 98,
	0, 0, 1036, 517, 970, 759, 936, 974, 1037, 988,
	989, 990, 975, 0, 244, 976, 977, 251, 978, 0,
	935, 818, 820, 819, 885, 886, 887, 888, 889, 890,
	891, 821, 822, 816, 983, 620, 991, 992, 0, 272,
	328, 279, 271, 591, 0, 0, 0, 0, 0, 0,
	607, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 755, 772, 0, 786, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 769, 770, 0, 0,
	0, 0, 930, 0, 771, 0, 0, 779, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	3211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 929, 0, 0,
	640, 0, 0, 927, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 980, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 981, 982, 263, 663, 826, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 834, 835, 287, 314, 911, 910, 909, 313, 315,
	907, 908, 906, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 917, 939, 928, 792,
	793, 918, 919, 943, 920, 795, 796, 940, 941, 789,
	790, 794, 942, 944, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 931, 778, 777, 0, 784, 785, 0, 814,
	815, 817, 823, 824, 825, 836, 883, 884, 892, 894,
	895, 893, 896, 897, 898, 901, 902, 903, 904, 899,
	900, 905, 797, 801, 798, 799, 800, 812, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 813, 954,
	955, 956, 957, 958, 959, 829, 833, 832, 830, 831,
	827, 828, 855, 854, 856, 857, 858, 859, 860, 861,
	863, 862, 864, 865, 866, 867, 868, 869, 837, 838,
	841, 842, 840, 839, 843, 852, 853, 844, 845, 846,
	847, 848, 849, 851, 850, 870, 871, 872, 873, 874,
	876, 875, 879, 880, 878, 877, 882, 881, 776, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 945, 269, 946, 0, 0, 950, 0, 0, 0,
	952, 951, 0, 953, 915, 914, 0, 0, 947, 948,
	0, 949, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 960, 961, 962, 963, 964, 965, 966, 967,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 1035, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 788, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 775, 0, 0, 0, 277, 780, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 787, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 783, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 98, 0,
	0, 1036, 517, 970, 759, 936, 974, 1037, 988, 989,
	990, 975, 0, 244, 976, 977, 251, 978, 0, 935,
	818, 820, 819, 885, 886, 887, 888, 889, 890, 891,
	821, 822, 816, 983, 620, 991, 992, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	755, 772, 0, 786, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 770, 0, 0, 0,
	0, 930, 0, 771, 0, 0, 779, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 3207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 410, 264, 0, 463, 929, 0, 0, 640,
	0, 0, 927, 0, 0, 0, 0, 372, 0, 337,
	203, 231, 0, 0, 420, 471, 483, 0, 0, 0,
	980, 0, 481, 434, 615, 239, 291, 468, 441, 479,
	449, 294, 0, 0, 480, 379, 596, 459, 612, 641,
	642, 270, 414, 626, 532, 634, 659, 232, 267, 428,
	516, 618, 504, 405, 592, 593, 336, 503, 302, 207,
	376, 647, 230, 489, 378, 248, 237, 598, 623, 306,
	258, 296, 466, 654, 219, 527, 609, 245, 493, 0,
	0, 662, 253, 514, 621, 610, 221, 605, 513, 401,
	333, 334, 220, 0, 467, 275, 300, 0, 0, 265,
	423, 981, 982, 263, 663, 826, 633, 226, 0, 632,
	416, 595, 606, 402, 390, 225, 604, 400, 389, 341,
	834, 835, 287, 314, 911, 910, 909, 313, 315, 907,
	908, 906, 213, 619, 637, 0, 214, 0, 509, 622,
	664, 461, 218, 240, 241, 243, 0, 286, 290, 298,
	301, 310, 311, 320, 374, 427, 455, 451, 460, 0,
	589, 613, 627, 639, 645, 646, 648, 649, 650, 651,
	652, 655, 653, 415, 318, 505, 340, 380, 0, 0,
	433, 482, 246, 617, 506, 917, 939, 928, 792, 793,
	918, 919, 943, 920, 795, 796, 940, 941, 789, 790,
	794, 942, 944, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 660, 518, 524, 519, 520, 521, 522, 523, 0,
	525, 931, 778, 777, 0, 784, 785, 0, 814, 815,
	817, 823, 824, 825, 836, 883, 884, 892, 894, 895,
	893, 896, 897, 898, 901, 902, 903, 904, 899, 900,
	905, 797, 801, 798, 799, 800, 812, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 813, 954, 955,
	956, 957, 958, 959, 829, 833, 832, 830, 831, 827,
	828, 855, 854, 856, 857, 858, 859, 860, 861, 863,
	862, 864, 865, 866, 867, 868, 869, 837, 838, 841,
	842, 840, 839, 843, 852, 853, 844, 845, 846, 847,
	848, 849, 851, 850, 870, 871, 872, 873, 874, 876,
	875, 879, 880, 878, 877, 882, 881, 776, 202, 227,
	375, 0, 464, 295, 661, 629, 494, 624, 212, 229,
	945, 269, 946, 0, 0, 950, 0, 0, 0, 952,
	951, 0, 953, 915, 914, 0, 0, 947, 948, 0,
	949, 0, 0, 204, 206, 215, 228, 238, 242, 249,
	268, 283, 285, 292, 305, 317, 325, 326, 329, 335,
	387, 394, 395, 396, 397, 417, 418, 419, 422, 425,
	426, 429, 431, 432, 435, 440, 444, 445, 446, 448,
	450, 452, 465, 470, 484, 485, 486, 487, 488, 491,
	492, 498, 499, 500, 501, 502, 510, 511, 526, 597,
	599, 616, 636, 643, 490, 392, 438, 462, 590, 0,
	0, 960, 961, 962, 963, 964, 965, 966, 967, 307,
	611, 644, 608, 656, 638, 447, 385, 0, 0, 388,
	288, 312, 327, 0, 628, 512, 233, 476, 297, 257,
	1035, 0, 217, 252, 236, 266, 281, 284, 331, 399,
	408, 437, 443, 303, 278, 250, 469, 247, 495, 529,
	530, 531, 533, 403, 273, 442, 404, 0, 383, 586,
	587, 323, 0, 0, 0, 538, 0, 788, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 0, 0,
	0, 775, 0, 0, 0, 277, 780, 0, 0, 0,
	373, 274, 0, 0, 210, 515, 0, 439, 0, 209,
	0, 497, 259, 384, 381, 594, 289, 280, 276, 256,
	324, 393, 436, 528, 430, 787, 377, 0, 0, 507,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 782,
	783, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	254, 332, 208, 421, 508, 293, 0, 98, 0, 0,
	1036, 517, 970, 1105, 936, 974, 1037, 988, 989, 990,
	975, 0, 244, 976, 977, 251, 978, 0, 935, 818,
	820, 819, 885, 886, 887, 888, 889, 890, 891, 821,
	822, 816, 983, 620, 991, 992, 0, 272, 328, 279,
	271, 591, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	772, 0, 786, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 770, 0, 0, 0, 0,
	930, 0, 771, 0, 0, 779, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 929, 0, 0, 640, 0,
	0, 927, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 980,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	981, 982, 263, 663, 826, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 834,
	835, 287, 314, 911, 910, 909, 313, 315, 907, 908,
	906, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 917, 939, 928, 792, 793, 918,
	919, 943, 920, 795, 796, 940, 941, 789, 790, 794,
	942, 944, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	931, 778, 777, 0, 784, 785, 0, 814, 815, 817,
	823, 824, 825, 836, 883, 884, 892, 894, 895, 893,
	896, 897, 898, 901, 902, 903, 904, 899, 900, 905,
	797, 801, 798, 799, 800, 812, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 813, 954, 955, 956,
	957, 958, 959, 829, 833, 832, 830, 831, 827, 828,
	855, 854, 856, 857, 858, 859, 860, 861, 863, 862,
	864, 865, 866, 867, 868, 869, 837, 838, 841, 842,
	840, 839, 843, 852, 853, 844, 845, 846, 847, 848,
	849, 851, 850, 870, 871, 872, 873, 874, 876, 875,
	879, 880, 878, 877, 882, 881, 776, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 945,
	269, 946, 0, 0, 950, 0, 0, 0, 952, 951,
	0, 953, 915, 914, 0, 0, 947, 948, 0, 949,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	960, 961, 962, 963, 964, 965, 966, 967, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 1035,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	775, 0, 0, 0, 277, 780, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 787, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 98, 0, 0, 1036,
	517, 970, 1105, 936, 974, 1037, 988, 989, 990, 975,
	0, 244, 976, 977, 251, 978, 0, 935, 818, 820,
	819, 885, 886, 887, 888, 889, 890, 891, 821, 822,
	816, 983, 620, 991, 992, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 786, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 770, 0, 0, 0, 0, 930,
	0, 771, 0, 0, 779, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 2147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 929, 0, 0, 640, 0, 0,
	927, 0, 0, 0, 0, 372, 0, 337, 203, 231,
	0, 0, 420, 471, 483, 0, 0, 0, 980, 0,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	0, 0, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 981,
	982, 263, 663, 826, 633, 226, 0, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 834, 835,
	287, 314, 911, 910, 909, 313, 315, 907, 908, 906,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 0, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 0, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 0, 0, 433, 482,
	246, 617, 506, 917, 939, 928, 792, 793, 918, 919,
	943, 920, 795, 796, 940, 941, 789, 790, 794, 942,
	944, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 931,
	778, 777, 0, 784, 785, 0, 814, 815, 817, 823,
	824, 825, 836, 883, 884, 892, 894, 895, 893, 896,
	897, 898, 901, 902, 903, 904, 899, 900, 905, 797,
	801, 798, 799, 800, 812, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 813, 954, 955, 956, 957,
	958, 959, 829, 833, 832, 830, 831, 827, 828, 855,
	854, 856, 857, 858, 859, 860, 861, 863, 862, 864,
	865, 866, 867, 868, 869, 837, 838, 841, 842, 840,
	839, 843, 852, 853, 844, 845, 846, 847, 848, 849,
	851, 850, 870, 871, 872, 873, 874, 876, 875, 879,
	880, 878, 877, 882, 881, 776, 202, 227, 375, 0,
	464, 295, 661, 629, 494, 624, 212, 229, 945, 269,
	946, 0, 0, 950, 0, 0, 0, 952, 951, 0,
	953, 915, 914, 0, 0, 947, 948, 0, 949, 0,
	0, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 0, 0, 960,
	961, 962, 963, 964, 965, 966, 967, 307, 611, 644,
	608, 656, 638, 447, 385, 0, 0, 388, 288, 312,
	327, 0, 628, 512, 233, 476, 297, 257, 1035, 0,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 404, 0, 383, 586, 587, 323,
	0, 0, 0, 538, 0, 788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 775,
	0, 0, 0, 277, 780, 0, 0, 0, 373, 274,
	0, 0, 210, 515, 0, 439, 0, 209, 0, 497,
	259, 384, 381, 594, 289, 280, 276, 256, 324, 393,
	436, 528, 430, 787, 377, 0, 0, 507, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 782, 783, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 254, 332,
	208, 421, 508, 293, 0, 98, 0, 0, 1036, 517,
	970, 1105, 936, 974, 1037, 988, 989, 990, 975, 0,
	244, 976, 977, 251, 978, 0, 935, 818, 820, 819,
	885, 886, 887, 888, 889, 890, 891, 821, 822, 816,
	983, 620, 991, 992, 0, 272, 328, 279, 271, 591,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 772, 0,
	786, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 770, 0, 0, 0, 0, 930, 0,
	771, 0, 0, 779, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 2145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 929, 0, 0, 640, 0, 0, 927,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 980, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 981, 982,
	263, 663, 826, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 834, 835, 287,
	314, 911, 910, 909, 313, 315, 907, 908, 906, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 917, 939, 928, 792, 793, 918, 919, 943,
	920, 795, 796, 940, 941, 789, 790, 794, 942, 944,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 931, 778,
	777, 0, 784, 785, 0, 814, 815, 817, 823, 824,
	825, 836, 883, 884, 892, 894, 895, 893, 896, 897,
	898, 901, 902, 903, 904, 899, 900, 905, 797, 801,
	798, 799, 800, 812, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 813, 954, 955, 956, 957, 958,
	959, 829, 833, 832, 830, 831, 827, 828, 855, 854,
	856, 857, 858, 859, 860, 861, 863, 862, 864, 865,
	866, 867, 868, 869, 837, 838, 841, 842, 840, 839,
	843, 852, 853, 844, 845, 846, 847, 848, 849, 851,
	850, 870, 871, 872, 873, 874, 876, 875, 879, 880,
	878, 877, 882, 881, 776, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 945, 269, 946,
	0, 0, 950, 0, 0, 0, 952, 951, 0, 953,
	915, 914, 0, 0, 947, 948, 0, 949, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 960, 961,
	962, 963, 964, 965, 966, 967, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 1035, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	1148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 410, 264,
	0, 463, 0, 0, 1147, 640, 0, 0, 0, 0,
	0, 1144, 1145, 372, 1113, 337, 203, 231, 1138, 1142,
	420, 471, 483, 0, 0, 0, 260, 0, 481, 434,
	615, 239, 291, 468, 441, 479, 449, 294, 0, 0,
	480, 379, 596, 459, 612, 641, 642, 270, 414, 626,
	532, 634, 659, 232, 267, 428, 516, 618, 504, 405,
	592, 593, 336, 503, 302, 207, 376, 647, 230, 489,
	378, 248, 237, 598, 623, 306, 258, 296, 466, 654,
	219, 527, 609, 245, 493, 0, 0, 662, 253, 514,
	621, 610, 221, 605, 513, 401, 333, 334, 220, 0,
	467, 275, 300, 0, 0, 265, 423, 600, 601, 263,
	663, 234, 633, 226, 0, 632, 416, 595, 606, 402,
	390, 225, 604, 400, 389, 341, 362, 363, 287, 314,
	456, 382, 457, 313, 315, 412, 411, 413, 213, 619,
	637, 0, 214, 0, 509, 622, 664, 461, 218, 240,
	241, 243, 0, 286, 290, 298, 301, 310, 311, 320,
	374, 427, 455, 451, 460, 0, 589, 613, 627, 639,
	645, 646, 648, 649, 650, 651, 652, 655, 653, 415,
	318, 505, 340, 380, 0, 0, 433, 482, 246, 617,
	506, 205, 0, 0, 0, 0, 261, 262, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 660, 518, 524,
	519, 520, 521, 522, 523, 0, 525, 0, 0, 0,
	0, 0, 406, 0, 602, 603, 683, 391, 496, 614,
	342, 356, 359, 348, 368, 0, 369, 344, 345, 350,
	353, 354, 355, 360, 361, 365, 371, 255, 216, 398,
	407, 588, 319, 222, 223, 224, 534, 535, 536, 537,
	630, 631, 635, 211, 472, 473, 474, 475, 299, 625,
	316, 478, 477, 338, 339, 386, 458, 550, 552, 563,
	567, 569, 571, 577, 580, 551, 553, 564, 568, 570,
	572, 578, 581, 540, 542, 544, 546, 559, 558, 555,
	583, 584, 561, 566, 545, 557, 562, 575, 582, 579,
	539, 543, 547, 556, 574, 573, 554, 565, 576, 560,
	548, 541, 549, 0, 202, 227, 375, 0, 464, 295,
	661, 629, 494, 624, 212, 229, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	206, 215, 228, 238, 242, 249, 268, 283, 285, 292,
	305, 317, 325, 326, 329, 335, 387, 394, 395, 396,
	397, 417, 418, 419, 422, 425, 426, 429, 431, 432,
	435, 440, 444, 445, 446, 448, 450, 452, 465, 470,
	484, 485, 486, 487, 488, 491, 492, 498, 499, 500,
	501, 502, 510, 511, 526, 597, 599, 616, 636, 643,
	490, 392, 438, 462, 590, 0, 0, 308, 309, 453,
	454, 321, 322, 657, 658, 307, 611, 644, 608, 656,
	638, 447, 385, 0, 0, 388, 288, 312, 327, 0,
	628, 512, 233, 476, 297, 257, 0, 0, 217, 252,
	236, 266, 281, 284, 331, 399, 408, 437, 443, 303,
	278, 250, 469, 247, 495, 529, 530, 531, 533, 403,
	273, 442, 404, 0, 383, 586, 587, 323, 0, 0,
	88, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 373, 274, 0, 0,
	210, 515, 0, 439, 0, 209, 0, 497, 259, 384,
	381, 594, 289, 280, 276, 256, 324, 393, 436, 528,
	430, 100, 377, 0, 0, 507, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 254, 332, 208, 421,
	508, 293, 0, 98, 0, 0, 0, 517, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 251, 0, 0, 0, 358, 367, 366, 346, 347,
	349, 351, 357, 364, 370, 343, 352, 0, 0, 620,
	0, 0, 0, 272, 328, 279, 271, 591, 0, 0,
	0, 0, 0, 0, 607, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 97, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 2464, 0, 0, 2463, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 88,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	100, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 98, 0, 1768, 0, 517, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 410, 264, 0, 463,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 337, 203, 231, 0, 0, 420, 471,
	483, 0, 0, 0, 260, 0, 481, 434, 615, 239,
	291, 468, 441, 479, 449, 294, 0, 0, 480, 379,
	596, 459, 612, 641, 642, 270, 414, 626, 532, 634,
	659, 232, 267, 428, 516, 618, 504, 405, 592, 593,
	336, 503, 302, 207, 376, 647, 230, 489, 378, 248,
	237, 598, 623, 306, 258, 296, 466, 654, 219, 527,
	609, 245, 493, 0, 0, 662, 253, 514, 621, 610,
	221, 605, 513, 401, 333, 334, 220, 0, 467, 275,
	300, 0, 0, 265, 423, 600, 601, 263, 663, 234,
	633, 226, 0, 632, 416, 595, 606, 402, 390, 225,
	604, 400, 389, 341, 362, 363, 287, 314, 456, 382,
	457, 313, 315, 412, 411, 413, 213, 619, 637, 0,
	214, 0, 509, 622, 664, 461, 218, 240, 241, 243,
	0, 286, 290, 298, 301, 310, 311, 320, 374, 427,
	455, 451, 460, 0, 589, 613, 627, 639, 645, 646,
	648, 649, 650, 651, 652, 655, 653, 415, 318, 505,
	340, 380, 0, 0, 433, 482, 246, 617, 506, 205,
	0, 0, 0, 0, 261, 262, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 660, 518, 524, 519, 520,
	521, 522, 523, 0, 525, 0, 0, 0, 0, 0,
	406, 0, 602, 603, 683, 391, 496, 614, 342, 356,
	359, 348, 368, 0, 369, 344, 345, 350, 353, 354,
	355, 360, 361, 365, 371, 255, 216, 398, 407, 588,
	319, 222, 223, 224, 534, 535, 536, 537, 630, 631,
	635, 211, 472, 473, 474, 475, 299, 625, 316, 478,
	477, 338, 339, 386, 458, 550, 552, 563, 567, 569,
	571, 577, 580, 551, 553, 564, 568, 570, 572, 578,
	581, 540, 542, 544, 546, 559, 558, 555, 583, 584,
	561, 566, 545, 557, 562, 575, 582, 579, 539, 543,
	547, 556, 574, 573, 554, 565, 576, 560, 548, 541,
	549, 0, 202, 227, 375, 97, 464, 295, 661, 629,
	494, 624, 212, 229, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 206, 215,
	228, 238, 242, 249, 268, 283, 285, 292, 305, 317,
	325, 326, 329, 335, 387, 394, 395, 396, 397, 417,
	418, 419, 422, 425, 426, 429, 431, 432, 435, 440,
	444, 445, 446, 448, 450, 452, 465, 470, 484, 485,
	486, 487, 488, 491, 492, 498, 499, 500, 501, 502,
	510, 511, 526, 597, 599, 616, 636, 643, 490, 392,
	438, 462, 590, 0, 0, 308, 309, 453, 454, 321,
	322, 657, 658, 307, 611, 644, 608, 656, 638, 447,
	385, 0, 0, 388, 288, 312, 327, 0, 628, 512,
	233, 476, 297, 257, 0, 0, 217, 252, 236, 266,
	281, 284, 331, 399, 408, 437, 443, 303, 278, 250,
	469, 247, 495, 529, 530, 531, 533, 403, 273, 442,
	1807, 0, 383, 586, 587, 323, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 1809, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 373, 274, 0, 0, 210, 515,
	0, 439, 0, 209, 0, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 0,
	377, 0, 0, 507, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 254, 332, 208, 421, 508, 293,
	0, 0, 0, 0, 1811, 517, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 358, 367, 366, 346, 347, 349, 351,
	357, 364, 370, 343, 352, 0, 0, 620, 0, 0,
	0, 272, 328, 279, 271, 591, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 235, 0, 0, 0, 1493,
	0, 1494, 1495, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	98, 0, 0, 0, 517, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 410, 264, 0, 463, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 337, 203, 231, 0, 0, 420, 471, 483, 0,
	0, 0, 260, 0, 481, 434, 615, 239, 291, 468,
	441, 479, 449, 294, 0, 0, 480, 379, 596, 459,
	612, 641, 642, 270, 414, 626, 532, 634, 659, 232,
	267, 428, 516, 618, 504, 405, 592, 593, 336, 503,
	302, 207, 376, 647, 230, 489, 378, 248, 237, 598,
	623, 306, 258, 296, 466, 654, 219, 527, 609, 245,
	493, 0, 0, 662, 253, 514, 621, 610, 221, 605,
	513, 401, 333, 334, 220, 0, 467, 275, 300, 0,
	0, 265, 423, 600, 601, 263, 663, 234, 633, 226,
	0, 632, 416, 595, 606, 402, 390, 225, 604, 400,
	389, 341, 362, 363, 287, 314, 456, 382, 457, 313,
	315, 412, 411, 413, 213, 619, 637, 0, 214, 0,
	509, 622, 664, 461, 218, 240, 241, 243, 0, 286,
	290, 298, 301, 310, 311, 320, 374, 427, 455, 451,
	460, 0, 589, 613, 627, 639, 645, 646, 648, 649,
	650, 651, 652, 655, 653, 415, 318, 505, 340, 380,
	0, 0, 433, 482, 246, 617, 506, 205, 0, 0,
	0, 0, 261, 262, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 660, 518, 524, 519, 520, 521, 522,
	523, 0, 525, 0, 0, 0, 0, 0, 406, 0,
	602, 603, 683, 391, 496, 614, 342, 356, 359, 348,
	368, 0, 369, 344, 345, 350, 353, 354, 355, 360,
	361, 365, 371, 255, 216, 398, 407, 588, 319, 222,
	223, 224, 534, 535, 536, 537, 630, 631, 635, 211,
	472, 473, 474, 475, 299, 625, 316, 478, 477, 338,
	339, 386, 458, 550, 552, 563, 567, 569, 571, 577,
	580, 551, 553, 564, 568, 570, 572, 578, 581, 540,
	542, 544, 546, 559, 558, 555, 583, 584, 561, 566,
	545, 557, 562, 575, 582, 579, 539, 543, 547, 556,
	574, 573, 554, 565, 576, 560, 548, 541, 549, 0,
	202, 227, 375, 0, 464, 295, 661, 629, 494, 624,
	212, 229, 0, 269, 0, 0, 0, 0, 0, 0,
	2464, 0, 0, 2463, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 206, 215, 228, 238,
	242, 249, 268, 283, 285, 292, 305, 317, 325, 326,
	329, 335, 387, 394, 395, 396, 397, 417, 418, 419,
	422, 425, 426, 429, 431, 432, 435, 440, 444, 445,
	446, 448, 450, 452, 465, 470, 484, 485, 486, 487,
	488, 491, 492, 498, 499, 500, 501, 502, 510, 511,
	526, 597, 599, 616, 636, 643, 490, 392, 438, 462,
	590, 0, 0, 308, 309, 453, 454, 321, 322, 657,
	658, 307, 611, 644, 608, 656, 638, 447, 385, 0,
	0, 388, 288, 312, 327, 0, 628, 512, 233, 476,
	297, 257, 0, 0, 217, 252, 236, 266, 281, 284,
	331, 399, 408, 437, 443, 303, 278, 250, 469, 247,
	495, 529, 530, 531, 533, 403, 273, 442, 404, 0,
	383, 586, 587, 323, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 2397, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 373, 274, 0, 0, 210, 515, 0, 439,
	0, 209, 0, 497, 259, 384, 381, 594, 289, 280,
	276, 256, 324, 393, 436, 528, 430, 0, 377, 0,
	0, 507, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 254, 332, 208, 421, 508, 293, 0, 0,
	0, 0, 1986, 517, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 358, 367, 366, 346, 347, 349, 351, 357, 364,
	370, 343, 352, 0, 0, 620, 0, 0, 0, 272,
	328, 279, 271, 591, 0, 0, 0, 0, 0, 0,
	607, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 2395, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 410, 264, 0, 463, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 0, 0, 372, 1113, 337,
	203, 231, 1111, 0, 420, 471, 483, 0, 0, 0,
	260, 0, 481, 434, 615, 239, 291, 468, 441, 479,
	449, 294, 0, 0, 480, 379, 596, 459, 612, 641,
	642, 270, 414, 626, 532, 634, 659, 232, 267, 428,
	516, 618, 504, 405, 592, 593, 336, 503, 302, 207,
	376, 647, 230, 489, 378, 248, 237, 598, 623, 306,
	258, 296, 466, 654, 219, 527, 609, 245, 493, 0,
	0, 662, 253, 514, 621, 610, 221, 605, 513, 401,
	333, 334, 220, 0, 467, 275, 300, 0, 0, 265,
	423, 600, 601, 263, 663, 234, 633, 226, 0, 632,
	416, 595, 606, 402, 390, 225, 604, 400, 389, 341,
	362, 363, 287, 314, 456, 382, 457, 313, 315, 412,
	411, 413, 213, 619, 637, 0, 214, 0, 509, 622,
	664, 461, 218, 240, 241, 243, 0, 286, 290, 298,
	301, 310, 311, 320, 374, 427, 455, 451, 460, 0,
	589, 613, 627, 639, 645, 646, 648, 649, 650, 651,
	652, 655, 653, 415, 318, 505, 340, 380, 0, 0,
	433, 482, 246, 617, 506, 205, 0, 0, 0, 0,
	261, 262, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 660, 518, 524, 519, 520, 521, 522, 523, 0,
	525, 0, 0, 0, 0, 0, 406, 0, 602, 603,
	683, 391, 496, 614, 342, 356, 359, 348, 368, 0,
	369, 344, 345, 350, 353, 354, 355, 360, 361, 365,
	371, 255, 216, 398, 407, 588, 319, 222, 223, 224,
	534, 535, 536, 537, 630, 631, 635, 211, 472, 473,
	474, 475, 299, 625, 316, 478, 477, 338, 339, 386,
	458, 550, 552, 563, 567, 569, 571, 577, 580, 551,
	553, 564, 568, 570, 572, 578, 581, 540, 542, 544,
	546, 559, 558, 555, 583, 584, 561, 566, 545, 557,
	562, 575, 582, 579, 539, 543, 547, 556, 574, 573,
	554, 565, 576, 560, 548, 541, 549, 0, 202, 227,
	375, 0, 464, 295, 661, 629, 494, 624, 212, 229,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 206, 215, 228, 238, 242, 249,
	268, 283, 285, 292, 305, 317, 325, 326, 329, 335,
	387, 394, 395, 396, 397, 417, 418, 419, 422, 425,
	426, 429, 431, 432, 435, 440, 444, 445, 446, 448,
	450, 452, 465, 470, 484, 485, 486, 487, 488, 491,
	492, 498, 499, 500, 501, 502, 510, 511, 526, 597,
	599, 616, 636, 643, 490, 392, 438, 462, 590, 0,
	0, 308, 309, 453, 454, 321, 322, 657, 658, 307,
	611, 644, 608, 656, 638, 447, 385, 0, 0, 388,
	288, 312, 327, 0, 628, 512, 233, 476, 297, 257,
	0, 0, 217, 252, 236, 266, 281, 284, 331, 399,
	408, 437, 443, 303, 278, 250, 469, 247, 495, 529,
	530, 531, 533, 403, 273, 442, 404, 0, 383, 586,
	587, 323, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 0, 0,
	2397, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	373, 274, 0, 0, 210, 515, 0, 439, 0, 209,
	0, 497, 259, 384, 381, 594, 289, 280, 276, 256,
	324, 393, 436, 528, 430, 0, 377, 0, 0, 507,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	254, 332, 208, 421, 508, 293, 0, 0, 0, 0,
	1986, 517, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 358,
	367, 366, 346, 347, 349, 351, 357, 364, 370, 343,
	352, 0, 0, 620, 0, 0, 0, 272, 328, 279,
	271, 591, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 1768, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 640, 0, 0,
	0, 3776, 0, 0, 0, 372, 0, 337, 203, 231,
	0, 0, 420, 471, 483, 0, 0, 0, 260, 0,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	0, 0, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 600,
	601, 263, 663, 234, 633, 226, 0, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 362, 363,
	287, 314, 456, 382, 457, 313, 315, 412, 411, 413,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 0, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 0, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 0, 0, 433, 482,
	246, 617, 506, 205, 0, 0, 0, 0, 261, 262,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 0,
	0, 0, 0, 0, 406, 0, 602, 603, 683, 391,
	496, 614, 342, 356, 359, 348, 368, 0, 369, 344,
	345, 350, 353, 354, 355, 360, 361, 365, 371, 255,
	216, 398, 407, 588, 319, 222, 223, 224, 534, 535,
	536, 537, 630, 631, 635, 211, 472, 473, 474, 475,
	299, 625, 316, 478, 477, 338, 339, 386, 458, 550,
	552, 563, 567, 569, 571, 577, 580, 551, 553, 564,
	568, 570, 572, 578, 581, 540, 542, 544, 546, 559,
	558, 555, 583, 584, 561, 566, 545, 557, 562, 575,
	582, 579, 539, 543, 547, 556, 574, 573, 554, 565,
	576, 560, 548, 541, 549, 0, 202, 227, 375, 0,
	464, 295, 661, 629, 494, 624, 212, 229, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 0, 0, 308,
	309, 453, 454, 321, 322, 657, 658, 307, 611, 644,
	608, 656, 638, 447, 385, 0, 0, 388, 288, 312,
	327, 0, 628, 512, 233, 476, 297, 257, 0, 0,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 404, 0, 383, 586, 587, 323,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 373, 274,
	0, 0, 210, 515, 0, 439, 0, 209, 0, 497,
	259, 384, 381, 594, 289, 280, 276, 256, 324, 393,
	436, 528, 430, 0, 377, 0, 0, 507, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 254, 332,
	208, 421, 508, 293, 0, 0, 0, 0, 2156, 517,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 251, 0, 0, 0, 358, 367, 366,
	346, 347, 349, 351, 357, 364, 370, 343, 352, 0,
	0, 620, 0, 0, 0, 272, 328, 279, 271, 591,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 2928, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 410, 264,
	0, 463, 0, 0, 0, 640, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 337, 203, 231, 0, 0,
	420, 471, 483, 0, 0, 0, 260, 0, 481, 434,
	615, 239, 291, 468, 441, 479, 449, 294, 0, 0,
	480, 379, 596, 459, 612, 641, 642, 270, 414, 626,
	532, 634, 659, 232, 267, 428, 516, 618, 504, 405,
	592, 593, 336, 503, 302, 207, 376, 647, 230, 489,
	378, 248, 237, 598, 623, 306, 258, 296, 466, 654,
	219, 527, 609, 245, 493, 0, 0, 662, 253, 514,
	621, 610, 221, 605, 513, 401, 333, 334, 220, 0,
	467, 275, 300, 0, 0, 265, 423, 600, 601, 263,
	663, 234, 633, 226, 0, 632, 416, 595, 606, 402,
	390, 225, 604, 400, 389, 341, 362, 363, 287, 314,
	456, 382, 457, 313, 315, 412, 411, 413, 213, 619,
	637, 0, 214, 0, 509, 622, 664, 461, 218, 240,
	241, 243, 0, 286, 290, 298, 301, 310, 311, 320,
	374, 427, 455, 451, 460, 0, 589, 613, 627, 639,
	645, 646, 648, 649, 650, 651, 652, 655, 653, 415,
	318, 505, 340, 380, 0, 0, 433, 482, 246, 617,
	506, 205, 0, 0, 0, 0, 261, 262, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 660, 518, 524,
	519, 520, 521, 522, 523, 0, 525, 0, 0, 0,
	0, 0, 406, 0, 602, 603, 683, 391, 496, 614,
	342, 356, 359, 348, 368, 0, 369, 344, 345, 350,
	353, 354, 355, 360, 361, 365, 371, 255, 216, 398,
	407, 588, 319, 222, 223, 224, 534, 535, 536, 537,
	630, 631, 635, 211, 472, 473, 474, 475, 299, 625,
	316, 478, 477, 338, 339, 386, 458, 550, 552, 563,
	567, 569, 571, 577, 580, 551, 553, 564, 568, 570,
	572, 578, 581, 540, 542, 544, 546, 559, 558, 555,
	583, 584, 561, 566, 545, 557, 562, 575, 582, 579,
	539, 543, 547, 556, 574, 573, 554, 565, 576, 560,
	548, 541, 549, 0, 202, 227, 375, 0, 464, 295,
	661, 629, 494, 624, 212, 229, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	206, 215, 228, 238, 242, 249, 268, 283, 285, 292,
	305, 317, 325, 326, 329, 335, 387, 394, 395, 396,
	397, 417, 418, 419, 422, 425, 426, 429, 431, 432,
	435, 440, 444, 445, 446, 448, 450, 452, 465, 470,
	484, 485, 486, 487, 488, 491, 492, 498, 499, 500,
	501, 502, 510, 511, 526, 597, 599, 616, 636, 643,
	490, 392, 438, 462, 590, 0, 0, 308, 309, 453,
	454, 321, 322, 657, 658, 307, 611, 644, 608, 656,
	638, 447, 385, 0, 0, 388, 288, 312, 327, 0,
	628, 512, 233, 476, 297, 257, 0, 0, 217, 252,
	236, 266, 281, 284, 331, 399, 408, 437, 443, 303,
	278, 250, 469, 247, 495, 529, 530, 531, 533, 403,
	273, 442, 404, 0, 383, 586, 587, 323, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 373, 274, 0, 0,
	210, 515, 0, 439, 0, 209, 0, 497, 259, 384,
	381, 594, 289, 280, 276, 256, 324, 393, 436, 528,
	430, 0, 377, 0, 0, 507, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 254, 332, 208, 421,
	508, 293, 0, 0, 0, 0, 0, 517, 735, 0,
	0, 0, 0, 2895, 0, 0, 0, 0, 244, 0,
	0, 251, 2896, 0, 0, 358, 367, 366, 346, 347,
	349, 351, 357, 364, 370, 343, 352, 0, 0, 620,
	0, 0, 0, 272, 328, 279, 271, 591, 0, 0,
	0, 0, 0, 0, 607, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 1830, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 1829, 517, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 410, 264, 0, 463,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 337, 203, 231, 0, 0, 420, 471,
	483, 0, 0, 0, 260, 0, 481, 434, 615, 239,
	291, 468, 441, 479, 449, 294, 0, 0, 480, 379,
	596, 459, 612, 641, 642, 270, 414, 626, 532, 634,
	659, 232, 267, 428, 516, 618, 504, 405, 592, 593,
	336, 503, 302, 207, 376, 647, 230, 489, 378, 248,
	237, 598, 623, 306, 258, 296, 466, 654, 219, 527,
	609, 245, 493, 0, 0, 662, 253, 514, 621, 610,
	221, 605, 513, 401, 333, 334, 220, 0, 467, 275,
	300, 0, 0, 265, 423, 600, 601, 263, 663, 234,
	633, 226, 0, 632, 416, 595, 606, 402, 390, 225,
	604, 400, 389, 341, 362, 363, 287, 314, 456, 382,
	457, 313, 315, 412, 411, 413, 213, 619, 637, 0,
	214, 0, 509, 622, 664, 461, 218, 240, 241, 243,
	0, 286, 290, 298, 301, 310, 311, 320, 374, 427,
	455, 451, 460, 0, 589, 613, 627, 639, 645, 646,
	648, 649, 650, 651, 652, 655, 653, 415, 318, 505,
	340, 380, 0, 0, 433, 482, 246, 617, 506, 205,
	0, 0, 0, 0, 261, 262, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 660, 518, 524, 519, 520,
	521, 522, 523, 0, 525, 0, 0, 0, 0, 0,
	406, 0, 602, 603, 683, 391, 496, 614, 342, 356,
	359, 348, 368, 0, 369, 344, 345, 350, 353, 354,
	355, 360, 361, 365, 371, 255, 216, 398, 407, 588,
	319, 222, 223, 224, 534, 535, 536, 537, 630, 631,
	635, 211, 472, 473, 474, 475, 299, 625, 316, 478,
	477, 338, 339, 386, 458, 550, 552, 563, 567, 569,
	571, 577, 580, 551, 553, 564, 568, 570, 572, 578,
	581, 540, 542, 544, 546, 559, 558, 555, 583, 584,
	561, 566, 545, 557, 562, 575, 582, 579, 539, 543,
	547, 556, 574, 573, 554, 565, 576, 560, 548, 541,
	549, 0, 202, 227, 375, 0, 464, 295, 661, 629,
	494, 624, 212, 229, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 206, 215,
	228, 238, 242, 249, 268, 283, 285, 292, 305, 317,
	325, 326, 329, 335, 387, 394, 395, 396, 397, 417,
	418, 419, 422, 425, 426, 429, 431, 432, 435, 440,
	444, 445, 446, 448, 450, 452, 465, 470, 484, 485,
	486, 487, 488, 491, 492, 498, 499, 500, 501, 502,
	510, 511, 526, 597, 599, 616, 636, 643, 490, 392,
	438, 462, 590, 0, 0, 308, 309, 453, 454, 321,
	322, 657, 658, 307, 611, 644, 608, 656, 638, 447,
	385, 0, 0, 388, 288, 312, 327, 0, 628, 512,
	233, 476, 297, 257, 0, 0, 217, 252, 236, 266,
	281, 284, 331, 399, 408, 437, 443, 303, 278, 250,
	469, 247, 495, 529, 530, 531, 533, 403, 273, 442,
	404, 0, 383, 586, 587, 323, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 373, 274, 0, 0, 210, 515,
	0, 439, 0, 209, 0, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 0,
	377, 0, 0, 507, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 254, 332, 208, 421, 508, 293,
	0, 0, 0, 0, 0, 517, 737, 738, 739, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 358, 367, 366, 346, 347, 349, 351,
	357, 364, 370, 343, 352, 0, 0, 620, 0, 0,
	0, 272, 328, 279, 271, 591, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 410, 264, 0, 463, 0, 0,
	0, 640, 0, 0, 0, 4131, 0, 0, 0, 372,
	0, 337, 203, 231, 0, 0, 420, 471, 483, 0,
	0, 0, 260, 0, 481, 434, 615, 239, 291, 468,
	441, 479, 449, 294, 0, 0, 480, 379, 596, 459,
	612, 641, 642, 270, 414, 626, 532, 634, 659, 232,
	267, 428, 516, 618, 504, 405, 592, 593, 336, 503,
	302, 207, 376, 647, 230, 489, 378, 248, 237, 598,
	623, 306, 258, 296, 466, 654, 219, 527, 609, 245,
	493, 0, 0, 662, 253, 514, 621, 610, 221, 605,
	513, 401, 333, 334, 220, 0, 467, 275, 300, 0,
	0, 265, 423, 600, 601, 263, 663, 234, 633, 226,
	0, 632, 416, 595, 606, 402, 390, 225, 604, 400,
	389, 341, 362, 363, 287, 314, 456, 382, 457, 313,
	315, 412, 411, 413, 213, 619, 637, 0, 214, 0,
	509, 622, 664, 461, 218, 240, 241, 243, 0, 286,
	290, 298, 301, 310, 311, 320, 374, 427, 455, 451,
	460, 0, 589, 613, 627, 639, 645, 646, 648, 649,
	650, 651, 652, 655, 653, 415, 318, 505, 340, 380,
	0, 0, 433, 482, 246, 617, 506, 205, 0, 0,
	0, 0, 261, 262, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 660, 518, 524, 519, 520, 521, 522,
	523, 0, 525, 0, 0, 0, 0, 0, 406, 0,
	602, 603, 683, 391, 496, 614, 342, 356, 359, 348,
	368, 0, 369, 344, 345, 350, 353, 354, 355, 360,
	361, 365, 371, 255, 216, 398, 407, 588, 319, 222,
	223, 224, 534, 535, 536, 537, 630, 631, 635, 211,
	472, 473, 474, 475, 299, 625, 316, 478, 477, 338,
	339, 386, 458, 550, 552, 563, 567, 569, 571, 577,
	580, 551, 553, 564, 568, 570, 572, 578, 581, 540,
	542, 544, 546, 559, 558, 555, 583, 584, 561, 566,
	545, 557, 562, 575, 582, 579, 539, 543, 547, 556,
	574, 573, 554, 565, 576, 560, 548, 541, 549, 0,
	202, 227, 375, 0, 464, 295, 661, 629, 494, 624,
	212, 229, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 206, 215, 228, 238,
	242, 249, 268, 283, 285, 292, 305, 317, 325, 326,
	329, 335, 387, 394, 395, 396, 397, 417, 418, 419,
	422, 425, 426, 429, 431, 432, 435, 440, 444, 445,
	446, 448, 450, 452, 465, 470, 484, 485, 486, 487,
	488, 491, 492, 498, 499, 500, 501, 502, 510, 511,
	526, 597, 599, 616, 636, 643, 490, 392, 438, 462,
	590, 0, 0, 308, 309, 453, 454, 321, 322, 657,
	658, 307, 611, 644, 608, 656, 638, 447, 385, 0,
	0, 388, 288, 312, 327, 0, 628, 512, 233, 476,
	297, 257, 0, 0, 217, 252, 236, 266, 281, 284,
	331, 399, 408, 437, 443, 303, 278, 250, 469, 247,
	495, 529, 530, 531, 533, 403, 273, 442, 404, 0,
	383, 586, 587, 323, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 373, 274, 0, 0, 210, 515, 0, 439,
	0, 209, 0, 497, 259, 384, 381, 594, 289, 280,
	276, 256, 324, 393, 436, 528, 430, 0, 377, 0,
	0, 507, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 254, 332, 208, 421, 508, 293, 0, 0,
	0, 0, 1986, 517, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 358, 367, 366, 346, 347, 349, 351, 357, 364,
	370, 343, 352, 0, 0, 620, 0, 0, 0, 272,
	328, 279, 271, 591, 0, 0, 0, 0, 0, 0,
	607, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 410, 264, 0, 463, 0, 0, 0, 640,
	0, 0, 0, 3776, 0, 0, 0, 372, 0, 337,
	203, 231, 0, 0, 420, 471, 483, 0, 0, 0,
	260, 0, 481, 434, 615, 239, 291, 468, 441, 479,
	449, 294, 0, 0, 480, 379, 596, 459, 612, 641,
	642, 270, 414, 626, 532, 634, 659, 232, 267, 428,
	516, 618, 504, 405, 592, 593, 336, 503, 302, 207,
	376, 647, 230, 489, 378, 248, 237, 598, 623, 306,
	258, 296, 466, 654, 219, 527, 609, 245, 493, 0,
	0, 662, 253, 514, 621, 610, 221, 605, 513, 401,
	333, 334, 220, 0, 467, 275, 300, 0, 0, 265,
	423, 600, 601, 263, 663, 234, 633, 226, 0, 632,
	416, 595, 606, 402, 390, 225, 604, 400, 389, 341,
	362, 363, 287, 314, 456, 382, 457, 313, 315, 412,
	411, 413, 213, 619, 637, 0, 214, 0, 509, 622,
	664, 461, 218, 240, 241, 243, 0, 286, 290, 298,
	301, 310, 311, 320, 374, 427, 455, 451, 460, 0,
	589, 613, 627, 639, 645, 646, 648, 649, 650, 651,
	652, 655, 653, 415, 318, 505, 340, 380, 0, 0,
	433, 482, 246, 617, 506, 205, 0, 0, 0, 0,
	261, 262, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 660, 518, 524, 519, 520, 521, 522, 523, 0,
	525, 0, 0, 0, 0, 0, 406, 0, 602, 603,
	683, 391, 496, 614, 342, 356, 359, 348, 368, 0,
	369, 344, 345, 350, 353, 354, 355, 360, 361, 365,
	371, 255, 216, 398, 407, 588, 319, 222, 223, 224,
	534, 535, 536, 537, 630, 631, 635, 211, 472, 473,
	474, 475, 299, 625, 316, 478, 477, 338, 339, 386,
	458, 550, 552, 563, 567, 569, 571, 577, 580, 551,
	553, 564, 568, 570, 572, 578, 581, 540, 542, 544,
	546, 559, 558, 555, 583, 584, 561, 566, 545, 557,
	562, 575, 582, 579, 539, 543, 547, 556, 574, 573,
	554, 565, 576, 560, 548, 541, 549, 0, 202, 227,
	375, 0, 464, 295, 661, 629, 494, 624, 212, 229,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 206, 215, 228, 238, 242, 249,
	268, 283, 285, 292, 305, 317, 325, 326, 329, 335,
	387, 394, 395, 396, 397, 417, 418, 419, 422, 425,
	426, 429, 431, 432, 435, 440, 444, 445, 446, 448,
	450, 452, 465, 470, 484, 485, 486, 487, 488, 491,
	492, 498, 499, 500, 501, 502, 510, 511, 526, 597,
	599, 616, 636, 643, 490, 392, 438, 462, 590, 0,
	0, 308, 309, 453, 454, 321, 322, 657, 658, 307,
	611, 644, 608, 656, 638, 447, 385, 0, 0, 388,
	288, 312, 327, 0, 628, 512, 233, 476, 297, 257,
	0, 0, 217, 252, 236, 266, 281, 284, 331, 399,
	408, 437, 443, 303, 278, 250, 469, 247, 495, 529,
	530, 531, 533, 403, 273, 442, 404, 0, 383, 586,
	587, 323, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	373, 274, 0, 0, 210, 515, 0, 439, 0, 209,
	0, 497, 259, 384, 381, 594, 289, 280, 276, 256,
	324, 393, 436, 528, 430, 0, 377, 0, 0, 507,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	254, 332, 208, 421, 508, 293, 0, 98, 0, 0,
	0, 517, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 358,
	367, 366, 346, 347, 349, 351, 357, 364, 370, 343,
	352, 0, 0, 620, 0, 0, 0, 272, 328, 279,
	271, 591, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 2465,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 337, 203, 231,
	0, 0, 420, 471, 483, 0, 0, 0, 260, 0,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	0, 0, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 600,
	601, 263, 663, 234, 633, 226, 0, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 362, 363,
	287, 314, 456, 382, 457, 313, 315, 412, 411, 413,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 0, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 0, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 0, 0, 433, 482,
	246, 617, 506, 205, 0, 0, 0, 0, 261, 262,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 0,
	0, 0, 0, 0, 406, 0, 602, 603, 683, 391,
	496, 614, 342, 356, 359, 348, 368, 0, 369, 344,
	345, 350, 353, 354, 355, 360, 361, 365, 371, 255,
	216, 398, 407, 588, 319, 222, 223, 224, 534, 535,
	536, 537, 630, 631, 635, 211, 472, 473, 474, 475,
	299, 625, 316, 478, 477, 338, 339, 386, 458, 550,
	552, 563, 567, 569, 571, 577, 580, 551, 553, 564,
	568, 570, 572, 578, 581, 540, 542, 544, 546, 559,
	558, 555, 583, 584, 561, 566, 545, 557, 562, 575,
	582, 579, 539, 543, 547, 556, 574, 573, 554, 565,
	576, 560, 548, 541, 549, 0, 202, 227, 375, 0,
	464, 295, 661, 629, 494, 624, 212, 229, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 0, 0, 308,
	309, 453, 454, 321, 322, 657, 658, 307, 611, 644,
	608, 656, 638, 447, 385, 0, 0, 388, 288, 312,
	327, 0, 628, 512, 233, 476, 297, 257, 0, 0,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 404, 0, 383, 586, 587, 323,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 373, 274,
	0, 0, 210, 515, 0, 439, 0, 209, 0, 497,
	259, 384, 381, 594, 289, 280, 276, 256, 324, 393,
	436, 528, 430, 0, 377, 0, 0, 507, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 254, 332,
	208, 421, 508, 293, 0, 0, 0, 0, 1811, 517,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 251, 0, 0, 0, 358, 367, 366,
	346, 347, 349, 351, 357, 364, 370, 343, 352, 0,
	0, 620, 0, 0, 0, 272, 328, 279, 271, 591,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 0, 0, 0, 0, 517, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 410, 264,
	0, 463, 0, 0, 0, 640, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 337, 203, 231, 0, 0,
	420, 471, 483, 0, 0, 0, 260, 0, 481, 434,
	615, 239, 291, 468, 441, 479, 449, 294, 0, 0,
	480, 379, 596, 459, 612, 641, 642, 270, 414, 626,
	532, 634, 659, 232, 267, 428, 516, 618, 504, 405,
	592, 593, 336, 503, 302, 207, 376, 647, 230, 489,
	378, 248, 237, 598, 623, 306, 258, 296, 466, 654,
	219, 527, 609, 245, 493, 0, 0, 662, 253, 514,
	621, 610, 221, 605, 513, 401, 333, 334, 220, 0,
	467, 275, 300, 0, 0, 265, 423, 600, 601, 263,
	663, 234, 633, 226, 0, 632, 416, 595, 606, 402,
	390, 225, 604, 400, 389, 341, 362, 363, 287, 314,
	456, 382, 457, 313, 315, 412, 411, 413, 213, 619,
	637, 0, 214, 0, 509, 622, 664, 461, 218, 240,
	241, 243, 0, 286, 290, 298, 301, 310, 311, 320,
	374, 427, 455, 451, 460, 0, 589, 613, 627, 639,
	645, 646, 648, 649, 650, 651, 652, 655, 653, 415,
	318, 505, 340, 380, 0, 0, 433, 482, 246, 617,
	506, 205, 0, 0, 0, 0, 261, 262, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 660, 518, 524,
	519, 520, 521, 522, 523, 0, 525, 0, 0, 0,
	0, 0, 406, 0, 602, 603, 683, 391, 496, 614,
	342, 356, 359, 348, 368, 0, 369, 344, 345, 350,
	353, 354, 355, 360, 361, 365, 371, 255, 216, 398,
	407, 588, 319, 222, 223, 224, 534, 535, 536, 537,
	630, 631, 635, 211, 472, 473, 474, 475, 299, 625,
	316, 478, 477, 338, 339, 386, 458, 550, 552, 563,
	567, 569, 571, 577, 580, 551, 553, 564, 568, 570,
	572, 578, 581, 540, 542, 544, 546, 559, 558, 555,
	583, 584, 561, 566, 545, 557, 562, 575, 582, 579,
	539, 543, 547, 556, 574, 573, 554, 565, 576, 560,
	548, 541, 549, 0, 202, 227, 375, 2103, 464, 295,
	661, 629, 494, 624, 212, 229, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	206, 215, 228, 238, 242, 249, 268, 283, 285, 292,
	305, 317, 325, 326, 329, 335, 387, 394, 395, 396,
	397, 417, 418, 419, 422, 425, 426, 429, 431, 432,
	435, 440, 444, 445, 446, 448, 450, 452, 465, 470,
	484, 485, 486, 487, 488, 491, 492, 498, 499, 500,
	501, 502, 510, 511, 526, 597, 599, 616, 636, 643,
	490, 392, 438, 462, 590, 0, 0, 308, 309, 453,
	454, 321, 322, 657, 658, 307, 611, 644, 608, 656,
	638, 447, 385, 0, 0, 388, 288, 312, 327, 0,
	628, 512, 233, 476, 297, 257, 0, 0, 217, 252,
	236, 266, 281, 284, 331, 399, 408, 437, 443, 303,
	278, 250, 469, 247, 495, 529, 530, 531, 533, 403,
	273, 442, 404, 0, 383, 586, 587, 323, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 277, 0, 0, 0, 0, 373, 274, 0, 0,
	210, 515, 0, 439, 0, 209, 0, 497, 259, 384,
	381, 594, 289, 280, 276, 256, 324, 393, 436, 528,
	430, 0, 377, 0, 0, 507, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 254, 332, 208, 421,
	508, 293, 0, 0, 0, 0, 2094, 517, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 251, 0, 0, 0, 358, 367, 366, 346, 347,
	349, 351, 357, 364, 370, 343, 352, 0, 0, 620,
	0, 0, 0, 272, 328, 279, 271, 591, 0, 0,
	0, 0, 0, 0, 607, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 1953, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 0, 0, 0, 0, 517, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 410, 264, 0, 463,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 337, 203, 231, 0, 0, 420, 471,
	483, 0, 0, 0, 260, 0, 481, 434, 615, 239,
	291, 468, 441, 479, 449, 294, 0, 0, 480, 379,
	596, 459, 612, 641, 642, 270, 414, 626, 532, 634,
	659, 232, 267, 428, 516, 618, 504, 405, 592, 593,
	336, 503, 302, 207, 376, 647, 230, 489, 378, 248,
	237, 598, 623, 306, 258, 296, 466, 654, 219, 527,
	609, 245, 493, 0, 0, 662, 253, 514, 621, 610,
	221, 605, 513, 401, 333, 334, 220, 0, 467, 275,
	300, 0, 0, 265, 423, 600, 601, 263, 663, 234,
	633, 226, 0, 632, 416, 595, 606, 402, 390, 225,
	604, 400, 389, 341, 362, 363, 287, 314, 456, 382,
	457, 313, 315, 412, 411, 413, 213, 619, 637, 0,
	214, 0, 509, 622, 664, 461, 218, 240, 241, 243,
	0, 286, 290, 298, 301, 310, 311, 320, 374, 427,
	455, 451, 460, 0, 589, 613, 627, 639, 645, 646,
	648, 649, 650, 651, 652, 655, 653, 415, 318, 505,
	340, 380, 0, 0, 433, 482, 246, 617, 506, 205,
	0, 0, 0, 0, 261, 262, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 660, 518, 524, 519, 520,
	521, 522, 523, 0, 525, 0, 0, 0, 0, 0,
	406, 0, 602, 603, 683, 391, 496, 614, 342, 356,
	359, 348, 368, 0, 369, 344, 345, 350, 353, 354,
	355, 360, 361, 365, 371, 255, 216, 398, 407, 588,
	319, 222, 223, 224, 534, 535, 536, 537, 630, 631,
	635, 211, 472, 473, 474, 475, 299, 625, 316, 478,
	477, 338, 339, 386, 458, 550, 552, 563, 567, 569,
	571, 577, 580, 551, 553, 564, 568, 570, 572, 578,
	581, 540, 542, 544, 546, 559, 558, 555, 583, 584,
	561, 566, 545, 557, 562, 575, 582, 579, 539, 543,
	547, 556, 574, 573, 554, 565, 576, 560, 548, 541,
	549, 0, 202, 227, 375, 0, 464, 295, 661, 629,
	494, 624, 212, 229, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 206, 215,
	228, 238, 242, 249, 268, 283, 285, 292, 305, 317,
	325, 326, 329, 335, 387, 394, 395, 396, 397, 417,
	418, 419, 422, 425, 426, 429, 431, 432, 435, 440,
	444, 445, 446, 448, 450, 452, 465, 470, 484, 485,
	486, 487, 488, 491, 492, 498, 499, 500, 501, 502,
	510, 511, 526, 597, 599, 616, 636, 643, 490, 392,
	438, 462, 590, 0, 0, 308, 309, 453, 454, 321,
	322, 657, 658, 307, 611, 644, 608, 656, 638, 447,
	385, 0, 0, 388, 288, 312, 327, 0, 628, 512,
	233, 476, 297, 257, 0, 0, 217, 252, 236, 266,
	281, 284, 331, 399, 408, 437, 443, 303, 278, 250,
	469, 247, 495, 529, 530, 531, 533, 403, 273, 442,
	404, 0, 383, 586, 587, 323, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 373, 274, 0, 1951, 210, 515,
	0, 439, 0, 209, 0, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 0,
	377, 0, 0, 507, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 254, 332, 208, 421, 508, 293,
	0, 0, 0, 0, 0, 517, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 358, 367, 366, 346, 347, 349, 351,
	357, 364, 370, 343, 352, 0, 0, 620, 0, 0,
	0, 272, 328, 279, 271, 591, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 307, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 1949, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 735, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 410, 264, 0, 463, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 337, 203, 231, 0, 0, 420, 471, 483, 0,
	0, 0, 260, 0, 481, 434, 615, 239, 291, 468,
	441, 479, 449, 294, 0, 0, 480, 379, 596, 459,
	612, 641, 642, 270, 414, 626, 532, 634, 659, 232,
	267, 428, 516, 618, 504, 405, 592, 593, 336, 503,
	302, 207, 376, 647, 230, 489, 378, 248, 237, 598,
	623, 306, 258, 296, 466, 654, 219, 527, 609, 245,
	493, 0, 0, 662, 253, 514, 621, 610, 221, 605,
	513, 401, 333, 334, 220, 0, 467, 275, 300, 0,
	0, 265, 423, 600, 601, 263, 663, 234, 633, 226,
	0, 632, 416, 595, 606, 402, 390, 225, 604, 400,
	389, 341, 362, 363, 287, 314, 456, 382, 457, 313,
	315, 412, 411, 413, 213, 619, 637, 0, 214, 0,
	509, 622, 664, 461, 218, 240, 241, 243, 0, 286,
	290, 298, 301, 310, 311, 320, 374, 427, 455, 451,
	460, 0, 589, 613, 627, 639, 645, 646, 648, 649,
	650, 651, 652, 655, 653, 415, 318, 505, 340, 380,
	0, 0, 433, 482, 246, 617, 506, 205, 0, 0,
	0, 0, 261, 262, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 660, 518, 524, 519, 520, 521, 522,
	523, 0, 525, 0, 0, 0, 0, 0, 406, 0,
	602, 603, 683, 391, 496, 614, 342, 356, 359, 348,
	368, 0, 369, 344, 345, 350, 353, 354, 355, 360,
	361, 365, 371, 255, 216, 398, 407, 588, 319, 222,
	223, 224, 534, 535, 536, 537, 630, 631, 635, 211,
	472, 473, 474, 475, 299, 625, 316, 478, 477, 338,
	339, 386, 458, 550, 552, 563, 567, 569, 571, 577,
	580, 551, 553, 564, 568, 570, 572, 578, 581, 540,
	542, 544, 546, 559, 558, 555, 583, 584, 561, 566,
	545, 557, 562, 575, 582, 579, 539, 543, 547, 556,
	574, 573, 554, 565, 576, 560, 548, 541, 549, 0,
	202, 227, 375, 0, 464, 295, 661, 629, 494, 624,
	212, 229, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 206, 215, 228, 238,
	242, 249, 268, 283, 285, 292, 305, 317, 325, 326,
	329, 335, 387, 394, 395, 396, 397, 417, 418, 419,
	422, 425, 426, 429, 431, 432, 435, 440, 444, 445,
	446, 448, 450, 452, 465, 470, 484, 485, 486, 487,
	488, 491, 492, 498, 499, 500, 501, 502, 510, 511,
	526, 597, 599, 616, 636, 643, 490, 392, 438, 462,
	590, 0, 0, 308, 309, 453, 454, 321, 322, 657,
	658, 307, 611, 644, 608, 656, 638, 447, 385, 0,
	0, 388, 288, 312, 327, 0, 628, 512, 233, 476,
	297, 257, 0, 0, 217, 252, 236, 266, 281, 284,
	331, 399, 408, 437, 443, 303, 278, 250, 469, 247,
	495, 529, 530, 531, 533, 403, 273, 442, 404, 0,
	383, 586, 587, 323, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 373, 274, 0, 1947, 210, 515, 0, 439,
	0, 209, 0, 497, 259, 384, 381, 594, 289, 280,
	276, 256, 324, 393, 436, 528, 430, 0, 377, 0,
	0, 507, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 254, 332, 208, 421, 508, 293, 0, 0,
	0, 0, 0, 517, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 358, 367, 366, 346, 347, 349, 351, 357, 364,
	370, 343, 352, 0, 0, 620, 0, 0, 0, 272,
	328, 279, 271, 591, 0, 0, 0, 0, 0, 0,
	607, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 0, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 1945, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 410, 264, 0, 463, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 337,
	203, 231, 0, 0, 420, 471, 483, 0, 0, 0,
	260, 0, 481, 434, 615, 239, 291, 468, 441, 479,
	449, 294, 0, 0, 480, 379, 596, 459, 612, 641,
	642, 270, 414, 626, 532, 634, 659, 232, 267, 428,
	516, 618, 504, 405, 592, 593, 336, 503, 302, 207,
	376, 647, 230, 489, 378, 248, 237, 598, 623, 306,
	258, 296, 466, 654, 219, 527, 609, 245, 493, 0,
	0, 662, 253, 514, 621, 610, 221, 605, 513, 401,
	333, 334, 220, 0, 467, 275, 300, 0, 0, 265,
	423, 600, 601, 263, 663, 234, 633, 226, 0, 632,
	416, 595, 606, 402, 390, 225, 604, 400, 389, 341,
	362, 363, 287, 314, 456, 382, 457, 313, 315, 412,
	411, 413, 213, 619, 637, 0, 214, 0, 509, 622,
	664, 461, 218, 240, 241, 243, 0, 286, 290, 298,
	301, 310, 311, 320, 374, 427, 455, 451, 460, 0,
	589, 613, 627, 639, 645, 646, 648, 649, 650, 651,
	652, 655, 653, 415, 318, 505, 340, 380, 0, 0,
	433, 482, 246, 617, 506, 205, 0, 0, 0, 0,
	261, 262, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 660, 518, 524, 519, 520, 521, 522, 523, 0,
	525, 0, 0, 0, 0, 0, 406, 0, 602, 603,
	683, 391, 496, 614, 342, 356, 359, 348, 368, 0,
	369, 344, 345, 350, 353, 354, 355, 360, 361, 365,
	371, 255, 216, 398, 407, 588, 319, 222, 223, 224,
	534, 535, 536, 537, 630, 631, 635, 211, 472, 473,
	474, 475, 299, 625, 316, 478, 477, 338, 339, 386,
	458, 550, 552, 563, 567, 569, 571, 577, 580, 551,
	553, 564, 568, 570, 572, 578, 581, 540, 542, 544,
	546, 559, 558, 555, 583, 584, 561, 566, 545, 557,
	562, 575, 582, 579, 539, 543, 547, 556, 574, 573,
	554, 565, 576, 560, 548, 541, 549, 0, 202, 227,
	375, 0, 464, 295, 661, 629, 494, 624, 212, 229,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 206, 215, 228, 238, 242, 249,
	268, 283, 285, 292, 305, 317, 325, 326, 329, 335,
	387, 394, 395, 396, 397, 417, 418, 419, 422, 425,
	426, 429, 431, 432, 435, 440, 444, 445, 446, 448,
	450, 452, 465, 470, 484, 485, 486, 487, 488, 491,
	492, 498, 499, 500, 501, 502, 510, 511, 526, 597,
	599, 616, 636, 643, 490, 392, 438, 462, 590, 0,
	0, 308, 309, 453, 454, 321, 322, 657, 658, 307,
	611, 644, 608, 656, 638, 447, 385, 0, 0, 388,
	288, 312, 327, 0, 628, 512, 233, 476, 297, 257,
	0, 0, 217, 252, 236, 266, 281, 284, 331, 399,
	408, 437, 443, 303, 278, 250, 469, 247, 495, 529,
	530, 531, 533, 403, 273, 442, 404, 0, 383, 586,
	587, 323, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	373, 274, 0, 1941, 210, 515, 0, 439, 0, 209,
	0, 497, 259, 384, 381, 594, 289, 280, 276, 256,
	324, 393, 436, 528, 430, 0, 377, 0, 0, 507,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	254, 332, 208, 421, 508, 293, 0, 0, 0, 0,
	0, 517, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 358,
	367, 366, 346, 347, 349, 351, 357, 364, 370, 343,
	352, 0, 0, 620, 0, 0, 0, 272, 328, 279,
	271, 591, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 1939, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 337, 203, 231,
	0, 0, 420, 471, 483, 0, 0, 0, 260, 0,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	0, 0, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 600,
	601, 263, 663, 234, 633, 226, 0, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 362, 363,
	287, 314, 456, 382, 457, 313, 315, 412, 411, 413,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 0, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 0, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 0, 0, 433, 482,
	246, 617, 506, 205, 0, 0, 0, 0, 261, 262,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 0,
	0, 0, 0, 0, 406, 0, 602, 603, 683, 391,
	496, 614, 342, 356, 359, 348, 368, 0, 369, 344,
	345, 350, 353, 354, 355, 360, 361, 365, 371, 255,
	216, 398, 407, 588, 319, 222, 223, 224, 534, 535,
	536, 537, 630, 631, 635, 211, 472, 473, 474, 475,
	299, 625, 316, 478, 477, 338, 339, 386, 458, 550,
	552, 563, 567, 569, 571, 577, 580, 551, 553, 564,
	568, 570, 572, 578, 581, 540, 542, 544, 546, 559,
	558, 555, 583, 584, 561, 566, 545, 557, 562, 575,
	582, 579, 539, 543, 547, 556, 574, 573, 554, 565,
	576, 560, 548, 541, 549, 0, 202, 227, 375, 0,
	464, 295, 661, 629, 494, 624, 212, 229, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 0, 0, 308,
	309, 453, 454, 321, 322, 657, 658, 307, 611, 644,
	608, 656, 638, 447, 385, 0, 0, 388, 288, 312,
	327, 0, 628, 512, 233, 476, 297, 257, 0, 0,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 404, 0, 383, 586, 587, 323,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 373, 274,
	0, 1937, 210, 515, 0, 439, 0, 209, 0, 497,
	259, 384, 381, 594, 289, 280, 276, 256, 324, 393,
	436, 528, 430, 0, 377, 0, 0, 507, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 254, 332,
	208, 421, 508, 293, 0, 0, 0, 0, 0, 517,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 251, 0, 0, 0, 358, 367, 366,
	346, 347, 349, 351, 357, 364, 370, 343, 352, 0,
	0, 620, 0, 0, 0, 272, 328, 279, 271, 591,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 404, 0, 383, 586, 587, 323, 0,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 0, 373, 274, 0,
	0, 210, 515, 0, 439, 0, 209, 0, 497, 259,
	384, 381, 594, 289, 280, 276, 256, 324, 393, 436,
	528, 430, 0, 377, 0, 0, 507, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 330, 254, 332, 208,
	421, 508, 293, 0, 1912, 0, 0, 0, 517, 735,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 251, 0, 0, 0, 358, 367, 366, 346,
	347, 349, 351, 357, 364, 370, 343, 352, 0, 0,
	620, 0, 0, 0, 272, 328, 279, 271, 591, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 0, 410, 264,
	0, 463, 0, 0, 0, 640, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 337, 203, 231, 0, 0,
	420, 471, 483, 0, 0, 0, 260, 0, 481, 434,
	615, 239, 291, 468, 441, 479, 449, 294, 0, 0,
	480, 379, 596, 459, 612, 641, 642, 270, 414, 626,
	532, 634, 659, 232, 267, 428, 516, 618, 504, 405,
	592, 593, 336, 503, 302, 207, 376, 647, 230, 489,
	378, 248, 237, 598, 623, 306, 258, 296, 466, 654,
	219, 527, 609, 245, 493, 0, 0, 662, 253, 514,
	621, 610, 221, 605, 513, 401, 333, 334, 220, 0,
	467, 275, 300, 0, 0, 265, 423, 600, 601, 263,
	663, 234, 633, 226, 0, 632, 416, 595, 606, 402,
	390, 225, 604, 400, 389, 341, 362, 363, 287, 314,
	456, 382, 457, 313, 315, 412, 411, 413, 213, 619,
	637, 0, 214, 0, 509, 622, 664, 461, 218, 240,
	241, 243, 0, 286, 290, 298, 301, 310, 311, 320,
	374, 427, 455, 451, 460, 0, 589, 613, 627, 639,
	645, 646, 648, 649, 650, 651, 652, 655, 653, 415,
	318, 505, 340, 380, 0, 0, 433, 482, 246, 617,
	506, 205, 0, 0, 0, 0, 261, 262, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 660, 518, 524,
	519, 520, 521, 522, 523, 0, 525, 0, 0, 0,
	0, 0, 406, 0, 602, 603, 683, 391, 496, 614,
	342, 356, 359, 348, 368, 0, 369, 344, 345, 350,
	353, 354, 355, 360, 361, 365, 371, 255, 216, 398,
	407, 588, 319, 222, 223, 224, 534, 535, 536, 537,
	630, 631, 635, 211, 472, 473, 474, 475, 299, 625,
	316, 478, 477, 338, 339, 386, 458, 550, 552, 563,
	567, 569, 571, 577, 580, 551, 553, 564, 568, 570,
	572, 578, 581, 540, 542, 544, 546, 559, 558, 555,
	583, 584, 561, 566, 545, 557, 562, 575, 582, 579,
	539, 543, 547, 556, 574, 573, 554, 565, 576, 560,
	548, 541, 549, 0, 202, 227, 375, 0, 464, 295,
	661, 629, 494, 624, 212, 229, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	206, 215, 228, 238, 242, 249, 268, 283, 285, 292,
	305, 317, 325, 326, 329, 335, 387, 394, 395, 396,
	397, 417, 418, 419, 422, 425, 426, 429, 431, 432,
	435, 440, 444, 445, 446, 448, 450, 452, 465, 470,
	484, 485, 486, 487, 488, 491, 492, 498, 499, 500,
	501, 502, 510, 511, 526, 597, 599, 616, 636, 643,
	490, 392, 438, 462, 590, 0, 0, 308, 309, 453,
	454, 321, 322, 657, 658, 307, 611, 644, 608, 656,
	638, 447, 385, 0, 0, 388, 288, 312, 327, 0,
	628, 512, 233, 476, 297, 257, 0, 0, 217, 252,
	236, 266, 281, 284, 331, 399, 408, 437, 443, 303,
	278, 250, 469, 247, 495, 529, 530, 531, 533, 403,
	273, 442, 404, 0, 383, 586, 587, 323, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 424, 0, 0, 0, 0, 0, 0,
	1815, 277, 0, 0, 0, 0, 373, 274, 0, 0,
	210, 515, 0, 439, 0, 209, 0, 497, 259, 384,
	381, 594, 289, 280, 276, 256, 324, 393, 436, 528,
	430, 0, 377, 0, 0, 507, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 330, 254, 332, 208, 421,
	508, 293, 0, 0, 0, 0, 0, 517, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 251, 0, 0, 0, 358, 367, 366, 346, 347,
	349, 351, 357, 364, 370, 343, 352, 0, 0, 620,
	0, 0, 0, 272, 328, 279, 271, 591, 0, 0,
	0, 0, 0, 0, 607, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 304, 0, 410, 264, 0,
	463, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 0, 372, 0, 337, 203, 231, 0, 0, 420,
	471, 483, 0, 0, 0, 260, 0, 481, 434, 615,
	239, 291, 468, 441, 479, 449, 294, 0, 0, 480,
	379, 596, 459, 612, 641, 642, 270, 414, 626, 532,
	634, 659, 232, 267, 428, 516, 618, 504, 405, 592,
	593, 336, 503, 302, 207, 376, 647, 230, 489, 378,
	248, 237, 598, 623, 306, 258, 296, 466, 654, 219,
	527, 609, 245, 493, 0, 0, 662, 253, 514, 621,
	610, 221, 605, 513, 401, 333, 334, 220, 0, 467,
	275, 300, 0, 0, 265, 423, 600, 601, 263, 663,
	234, 633, 226, 0, 632, 416, 595, 606, 402, 390,
	225, 604, 400, 389, 341, 362, 363, 287, 314, 456,
	382, 457, 313, 315, 412, 411, 413, 213, 619, 637,
	0, 214, 0, 509, 622, 664, 461, 218, 240, 241,
	243, 0, 286, 290, 298, 301, 310, 311, 320, 374,
	427, 455, 451, 460, 0, 589, 613, 627, 639, 645,
	646, 648, 649, 650, 651, 652, 655, 653, 415, 318,
	505, 340, 380, 0, 0, 433, 482, 246, 617, 506,
	205, 0, 0, 0, 0, 261, 262, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 660, 518, 524, 519,
	520, 521, 522, 523, 0, 525, 0, 0, 0, 0,
	0, 406, 0, 602, 603, 683, 391, 496, 614, 342,
	356, 359, 348, 368, 0, 369, 344, 345, 350, 353,
	354, 355, 360, 361, 365, 371, 255, 216, 398, 407,
	588, 319, 222, 223, 224, 534, 535, 536, 537, 630,
	631, 635, 211, 472, 473, 474, 475, 299, 625, 316,
	478, 477, 338, 339, 386, 458, 550, 552, 563, 567,
	569, 571, 577, 580, 551, 553, 564, 568, 570, 572,
	578, 581, 540, 542, 544, 546, 559, 558, 555, 583,
	584, 561, 566, 545, 557, 562, 575, 582, 579, 539,
	543, 547, 556, 574, 573, 554, 565, 576, 560, 548,
	541, 549, 0, 202, 227, 375, 0, 464, 295, 661,
	629, 494, 624, 212, 229, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 206,
	215, 228, 238, 242, 249, 268, 283, 285, 292, 305,
	317, 325, 326, 329, 335, 387, 394, 395, 396, 397,
	417, 418, 419, 422, 425, 426, 429, 431, 432, 435,
	440, 444, 445, 446, 448, 450, 452, 465, 470, 484,
	485, 486, 487, 488, 491, 492, 498, 499, 500, 501,
	502, 510, 511, 526, 597, 599, 616, 636, 643, 490,
	392, 438, 462, 590, 0, 0, 308, 309, 453, 454,
	321, 322, 657, 658, 307, 611, 644, 608, 656, 638,
	447, 385, 0, 0, 388, 288, 312, 327, 0, 628,
	512, 233, 476, 297, 257, 0, 0, 217, 252, 236,
	266, 281, 284, 331, 399, 408, 437, 443, 303, 278,
	250, 469, 247, 495, 529, 530, 531, 533, 403, 273,
	442, 404, 0, 383, 586, 587, 323, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	277, 0, 0, 0, 0, 373, 274, 0, 0, 210,
	515, 0, 439, 0, 209, 0, 497, 259, 384, 381,
	594, 289, 280, 276, 256, 324, 393, 436, 528, 430,
	0, 377, 0, 0, 507, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 254, 332, 208, 421, 508,
	293, 0, 98, 0, 0, 0, 517, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	251, 0, 0, 0, 358, 367, 366, 346, 347, 349,
	351, 357, 364, 370, 343, 352, 0, 0, 620, 0,
	0, 0, 272, 328, 279, 271, 591, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 304, 0, 410, 264, 0, 463,
	0, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	0, 372, 0, 337, 203, 231, 0, 0, 420, 471,
	483, 0, 0, 0, 260, 0, 481, 434, 615, 239,
	291, 468, 441, 479, 449, 294, 0, 0, 480, 379,
	596, 459, 612, 641, 642, 270, 414, 626, 532, 634,
	659, 232, 267, 428, 516, 618, 504, 405, 592, 593,
	336, 503, 302, 207, 376, 647, 230, 489, 378, 248,
	237, 598, 623, 306, 258, 296, 466, 654, 219, 527,
	609, 245, 493, 0, 0, 662, 253, 514, 621, 610,
	221, 605, 513, 401, 333, 334, 220, 0, 467, 275,
	300, 0, 0, 265, 423, 600, 601, 263, 663, 234,
	633, 226, 0, 632, 416, 595, 606, 402, 390, 225,
	604, 400, 389, 341, 362, 363, 287, 314, 456, 382,
	457, 313, 315, 412, 411, 413, 213, 619, 637, 0,
	214, 0, 509, 622, 664, 461, 218, 240, 241, 243,
	0, 286, 290, 298, 301, 310, 311, 320, 374, 427,
	455, 451, 460, 0, 589, 613, 627, 639, 645, 646,
	648, 649, 650, 651, 652, 655, 653, 415, 318, 505,
	340, 380, 0, 0, 433, 482, 246, 617, 506, 205,
	0, 0, 0, 0, 261, 262, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 660, 518, 524, 519, 520,
	521, 522, 523, 0, 525, 0, 0, 0, 0, 0,
	406, 0, 602, 603, 683, 391, 496, 614, 342, 356,
	359, 348, 368, 0, 369, 344, 345, 350, 353, 354,
	355, 360, 361, 365, 371, 255, 216, 398, 407, 588,
	319, 222, 223, 224, 534, 535, 536, 537, 630, 631,
	635, 211, 472, 473, 474, 475, 299, 625, 316, 478,
	477, 338, 339, 386, 458, 550, 552, 563, 567, 569,
	571, 577, 580, 551, 553, 564, 568, 570, 572, 578,
	581, 540, 542, 544, 546, 559, 558, 555, 583, 584,
	561, 566, 545, 557, 562, 575, 582, 579, 539, 543,
	547, 556, 574, 573, 554, 565, 576, 560, 548, 541,
	549, 0, 202, 227, 375, 0, 464, 295, 661, 629,
	494, 624, 212, 229, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 204, 206, 215,
	228, 238, 242, 249, 268, 283, 285, 292, 305, 317,
	325, 326, 329, 335, 387, 394, 395, 396, 397, 417,
	418, 419, 422, 425, 426, 429, 431, 432, 435, 440,
	444, 445, 446, 448, 450, 452, 465, 470, 484, 485,
	486, 487, 488, 491, 492, 498, 499, 500, 501, 502,
	510, 511, 526, 597, 599, 616, 636, 643, 490, 392,
	438, 462, 590, 0, 0, 308, 309, 453, 454, 321,
	322, 657, 658, 307, 611, 644, 608, 656, 638, 447,
	385, 0, 0, 388, 288, 312, 327, 0, 628, 512,
	233, 476, 297, 257, 0, 0, 217, 252, 236, 266,
	281, 284, 331, 399, 408, 437, 443, 303, 278, 250,
	469, 247, 495, 529, 530, 531, 533, 403, 273, 442,
	404, 0, 383, 586, 587, 323, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 0, 373, 274, 0, 0, 210, 515,
	0, 439, 0, 209, 0, 497, 259, 384, 381, 594,
	289, 280, 276, 256, 324, 393, 436, 528, 430, 0,
	377, 0, 0, 507, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 330, 254, 332, 208, 421, 508, 293,
	0, 0, 0, 0, 0, 517, 200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 251,
	0, 0, 0, 358, 367, 366, 346, 347, 349, 351,
	357, 364, 370, 343, 352, 0, 0, 620, 0, 0,
	0, 272, 328, 279, 271, 591, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 0, 304, 0, 410, 264, 0, 463, 0,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 337, 203, 231, 0, 0, 420, 471, 483,
	0, 0, 0, 260, 0, 481, 434, 615, 239, 291,
	468, 441, 479, 449, 294, 0, 0, 480, 379, 596,
	459, 612, 641, 642, 270, 414, 626, 532, 634, 659,
	232, 267, 428, 516, 618, 504, 405, 592, 593, 336,
	503, 302, 207, 376, 647, 230, 489, 378, 248, 237,
	598, 623, 306, 258, 296, 466, 654, 219, 527, 609,
	245, 493, 0, 0, 662, 253, 514, 621, 610, 221,
	605, 513, 401, 333, 334, 220, 0, 467, 275, 300,
	0, 0, 265, 423, 600, 601, 263, 663, 234, 633,
	226, 0, 632, 416, 595, 606, 402, 390, 225, 604,
	400, 389, 341, 362, 363, 287, 314, 456, 382, 457,
	313, 315, 412, 411, 413, 213, 619, 637, 0, 214,
	0, 509, 622, 664, 461, 218, 240, 241, 243, 0,
	286, 290, 298, 301, 310, 311, 320, 374, 427, 455,
	451, 460, 0, 589, 613, 627, 639, 645, 646, 648,
	649, 650, 651, 652, 655, 653, 415, 318, 505, 340,
	380, 0, 0, 433, 482, 246, 617, 506, 205, 0,
	0, 0, 0, 261, 262, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 665, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 660, 518, 524, 519, 520, 521,
	522, 523, 0, 525, 0, 0, 0, 0, 0, 406,
	0, 602, 603, 683, 391, 496, 614, 342, 356, 359,
	348, 368, 0, 369, 344, 345, 350, 353, 354, 355,
	360, 361, 365, 371, 255, 216, 398, 407, 588, 319,
	222, 223, 224, 534, 535, 536, 537, 630, 631, 635,
	211, 472, 473, 474, 475, 299, 625, 316, 478, 477,
	338, 339, 386, 458, 550, 552, 563, 567, 569, 571,
	577, 580, 551, 553, 564, 568, 570, 572, 578, 581,
	540, 542, 544, 546, 559, 558, 555, 583, 584, 561,
	566, 545, 557, 562, 575, 582, 579, 539, 543, 547,
	556, 574, 573, 554, 565, 576, 560, 548, 541, 549,
	0, 202, 227, 375, 0, 464, 295, 661, 629, 494,
	624, 212, 229, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 206, 215, 228,
	238, 242, 249, 268, 283, 285, 292, 305, 317, 325,
	326, 329, 335, 387, 394, 395, 396, 397, 417, 418,
	419, 422, 425, 426, 429, 431, 432, 435, 440, 444,
	445, 446, 448, 450, 452, 465, 470, 484, 485, 486,
	487, 488, 491, 492, 498, 499, 500, 501, 502, 510,
	511, 526, 597, 599, 616, 636, 643, 490, 392, 438,
	462, 590, 0, 0, 308, 309, 453, 454, 321, 322,
	657, 658, 1469, 611, 644, 608, 656, 638, 447, 385,
	0, 0, 388, 288, 312, 327, 0, 628, 512, 233,
	476, 297, 257, 0, 0, 217, 252, 236, 266, 281,
	284, 331, 399, 408, 437, 443, 303, 278, 250, 469,
	247, 495, 529, 530, 531, 533, 403, 273, 442, 404,
	0, 383, 586, 587, 323, 0, 0, 0, 538, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 277, 0,
	0, 0, 0, 373, 274, 0, 0, 210, 515, 0,
	439, 0, 209, 0, 497, 259, 384, 381, 594, 289,
	280, 276, 256, 324, 393, 436, 528, 430, 0, 377,
	0, 0, 507, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 330, 254, 332, 208, 421, 508, 293, 0,
	0, 0, 0, 0, 517, 200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 251, 0,
	0, 0, 358, 367, 366, 346, 347, 349, 351, 357,
	364, 370, 343, 352, 0, 0, 620, 0, 0, 0,
	272, 328, 279, 271, 591, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 304, 0, 410, 264, 0, 463, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 372,
	0, 337, 203, 231, 0, 0, 420, 471, 483, 0,
	0, 0, 260, 0, 481, 434, 615, 239, 291, 468,
	441, 479, 449, 294, 0, 0, 480, 379, 596, 459,
	612, 641, 642, 270, 414, 626, 532, 634, 659, 232,
	267, 428, 516, 618, 504, 405, 592, 593, 336, 503,
	302, 207, 376, 647, 230, 489, 378, 248, 237, 598,
	623, 306, 258, 296, 466, 654, 219, 527, 609, 245,
	493, 0, 0, 662, 253, 514, 621, 610, 221, 605,
	513, 401, 333, 334, 220, 0, 467, 275, 300, 0,
	0, 265, 423, 600, 601, 263, 663, 234, 633, 226,
	0, 632, 416, 595, 606, 402, 390, 225, 604, 400,
	389, 341, 362, 363, 287, 314, 456, 382, 457, 313,
	315, 412, 411, 413, 213, 619, 637, 0, 214, 0,
	509, 622, 664, 461, 218, 240, 241, 243, 0, 286,
	290, 298, 301, 310, 311, 320, 374, 427, 455, 451,
	460, 0, 589, 613, 627, 639, 645, 646, 648, 649,
	650, 651, 652, 655, 653, 415, 318, 505, 340, 380,
	0, 0, 433, 482, 246, 617, 506, 205, 0, 0,
	0, 0, 261, 262, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 660, 518, 524, 519, 520, 521, 522,
	523, 0, 525, 0, 0, 0, 0, 0, 406, 0,
	602, 603, 683, 391, 496, 614, 342, 356, 359, 348,
	368, 0, 369, 344, 345, 350, 353, 354, 355, 360,
	361, 365, 371, 255, 216, 398, 407, 588, 319, 222,
	223, 224, 534, 535, 536, 537, 630, 631, 635, 211,
	472, 473, 474, 475, 299, 625, 316, 478, 477, 338,
	339, 386, 458, 550, 552, 563, 567, 569, 571, 577,
	580, 551, 553, 564, 568, 570, 572, 578, 581, 540,
	542, 544, 546, 559, 558, 555, 583, 584, 561, 566,
	545, 557, 562, 575, 582, 579, 539, 543, 547, 556,
	574, 573, 554, 565, 576, 560, 548, 541, 549, 0,
	202, 227, 375, 0, 464, 295, 661, 629, 494, 624,
	212, 229, 0, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1063, 0, 0, 0, 204, 206, 215, 228, 238,
	242, 249, 268, 283, 285, 292, 305, 317, 325, 326,
	329, 335, 387, 394, 395, 396, 397, 417, 418, 419,
	422, 425, 426, 429, 431, 432, 435, 440, 444, 445,
	446, 448, 450, 452, 465, 470, 484, 485, 486, 487,
	488, 491, 492, 498, 499, 500, 501, 502, 510, 511,
	526, 597, 599, 616, 636, 643, 490, 392, 438, 462,
	590, 0, 0, 308, 309, 453, 454, 321, 322, 657,
	658, 307, 611, 644, 608, 656, 638, 447, 385, 0,
	0, 388, 288, 312, 327, 0, 628, 512, 233, 476,
	297, 257, 0, 0, 217, 252, 236, 266, 281, 284,
	331, 399, 408, 437, 443, 303, 278, 250, 469, 247,
	495, 529, 530, 531, 533, 403, 273, 442, 404, 0,
	383, 586, 587, 323, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 277, 0, 0,
	0, 0, 373, 274, 0, 0, 210, 515, 0, 439,
	0, 209, 0, 497, 259, 384, 381, 594, 289, 280,
	276, 256, 324, 393, 436, 528, 430, 0, 377, 0,
	0, 507, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 254, 332, 208, 421, 508, 293, 0, 0,
	0, 0, 0, 517, 200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 251, 0, 0,
	0, 358, 367, 366, 346, 347, 349, 351, 357, 364,
	370, 343, 352, 0, 0, 620, 0, 0, 0, 272,
	328, 279, 271, 591, 0, 0, 0, 0, 0, 0,
	607, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 304, 0, 410, 264, 0, 463, 0, 686, 0,
	640, 0, 0, 0, 0, 0, 0, 0, 372, 0,
	337, 203, 231, 0, 0, 420, 471, 483, 0, 0,
	0, 260, 0, 481, 434, 615, 239, 291, 468, 441,
	479, 449, 294, 0, 0, 480, 379, 596, 459, 612,
	641, 642, 270, 414, 626, 532, 634, 659, 232, 267,
	428, 516, 618, 504, 405, 592, 593, 336, 503, 302,
	207, 376, 647, 230, 489, 378, 248, 237, 598, 623,
	306, 258, 296, 466, 654, 219, 527, 609, 245, 493,
	0, 0, 662, 253, 514, 621, 610, 221, 605, 513,
	401, 333, 334, 220, 0, 467, 275, 300, 0, 0,
	265, 423, 600, 601, 263, 663, 234, 633, 226, 0,
	632, 416, 595, 606, 402, 390, 225, 604, 400, 389,
	341, 362, 363, 287, 314, 456, 382, 457, 313, 315,
	412, 411, 413, 213, 619, 637, 0, 214, 0, 509,
	622, 664, 461, 218, 240, 241, 243, 0, 286, 290,
	298, 301, 310, 311, 320, 374, 427, 455, 451, 460,
	0, 589, 613, 627, 639, 645, 646, 648, 649, 650,
	651, 652, 655, 653, 415, 318, 505, 340, 380, 0,
	0, 433, 482, 246, 617, 506, 205, 0, 0, 0,
	0, 261, 262, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 660, 518, 524, 519, 520, 521, 522, 523,
	0, 525, 0, 0, 0, 0, 0, 406, 0, 602,
	603, 683, 391, 496, 614, 342, 356, 359, 348, 368,
	0, 369, 344, 345, 350, 353, 354, 355, 360, 361,
	365, 371, 255, 216, 398, 407, 588, 319, 222, 223,
	224, 534, 535, 536, 537, 630, 631, 635, 211, 472,
	473, 474, 475, 299, 625, 316, 478, 477, 338, 339,
	386, 458, 550, 552, 563, 567, 569, 571, 577, 580,
	551, 553, 564, 568, 570, 572, 578, 581, 540, 542,
	544, 546, 559, 558, 555, 583, 584, 561, 566, 545,
	557, 562, 575, 582, 579, 539, 543, 547, 556, 574,
	573, 554, 565, 576, 560, 548, 541, 549, 0, 202,
	227, 375, 0, 464, 295, 661, 629, 494, 624, 212,
	229, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 206, 215, 228, 238, 242,
	249, 268, 283, 285, 292, 305, 317, 325, 326, 329,
	335, 387, 394, 395, 396, 397, 417, 418, 419, 422,
	425, 426, 429, 431, 432, 435, 440, 444, 445, 446,
	448, 450, 452, 465, 470, 484, 485, 486, 487, 488,
	491, 492, 498, 499, 500, 501, 502, 510, 511, 526,
	597, 599, 616, 636, 643, 490, 392, 438, 462, 590,
	0, 0, 308, 309, 453, 454, 321, 322, 657, 658,
	307, 611, 644, 608, 656, 638, 447, 385, 0, 0,
	388, 288, 312, 327, 0, 628, 512, 233, 476, 297,
	257, 0, 0, 217, 252, 236, 266, 281, 284, 331,
	399, 408, 437, 443, 303, 278, 250, 469, 247, 495,
	529, 530, 531, 533, 403, 273, 442, 404, 0, 383,
	586, 587, 323, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 277, 0, 0, 0,
	0, 373, 274, 0, 0, 210, 515, 0, 439, 0,
	209, 0, 497, 259, 384, 381, 594, 289, 280, 276,
	256, 324, 393, 436, 528, 430, 0, 377, 0, 0,
	507, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 254, 332, 208, 421, 508, 293, 0, 0, 0,
	0, 0, 517, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 251, 0, 0, 0,
	358, 367, 366, 346, 347, 349, 351, 357, 364, 370,
	343, 352, 0, 0, 620, 0, 0, 0, 272, 328,
	279, 271, 591, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	304, 0, 410, 264, 0, 463, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 0, 0, 372, 0, 337,
	203, 231, 0, 0, 420, 471, 483, 0, 0, 0,
	260, 0, 481, 434, 615, 239, 291, 468, 441, 479,
	449, 294, 0, 0, 480, 379, 596, 459, 612, 641,
	642, 270, 414, 626, 532, 634, 659, 232, 267, 428,
	516, 618, 504, 405, 592, 593, 336, 503, 302, 207,
	376, 647, 230, 489, 378, 248, 237, 598, 623, 306,
	258, 296, 466, 654, 219, 527, 609, 245, 493, 0,
	0, 662, 253, 514, 621, 610, 221, 605, 513, 401,
	333, 334, 220, 0, 467, 275, 300, 0, 0, 265,
	423, 600, 601, 263, 663, 234, 633, 226, 0, 632,
	416, 595, 606, 402, 390, 225, 604, 400, 389, 341,
	362, 363, 287, 314, 456, 382, 457, 313, 315, 412,
	411, 413, 213, 619, 637, 0, 214, 0, 509, 622,
	664, 461, 218, 240, 241, 243, 0, 286, 290, 298,
	301, 310, 311, 320, 374, 427, 455, 451, 460, 0,
	589, 613, 627, 639, 645, 646, 648, 649, 650, 651,
	652, 655, 653, 415, 318, 505, 340, 380, 0, 0,
	433, 482, 246, 617, 506, 205, 0, 0, 0, 0,
	261, 262, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 660, 518, 524, 519, 520, 521, 522, 523, 0,
	525, 0, 0, 0, 0, 0, 406, 0, 602, 603,
	683, 391, 496, 614, 342, 356, 359, 348, 368, 0,
	369, 344, 345, 350, 353, 354, 355, 360, 361, 365,
	371, 255, 216, 398, 407, 588, 319, 222, 223, 224,
	534, 535, 536, 537, 630, 631, 635, 211, 472, 473,
	474, 475, 299, 625, 316, 478, 477, 338, 339, 386,
	458, 550, 552, 563, 567, 569, 571, 577, 580, 551,
	553, 564, 568, 570, 572, 578, 581, 540, 542, 544,
	546, 559, 558, 555, 583, 584, 561, 566, 545, 557,
	562, 575, 582, 579, 539, 543, 547, 556, 574, 573,
	554, 565, 576, 560, 548, 541, 549, 0, 202, 227,
	375, 0, 464, 295, 661, 629, 494, 624, 212, 229,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 206, 215, 228, 238, 242, 249,
	268, 283, 285, 292, 305, 317, 325, 326, 329, 335,
	387, 394, 395, 396, 397, 4209, 418, 419, 422, 425,
	426, 429, 431, 432, 435, 440, 444, 445, 446, 448,
	450, 452, 465, 470, 484, 485, 486, 487, 488, 491,
	492, 498, 499, 500, 501, 502, 510, 511, 526, 597,
	599, 616, 636, 643, 490, 392, 438, 462, 590, 0,
	0, 308, 309, 453, 454, 321, 322, 657, 658, 307,
	611, 644, 608, 656, 638, 447, 385, 0, 0, 388,
	288, 312, 327, 0, 628, 512, 233, 476, 297, 257,
	0, 0, 217, 252, 236, 266, 281, 284, 331, 399,
	408, 437, 443, 303, 278, 250, 469, 247, 495, 529,
	530, 531, 533, 403, 273, 442, 404, 0, 383, 586,
	587, 323, 0, 0, 0, 538, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 424, 0, 0,
	0, 0, 0, 0, 0, 277, 0, 0, 0, 0,
	373, 274, 0, 0, 210, 515, 0, 439, 0, 209,
	0, 497, 259, 384, 381, 594, 289, 280, 276, 256,
	324, 393, 436, 528, 430, 0, 377, 0, 0, 507,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 330,
	254, 332, 208, 421, 508, 293, 0, 0, 0, 0,
	0, 517, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 251, 0, 0, 0, 358,
	367, 366, 346, 347, 349, 351, 357, 364, 370, 343,
	352, 0, 0, 620, 0, 0, 0, 272, 328, 279,
	271, 591, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 410, 264, 0, 463, 0, 0, 0, 640, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 337, 203,
	231, 0, 0, 420, 471, 483, 0, 0, 0, 260,
	0, 481, 434, 615, 239, 291, 468, 441, 479, 449,
	294, 0, 0, 480, 379, 596, 459, 612, 641, 642,
	270, 414, 626, 532, 634, 659, 232, 267, 428, 516,
	618, 504, 405, 592, 593, 336, 503, 302, 207, 376,
	647, 230, 489, 378, 248, 237, 598, 623, 306, 258,
	296, 466, 654, 219, 527, 609, 245, 493, 0, 0,
	662, 253, 514, 621, 610, 221, 605, 513, 401, 333,
	334, 220, 0, 467, 275, 300, 0, 0, 265, 423,
	600, 601, 263, 663, 234, 633, 226, 0, 632, 416,
	595, 606, 402, 390, 225, 604, 400, 389, 341, 362,
	363, 287, 314, 456, 382, 457, 313, 315, 412, 411,
	413, 213, 619, 637, 0, 214, 0, 509, 622, 664,
	461, 218, 240, 241, 243, 0, 286, 290, 298, 301,
	310, 311, 320, 374, 427, 455, 451, 460, 0, 589,
	613, 627, 639, 645, 646, 648, 649, 650, 651, 652,
	655, 653, 415, 318, 505, 340, 380, 0, 0, 433,
	482, 246, 617, 506, 205, 0, 0, 0, 0, 261,
	262, 0, 585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	660, 518, 524, 519, 520, 521, 522, 523, 0, 525,
	0, 0, 0, 0, 0, 406, 0, 602, 603, 683,
	391, 496, 614, 342, 356, 359, 348, 368, 0, 369,
	344, 345, 350, 353, 354, 355, 360, 361, 365, 371,
	255, 216, 398, 407, 588, 319, 222, 223, 224, 534,
	535, 536, 537, 630, 631, 635, 211, 472, 473, 474,
	475, 299, 625, 316, 478, 477, 338, 339, 386, 458,
	550, 552, 563, 567, 569, 571, 577, 580, 551, 553,
	564, 568, 570, 572, 578, 581, 540, 542, 544, 546,
	559, 558, 555, 583, 584, 561, 566, 545, 557, 562,
	575, 582, 579, 539, 543, 547, 556, 574, 573, 554,
	565, 576, 560, 548, 541, 549, 0, 202, 227, 375,
	0, 464, 295, 661, 629, 494, 624, 212, 229, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 206, 215, 228, 238, 242, 249, 268,
	283, 285, 292, 305, 317, 325, 326, 329, 335, 387,
	394, 395, 396, 397, 417, 418, 419, 422, 425, 426,
	429, 431, 432, 435, 440, 444, 445, 446, 448, 450,
	452, 465, 470, 484, 485, 486, 487, 488, 491, 492,
	498, 499, 500, 501, 502, 510, 511, 526, 597, 599,
	616, 636, 643, 490, 392, 438, 462, 590, 0, 0,
	308, 309, 453, 454, 321, 322, 657, 658, 307, 611,
	644, 608, 656, 638, 447, 385, 0, 0, 388, 288,
	312, 327, 0, 628, 512, 233, 476, 297, 257, 0,
	0, 217, 252, 236, 266, 281, 284, 331, 399, 408,
	437, 443, 303, 278, 250, 469, 247, 495, 529, 530,
	531, 533, 403, 273, 442, 404, 0, 383, 586, 587,
	323, 0, 0, 0, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 277, 0, 0, 0, 0, 373,
	274, 0, 0, 210, 515, 0, 439, 0, 209, 0,
	497, 259, 384, 381, 594, 289, 280, 276, 256, 324,
	393, 436, 528, 430, 0, 377, 0, 0, 507, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 254,
	332, 208, 421, 508, 293, 0, 0, 0, 0, 0,
	517, 970, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 251, 0, 0, 0, 358, 367,
	366, 346, 347, 349, 351, 357, 364, 370, 343, 352,
	0, 0, 620, 0, 0, 0, 272, 328, 279, 271,
	591, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 304, 0,
	410, 264, 0, 463, 0, 0, 0, 640, 0, 0,
	0, 0, 0, 0, 0, 372, 0, 337, 203, 231,
	0, 0, 420, 471, 483, 0, 0, 0, 260, 0,
	481, 434, 615, 239, 291, 468, 441, 479, 449, 294,
	0, 0, 480, 379, 596, 459, 612, 641, 642, 270,
	414, 626, 532, 634, 659, 232, 267, 428, 516, 618,
	504, 405, 592, 593, 336, 503, 302, 207, 376, 647,
	230, 489, 378, 248, 237, 598, 623, 306, 258, 296,
	466, 654, 219, 527, 609, 245, 493, 0, 0, 662,
	253, 514, 621, 610, 221, 605, 513, 401, 333, 334,
	220, 0, 467, 275, 300, 0, 0, 265, 423, 600,
	601, 263, 663, 234, 633, 226, 0, 632, 416, 595,
	606, 402, 390, 225, 604, 400, 389, 341, 362, 363,
	287, 314, 456, 382, 457, 313, 315, 412, 411, 413,
	213, 619, 637, 0, 214, 0, 509, 622, 664, 461,
	218, 240, 241, 243, 0, 286, 290, 298, 301, 310,
	311, 320, 374, 427, 455, 451, 460, 0, 589, 613,
	627, 639, 645, 646, 648, 649, 650, 651, 652, 655,
	653, 415, 318, 505, 340, 380, 0, 0, 433, 482,
	246, 617, 506, 205, 0, 0, 0, 0, 261, 262,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 665, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 660,
	518, 524, 519, 520, 521, 522, 523, 0, 525, 0,
	0, 0, 0, 0, 406, 0, 602, 603, 683, 391,
	496, 614, 342, 356, 359, 348, 368, 0, 369, 344,
	345, 350, 353, 354, 355, 360, 361, 365, 371, 255,
	216, 398, 407, 588, 319, 222, 223, 224, 534, 535,
	536, 537, 630, 631, 635, 211, 472, 473, 474, 475,
	299, 625, 316, 478, 477, 338, 339, 386, 458, 550,
	552, 563, 567, 569, 571, 577, 580, 551, 553, 564,
	568, 570, 572, 578, 581, 540, 542, 544, 546, 559,
	558, 555, 583, 584, 561, 566, 545, 557, 562, 575,
	582, 579, 539, 543, 547, 556, 574, 573, 554, 565,
	576, 560, 548, 541, 549, 0, 202, 227, 375, 0,
	464, 295, 661, 629, 494, 624, 212, 229, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 206, 215, 228, 238, 242, 249, 268, 283,
	285, 292, 305, 317, 325, 326, 329, 335, 387, 394,
	395, 396, 397, 417, 418, 419, 422, 425, 426, 429,
	431, 432, 435, 440, 444, 445, 446, 448, 450, 452,
	465, 470, 484, 485, 486, 487, 488, 491, 492, 498,
	499, 500, 501, 502, 510, 511, 526, 597, 599, 616,
	636, 643, 490, 392, 438, 462, 590, 0, 0, 308,
	309, 453, 454, 321, 322, 657, 658, 307, 611, 644,
	608, 656, 638, 447, 385, 0, 0, 388, 288, 312,
	327, 0, 628, 512, 233, 476, 297, 257, 0, 0,
	217, 252, 236, 266, 281, 284, 331, 399, 408, 437,
	443, 303, 278, 250, 469, 247, 495, 529, 530, 531,
	533, 403, 273, 442, 404, 0, 383, 586, 587, 323,
	0, 0, 0, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 277, 0, 0, 0, 0, 373, 274,
	0, 0, 210, 515, 0, 439, 0, 209, 0, 497,
	259, 384, 381, 594, 289, 280, 276, 256, 324, 393,
	436, 528, 430, 0, 377, 0, 0, 507, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 330, 254, 332,
	208, 421, 508, 293, 0, 0, 0, 0, 0, 517,
	200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 251, 0, 0, 0, 358, 367, 366,
	346, 347, 349, 351, 357, 364, 370, 343, 352, 0,
	0, 620, 0, 0, 0, 272, 328, 279, 271, 591,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 0, 410,
	264, 0, 463, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 372, 0, 337, 203, 231, 0,
	0, 420, 471, 483, 0, 0, 0, 260, 0, 481,
	434, 615, 239, 291, 468, 441, 479, 449, 294, 0,
	0, 480, 379, 596, 459, 612, 641, 642, 270, 414,
	626, 532, 634, 659, 232, 267, 428, 516, 618, 504,
	405, 592, 593, 336, 503, 302, 207, 376, 647, 230,
	489, 378, 248, 237, 598, 623, 306, 258, 296, 466,
	654, 219, 527, 609, 245, 493, 0, 0, 662, 253,
	514, 621, 610, 221, 605, 513, 401, 333, 334, 220,
	0, 467, 275, 300, 0, 0, 265, 423, 600, 601,
	263, 663, 234, 633, 226, 0, 632, 416, 595, 606,
	402, 390, 225, 604, 400, 389, 341, 362, 363, 287,
	314, 456, 382, 457, 313, 315, 412, 411, 413, 213,
	619, 637, 0, 214, 0, 509, 622, 664, 461, 218,
	240, 241, 243, 0, 286, 290, 298, 301, 310, 311,
	320, 374, 427, 455, 451, 460, 0, 589, 613, 627,
	639, 645, 646, 648, 649, 650, 651, 652, 655, 653,
	415, 318, 505, 340, 380, 0, 0, 433, 482, 246,
	617, 506, 205, 0, 0, 0, 0, 261, 262, 0,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 660, 518,
	524, 519, 520, 521, 522, 523, 0, 525, 0, 0,
	0, 0, 0, 406, 0, 602, 603, 683, 391, 496,
	614, 342, 356, 359, 348, 368, 0, 369, 344, 345,
	350, 353, 354, 355, 360, 361, 365, 371, 255, 216,
	398, 407, 588, 319, 222, 223, 224, 534, 535, 536,
	537, 630, 631, 635, 211, 472, 473, 474, 475, 299,
	625, 316, 478, 477, 338, 339, 386, 458, 550, 552,
	563, 567, 569, 571, 577, 580, 551, 553, 564, 568,
	570, 572, 578, 581, 540, 542, 544, 546, 559, 558,
	555, 583, 584, 561, 566, 545, 557, 562, 575, 582,
	579, 539, 543, 547, 556, 574, 573, 554, 565, 576,
	560, 548, 541, 549, 0, 202, 227, 375, 0, 464,
	295, 661, 629, 494, 624, 212, 229, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 206, 215, 228, 238, 242, 249, 268, 283, 285,
	292, 305, 317, 325, 326, 329, 335, 387, 394, 395,
	396, 397, 417, 418, 419, 422, 425, 426, 429, 431,
	432, 435, 440, 444, 445, 446, 448, 450, 452, 465,
	470, 484, 485, 486, 487, 488, 491, 492, 498, 499,
	500, 501, 502, 510, 511, 526, 597, 599, 616, 636,
	643, 490, 392, 438, 462, 590, 0, 0, 308, 309,
	453, 454, 321, 322, 657, 658, 307, 611, 644, 608,
	656, 638, 447, 385, 0, 0, 388, 288, 312, 327,
	0, 628, 512, 233, 476, 297, 257, 0, 0, 217,
	252, 236, 266, 281, 284, 331, 399, 408, 437, 443,
	303, 278, 250, 469, 247, 495, 529, 530, 531, 533,
	403, 273, 442, 0, 0, 383, 586, 587, 323,
}

var yyPact = [...]int{
	-1000, -1000, 7303, -1000, -542, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2563, 2732, -1000, -1000, -1000, -1000, 2752, -1000,
	1064, -1000, 2206, 2060, 2541, 4424, -1000, 56900, 805, -1000,
	53904, -446, 928, 5217, 37426, -1000, 230, -1000, 222, 55402,
	226, -1000, -1000, -1000, -1000, -446, 23195, 2406, 55, 45,
	56900, -1000, -1000, -1000, -1000, -361, 2702, 2281, -1000, 394,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53155, -1000, -1000,
	-1000, 1222, -1000, -1000, 2560, 2514, 2390, 959, 2454, -1000,
	2623, 2281, -1000, 23195, 2682, 2465, 22446, 22446, 493, -1000,
	-1000, 277, -1000, -1000, 32183, 56900, 40422, 2600, 55402, -1000,
	2541, -1000, -1000, -1000, 236, -1000, 377, 2046, -1000, 2045,
	-1000, 1098, 922, 416, 871, 868, 415, 413, 412, 411,
	410, 409, 396, 392, 430, -1000, 990, 990, -236, -245,
	2821, 494, 459, 459, 1059, 504, 2509, 2457, -1000, -1000,
	990, 990, 990, 848, 990, 990, 990, 990, 348, 346,
	990, 990, 990, 990, 990, 990, 990, 990, 990, 990,
	990, 990, 990, 990, 990, 990, 990, 837, 2541, 307,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 56900, 325, 56900, -1000, 860, 804,
	-1000, -1000, -454, 1138, 1138, 54, 1138, 1138, 1138, 1138,
	186, 1028, 38, -1000, 176, 336, 157, 331, 1112, 744,
	-1000, -1000, 291, 1112, 1886, -1000, 963, 310, 171, -1000,
	1138, 1138, -1000, 15681, 255, 15681, 15681, 308, 206, -1000,
	2536, -1000, -1000, -1000, -1000, -1000, 1375, -1000, -1000, -1000,
	-1000, -45, 503, -1000, -1000, -1000, -1000, 55402, 52406, 302,
	-1000, -1000, 46, 1942, 1480, 23195, 1371, 955, -1000, -1000,
	1402, 932, -1000, -1000, -1000, -1000, -1000, 846, -1000, 25442,
	25442, 25442, 25442, -1000, -1000, 1688, 51657, 1688, 1688, 25442,
	1688, 25442, 1688, 1688, 1688, 1688, 23195, 1688, 1688, 1688,
	1688, -1000, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, -1000, -1000, -1000, -1000, 1688, 859, 1688, 1688, 1688,
	1688, 1688, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1688,
	1688, 1688, 1688, 1688, 1688, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, -1000, -1000,
	-1000, 1712, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1687,
	1613, 1610, 1587, -1000, 20199, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1688, -1000, -1000, -1000, 56900,
	-1000, 1688, 247, 55402, 55402, 427, 1427, -1000, -1000, 2623,
	2281, -1000, 2702, 2791, 394, -1000, 4368, 1785, 1628, 1596,
	2281, 945, 2016, 56900, -1000, 2060, 243, -1000, -1000, -1000,
	-333, -372, 2332, 1585, 1860, -1000, -1000, -1000, -1000, 1960,
	23195, -1000, -1000, 2742, -1000, 29936, 857, 2737, 50908, -1000,
	493, 493, 2044, 656, 16, -1000, -1000, -1000, -1000, 1014,
	36677, -1000, -1000, -1000, -1000, -1000, 1933, 56900, -1000, -1000,
	5894, 55402, -1000, 2205, -1000, 1919, -1000, 2072, 23195, 394,
	1903, -1000, -1000, -1000, -1000, 990, 990, 990, -1000, 389,
	2681, 4424, 5899, -1000, -1000, -1000, 50159, 2204, 55402, -1000,
	2203, -1000, 1102, 866, 893, 893, 55402, -1000, -1000, 56151,
	55402, 1088, 1086, 55402, 55402, 55402, 55402, -1000, 49410, -1000,
	48661, 47912, 1426, 55402, 47163, 46414, 45665, 44916, 44167, -1000,
	2293, -1000, 2246, -1000, -1000, -1000, 56151, 55402, 55402, 56151,
	55402, 56151, 56900, 55402, -1000, -1000, 339, -1000, -1000, 1423,
	1422, 1419, 990, 990, 1417, 1852, 1833, 1831, 990, 990,
	1414, 1824, 38924, 1812, 316, 1411, 1410, 1400, 1350, 1809,
	207, 1798, 1320, 1317, 1399, 55402, 2202, 56900, -1000, 303,
	975, 1004, -1000, -1000, -1000, 1013, 2541, 2401, 2041, 501,
	800, 55402, 491, 491, 55402, -1000, -1000, 16436, 56900, 235,
	-1000, 1794, 23195, -1000, 1158, 1112, 1112, -1000, -1000, -1000,
	-1000, -1000, -1000, 1138, 56900, 1158, -1000, -1000, -1000, 1112,
	1138, 56900, 1138, 1138, 1138, 1138, 1112, 1112, 1112, 1138,
	56900, 56900, 56900, 56900, 56900, 56900, 56900, 56900, 56900, 15681,
	963, 1138, -456, -1000, 1775, -1000, -1000, -1000, 2327, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 15681, 15681, -1000, -1000, 2613, 2608, -1000, -1000,
	-1000, 2037, -1000, 220, 9, 225, -1000, 43418, 534, 1012,
	-1000, 534, -1000, -1000, -1000, -1000, -1000, 2034, 42669, -1000,
	-457, -458, -460, -462, -1000, -1000, -1000, -463, -466, -1000,
	-1000, -1000, 23195, 23195, 23195, 23195, -273, -1000, 1094, 25442,
	2502, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23195, 1204,
	1071, 25442, 25442, 25442, 25442, 25442, 25442, 25442, 26940, 26191,
	25442, 25442, 25442, 25442, 25442, 25442, -1000, -1000, 34430, 7915,
	7915, 932, 932, 932, 932, -1000, -194, 2024, 56151, -1000,
	-1000, -1000, 856, 23195, 23195, 932, -1000, 1425, 930, 20199,
	23195, 23195, 23195, 23195, 1035, 1480, 56151, 23195, -1000, 1596,
	-1000, -1000, -1000, -1000, 1252, -1000, -1000, 1108, 2481, 2481,
	2481, 2481, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 2481, 23195, 210, 210, 269, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, 18701, 23195, 23195, 25442, 23195,
	23195, 23195, 1596, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 1596, 23195, 1659, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 17946, 23195, 23195, 23195, 23195, 23195, -1000, -1000,
	-1000, -1000, -1000, -1000, 23195, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 1596, 23195, 23195, 23195, 23195, 23195, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1662, 1619,
	1633, 1688, 23195, -1000, 2018, -1000, -171, 31434, 23195, 1764,
	2733, 2255, 55402, -1000, -1000, -1000, -1000, 2623, -1000, 2623,
	1662, 4357, 2337, 22446, -1000, -1000, 4357, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1844, -1000, 320, 794, 2235, 303, 55402, 782, 537, 520,
	489, -1000, -69, 1001, 56900, 2016, 2599, -1000, 2015, -1000,
	-1000, 1688, -1000, -311, -1000, -312, 2330, 1762, 854, -1000,
	23195, 23195, 2011, -1000, 1412, 56900, -1000, -273, -1000, 41920,
	-1000, -1000, 14926, 56900, 379, 56900, -1000, 30685, 41171, 280,
	-1000, 16, 1971, -1000, 19, 5, 19450, 931, -1000, -1000,
	-1000, 2821, 27689, 1927, 931, 100, -1000, -1000, -1000, 2072,
	-1000, 2072, 2072, 2072, 2072, 854, 854, 854, 854, -1000,
	-1000, -1000, -1000, -1000, 2200, 2072, 2199, -1000, 2072, 2072,
	2072, 2072, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2189,
	2189, 2189, 2187, 2187, 2075, 2075, 457, -1000, 23195, 384,
	40422, 2556, 1382, 1719, -204, -1000, 55402, 1543, 1496, 1495,
	-1000, -521, 2004, -1000, -1000, 2678, -1000, -1000, 1048, 1147,
	1145, 1154, 55402, 258, 371, -1000, 453, -1000, 40422, 55402,
	1082, 893, 55402, -1000, 55402, -1000, -1000, -1000, -1000, -1000,
	55402, -1000, -1000, 1995, -1000, 2009, 1201, 1125, 1165, 1118,
	1995, -1000, -1000, -203, 1995, -1000, 1995, -1000, 1995, -1000,
	1995, -1000, 1995, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1036, 387, -368, 55402, 258, 500, -1000, 496,
	34430, -1000, -1000, -1000, 34430, 34430, -1000, -1000, -1000, -1000,
	1741, 1732, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -514, 56900, -1000, 263, 362, 372, 351, 56900, 330,
	2486, 2485, 2479, 2475, 2463, 2444, 2439, 288, 345, 56900,
	56900, 491, 2278, 56900, 2573, 56900, -1000, -1000, -1000, -1000,
	-1000, 1729, 1723, -1000, 1480, 56900, -1000, -1000, 1138, 1138,
	-1000, -1000, 56900, 1138, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1138, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 56900, -1000,
	-1000, -1000, -1000, 1721, -1000, 56900, -45, 217, -1000, -1000,
	55402, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-105, -1000, 257, 12, 455, -1000, -1000, -1000, -1000, -1000,
	2607, -1000, 1480, 1067, 1050, -1000, 1688, -1000, -1000, 1214,
	-1000, -1000, -1000, -1000, -1000, 1688, 1688, 1688, -1000, -1000,
	-1000, -1000, -1000, 1204, 25442, 25442, 25442, 1311, 829, 1438,
	1251, 1516, 1263, 1263, 958, 25442, 958, 25442, 933, 933,
	933, 933, 933, -1000, -1000, -1000, -1000, -1000, -1000, 1712,
	-1000, 1710, -1000, 1688, 56151, 1899, 17946, 2178, 1917, 1596,
	946, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4266, 1596, 1942, 1596, 1554, 4249, 1040, -1000, 23195,
	1596, 4237, -1000, -1000, 1596, 1596, 23195, -1000, -1000, 23195,
	23195, 23195, 23195, 1719, 1719, 1719, 1719, 1719, 1719, 1719,
	1719, 1719, 1719, 23195, 1719, 1993, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1988, 2722, 1979, 1719, 1719, 1719,
	1719, 4219, 1719, 1719, 23195, 1983, -1000, -1000, -1000, 1572,
	4214, 1420, 4200, 1719, 1719, -1000, 1719, 4196, 4191, 1596,
	3024, 3016, 1719, 1719, 1719, 1719, 1719, 3002, 2981, 1719,
	1719, 2973, 1719, 4153, 1719, 2934, 2849, 2823, 2784, 2777,
	2755, 2738, 2708, 2686, 2670, 2665, 2661, 2641, 2636, 2631,
	2597, 2592, 2570, 1719, 1719, 1719, 4138, 1719, 4074, 1719,
	4057, 1719, 1719, 4028, 2562, 2555, 1596, 1975, -1000, 4018,
	1719, 4009, 3999, 3967, 2547, 3669, 3652, 3648, 1719, 1719,
	1719, 2525, 3643, 3623, 3600, 3537, 3530, 3526, 3516, 3511,
	3489, 1719, 1633, 1633, 1633, 1633, 1633, 3483, -277, 1719,
	1596, -1000, -1000, -1000, -1000, -1000, 3475, 2517, 3465, 3440,
	3428, 3390, 1596, 1688, 851, -1000, -1000, 1633, 1596, 1596,
	1633, 1633, 3342, 3290, 3187, 3172, 3155, 3143, 1719, 1719,
	-1000, 1719, 3126, 3121, 2508, 2501, 1596, -1000, 1633, 56900,
	-1000, -445, -1000, -9, 973, 1688, -1000, 38924, 1596, -1000,
	8769, -1000, 1255, -1000, -1000, -1000, -1000, -1000, 35928, 1704,
	-1000, -1000, -1000, 489, 518, 260, 489, 303, 263, 2254,
	55402, 55402, 55402, 56900, 1045, -1000, 332, -1000, 1688, -485,
	21697, -1000, -1000, -1000, 854, 71, 35179, 915, 915, 166,
	1480, 1480, 23195, -1000, -1000, -1000, -1000, -1000, -1000, 842,
	2710, 540, 1688, -1000, 2033, 2339, -1000, -1000, -1000, 2596,
	28438, -1000, -1000, 1688, 1688, 56900, 2010, 2001, -1000, 840,
	-1000, 1433, 1971, 16, 2, -1000, -1000, -1000, -1000, 1480,
	-1000, 1475, 388, 2969, -1000, 456, -1000, -1000, -1000, -1000,
	2428, 82, -1000, -1000, -1000, 852, 854, -1000, -1000, -1000,
	-1000, -1000, -1000, 1686, -1000, 1686, -1000, -1000, -1000, -1000,
	-1000, 1380, -1000, -1000, -1000, -1000, 1377, -1000, -1000, 1376,
	-1000, -1000, 3076, 2267, 384, -1000, -1000, 990, 1680, -1000,
	-1000, 2431, 990, 990, 55402, -1000, -1000, 1885, 2556, -1000,
	-41, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -526, 167,
	581, -1000, -1000, -1000, 5473, 55402, 1897, -1000, 256, -1000,
	1851, -1000, 55402, -1000, 1895, 2101, 55402, 55402, -1000, -1000,
	-1000, 55402, 1688, -1000, -1000, -1000, -1000, 792, 2538, 341,
	-1000, -1000, -301, -1000, -1000, 258, 256, 56151, 55402, 931,
	-1000, -1000, -1000, -1000, -1000, -522, 1877, 517, 56900, 56900,
	56900, 56900, 56900, 56900, 824, -1000, -1000, 29, -1000, -1000,
	241, -1000, -1000, 1667, -1000, -1000, -1000, -1000, 241, -1000,
	-1000, -1000, -1000, -1000, 329, 495, -1000, 56900, 56900, 947,
	-1000, -1000, -1000, -1000, -1000, 1112, -1000, -1000, 1112, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2527, 56900, 1, -482, -1000, -479, 23195, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1194, 828, 1438, 25442, 25442,
	930, 930, 25442, -1000, -1000, -1000, 1150, 1150, 34430, -1000,
	25442, 23195, -1000, -1000, 23195, 23195, 23195, 1019, -1000, 23195,
	1476, -1000, 23195, -1000, -277, 1633, 1719, 1719, 1719, 1719,
	-277, -277, -277, -277, -277, -277, -277, -277, -277, -277,
	1964, -1000, 23195, 23195, 23195, 1596, 300, -1000, -1000, -1000,
	-277, 23195, -1000, -1000, 2718, -1000, 23195, -1000, 34430, 23195,
	23195, 23195, -1000, -1000, -1000, 23195, 23195, -1000, -1000, 23195,
	-1000, 23195, -1000, -1000, -1000, -1000, -1000, -1000, 23195, -1000,
	23195, -1000, -1000, -1000, 23195, -1000, 23195, -1000, -1000, 23195,
	-1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195,
	-1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195,
	-1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195,
	-1000, 23195, -1000, 23195, -1000, -1000, -1000, 23195, -1000, 23195,
	-1000, 23195, -1000, -1000, 23195, -1000, 23195, -1000, 23195, -1000,
	23195, 23195, -1000, 23195, 23195, 23195, -1000, 23195, 23195, 23195,
	23195, -1000, -1000, -1000, -1000, 23195, 23195, 23195, 23195, 23195,
	23195, 23195, 23195, 23195, 23195, -1000, -1000, -1000, -1000, -1000,
	-1000, 23195, -1000, 40422, 14, -277, 1659, 14, 1659, 24693,
	865, 853, 23944, -1000, 23195, 17191, -1000, -1000, -1000, -1000,
	-1000, 23195, 23195, 23195, 23195, 23195, 23195, -1000, -1000, -1000,
	23195, 23195, -1000, 23195, -1000, 23195, -1000, -1000, -1000, -1000,
	-1000, 973, -1000, 845, 844, 893, 55402, -1000, -1000, -1000,
	-1000, 1969, -1000, 2612, -1000, 2346, 2345, 2717, 2710, 22446,
	-1000, 30685, 56900, 56900, 279, 56900, 263, 516, 2276, -1000,
	2254, 2254, 2254, -1000, 2571, -1000, 2091, 1362, -1000, -1000,
	-1000, -1000, -1000, -436, -1000, 2397, 2523, 915, 915, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14171, 2623, 23195, 2274,
	56151, 1688, -1000, 29187, 55402, 56151, 30685, 30685, 30685, 30685,
	30685, -1000, 2320, 2317, -1000, 2303, 2290, 2316, 56900, -1000,
	1662, 1870, -1000, 23195, 32932, 1916, 30685, -1000, -1000, 30685,
	56900, 13416, -1000, -1000, -2, -18, -1000, -1000, -1000, -1000,
	2821, -1000, -1000, 1379, 2595, 2416, -1000, -1000, -1000, -1000,
	-1000, 1857, -1000, 1850, 1965, 1842, 1839, 387, -1000, 2230,
	2520, 990, 990, -1000, 1363, -1000, 1425, 1664, 1660, -1000,
	-1000, -1000, 454, -1000, -1000, -536, 1361, 2089, 2222, 23195,
	2076, 2676, 1949, 55402, -1000, -1000, 56151, -1000, 313, -1000,
	384, 55402, -1000, -1000, -1000, 371, 56900, -1000, 7611, -1000,
	-1000, -1000, 256, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	56900, 2240, -1000, -1000, -1000, -1000, -1000, 254, 202, 1658,
	237, 1635, -1000, 237, -1000, 56900, 921, 2267, 56900, -1000,
	-1000, -1000, 1138, 1138, -1000, -1000, 2518, -1000, 1425, 1719,
	25442, 25442, -1000, 932, -1000, -1000, 436, -255, 2072, 2072,
	-1000, 2072, 2075, -1000, 2072, 197, 2072, 149, 2072, -1000,
	-1000, 1596, 1596, -1000, 1633, 2464, 2493, 3114, -1000, 1480,
	23195, 3110, -1000, -1000, -277, -277, -277, -277, -277, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -79,
	3097, 3082, 1719, -1000, 2070, 2068, -1000, 1719, 23195, 1719,
	1596, 2456, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719,
	1719, 1719, 1719, 1719, 2438, 2427, 2393, 2386, 2375, 2362,
	2358, 2343, 2338, 2331, 2314, 2292, 2288, 2013, 2005, 1966,
	1719, 1719, 1930, 1719, 1926, 1884, -1000, 1480, 1633, 3070,
	1633, 1719, 1719, 3060, 327, 1719, 1807, 1807, 1807, 1807,
	1807, 1633, 1633, 1633, 1633, 1719, 55402, -1000, -277, -1000,
	-1000, -321, -379, -1000, 1596, -277, 1962, 25442, 1719, 25442,
	25442, 25442, 1719, 1596, -1000, 1880, 1855, 3048, 1816, 1719,
	2712, 1719, 1719, 1719, 1772, -1000, 2606, 1688, 2606, 1688,
	2606, 1803, 1255, 56900, -1000, -1000, -1000, -1000, 2710, 2700,
	-1000, 1958, 1688, -1000, -1000, -1000, -1000, -1000, 515, 56900,
	56900, 2271, 2270, 2269, -1000, 1808, -1000, -1000, 71, 616,
	-1000, 2420, 2523, -1000, 2672, 2381, 2664, -1000, -1000, -1000,
	-1000, -1000, 1480, -1000, 2548, 1935, -1000, 1000, 1760, -1000,
	-1000, 21697, 1805, 2340, 839, 1803, 1959, 2339, 2243, 2266,
	3431, -1000, -1000, -1000, -1000, 2312, -1000, 2277, -1000, -1000,
	2060, -1000, 2566, 379, 30685, 1936, 1936, -1000, 835, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1163, 7611, 2769, -1000,
	1629, -1000, 1453, 212, 1355, -1000, -1000, 990, 990, -1000,
	1081, 1078, -1000, 56900, 2067, -1000, 854, 1621, 854, 1336,
	-1000, -1000, 1316, -1000, -1000, -1000, -1000, 2032, 2285, -1000,
	-1000, -1000, -1000, 273, 2064, 2663, -1000, 23195, 2061, 999,
	3007, 55402, 55402, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 462, 990, -497, 343, 342, 990,
	990, 990, -537, -1000, -1000, 1793, 1789, -1000, -233, -1000,
	23195, -1000, -1000, -1000, -1000, -1000, 1368, 1368, 1613, 1610,
	1587, -1000, 2060, -209, 55402, 55402, 55402, 55402, -1000, -1000,
	-1000, 1227, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 932, 1596, 408, -211, 1596, -1000,
	-1000, 854, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 23195, -1000, 23195, -1000, 23195, 1480, 23195, -1000,
	-1000, -1000, -1000, -1000, 2623, 1583, 23195, 23195, -1000, 1312,
	1307, -277, 1719, -1000, -1000, -1000, 23195, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000,
	23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000,
	23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000, 23195, -1000,
	23195, -1000, -1000, 23195, -1000, -1000, -1000, 23195, -1000, 23195,
	-1000, 23195, -1000, -1000, -1000, 23195, 294, 1150, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1596,
	376, -1000, -1000, -1000, 2716, -1000, 1596, 23195, 930, -1000,
	930, 930, 930, -1000, -1000, -1000, 23195, -1000, 23195, 23195,
	-1000, 23195, -1000, 23195, -1000, -1000, -1000, -1000, 23195, 1688,
	2355, 39673, 1688, 39673, 1688, 32932, -1000, -1000, 2700, 2693,
	2660, 289, 56900, -1000, -1000, 56900, 56900, 56900, -1000, 2364,
	2367, 2367, 2420, -1000, 2656, 2654, -1000, 1580, 2652, 1578,
	1060, -1000, 56151, 23195, -1000, 1688, 38924, -1000, 404, 55402,
	1688, 55402, -1000, 2684, -1000, -1000, 23195, 2059, -1000, 23195,
	-1000, -1000, -1000, -1000, 7915, 2710, 1936, -1000, -1000, 943,
	-1000, 23195, -1000, 4684, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1542, 1532, -1000, -1000, 2056, 23195, -1000,
	-1000, -1000, 1790, 1709, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 371, -531, 2987, 55402, 1280, -1000,
	1774, 1949, 366, 1688, 1512, 990, 990, 990, 1266, 1261,
	38924, 1769, -1000, 55402, 405, -1000, 371, -1000, -246, -248,
	1719, -1000, -1000, 2587, -1000, 17191, -1000, -1000, 2055, 2250,
	-1000, -1000, -1000, -1000, 2300, -197, -216, -1000, -1000, 1719,
	1719, 1719, 1638, 1596, -1000, 1719, 1719, 1705, 1674, -1000,
	-1000, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719,
	1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719, 1719,
	1719, 1633, 1753, -1000, 294, 1596, 2264, -1000, -1000, 7915,
	-1000, -1000, 2684, 2637, 14, -1000, -1000, 274, 14, 1480,
	1032, 1596, 1596, 1032, 1708, 1719, 1690, 1685, 1719, 1719,
	33681, -1000, 2630, 2627, 1740, -1000, -1000, 39673, 1740, 39673,
	973, 2693, -285, 23195, 23195, 1758, -1000, 55402, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2353, 1325, -1000, -1000, -1000,
	-1000, 1472, 1468, -1000, 1459, -1000, 2764, -1000, 1480, -1000,
	1688, 1688, -1000, 831, 1760, -1000, 2623, 1480, 55402, 1480,
	74, 2684, -1000, 1719, -1000, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688, 1688,
	1688, 1688, 1688, 1688, 1688, 1688, -1000, -1000, 55402, 2703,
	-1000, -1000, 1756, 165, -1000, 1634, 1949, -1000, -1000, 920,
	-1000, 23195, -1000, 38924, 1452, 1449, -1000, -1000, -1000, -1000,
	-537, -1000, -1000, -1000, -1000, -1000, -1000, 394, 1947, -1000,
	985, 55402, 56900, -1000, 2299, -1000, -1000, -1000, -1000, 23195,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 23195, -1000, 1596,
	2263, -1000, -365, -1000, -503, 23195, -277, -1000, -1000, -277,
	-1000, -1000, -1000, -1000, -1000, 23195, -1000, -1000, 23195, -1000,
	23195, -1000, -1000, 1740, -1000, -1000, -1000, 38175, -1000, 1740,
	-1000, 1740, -1000, -285, -1000, 1946, -1000, 55402, 1480, 390,
	7159, 289, 5894, -1000, 1284, -1000, -1000, -1000, -1000, -1000,
	56151, 55402, 1760, 55402, -1000, -1000, 1727, 1596, 1688, 2623,
	-1000, 1716, -1000, -1000, 2052, 2222, -1000, -1000, -1000, 20948,
	-1000, -1000, -1000, -1000, -1000, 292, -204, 17191, 12661, 1671,
	-1000, -205, 1719, 1633, -1000, -470, -1000, -1000, -1000, -1000,
	306, -1000, -1000, 1942, -1000, -1000, 1678, 1673, 1624, -1000,
	-1000, -1000, -1000, -1000, -1000, -285, -1000, -1000, 2579, -1000,
	-250, -1000, -543, -1000, -1000, 7159, 23195, -1000, -1000, -1000,
	-1000, 1938, 1618, -1000, -1000, -1000, 32932, 54653, -1000, -189,
	334, 23195, 2050, 1596, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 826, -1000, -1000, -1000, 2240, -232,
	-1000, -1000, -1000, 6748, -487, -296, -318, 25442, -1000, 23195,
	-1000, 23195, -1000, 23195, -1000, 55402, 1688, -1000, -1000, 1016,
	7159, -1000, -543, 1407, -1000, -1000, 1595, -1000, 4232, -389,
	2261, -1000, -98, -1000, -1000, -1000, 1157, 1409, -1000, 1253,
	-1000, -1000, -1000, -1000, 2529, 55402, -1000, 16436, -209, -228,
	1041, -1000, -1000, -1000, -1000, -1000, 930, 1519, 1458, 1719,
	-1000, 55402, -1000, -1000, 7159, -1000, 54653, -384, 931, 7915,
	-1000, 2258, 2247, 2714, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -539, 1591, -1000, -1000, -1000, 6748, -328, -1000, 23195,
	-1000, 23195, -1000, 1596, 6996, -1000, -1000, 2559, 74, -1000,
	2749, -1000, 2746, 1017, 1017, -1000, 1247, -539, -1000, -1000,
	-1000, 1719, 1719, -1000, 1030, 1026, -1000, 23195, -390, -1000,
	-1000, -1000, -1000, -1000, 431, 1331, -1000, -1000, -1000, -1000,
	-1000, 974, 7159, -1000, 1358, 7915, -1000, -1000, -1000, 469,
	7159, 7159, 295, -1000, 7159, 295, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3455, 3454, 37, 9, 45, 44, 2795, 3451, 3450,
	3448, 180, 3447, 3442, 3440, 3439, 3424, 3421, 198, 194,
	187, 3416, 3415, 3413, 3412, 3409, 3402, 3400, 3398, 3396,
	49, 105, 14, 107, 221, 227, 3395, 3392, 48, 172,
	211, 3390, 3380, 3374, 3372, 3370, 121, 205, 87, 92,
	209, 3368, 3364, 81, 3360, 3357, 3353, 202, 201, 199,
	1125, 3352, 193, 123, 54, 3351, 3347, 3345, 3344, 41,
	5, 3334, 1, 3332, 7, 3324, 3323, 3322, 3320, 3317,
	3316, 3307, 3306, 3304, 3302, 3300, 3297, 3293, 3291, 3290,
	3287, 3280, 314, 3278, 3275, 36, 3273, 83, 3272, 3271,
	3264, 3262, 3261, 12, 3260, 3259, 19, 89, 69, 3258,
	3256, 58, 3255, 3254, 3249, 3247, 3246, 26, 3245, 30,
	3244, 47, 3242, 3241, 133, 3240, 3236, 3234, 50, 3227,
	3221, 3220, 25, 177, 3219, 3218, 173, 3211, 3209, 3207,
	183, 224, 3205, 2386, 3202, 113, 3200, 3198, 3196, 175,
	174, 214, 3194, 103, 3182, 3181, 3175, 144, 3168, 3167,
	599, 3165, 3164, 66, 70, 223, 3154, 3153, 166, 15,
	79, 3152, 18, 21, 3151, 3148, 64, 80, 3145, 122,
	3141, 3139, 114, 71, 3138, 109, 99, 3135, 3133, 22,
	11, 3132, 6, 8, 2, 67, 3131, 3124, 118, 3123,
	3122, 3119, 97, 3109, 3107, 4416, 3106, 95, 146, 115,
	72, 3100, 184, 116, 3096, 3095, 3094, 3093, 3081, 3073,
	57, 3072, 3071, 3068, 157, 200, 119, 3063, 3058, 151,
	373, 137, 55, 139, 3053, 196, 3045, 156, 84, 3044,
	178, 3043, 3040, 152, 149, 3037, 3036, 61, 182, 206,
	3025, 106, 136, 129, 145, 96, 147, 3021, 3018, 62,
	78, 3017, 3009, 3008, 3001, 179, 3000, 2998, 75, 2996,
	60, 2995, 181, 2994, 142, 65, 2993, 189, 186, 2990,
	76, 2989, 2987, 74, 101, 73, 40, 2983, 167, 170,
	134, 185, 2982, 2975, 59, 2972, 2966, 2959, 204, 317,
	2957, 2943, 383, 190, 153, 141, 93, 2941, 212, 2936,
	2929, 2927, 35, 5337, 7351, 203, 31, 169, 2926, 2924,
	8504, 110, 52, 34, 2922, 210, 2921, 143, 2918, 2914,
	2912, 213, 208, 128, 168, 63, 2909, 2907, 2905, 2903,
	24, 2901, 2900, 2899, 2898, 2897, 2895, 43, 42, 39,
	100, 230, 68, 16, 98, 171, 162, 77, 2892, 2890,
	2889, 131, 91, 2888, 165, 164, 132, 176, 2886, 188,
	154, 124, 2885, 108, 38, 2884, 2883, 2879, 2878, 94,
	2877, 2876, 2875, 2872, 159, 155, 130, 85, 2870, 86,
	111, 160, 161, 56, 2869, 53, 2866, 2862, 32, 207,
	46, 2860, 2850, 33, 2848, 23, 117, 125, 2847, 6871,
	2845, 28, 236, 163, 2843, 2840, 10, 13, 20, 2838,
	2837, 2833, 2831, 148, 2830, 2829, 2828, 2824, 29, 51,
	27, 4, 120, 158, 82, 2822, 2819, 192, 2806, 2803,
	2801, 0, 2629, 135, 2793, 215,
}

//line sql.y:9001
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) compoundStatementUnion() CompoundStatement {
	v, _ := st.union.(CompoundStatement)
	return v
}

func (st *yySymType) compoundStatementsUnion() CompoundStatements {
	v, _ := st.union.(CompoundStatements)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createProcedureUnion() *CreateProcedure {
	v, _ := st.union.(*CreateProcedure)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) createViewUnion() *CreateView {
	v, _ := st.union.(*CreateView)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) elseIfUnion() *ElseIfBlock {
	v, _ := st.union.(*ElseIfBlock)
	return v
}

func (st *yySymType) elseIfsUnion() []*ElseIfBlock {
	v, _ := st.union.([]*ElseIfBlock)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() []Expr {
	v, _ := st.union.([]Expr)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) procParamUnion() *ProcParameter {
	v, _ := st.union.(*ProcParameter)
	return v
}

func (st *yySymType) procParamModeUnion() ProcParameterMode {
	v, _ := st.union.(ProcParameterMode)
	return v
}

func (st *yySymType) procParamsUnion() []*ProcParameter {
	v, _ := st.union.([]*ProcParameter)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() *SelectExprs {
	v, _ := st.union.(*SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) tableStmtUnion() TableStatement {
	v, _ := st.union.(TableStatement)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 439, 440, 440, 8, 8, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 69, 69, 69, 70, 68, 68, 71, 71,
	72, 72, 73, 73, 76, 76, 75, 75, 74, 280,
	409, 278, 278, 29, 87, 38, 38, 37, 37, 40,
	40, 39, 32, 32, 32, 33, 33, 33, 33, 33,
	33, 33, 33, 34, 34, 34, 34, 34, 30, 30,
	30, 30, 31, 31, 31, 31, 31, 36, 36, 16,
	17, 35, 35, 35, 18, 18, 122, 122, 19, 20,
	20, 20, 20, 443, 443, 200, 200, 198, 198, 199,
	199, 283, 283, 21, 287, 287, 289, 289, 289, 289,
	279, 279, 279, 22, 22, 288, 288, 290, 290, 290,
	293, 293, 293, 293, 334, 334, 334, 23, 23, 23,
	23, 23, 23, 142, 411, 411, 410, 405, 405, 404,
	404, 403, 408, 408, 407, 407, 406, 43, 42, 44,
	44, 44, 45, 54, 54, 54, 54, 55, 56, 412,
	412, 375, 61, 61, 60, 60, 60, 60, 60, 60,
	62, 62, 58, 58, 57, 57, 59, 59, 377, 377,
	363, 363, 376, 376, 376, 376, 376, 376, 376, 362,
	362, 154, 154, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	427, 427, 427, 427, 426, 426, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 164, 164, 176, 176, 176,
	176, 176, 176, 162, 162, 163, 161, 161, 161, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 431, 431, 431, 431, 175, 175, 170,
	170, 170, 172, 172, 171, 171, 171, 173, 173, 428,
	428, 428, 428, 340, 340, 340, 340, 343, 343, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 342, 342,
	342, 342, 342, 342, 342, 344, 344, 344, 344, 344,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 346, 346, 346,
	346, 346, 346, 346, 346, 361, 361, 350, 350, 355,
	355, 356, 356, 357, 357, 357, 358, 358, 358, 359,
	359, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	354, 354, 353, 353, 353, 364, 389, 389, 388, 388,
	386, 386, 386, 386, 386, 386, 386, 386, 373, 373,
	383, 383, 383, 383, 383, 372, 372, 368, 368, 368,
	369, 369, 370, 370, 367, 367, 371, 371, 385, 385,
	384, 384, 365, 365, 366, 366, 391, 429, 429, 429,
	429, 429, 430, 430, 392, 419, 421, 421, 421, 420,
	420, 417, 418, 416, 416, 416, 416, 416, 97, 97,
	97, 306, 306, 307, 307, 381, 381, 380, 380, 380,
	382, 382, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 301, 301, 301, 415, 415, 415, 415,
	415, 415, 414, 414, 414, 378, 378, 378, 378, 413,
	413, 63, 63, 238, 238, 432, 432, 434, 434, 434,
	51, 51, 51, 51, 51, 51, 50, 50, 50, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	52, 52, 47, 47, 47, 47, 47, 47, 47, 47,
	47, 47, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 124, 124, 125, 125,
	125, 125, 127, 127, 127, 394, 394, 64, 64, 3,
	3, 188, 190, 191, 191, 189, 189, 189, 189, 189,
	189, 66, 66, 65, 65, 193, 192, 194, 194, 194,
	1, 1, 2, 2, 4, 4, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 360, 360,
	360, 393, 393, 395, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 130, 129, 129, 128, 131, 131,
	131, 131, 131, 131, 131, 131, 397, 397, 397, 67,
	67, 398, 347, 348, 349, 5, 6, 374, 396, 138,
	138, 25, 41, 41, 26, 26, 26, 26, 27, 27,
	77, 80, 80, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 311,
	311, 300, 300, 309, 309, 299, 299, 325, 325, 325,
	302, 302, 302, 303, 303, 425, 425, 425, 296, 296,
	79, 79, 79, 326, 326, 326, 326, 82, 82, 435,
	435, 436, 436, 437, 437, 437, 83, 84, 84, 329,
	329, 330, 330, 85, 86, 98, 98, 98, 98, 98,
	99, 99, 99, 99, 99, 99, 123, 123, 123, 11,
	11, 11, 11, 94, 94, 94, 10, 10, 12, 81,
	81, 88, 422, 422, 423, 424, 424, 424, 424, 89,
	91, 28, 28, 28, 28, 28, 28, 148, 148, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 143, 143, 143, 137, 137, 444, 92, 93, 93,
	141, 141, 141, 134, 134, 134, 140, 140, 140, 13,
	13, 14, 282, 282, 15, 15, 147, 147, 146, 146,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 144, 144, 145, 145, 145, 145, 318, 318, 318,
	317, 317, 182, 182, 184, 183, 183, 185, 185, 186,
	186, 186, 186, 236, 236, 208, 208, 275, 275, 276,
	276, 274, 274, 281, 281, 277, 277, 277, 277, 284,
	284, 187, 187, 187, 187, 195, 195, 196, 196, 197,
	197, 328, 328, 323, 323, 323, 322, 322, 201, 201,
	201, 203, 202, 202, 202, 202, 204, 204, 206, 206,
	205, 205, 207, 212, 212, 211, 211, 209, 209, 209,
	209, 209, 209, 210, 210, 210, 210, 213, 213, 160,
	160, 160, 160, 160, 160, 160, 160, 433, 433, 174,
	174, 174, 174, 174, 174, 174, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 265, 265, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 241,
	241, 240, 240, 100, 100, 100, 101, 101, 102, 102,
	102, 102, 102, 103, 103, 103, 103, 103, 103, 103,
	105, 105, 104, 104, 227, 227, 315, 315, 106, 107,
	107, 108, 108, 111, 111, 110, 109, 109, 115, 115,
	112, 112, 114, 114, 113, 116, 116, 117, 118, 118,
	297, 297, 214, 214, 223, 223, 223, 223, 215, 215,
	216, 216, 216, 216, 216, 216, 224, 224, 224, 235,
	225, 225, 221, 221, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 179, 179,
	179, 179, 246, 246, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 167,
	167, 180, 180, 180, 180, 181, 181, 181, 181, 181,
	181, 181, 336, 336, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 445, 445, 351, 351, 351, 222, 222, 222,
	222, 222, 139, 139, 139, 139, 139, 333, 333, 333,
	337, 337, 337, 335, 335, 335, 335, 335, 335, 335,
	335, 335, 335, 335, 335, 335, 335, 335, 338, 338,
	244, 244, 135, 135, 242, 242, 243, 245, 245, 237,
	237, 237, 237, 239, 239, 218, 218, 218, 247, 247,
	339, 339, 248, 248, 119, 120, 120, 121, 121, 249,
	249, 251, 250, 250, 252, 253, 253, 253, 254, 254,
	255, 255, 255, 53, 53, 53, 53, 53, 48, 48,
	48, 48, 49, 49, 49, 49, 150, 150, 151, 151,
	151, 153, 153, 152, 152, 95, 95, 96, 96, 96,
	402, 402, 400, 401, 401, 401, 157, 157, 158, 159,
	159, 159, 155, 155, 156, 156, 272, 272, 272, 272,
	272, 272, 272, 256, 256, 256, 263, 263, 263, 259,
	259, 261, 261, 261, 262, 262, 262, 260, 269, 269,
	271, 271, 270, 270, 266, 266, 267, 267, 268, 268,
	268, 264, 264, 217, 217, 217, 217, 217, 273, 273,
	273, 273, 327, 327, 327, 285, 285, 228, 228, 229,
	229, 233, 233, 232, 232, 230, 231, 234, 234, 178,
	286, 286, 294, 291, 291, 292, 292, 319, 319, 319,
	295, 295, 308, 308, 304, 304, 305, 305, 298, 298,
	310, 310, 310, 90, 226, 226, 390, 390, 387, 314,
	314, 316, 316, 320, 320, 324, 324, 321, 321, 9,
	438, 438, 438, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 441, 442, 331, 332, 332, 332,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 8, 2, 1, 1, 0, 1,
	1, 2, 0, 2, 0, 1, 2, 1, 4, 1,
	1, 1, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 3, 3, 5,
	7, 10, 9, 1, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	6, 5, 2, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 10, 6, 6,
	8, 7, 4, 7, 8, 8, 8, 5, 3, 1,
	1, 5, 0, 1, 1, 1, 1, 2, 2, 2,
	0, 1, 4, 4, 4, 4, 4, 4, 2, 4,
	1, 3, 1, 1, 3, 4, 3, 3, 3, 5,
	10, 0, 2, 0, 2, 3, 5, 3, 4, 2,
	3, 2, 3, 3, 3, 3, 2, 2, 4, 4,
	1, 1, 1, 1, 1, 1, 0, 2, 2, 3,
	3, 2, 3, 2, 2, 1, 1, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 5, 2, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 1, 3, 0, 3, 5, 0, 1, 1, 0,
	1, 0, 3, 3, 2, 2, 2, 1, 2, 2,
	0, 1, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 1, 1, 3, 3, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 4, 3, 1, 3, 1, 7, 6, 7, 7,
	8, 8, 0, 1, 5, 2, 1, 1, 1, 0,
	1, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	1, 1, 2, 0, 1, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 2, 0, 2, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 5, 5,
	4, 4, 4, 6, 5, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 3, 3, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 6, 10, 7, 5,
	5, 5, 5, 7, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 5, 5, 6, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	4, 5, 5, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	2, 4, 4, 4, 4, 4, 2, 3, 3, 3,
	3, 3, 5, 2, 3, 3, 2, 3, 4, 4,
	4, 3, 4, 4, 5, 3, 5, 3, 5, 0,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 1, 1, 1, 1, 3, 0,
	1, 1, 3, 3, 2, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 4, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 5, 5, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 6, 1, 1, 3,
	4, 3, 4, 4, 4, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 5, 5, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 7,
	7, 6, 6, 2, 2, 5, 6, 3, 3, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 4, 2, 4,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 1, 0, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 8, 6, 8,
	6, 5, 4, 10, 2, 2, 1, 2, 2, 2,
	2, 2, 5, 6, 6, 6, 6, 6, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 8, 4,
	8, 8, 6, 5, 4, 4, 4, 5, 7, 4,
	4, 7, 4, 4, 6, 6, 6, 8, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 6, 4,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	4, 4, 4, 6, 4, 6, 4, 4, 6, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	4, 4, 6, 4, 6, 4, 8, 6, 4, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 5, 9, 6, 9, 8, 6,
	8, 8, 8, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 6, 6, 4, 6, 4,
	6, 8, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 5, 1, 1, 1, 2, 2, 0, 4,
	0, 2, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 1, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	1, 3, 3, 1, 1, 1, 0, 1, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 3, 4, 2,
	3, 4, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 3, 1, 6, 5, 4, 1, 3,
	3, 5, 0, 2, 5, 0, 5, 1, 3, 1,
	3, 1, 3, 1, 2, 3, 4, 1, 1, 1,
	1, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -439, -92, -444, -8, -7, -30, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -27, -77,
	-80, -78, -79, -82, -83, -84, -85, -86, -10, -12,
	-81, -28, -29, -87, -88, -89, -90, -91, -13, -14,
	-15, -9, -33, -32, -31, 13, 14, -122, -37, 35,
	-42, -43, -54, -44, -55, -45, 242, -56, 244, 243,
	281, 245, 398, 274, 83, 331, 332, 334, 335, 336,
	337, -123, 711, 279, 280, 247, 39, 51, 36, 37,
	40, 251, 287, 288, 250, 145, -34, -38, 12, -441,
	15, 488, 241, 276, 275, 31, -35, 598, 95, -36,
	63, -93, -440, 759, -272, -256, 26, 36, 32, -255,
	-251, -141, -256, 24, 22, 11, -92, -92, -92, 16,
	17, -92, -375, -377, 95, 174, 95, -275, 95, -61,
	-60, -58, -57, -59, -62, 34, -51, -52, -399, -50,
	-47, 246, 243, 291, 135, 136, 281, 282, 283, 245,
	265, 280, 284, 279, 300, -46, 90, 36, 598, 601,
	-382, 242, 248, 249, 244, 489, 138, 137, 84, -379,
	393, 632, 729, -62, 731, 110, 113, 730, 50, 255,
	732, 733, 734, 639, 735, 264, 736, 737, 738, 739,
	745, 680, 746, 747, 748, 139, 11, -92, -324, -320,
	100, -313, 595, 267, 630, 442, 631, 316, 90, 47,
	42, 534, 605, 389, 393, 632, 519, 729, 399, 331,
	349, 343, 524, 525, 526, 372, 364, 596, 633, 606,
	319, 268, 304, 723, 362, 149, 731, 323, 634, 282,
	400, 401, 635, 402, 110, 334, 439, 744, 322, 636,
	742, 113, 730, 339, 88, 518, 57, 726, 327, 50,
	277, 447, 448, 360, 250, 356, 732, 305, 637, 608,
	298, 138, 135, 751, 39, 352, 56, 33, 741, 137,
	55, 733, 165, 638, 734, 639, 404, 379, 717, 54,
	405, 283, 640, 93, 288, 600, 328, 725, 406, 539,
	353, 407, 315, 740, 247, 641, 326, 706, 698, 699,
	408, 409, 718, 384, 380, 385, 541, 642, 431, 523,
	410, 702, 703, 758, 58, 643, 644, 719, 136, 645,
	87, 735, 89, 347, 348, 646, 313, 266, 544, 545,
	433, 376, 501, 127, 508, 509, 120, 121, 504, 122,
	510, 123, 128, 511, 512, 513, 502, 124, 117, 503,
	514, 515, 377, 378, 125, 516, 119, 118, 505, 507,
	126, 517, 264, 38, 411, 597, 317, 64, 321, 292,
	434, 52, 382, 755, 51, 713, 546, 647, 716, 375,
	371, 498, 692, 59, 648, 649, 650, 651, 520, 736,
	374, 346, 370, 750, 4, 310, 493, 521, 737, 68,
	249, 387, 386, 388, 299, 430, 367, 652, 653, 654,
	271, 91, 655, 357, 25, 656, 657, 412, 306, 658,
	62, 659, 660, 437, 280, 661, 60, 738, 693, 45,
	662, 285, 752, 739, 663, 664, 665, 712, 666, 287,
	667, 414, 668, 700, 701, 413, 381, 383, 547, 294,
	415, 398, 694, 252, 599, 669, 329, 351, 284, 743,
	670, 272, 535, 536, 537, 538, 724, 543, 542, 286,
	291, 279, 438, 273, 671, 672, 673, 674, 675, 320,
	691, 676, 677, 335, 603, 745, 499, 49, 678, 679,
	680, 681, 682, 314, 309, 432, 441, 67, 92, 395,
	683, 684, 722, 345, 340, 43, 307, 99, 479, 481,
	482, 483, 484, 485, 480, 487, 685, 332, 61, 746,
	747, 748, 301, 749, 527, 528, 529, 530, 13, 581,
	564, 592, 565, 582, 566, 575, 567, 583, 591, 593,
	548, 556, 549, 557, 587, 570, 584, 576, 569, 568,
	590, 573, 577, 550, 558, 588, 574, 551, 559, 552,
	560, 553, 561, 586, 585, 578, 589, 554, 562, 580,
	555, 563, 579, 571, 572, 450, 756, 757, 522, 417,
	695, 139, 311, 312, 53, 368, 293, 686, 324, 687,
	358, 359, 495, 496, 373, 344, 369, 146, 709, 333,
	342, 707, 295, 418, 500, 281, 688, 440, 308, 390,
	131, 341, 396, 325, 604, 540, 300, 419, 721, 602,
	531, 532, 366, 363, 302, 533, 689, 391, 711, 420,
	256, 296, 297, 690, 708, 421, 422, 318, 423, 424,
	425, 426, 427, 429, 330, 428, 710, 704, 705, 303,
	478, 601, 338, 361, 397, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 497, 254, -92, 254, -205, -320, -143,
	713, 715, 193, -291, 401, -309, 403, 416, 411, 421,
	409, -300, 412, 414, 294, -425, 431, 254, 418, 241,
	404, 413, 422, 423, 318, 429, 424, 330, 428, 303,
	425, 426, 427, -409, 193, 734, 749, 333, 341, 149,
	365, 408, 406, 432, 713, 100, -326, 100, 101, 102,
	-313, 333, -329, 338, -314, -409, -313, 336, -92, -92,
	-331, -331, -143, -225, -160, 157, -174, -280, -177, 101,
	-165, -168, -219, -220, -221, -222, -175, -239, -278, 182,
	183, 190, 158, -235, -178, 29, 594, 490, 489, 193,
	34, 236, 77, 78, 492, 493, 160, 63, 15, 455,
	456, -176, 445, 446, 457, 451, 452, 518, 520, 521,
	522, 519, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 523, 534, 495, 496, 129, 497, 117, 119,
	118, 127, 128, 498, 499, 500, 362, 546, 547, 541,
	544, 545, 543, 542, 377, 378, 501, 564, 565, 569,
	568, 566, 567, 570, 573, 574, 575, 576, 577, 578,
	580, 579, 571, 572, 549, 548, 550, 551, 552, 553,
	554, 555, 557, 556, 558, 559, 560, 561, 562, 563,
	581, 582, 583, 584, 585, 587, 586, 591, 590, 588,
	589, 593, 592, 502, 503, 120, 121, 122, 123, 124,
	125, 126, 504, 507, 505, 506, 508, 509, 510, 515,
	516, 511, 512, 513, 514, 517, 388, 386, 387, 383,
	382, 381, -102, -115, 621, 620, -116, 442, 447, 448,
	450, -166, -167, -180, -181, -314, -320, 259, 444, 253,
	188, 488, -169, -163, -237, 116, 102, -32, -234, 443,
	453, 454, 458, 449, 459, 607, 609, 624, 625, 627,
	612, 617, 616, 619, 535, 536, 537, 538, 539, 540,
	698, 699, 700, 701, 702, 703, 704, 705, -409, -313,
	100, -172, -170, -214, 103, 108, 111, 112, 114, -431,
	277, 358, 359, 130, -441, -230, -231, -171, 105, 106,
	107, 132, 133, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 727, 98, 104, 50, 417,
	417, -205, -92, -92, -92, -92, -438, 730, 599, -249,
	-141, -251, -34, -32, -441, 12, -92, -32, -33, -31,
	-38, -92, -40, 626, -39, -320, -92, 109, -256, -272,
	16, 67, 177, 48, 56, -254, -255, -35, -32, -160,
	23, 41, 27, -145, 184, -160, -320, -145, -298, 258,
	-92, -92, -287, -334, 333, -289, 432, 713, 431, -279,
	-292, 100, -278, -291, 430, 101, -376, 174, -362, -366,
	-314, 269, -392, 265, -205, -385, -384, -314, -441, 28,
	-274, -314, -57, -58, -59, -291, 192, 733, -124, 286,
	290, 96, 96, -366, -365, -364, -413, 290, 269, -391,
	-383, 261, 270, -372, 262, 263, -367, 255, 151, -413,
	-367, 260, 270, 265, 269, 290, 290, 139, 290, 139,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 285,
	-373, 166, -373, 602, 602, -379, -413, 265, 255, -413,
	-413, 261, -310, -367, 257, 28, 257, 38, 38, -373,
	-373, -373, -291, 192, -373, -373, -373, -373, 298, 298,
	-373, -373, -373, -373, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, 254, -412, -150,
	428, 318, 444, 253, -151, 90, -60, 300, -41, -205,
	-308, 255, 256, -412, 287, 311, -205, 237, 254, 716,
	-302, 174, 19, -302, -299, 417, 415, 402, 407, -302,
	-302, -302, -302, 301, 400, -368, 255, 38, 266, 417,
	301, 400, 301, 302, 301, 302, 410, 420, 301, -325,
	18, 177, 444, 405, 409, 294, 254, 295, 256, 419,
	302, -325, 98, -303, 174, 301, 417, 411, 297, -302,
	-302, -332, -441, -316, -314, -312, 246, 41, 156, 28,
	30, 159, 193, 142, 23, 160, 40, 248, 365, 265,
	192, 261, 489, 241, 81, 607, 445, 452, 443, 451,
	455, 491, 492, 444, 403, 34, 17, 609, 31, 275,
	27, 44, 186, 243, 163, 164, 610, 278, 29, 276,
	129, 133, 612, 26, 84, 270, 18, 263, 46, 20,
	613, 614, 21, 74, 259, 258, 177, 255, 79, 697,
	15, 236, 32, 173, 75, 615, 151, 145, 616, 617,
	618, 619, 143, 77, 174, 24, 753, 453, 454, 36,
	714, 594, 289, 188, 82, 65, 715, 157, 449, 620,
	621, 130, 622, 134, 85, 720, 153, 22, 696, 80,
	48, 623, 290, 624, 260, 754, 625, 435, 626, 175,
	244, 488, 78, 176, 727, 627, 728, 253, 416, 12,
	494, 35, 274, 262, 73, 72, 141, 76, 459, 628,
	254, 162, 257, 144, 132, 11, 150, 37, 16, 83,
	86, 456, 457, 458, 63, 140, 598, 161, 19, 629,
	436, 155, -409, 716, -332, -332, 301, 342, 35, 101,
	-435, -436, -437, 598, 435, 257, -314, -205, -98, 706,
	245, -99, 712, 41, 252, 146, 38, -148, 417, -136,
	193, 734, 717, 718, 719, 716, 414, 724, 722, 720,
	301, 721, 96, 153, 155, 156, 4, -160, 173, -215,
	-216, 172, 166, 167, 168, 169, 170, 171, 178, 177,
	157, 159, 174, -265, 154, 179, 180, 181, 182, 183,
	184, 185, 187, 186, 188, 189, 175, 176, 192, 239,
	240, -168, -168, -168, -168, -235, -241, -240, -441, -237,
	-409, -313, -320, -441, -441, -168, -297, -441, -165, -441,
	-441, -441, -441, -441, -244, -160, -441, -441, -445, -441,
	-445, -445, -445, -351, -441, -351, -351, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, -441, -441,
	-441, -441, 237, -441, -441, -441, -441, -441, -351, -351,
	-351, -351, -351, -351, -441, -441, -441, -441, -441, -441,
	-441, -441, -441, -441, -441, -441, -441, -441, 98, 112,
	108, 111, 103, 114, 98, 98, 98, 98, -32, -33,
	-225, 63, -441, -331, -422, -423, -208, -205, -441, 318,
	-314, -314, 287, 105, -254, -35, -32, -249, -255, -251,
	-32, -92, -134, -147, 69, 70, -146, -149, 27, 44,
	74, 76, 99, 72, 73, 71, 41, -442, 97, -442,
	-272, -442, -157, -308, -142, -151, 255, 263, 262, 150,
	-412, -158, 153, 305, 96, -40, -275, 115, -228, -233,
	-231, 727, 654, 684, 654, 684, 67, 49, 98, 98,
	96, 25, -250, -252, -160, 18, -318, 4, -317, 28,
	-314, 98, 237, 18, -206, 32, -205, -298, -298, 96,
	100, 333, -288, -290, 433, 435, 166, -319, -314, 98,
	34, 97, 96, -205, -340, -343, -345, -344, -346, -341,
	-342, 362, 363, 193, 366, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 379, 391, 35, 277, 358, 359,
	360, 361, 380, 381, 382, 383, 385, 386, 387, 388,
	343, 364, 596, 344, 345, 346, 347, 348, 349, 351,
	352, 355, 353, 354, 356, 357, -315, -314, 95, 97,
	96, -350, 95, -160, -30, 97, 96, -373, -373, -373,
	285, 23, -50, -47, -399, 22, -46, -47, 246, 135,
	136, 243, 95, -362, 95, -371, -315, -314, 95, 151,
	260, 150, -370, -367, -370, -371, -314, -237, -314, 151,
	151, -314, -314, -284, -314, -284, -284, 41, -284, 41,
	-284, 41, 105, -314, -284, 41, -284, 41, -284, 41,
	-284, 41, -284, 41, 34, 87, 88, 89, 34, 91,
	92, 93, -237, -314, -314, -237, -362, -237, -205, -314,
	-291, 105, 105, 105, -373, -373, 105, 98, 98, 98,
	-373, -373, 105, 98, -322, -320, 98, 98, -414, 271,
	315, 317, 105, 105, 105, 105, 34, 98, -415, 34,
	741, 740, 742, 743, 744, 98, 105, 34, 105, 34,
	105, -314, 95, -205, -157, 241, 243, 246, 85, 98,
	323, 321, 322, 319, 324, 325, 326, 166, 50, 96,
	257, 254, -314, -304, 259, -304, -314, -321, -320, -312,
	-205, 257, 399, 98, -160, -369, 18, 177, -325, -325,
	-302, -205, -369, -325, -302, -205, -302, -302, -302, -302,
	-325, -325, -325, -302, -320, -320, -205, -205, -205, -205,
	-205, -205, -205, -332, -303, -302, 716, 98, -296, 18,
	85, -332, -332, -311, 26, 26, 96, 339, 436, 437,
	-330, 336, -94, -314, 98, -11, -30, -19, -18, -20,
	166, -11, 96, 598, -198, -205, 716, 716, 716, 716,
	716, 716, -160, -160, -160, -160, 622, -223, -433, 157,
	132, 133, 130, 131, -177, 42, 43, 41, -160, -224,
	-230, -235, 115, 177, 159, 174, -265, -165, -168, -165,
	-165, -165, -165, -165, -165, 236, -165, 236, -165, -165,
	-165, -165, -165, -165, -333, -314, 98, 193, -173, -172,
	114, -431, -173, 595, 96, -240, 237, -160, -160, -409,
	-132, 461, 462, 463, 464, 466, 467, 468, 471, 472,
	476, 477, 460, 478, 465, 470, 473, 474, 475, 469,
	361, -160, -226, -225, -226, -160, -160, -242, -243, 161,
	-237, -160, -442, -442, 105, 184, -140, 27, 44, -140,
	-140, -140, -140, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -140, -160, -133, 460, 478, 465, 470,
	473, 474, 475, 469, 361, 479, 480, 481, 482, 483,
	484, 485, 486, 487, -133, -132, -160, -160, -160, -160,
	-160, -160, -160, -160, -100, -160, 142, 143, 144, -225,
	-160, -165, -160, -160, -160, -442, -160, -160, -160, -226,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -408, -407, -406, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -225, -225, -225, -225, -225, -160, -442, -160,
	-179, -163, 105, -280, 114, 101, -160, -160, -160, -160,
	-160, -160, -226, -316, -321, -312, -313, -225, -226, -226,
	-225, -225, -160, -160, -160, -160, -160, -160, -160, -160,
	-442, -160, -160, -160, -160, -160, -272, -442, -225, 96,
	-424, 435, 436, 714, -323, 290, -322, 28, -226, 98,
	18, -282, 86, -314, -254, -254, 69, 70, 65, -144,
	-145, -149, -442, 294, -153, 307, 254, -150, -157, -314,
	255, 255, 255, -305, 259, 488, 166, -39, 28, 96,
	-441, 647, 647, 68, 98, -352, -291, 389, 390, 193,
	-160, -160, 96, -253, 30, 31, -205, -317, 184, -321,
	-205, -283, 290, -205, -183, -185, -186, -187, -208, -236,
	-441, -188, -32, 618, 615, 18, -198, -199, -207, -320,
	-289, -334, -288, 96, 434, 436, 437, 85, 134, -160,
	-353, 192, -381, -380, -379, -362, -364, -365, -366, 97,
	-353, -358, 396, 395, -350, -350, -350, -350, -350, -352,
	-352, -352, -352, 95, -350, 95, -350, -350, -350, -350,
	-355, 95, -355, -355, -356, -355, 95, -356, -357, 95,
	-357, -392, -160, -389, -388, -386, -387, 264, 110, 690,
	646, 598, 639, 680, 86, -384, -253, 105, -442, -95,
	598, -314, 100, 98, 100, 98, 100, 98, -125, -64,
	-1, 753, 754, 755, 96, 23, -363, -362, -63, 315,
	-395, -396, 290, -391, -385, -371, 151, -370, -371, -371,
	-314, 96, 32, 139, 139, 139, 139, 598, 243, 35,
	-306, 638, 157, 690, 646, -362, -63, 257, 257, -333,
	-333, -333, 98, 98, -301, 749, -198, -153, 296, 296,
	254, 309, 254, 309, -205, 320, 323, 321, 322, 319,
	324, 325, 326, 327, 41, 41, 41, 41, 41, 41,
	41, 308, 310, 312, 298, -205, -205, -304, 85, -200,
	-205, 29, -320, 98, 98, -205, -302, -302, -205, -302,
	-302, -205, 98, -320, -437, 340, -314, 376, 707, 709,
	-136, 435, 96, 598, 26, -137, 26, -441, -433, 132,
	133, -235, -235, -235, -224, -165, -168, -165, 156, 278,
	-165, -165, -441, -237, -442, -316, 28, 96, 86, -442,
	182, 96, -442, -442, 96, 18, 96, -245, -243, 163,
	-160, -442, 96, -442, -442, -225, -160, -160, -160, -160,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-225, -442, 96, 96, 18, -337, 28, -442, -442, -442,
	-442, 96, -442, -442, -244, -442, 18, -442, 86, 96,
	177, 96, -442, -442, -442, 96, 96, -442, -442, 96,
	-442, 96, -442, -442, -442, -442, -442, -442, 96, -442,
	96, -442, -442, -442, 96, -442, 96, -442, -442, 96,
	-442, 96, -442, 96, -442, 96, -442, 96, -442, 96,
	-442, 96, -442, 96, -442, 96, -442, 96, -442, 96,
	-442, 96, -442, 96, -442, 96, -442, 96, -442, 96,
	-442, 96, -442, 96, -442, -442, -442, 96, -442, 96,
	-442, 96, -442, -442, 96, -442, 96, -442, 96, -442,
	96, 96, -442, 96, 96, 96, -442, 96, 96, 96,
	96, -442, -442, -442, -442, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, -442, -442, -442, -442, -442,
	-442, 96, -107, 623, -442, -442, 96, -442, 96, 96,
	96, 96, 96, -442, -441, 237, -442, -442, -442, -442,
	-442, 96, 96, 96, 96, 96, 96, -442, -442, -442,
	96, 96, -442, 96, -442, 96, -442, -423, 713, 436,
	-212, -211, -209, 83, 258, 84, -441, -322, -442, -173,
	-280, -281, -280, -218, -314, 105, 114, -256, -182, 96,
	-184, 18, -305, 256, 314, -305, -157, -153, -390, -387,
	-314, -314, -314, -320, 157, -159, 455, -155, 98, 100,
	-235, -233, -442, -352, -260, -266, -299, -314, 98, 193,
	-354, 193, -354, 389, 390, -252, 237, -213, 19, -217,
	35, 63, -30, -441, -441, 35, 96, -201, -203, -202,
	-204, 75, 79, 81, 76, 77, 78, 82, -328, 28,
	-32, -183, -32, -441, -205, -198, -443, 18, 86, -443,
	96, 237, -290, -293, 438, 435, 441, -409, 98, -124,
	96, -379, -366, -257, -154, 46, -359, 397, -352, 606,
	-352, -361, 98, -361, 105, 105, 105, 97, -53, -48,
	-49, 36, 90, -386, -373, 98, 45, -373, -373, -314,
	97, -253, -96, 304, 713, -2, 752, 758, 151, 95,
	402, 22, -274, 96, 97, -238, 316, 97, -126, -314,
	97, 95, -371, -371, -314, -441, 254, 34, 34, 690,
	646, 638, -63, -238, -237, -314, -353, 751, 750, 97,
	256, -205, -205, -205, -205, -205, -205, 246, 243, 425,
	-432, 328, 98, -432, 299, 257, -198, -205, 96, -97,
	273, 268, -325, -325, 36, -205, 435, 725, 723, -160,
	156, 278, -177, -168, -132, -132, -165, -335, 193, 362,
	277, 360, 356, 376, 367, 395, 358, 396, 353, 352,
	351, -335, -333, -165, -225, -160, -160, -160, 165, -160,
	162, -160, -108, -107, -442, -442, -442, -442, -442, -108,
	-108, -108, -108, -108, -108, -108, -108, -108, -108, -249,
	-160, -160, -160, -442, 193, 362, -108, -160, 18, -160,
	-333, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -406, -160, -225, -160,
	-225, -160, -160, -160, -160, -160, -407, -407, -407, -407,
	-407, -225, -225, -225, -225, -160, -441, -314, -111, -110,
	-109, 673, 258, -107, -179, -111, -179, 236, -160, 236,
	236, 236, -160, -226, -316, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -209, -367, 296, -367, 296,
	-367, -284, 96, -295, 26, 18, 63, 63, -182, -213,
	-145, -183, -320, -205, -152, 305, 313, -205, -153, 256,
	85, -390, -390, -390, 29, 95, -156, 101, -263, 706,
	-269, 52, -267, -268, 53, -264, 54, 62, -354, -354,
	184, -254, -160, -285, 85, -286, -294, -237, -229, -232,
	-230, -441, -273, -442, -314, -284, -286, -185, -186, -186,
	-185, -186, 75, 75, 75, 80, 75, 80, 75, -202,
	-320, -442, -160, -323, 86, -183, -183, -207, -320, 184,
	435, 439, 440, -379, -430, 130, 157, 34, 85, 393,
	110, -428, 192, 635, 685, 690, 646, 639, 680, -429,
	260, 150, 151, 272, 28, 47, 97, 96, 97, 96,
	97, 97, 96, -307, -306, -49, -48, -373, -373, 105,
	-409, 98, 98, 265, -127, 756, 105, 95, -3, 90,
	-160, 95, 23, -362, -237, -397, -347, -398, -348, -349,
	-5, -6, -374, -130, 63, 110, -67, 50, 255, 736,
	737, 139, -441, 749, -389, -274, -393, -395, -205, -164,
	-441, -176, -162, -161, -163, -169, 182, 183, 277, 358,
	359, -238, -205, -411, 86, 296, 393, 296, 393, 98,
	-434, 329, 98, -434, -205, -97, -53, -205, -302, -302,
	36, -409, -442, -177, -168, -139, 177, 598, -338, 605,
	-350, -350, -350, -357, -350, 348, -350, 348, -350, -442,
	-442, -442, 96, -442, 26, -442, 96, -160, 96, -108,
	-108, -108, -108, -108, -135, 494, 96, 96, -442, 95,
	95, -442, -160, -442, -442, -442, 96, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	96, -442, 96, -442, 96, -442, 96, -442, 96, -442,
	96, -442, 96, -442, 96, -442, 96, -442, 96, -442,
	96, -442, 96, -442, 96, -442, 96, -442, 96, -442,
	96, -442, -442, 96, -442, -442, -442, 96, -442, 96,
	-442, 96, -442, -442, -442, 96, -336, 691, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -106,
	-315, -107, 655, 655, -442, -107, -246, 96, -165, -442,
	-165, -165, -165, -442, -442, -442, 96, -442, 96, 96,
	-442, 96, -442, 96, -442, -442, -442, -442, 96, -210,
	26, -441, -210, -441, -210, -442, -280, -205, -213, -247,
	20, -441, 256, -205, -205, 85, 85, 85, 97, -260,
	57, 368, -271, -270, 61, 53, -268, 23, 55, 23,
	33, -285, 96, 166, -327, 96, 28, -442, -442, 96,
	63, 237, -442, -213, -196, -195, 85, 86, -197, 85,
	-195, 75, 75, -275, 96, -283, -183, -213, -213, 237,
	130, -441, -164, 16, 98, 98, -409, -427, 740, 741,
	34, 742, 105, -373, -373, 151, 151, -205, 95, -352,
	98, -352, 105, 105, 34, 91, 92, 93, 34, 87,
	88, 89, 306, -394, 95, 23, -160, 95, 166, 97,
	-274, -274, 292, 177, -373, 734, 298, 298, -373, -373,
	-373, -129, -128, 756, 97, -442, 96, -360, 598, 601,
	-160, -170, -170, -275, -405, 598, -410, -314, -314, -314,
	-314, 105, 107, -442, 596, 82, 599, -442, -352, -160,
	-160, -160, -160, -254, 98, -160, -160, 105, 105, -108,
	-442, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -160, -160, -160, -160, -160, -160, -160, -160, -160,
	-160, -225, -160, -442, -193, -192, -194, 717, 130, 34,
	-335, -442, -227, 290, -114, -113, -112, 18, -442, -160,
	-132, -132, -132, -132, -160, -160, -160, -160, -160, -160,
	-441, 75, 22, 20, -277, -314, 260, -441, -277, -441,
	-323, -247, -248, 21, 23, -402, -400, -401, 177, 697,
	696, -205, -205, -205, -205, -261, 59, -259, 58, -259,
	-270, 23, 23, 98, 23, 98, 151, -294, -160, -232,
	-322, 63, -30, -314, -229, -314, -249, -160, 95, -160,
	-173, -213, -213, -160, -220, 518, 520, 521, 522, 519,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	523, 534, 495, 496, 497, 117, 119, 118, 127, 128,
	498, 499, 500, 362, 546, 547, 541, 544, 545, 543,
	542, 377, 378, 501, 564, 565, 569, 568, 566, 567,
	570, 573, 574, 575, 576, 577, 578, 580, 579, 571,
	572, 549, 548, 550, 551, 552, 553, 554, 555, 557,
	556, 558, 559, 560, 561, 562, 563, 581, 582, 583,
	584, 585, 587, 586, 591, 590, 588, 589, 593, 592,
	502, 503, 120, 121, 122, 123, 124, 125, 126, 504,
	507, 505, 508, 509, 510, 515, 516, 511, 512, 513,
	514, 517, 388, 386, 387, 383, 382, 381, 442, 447,
	448, 450, 535, 536, 537, 538, 539, 540, 698, 699,
	700, 701, 702, 703, 704, 705, 98, 98, 95, -160,
	97, 97, -393, -64, 97, -276, -274, 105, 97, 293,
	-230, -441, 98, -373, -373, -373, 105, 105, -322, -442,
	96, -314, -429, -395, 602, 602, -442, 28, -404, -403,
	-316, 95, 86, 68, 597, 600, -442, -442, -442, 96,
	-442, -442, -442, 97, 97, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, 96, -442, -192,
	-194, -442, 85, -173, -249, 23, -111, 315, 317, -111,
	-442, -442, -442, -442, -442, 96, -442, -442, 96, -442,
	96, -442, -442, -277, -442, 23, 23, 96, -442, -277,
	-442, -277, -212, -248, -121, -120, -119, 629, -160, -225,
	-442, 96, -314, -262, 60, 85, 134, 98, 98, 98,
	16, -441, -229, 237, -327, -254, -274, -190, 402, -249,
	-442, -274, 97, 97, 758, 151, 97, -230, -138, -441,
	289, -322, 98, 98, -128, -131, -30, 96, 166, -274,
	-205, 68, -160, -225, -442, 85, 610, 717, -105, -104,
	-101, 728, 754, -225, -107, -107, -160, -160, -160, -442,
	-314, 260, -442, -442, -121, 96, -118, -117, -314, -339,
	598, -68, -69, -70, -7, 331, 259, -400, -340, 85,
	134, -286, -274, -327, -314, 97, -442, -441, -254, 97,
	-258, 95, -3, 289, -347, -398, -348, -349, -5, -6,
	-374, -95, -403, -378, -320, -316, 98, 105, 97, 598,
	-442, -442, -103, 159, 726, 688, -169, 236, -442, 96,
	-442, 96, -442, 96, -119, 96, 28, 603, 759, -71,
	-72, -70, -69, -160, -442, -323, -191, -189, -314, 652,
	-420, -419, 594, -430, -426, 130, 157, 110, -428, 685,
	690, 646, 140, 141, -160, 95, -442, 237, -411, 599,
	-103, 727, 666, 641, 666, 641, -165, -160, -160, -160,
	-117, -441, 165, -70, 162, -442, 96, 26, -340, -66,
	663, -417, -418, 85, -421, 408, 662, 683, 130, 98,
	105, 97, -274, -321, -405, 600, 156, -132, -442, 96,
	-442, 96, -442, -106, -72, -189, 659, -353, -173, -418,
	85, -417, 85, 17, 16, -4, 757, 97, -103, 666,
	641, -160, -160, -442, -76, -75, -74, 164, -65, 29,
	-190, -416, 273, 268, 271, 35, -416, 105, -4, -442,
	-442, -73, 163, -74, -160, 663, 267, 34, 130, 165,
	-72, 162, -173, 259, -72, -193, -192, -192,
}

var yyDef = [...]int{
	916, -2, -2, 918, 2, 4, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 41, 88, 90, 91, 916, 916, 916, 0, 916,
	0, 149, 0, 977, -2, -2, 916, 1685, 0, 916,
	0, 911, 0, -2, 831, 837, 0, 846, -2, 0,
	0, 916, 916, 2333, 2333, 911, 0, 0, 0, 0,
	0, 916, 916, 916, 916, 1690, 1529, 68, 916, 0,
	106, 107, 916, 866, 867, 868, 83, 0, 2331, 103,
	916, 917, 1, 3, 89, 93, 0, 0, 0, 76,
	1538, 0, 96, 0, 0, 920, 0, 0, 1668, 916,
	916, 0, 147, 148, 0, 0, 0, 0, 0, 152,
	-2, 184, 185, 186, 0, 191, 636, 553, 605, 551,
	590, -2, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 428, 428, 0, 0,
	-2, 539, 539, 539, 1670, 0, 0, 0, 587, 490,
	428, 428, 428, 0, 428, 428, 428, 428, 0, 0,
	428, 428, 428, 428, 428, 428, 428, 428, 428, 428,
	428, 428, 428, 428, 428, 428, 428, 1556, 190, 1686,
	1683, 1684, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 0, 1662, 0, 749, 1020, 0,
	912, 913, 0, 820, 820, 0, 820, 820, 820, 820,
	0, 0, 0, 763, 0, 0, 0, 0, 817, 0,
	779, 780, 0, 817, 0, 786, 823, 0, 0, 793,
	820, 820, 796, 2334, 0, 2334, 2334, 0, 0, 1653,
	0, 814, 812, 826, 827, 60, 830, 833, 834, 835,
	836, 839, 0, 850, 853, 1679, 1680, 0, 855, 860,
	879, 880, 0, 63, 1180, 0, 1044, 0, 1055, -2,
	1066, 1083, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 0,
	0, 0, 0, 1096, 1097, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 2053, 1500, 0, 0, 1462,
	1462, 1196, 1462, 1462, 1464, 1464, 1464, 1902, 2045, 2054,
	2235, 1863, 1869, 1870, 1871, 2181, 2182, 2183, 2184, 2277,
	2278, 2282, 1966, 1858, 2249, 2250, 0, 2330, 2005, 2013,
	2014, 1990, 1999, 2038, 2143, 2261, 1881, 2033, 2105, 1963,
	1985, 1986, 2124, 2125, 2009, 2010, 1989, 2187, 2189, 2205,
	2206, 2191, 2193, 2202, 2208, 2213, 2192, 2204, 2209, 2222,
	2226, 2229, 2230, 2231, 2199, 2197, 2210, 2214, 2216, 2218,
	2224, 2227, 2200, 2198, 2211, 2215, 2217, 2219, 2225, 2228,
	2186, 2190, 2194, 2203, 2221, 2201, 2220, 2195, 2207, 2212,
	2223, 2196, 2188, 2003, 2006, 1993, 1994, 1996, 1998, 2004,
	2011, 2017, 1995, 2016, 2015, 0, 1991, 1992, 1997, 2008,
	2012, 2000, 2001, 2002, 2007, 2018, 2060, 2059, 2058, 2104,
	2029, 2103, 0, 0, 0, 0, 0, 1852, 1908, 1909,
	2232, 1384, 1385, 1386, 1387, 0, 0, 0, 0, 0,
	0, 0, 317, 318, 1513, 1514, 62, 1179, 1649, 1464,
	1464, 1464, 1464, 1464, 1464, 1118, 1119, 1120, 1121, 1122,
	1148, 1149, 1155, 1156, 2119, 2120, 2121, 2122, 1946, 2272,
	1955, 1956, 2100, 2101, 1968, 1969, 2304, 2305, -2, -2,
	-2, 259, 260, 261, 262, 263, 264, 265, 266, 0,
	1907, 2247, 2248, 255, 0, 1647, 1648, 322, 319, 320,
	321, 1162, 1163, 275, 276, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 286, 287, 288, 289, 290, 291,
	292, 293, 294, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	312, 313, 314, 315, 316, 0, 324, 325, 2333, 0,
	889, 0, 0, 0, 0, 0, 0, 1691, 1692, 1538,
	0, 1530, 1529, 81, 0, 916, -2, 0, 0, 0,
	0, -2, 65, 0, 70, 977, 0, 919, 95, 94,
	1586, 1589, 0, 0, 0, 77, 1539, 85, 87, 1540,
	0, 921, 922, 0, 953, 957, 0, 0, 0, 1669,
	1668, 1668, 123, 0, 0, 124, 144, 145, 146, 0,
	0, 130, 131, 1655, 1656, 61, 0, 0, 202, 203,
	0, 1136, 455, 0, 198, 0, 448, 387, 0, 0,
	0, 981, 187, 188, 189, 428, 428, 428, 602, 0,
	0, 190, 190, 560, 561, 562, 0, 0, -2, 453,
	0, 540, 0, 0, 442, 442, 446, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 697,
	0, 429, 0, 600, 601, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 1671, 1672, 0, 577, 578, 0,
	0, 0, 428, 428, 0, 0, 0, 0, 428, 428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 1576,
	0, 0, 179, 180, 1557, 0, -2, 0, 741, 0,
	0, 0, 1664, 1664, 0, 1663, 748, 0, 0, 0,
	753, 0, 0, 754, 0, 817, 817, 815, 816, 756,
	757, 758, 759, 820, 0, 0, 437, 438, 439, 817,
	820, 0, 820, 820, 820, 820, 817, 817, 817, 820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2334,
	823, 820, 0, 787, 0, 788, 789, 790, 791, 794,
	795, 797, 2335, 2336, 1681, 1682, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 2334, 2334, 801, 805, 809, 807, 1654, 832,
	838, 840, 841, 0, 0, 851, 854, 873, 67, 1954,
	859, 67, 861, 862, 863, 864, 865, 891, 892, 897,
	0, 0, 0, 0, 903, 904, 905, 0, 0, 908,
	909, 910, 0, 0, 0, 0, 0, 1042, 0, 0,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1067, 1068, 0, 0,
	0, 1092, 1093, 1094, 1095, 1098, 0, 1109, 0, 1111,
	1509, -2, 0, 0, 0, 1103, 1104, 0, 0, 0,
	1674, 1674, 0, 0, 0, 1501, 0, 0, 1194, 0,
	1195, 1197, 1198, 1199, 0, 1200, 1201, 926, 926, 926,
	926, 926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 1674, 1674, 0, 0, 247, 248,
	249, 250, 251, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 267,
	268, 269, 270, 271, 326, 272, 273, 274, 1179, 0,
	0, 916, 0, 64, 881, 882, 0, 1003, 1674, 0,
	0, 932, 0, 1689, 75, 84, 86, 1538, 79, 1538,
	0, 936, 0, 0, -2, -2, 937, 938, 942, 943,
	944, 945, 946, 947, 948, 949, 950, 72, 2332, 73,
	0, 92, 1561, 0, 1556, 1576, 0, 0, 0, 0,
	1666, 1577, 0, 0, 0, 66, 0, 97, 98, 1637,
	1641, 0, 1587, 0, 1590, 0, 0, 0, 401, 1594,
	0, 0, 1531, 1532, 1535, 0, 954, 2051, 958, 0,
	960, 961, 0, 0, 121, 0, 1019, 0, 0, 0,
	132, 0, 134, 135, 0, 0, 0, 412, 1657, 1658,
	1659, -2, 435, 0, 412, 396, 334, 335, 336, 387,
	338, 387, 387, 387, 387, 401, 401, 401, 401, 369,
	370, 371, 372, 373, 0, 387, 0, 355, 387, 387,
	387, 387, 377, 378, 379, 380, 381, 382, 383, 384,
	339, 340, 341, 342, 343, 344, 345, 346, 347, 389,
	389, 389, 389, 389, 393, 393, 0, 1137, 0, 416,
	0, 1535, 0, 0, 1565, 978, 0, 0, 0, 0,
	603, 647, 554, 591, 604, 0, 557, 558, -2, 0,
	0, 539, 0, 541, 0, 436, 0, -2, 0, 446,
	0, 442, 446, 443, 446, 434, 447, 581, 582, 583,
	0, 585, 586, 677, 989, 0, 0, 0, 0, 0,
	683, 684, 685, 0, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 592, 593, 594, 595, 596, 597,
	598, 599, 0, 0, 0, 0, 541, 0, 588, 0,
	0, 492, 493, 494, 0, 0, 497, 498, 499, 500,
	0, 0, 503, 504, 505, 1006, 1007, 506, 507, 532,
	533, 534, 508, 509, 510, 511, 512, 513, 514, 526,
	527, 528, 529, 530, 531, 515, 516, 517, 518, 519,
	520, 523, 0, 172, 1561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1664, 0, 0, 0, 0, 935, 1021, 1687, 1688,
	750, 0, 0, 821, 822, 0, 440, 441, 820, 820,
	760, 802, 0, 820, 764, 803, 765, 767, 766, 768,
	781, 782, 820, 771, 818, 819, 772, 773, 774, 775,
	776, 777, 778, 798, 783, 784, 785, 824, 0, 828,
	829, 799, 800, 0, 810, 0, 0, 0, 844, 845,
	0, 852, 876, 874, 875, 877, 869, 870, 871, 872,
	0, 878, 0, 0, 894, 117, 899, 900, 901, 902,
	914, 907, 1181, 1039, 1040, 1041, 0, 1043, 1049, 0,
	1164, 1166, 1047, 1048, 1051, 0, 0, 0, 1045, 1056,
	1176, 1177, 1178, 0, 0, 0, 0, 0, 1060, 1064,
	1069, 1070, 1071, 1072, 1073, 0, 1074, 0, 1077, 1078,
	1079, 1080, 1081, 1082, 1088, 1477, 1478, 1479, 1107, 327,
	328, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1180, 0, 1675, 0, 0, 0, 1507, 1504, 0,
	0, 0, 1463, 1465, 0, 0, 0, 927, 928, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 0, 0, 1480, 0, 0, 0,
	0, 0, 0, 0, 1500, 0, 1113, 1114, 1115, 0,
	0, 0, 0, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 1389, 1390, 1391, 59, 0, 0, 0, 0,
	0, 0, 0, 1511, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	884, 885, 887, 0, 1023, 0, 1004, 0, 0, 890,
	0, 931, 0, 934, 78, 80, 940, 941, 0, 962,
	951, 939, 74, 1666, 0, 0, 1666, 1576, 1561, 1676,
	0, 0, 0, 0, 0, 153, 0, 69, 0, 0,
	0, 1588, 1591, 1592, 401, 1614, 0, 410, 410, 407,
	1541, 1542, 0, 1534, 1536, 1537, 99, 959, 955, 0,
	1037, 0, 0, 1018, 0, 965, 967, 968, 969, 1001,
	0, 972, 973, 0, 0, 0, 0, 0, 119, 1020,
	125, 0, 133, 0, 0, 138, 139, 126, 127, 128,
	129, 0, 636, -2, 487, 204, 206, 207, 208, 199,
	-2, 399, 397, 398, 337, 401, 401, 363, 364, 365,
	366, 367, 368, 0, 375, 0, 356, 357, 358, 359,
	348, 0, 349, 350, 351, 391, 0, 352, 353, 0,
	354, 454, 0, 1543, 417, 418, 420, 428, 0, 423,
	424, 0, 428, 428, 0, 449, 450, 0, 1535, 151,
	1567, 982, 192, 193, 194, 195, 196, 197, 672, 0,
	0, 648, 670, 671, 190, 0, 0, 200, 543, 542,
	0, 704, 0, 452, 0, 0, 446, 446, 431, 432,
	584, 0, 0, 679, 680, 681, 682, 0, 0, 0,
	570, 481, 0, 571, 572, 541, 543, 0, 0, 412,
	495, 496, 501, 502, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 619, 620, 622, 625, 627,
	545, 631, 633, 0, 621, 624, 626, 628, 545, 632,
	634, 1558, 1559, 1560, 0, 0, 742, 0, 0, 478,
	115, 1665, 747, 751, 752, 817, 770, 804, 817, 762,
	769, 792, 806, 808, 842, 843, 848, 856, 857, 858,
	898, 0, 0, 0, 0, 906, 0, 0, 1050, 1165,
	1167, 1052, 1053, 1054, 1057, 0, 1061, 1065, 0, 0,
	0, 0, 0, 1112, 1110, 1511, 0, 0, 0, 1161,
	0, 0, 1184, 1185, 0, 0, 0, 0, 1505, 0,
	0, 1192, 0, 1466, 1142, 0, 0, 0, 0, 0,
	1142, 1142, 1142, 1142, 1142, 1142, 1142, 1142, 1142, 1142,
	1529, 1219, 0, 0, 0, 0, 0, 1224, 1225, 1226,
	1142, 0, 1229, 1230, 0, 1232, 0, 1233, 0, 0,
	0, 0, 1240, 1241, 1243, 0, 0, 1246, 1247, 0,
	1249, 0, 1251, 1252, 1253, 1254, 1255, 1256, 0, 1258,
	0, 1260, 1261, 1262, 0, 1264, 0, 1266, 1267, 0,
	1269, 0, 1271, 0, 1274, 0, 1277, 0, 1280, 0,
	1283, 0, 1286, 0, 1289, 0, 1292, 0, 1295, 0,
	1298, 0, 1301, 0, 1304, 0, 1307, 0, 1310, 0,
	1313, 0, 1316, 0, 1319, 1320, 1321, 0, 1323, 0,
	1325, 0, 1328, 1329, 0, 1331, 0, 1334, 0, 1337,
	0, 0, 1338, 0, 0, 0, 1342, 0, 0, 0,
	0, 1351, 1352, 1353, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1365, 1366, 1367, 1368, 1369,
	1370, 0, 1372, 0, 1143, 0, 0, 1143, 0, 0,
	0, 0, 0, 1182, 1674, 0, 1467, 1468, 1469, 1470,
	1471, 0, 0, 0, 0, 0, 0, 1411, 1412, 1414,
	0, 0, 1417, 0, 1419, 0, 1646, 883, 886, 888,
	975, 1024, 1025, 0, 0, 0, 0, 1005, 1673, 929,
	930, 933, 983, 0, 1515, 0, 0, 962, 1037, 0,
	963, 0, 0, 0, 0, 0, 1561, 0, 0, 1677,
	1676, 1676, 1676, 177, 0, 1578, 1579, 1584, 1582, 1583,
	71, 1638, 1642, 1596, 1595, 1608, 1621, 410, 410, 404,
	405, 411, 406, 408, 409, 1533, 0, 1538, 0, 1635,
	0, 916, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 1008, 0, 0, 1011, 0, 0, 0, 0, 1002,
	973, 0, 974, 0, -2, 0, 0, 113, 114, 0,
	0, 0, 136, 137, 0, 0, 143, 413, 414, 181,
	190, 489, 205, 462, 0, 0, 333, 400, 360, 361,
	362, 0, 385, 0, 0, 0, 0, 483, 150, 1547,
	1546, 428, 428, 419, 0, 422, 0, 0, 0, 1678,
	388, 451, 0, 1568, 1569, 642, 0, 0, 649, 0,
	0, 0, 552, 0, 563, 564, 0, 676, -2, 738,
	416, 0, 430, 433, 990, 0, 0, 565, 0, 568,
	569, 482, 543, 574, 575, 589, 576, 524, 525, 522,
	0, 154, 610, 612, 616, 611, 615, 0, 0, 0,
	547, 0, 635, 547, 608, 0, 478, 1543, 0, 746,
	479, 480, 820, 820, 893, 118, 0, 896, 0, 0,
	0, 0, 1058, 1062, 1075, 1076, 1472, 1498, 387, 387,
	1485, 387, 393, 1488, 387, 1490, 387, 1493, 387, 1496,
	1497, 0, 0, 1105, 0, 0, 0, 0, 1191, 1508,
	0, 0, 1202, 1141, 1142, 1142, 1142, 1142, 1142, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1502,
	0, 0, 0, 1223, 0, 0, 1227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 166, 0, 0,
	0, 0, 0, 0, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1136, 1140, 0, 1144,
	1145, 0, 0, 1374, 0, 0, 1392, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1026, 1033, 0, 1033, 0,
	1033, 0, 0, 0, 1660, 1661, 1516, 1517, 1037, 1518,
	952, 964, 0, 169, 1562, 1563, 1564, 168, 0, 0,
	0, 0, 0, 0, 1667, 0, 1581, 1585, 1614, 0,
	1607, 0, -2, 1616, 0, 0, 0, 1622, 402, 403,
	956, 100, 1038, 104, 0, 1635, 1650, 0, 1632, 1639,
	1643, 0, 0, 0, 1628, 0, 1037, 966, 997, 999,
	0, 994, 1009, 1010, 1012, 0, 1014, 0, 1016, 1017,
	977, 971, 0, 121, 0, 1037, 1037, 120, 0, 1022,
	140, 141, 142, 488, 209, 214, 0, 0, 0, 219,
	0, 221, 0, 0, 0, 226, 227, 428, 428, 463,
	0, 330, 332, 0, 0, 212, 401, 0, 401, 0,
	392, 394, 0, 464, 484, 1544, 1545, 0, 0, 421,
	425, 426, 427, 0, 645, 0, 673, 0, 0, 0,
	0, 0, 0, 201, 544, 705, 706, 707, 708, 709,
	710, 711, 712, 713, 0, 428, 0, 0, 0, 428,
	428, 428, 0, 730, 415, 0, 0, 701, 698, 566,
	0, 245, 246, 253, 254, 256, 0, 0, 0, 0,
	0, 573, 977, 157, 0, 0, 0, 0, 618, 623,
	629, 0, 546, 630, 743, 744, 745, 116, 755, 761,
	895, 915, 1046, 1059, 1063, 0, 0, 0, 0, 1499,
	1483, 401, 1486, 1487, 1489, 1491, 1492, 1494, 1495, 1101,
	1102, 1106, 0, 1188, 0, 1190, 0, 1506, 0, 1203,
	1204, 1205, 1206, 1207, 1538, 0, 0, 0, 1222, 0,
	0, 1142, 0, 1235, 1234, 1236, 0, 1238, 1239, 1244,
	1245, 1248, 1250, 1257, 1259, 1263, 1265, 1268, 1270, 1272,
	0, 1275, 0, 1278, 0, 1281, 0, 1284, 0, 1287,
	0, 1290, 0, 1293, 0, 1296, 0, 1299, 0, 1302,
	0, 1305, 0, 1308, 0, 1311, 0, 1314, 0, 1317,
	0, 1322, 1324, 0, 1327, 1330, 1332, 0, 1335, 0,
	1339, 0, 1341, 1343, 1344, 0, 0, 0, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1371, 0,
	1134, 1373, 1146, 1147, 1152, 1376, 0, 0, 0, 1379,
	0, 0, 0, 1383, 1183, 1394, 0, 1399, 0, 0,
	1405, 0, 1409, 0, 1415, 1416, 1418, 1420, 0, 0,
	0, 0, 0, 0, 0, 1003, 984, 82, 1518, 1522,
	0, 0, 0, 171, 173, 0, 0, 0, 1580, 1601,
	1599, 1599, 1609, 1610, 0, 0, 1617, 0, 0, 0,
	0, 105, 0, 0, 1623, 0, 0, 1644, 0, 0,
	0, 0, 122, 1529, 991, 998, 0, 0, 992, 0,
	993, 1013, 1015, 970, 0, 1037, 1037, 111, 112, 0,
	215, 0, 217, 0, 220, 222, 223, 224, 230, 231,
	232, 233, 225, 0, 0, 329, 331, 0, 0, 374,
	386, 376, 0, 0, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1566, 637, 0, 647, 0, 979, 0, 640,
	0, 555, 0, 0, 0, 428, 428, 428, 0, 0,
	0, 0, 715, 0, 0, 678, 0, 686, 0, 0,
	0, 257, 258, 0, 609, 0, 155, 156, 0, 0,
	614, 548, 549, 1099, 0, 0, 0, 1100, 1484, 0,
	0, 0, 0, 0, 1503, 0, 0, 0, 0, 1228,
	1231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 667, 668, 0,
	1423, 1139, 1529, 0, 1143, 1153, 1154, 0, 1143, 1393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1034, 0, 0, 0, 985, 986, 0, 0, 0,
	1023, 1522, 1527, 0, 0, 0, 1570, 0, 1573, 1574,
	1575, 170, 174, 175, 176, 1604, 0, 1597, 1600, 1598,
	1611, 0, 0, 1618, 0, 1620, 0, 1651, 1652, 1640,
	1633, 916, 1627, 1630, 1632, 1629, 1538, 995, 0, 1000,
	0, 1529, 110, 0, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 229, 0, 0,
	390, 395, 0, 0, 638, 0, 980, 650, 641, 0,
	728, 0, 732, 0, 0, 0, 735, 736, 737, 714,
	0, 718, 456, 702, 699, 700, 567, 0, 158, 159,
	0, 0, 0, 1473, 0, 1476, 1186, 1189, 1187, 0,
	1218, 1220, 1221, 1481, 1482, 1237, 1273, 1276, 1279, 1282,
	1285, 1288, 1291, 1294, 1297, 1300, 1303, 1306, 1309, 1312,
	1315, 1318, 1326, 1333, 1336, 1340, 1345, 0, 1348, 0,
	0, 1349, 0, 669, 1130, 0, 0, 1150, 1151, 0,
	1378, 1380, 1381, 1382, 1395, 0, 1400, 1401, 0, 1406,
	0, 1410, 1421, 0, 1028, 1035, 1036, 0, 1031, 0,
	1032, 0, 976, 1527, 102, 1528, 1525, 0, 1523, 1520,
	67, 0, 0, 1593, 0, 1602, 1603, 1612, 1613, 1619,
	0, 0, 1632, 0, 1626, 108, 0, 0, 0, 1538,
	216, 0, 236, 646, 0, 649, 639, 726, 727, 0,
	739, 731, 733, 734, 716, -2, 1565, 0, 0, 0,
	617, 1474, 0, 0, 1350, 0, 665, 666, 1138, 1131,
	0, 1116, 1117, 1135, 1375, 1377, 0, 0, 0, 1027,
	987, 988, 1029, 1030, 101, 0, 1524, 1158, 0, 1519,
	0, 167, 46, 47, 42, -2, 0, 1571, 1572, 1605,
	1606, 1636, 0, 1625, 1631, 996, 1003, 0, 109, 469,
	462, 0, 0, 0, 719, 720, 721, 722, 723, 724,
	725, 606, 160, 161, 0, 536, 537, 538, 154, 0,
	1193, 1346, 1132, 0, 0, 0, 0, 0, 1396, 0,
	1402, 0, 1407, 0, 1526, 0, 0, 1521, 45, 0,
	-2, 50, 0, 0, 1634, 651, 0, 653, 0, -2,
	457, 470, 0, 210, 237, 238, 0, 0, 241, 0,
	243, 244, 234, 235, 0, 0, 740, 0, 157, 0,
	0, 1123, 1124, 1125, 1126, 1128, 0, 0, 0, 0,
	1159, 1136, 43, 51, 67, 652, 0, 0, 412, 0,
	662, 458, 459, 0, 465, 466, 467, 468, 239, 240,
	242, 674, 0, 535, 613, 1475, 0, 0, 1397, 0,
	1403, 0, 1408, 0, -2, 654, 655, 663, 0, 460,
	0, 461, 0, 0, 0, 643, 0, 674, 1133, 1127,
	1129, 0, 0, 1157, 52, 55, 57, 0, 0, 664,
	660, 471, 473, 474, 0, 0, 472, 675, 644, 1398,
	1404, 0, 67, 56, 0, 0, 475, 476, 477, 0,
	-2, 67, 656, 44, -2, 657, 658, 659,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 187, 179, 3,
	95, 97, 184, 182, 96, 183, 237, 185, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 759,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 189, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 190,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 180,
	181, 186, 188, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 58083, 758, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:665
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:670
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 5:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:674
		{
			setParseTree(yylex, nil)
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:680
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:721
		{
			yyLOCAL = &SingleStatement{Statement: yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:725
		{
			yyLOCAL = &BeginEndStatement{Statements: yyDollar[2].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:729
		{
			yyLOCAL = &IfStatement{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion(), ElseIfBlocks: yyDollar[5].elseIfsUnion(), ElseStatements: yyDollar[6].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatement
//line sql.y:735
		{
			yyLOCAL = yyDollar[1].compoundStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:748
		{
			yyLOCAL = yyDollar[1].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:754
		{
			yyLOCAL = CompoundStatements{yyDollar[1].compoundStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:758
		{
			yySLICE := (*CompoundStatements)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].compoundStatementUnion())
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:763
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL CompoundStatements
//line sql.y:767
		{
			yyLOCAL = yyDollar[2].compoundStatementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:776
		{
			yyLOCAL = yyDollar[1].elseIfsUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:782
		{
			yySLICE := (*[]*ElseIfBlock)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].elseIfUnion())
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ElseIfBlock
//line sql.y:786
		{
			yyLOCAL = []*ElseIfBlock{yyDollar[1].elseIfUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ElseIfBlock
//line sql.y:792
		{
			yyLOCAL = &ElseIfBlock{SearchCondition: yyDollar[2].exprUnion(), ThenStatements: yyDollar[4].compoundStatementsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:798
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:804
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:810
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:814
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:820
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:826
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:832
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:836
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:845
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:855
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:861
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion().Select}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:871
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:875
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:898
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:904
		{
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:909
		{
			yyDollar[1].tableStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:915
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:922
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:928
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].tableStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].tableStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyDollar[2].tableStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:939
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].exprUnion()}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:945
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:949
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:953
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:957
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:961
		{
			yyLOCAL = &Union{Left: yyDollar[1].tableStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:967
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:971
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:976
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:980
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:986
		{
			yyLOCAL = yyDollar[2].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:990
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:995
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1001
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].lockUnion())
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[3].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1007
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmtUnion(), yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1014
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1018
		{
			yyLOCAL = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1024
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1030
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1038
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1042
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableStatement
//line sql.y:1046
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1052
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1064
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1076
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:1080
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1086
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1092
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1096
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1100
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1104
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1114
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1124
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1134
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1143
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1147
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1159
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1169
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1173
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1177
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1181
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1187
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), NoScope)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1191
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1195
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1201
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1205
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1211
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1215
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1221
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1225
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1229
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.str = RepeatableReadStr
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyVAL.str = ReadCommittedStr
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1243
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.str = SerializableStr
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1253
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1257
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1261
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1267
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1273
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1280
		{
			yyLOCAL = yyDollar[1].createProcedureUnion()
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1284
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1293
		{
			yyDollar[1].createViewUnion().Columns = yyDollar[2].columnsUnion()
			yyDollar[1].createViewUnion().Select = yyDollar[4].tableStmtUnion()
			yyDollar[1].createViewUnion().CheckOption = yyDollar[5].str
			yyLOCAL = yyDollar[1].createViewUnion()
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1300
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1313
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1317
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1328
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1333
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1339
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1359
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1365
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 167:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *CreateProcedure
//line sql.y:1381
		{
			yyLOCAL = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion(), Definer: yyDollar[3].definerUnion(), Params: yyDollar[8].procParamsUnion(), Statement: yyDollar[10].compoundStatementUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1388
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1404
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definerUnion(), Security: yyDollar[4].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1409
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *CreateView
//line sql.y:1414
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1422
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1429
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1434
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1439
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1444
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1451
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1458
		{
			yyLOCAL = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1469
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1480
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1486
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1490
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1494
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1498
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1502
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1506
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1522
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1526
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1532
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1536
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1542
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1546
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1552
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1556
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1562
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1572
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1577
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1582
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1586
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1610
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1619
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = ""
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = ""
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1641
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1645
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1650
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1655
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1660
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1666
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1671
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1676
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1681
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1690
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1695
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1699
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1704
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1709
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1714
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1718
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1724
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1728
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1732
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1736
		{
			yyLOCAL = CompressedFormat
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1742
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1746
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1751
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1755
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1760
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1765
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1770
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1775
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1780
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1785
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1790
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1797
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1804
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1808
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1812
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1816
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1820
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1824
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1834
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1841
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1845
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1851
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1855
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1859
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1863
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1867
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1871
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1875
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1879
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1883
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1887
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1891
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1895
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1899
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1904
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1908
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1912
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = Armscii8Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = ASCIIStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.str = Big5Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = UBinaryStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = Cp1250Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = Cp1251Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.str = Cp1256Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1946
		{
			yyVAL.str = Cp1257Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = Cp850Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = Cp852Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = Cp866Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = Cp932Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.str = Dec8Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1970
		{
			yyVAL.str = EucjpmsStr
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.str = EuckrStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.str = Gb18030Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.str = Gb2312Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.str = GbkStr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.str = Geostd8Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.str = GreekStr
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.str = HebrewStr
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.str = Hp8Str
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.str = Keybcs2Str
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.str = Koi8rStr
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.str = Koi8uStr
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.str = Latin1Str
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.str = Latin2Str
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = Latin5Str
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = Latin7Str
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = MacceStr
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = MacromanStr
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = SjisStr
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = Swe7Str
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = Tis620Str
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = Ucs2Str
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = UjisStr
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.str = Utf16Str
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = Utf16leStr
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = Utf32Str
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = Utf8mb3Str
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = Utf8mb4Str
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = Utf8mb3Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2092
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2096
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2100
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2106
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2110
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2116
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2120
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2124
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2130
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:2134
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2140
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2144
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2148
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:2152
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2218
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2224
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2254
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2278
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2314
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2342
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2351
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2369
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2391
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2405
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2410
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2414
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2427
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2434
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2438
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2444
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2452
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2456
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2460
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2465
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2469
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2495
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2505
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2516
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2520
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.str = ""
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2539
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2548
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2554
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2564
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2568
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2573
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2577
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2581
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2585
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2589
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2593
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2599
		{
			yyVAL.str = ""
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2609
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2613
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2617
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2621
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2625
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2630
		{
			yyVAL.str = ""
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2634
		{
			yyVAL.str = yyDollar[2].str
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = yyDollar[1].str
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = ""
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2692
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2702
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2706
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2712
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2716
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2722
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2726
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2732
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2738
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2742
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2746
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2750
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2754
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2763
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2769
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2775
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2781
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2785
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2789
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2794
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2798
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2804
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2810
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2816
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2820
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2824
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2828
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2832
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = ""
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2851
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2855
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2860
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2864
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2873
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2879
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2887
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2893
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2903
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2907
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2911
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2915
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2919
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2923
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2927
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2931
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2935
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2939
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2943
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2947
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2951
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2955
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2959
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2963
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2967
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2971
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2975
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2979
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2983
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2987
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2991
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2995
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2999
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3003
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3007
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3011
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3015
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3019
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:3023
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3028
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3032
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3036
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3055
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3063
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3067
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3072
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3078
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3087
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3091
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3105
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3109
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3113
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3122
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3126
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3130
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 555:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3138
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3144
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3148
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3152
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3162
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3166
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3170
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3174
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3178
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3182
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3186
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3190
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3194
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3198
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3202
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3206
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3210
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3214
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3218
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3222
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3226
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3230
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3234
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3238
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3242
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3246
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3250
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3254
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3258
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3262
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3266
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3270
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3274
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3278
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3284
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3288
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3294
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3298
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3302
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3306
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3310
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3314
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3318
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3322
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3326
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3330
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].tableStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3380
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3387
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3399
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3440
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3466
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3473
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3493
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3501
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3514
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3520
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3533
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3550
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3570
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3576
		{
			yyLOCAL = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3589
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3598
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3606
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3615
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3622
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3634
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3643
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3658
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3672
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3676
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3682
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3688
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3694
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3698
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3704
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3708
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3714
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3720
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3726
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3732
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3738
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3742
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3746
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3756
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3762
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3768
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3772
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3776
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3782
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3786
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3791
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3795
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3800
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3804
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3810
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3814
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3818
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3822
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3826
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3830
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3834
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3838
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3842
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3846
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3850
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3854
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3858
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3862
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3866
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3870
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3874
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3878
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3882
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3886
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3890
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3894
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3899
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3903
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3907
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3913
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3923
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3928
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3932
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3937
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3942
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3947
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3952
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3957
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3962
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3967
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3972
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3978
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3984
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3988
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3994
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3999
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4003
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4008
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4013
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4018
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4023
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4028
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:4033
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4040
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4047
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:4054
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4062
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4066
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:4072
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4078
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4084
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4090
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4096
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:4102
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4108
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:4114
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4130
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:4136
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4140
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 744:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4146
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4173
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4185
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4189
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4211
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4215
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4219
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4223
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4227
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4231
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4235
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4239
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4243
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4247
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4259
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4263
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4267
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4271
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4275
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4279
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4283
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4287
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4291
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4295
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4299
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4303
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4307
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4315
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4319
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4323
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4327
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4339
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4343
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4347
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4351
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4355
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4359
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4363
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4367
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4374
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4378
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4382
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4386
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4390
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4398
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4402
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4406
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4410
		{
			yyLOCAL = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4414
		{
			yyLOCAL = &Show{&ShowTransactionStatus{}}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4418
		{
			yyLOCAL = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4423
		{
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = ""
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = "extended "
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4439
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4443
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4463
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4467
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4473
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4477
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4481
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4491
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4497
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4529
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4559
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4568
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4574
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4584
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4588
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4592
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4609
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4614
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4619
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.empty = struct{}{}
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4625
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4631
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4636
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4640
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4644
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4648
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4652
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4657
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4661
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4665
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4669
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4673
		{
			yyLOCAL = TraceVExplainType
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4677
		{
			yyLOCAL = KeysVExplainType
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = yyDollar[1].str
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = yyDollar[1].str
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = yyDollar[1].str
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4697
		{
			yyLOCAL = yyDollar[1].tableStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4701
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4705
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4709
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4728
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4732
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4738
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4744
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4748
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4754
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4760
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4764
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4770
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4776
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4780
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4784
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4788
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4794
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4800
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4806
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4810
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4814
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4818
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4822
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4826
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4832
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4836
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4846
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4850
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4854
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4866
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4874
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4882
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4886
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4891
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4895
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4899
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4908
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4913
		{
			setAllowComments(yylex, true)
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4917
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4923
		{
			yyVAL.strs = nil
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4946
		{
			yyVAL.str = ""
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4950
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4954
		{
			yyVAL.str = SQLCacheStr
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4959
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4963
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4967
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4973
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4977
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4987
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4996
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5002
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5006
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5011
		{
			yyVAL.strs = nil
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5015
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5021
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5025
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.str = SQLCacheStr
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.str = DistinctStr
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.str = DistinctStr
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.str = HighPriorityStr
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.str = StraightJoinHint
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.str = SQLBigResultStr
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5077
		{
			yyLOCAL = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectExprs
//line sql.y:5081
		{
			res := yyDollar[1].selectExprsUnion()
			res.Exprs = append(res.Exprs, yyDollar[3].selectExprUnion())
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5089
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5093
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5097
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:5101
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5106
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5114
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5121
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5126
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5130
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5136
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:5142
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5146
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5156
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5160
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5164
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5168
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5174
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:5178
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5184
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:5188
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5197
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5206
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5212
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5216
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5222
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5226
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5232
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5236
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5240
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5244
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5250
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5254
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5267
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5271
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5275
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5279
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5285
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5287
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5291
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5293
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5297
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5299
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5302
		{
			yyVAL.empty = struct{}{}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5304
		{
			yyVAL.empty = struct{}{}
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5307
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5311
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5315
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5328
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5332
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5336
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5342
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5348
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5352
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5356
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5360
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5366
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5370
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5380
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5384
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5394
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5400
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5409
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5415
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5419
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5425
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5429
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5433
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5437
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5441
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5445
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5450
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5454
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5458
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5462
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5479
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5503
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5507
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5513
		{
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5583
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5606
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5610
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5622
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5626
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5630
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5634
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5638
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5654
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5658
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5662
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5668
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5752
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].exprUnion(), PathList: []Expr{yyDollar[3].exprUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5774
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5778
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5784
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5788
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5794
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5798
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5802
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5808
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5812
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5819
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5823
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5827
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5831
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5835
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5841
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5845
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5849
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5853
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5857
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5861
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5865
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5870
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5874
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5880
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5884
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:5893
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5898
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5902
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5908
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5914
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5918
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5924
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5940
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5946
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5950
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5956
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5960
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5966
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5970
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5982
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5988
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5992
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5998
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:6004
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6008
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6014
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6018
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6024
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:6028
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6035
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6039
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6043
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:6047
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6053
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6057
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6063
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6067
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6071
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6075
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6079
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:6083
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6089
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6093
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:6097
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:6104
		{
			yyLOCAL = &Subquery{yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:6110
		{
			yyLOCAL = []Expr{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6114
		{
			yySLICE := (*[]Expr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6207
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6633
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6637
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6641
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6645
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6649
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6653
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6657
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6661
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6665
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6669
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6673
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6677
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6705
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6737
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6757
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6761
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6765
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6769
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6773
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6777
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6781
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6785
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6789
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6793
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6805
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6809
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6813
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6817
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6821
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6825
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6829
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6833
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6837
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6841
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6845
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6849
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6853
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6857
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6861
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6865
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6869
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6873
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6877
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6881
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6885
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6897
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6901
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6905
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6909
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6913
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6917
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6921
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6925
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6929
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6933
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6937
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6941
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6945
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6959
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6963
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6967
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6976
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6982
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6986
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6990
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6994
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6998
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7003
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7007
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7011
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7015
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7019
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7023
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7028
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7032
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7036
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7040
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7047
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7051
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7057
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7061
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7065
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7069
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7075
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7079
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7083
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7087
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7091
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7095
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7099
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7108
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7114
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7118
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7122
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7126
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7130
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7134
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7138
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7142
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7146
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7150
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7154
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7158
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7162
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7166
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7170
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7174
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7178
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7182
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7186
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7190
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7196
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7200
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7204
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7208
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7212
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7216
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7220
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7224
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7228
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7232
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7236
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7240
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7244
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7248
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7252
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7256
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7260
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7264
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7274
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7278
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7282
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7292
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7296
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7300
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7304
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7308
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7314
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7318
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7322
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7326
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7330
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7336
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7340
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7354
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7358
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7364
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7368
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7372
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7376
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7380
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7386
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7390
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7394
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7398
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7402
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7406
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7410
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7414
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7418
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7422
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7432
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7441
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7446
		{
			yyVAL.str = string("")
		}
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7450
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7456
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7460
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7466
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7471
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7475
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7481
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7485
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7489
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7493
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7499
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7503
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7509
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7518
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7522
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7531
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7550
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7556
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7562
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7566
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7575
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7584
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7590
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7596
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7600
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7606
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7611
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7615
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7619
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7628
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7634
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7638
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7642
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7651
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7655
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7659
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7663
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7670
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7674
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7678
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7682
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7688
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7692
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7696
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7700
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7705
		{
			yyVAL.str = ""
		}
	case 1558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7712
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7716
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7720
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7725
		{
			yyVAL.str = ""
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7729
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7735
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7739
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7744
		{
			yyVAL.str = ""
		}
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7748
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7753
		{
			yyVAL.str = "cascaded"
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7757
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7761
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ProcParameter
//line sql.y:7767
		{
			yyLOCAL = []*ProcParameter{yyDollar[1].procParamUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7771
		{
			yySLICE := (*[]*ProcParameter)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].procParamUnion())
		}
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ProcParameter
//line sql.y:7777
		{
			yyLOCAL = &ProcParameter{Mode: yyDollar[1].procParamModeUnion(), Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7783
		{
			yyLOCAL = InMode
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7787
		{
			yyLOCAL = InoutMode
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ProcParameterMode
//line sql.y:7791
		{
			yyLOCAL = OutMode
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7796
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7803
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7809
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7815
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7821
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7830
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7834
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7839
		{
			yyVAL.str = ""
		}
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7843
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7849
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7853
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7857
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7861
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7865
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7869
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7873
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7879
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7883
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7887
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7892
		{
			yyVAL.str = ""
		}
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7896
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7900
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7905
		{
			yyVAL.str = ""
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7909
		{
			yyVAL.str = " header"
		}
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7914
		{
			yyVAL.str = ""
		}
	case 1602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7918
		{
			yyVAL.str = " manifest on"
		}
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7922
		{
			yyVAL.str = " manifest off"
		}
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7927
		{
			yyVAL.str = ""
		}
	case 1605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7931
		{
			yyVAL.str = " overwrite on"
		}
	case 1606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7935
		{
			yyVAL.str = " overwrite off"
		}
	case 1607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7941
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7946
		{
			yyVAL.str = ""
		}
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7950
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7956
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7960
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7966
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7970
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7975
		{
			yyVAL.str = ""
		}
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7979
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7985
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7989
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7995
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7999
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8003
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8008
		{
			yyVAL.str = ""
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8012
		{
			yyVAL.str = " optionally"
		}
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8025
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8029
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8033
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8037
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:8041
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].tableStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8047
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:8051
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8055
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8059
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8068
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:8072
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8077
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8081
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8087
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8091
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:8097
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8101
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8107
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8111
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8117
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8121
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8127
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:8133
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8143
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:8153
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8157
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:8163
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8170
		{
			yyVAL.str = "charset"
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8180
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8184
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:8188
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:8199
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8202
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:8204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:8207
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:8209
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8212
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:8214
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8217
		{
			yyVAL.empty = struct{}{}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8219
		{
			yyVAL.empty = struct{}{}
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8221
		{
			yyVAL.empty = struct{}{}
		}
	case 1673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8225
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Expr
//line sql.y:8234
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:8241
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:8245
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8251
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8255
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8262
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8268
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8272
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8278
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8282
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8289
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8295
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8301
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8305
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8309
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8976
		{
		}
	case 2332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8981
		{
		}
	case 2333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8985
		{
			skipToEnd(yylex)
		}
	case 2334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8990
		{
			skipToEnd(yylex)
		}
	case 2335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8994
		{
			skipToEnd(yylex)
		}
	case 2336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8998
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
