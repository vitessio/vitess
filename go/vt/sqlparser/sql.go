// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const QUERIES = 57561
const EXHAUSTIVE = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const DECIMAL_TYPE = 57660
const NUMERIC = 57661
const TIME = 57662
const TIMESTAMP = 57663
const DATETIME = 57664
const YEAR = 57665
const CHAR = 57666
const VARCHAR = 57667
const BOOL = 57668
const CHARACTER = 57669
const VARBINARY = 57670
const NCHAR = 57671
const TEXT = 57672
const TINYTEXT = 57673
const MEDIUMTEXT = 57674
const LONGTEXT = 57675
const BLOB = 57676
const TINYBLOB = 57677
const MEDIUMBLOB = 57678
const LONGBLOB = 57679
const JSON = 57680
const JSON_SCHEMA_VALID = 57681
const JSON_SCHEMA_VALIDATION_REPORT = 57682
const ENUM = 57683
const GEOMETRY = 57684
const POINT = 57685
const LINESTRING = 57686
const POLYGON = 57687
const GEOMCOLLECTION = 57688
const GEOMETRYCOLLECTION = 57689
const MULTIPOINT = 57690
const MULTILINESTRING = 57691
const MULTIPOLYGON = 57692
const ASCII = 57693
const UNICODE = 57694
const NULLX = 57695
const AUTO_INCREMENT = 57696
const APPROXNUM = 57697
const SIGNED = 57698
const UNSIGNED = 57699
const ZEROFILL = 57700
const CODE = 57701
const COLLATION = 57702
const COLUMNS = 57703
const DATABASES = 57704
const ENGINES = 57705
const EVENT = 57706
const EXTENDED = 57707
const FIELDS = 57708
const FULL = 57709
const FUNCTION = 57710
const GTID_EXECUTED = 57711
const KEYSPACES = 57712
const OPEN = 57713
const PLUGINS = 57714
const PRIVILEGES = 57715
const PROCESSLIST = 57716
const SCHEMAS = 57717
const TABLES = 57718
const TRIGGERS = 57719
const USER = 57720
const VGTID_EXECUTED = 57721
const VITESS_KEYSPACES = 57722
const VITESS_METADATA = 57723
const VITESS_MIGRATIONS = 57724
const VITESS_REPLICATION_STATUS = 57725
const VITESS_SHARDS = 57726
const VITESS_TABLETS = 57727
const VITESS_TARGET = 57728
const VSCHEMA = 57729
const VITESS_THROTTLED_APPS = 57730
const NAMES = 57731
const GLOBAL = 57732
const SESSION = 57733
const ISOLATION = 57734
const LEVEL = 57735
const READ = 57736
const WRITE = 57737
const ONLY = 57738
const REPEATABLE = 57739
const COMMITTED = 57740
const UNCOMMITTED = 57741
const SERIALIZABLE = 57742
const CURRENT_TIMESTAMP = 57743
const DATABASE = 57744
const CURRENT_DATE = 57745
const NOW = 57746
const CURRENT_TIME = 57747
const LOCALTIME = 57748
const LOCALTIMESTAMP = 57749
const CURRENT_USER = 57750
const UTC_DATE = 57751
const UTC_TIME = 57752
const UTC_TIMESTAMP = 57753
const DAY = 57754
const DAY_HOUR = 57755
const DAY_MICROSECOND = 57756
const DAY_MINUTE = 57757
const DAY_SECOND = 57758
const HOUR = 57759
const HOUR_MICROSECOND = 57760
const HOUR_MINUTE = 57761
const HOUR_SECOND = 57762
const MICROSECOND = 57763
const MINUTE = 57764
const MINUTE_MICROSECOND = 57765
const MINUTE_SECOND = 57766
const MONTH = 57767
const QUARTER = 57768
const SECOND = 57769
const SECOND_MICROSECOND = 57770
const YEAR_MONTH = 57771
const WEEK = 57772
const REPLACE = 57773
const CONVERT = 57774
const CAST = 57775
const SUBSTR = 57776
const SUBSTRING = 57777
const SEPARATOR = 57778
const TIMESTAMPADD = 57779
const TIMESTAMPDIFF = 57780
const WEIGHT_STRING = 57781
const LTRIM = 57782
const RTRIM = 57783
const TRIM = 57784
const JSON_ARRAY = 57785
const JSON_OBJECT = 57786
const JSON_QUOTE = 57787
const JSON_DEPTH = 57788
const JSON_TYPE = 57789
const JSON_LENGTH = 57790
const JSON_VALID = 57791
const JSON_ARRAY_APPEND = 57792
const JSON_ARRAY_INSERT = 57793
const JSON_INSERT = 57794
const JSON_MERGE = 57795
const JSON_MERGE_PATCH = 57796
const JSON_MERGE_PRESERVE = 57797
const JSON_REMOVE = 57798
const JSON_REPLACE = 57799
const JSON_SET = 57800
const JSON_UNQUOTE = 57801
const COUNT = 57802
const AVG = 57803
const MAX = 57804
const MIN = 57805
const SUM = 57806
const GROUP_CONCAT = 57807
const BIT_AND = 57808
const BIT_OR = 57809
const BIT_XOR = 57810
const STD = 57811
const STDDEV = 57812
const STDDEV_POP = 57813
const STDDEV_SAMP = 57814
const VAR_POP = 57815
const VAR_SAMP = 57816
const VARIANCE = 57817
const REGEXP_INSTR = 57818
const REGEXP_LIKE = 57819
const REGEXP_REPLACE = 57820
const REGEXP_SUBSTR = 57821
const ExtractValue = 57822
const UpdateXML = 57823
const GET_LOCK = 57824
const RELEASE_LOCK = 57825
const RELEASE_ALL_LOCKS = 57826
const IS_FREE_LOCK = 57827
const IS_USED_LOCK = 57828
const LOCATE = 57829
const POSITION = 57830
const MATCH = 57831
const AGAINST = 57832
const BOOLEAN = 57833
const LANGUAGE = 57834
const WITH = 57835
const QUERY = 57836
const EXPANSION = 57837
const WITHOUT = 57838
const VALIDATION = 57839
const UNUSED = 57840
const ARRAY = 57841
const BYTE = 57842
const CUME_DIST = 57843
const DESCRIPTION = 57844
const DENSE_RANK = 57845
const EMPTY = 57846
const EXCEPT = 57847
const FIRST_VALUE = 57848
const GROUPING = 57849
const GROUPS = 57850
const JSON_TABLE = 57851
const LAG = 57852
const LAST_VALUE = 57853
const LATERAL = 57854
const LEAD = 57855
const NTH_VALUE = 57856
const NTILE = 57857
const OF = 57858
const OVER = 57859
const PERCENT_RANK = 57860
const RANK = 57861
const RECURSIVE = 57862
const ROW_NUMBER = 57863
const SYSTEM = 57864
const WINDOW = 57865
const ACTIVE = 57866
const ADMIN = 57867
const AUTOEXTEND_SIZE = 57868
const BUCKETS = 57869
const CLONE = 57870
const COLUMN_FORMAT = 57871
const COMPONENT = 57872
const DEFINITION = 57873
const ENFORCED = 57874
const ENGINE_ATTRIBUTE = 57875
const EXCLUDE = 57876
const FOLLOWING = 57877
const GET_MASTER_PUBLIC_KEY = 57878
const HISTOGRAM = 57879
const HISTORY = 57880
const INACTIVE = 57881
const INVISIBLE = 57882
const LOCKED = 57883
const MASTER_COMPRESSION_ALGORITHMS = 57884
const MASTER_PUBLIC_KEY_PATH = 57885
const MASTER_TLS_CIPHERSUITES = 57886
const MASTER_ZSTD_COMPRESSION_LEVEL = 57887
const NESTED = 57888
const NETWORK_NAMESPACE = 57889
const NOWAIT = 57890
const NULLS = 57891
const OJ = 57892
const OLD = 57893
const OPTIONAL = 57894
const ORDINALITY = 57895
const ORGANIZATION = 57896
const OTHERS = 57897
const PARTIAL = 57898
const PATH = 57899
const PERSIST = 57900
const PERSIST_ONLY = 57901
const PRECEDING = 57902
const PRIVILEGE_CHECKS_USER = 57903
const PROCESS = 57904
const RANDOM = 57905
const REFERENCE = 57906
const REQUIRE_ROW_FORMAT = 57907
const RESOURCE = 57908
const RESPECT = 57909
const RESTART = 57910
const RETAIN = 57911
const REUSE = 57912
const ROLE = 57913
const SECONDARY = 57914
const SECONDARY_ENGINE = 57915
const SECONDARY_ENGINE_ATTRIBUTE = 57916
const SECONDARY_LOAD = 57917
const SECONDARY_UNLOAD = 57918
const SIMPLE = 57919
const SKIP = 57920
const SRID = 57921
const THREAD_PRIORITY = 57922
const TIES = 57923
const UNBOUNDED = 57924
const VCPU = 57925
const VISIBLE = 57926
const RETURNING = 57927
const FORMAT_BYTES = 57928
const FORMAT_PICO_TIME = 57929
const PS_CURRENT_THREAD_ID = 57930
const PS_THREAD_ID = 57931
const GTID_SUBSET = 57932
const GTID_SUBTRACT = 57933
const WAIT_FOR_EXECUTED_GTID_SET = 57934
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57935
const FORMAT = 57936
const TREE = 57937
const VITESS = 57938
const TRADITIONAL = 57939
const VTEXPLAIN = 57940
const LOCAL = 57941
const LOW_PRIORITY = 57942
const NO_WRITE_TO_BINLOG = 57943
const LOGS = 57944
const ERROR = 57945
const GENERAL = 57946
const HOSTS = 57947
const OPTIMIZER_COSTS = 57948
const USER_RESOURCES = 57949
const SLOW = 57950
const CHANNEL = 57951
const RELAY = 57952
const EXPORT = 57953
const CURRENT = 57954
const ROW = 57955
const ROWS = 57956
const AVG_ROW_LENGTH = 57957
const CONNECTION = 57958
const CHECKSUM = 57959
const DELAY_KEY_WRITE = 57960
const ENCRYPTION = 57961
const ENGINE = 57962
const INSERT_METHOD = 57963
const MAX_ROWS = 57964
const MIN_ROWS = 57965
const PACK_KEYS = 57966
const PASSWORD = 57967
const FIXED = 57968
const DYNAMIC = 57969
const COMPRESSED = 57970
const REDUNDANT = 57971
const COMPACT = 57972
const ROW_FORMAT = 57973
const STATS_AUTO_RECALC = 57974
const STATS_PERSISTENT = 57975
const STATS_SAMPLE_PAGES = 57976
const STORAGE = 57977
const MEMORY = 57978
const DISK = 57979
const PARTITIONS = 57980
const LINEAR = 57981
const RANGE = 57982
const LIST = 57983
const SUBPARTITION = 57984
const SUBPARTITIONS = 57985
const HASH = 57986

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"EXHAUSTIVE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 49,
	14, 49,
	-2, 38,
	-1, 50,
	1, 157,
	662, 157,
	-2, 165,
	-1, 51,
	135, 165,
	176, 165,
	344, 165,
	-2, 515,
	-1, 58,
	36, 762,
	240, 762,
	251, 762,
	286, 776,
	287, 776,
	-2, 764,
	-1, 63,
	242, 800,
	-2, 798,
	-1, 118,
	239, 1453,
	-2, 131,
	-1, 120,
	1, 158,
	662, 158,
	-2, 165,
	-1, 131,
	136, 401,
	245, 401,
	-2, 504,
	-1, 150,
	135, 165,
	176, 165,
	344, 165,
	-2, 524,
	-1, 807,
	87, 1470,
	-2, 1324,
	-1, 808,
	87, 1471,
	221, 1475,
	-2, 1325,
	-1, 809,
	221, 1474,
	-2, 40,
	-1, 889,
	60, 875,
	-2, 890,
	-1, 975,
	250, 41,
	255, 41,
	-2, 412,
	-1, 1060,
	1, 572,
	662, 572,
	-2, 165,
	-1, 1357,
	221, 1475,
	-2, 1325,
	-1, 1505,
	60, 876,
	-2, 895,
	-1, 1506,
	60, 877,
	-2, 896,
	-1, 1557,
	135, 165,
	176, 165,
	344, 165,
	-2, 451,
	-1, 1636,
	136, 401,
	245, 401,
	-2, 504,
	-1, 1645,
	250, 42,
	255, 42,
	-2, 413,
	-1, 2005,
	221, 1479,
	-2, 1473,
	-1, 2006,
	221, 1475,
	-2, 1471,
	-1, 2106,
	135, 165,
	176, 165,
	344, 165,
	-2, 452,
	-1, 2113,
	26, 186,
	-2, 188,
	-1, 2480,
	78, 96,
	88, 96,
	-2, 954,
	-1, 2548,
	637, 688,
	-2, 662,
	-1, 2715,
	50, 1421,
	-2, 1415,
	-1, 3367,
	637, 688,
	-2, 676,
	-1, 3455,
	23, 1833,
	33, 1833,
	177, 1833,
	262, 1833,
	324, 1833,
	325, 1833,
	326, 1833,
	327, 1833,
	328, 1833,
	329, 1833,
	330, 1833,
	332, 1833,
	333, 1833,
	334, 1833,
	335, 1833,
	336, 1833,
	337, 1833,
	338, 1833,
	339, 1833,
	340, 1833,
	341, 1833,
	342, 1833,
	343, 1833,
	345, 1833,
	347, 1833,
	348, 1833,
	349, 1833,
	350, 1833,
	351, 1833,
	352, 1833,
	353, 1833,
	354, 1833,
	355, 1833,
	358, 1833,
	359, 1833,
	360, 1833,
	361, 1833,
	362, 1833,
	364, 1833,
	365, 1833,
	366, 1833,
	367, 1833,
	508, 1833,
	-2, 620,
}

const yyPrivate = 57344

const yyLast = 47946

var yyAct = [...]int{
	1513, 3526, 3115, 3116, 811, 818, 3114, 3348, 3537, 810,
	681, 3432, 3495, 3453, 3496, 3085, 2942, 1560, 1872, 2864,
	2103, 2054, 3421, 3398, 2767, 2774, 2034, 3332, 3280, 661,
	2815, 2824, 2829, 2826, 2825, 2823, 2828, 2827, 3330, 3072,
	1817, 2731, 773, 5, 882, 3144, 3320, 2414, 2036, 2844,
	2981, 2674, 2728, 2173, 1007, 2380, 663, 2729, 2453, 2843,
	1520, 2732, 3149, 2609, 2782, 2975, 2074, 691, 3001, 2716,
	2726, 1124, 2058, 1996, 771, 2846, 2440, 772, 2967, 2141,
	659, 2513, 1072, 2593, 2515, 1614, 2136, 2870, 2161, 2514,
	937, 777, 2545, 2077, 40, 2204, 2091, 2078, 1661, 2432,
	159, 2465, 39, 2079, 2416, 41, 778, 1868, 2446, 2585,
	906, 1507, 905, 884, 2182, 2160, 1967, 145, 2066, 1101,
	2143, 2507, 1826, 2221, 965, 1549, 2482, 1529, 1487, 1643,
	1993, 2081, 1369, 673, 970, 1845, 1887, 1891, 656, 1650,
	1297, 1284, 1760, 944, 2001, 973, 941, 976, 2158, 1742,
	945, 100, 2132, 971, 101, 972, 1548, 1126, 1353, 668,
	1329, 923, 925, 1534, 2059, 95, 1963, 1764, 1816, 893,
	896, 1115, 81, 886, 1769, 890, 983, 96, 1609, 123,
	121, 122, 128, 129, 1056, 918, 891, 1122, 80, 892,
	102, 89, 667, 894, 908, 94, 650, 163, 3357, 2538,
	1635, 3527, 1009, 2175, 2176, 2177, 2175, 3073, 2812, 1373,
	2568, 2567, 2219, 2834, 2536, 1026, 1027, 1028, 103, 1031,
	1032, 1033, 1034, 595, 1483, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1966, 909, 913, 917, 915, 915, 124, 3383,
	938, 1012, 130, 1377, 1900, 3028, 186, 3065, 3479, 91,
	91, 2601, 900, 1727, 2602, 2002, 651, 3378, 91, 2832,
	885, 883, 932, 899, 629, 3384, 2, 933, 986, 3379,
	125, 1833, 147, 3119, 635, 1832, 1298, 1848, 1831, 962,
	2264, 1830, 1829, 168, 907, 2838, 655, 1013, 1016, 1017,
	961, 960, 959, 827, 828, 829, 1828, 3119, 1800, 987,
	2412, 827, 828, 829, 2712, 963, 2031, 2032, 124, 107,
	108, 109, 1298, 112, 158, 1294, 118, 186, 1029, 187,
	146, 1020, 590, 653, 2834, 654, 3474, 2208, 2558, 2442,
	1514, 3499, 949, 648, 649, 2678, 660, 2831, 635, 165,
	3547, 125, 166, 878, 879, 880, 881, 3483, 954, 889,
	3433, 3494, 3517, 2947, 168, 2946, 3379, 2561, 1314, 3333,
	3118, 134, 135, 157, 156, 185, 91, 3481, 931, 775,
	776, 2207, 3482, 2381, 2206, 1838, 124, 920, 921, 2889,
	2832, 3276, 629, 3275, 3118, 1308, 629, 1011, 1010, 931,
	775, 776, 3480, 3078, 3508, 3477, 3079, 2496, 2835, 3286,
	3097, 1286, 82, 82, 3086, 82, 2838, 3422, 84, 2277,
	165, 3429, 629, 166, 2201, 3285, 3096, 3439, 1877, 3458,
	82, 1308, 2909, 1624, 626, 3439, 2456, 1550, 2062, 1551,
	1330, 2764, 2765, 629, 2575, 2576, 185, 3362, 2413, 2491,
	2763, 958, 2490, 1065, 1066, 2492, 2098, 2099, 1809, 1810,
	2600, 2457, 2886, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1339, 1338, 1340, 1341, 151, 132, 154, 139, 131, 3162,
	152, 153, 611, 630, 2275, 1068, 2274, 2097, 169, 2584,
	91, 91, 1091, 91, 1096, 1097, 609, 175, 140, 1304,
	1119, 876, 1296, 1311, 875, 1312, 1313, 3349, 91, 956,
	1285, 2503, 143, 141, 136, 137, 138, 142, 1059, 1092,
	1079, 2897, 2033, 1085, 133, 1080, 2539, 2116, 2115, 2835,
	3500, 2866, 629, 144, 2978, 1304, 606, 82, 42, 43,
	84, 2895, 2449, 2450, 2643, 621, 1055, 2265, 2266, 2268,
	2267, 3501, 2262, 643, 3463, 1812, 1808, 88, 647, 169,
	616, 46, 73, 74, 1079, 71, 75, 2586, 175, 1080,
	619, 641, 3461, 1030, 72, 629, 2871, 1078, 2546, 1077,
	1546, 3467, 3468, 1491, 2271, 2272, 3308, 2270, 3309, 2784,
	2785, 2183, 2859, 2571, 1098, 2227, 3462, 2222, 3529, 1743,
	2860, 630, 1112, 59, 1099, 630, 2242, 1117, 2243, 1093,
	2244, 1118, 1100, 1086, 1061, 91, 1094, 1095, 2588, 160,
	3067, 2867, 1717, 3066, 924, 629, 2245, 1036, 1035, 2060,
	2061, 630, 957, 3260, 596, 3063, 598, 612, 2868, 632,
	2224, 631, 602, 2186, 600, 604, 613, 605, 2152, 599,
	2228, 610, 630, 3123, 601, 614, 615, 618, 622, 623,
	624, 620, 617, 3475, 608, 633, 1718, 2062, 1719, 2226,
	996, 2146, 966, 994, 958, 1054, 967, 2075, 1628, 1075,
	186, 1081, 1082, 1083, 1084, 1108, 2677, 1110, 967, 1005,
	160, 1004, 1003, 934, 928, 926, 1494, 155, 2783, 1347,
	1348, 1349, 1350, 2269, 125, 1120, 1121, 1002, 2644, 1361,
	2786, 2225, 1365, 1001, 934, 928, 926, 168, 1000, 1355,
	999, 1006, 3356, 2537, 998, 1107, 1109, 993, 1303, 1300,
	1301, 1302, 1307, 1309, 1306, 1113, 1305, 1344, 2786, 1058,
	3548, 630, 942, 1344, 942, 3506, 1299, 979, 940, 942,
	3062, 978, 2275, 49, 52, 55, 54, 57, 148, 70,
	1761, 149, 79, 76, 1303, 1300, 1301, 1302, 1307, 1309,
	1306, 2159, 1305, 165, 919, 964, 166, 2592, 2505, 2573,
	2589, 2212, 1299, 1089, 630, 1622, 2211, 58, 87, 86,
	2205, 161, 68, 69, 56, 1649, 1315, 1757, 173, 185,
	77, 78, 824, 824, 1287, 1547, 3435, 2836, 2837, 1351,
	2887, 824, 1277, 1023, 3435, 1278, 1279, 2540, 997, 2145,
	2840, 995, 2805, 2570, 2605, 1370, 1621, 1105, 1748, 2979,
	2289, 1106, 953, 1620, 630, 955, 3434, 2417, 2419, 181,
	1057, 1111, 60, 61, 3434, 62, 63, 64, 65, 3541,
	3345, 1015, 2556, 1758, 85, 957, 1618, 978, 2060, 2061,
	3095, 1014, 161, 2560, 594, 1104, 3026, 3027, 985, 173,
	589, 3117, 2203, 634, 1729, 1728, 1730, 1731, 1732, 3015,
	162, 167, 164, 170, 171, 172, 174, 176, 177, 178,
	179, 2997, 1515, 1517, 627, 3117, 180, 182, 183, 184,
	1375, 2487, 1376, 927, 1648, 1747, 2276, 2559, 2583, 628,
	181, 2582, 169, 90, 90, 1481, 90, 2595, 1345, 1346,
	2452, 175, 2594, 2389, 927, 1880, 1482, 1538, 2836, 2837,
	1498, 90, 1446, 1064, 958, 1070, 950, 1076, 2447, 120,
	2104, 2840, 2595, 952, 951, 1344, 1341, 2594, 1379, 1067,
	1901, 162, 167, 164, 170, 171, 172, 174, 176, 177,
	178, 179, 2762, 1102, 1902, 1770, 2931, 180, 182, 183,
	184, 984, 902, 1074, 115, 1497, 85, 1116, 3370, 1501,
	1008, 3058, 2991, 2223, 1823, 886, 1821, 1088, 1022, 1754,
	1482, 1552, 956, 2629, 1314, 1495, 1892, 1499, 1090, 1850,
	1500, 100, 2529, 3509, 101, 2418, 1313, 1488, 985, 3158,
	3466, 1475, 3033, 1851, 1342, 1343, 1849, 1625, 1626, 1627,
	2234, 2230, 2232, 2233, 2231, 2235, 2236, 3032, 1892, 1655,
	2306, 2190, 985, 1452, 1453, 1454, 1455, 1456, 90, 1840,
	1842, 1843, 1751, 160, 1749, 1750, 116, 1752, 1753, 1530,
	1312, 1313, 1658, 1744, 3465, 1745, 1690, 1516, 1746, 1693,
	1657, 1695, 2200, 1841, 1641, 1647, 2202, 2198, 103, 3539,
	2195, 1485, 3540, 985, 3538, 1496, 883, 3502, 996, 1314,
	2149, 994, 885, 3016, 1702, 1703, 1616, 1634, 1712, 1519,
	1708, 1709, 1663, 1899, 1664, 898, 1666, 1668, 2195, 985,
	1672, 1674, 1676, 1678, 1680, 3549, 1543, 1544, 1694, 2199,
	1103, 984, 1771, 1653, 3543, 957, 1073, 978, 981, 982,
	2150, 942, 1652, 1514, 3268, 975, 979, 2148, 1060, 1311,
	1897, 1312, 1313, 1617, 985, 984, 3267, 2197, 2631, 1898,
	988, 978, 3400, 67, 3338, 990, 974, 3258, 1314, 991,
	989, 1632, 1630, 3108, 1644, 2281, 2282, 2283, 1651, 1651,
	3092, 2151, 3093, 3513, 1514, 1502, 3107, 3040, 1774, 1631,
	992, 2147, 827, 828, 829, 1778, 984, 1780, 1781, 1782,
	1783, 988, 978, 3039, 1787, 1737, 990, 3401, 1698, 3339,
	991, 989, 3550, 1735, 3029, 1724, 1799, 1772, 1773, 2813,
	1998, 2801, 984, 2511, 1021, 2510, 2155, 1738, 1018, 1722,
	1762, 1777, 1314, 1768, 1311, 161, 1312, 1313, 1784, 1785,
	1786, 1721, 173, 1720, 1710, 1704, 1998, 1701, 1766, 1700,
	1995, 1623, 3511, 1514, 2333, 1699, 1941, 984, 1670, 1997,
	961, 960, 959, 978, 981, 982, 2863, 942, 1281, 1736,
	635, 975, 979, 822, 3023, 635, 1314, 1734, 124, 1723,
	2494, 635, 1776, 181, 1330, 1546, 2604, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1339, 1338, 1340, 1341, 3503, 2770,
	2067, 2068, 3365, 1311, 1798, 1312, 1313, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1339, 1338, 1340, 1341, 1314, 1797,
	2171, 2170, 1314, 3364, 162, 167, 164, 170, 171, 172,
	174, 176, 177, 178, 179, 2169, 2168, 2167, 2166, 3342,
	180, 182, 183, 184, 2771, 1933, 1922, 1923, 1924, 1925,
	1935, 1926, 1927, 1928, 1940, 1936, 1929, 1930, 1937, 1938,
	1939, 1931, 1932, 1934, 1314, 3341, 97, 1311, 2773, 1312,
	1313, 1875, 1875, 1314, 1514, 1873, 1873, 98, 1854, 1336,
	1337, 1339, 1338, 1340, 1341, 1876, 2768, 1334, 1335, 1336,
	1337, 1339, 1338, 1340, 1341, 1895, 3340, 1330, 2343, 1896,
	1523, 3263, 40, 2784, 2785, 40, 3445, 1514, 1310, 1514,
	2769, 1311, 3247, 1312, 1313, 2438, 3528, 1355, 1844, 2345,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1338, 1340,
	1341, 3246, 1514, 1959, 1893, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1316, 2775, 3157, 3155, 1524, 3104, 3443, 1514,
	3358, 106, 1846, 1311, 1480, 1312, 1313, 1311, 1514, 1312,
	1313, 1991, 105, 1479, 104, 1330, 1478, 2288, 3037, 1834,
	1835, 1836, 1837, 99, 3490, 1514, 1481, 1310, 1514, 1847,
	81, 3022, 1822, 81, 1805, 1806, 2020, 1482, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1339, 1338, 1340, 1341, 1311,
	2872, 1312, 1313, 1515, 2027, 2438, 3428, 1852, 1311, 97,
	1312, 1313, 2783, 2438, 3408, 3294, 99, 2869, 1881, 1882,
	98, 2438, 3404, 1884, 2786, 915, 915, 1889, 3391, 1514,
	106, 1894, 1514, 1879, 3076, 3355, 3293, 2051, 2003, 2804,
	1994, 105, 2803, 104, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 3271, 1514, 2438, 3259, 1942, 1943,
	1944, 1945, 1946, 1947, 1949, 2520, 1954, 2508, 1956, 1957,
	1958, 1477, 1960, 1961, 1962, 1514, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 2610,
	1992, 2113, 1999, 2000, 915, 2217, 915, 915, 915, 915,
	915, 1514, 100, 2008, 2009, 101, 2012, 2013, 2014, 2015,
	2016, 2017, 2018, 2019, 2005, 2021, 2022, 2023, 2024, 2025,
	2003, 2044, 100, 2045, 2004, 101, 1314, 2156, 2772, 2050,
	1332, 1333, 1334, 1335, 1336, 1337, 1339, 1338, 1340, 1341,
	2216, 1953, 1886, 1888, 2057, 2085, 1903, 1904, 1905, 1906,
	2039, 1964, 1801, 915, 2122, 2123, 2124, 2125, 2026, 2108,
	1917, 2117, 99, 2118, 2119, 2120, 2121, 2038, 2107, 3076,
	1514, 1314, 2438, 3074, 2612, 2063, 2064, 2089, 1767, 2128,
	2129, 2130, 2131, 1733, 1853, 1725, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 2052,
	2296, 2102, 2184, 2111, 899, 2138, 2005, 1330, 1314, 2070,
	2295, 2144, 1314, 1715, 2095, 932, 2072, 2094, 2093, 2028,
	933, 1514, 2110, 2007, 2109, 1964, 2010, 2011, 2195, 1514,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1338, 1340,
	1341, 2181, 1711, 2154, 2622, 2621, 2620, 2614, 1314, 2618,
	1707, 2613, 1706, 2611, 1705, 3441, 1514, 3251, 2616, 1525,
	2140, 1311, 1114, 1312, 1313, 1955, 2139, 2615, 2134, 2135,
	2995, 1514, 2354, 1514, 2153, 2794, 2793, 2157, 1314, 2483,
	2049, 3250, 2165, 2790, 2791, 2617, 2619, 2189, 2790, 2789,
	2192, 2483, 2193, 3504, 2209, 986, 3317, 1514, 1314, 2191,
	2188, 2139, 2187, 2776, 1314, 2454, 1311, 2780, 1312, 1313,
	3084, 1314, 2462, 1514, 2779, 1314, 2213, 2275, 2569, 2210,
	2214, 2215, 1613, 2550, 2543, 2544, 987, 2438, 2437, 2299,
	1514, 2454, 3315, 1514, 2904, 1314, 1651, 1878, 1514, 1613,
	1612, 2434, 2484, 1311, 1314, 1312, 1313, 1311, 2781, 1312,
	1313, 2547, 2486, 2777, 2484, 2525, 99, 2294, 2778, 1314,
	1558, 1557, 3312, 1514, 2275, 2255, 2256, 2727, 105, 2112,
	2258, 2757, 2990, 2220, 2196, 1310, 2992, 2462, 2990, 2259,
	3396, 2275, 3289, 1311, 3369, 1312, 1313, 2438, 3298, 1514,
	2292, 2286, 2461, 2462, 2297, 2966, 1514, 2300, 2951, 2301,
	1514, 2792, 2700, 2990, 2308, 2096, 2299, 2354, 2310, 2311,
	2312, 2248, 2330, 1311, 2299, 1312, 1313, 2329, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2959, 1514,
	1314, 2291, 2195, 1311, 3041, 1312, 1313, 1310, 2195, 1311,
	1314, 1312, 1313, 2956, 1514, 2178, 1311, 2462, 1312, 1313,
	1311, 2065, 1312, 1313, 2334, 2335, 2336, 2337, 2338, 2261,
	2340, 1518, 2293, 2029, 2342, 1878, 1846, 1824, 2347, 2348,
	1311, 2349, 1312, 1313, 2352, 2273, 2353, 1807, 1314, 1311,
	2356, 1312, 1313, 1756, 2360, 3042, 3043, 3044, 2365, 2366,
	2367, 2368, 1545, 1847, 1311, 2284, 1312, 1313, 888, 969,
	968, 2379, 91, 2382, 2383, 3471, 3411, 3282, 1314, 1521,
	3248, 2385, 2387, 2516, 2954, 1514, 3169, 3057, 2390, 2391,
	2392, 2393, 2394, 2865, 2919, 1514, 3283, 3054, 3035, 2401,
	2402, 2914, 2403, 2913, 1615, 2406, 2408, 2051, 2305, 2410,
	2137, 2307, 2861, 2818, 1314, 2814, 2551, 2133, 2005, 2422,
	2127, 2126, 2314, 2315, 2316, 2317, 1875, 1314, 2004, 1740,
	1873, 2517, 2902, 1514, 1646, 1311, 1686, 1312, 1313, 2423,
	1642, 1611, 117, 3045, 2816, 1311, 91, 1312, 1313, 1330,
	2517, 1059, 1326, 1682, 1327, 1314, 3002, 3003, 2152, 2042,
	3523, 2339, 2409, 1514, 1803, 3521, 2421, 1370, 1328, 1342,
	1343, 1325, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339,
	1338, 1340, 1341, 1311, 1314, 1312, 1313, 1687, 1688, 1689,
	3046, 3047, 3048, 1314, 2424, 2458, 2426, 3497, 2407, 1514,
	1683, 1684, 1685, 1314, 2341, 2313, 3377, 3303, 3005, 1314,
	2439, 2386, 1514, 1311, 1314, 1312, 1313, 2810, 2809, 1314,
	2808, 2727, 2328, 2530, 2249, 2303, 1804, 1314, 2749, 2747,
	3008, 1314, 3007, 2750, 2748, 2746, 1314, 1527, 2411, 2369,
	1514, 1488, 2435, 2745, 3373, 2751, 40, 2471, 2472, 1311,
	2448, 1312, 1313, 1314, 3139, 2476, 3138, 2477, 2478, 3284,
	2056, 2996, 1311, 1522, 1312, 1313, 1482, 2436, 2361, 1514,
	2705, 2504, 2506, 2451, 2048, 2704, 3337, 2285, 1514, 2287,
	2519, 2542, 3148, 3150, 1530, 2522, 2523, 2497, 3353, 2986,
	1311, 2481, 1312, 1313, 3255, 2714, 1314, 2485, 2302, 1755,
	1314, 874, 2488, 1526, 3137, 2983, 2788, 2431, 2717, 2719,
	2495, 2144, 3059, 2982, 2566, 3010, 2521, 2720, 903, 1311,
	2961, 1312, 1313, 2498, 1314, 2501, 904, 808, 1311, 2509,
	1312, 1313, 1314, 1025, 2564, 1024, 1314, 2957, 1311, 1901,
	1312, 1313, 1314, 2518, 1311, 2880, 1312, 1313, 1314, 1311,
	2516, 1312, 1313, 1902, 1311, 2526, 1312, 1313, 2531, 2532,
	2533, 2527, 1311, 1314, 1312, 1313, 1311, 2598, 1312, 1313,
	1280, 1311, 1314, 1312, 1313, 97, 1634, 2557, 97, 125,
	2929, 191, 99, 2563, 191, 2512, 98, 640, 1311, 98,
	1312, 1313, 646, 2988, 2633, 2634, 2635, 2636, 2637, 2607,
	2552, 2553, 99, 191, 2562, 2067, 2068, 3535, 2925, 2806,
	2252, 3450, 3354, 2642, 106, 3278, 2911, 2787, 191, 1314,
	2910, 2475, 2053, 2241, 1314, 105, 2907, 104, 911, 912,
	2587, 1311, 2405, 1312, 1313, 1311, 99, 1312, 1313, 2623,
	2703, 2240, 2239, 646, 191, 646, 2238, 2404, 2702, 2606,
	2237, 2590, 2968, 2638, 2596, 2279, 2400, 2597, 104, 1311,
	3325, 1312, 1313, 3324, 3306, 106, 3156, 1311, 3154, 1312,
	1313, 1311, 3153, 1312, 1313, 3146, 105, 1311, 104, 1312,
	1313, 3055, 2987, 1311, 2624, 1312, 1313, 2985, 2467, 2470,
	2471, 2472, 2468, 2819, 2469, 2473, 2179, 1629, 1311, 2603,
	1312, 1313, 106, 2399, 910, 105, 3145, 1311, 2398, 1312,
	1313, 3127, 2976, 105, 2454, 2434, 2626, 2681, 915, 2679,
	2645, 2627, 2628, 3525, 3524, 2630, 2331, 2040, 2632, 1539,
	1531, 2647, 110, 111, 3524, 3525, 3343, 3021, 901, 3,
	2736, 2684, 1994, 1820, 1994, 93, 10, 1, 2639, 2640,
	2641, 2653, 1818, 1283, 1311, 9, 1312, 1313, 2754, 1311,
	2646, 1312, 1313, 2648, 2649, 2650, 1282, 3025, 3460, 2651,
	2652, 2707, 1819, 1968, 2654, 8, 607, 2656, 2030, 2730,
	2658, 2659, 2660, 2661, 2730, 1486, 3498, 2756, 2662, 1968,
	1968, 1968, 1968, 1968, 2739, 2680, 3456, 2682, 3457, 2699,
	2695, 1726, 1716, 2625, 2684, 3087, 2085, 915, 2708, 1965,
	3279, 2706, 2822, 2683, 2685, 2686, 2687, 2688, 2689, 2690,
	2185, 3053, 2142, 2691, 2692, 977, 2693, 2709, 2694, 150,
	2105, 890, 2721, 2722, 2085, 2085, 2085, 2085, 2085, 2738,
	2740, 2106, 891, 2743, 2733, 892, 2724, 2741, 2742, 3424,
	2744, 2799, 2800, 2842, 2085, 2752, 2758, 2085, 1314, 2759,
	114, 935, 2655, 2760, 2657, 113, 980, 100, 1087, 2821,
	101, 2180, 3077, 2725, 2696, 2697, 2698, 2766, 2502, 2797,
	2668, 2669, 2670, 2671, 2882, 2798, 2114, 1314, 2796, 1564,
	1562, 1563, 1561, 2663, 2664, 2665, 2666, 2667, 2755, 1314,
	1566, 1565, 2888, 1314, 2899, 2900, 2901, 2332, 2903, 2905,
	2841, 2930, 1811, 2850, 2820, 2884, 2849, 2608, 642, 2144,
	2474, 636, 2912, 1314, 188, 1766, 1553, 2916, 2917, 2918,
	2920, 2921, 2922, 2923, 1314, 2856, 2924, 1532, 2926, 2927,
	2928, 2943, 2397, 2932, 2933, 2934, 2935, 2936, 2937, 2938,
	2939, 2940, 2941, 2876, 2875, 2873, 1019, 597, 2817, 2878,
	2879, 2948, 2795, 2218, 2952, 2883, 2953, 2955, 603, 2958,
	2960, 2396, 2962, 2963, 2964, 2965, 2890, 2891, 1362, 2892,
	2971, 2893, 2894, 2395, 2896, 1802, 2898, 2384, 2701, 2489,
	930, 1512, 1508, 1311, 922, 1312, 1313, 1314, 2467, 2470,
	2471, 2472, 2468, 1314, 2469, 2473, 1509, 2378, 3002, 3003,
	2945, 1314, 2041, 2425, 929, 2993, 2994, 2949, 2377, 2998,
	3256, 2735, 1311, 1314, 1312, 1313, 2980, 1314, 2713, 2715,
	2441, 2046, 2047, 1511, 1311, 1510, 1312, 1313, 1311, 2718,
	1312, 1313, 2711, 1314, 3336, 2974, 3147, 3409, 2499, 1314,
	2906, 1528, 2950, 2304, 2972, 1314, 2969, 2970, 1311, 1890,
	1312, 1313, 1352, 2082, 2915, 2984, 3122, 1839, 2977, 1311,
	1314, 1312, 1313, 665, 664, 1314, 662, 2427, 2999, 2989,
	2455, 2376, 1317, 812, 1314, 2415, 1540, 2375, 2466, 2464,
	1314, 2463, 3006, 2250, 3009, 2374, 2090, 3013, 3014, 1314,
	3004, 3000, 3452, 3011, 1314, 2084, 2080, 2373, 2433, 763,
	1314, 2372, 762, 674, 666, 3030, 3031, 191, 3019, 191,
	3060, 3061, 191, 658, 3075, 2850, 3020, 2371, 2849, 2085,
	1314, 3012, 1311, 2370, 1312, 1313, 3081, 3082, 1311, 2364,
	1312, 1313, 3036, 761, 3038, 1314, 1311, 760, 1312, 1313,
	3018, 1314, 2848, 646, 2363, 646, 646, 3436, 1311, 2362,
	1312, 1313, 1311, 2572, 1312, 1313, 3094, 3064, 2359, 3098,
	1314, 3068, 3069, 3070, 2358, 646, 191, 2862, 1311, 1314,
	1312, 1313, 2574, 2357, 1311, 2500, 1312, 1313, 2355, 2858,
	1311, 1295, 1312, 1313, 2351, 1504, 3109, 652, 3083, 948,
	2885, 3360, 2278, 2908, 1357, 1311, 1503, 1312, 1313, 1920,
	1311, 3113, 1312, 1313, 2350, 1512, 1508, 1921, 3367, 1311,
	2830, 1312, 1313, 3121, 3071, 1311, 2811, 1312, 1313, 2346,
	1509, 3128, 2548, 3056, 1311, 2344, 1312, 1313, 2172, 1311,
	66, 1312, 1313, 44, 3099, 1311, 3331, 1312, 1313, 3397,
	759, 756, 3124, 3125, 2309, 1505, 1506, 1511, 3126, 1510,
	2675, 2676, 3380, 2298, 3381, 1311, 3080, 1312, 1313, 755,
	3382, 1948, 1293, 1290, 3473, 3120, 1813, 92, 3142, 35,
	1311, 34, 1312, 1313, 33, 32, 1311, 31, 1312, 1313,
	25, 24, 23, 22, 21, 28, 1875, 20, 19, 18,
	1873, 3103, 2833, 3493, 3534, 1311, 119, 1312, 1313, 3171,
	53, 3152, 50, 2730, 1311, 3163, 1312, 1313, 3165, 48,
	3143, 3100, 3151, 3101, 3167, 127, 3102, 126, 3159, 3105,
	3106, 51, 47, 1062, 3161, 45, 30, 29, 3110, 17,
	16, 15, 14, 13, 12, 11, 1357, 7, 3112, 6,
	3172, 3173, 3270, 38, 37, 27, 36, 26, 3175, 3257,
	4, 3277, 2535, 2174, 0, 0, 40, 0, 0, 0,
	3129, 0, 0, 3130, 0, 3131, 3132, 0, 3133, 2733,
	3134, 3287, 3288, 2733, 3290, 3135, 3291, 3292, 0, 3254,
	3252, 3295, 3296, 3297, 3253, 3299, 3302, 3300, 3301, 3269,
	3264, 3265, 3266, 191, 0, 1875, 3274, 646, 646, 1873,
	3160, 3311, 3313, 3314, 3316, 3318, 3319, 3321, 3304, 3273,
	0, 3168, 0, 191, 3170, 0, 0, 0, 0, 0,
	3111, 0, 0, 0, 0, 0, 3174, 0, 3281, 0,
	0, 0, 0, 646, 0, 0, 191, 3305, 0, 0,
	3261, 0, 0, 0, 3249, 3351, 3307, 0, 646, 0,
	3310, 0, 0, 0, 191, 0, 0, 3326, 3327, 3329,
	3328, 3347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3350, 0, 0,
	0, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1357, 0, 0, 0, 0, 0,
	646, 646, 0, 646, 0, 646, 646, 0, 646, 646,
	646, 646, 646, 646, 0, 0, 0, 0, 0, 0,
	0, 1357, 0, 0, 1357, 646, 1357, 191, 0, 2733,
	3352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3346, 0, 0, 0, 3334, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 3376, 191, 0, 3371, 0, 0, 0, 0, 0,
	0, 3366, 0, 3363, 0, 0, 646, 0, 191, 3368,
	0, 3392, 0, 0, 0, 0, 0, 3393, 3394, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 0, 3405,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 646,
	0, 0, 0, 3386, 0, 0, 3387, 3359, 3395, 0,
	40, 3335, 0, 0, 0, 3430, 3431, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2730, 3437, 3412, 3440,
	3442, 3444, 0, 3438, 0, 3410, 3402, 0, 3423, 3415,
	3420, 3417, 3416, 3414, 3419, 3418, 0, 0, 0, 0,
	0, 0, 0, 0, 3472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3448, 0, 0, 0, 3374, 0,
	0, 0, 3451, 3469, 3459, 3464, 0, 0, 3437, 0,
	0, 3281, 3425, 0, 3438, 3478, 40, 0, 3476, 0,
	0, 3388, 0, 3489, 3389, 0, 3390, 0, 0, 823,
	0, 0, 83, 3407, 0, 0, 0, 0, 0, 1365,
	0, 186, 3492, 3487, 0, 0, 0, 0, 0, 0,
	0, 0, 2541, 0, 0, 3510, 3512, 3514, 0, 0,
	0, 0, 3507, 3505, 0, 125, 0, 147, 0, 1875,
	0, 0, 0, 1873, 3516, 3515, 0, 0, 168, 3522,
	3520, 0, 3519, 3518, 3437, 0, 3533, 0, 0, 0,
	3438, 3530, 0, 3375, 646, 646, 0, 3536, 0, 0,
	3544, 3385, 3545, 3546, 3542, 0, 0, 646, 3491, 158,
	0, 887, 0, 83, 191, 146, 0, 0, 1581, 0,
	3470, 0, 0, 1875, 3553, 3554, 3301, 1873, 3552, 0,
	0, 0, 887, 0, 165, 0, 3551, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 947, 0, 0,
	3484, 0, 3485, 0, 3486, 0, 1637, 1638, 157, 156,
	185, 0, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1357, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 0, 1357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 646, 0, 0, 0, 0,
	3531, 0, 3532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	1639, 154, 1569, 1636, 2006, 152, 153, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 1582, 592, 191,
	0, 0, 0, 646, 0, 0, 2006, 191, 0, 191,
	0, 191, 191, 0, 0, 0, 0, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 943, 1595,
	1598, 1599, 1600, 1601, 1602, 1603, 0, 1604, 1605, 1606,
	1607, 1608, 1583, 1584, 1585, 1586, 1567, 1568, 1596, 0,
	1570, 646, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 0, 0, 1580, 1587, 1588, 1589, 1590, 0, 1591,
	1592, 1593, 1594, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 646, 0, 0, 0,
	646, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 191, 161, 0, 191, 0,
	191, 0, 0, 173, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 1597, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 181, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 1123, 1123, 0,
	0, 0, 0, 0, 0, 162, 167, 164, 170, 171,
	172, 174, 176, 177, 178, 179, 0, 0, 0, 0,
	0, 180, 182, 183, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1357, 0, 2006, 0,
	0, 0, 0, 0, 0, 887, 1354, 1359, 1360, 0,
	1363, 0, 1364, 1366, 1367, 1368, 0, 1371, 1372, 1374,
	1374, 0, 1374, 1378, 1378, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	0, 0, 0, 0, 1445, 0, 1447, 1448, 1449, 1450,
	1451, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	1378, 1378, 1378, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 1484, 191, 0, 0, 0, 0,
	0, 0, 0, 1581, 0, 0, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 1063, 0, 1069, 186, 0, 1071, 0, 0, 0,
	0, 0, 0, 0, 0, 1633, 0, 0, 0, 0,
	0, 191, 0, 0, 0, 0, 191, 1490, 125, 0,
	147, 0, 0, 887, 0, 0, 0, 887, 0, 0,
	0, 168, 0, 887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 0, 191, 165, 0, 0,
	166, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 0, 1637,
	1638, 157, 156, 185, 646, 0, 0, 1569, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1357,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 191, 191, 191, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 1639, 154, 0, 1636, 0, 152, 153,
	0, 0, 0, 0, 646, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 1598, 1599, 1600, 1601, 1602,
	1603, 646, 1604, 1605, 1606, 1607, 1608, 1583, 1584, 1585,
	1586, 1567, 1568, 1596, 0, 1570, 0, 1571, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 0, 0, 1580, 1587,
	1588, 1589, 1590, 0, 1591, 1592, 1593, 1594, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 646, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 191, 0, 807, 0, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 1357, 0, 0, 646, 646, 1357,
	191, 191, 191, 191, 191, 0, 0, 0, 0, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 191, 0,
	191, 0, 0, 191, 191, 191, 1123, 1123, 0, 0,
	0, 1696, 0, 625, 0, 0, 0, 0, 0, 645,
	83, 0, 0, 83, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1597, 0,
	0, 0, 0, 0, 0, 0, 1741, 0, 191, 3193,
	3195, 3194, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 713,
	0, 646, 0, 0, 1357, 0, 0, 0, 0, 646,
	645, 0, 645, 0, 191, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 1779, 148, 0, 191, 149,
	0, 0, 0, 0, 0, 0, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 0, 0, 0, 0, 191, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 1998, 0, 0, 826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 167,
	164, 170, 171, 172, 174, 176, 177, 178, 179, 191,
	0, 0, 0, 0, 180, 182, 183, 184, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	0, 0, 0, 2083, 0, 191, 0, 0, 0, 0,
	0, 0, 3199, 0, 0, 0, 0, 0, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 3207, 3208, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 191, 191, 191, 0,
	0, 0, 0, 0, 0, 0, 646, 646, 0, 0,
	0, 0, 0, 947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 779,
	0, 692, 783, 694, 780, 781, 0, 690, 693, 782,
	0, 0, 0, 0, 0, 0, 947, 0, 0, 0,
	0, 0, 0, 646, 646, 646, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 711, 712, 3192, 3196, 3197,
	3198, 3209, 3210, 3211, 3219, 3221, 744, 3220, 3222, 3223,
	3224, 3227, 3228, 3229, 3230, 3225, 3226, 3231, 3176, 3180,
	3177, 3178, 3179, 3191, 3181, 3182, 3183, 3184, 3185, 3186,
	3187, 3188, 3189, 3190, 3232, 3233, 3234, 3235, 3236, 3237,
	3202, 3206, 3205, 3203, 3204, 3200, 3201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 784,
	0, 785, 0, 0, 789, 0, 0, 0, 791, 790,
	0, 792, 758, 757, 0, 0, 786, 787, 0, 788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1357, 0,
	0, 0, 0, 646, 0, 646, 0, 0, 0, 0,
	0, 0, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 2073, 0, 2076, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 3238, 3239, 3240, 3241, 3242, 3243,
	3244, 3245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2280, 0,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	645, 1276, 645, 645, 0, 0, 0, 0, 191, 0,
	0, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 645, 0, 646, 826, 0, 2290, 0, 0,
	0, 0, 0, 0, 0, 1874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 646, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	0, 0, 1827, 2388, 0, 0, 0, 0, 764, 2229,
	0, 0, 0, 0, 0, 0, 0, 0, 2246, 2247,
	0, 0, 2251, 0, 0, 0, 0, 0, 0, 0,
	0, 2254, 0, 0, 0, 2420, 646, 0, 2257, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2260, 0, 0, 0, 0, 0,
	646, 191, 0, 644, 2459, 2460, 0, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 887, 2479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 0, 0, 939, 0, 946, 0, 0, 0,
	0, 1357, 0, 646, 0, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 0, 646, 646, 0,
	0, 0, 0, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1619, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 646, 0, 2555, 0, 645, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 1654, 0,
	0, 1356, 1656, 0, 0, 1659, 1660, 645, 645, 0,
	645, 0, 645, 645, 0, 645, 645, 645, 645, 645,
	645, 0, 0, 0, 0, 0, 0, 646, 1356, 1691,
	1692, 1356, 645, 1356, 0, 1697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 646, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2672, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2734, 0, 83,
	0, 0, 2083, 2083, 2083, 2083, 2083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2083, 0, 0, 2083, 2577, 2578, 2579, 2580,
	2581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 645, 0, 0, 0, 0, 0, 0, 0,
	1827, 2591, 0, 0, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2599, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 1883, 0,
	645, 0, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1125, 0, 1125, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 0,
	645, 0, 0, 645, 0, 0, 0, 0, 0, 0,
	3017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 2807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2857, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 0, 2162, 2163, 2164, 0, 0,
	0, 2874, 0, 0, 2877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	0, 645, 1654, 0, 0, 1654, 0, 1654, 0, 0,
	0, 0, 0, 2194, 0, 0, 0, 0, 1492, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 645, 1536, 0, 0, 645, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2973, 0, 0, 0, 3136, 0, 3140,
	3141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2734, 0, 83, 0, 2734, 0, 0, 0,
	0, 1662, 1662, 0, 1662, 0, 1662, 1662, 0, 1671,
	1662, 1662, 1662, 1662, 1662, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 0, 3262, 0, 0, 0, 3049, 0, 0,
	3050, 3051, 3052, 0, 0, 0, 0, 1763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1356, 0, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 83, 0,
	0, 0, 0, 0, 645, 1125, 1125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3406,
	0, 0, 0, 1869, 83, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 1918, 1919, 0, 0, 0,
	0, 645, 0, 0, 0, 1654, 1654, 0, 0, 0,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 0, 0, 0, 1356, 2565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3488, 0, 0, 0, 0, 1125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 897, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	916, 916, 0, 0, 1536, 3372, 0, 1125, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 939, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 0,
	0, 0, 946, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 939,
	0, 0, 0, 0, 0, 946, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 1356, 0, 0, 645, 645, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 1869, 0, 0,
	0, 1869, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 0,
	0, 1356, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 91, 0, 0, 825, 0, 0,
	2263, 813, 826, 827, 828, 829, 814, 2881, 0, 815,
	816, 0, 817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 822, 830, 831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1125,
	0, 0, 0, 2851, 2852, 0, 0, 645, 0, 0,
	0, 0, 0, 0, 0, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 0, 593, 0, 0, 593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2428, 0, 0,
	0, 0, 0, 0, 2854, 2855, 0, 0, 2443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	645, 645, 645, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 779, 0, 0, 783, 0,
	780, 781, 0, 0, 0, 782, 0, 0, 0, 0,
	0, 2524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2055, 0,
	0, 0, 0, 0, 0, 2549, 0, 0, 0, 0,
	0, 0, 0, 0, 2554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	645, 0, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 593, 0,
	0, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 645, 645, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2673, 0, 0, 0, 645, 0, 0, 0, 1125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 2710, 0, 1358,
	0, 1358, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 1125, 0, 0, 0, 0, 0, 0, 2737, 1662,
	0, 0, 1713, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1765, 0, 0, 0, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 0,
	0, 0, 0, 0, 0, 1788, 1789, 593, 593, 593,
	593, 593, 593, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 0, 0, 0, 0, 645, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 1356, 0,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 0, 0, 0, 91,
	0, 0, 825, 0, 0, 0, 813, 826, 827, 828,
	829, 814, 0, 0, 815, 816, 0, 817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 822, 830, 831, 645, 0, 0, 0, 0, 0,
	0, 2944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 645, 0, 645, 0, 0, 2851, 2852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 916,
	916, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2055, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3088, 3089, 3090, 3091, 916, 1765,
	916, 916, 916, 916, 916, 0, 0, 0, 0, 2854,
	2855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 916, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 897, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 0, 0, 0,
	0, 1765, 593, 0, 593, 0, 593, 2092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3164, 0, 3166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2055, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3322, 0, 0, 0, 3322,
	3322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 2055, 0,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	593, 0, 0, 593, 0, 2253, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 0, 0, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 1765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1125, 1125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3399, 0,
	0, 0, 593, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2055, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2944, 0, 3454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 0, 0, 0, 0, 0, 0, 2534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 593, 593,
	593, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 593, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 916, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 916, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 1358, 593, 593, 593, 593, 593,
	0, 0, 0, 0, 0, 0, 0, 2753, 0, 0,
	0, 0, 0, 1713, 0, 593, 0, 0, 593, 2761,
	1765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 593, 0, 0, 593, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	593, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 593, 0,
	0, 593, 593, 593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 1259, 1244, 502,
	0, 1187, 1262, 1156, 1175, 1272, 1178, 1181, 1223, 1135,
	1201, 403, 1172, 1128, 1160, 1130, 1167, 1131, 1158, 1189,
	260, 1155, 1246, 1205, 1261, 354, 257, 1137, 1161, 417,
	1177, 198, 1225, 471, 244, 365, 362, 510, 272, 263,
	259, 242, 307, 373, 415, 492, 409, 1268, 358, 1211,
	0, 481, 388, 0, 0, 0, 1191, 1250, 1199, 1237,
	1186, 1224, 1145, 1210, 1263, 1173, 1220, 1264, 313, 240,
	315, 197, 400, 482, 276, 0, 0, 1713, 0, 3426,
	635, 0, 0, 0, 0, 3427, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 593, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1169, 1217, 1258,
	1170, 1219, 255, 311, 262, 254, 507, 1269, 1249, 1134,
	1198, 1257, 0, 0, 221, 1260, 1193, 0, 1222, 0,
	1275, 1129, 1213, 0, 1132, 1136, 1271, 1253, 1164, 265,
	0, 0, 0, 0, 0, 0, 0, 1190, 1200, 1234,
	1238, 1184, 0, 0, 0, 0, 1358, 0, 0, 1162,
	0, 1209, 0, 0, 0, 1141, 1133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	0, 0, 0, 0, 1144, 0, 1163, 1235, 1713, 1127,
	288, 1138, 389, 247, 0, 438, 278, 1242, 1252, 1185,
	547, 1256, 1183, 1182, 1229, 1142, 1248, 1176, 353, 1140,
	320, 193, 217, 0, 1174, 399, 446, 458, 1247, 1159,
	1168, 245, 1166, 456, 413, 526, 225, 274, 443, 419,
	454, 426, 277, 1208, 1227, 455, 360, 512, 436, 523,
	548, 549, 253, 393, 535, 496, 543, 565, 218, 250,
	407, 489, 529, 478, 385, 508, 509, 319, 477, 286,
	196, 357, 554, 216, 464, 359, 234, 223, 514, 532,
	280, 441, 561, 205, 491, 521, 231, 468, 0, 0,
	567, 239, 488, 207, 519, 487, 381, 316, 317, 206,
	0, 442, 258, 284, 248, 402, 516, 517, 246, 568,
	220, 542, 212, 1139, 541, 395, 511, 520, 382, 371,
	211, 518, 380, 370, 324, 343, 344, 270, 297, 433,
	363, 434, 296, 298, 391, 390, 392, 200, 530, 0,
	201, 0, 483, 531, 569, 226, 227, 229, 1154, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 432, 428,
	437, 1243, 506, 524, 536, 546, 552, 553, 555, 556,
	557, 558, 559, 562, 560, 394, 301, 479, 323, 361,
	1232, 1274, 412, 457, 232, 528, 480, 1149, 1153, 1147,
	1214, 1148, 1203, 1204, 1150, 1265, 1266, 1267, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 0, 1236, 1143, 0,
	1151, 1152, 1245, 1254, 1255, 588, 372, 470, 525, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	505, 302, 208, 209, 210, 498, 499, 500, 501, 539,
	540, 544, 447, 448, 449, 450, 283, 534, 299, 453,
	452, 321, 322, 367, 435, 1207, 192, 213, 356, 1270,
	439, 279, 566, 538, 533, 199, 215, 1146, 252, 1157,
	1165, 0, 1171, 1179, 1180, 1192, 1194, 1195, 1196, 1197,
	1215, 1216, 1218, 1226, 1228, 1231, 1233, 1240, 1251, 1273,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 425, 427, 429, 440,
	445, 459, 460, 461, 462, 463, 466, 467, 472, 473,
	474, 475, 476, 484, 485, 490, 513, 515, 527, 545,
	550, 465, 291, 292, 430, 431, 304, 305, 563, 564,
	290, 522, 551, 0, 0, 366, 1206, 1212, 369, 271,
	295, 310, 1221, 537, 486, 219, 451, 281, 243, 1239,
	1241, 204, 238, 222, 249, 264, 267, 314, 379, 387,
	416, 421, 287, 261, 236, 444, 233, 469, 493, 494,
	495, 497, 383, 256, 420, 1202, 1230, 364, 503, 504,
	306, 384, 0, 0, 0, 1259, 1244, 502, 0, 1187,
	1262, 1156, 1175, 1272, 1178, 1181, 1223, 1135, 1201, 403,
	1172, 1128, 1160, 1130, 1167, 1131, 1158, 1189, 260, 1155,
	1246, 1205, 1261, 354, 257, 1137, 1161, 417, 1177, 198,
	1225, 471, 244, 365, 362, 510, 272, 263, 259, 242,
	307, 373, 415, 492, 409, 1268, 358, 1211, 0, 481,
	388, 0, 0, 0, 1191, 1250, 1199, 1237, 1186, 1224,
	1145, 1210, 1263, 1173, 1220, 1264, 313, 240, 315, 197,
	400, 482, 276, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 339, 348, 347, 328, 329,
	331, 333, 338, 345, 351, 1169, 1217, 1258, 1170, 1219,
	255, 311, 262, 254, 507, 1269, 1249, 1134, 1198, 1257,
	0, 0, 221, 1260, 1193, 0, 1222, 0, 1275, 1129,
	1213, 0, 1132, 1136, 1271, 1253, 1164, 265, 0, 0,
	0, 0, 0, 0, 0, 1190, 1200, 1234, 1238, 1184,
	0, 0, 0, 0, 0, 2762, 0, 1162, 0, 1209,
	0, 0, 0, 1141, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1188, 0, 0,
	0, 0, 1144, 0, 1163, 1235, 0, 1127, 288, 1138,
	389, 247, 0, 438, 278, 1242, 1252, 1185, 547, 1256,
	1183, 1182, 1229, 1142, 1248, 1176, 353, 1140, 320, 193,
	217, 0, 1174, 399, 446, 458, 1247, 1159, 1168, 245,
	1166, 456, 413, 526, 225, 274, 443, 419, 454, 426,
	277, 1208, 1227, 455, 360, 512, 436, 523, 548, 549,
	253, 393, 535, 496, 543, 565, 218, 250, 407, 489,
	529, 478, 385, 508, 509, 319, 477, 286, 196, 357,
	554, 216, 464, 359, 234, 223, 514, 532, 280, 441,
	561, 205, 491, 521, 231, 468, 0, 0, 567, 239,
	488, 207, 519, 487, 381, 316, 317, 206, 0, 442,
	258, 284, 248, 402, 516, 517, 246, 568, 220, 542,
	212, 1139, 541, 395, 511, 520, 382, 371, 211, 518,
	380, 370, 324, 343, 344, 270, 297, 433, 363, 434,
	296, 298, 391, 390, 392, 200, 530, 0, 201, 0,
	483, 531, 569, 226, 227, 229, 1154, 269, 273, 282,
	285, 293, 294, 303, 355, 406, 432, 428, 437, 1243,
	506, 524, 536, 546, 552, 553, 555, 556, 557, 558,
	559, 562, 560, 394, 301, 479, 323, 361, 1232, 1274,
	412, 457, 232, 528, 480, 1149, 1153, 1147, 1214, 1148,
	1203, 1204, 1150, 1265, 1266, 1267, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 0, 1236, 1143, 0, 1151, 1152,
	1245, 1254, 1255, 588, 372, 470, 525, 325, 337, 340,
	330, 349, 0, 350, 326, 327, 332, 334, 335, 336,
	341, 342, 346, 352, 241, 203, 378, 386, 505, 302,
	208, 209, 210, 498, 499, 500, 501, 539, 540, 544,
	447, 448, 449, 450, 283, 534, 299, 453, 452, 321,
	322, 367, 435, 1207, 192, 213, 356, 1270, 439, 279,
	566, 538, 533, 199, 215, 1146, 252, 1157, 1165, 0,
	1171, 1179, 1180, 1192, 1194, 1195, 1196, 1197, 1215, 1216,
	1218, 1226, 1228, 1231, 1233, 1240, 1251, 1273, 194, 195,
	202, 214, 224, 228, 235, 251, 266, 268, 275, 289,
	300, 308, 309, 312, 318, 368, 374, 375, 376, 377,
	396, 397, 398, 401, 404, 405, 408, 410, 411, 414,
	418, 422, 423, 424, 425, 427, 429, 440, 445, 459,
	460, 461, 462, 463, 466, 467, 472, 473, 474, 475,
	476, 484, 485, 490, 513, 515, 527, 545, 550, 465,
	291, 292, 430, 431, 304, 305, 563, 564, 290, 522,
	551, 0, 0, 366, 1206, 1212, 369, 271, 295, 310,
	1221, 537, 486, 219, 451, 281, 243, 1239, 1241, 204,
	238, 222, 249, 264, 267, 314, 379, 387, 416, 421,
	287, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	383, 256, 420, 1202, 1230, 364, 503, 504, 306, 384,
	0, 0, 0, 1259, 1244, 502, 0, 1187, 1262, 1156,
	1175, 1272, 1178, 1181, 1223, 1135, 1201, 403, 1172, 1128,
	1160, 1130, 1167, 1131, 1158, 1189, 260, 1155, 1246, 1205,
	1261, 354, 257, 1137, 1161, 417, 1177, 198, 1225, 471,
	244, 365, 362, 510, 272, 263, 259, 242, 307, 373,
	415, 492, 409, 1268, 358, 1211, 0, 481, 388, 0,
	0, 0, 1191, 1250, 1199, 1237, 1186, 1224, 1145, 1210,
	1263, 1173, 1220, 1264, 313, 240, 315, 197, 400, 482,
	276, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 237,
	0, 0, 0, 339, 348, 347, 328, 329, 331, 333,
	338, 345, 351, 1169, 1217, 1258, 1170, 1219, 255, 311,
	262, 254, 507, 1269, 1249, 1134, 1198, 1257, 0, 0,
	221, 1260, 1193, 0, 1222, 0, 1275, 1129, 1213, 0,
	1132, 1136, 1271, 1253, 1164, 265, 0, 0, 0, 0,
	0, 0, 0, 1190, 1200, 1234, 1238, 1184, 0, 0,
	0, 0, 0, 2723, 0, 1162, 0, 1209, 0, 0,
	0, 1141, 1133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 0, 0, 0, 0,
	1144, 0, 1163, 1235, 0, 1127, 288, 1138, 389, 247,
	0, 438, 278, 1242, 1252, 1185, 547, 1256, 1183, 1182,
	1229, 1142, 1248, 1176, 353, 1140, 320, 193, 217, 0,
	1174, 399, 446, 458, 1247, 1159, 1168, 245, 1166, 456,
	413, 526, 225, 274, 443, 419, 454, 426, 277, 1208,
	1227, 455, 360, 512, 436, 523, 548, 549, 253, 393,
	535, 496, 543, 565, 218, 250, 407, 489, 529, 478,
	385, 508, 509, 319, 477, 286, 196, 357, 554, 216,
	464, 359, 234, 223, 514, 532, 280, 441, 561, 205,
	491, 521, 231, 468, 0, 0, 567, 239, 488, 207,
	519, 487, 381, 316, 317, 206, 0, 442, 258, 284,
	248, 402, 516, 517, 246, 568, 220, 542, 212, 1139,
	541, 395, 511, 520, 382, 371, 211, 518, 380, 370,
	324, 343, 344, 270, 297, 433, 363, 434, 296, 298,
	391, 390, 392, 200, 530, 0, 201, 0, 483, 531,
	569, 226, 227, 229, 1154, 269, 273, 282, 285, 293,
	294, 303, 355, 406, 432, 428, 437, 1243, 506, 524,
	536, 546, 552, 553, 555, 556, 557, 558, 559, 562,
	560, 394, 301, 479, 323, 361, 1232, 1274, 412, 457,
	232, 528, 480, 1149, 1153, 1147, 1214, 1148, 1203, 1204,
	1150, 1265, 1266, 1267, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 0, 1236, 1143, 0, 1151, 1152, 1245, 1254,
	1255, 588, 372, 470, 525, 325, 337, 340, 330, 349,
	0, 350, 326, 327, 332, 334, 335, 336, 341, 342,
	346, 352, 241, 203, 378, 386, 505, 302, 208, 209,
	210, 498, 499, 500, 501, 539, 540, 544, 447, 448,
	449, 450, 283, 534, 299, 453, 452, 321, 322, 367,
	435, 1207, 192, 213, 356, 1270, 439, 279, 566, 538,
	533, 199, 215, 1146, 252, 1157, 1165, 0, 1171, 1179,
	1180, 1192, 1194, 1195, 1196, 1197, 1215, 1216, 1218, 1226,
	1228, 1231, 1233, 1240, 1251, 1273, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 289, 300, 308,
	309, 312, 318, 368, 374, 375, 376, 377, 396, 397,
	398, 401, 404, 405, 408, 410, 411, 414, 418, 422,
	423, 424, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 527, 545, 550, 465, 291, 292,
	430, 431, 304, 305, 563, 564, 290, 522, 551, 0,
	0, 366, 1206, 1212, 369, 271, 295, 310, 1221, 537,
	486, 219, 451, 281, 243, 1239, 1241, 204, 238, 222,
	249, 264, 267, 314, 379, 387, 416, 421, 287, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 383, 256,
	420, 1202, 1230, 364, 503, 504, 306, 384, 0, 0,
	0, 1259, 1244, 502, 0, 1187, 1262, 1156, 1175, 1272,
	1178, 1181, 1223, 1135, 1201, 403, 1172, 1128, 1160, 1130,
	1167, 1131, 1158, 1189, 260, 1155, 1246, 1205, 1261, 354,
	257, 1137, 1161, 417, 1177, 198, 1225, 471, 244, 365,
	362, 510, 272, 263, 259, 242, 307, 373, 415, 492,
	409, 1268, 358, 1211, 0, 481, 388, 0, 0, 0,
	1191, 1250, 1199, 1237, 1186, 1224, 1145, 1210, 1263, 1173,
	1220, 1264, 313, 240, 315, 197, 400, 482, 276, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 237, 0, 0,
	0, 339, 348, 347, 328, 329, 331, 333, 338, 345,
	351, 1169, 1217, 1258, 1170, 1219, 255, 311, 262, 254,
	507, 1269, 1249, 1134, 1198, 1257, 0, 0, 221, 1260,
	1193, 0, 1222, 0, 1275, 1129, 1213, 0, 1132, 1136,
	1271, 1253, 1164, 265, 0, 0, 0, 0, 0, 0,
	0, 1190, 1200, 1234, 1238, 1184, 0, 0, 0, 0,
	0, 2071, 0, 1162, 0, 1209, 0, 0, 0, 1141,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1188, 0, 0, 0, 0, 1144, 0,
	1163, 1235, 0, 1127, 288, 1138, 389, 247, 0, 438,
	278, 1242, 1252, 1185, 547, 1256, 1183, 1182, 1229, 1142,
	1248, 1176, 353, 1140, 320, 193, 217, 0, 1174, 399,
	446, 458, 1247, 1159, 1168, 245, 1166, 456, 413, 526,
	225, 274, 443, 419, 454, 426, 277, 1208, 1227, 455,
	360, 512, 436, 523, 548, 549, 253, 393, 535, 496,
	543, 565, 218, 250, 407, 489, 529, 478, 385, 508,
	509, 319, 477, 286, 196, 357, 554, 216, 464, 359,
	234, 223, 514, 532, 280, 441, 561, 205, 491, 521,
	231, 468, 0, 0, 567, 239, 488, 207, 519, 487,
	381, 316, 317, 206, 0, 442, 258, 284, 248, 402,
	516, 517, 246, 568, 220, 542, 212, 1139, 541, 395,
	511, 520, 382, 371, 211, 518, 380, 370, 324, 343,
	344, 270, 297, 433, 363, 434, 296, 298, 391, 390,
	392, 200, 530, 0, 201, 0, 483, 531, 569, 226,
	227, 229, 1154, 269, 273, 282, 285, 293, 294, 303,
	355, 406, 432, 428, 437, 1243, 506, 524, 536, 546,
	552, 553, 555, 556, 557, 558, 559, 562, 560, 394,
	301, 479, 323, 361, 1232, 1274, 412, 457, 232, 528,
	480, 1149, 1153, 1147, 1214, 1148, 1203, 1204, 1150, 1265,
	1266, 1267, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	0, 1236, 1143, 0, 1151, 1152, 1245, 1254, 1255, 588,
	372, 470, 525, 325, 337, 340, 330, 349, 0, 350,
	326, 327, 332, 334, 335, 336, 341, 342, 346, 352,
	241, 203, 378, 386, 505, 302, 208, 209, 210, 498,
	499, 500, 501, 539, 540, 544, 447, 448, 449, 450,
	283, 534, 299, 453, 452, 321, 322, 367, 435, 1207,
	192, 213, 356, 1270, 439, 279, 566, 538, 533, 199,
	215, 1146, 252, 1157, 1165, 0, 1171, 1179, 1180, 1192,
	1194, 1195, 1196, 1197, 1215, 1216, 1218, 1226, 1228, 1231,
	1233, 1240, 1251, 1273, 194, 195, 202, 214, 224, 228,
	235, 251, 266, 268, 275, 289, 300, 308, 309, 312,
	318, 368, 374, 375, 376, 377, 396, 397, 398, 401,
	404, 405, 408, 410, 411, 414, 418, 422, 423, 424,
	425, 427, 429, 440, 445, 459, 460, 461, 462, 463,
	466, 467, 472, 473, 474, 475, 476, 484, 485, 490,
	513, 515, 527, 545, 550, 465, 291, 292, 430, 431,
	304, 305, 563, 564, 290, 522, 551, 0, 0, 366,
	1206, 1212, 369, 271, 295, 310, 1221, 537, 486, 219,
	451, 281, 243, 1239, 1241, 204, 238, 222, 249, 264,
	267, 314, 379, 387, 416, 421, 287, 261, 236, 444,
	233, 469, 493, 494, 495, 497, 383, 256, 420, 1202,
	1230, 364, 503, 504, 306, 384, 0, 0, 0, 1259,
	1244, 502, 0, 1187, 1262, 1156, 1175, 1272, 1178, 1181,
	1223, 1135, 1201, 403, 1172, 1128, 1160, 1130, 1167, 1131,
	1158, 1189, 260, 1155, 1246, 1205, 1261, 354, 257, 1137,
	1161, 417, 1177, 198, 1225, 471, 244, 365, 362, 510,
	272, 263, 259, 242, 307, 373, 415, 492, 409, 1268,
	358, 1211, 0, 481, 388, 0, 0, 0, 1191, 1250,
	1199, 1237, 1186, 1224, 1145, 1210, 1263, 1173, 1220, 1264,
	313, 240, 315, 197, 400, 482, 276, 0, 91, 0,
	0, 0, 635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 237, 0, 0, 0, 339,
	348, 347, 328, 329, 331, 333, 338, 345, 351, 1169,
	1217, 1258, 1170, 1219, 255, 311, 262, 254, 507, 1269,
	1249, 1134, 1198, 1257, 0, 0, 221, 1260, 1193, 0,
	1222, 0, 1275, 1129, 1213, 0, 1132, 1136, 1271, 1253,
	1164, 265, 0, 0, 0, 0, 0, 0, 0, 1190,
	1200, 1234, 1238, 1184, 0, 0, 0, 0, 0, 0,
	0, 1162, 0, 1209, 0, 0, 0, 1141, 1133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1188, 0, 0, 0, 0, 1144, 0, 1163, 1235,
	0, 1127, 288, 1138, 389, 247, 0, 438, 278, 1242,
	1252, 1185, 547, 1256, 1183, 1182, 1229, 1142, 1248, 1176,
	353, 1140, 320, 193, 217, 0, 1174, 399, 446, 458,
	1247, 1159, 1168, 245, 1166, 456, 413, 526, 225, 274,
	443, 419, 454, 426, 277, 1208, 1227, 455, 360, 512,
	436, 523, 548, 549, 253, 393, 535, 496, 543, 565,
	218, 250, 407, 489, 529, 478, 385, 508, 509, 319,
	477, 286, 196, 357, 554, 216, 464, 359, 234, 223,
	514, 532, 280, 441, 561, 205, 491, 521, 231, 468,
	0, 0, 567, 239, 488, 207, 519, 487, 381, 316,
	317, 206, 0, 442, 258, 284, 248, 402, 516, 517,
	246, 568, 220, 542, 212, 1139, 541, 395, 511, 520,
	382, 371, 211, 518, 380, 370, 324, 343, 344, 270,
	297, 433, 363, 434, 296, 298, 391, 390, 392, 200,
	530, 0, 201, 0, 483, 531, 569, 226, 227, 229,
	1154, 269, 273, 282, 285, 293, 294, 303, 355, 406,
	432, 428, 437, 1243, 506, 524, 536, 546, 552, 553,
	555, 556, 557, 558, 559, 562, 560, 394, 301, 479,
	323, 361, 1232, 1274, 412, 457, 232, 528, 480, 1149,
	1153, 1147, 1214, 1148, 1203, 1204, 1150, 1265, 1266, 1267,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 0, 1236,
	1143, 0, 1151, 1152, 1245, 1254, 1255, 588, 372, 470,
	525, 325, 337, 340, 330, 349, 0, 350, 326, 327,
	332, 334, 335, 336, 341, 342, 346, 352, 241, 203,
	378, 386, 505, 302, 208, 209, 210, 498, 499, 500,
	501, 539, 540, 544, 447, 448, 449, 450, 283, 534,
	299, 453, 452, 321, 322, 367, 435, 1207, 192, 213,
	356, 1270, 439, 279, 566, 538, 533, 199, 215, 1146,
	252, 1157, 1165, 0, 1171, 1179, 1180, 1192, 1194, 1195,
	1196, 1197, 1215, 1216, 1218, 1226, 1228, 1231, 1233, 1240,
	1251, 1273, 194, 195, 202, 214, 224, 228, 235, 251,
	266, 268, 275, 289, 300, 308, 309, 312, 318, 368,
	374, 375, 376, 377, 396, 397, 398, 401, 404, 405,
	408, 410, 411, 414, 418, 422, 423, 424, 425, 427,
	429, 440, 445, 459, 460, 461, 462, 463, 466, 467,
	472, 473, 474, 475, 476, 484, 485, 490, 513, 515,
	527, 545, 550, 465, 291, 292, 430, 431, 304, 305,
	563, 564, 290, 522, 551, 0, 0, 366, 1206, 1212,
	369, 271, 295, 310, 1221, 537, 486, 219, 451, 281,
	243, 1239, 1241, 204, 238, 222, 249, 264, 267, 314,
	379, 387, 416, 421, 287, 261, 236, 444, 233, 469,
	493, 494, 495, 497, 383, 256, 420, 1202, 1230, 364,
	503, 504, 306, 384, 0, 0, 0, 1259, 1244, 502,
	0, 1187, 1262, 1156, 1175, 1272, 1178, 1181, 1223, 1135,
	1201, 403, 1172, 1128, 1160, 1130, 1167, 1131, 1158, 1189,
	260, 1155, 1246, 1205, 1261, 354, 257, 1137, 1161, 417,
	1177, 198, 1225, 471, 244, 365, 362, 510, 272, 263,
	259, 242, 307, 373, 415, 492, 409, 1268, 358, 1211,
	0, 481, 388, 0, 0, 0, 1191, 1250, 1199, 1237,
	1186, 1224, 1145, 1210, 1263, 1173, 1220, 1264, 313, 240,
	315, 197, 400, 482, 276, 0, 0, 0, 0, 0,
	635, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 237, 0, 0, 0, 339, 348, 347,
	328, 329, 331, 333, 338, 345, 351, 1169, 1217, 1258,
	1170, 1219, 255, 311, 262, 254, 507, 1269, 1249, 1134,
	1198, 1257, 0, 0, 221, 1260, 1193, 0, 1222, 0,
	1275, 1129, 1213, 0, 1132, 1136, 1271, 1253, 1164, 265,
	0, 0, 0, 0, 0, 0, 0, 1190, 1200, 1234,
	1238, 1184, 0, 0, 0, 0, 0, 0, 0, 1162,
	0, 1209, 0, 0, 0, 1141, 1133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1188,
	0, 0, 0, 0, 1144, 0, 1163, 1235, 0, 1127,
	288, 1138, 389, 247, 0, 438, 278, 1242, 1252, 1185,
	547, 1256, 1183, 1182, 1229, 1142, 1248, 1176, 353, 1140,
	320, 193, 217, 0, 1174, 399, 446, 458, 1247, 1159,
	1168, 245, 1166, 456, 413, 526, 225, 274, 443, 419,
	454, 426, 277, 1208, 1227, 455, 360, 512, 436, 523,
	548, 549, 253, 393, 535, 496, 543, 565, 218, 250,
	407, 489, 529, 478, 385, 508, 509, 319, 477, 286,
	196, 357, 554, 216, 464, 359, 234, 223, 514, 532,
	280, 441, 561, 205, 491, 521, 231, 468, 0, 0,
	567, 239, 488, 207, 519, 487, 381, 316, 317, 206,
	0, 442, 258, 284, 248, 402, 516, 517, 246, 568,
	220, 542, 212, 1139, 541, 395, 511, 520, 382, 371,
	211, 518, 380, 370, 324, 343, 344, 270, 297, 433,
	363, 434, 296, 298, 391, 390, 392, 200, 530, 0,
	201, 0, 483, 531, 569, 226, 227, 229, 1154, 269,
	273, 282, 285, 293, 294, 303, 355, 406, 432, 428,
	437, 1243, 506, 524, 536, 546, 552, 553, 555, 556,
	557, 558, 559, 562, 560, 394, 301, 479, 323, 361,
	1232, 1274, 412, 457, 232, 528, 480, 1149, 1153, 1147,
	1214, 1148, 1203, 1204, 1150, 1265, 1266, 1267, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 0, 1236, 1143, 0,
	1151, 1152, 1245, 1254, 1255, 588, 372, 470, 525, 325,
	337, 340, 330, 349, 0, 350, 326, 327, 332, 334,
	335, 336, 341, 342, 346, 352, 241, 203, 378, 386,
	505, 302, 208, 209, 210, 498, 499, 500, 501, 539,
	540, 544, 447, 448, 449, 450, 283, 534, 299, 453,
	452, 321, 322, 367, 435, 1207, 192, 213, 356, 1270,
	439, 279, 566, 538, 533, 199, 215, 1146, 252, 1157,
	1165, 0, 1171, 1179, 1180, 1192, 1194, 1195, 1196, 1197,
	1215, 1216, 1218, 1226, 1228, 1231, 1233, 1240, 1251, 1273,
	194, 195, 202, 214, 224, 228, 235, 251, 266, 268,
	275, 289, 300, 308, 309, 312, 318, 368, 374, 375,
	376, 377, 396, 397, 398, 401, 404, 405, 408, 410,
	411, 414, 418, 422, 423, 424, 425, 427, 429, 440,
	445, 459, 460, 461, 462, 463, 466, 467, 472, 473,
	474, 475, 476, 484, 485, 490, 513, 515, 527, 545,
	550, 465, 291, 292, 430, 431, 304, 305, 563, 564,
	290, 522, 551, 0, 0, 366, 1206, 1212, 369, 271,
	295, 310, 1221, 537, 486, 219, 451, 281, 243, 1239,
	1241, 204, 238, 222, 249, 264, 267, 314, 379, 387,
	416, 421, 287, 261, 236, 444, 233, 469, 493, 494,
	495, 497, 383, 256, 420, 1202, 1230, 364, 503, 504,
	306, 384, 0, 0, 0, 1259, 1244, 502, 0, 1187,
	1262, 1156, 1175, 1272, 1178, 1181, 1223, 1135, 1201, 403,
	1172, 1128, 1160, 1130, 1167, 1131, 1158, 1189, 260, 1155,
	1246, 1205, 1261, 354, 257, 1137, 1161, 417, 1177, 198,
	1225, 471, 244, 365, 362, 510, 272, 263, 259, 242,
	307, 373, 415, 492, 409, 1268, 358, 1211, 0, 481,
	388, 0, 0, 0, 1191, 1250, 1199, 1237, 1186, 1224,
	1145, 1210, 1263, 1173, 1220, 1264, 313, 240, 315, 197,
	400, 482, 276, 0, 0, 0, 0, 0, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 339, 348, 347, 328, 329,
	331, 333, 338, 345, 351, 1169, 1217, 1258, 1170, 1219,
	255, 311, 262, 254, 507, 1269, 1249, 1134, 1198, 1257,
	0, 0, 221, 1260, 1193, 0, 1222, 0, 1275, 1129,
	1213, 0, 1132, 1136, 1271, 1253, 1164, 265, 0, 0,
	0, 0, 0, 0, 0, 1190, 1200, 1234, 1238, 1184,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 1209,
	0, 0, 0, 1141, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1188, 0, 0,
	0, 0, 1144, 0, 1163, 1235, 0, 1127, 288, 1138,
	389, 247, 0, 438, 278, 1242, 1252, 1185, 547, 1256,
	1183, 1182, 1229, 1142, 1248, 1176, 353, 1140, 320, 193,
	217, 0, 1174, 399, 446, 458, 1247, 1159, 1168, 245,
	1166, 456, 413, 526, 225, 274, 443, 419, 454, 426,
	277, 1208, 1227, 455, 360, 512, 436, 523, 548, 549,
	253, 393, 535, 496, 543, 565, 218, 250, 407, 489,
	529, 478, 385, 508, 509, 319, 477, 286, 196, 357,
	554, 216, 464, 359, 234, 223, 514, 532, 280, 441,
	561, 205, 491, 521, 231, 468, 0, 0, 567, 239,
	488, 207, 519, 487, 381, 316, 317, 206, 0, 442,
	258, 284, 248, 402, 516, 517, 246, 568, 220, 542,
	212, 1139, 541, 395, 511, 520, 382, 371, 211, 518,
	380, 370, 324, 343, 344, 270, 297, 433, 363, 434,
	296, 298, 391, 390, 392, 200, 530, 0, 201, 0,
	483, 531, 569, 226, 227, 229, 1154, 269, 273, 282,
	285, 293, 294, 303, 355, 406, 432, 428, 437, 1243,
	506, 524, 536, 546, 552, 553, 555, 556, 557, 558,
	559, 562, 560, 394, 301, 479, 323, 361, 1232, 1274,
	412, 457, 232, 528, 480, 1149, 1153, 1147, 1214, 1148,
	1203, 1204, 1150, 1265, 1266, 1267, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 0, 1236, 1143, 0, 1151, 1152,
	1245, 1254, 1255, 588, 372, 470, 525, 325, 337, 340,
	330, 349, 0, 350, 326, 327, 332, 334, 335, 336,
	341, 342, 346, 352, 241, 203, 378, 386, 505, 302,
	208, 209, 210, 498, 499, 500, 501, 539, 540, 544,
	447, 448, 449, 450, 283, 534, 299, 453, 452, 321,
	322, 367, 435, 1207, 192, 213, 356, 1270, 439, 279,
	566, 538, 533, 199, 215, 1146, 252, 1157, 1165, 0,
	1171, 1179, 1180, 1192, 1194, 1195, 1196, 1197, 1215, 1216,
	1218, 1226, 1228, 1231, 1233, 1240, 1251, 1273, 194, 195,
	202, 214, 224, 228, 235, 251, 266, 268, 275, 289,
	300, 308, 309, 312, 318, 368, 374, 375, 376, 377,
	396, 397, 398, 401, 404, 405, 408, 410, 411, 414,
	418, 422, 423, 424, 425, 427, 429, 440, 445, 459,
	460, 461, 462, 463, 466, 467, 472, 473, 474, 475,
	476, 484, 485, 490, 513, 515, 527, 545, 550, 465,
	291, 292, 430, 431, 304, 305, 563, 564, 290, 522,
	551, 0, 0, 366, 1206, 1212, 369, 271, 295, 310,
	1221, 537, 486, 219, 451, 281, 243, 1239, 1241, 204,
	238, 222, 249, 264, 267, 314, 379, 387, 416, 421,
	287, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	383, 256, 420, 1202, 1230, 364, 503, 504, 306, 384,
	0, 0, 0, 1259, 1244, 502, 0, 1187, 1262, 1156,
	1175, 1272, 1178, 1181, 1223, 1135, 1201, 403, 1172, 1128,
	1160, 1130, 1167, 1131, 1158, 1189, 260, 1155, 1246, 1205,
	1261, 354, 257, 1137, 1161, 417, 1177, 198, 1225, 471,
	244, 365, 362, 510, 272, 263, 259, 242, 307, 373,
	415, 492, 409, 1268, 358, 1211, 0, 481, 388, 0,
	0, 0, 1191, 1250, 1199, 1237, 1186, 1224, 1145, 1210,
	1263, 1173, 1220, 1264, 313, 240, 315, 197, 400, 482,
	276, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 237,
	0, 0, 0, 339, 348, 347, 328, 329, 331, 333,
	338, 345, 351, 1169, 1217, 1258, 1170, 1219, 255, 311,
	262, 254, 507, 1269, 1249, 1134, 1198, 1257, 0, 0,
	221, 1260, 1193, 0, 1222, 0, 1275, 1129, 1213, 0,
	1132, 1136, 1271, 1253, 1164, 265, 0, 0, 0, 0,
	0, 0, 0, 1190, 1200, 1234, 1238, 1184, 0, 0,
	0, 0, 0, 0, 0, 1162, 0, 1209, 0, 0,
	0, 1141, 1133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 0, 0, 0, 0,
	1144, 0, 1163, 1235, 0, 1127, 288, 1138, 389, 247,
	0, 438, 278, 1242, 1252, 1185, 547, 1256, 1183, 1182,
	1229, 1142, 1248, 1176, 353, 1140, 320, 193, 217, 0,
	1174, 399, 446, 458, 1247, 1159, 1168, 245, 1166, 456,
	413, 526, 225, 274, 443, 419, 454, 426, 277, 1208,
	1227, 455, 360, 512, 436, 523, 548, 549, 253, 393,
	535, 496, 543, 565, 218, 250, 407, 489, 529, 478,
	385, 508, 509, 319, 477, 286, 196, 357, 554, 216,
	464, 359, 234, 223, 514, 532, 280, 441, 561, 205,
	491, 521, 231, 468, 0, 0, 567, 239, 488, 207,
	519, 487, 381, 316, 317, 206, 0, 442, 258, 284,
	248, 402, 516, 517, 246, 568, 220, 542, 212, 1139,
	541, 395, 511, 520, 382, 371, 211, 518, 380, 370,
	324, 343, 344, 270, 297, 433, 363, 434, 296, 298,
	391, 390, 392, 200, 530, 0, 201, 0, 483, 531,
	569, 226, 227, 229, 1154, 269, 273, 282, 285, 293,
	294, 303, 355, 406, 432, 428, 437, 1243, 506, 524,
	536, 546, 552, 553, 555, 556, 557, 558, 559, 562,
	560, 394, 301, 479, 323, 361, 1232, 1274, 412, 457,
	232, 528, 480, 1149, 1153, 1147, 1214, 1148, 1203, 1204,
	1150, 1265, 1266, 1267, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 0, 1236, 1143, 0, 1151, 1152, 1245, 1254,
	1255, 588, 372, 470, 525, 325, 337, 340, 330, 349,
	0, 350, 326, 327, 332, 334, 335, 336, 341, 342,
	346, 352, 241, 203, 378, 386, 505, 302, 208, 209,
	210, 498, 499, 500, 501, 539, 540, 544, 447, 448,
	449, 450, 283, 534, 299, 453, 452, 321, 322, 367,
	435, 1207, 192, 213, 356, 1270, 439, 279, 566, 538,
	533, 199, 215, 1146, 252, 1157, 1165, 0, 1171, 1179,
	1180, 1192, 1194, 1195, 1196, 1197, 1215, 1216, 1218, 1226,
	1228, 1231, 1233, 1240, 1251, 1273, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 289, 300, 308,
	309, 312, 318, 368, 374, 375, 376, 377, 396, 397,
	398, 401, 404, 405, 408, 410, 411, 414, 418, 422,
	423, 424, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 527, 545, 550, 465, 291, 292,
	430, 431, 304, 305, 563, 564, 290, 522, 551, 0,
	0, 366, 1206, 1212, 369, 271, 295, 310, 1221, 537,
	486, 219, 451, 281, 243, 1239, 1241, 204, 238, 222,
	249, 264, 267, 314, 379, 387, 416, 421, 287, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 383, 256,
	420, 1202, 1230, 364, 503, 504, 306, 384, 0, 0,
	0, 0, 0, 502, 0, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	675, 0, 0, 0, 260, 680, 0, 0, 0, 354,
	257, 0, 0, 417, 0, 198, 0, 471, 244, 365,
	362, 510, 272, 263, 259, 242, 307, 373, 415, 492,
	409, 687, 358, 0, 0, 481, 388, 0, 0, 0,
	0, 0, 683, 684, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 240, 315, 197, 400, 482, 276, 0,
	91, 0, 0, 825, 809, 775, 776, 813, 826, 827,
	828, 829, 814, 0, 230, 815, 816, 237, 817, 0,
	774, 715, 717, 716, 734, 735, 736, 737, 738, 739,
	740, 713, 822, 830, 831, 0, 255, 311, 262, 254,
	507, 0, 0, 1950, 1951, 1952, 0, 0, 221, 0,
	0, 0, 0, 0, 0, 0, 657, 672, 0, 686,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	670, 0, 0, 0, 0, 769, 0, 671, 0, 0,
	679, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 682, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 389, 247, 0, 438,
	278, 768, 0, 0, 547, 0, 0, 766, 0, 0,
	0, 0, 353, 0, 320, 193, 217, 0, 0, 399,
	446, 458, 0, 0, 0, 819, 0, 456, 413, 526,
	225, 274, 443, 419, 454, 426, 277, 0, 0, 455,
	360, 512, 436, 523, 548, 549, 253, 393, 535, 496,
	543, 565, 218, 250, 407, 489, 529, 478, 385, 508,
	509, 319, 477, 286, 196, 357, 554, 216, 464, 359,
	234, 223, 514, 532, 280, 441, 561, 205, 491, 521,
	231, 468, 0, 0, 567, 239, 488, 207, 519, 487,
	381, 316, 317, 206, 0, 442, 258, 284, 248, 402,
	820, 821, 246, 568, 721, 542, 212, 0, 541, 395,
	511, 520, 382, 371, 211, 518, 380, 370, 324, 729,
	730, 270, 297, 433, 363, 434, 296, 298, 391, 390,
	392, 200, 530, 0, 201, 0, 483, 531, 569, 226,
	227, 229, 0, 269, 273, 282, 285, 293, 294, 303,
	355, 406, 432, 428, 437, 0, 506, 524, 536, 546,
	552, 553, 555, 556, 557, 558, 559, 562, 560, 394,
	301, 479, 323, 361, 0, 0, 412, 457, 232, 528,
	480, 779, 767, 692, 783, 694, 780, 781, 689, 690,
	693, 782, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	0, 770, 678, 677, 0, 685, 0, 711, 712, 714,
	718, 719, 720, 731, 732, 733, 741, 743, 744, 742,
	745, 746, 747, 750, 751, 752, 753, 748, 749, 754,
	695, 699, 696, 697, 698, 710, 700, 701, 702, 703,
	704, 705, 706, 707, 708, 709, 793, 794, 795, 796,
	797, 798, 724, 728, 727, 725, 726, 722, 723, 676,
	192, 213, 356, 0, 439, 279, 566, 538, 533, 199,
	215, 784, 252, 785, 0, 0, 789, 0, 0, 0,
	791, 790, 0, 792, 758, 757, 0, 0, 786, 787,
	0, 788, 0, 0, 194, 195, 202, 214, 224, 228,
	235, 251, 266, 268, 275, 289, 300, 308, 309, 312,
	318, 368, 374, 375, 376, 377, 396, 397, 398, 401,
	404, 405, 408, 410, 411, 414, 418, 422, 423, 424,
	425, 427, 429, 440, 445, 459, 460, 461, 462, 463,
	466, 467, 472, 473, 474, 475, 476, 484, 485, 490,
	513, 515, 527, 545, 550, 465, 799, 800, 801, 802,
	803, 804, 805, 806, 290, 522, 551, 0, 0, 366,
	0, 0, 369, 271, 295, 310, 0, 537, 486, 219,
	451, 281, 243, 824, 0, 204, 238, 222, 249, 264,
	267, 314, 379, 387, 416, 421, 287, 261, 236, 444,
	233, 469, 493, 494, 495, 497, 383, 256, 420, 384,
	0, 364, 503, 504, 306, 502, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 675, 0, 0, 0, 260, 680, 0, 0,
	0, 354, 257, 0, 0, 417, 0, 198, 0, 471,
	244, 365, 362, 510, 272, 263, 259, 242, 307, 373,
	415, 492, 409, 687, 358, 0, 0, 481, 388, 0,
	0, 0, 0, 0, 683, 684, 0, 0, 0, 0,
	0, 0, 2100, 0, 313, 240, 315, 197, 400, 482,
	276, 0, 91, 0, 0, 825, 809, 775, 776, 813,
	826, 827, 828, 829, 814, 0, 230, 815, 816, 237,
	817, 0, 774, 715, 717, 716, 734, 735, 736, 737,
	738, 739, 740, 713, 822, 830, 831, 2101, 255, 311,
	262, 254, 507, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 657, 672,
	0, 686, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 669, 670, 0, 0, 0, 0, 769, 0, 671,
	0, 0, 679, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 389, 247,
	0, 438, 278, 768, 0, 0, 547, 0, 0, 766,
	0, 0, 0, 0, 353, 0, 320, 193, 217, 0,
	0, 399, 446, 458, 0, 0, 0, 819, 0, 456,
	413, 526, 225, 274, 443, 419, 454, 426, 277, 0,
	0, 455, 360, 512, 436, 523, 548, 549, 253, 393,
	535, 496, 543, 565, 218, 250, 407, 489, 529, 478,
	385, 508, 509, 319, 477, 286, 196, 357, 554, 216,
	464, 359, 234, 223, 514, 532, 280, 441, 561, 205,
	491, 521, 231, 468, 0, 0, 567, 239, 488, 207,
	519, 487, 381, 316, 317, 206, 0, 442, 258, 284,
	248, 402, 820, 821, 246, 568, 721, 542, 212, 0,
	541, 395, 511, 520, 382, 371, 211, 518, 380, 370,
	324, 729, 730, 270, 297, 433, 363, 434, 296, 298,
	391, 390, 392, 200, 530, 0, 201, 0, 483, 531,
	569, 226, 227, 229, 0, 269, 273, 282, 285, 293,
	294, 303, 355, 406, 432, 428, 437, 0, 506, 524,
	536, 546, 552, 553, 555, 556, 557, 558, 559, 562,
	560, 394, 301, 479, 323, 361, 0, 0, 412, 457,
	232, 528, 480, 779, 767, 692, 783, 694, 780, 781,
	689, 690, 693, 782, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 0, 770, 678, 677, 0, 685, 0, 711,
	712, 714, 718, 719, 720, 731, 732, 733, 741, 743,
	744, 742, 745, 746, 747, 750, 751, 752, 753, 748,
	749, 754, 695, 699, 696, 697, 698, 710, 700, 701,
	702, 703, 704, 705, 706, 707, 708, 709, 793, 794,
	795, 796, 797, 798, 724, 728, 727, 725, 726, 722,
	723, 676, 192, 213, 356, 0, 439, 279, 566, 538,
	533, 199, 215, 784, 252, 785, 0, 0, 789, 0,
	0, 0, 791, 790, 0, 792, 758, 757, 0, 0,
	786, 787, 0, 788, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 289, 300, 308,
	309, 312, 318, 368, 374, 375, 376, 377, 396, 397,
	398, 401, 404, 405, 408, 410, 411, 414, 418, 422,
	423, 424, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 527, 545, 550, 465, 799, 800,
	801, 802, 803, 804, 805, 806, 290, 522, 551, 0,
	0, 366, 0, 0, 369, 271, 295, 310, 0, 537,
	486, 219, 451, 281, 243, 824, 0, 204, 238, 222,
	249, 264, 267, 314, 379, 387, 416, 421, 287, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 383, 256,
	420, 0, 384, 364, 503, 504, 306, 82, 502, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 675, 0, 0, 0, 260,
	680, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 687, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 683, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 91, 0, 0, 825, 809,
	775, 776, 813, 826, 827, 828, 829, 814, 0, 230,
	815, 816, 237, 817, 0, 774, 715, 717, 716, 734,
	735, 736, 737, 738, 739, 740, 713, 822, 830, 831,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 657, 672, 0, 686, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 670, 0, 0, 0, 0,
	769, 0, 671, 0, 0, 679, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 768, 0, 0, 547,
	0, 0, 766, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	819, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 820, 821, 246, 568, 721,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 729, 730, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 779, 767, 692, 783,
	694, 780, 781, 689, 690, 693, 782, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 770, 678, 677, 0,
	685, 0, 711, 712, 714, 718, 719, 720, 731, 732,
	733, 741, 743, 744, 742, 745, 746, 747, 750, 751,
	752, 753, 748, 749, 754, 695, 699, 696, 697, 698,
	710, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 793, 794, 795, 796, 797, 798, 724, 728, 727,
	725, 726, 722, 723, 676, 192, 213, 356, 90, 439,
	279, 566, 538, 533, 199, 215, 784, 252, 785, 0,
	0, 789, 0, 0, 0, 791, 790, 0, 792, 758,
	757, 0, 0, 786, 787, 0, 788, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 799, 800, 801, 802, 803, 804, 805, 806, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 824, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 675, 0, 0,
	0, 260, 680, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 687, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 683,
	684, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 91, 0, 0,
	825, 809, 775, 776, 813, 826, 827, 828, 829, 814,
	0, 230, 815, 816, 237, 817, 0, 774, 715, 717,
	716, 734, 735, 736, 737, 738, 739, 740, 713, 822,
	830, 831, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 657, 672, 0, 686, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 670, 0, 0,
	0, 0, 769, 0, 671, 0, 0, 679, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 768, 0,
	0, 547, 0, 0, 766, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 819, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 3413, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 820, 821, 246,
	568, 721, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 729, 730, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 779, 767,
	692, 783, 694, 780, 781, 689, 690, 693, 782, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 770, 678,
	677, 0, 685, 0, 711, 712, 714, 718, 719, 720,
	731, 732, 733, 741, 743, 744, 742, 745, 746, 747,
	750, 751, 752, 753, 748, 749, 754, 695, 699, 696,
	697, 698, 710, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 793, 794, 795, 796, 797, 798, 724,
	728, 727, 725, 726, 722, 723, 676, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 784, 252,
	785, 0, 0, 789, 0, 0, 0, 791, 790, 0,
	792, 758, 757, 0, 0, 786, 787, 0, 788, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 799, 800, 801, 802, 803, 804, 805,
	806, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	824, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 675,
	0, 0, 0, 260, 680, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	687, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 683, 684, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 91,
	0, 1514, 825, 809, 775, 776, 813, 826, 827, 828,
	829, 814, 0, 230, 815, 816, 237, 817, 0, 774,
	715, 717, 716, 734, 735, 736, 737, 738, 739, 740,
	713, 822, 830, 831, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 657, 672, 0, 686, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 670,
	0, 0, 0, 0, 769, 0, 671, 0, 0, 679,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 865, 866, 867, 868, 869, 870, 871,
	872, 873, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	768, 0, 0, 547, 0, 0, 766, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 819, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 820,
	821, 246, 568, 721, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 729, 730,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	779, 767, 692, 783, 694, 780, 781, 689, 690, 693,
	782, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	770, 678, 677, 0, 685, 0, 711, 712, 714, 718,
	719, 720, 731, 732, 733, 741, 743, 744, 742, 745,
	746, 747, 750, 751, 752, 753, 748, 749, 754, 695,
	699, 696, 697, 698, 710, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 793, 794, 795, 796, 797,
	798, 724, 728, 727, 725, 726, 722, 723, 676, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	784, 252, 785, 0, 0, 789, 0, 0, 0, 791,
	790, 0, 792, 758, 757, 0, 0, 786, 787, 0,
	788, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 799, 800, 801, 802, 803,
	804, 805, 806, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 824, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 675, 0, 0, 0, 260, 680, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 687, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 683, 684, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 91, 0, 0, 825, 809, 775, 776, 813, 826,
	827, 828, 829, 814, 0, 230, 815, 816, 237, 817,
	0, 774, 715, 717, 716, 734, 735, 736, 737, 738,
	739, 740, 713, 822, 830, 831, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 657, 672, 0,
	686, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 670, 914, 0, 0, 0, 769, 0, 671, 0,
	0, 679, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 768, 0, 0, 547, 0, 0, 766, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 819, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 0,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 820, 821, 246, 568, 721, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	729, 730, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 779, 767, 692, 783, 694, 780, 781, 689,
	690, 693, 782, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 770, 678, 677, 0, 685, 0, 711, 712,
	714, 718, 719, 720, 731, 732, 733, 741, 743, 744,
	742, 745, 746, 747, 750, 751, 752, 753, 748, 749,
	754, 695, 699, 696, 697, 698, 710, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 793, 794, 795,
	796, 797, 798, 724, 728, 727, 725, 726, 722, 723,
	676, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 784, 252, 785, 0, 0, 789, 0, 0,
	0, 791, 790, 0, 792, 758, 757, 0, 0, 786,
	787, 0, 788, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 799, 800, 801,
	802, 803, 804, 805, 806, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 824, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	384, 0, 364, 503, 504, 306, 502, 0, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 675, 0, 0, 0, 260, 680, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	471, 244, 365, 362, 510, 272, 263, 259, 242, 307,
	373, 415, 492, 409, 687, 358, 0, 0, 481, 388,
	0, 0, 0, 0, 0, 683, 684, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	482, 276, 0, 91, 0, 0, 825, 809, 775, 776,
	813, 826, 827, 828, 829, 814, 0, 230, 815, 816,
	237, 817, 0, 774, 715, 717, 716, 734, 735, 736,
	737, 738, 739, 740, 713, 822, 830, 831, 0, 255,
	311, 262, 254, 507, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 657,
	672, 0, 686, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 670, 0, 0, 0, 0, 769, 0,
	671, 0, 0, 679, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 438, 278, 768, 0, 0, 547, 0, 0,
	766, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 446, 458, 0, 0, 0, 819, 0,
	456, 413, 526, 225, 274, 443, 419, 454, 426, 277,
	0, 0, 455, 360, 512, 436, 523, 548, 549, 253,
	393, 535, 496, 543, 565, 218, 250, 407, 489, 529,
	478, 385, 508, 509, 319, 477, 286, 196, 357, 554,
	216, 464, 359, 234, 223, 514, 532, 280, 441, 561,
	205, 491, 521, 231, 468, 0, 0, 567, 239, 488,
	207, 519, 487, 381, 316, 317, 206, 0, 442, 258,
	284, 248, 402, 820, 821, 246, 568, 721, 542, 212,
	0, 541, 395, 511, 520, 382, 371, 211, 518, 380,
	370, 324, 729, 730, 270, 297, 433, 363, 434, 296,
	298, 391, 390, 392, 200, 530, 0, 201, 0, 483,
	531, 569, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 432, 428, 437, 0, 506,
	524, 536, 546, 552, 553, 555, 556, 557, 558, 559,
	562, 560, 394, 301, 479, 323, 361, 0, 0, 412,
	457, 232, 528, 480, 779, 767, 692, 783, 694, 780,
	781, 689, 690, 693, 782, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 0, 770, 678, 677, 0, 685, 0,
	711, 712, 714, 718, 719, 720, 731, 732, 733, 741,
	743, 744, 742, 745, 746, 747, 750, 751, 752, 753,
	748, 749, 754, 695, 699, 696, 697, 698, 710, 700,
	701, 702, 703, 704, 705, 706, 707, 708, 709, 793,
	794, 795, 796, 797, 798, 724, 728, 727, 725, 726,
	722, 723, 676, 192, 213, 356, 0, 439, 279, 566,
	538, 533, 199, 215, 784, 252, 785, 0, 0, 789,
	0, 0, 0, 791, 790, 0, 792, 758, 757, 0,
	0, 786, 787, 0, 788, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 527, 545, 550, 465, 799,
	800, 801, 802, 803, 804, 805, 806, 290, 522, 551,
	0, 0, 366, 0, 0, 369, 271, 295, 310, 0,
	537, 486, 219, 451, 281, 243, 824, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 383,
	256, 420, 384, 0, 364, 503, 504, 306, 502, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 675, 0, 0, 0, 260,
	680, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 687, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 683, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 91, 0, 0, 825, 809,
	775, 776, 813, 826, 827, 828, 829, 814, 0, 230,
	815, 816, 237, 817, 0, 774, 715, 717, 716, 734,
	735, 736, 737, 738, 739, 740, 713, 822, 830, 831,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 686, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 670, 0, 0, 0, 0,
	769, 0, 671, 0, 0, 679, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 768, 0, 0, 547,
	0, 0, 766, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	819, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 820, 821, 246, 568, 721,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 729, 730, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 779, 767, 692, 783,
	694, 780, 781, 689, 690, 693, 782, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 770, 678, 677, 0,
	685, 0, 711, 712, 714, 718, 719, 720, 731, 732,
	733, 741, 743, 744, 742, 745, 746, 747, 750, 751,
	752, 753, 748, 749, 754, 695, 699, 696, 697, 698,
	710, 700, 701, 702, 703, 704, 705, 706, 707, 708,
	709, 793, 794, 795, 796, 797, 798, 724, 728, 727,
	725, 726, 722, 723, 676, 192, 213, 356, 0, 439,
	279, 566, 538, 533, 199, 215, 784, 252, 785, 0,
	0, 789, 0, 0, 0, 791, 790, 0, 792, 758,
	757, 0, 0, 786, 787, 0, 788, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 799, 800, 801, 802, 803, 804, 805, 806, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 824, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	984, 547, 0, 0, 0, 0, 0, 981, 982, 353,
	942, 320, 193, 217, 975, 979, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 0,
	0, 0, 1477, 809, 0, 0, 1474, 0, 0, 0,
	0, 1472, 0, 230, 1473, 1471, 237, 1476, 0, 774,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 0, 384,
	364, 503, 504, 306, 82, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 354, 257, 0, 0, 417, 0, 198, 0, 471,
	244, 365, 362, 510, 272, 263, 259, 242, 307, 373,
	415, 492, 409, 0, 358, 0, 0, 481, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 240, 315, 197, 400, 482,
	276, 0, 91, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 237,
	0, 0, 0, 339, 348, 347, 328, 329, 331, 333,
	338, 345, 351, 0, 0, 0, 0, 0, 255, 311,
	262, 254, 507, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 389, 247,
	0, 438, 278, 0, 0, 0, 547, 0, 0, 0,
	0, 0, 0, 0, 353, 0, 320, 193, 217, 0,
	0, 399, 446, 458, 0, 0, 0, 245, 0, 456,
	413, 526, 225, 274, 443, 419, 454, 426, 277, 0,
	0, 455, 360, 512, 436, 523, 548, 549, 253, 393,
	535, 496, 543, 565, 218, 250, 407, 489, 529, 478,
	385, 508, 509, 319, 477, 286, 196, 357, 554, 216,
	464, 359, 234, 223, 514, 532, 280, 441, 561, 205,
	491, 521, 231, 468, 0, 0, 567, 239, 488, 207,
	519, 487, 381, 316, 317, 206, 0, 442, 258, 284,
	248, 402, 516, 517, 246, 568, 220, 542, 212, 0,
	541, 395, 511, 520, 382, 371, 211, 518, 380, 370,
	324, 343, 344, 270, 297, 433, 363, 434, 296, 298,
	391, 390, 392, 200, 530, 0, 201, 0, 483, 531,
	569, 226, 227, 229, 0, 269, 273, 282, 285, 293,
	294, 303, 355, 406, 432, 428, 437, 0, 506, 524,
	536, 546, 552, 553, 555, 556, 557, 558, 559, 562,
	560, 394, 301, 479, 323, 361, 0, 0, 412, 457,
	232, 528, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 588, 372, 470, 525, 325, 337, 340, 330, 349,
	0, 350, 326, 327, 332, 334, 335, 336, 341, 342,
	346, 352, 241, 203, 378, 386, 505, 302, 208, 209,
	210, 498, 499, 500, 501, 539, 540, 544, 447, 448,
	449, 450, 283, 534, 299, 453, 452, 321, 322, 367,
	435, 0, 192, 213, 356, 90, 439, 279, 566, 538,
	533, 199, 215, 0, 252, 0, 0, 0, 0, 0,
	0, 2087, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 202, 214,
	224, 228, 235, 251, 266, 268, 275, 289, 300, 308,
	309, 312, 318, 368, 374, 375, 376, 377, 396, 397,
	398, 401, 404, 405, 408, 410, 411, 414, 418, 422,
	423, 424, 425, 427, 429, 440, 445, 459, 460, 461,
	462, 463, 466, 467, 472, 473, 474, 475, 476, 484,
	485, 490, 513, 515, 527, 545, 550, 465, 291, 292,
	430, 431, 304, 305, 563, 564, 290, 522, 551, 0,
	0, 366, 0, 0, 369, 271, 295, 310, 0, 537,
	486, 219, 451, 281, 243, 0, 0, 204, 238, 222,
	249, 264, 267, 314, 379, 387, 416, 421, 287, 261,
	236, 444, 233, 469, 493, 494, 495, 497, 383, 256,
	420, 1533, 0, 364, 503, 504, 306, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 403,
	0, 0, 0, 1535, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 354, 257, 0, 0, 417, 0, 198,
	0, 471, 244, 365, 362, 510, 272, 263, 259, 242,
	307, 373, 415, 492, 409, 0, 358, 0, 0, 481,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 240, 315, 197,
	400, 482, 276, 0, 0, 0, 0, 1537, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 237, 0, 0, 0, 339, 348, 347, 328, 329,
	331, 333, 338, 345, 351, 0, 0, 0, 0, 0,
	255, 311, 262, 254, 507, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 0, 0, 1311, 0, 1312, 1313,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	389, 247, 0, 438, 278, 0, 0, 0, 547, 0,
	0, 0, 0, 0, 0, 0, 353, 0, 320, 193,
	217, 0, 0, 399, 446, 458, 0, 0, 0, 245,
	0, 456, 413, 526, 225, 274, 443, 419, 454, 426,
	277, 0, 0, 455, 360, 512, 436, 523, 548, 549,
	253, 393, 535, 496, 543, 565, 218, 250, 407, 489,
	529, 478, 385, 508, 509, 319, 477, 286, 196, 357,
	554, 216, 464, 359, 234, 223, 514, 532, 280, 441,
	561, 205, 491, 521, 231, 468, 0, 0, 567, 239,
	488, 207, 519, 487, 381, 316, 317, 206, 0, 442,
	258, 284, 248, 402, 516, 517, 246, 568, 220, 542,
	212, 0, 541, 395, 511, 520, 382, 371, 211, 518,
	380, 370, 324, 343, 344, 270, 297, 433, 363, 434,
	296, 298, 391, 390, 392, 200, 530, 0, 201, 0,
	483, 531, 569, 226, 227, 229, 0, 269, 273, 282,
	285, 293, 294, 303, 355, 406, 432, 428, 437, 0,
	506, 524, 536, 546, 552, 553, 555, 556, 557, 558,
	559, 562, 560, 394, 301, 479, 323, 361, 0, 0,
	412, 457, 232, 528, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 588, 372, 470, 525, 325, 337, 340,
	330, 349, 0, 350, 326, 327, 332, 334, 335, 336,
	341, 342, 346, 352, 241, 203, 378, 386, 505, 302,
	208, 209, 210, 498, 499, 500, 501, 539, 540, 544,
	447, 448, 449, 450, 283, 534, 299, 453, 452, 321,
	322, 367, 435, 0, 192, 213, 356, 0, 439, 279,
	566, 538, 533, 199, 215, 0, 252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	202, 214, 224, 228, 235, 251, 266, 268, 275, 289,
	300, 308, 309, 312, 318, 368, 374, 375, 376, 377,
	396, 397, 398, 401, 404, 405, 408, 410, 411, 414,
	418, 422, 423, 424, 425, 427, 429, 440, 445, 459,
	460, 461, 462, 463, 466, 467, 472, 473, 474, 475,
	476, 484, 485, 490, 513, 515, 527, 545, 550, 465,
	291, 292, 430, 431, 304, 305, 563, 564, 290, 522,
	551, 0, 0, 366, 0, 0, 369, 271, 295, 310,
	0, 537, 486, 219, 451, 281, 243, 0, 0, 204,
	238, 222, 249, 264, 267, 314, 379, 387, 416, 421,
	287, 261, 236, 444, 233, 469, 493, 494, 495, 497,
	383, 256, 420, 0, 384, 364, 503, 504, 306, 82,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 91, 0, 1514,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	90, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 91,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 2087, 0,
	0, 2086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	2037, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 0, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 0, 0, 0, 1714, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 245, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 2035,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 516, 517, 246, 568, 220, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	343, 344, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 372, 470, 525, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 505, 302, 208, 209, 210,
	498, 499, 500, 501, 539, 540, 544, 447, 448, 449,
	450, 283, 534, 299, 453, 452, 321, 322, 367, 435,
	0, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 291, 292, 430,
	431, 304, 305, 563, 564, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	384, 0, 364, 503, 504, 306, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	471, 244, 365, 362, 510, 272, 263, 259, 242, 307,
	373, 415, 492, 409, 0, 358, 0, 0, 481, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	482, 276, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 507, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 438, 278, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 353, 942, 320, 193, 217,
	940, 0, 399, 446, 458, 0, 0, 0, 245, 0,
	456, 413, 526, 225, 274, 443, 419, 454, 426, 277,
	0, 0, 455, 360, 512, 436, 523, 548, 549, 253,
	393, 535, 496, 543, 565, 218, 250, 407, 489, 529,
	478, 385, 508, 509, 319, 477, 286, 196, 357, 554,
	216, 464, 359, 234, 223, 514, 532, 280, 441, 561,
	205, 491, 521, 231, 468, 0, 0, 567, 239, 488,
	207, 519, 487, 381, 316, 317, 206, 0, 442, 258,
	284, 248, 402, 516, 517, 246, 568, 220, 542, 212,
	0, 541, 395, 511, 520, 382, 371, 211, 518, 380,
	370, 324, 343, 344, 270, 297, 433, 363, 434, 296,
	298, 391, 390, 392, 200, 530, 0, 201, 0, 483,
	531, 569, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 432, 428, 437, 0, 506,
	524, 536, 546, 552, 553, 555, 556, 557, 558, 559,
	562, 560, 394, 301, 479, 323, 361, 0, 0, 412,
	457, 232, 528, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 372, 470, 525, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 505, 302, 208,
	209, 210, 498, 499, 500, 501, 539, 540, 544, 447,
	448, 449, 450, 283, 534, 299, 453, 452, 321, 322,
	367, 435, 0, 192, 213, 356, 0, 439, 279, 566,
	538, 533, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 527, 545, 550, 465, 291,
	292, 430, 431, 304, 305, 563, 564, 290, 522, 551,
	0, 0, 366, 0, 0, 369, 271, 295, 310, 0,
	537, 486, 219, 451, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 383,
	256, 420, 384, 0, 364, 503, 504, 306, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 2037, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 0, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 0, 0, 0, 1714, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	245, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 516, 517, 246, 568, 220,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 343, 344, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 372, 470, 525, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 505,
	302, 208, 209, 210, 498, 499, 500, 501, 539, 540,
	544, 447, 448, 449, 450, 283, 534, 299, 453, 452,
	321, 322, 367, 435, 0, 192, 213, 356, 0, 439,
	279, 566, 538, 533, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 291, 292, 430, 431, 304, 305, 563, 564, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 0, 0, 1514,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	0, 547, 0, 0, 0, 3323, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 0,
	0, 0, 1870, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 0, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 0, 0, 0, 2444, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2445, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 245, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 0,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 516, 517, 246, 568, 220, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	343, 344, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 372, 470, 525, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 505, 302, 208, 209, 210,
	498, 499, 500, 501, 539, 540, 544, 447, 448, 449,
	450, 283, 534, 299, 453, 452, 321, 322, 367, 435,
	0, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 291, 292, 430,
	431, 304, 305, 563, 564, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	384, 0, 364, 503, 504, 306, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	471, 244, 365, 362, 510, 272, 263, 259, 242, 307,
	373, 415, 492, 409, 0, 358, 0, 0, 481, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	482, 276, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 0, 2429, 0, 0, 0, 0, 230, 0, 0,
	237, 2430, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 507, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 438, 278, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 446, 458, 0, 0, 0, 245, 0,
	456, 413, 526, 225, 274, 443, 419, 454, 426, 277,
	0, 0, 455, 360, 512, 436, 523, 548, 549, 253,
	393, 535, 496, 543, 565, 218, 250, 407, 489, 529,
	478, 385, 508, 509, 319, 477, 286, 196, 357, 554,
	216, 464, 359, 234, 223, 514, 532, 280, 441, 561,
	205, 491, 521, 231, 468, 0, 0, 567, 239, 488,
	207, 519, 487, 381, 316, 317, 206, 0, 442, 258,
	284, 248, 402, 516, 517, 246, 568, 220, 542, 212,
	0, 541, 395, 511, 520, 382, 371, 211, 518, 380,
	370, 324, 343, 344, 270, 297, 433, 363, 434, 296,
	298, 391, 390, 392, 200, 530, 0, 201, 0, 483,
	531, 569, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 432, 428, 437, 0, 506,
	524, 536, 546, 552, 553, 555, 556, 557, 558, 559,
	562, 560, 394, 301, 479, 323, 361, 0, 0, 412,
	457, 232, 528, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 372, 470, 525, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 505, 302, 208,
	209, 210, 498, 499, 500, 501, 539, 540, 544, 447,
	448, 449, 450, 283, 534, 299, 453, 452, 321, 322,
	367, 435, 0, 192, 213, 356, 0, 439, 279, 566,
	538, 533, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 527, 545, 550, 465, 291,
	292, 430, 431, 304, 305, 563, 564, 290, 522, 551,
	0, 0, 366, 0, 0, 369, 271, 295, 310, 0,
	537, 486, 219, 451, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 383,
	256, 420, 384, 0, 364, 503, 504, 306, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	1556, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 0, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 0, 0, 0, 1555, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	245, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 516, 517, 246, 568, 220,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 343, 344, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 372, 470, 525, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 505,
	302, 208, 209, 210, 498, 499, 500, 501, 539, 540,
	544, 447, 448, 449, 450, 283, 534, 299, 453, 452,
	321, 322, 367, 435, 0, 192, 213, 356, 0, 439,
	279, 566, 538, 533, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 291, 292, 430, 431, 304, 305, 563, 564, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 0, 0, 0,
	0, 637, 638, 639, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 3447, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 0, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 0, 0, 0, 1714, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 245, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 0,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 516, 517, 246, 568, 220, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	343, 344, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 372, 470, 525, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 505, 302, 208, 209, 210,
	498, 499, 500, 501, 539, 540, 544, 447, 448, 449,
	450, 283, 534, 299, 453, 452, 321, 322, 367, 435,
	0, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 291, 292, 430,
	431, 304, 305, 563, 564, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	384, 0, 364, 503, 504, 306, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	471, 244, 365, 362, 510, 272, 263, 259, 242, 307,
	373, 415, 492, 409, 0, 358, 0, 0, 481, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	482, 276, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 507, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 438, 278, 0, 0, 0, 547, 0, 0,
	0, 3323, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 446, 458, 0, 0, 0, 245, 0,
	456, 413, 526, 225, 274, 443, 419, 454, 426, 277,
	0, 0, 455, 360, 512, 436, 523, 548, 549, 253,
	393, 535, 496, 543, 565, 218, 250, 407, 489, 529,
	478, 385, 508, 509, 319, 477, 286, 196, 357, 554,
	216, 464, 359, 234, 223, 514, 532, 280, 441, 561,
	205, 491, 521, 231, 468, 0, 0, 567, 239, 488,
	207, 519, 487, 381, 316, 317, 206, 0, 442, 258,
	284, 248, 402, 516, 517, 246, 568, 220, 542, 212,
	0, 541, 395, 511, 520, 382, 371, 211, 518, 380,
	370, 324, 343, 344, 270, 297, 433, 363, 434, 296,
	298, 391, 390, 392, 200, 530, 0, 201, 0, 483,
	531, 569, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 432, 428, 437, 0, 506,
	524, 536, 546, 552, 553, 555, 556, 557, 558, 559,
	562, 560, 394, 301, 479, 323, 361, 0, 0, 412,
	457, 232, 528, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 372, 470, 525, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 505, 302, 208,
	209, 210, 498, 499, 500, 501, 539, 540, 544, 447,
	448, 449, 450, 283, 534, 299, 453, 452, 321, 322,
	367, 435, 0, 192, 213, 356, 0, 439, 279, 566,
	538, 533, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 527, 545, 550, 465, 291,
	292, 430, 431, 304, 305, 563, 564, 290, 522, 551,
	0, 0, 366, 0, 0, 369, 271, 295, 310, 0,
	537, 486, 219, 451, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 383,
	256, 420, 384, 0, 364, 503, 504, 306, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 0, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 91, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	245, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 516, 517, 246, 568, 220,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 343, 344, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 372, 470, 525, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 505,
	302, 208, 209, 210, 498, 499, 500, 501, 539, 540,
	544, 447, 448, 449, 450, 283, 534, 299, 453, 452,
	321, 322, 367, 435, 0, 192, 213, 356, 0, 439,
	279, 566, 538, 533, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 291, 292, 430, 431, 304, 305, 563, 564, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 0, 0, 0, 2088, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 0,
	0, 0, 1537, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 0, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 245, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 0,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 516, 517, 246, 568, 220, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	343, 344, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 372, 470, 525, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 505, 302, 208, 209, 210,
	498, 499, 500, 501, 539, 540, 544, 447, 448, 449,
	450, 283, 534, 299, 453, 452, 321, 322, 367, 435,
	0, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 291, 292, 430,
	431, 304, 305, 563, 564, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	384, 0, 364, 503, 504, 306, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	471, 244, 365, 362, 510, 272, 263, 259, 242, 307,
	373, 415, 492, 409, 0, 358, 0, 0, 481, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	482, 276, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 507, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 438, 278, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 446, 458, 0, 0, 0, 245, 0,
	456, 413, 526, 225, 274, 443, 419, 454, 426, 277,
	0, 0, 455, 360, 512, 436, 523, 548, 549, 253,
	393, 535, 496, 543, 565, 218, 250, 407, 489, 529,
	478, 385, 508, 509, 319, 477, 286, 196, 357, 554,
	216, 464, 359, 234, 223, 514, 532, 280, 441, 561,
	205, 491, 521, 231, 468, 0, 0, 567, 239, 488,
	207, 519, 487, 381, 316, 317, 206, 0, 442, 258,
	284, 248, 402, 516, 517, 246, 568, 220, 542, 212,
	0, 541, 395, 511, 520, 382, 371, 211, 518, 380,
	370, 324, 343, 344, 270, 297, 433, 363, 434, 296,
	298, 391, 390, 392, 200, 530, 0, 201, 0, 483,
	531, 569, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 432, 428, 437, 0, 506,
	524, 536, 546, 552, 553, 555, 556, 557, 558, 559,
	562, 560, 394, 301, 479, 323, 361, 0, 0, 412,
	457, 232, 528, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 372, 470, 525, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 505, 302, 208,
	209, 210, 498, 499, 500, 501, 539, 540, 544, 447,
	448, 449, 450, 283, 534, 299, 453, 452, 321, 322,
	367, 435, 0, 192, 213, 356, 1825, 439, 279, 566,
	538, 533, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 527, 545, 550, 465, 291,
	292, 430, 431, 304, 305, 563, 564, 290, 522, 551,
	0, 0, 366, 0, 0, 369, 271, 295, 310, 0,
	537, 486, 219, 451, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 383,
	256, 420, 384, 0, 364, 503, 504, 306, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 0, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 0, 0, 0, 1815, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	245, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 516, 517, 246, 568, 220,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 343, 344, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 372, 470, 525, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 505,
	302, 208, 209, 210, 498, 499, 500, 501, 539, 540,
	544, 447, 448, 449, 450, 283, 534, 299, 453, 452,
	321, 322, 367, 435, 0, 192, 213, 356, 0, 439,
	279, 566, 538, 533, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 291, 292, 430, 431, 304, 305, 563, 564, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 1681, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 1679, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 1677, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 0, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 245, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 0,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 516, 517, 246, 568, 220, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	343, 344, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 372, 470, 525, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 505, 302, 208, 209, 210,
	498, 499, 500, 501, 539, 540, 544, 447, 448, 449,
	450, 283, 534, 299, 453, 452, 321, 322, 367, 435,
	0, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 291, 292, 430,
	431, 304, 305, 563, 564, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	384, 0, 364, 503, 504, 306, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	1675, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	471, 244, 365, 362, 510, 272, 263, 259, 242, 307,
	373, 415, 492, 409, 0, 358, 0, 0, 481, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	482, 276, 0, 0, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 507, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 438, 278, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 446, 458, 0, 0, 0, 245, 0,
	456, 413, 526, 225, 274, 443, 419, 454, 426, 277,
	0, 0, 455, 360, 512, 436, 523, 548, 549, 253,
	393, 535, 496, 543, 565, 218, 250, 407, 489, 529,
	478, 385, 508, 509, 319, 477, 286, 196, 357, 554,
	216, 464, 359, 234, 223, 514, 532, 280, 441, 561,
	205, 491, 521, 231, 468, 0, 0, 567, 239, 488,
	207, 519, 487, 381, 316, 317, 206, 0, 442, 258,
	284, 248, 402, 516, 517, 246, 568, 220, 542, 212,
	0, 541, 395, 511, 520, 382, 371, 211, 518, 380,
	370, 324, 343, 344, 270, 297, 433, 363, 434, 296,
	298, 391, 390, 392, 200, 530, 0, 201, 0, 483,
	531, 569, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 432, 428, 437, 0, 506,
	524, 536, 546, 552, 553, 555, 556, 557, 558, 559,
	562, 560, 394, 301, 479, 323, 361, 0, 0, 412,
	457, 232, 528, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 372, 470, 525, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 505, 302, 208,
	209, 210, 498, 499, 500, 501, 539, 540, 544, 447,
	448, 449, 450, 283, 534, 299, 453, 452, 321, 322,
	367, 435, 0, 192, 213, 356, 0, 439, 279, 566,
	538, 533, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 527, 545, 550, 465, 291,
	292, 430, 431, 304, 305, 563, 564, 290, 522, 551,
	0, 0, 366, 0, 0, 369, 271, 295, 310, 0,
	537, 486, 219, 451, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 383,
	256, 420, 384, 0, 364, 503, 504, 306, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 1673, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 0, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	245, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 516, 517, 246, 568, 220,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 343, 344, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 372, 470, 525, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 505,
	302, 208, 209, 210, 498, 499, 500, 501, 539, 540,
	544, 447, 448, 449, 450, 283, 534, 299, 453, 452,
	321, 322, 367, 435, 0, 192, 213, 356, 0, 439,
	279, 566, 538, 533, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 291, 292, 430, 431, 304, 305, 563, 564, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 1669, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 1667, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 0,
	0, 0, 0, 635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 1665, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 0, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 245, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 0,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 516, 517, 246, 568, 220, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	343, 344, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 372, 470, 525, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 505, 302, 208, 209, 210,
	498, 499, 500, 501, 539, 540, 544, 447, 448, 449,
	450, 283, 534, 299, 453, 452, 321, 322, 367, 435,
	0, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 291, 292, 430,
	431, 304, 305, 563, 564, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	384, 0, 364, 503, 504, 306, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	471, 244, 365, 362, 510, 272, 263, 259, 242, 307,
	373, 415, 492, 409, 0, 358, 0, 0, 481, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	482, 276, 0, 1640, 0, 0, 0, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 507, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 438, 278, 0, 0, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 446, 458, 0, 0, 0, 245, 0,
	456, 413, 526, 225, 274, 443, 419, 454, 426, 277,
	0, 0, 455, 360, 512, 436, 523, 548, 549, 253,
	393, 535, 496, 543, 565, 218, 250, 407, 489, 529,
	478, 385, 508, 509, 319, 477, 286, 196, 357, 554,
	216, 464, 359, 234, 223, 514, 532, 280, 441, 561,
	205, 491, 521, 231, 468, 0, 0, 567, 239, 488,
	207, 519, 487, 381, 316, 317, 206, 0, 442, 258,
	284, 248, 402, 516, 517, 246, 568, 220, 542, 212,
	0, 541, 395, 511, 520, 382, 371, 211, 518, 380,
	370, 324, 343, 344, 270, 297, 433, 363, 434, 296,
	298, 391, 390, 392, 200, 530, 0, 201, 0, 483,
	531, 569, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 432, 428, 437, 0, 506,
	524, 536, 546, 552, 553, 555, 556, 557, 558, 559,
	562, 560, 394, 301, 479, 323, 361, 0, 0, 412,
	457, 232, 528, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 372, 470, 525, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 505, 302, 208,
	209, 210, 498, 499, 500, 501, 539, 540, 544, 447,
	448, 449, 450, 283, 534, 299, 453, 452, 321, 322,
	367, 435, 0, 192, 213, 356, 0, 439, 279, 566,
	538, 533, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 527, 545, 550, 465, 291,
	292, 430, 431, 304, 305, 563, 564, 290, 522, 551,
	0, 0, 366, 0, 0, 369, 271, 295, 310, 0,
	537, 486, 219, 451, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 383,
	256, 420, 384, 0, 364, 503, 504, 306, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 1541, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 0, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	245, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 516, 517, 246, 568, 220,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 343, 344, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 372, 470, 525, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 505,
	302, 208, 209, 210, 498, 499, 500, 501, 539, 540,
	544, 447, 448, 449, 450, 283, 534, 299, 453, 452,
	321, 322, 367, 435, 0, 192, 213, 356, 0, 439,
	279, 566, 538, 533, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 396, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 291, 292, 430, 431, 304, 305, 563, 564, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 91, 0, 0,
	0, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1292, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 1291, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 0, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 245, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 0,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 516, 517, 246, 568, 220, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	343, 344, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 372, 470, 525, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 505, 302, 208, 209, 210,
	498, 499, 500, 501, 539, 540, 544, 447, 448, 449,
	450, 283, 534, 299, 453, 452, 321, 322, 367, 435,
	0, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 895, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 291, 292, 430,
	431, 304, 305, 563, 564, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	384, 0, 364, 503, 504, 306, 502, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 354, 257, 0, 0, 417, 0, 198, 0,
	471, 244, 365, 362, 510, 272, 263, 259, 242, 307,
	373, 415, 492, 409, 0, 358, 0, 0, 481, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 240, 315, 197, 400,
	482, 276, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	237, 0, 0, 0, 339, 348, 347, 328, 329, 331,
	333, 338, 345, 351, 0, 0, 0, 0, 0, 255,
	311, 262, 254, 507, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 389,
	247, 0, 438, 278, 0, 591, 0, 547, 0, 0,
	0, 0, 0, 0, 0, 353, 0, 320, 193, 217,
	0, 0, 399, 446, 458, 0, 0, 0, 245, 0,
	456, 413, 526, 225, 274, 443, 419, 454, 426, 277,
	0, 0, 455, 360, 512, 436, 523, 548, 549, 253,
	393, 535, 496, 543, 565, 218, 250, 407, 489, 529,
	478, 385, 508, 509, 319, 477, 286, 196, 357, 554,
	216, 464, 359, 234, 223, 514, 532, 280, 441, 561,
	205, 491, 521, 231, 468, 0, 0, 567, 239, 488,
	207, 519, 487, 381, 316, 317, 206, 0, 442, 258,
	284, 248, 402, 516, 517, 246, 568, 220, 542, 212,
	0, 541, 395, 511, 520, 382, 371, 211, 518, 380,
	370, 324, 343, 344, 270, 297, 433, 363, 434, 296,
	298, 391, 390, 392, 200, 530, 0, 201, 0, 483,
	531, 569, 226, 227, 229, 0, 269, 273, 282, 285,
	293, 294, 303, 355, 406, 432, 428, 437, 0, 506,
	524, 536, 546, 552, 553, 555, 556, 557, 558, 559,
	562, 560, 394, 301, 479, 323, 361, 0, 0, 412,
	457, 232, 528, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 372, 470, 525, 325, 337, 340, 330,
	349, 0, 350, 326, 327, 332, 334, 335, 336, 341,
	342, 346, 352, 241, 203, 378, 386, 505, 302, 208,
	209, 210, 498, 499, 500, 501, 539, 540, 544, 447,
	448, 449, 450, 283, 534, 299, 453, 452, 321, 322,
	367, 435, 0, 192, 213, 356, 0, 439, 279, 566,
	538, 533, 199, 215, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 202,
	214, 224, 228, 235, 251, 266, 268, 275, 289, 300,
	308, 309, 312, 318, 368, 374, 375, 376, 377, 396,
	397, 398, 401, 404, 405, 408, 410, 411, 414, 418,
	422, 423, 424, 425, 427, 429, 440, 445, 459, 460,
	461, 462, 463, 466, 467, 472, 473, 474, 475, 476,
	484, 485, 490, 513, 515, 527, 545, 550, 465, 291,
	292, 430, 431, 304, 305, 563, 564, 290, 522, 551,
	0, 0, 366, 0, 0, 369, 271, 295, 310, 0,
	537, 486, 219, 451, 281, 243, 0, 0, 204, 238,
	222, 249, 264, 267, 314, 379, 387, 416, 421, 287,
	261, 236, 444, 233, 469, 493, 494, 495, 497, 383,
	256, 420, 384, 0, 364, 503, 504, 306, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 354, 257, 0, 0, 417, 0,
	198, 0, 471, 244, 365, 362, 510, 272, 263, 259,
	242, 307, 373, 415, 492, 409, 0, 358, 0, 0,
	481, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 240, 315,
	197, 400, 482, 276, 0, 0, 0, 0, 0, 635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 237, 0, 0, 0, 339, 348, 347, 328,
	329, 331, 333, 338, 345, 351, 0, 0, 0, 0,
	0, 255, 311, 262, 254, 507, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 389, 247, 0, 438, 278, 0, 0, 0, 547,
	0, 0, 0, 0, 0, 0, 0, 353, 0, 320,
	193, 217, 0, 0, 399, 446, 458, 0, 0, 0,
	245, 0, 456, 413, 526, 225, 274, 443, 419, 454,
	426, 277, 0, 0, 455, 360, 512, 436, 523, 548,
	549, 253, 393, 535, 496, 543, 565, 218, 250, 407,
	489, 529, 478, 385, 508, 509, 319, 477, 286, 196,
	357, 554, 216, 464, 359, 234, 223, 514, 532, 280,
	441, 561, 205, 491, 521, 231, 468, 0, 0, 567,
	239, 488, 207, 519, 487, 381, 316, 317, 206, 0,
	442, 258, 284, 248, 402, 516, 517, 246, 568, 220,
	542, 212, 0, 541, 395, 511, 520, 382, 371, 211,
	518, 380, 370, 324, 343, 344, 270, 297, 433, 363,
	434, 296, 298, 391, 390, 392, 200, 530, 0, 201,
	0, 483, 531, 569, 226, 227, 229, 0, 269, 273,
	282, 285, 293, 294, 303, 355, 406, 432, 428, 437,
	0, 506, 524, 536, 546, 552, 553, 555, 556, 557,
	558, 559, 562, 560, 394, 301, 479, 323, 361, 0,
	0, 412, 457, 232, 528, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 372, 470, 525, 325, 337,
	340, 330, 349, 0, 350, 326, 327, 332, 334, 335,
	336, 341, 342, 346, 352, 241, 203, 378, 386, 505,
	302, 208, 209, 210, 498, 499, 500, 501, 539, 540,
	544, 447, 448, 449, 450, 283, 534, 299, 453, 452,
	321, 322, 367, 435, 0, 192, 213, 356, 0, 439,
	279, 566, 538, 533, 199, 215, 0, 252, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 202, 214, 224, 228, 235, 251, 266, 268, 275,
	289, 300, 308, 309, 312, 318, 368, 374, 375, 376,
	377, 3455, 397, 398, 401, 404, 405, 408, 410, 411,
	414, 418, 422, 423, 424, 425, 427, 429, 440, 445,
	459, 460, 461, 462, 463, 466, 467, 472, 473, 474,
	475, 476, 484, 485, 490, 513, 515, 527, 545, 550,
	465, 291, 292, 430, 431, 304, 305, 563, 564, 290,
	522, 551, 0, 0, 366, 0, 0, 369, 271, 295,
	310, 0, 537, 486, 219, 451, 281, 243, 0, 0,
	204, 238, 222, 249, 264, 267, 314, 379, 387, 416,
	421, 287, 261, 236, 444, 233, 469, 493, 494, 495,
	497, 383, 256, 420, 384, 0, 364, 503, 504, 306,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 354, 257, 0, 0,
	417, 0, 198, 0, 471, 244, 365, 362, 510, 272,
	263, 259, 242, 307, 373, 415, 492, 409, 0, 358,
	0, 0, 481, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	240, 315, 197, 400, 482, 276, 0, 0, 0, 0,
	0, 635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 237, 0, 0, 0, 339, 348,
	347, 328, 329, 331, 333, 338, 345, 351, 0, 0,
	0, 0, 0, 255, 311, 262, 254, 507, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 389, 247, 0, 438, 278, 0, 0,
	0, 547, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 320, 193, 217, 0, 0, 399, 446, 458, 0,
	0, 0, 245, 0, 456, 413, 526, 225, 274, 443,
	419, 454, 426, 277, 0, 0, 455, 360, 512, 436,
	523, 548, 549, 253, 393, 535, 496, 543, 565, 218,
	250, 407, 489, 529, 478, 385, 508, 509, 319, 477,
	286, 196, 357, 554, 216, 464, 359, 234, 223, 514,
	532, 280, 441, 561, 205, 491, 521, 231, 468, 0,
	0, 567, 239, 488, 207, 519, 487, 381, 316, 317,
	206, 0, 442, 258, 284, 248, 402, 516, 517, 246,
	568, 220, 542, 212, 0, 541, 395, 511, 520, 382,
	371, 211, 518, 380, 370, 324, 343, 344, 270, 297,
	433, 363, 434, 296, 298, 391, 390, 392, 200, 530,
	0, 201, 0, 483, 531, 569, 226, 227, 229, 0,
	269, 273, 282, 285, 293, 294, 303, 355, 406, 432,
	428, 437, 0, 506, 524, 536, 546, 552, 553, 555,
	556, 557, 558, 559, 562, 560, 394, 301, 479, 323,
	361, 0, 0, 412, 457, 232, 528, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 372, 470, 525,
	325, 337, 340, 330, 349, 0, 350, 326, 327, 332,
	334, 335, 336, 341, 342, 346, 352, 241, 203, 378,
	386, 505, 302, 208, 209, 210, 498, 499, 500, 501,
	539, 540, 544, 447, 448, 449, 450, 283, 534, 299,
	453, 452, 321, 322, 367, 435, 0, 192, 213, 356,
	0, 439, 279, 566, 538, 533, 199, 215, 0, 252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 202, 214, 224, 228, 235, 251, 266,
	268, 275, 289, 300, 308, 309, 312, 318, 368, 374,
	375, 376, 377, 396, 397, 398, 401, 404, 405, 408,
	410, 411, 414, 418, 422, 423, 424, 425, 427, 429,
	440, 445, 459, 460, 461, 462, 463, 466, 467, 472,
	473, 474, 475, 476, 484, 485, 490, 513, 515, 527,
	545, 550, 465, 291, 292, 430, 431, 304, 305, 563,
	564, 290, 522, 551, 0, 0, 366, 0, 0, 369,
	271, 295, 310, 0, 537, 486, 219, 451, 281, 243,
	0, 0, 204, 238, 222, 249, 264, 267, 314, 379,
	387, 416, 421, 287, 261, 236, 444, 233, 469, 493,
	494, 495, 497, 383, 256, 420, 384, 0, 364, 503,
	504, 306, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 354, 257,
	0, 0, 417, 0, 198, 0, 471, 244, 365, 362,
	510, 272, 263, 259, 242, 307, 373, 415, 492, 409,
	0, 358, 0, 0, 481, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 240, 315, 197, 400, 482, 276, 0, 0,
	0, 0, 0, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 237, 0, 0, 0,
	339, 348, 347, 328, 329, 331, 333, 338, 345, 351,
	0, 0, 0, 0, 0, 255, 311, 262, 254, 507,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 389, 247, 0, 438, 278,
	0, 0, 0, 547, 0, 0, 0, 0, 0, 0,
	0, 353, 0, 320, 193, 217, 0, 0, 399, 446,
	458, 0, 0, 0, 245, 0, 456, 413, 526, 225,
	274, 443, 419, 454, 426, 277, 0, 0, 455, 360,
	512, 436, 523, 548, 549, 253, 393, 535, 496, 543,
	565, 218, 250, 407, 489, 529, 478, 385, 508, 509,
	319, 477, 286, 196, 357, 554, 216, 464, 359, 234,
	223, 514, 532, 280, 441, 561, 205, 491, 521, 231,
	468, 0, 0, 567, 239, 488, 207, 519, 487, 381,
	316, 317, 206, 0, 442, 258, 284, 248, 402, 516,
	517, 246, 568, 220, 542, 212, 0, 541, 395, 511,
	520, 382, 371, 211, 518, 380, 370, 324, 343, 344,
	270, 297, 433, 363, 434, 296, 298, 391, 390, 392,
	200, 530, 0, 201, 0, 483, 531, 569, 226, 227,
	229, 0, 269, 273, 282, 285, 293, 294, 303, 355,
	406, 432, 428, 437, 0, 506, 524, 536, 546, 552,
	553, 555, 556, 557, 558, 559, 562, 560, 394, 301,
	479, 323, 361, 0, 0, 412, 457, 232, 528, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 372,
	470, 525, 325, 337, 340, 330, 349, 0, 350, 326,
	327, 332, 334, 335, 336, 341, 342, 346, 352, 241,
	203, 378, 386, 505, 302, 208, 209, 210, 498, 499,
	500, 501, 539, 540, 544, 447, 448, 449, 450, 283,
	534, 299, 453, 452, 321, 322, 367, 435, 0, 192,
	213, 356, 0, 439, 279, 566, 538, 533, 199, 215,
	0, 252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 202, 214, 224, 228, 235,
	251, 266, 268, 275, 289, 300, 308, 309, 312, 318,
	368, 374, 375, 376, 377, 396, 397, 398, 401, 404,
	405, 408, 410, 411, 414, 418, 422, 423, 424, 425,
	427, 429, 440, 445, 459, 460, 461, 462, 463, 466,
	467, 472, 473, 474, 475, 476, 484, 485, 490, 513,
	515, 527, 545, 550, 465, 291, 292, 430, 431, 304,
	305, 563, 564, 290, 522, 551, 0, 0, 366, 0,
	0, 369, 271, 295, 310, 0, 537, 486, 219, 451,
	281, 243, 0, 0, 204, 238, 222, 249, 264, 267,
	314, 379, 387, 416, 421, 287, 261, 236, 444, 233,
	469, 493, 494, 495, 497, 383, 256, 420, 384, 0,
	364, 503, 504, 306, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	354, 257, 0, 0, 417, 0, 198, 0, 471, 244,
	365, 362, 510, 272, 263, 259, 242, 307, 373, 415,
	492, 409, 0, 358, 0, 0, 481, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 240, 315, 197, 400, 482, 276,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 237, 0,
	0, 0, 339, 348, 347, 328, 329, 331, 333, 338,
	345, 351, 0, 0, 0, 0, 0, 255, 311, 262,
	254, 507, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 389, 247, 0,
	438, 278, 0, 0, 0, 547, 0, 0, 0, 0,
	0, 0, 0, 353, 0, 320, 193, 217, 0, 0,
	399, 446, 458, 0, 0, 0, 245, 0, 456, 413,
	526, 225, 274, 443, 419, 454, 426, 277, 0, 0,
	455, 360, 512, 436, 523, 548, 549, 253, 393, 535,
	496, 543, 565, 218, 250, 407, 489, 529, 478, 385,
	508, 509, 319, 477, 286, 196, 357, 554, 216, 464,
	359, 234, 223, 514, 532, 280, 441, 561, 205, 491,
	521, 231, 468, 0, 0, 567, 239, 488, 207, 519,
	487, 381, 316, 317, 206, 0, 442, 258, 284, 248,
	402, 516, 517, 246, 568, 220, 542, 212, 0, 541,
	395, 511, 520, 382, 371, 211, 518, 380, 370, 324,
	343, 344, 270, 297, 433, 363, 434, 296, 298, 391,
	390, 392, 200, 530, 0, 201, 0, 483, 531, 569,
	226, 227, 229, 0, 269, 273, 282, 285, 293, 294,
	303, 355, 406, 432, 428, 437, 0, 506, 524, 536,
	546, 552, 553, 555, 556, 557, 558, 559, 562, 560,
	394, 301, 479, 323, 361, 0, 0, 412, 457, 232,
	528, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 372, 470, 525, 325, 337, 340, 330, 349, 0,
	350, 326, 327, 332, 334, 335, 336, 341, 342, 346,
	352, 241, 203, 378, 386, 505, 302, 208, 209, 210,
	498, 499, 500, 501, 539, 540, 544, 447, 448, 449,
	450, 283, 534, 299, 453, 452, 321, 322, 367, 435,
	0, 192, 213, 356, 0, 439, 279, 566, 538, 533,
	199, 215, 0, 252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 202, 214, 224,
	228, 235, 251, 266, 268, 275, 289, 300, 308, 309,
	312, 318, 368, 374, 375, 376, 377, 396, 397, 398,
	401, 404, 405, 408, 410, 411, 414, 418, 422, 423,
	424, 425, 427, 429, 440, 445, 459, 460, 461, 462,
	463, 466, 467, 472, 473, 474, 475, 476, 484, 485,
	490, 513, 515, 527, 545, 550, 465, 291, 292, 430,
	431, 304, 305, 563, 564, 290, 522, 551, 0, 0,
	366, 0, 0, 369, 271, 295, 310, 0, 537, 486,
	219, 451, 281, 243, 0, 0, 204, 238, 222, 249,
	264, 267, 314, 379, 387, 416, 421, 287, 261, 236,
	444, 233, 469, 493, 494, 495, 497, 383, 256, 420,
	0, 0, 364, 503, 504, 306,
}

var yyPact = [...]int{
	-1000, -1000, 528, -1000, -467, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2272,
	2326, -1000, -1000, -1000, -1000, 2439, -1000, 887, 1975, -1000,
	2267, 248, -1000, 47284, 631, -1000, 44676, 625, 257, 29680,
	-1000, 255, -1000, 232, 45980, 239, -1000, -1000, -1000, -1000,
	-283, 19246, 2176, 111, 108, 47284, -1000, -1000, -1000, -1000,
	2414, 1979, -1000, 404, -1000, -1000, -1000, -1000, -1000, -1000,
	44024, -1000, 995, -1000, -1000, 2292, 2275, 2445, 810, 2195,
	-1000, 2357, 1979, -1000, 19246, 2404, 2324, 18594, 18594, 531,
	-1000, -1000, 308, -1000, -1000, 25116, 47284, 32288, 696, -1000,
	2267, -1000, -1000, -1000, 139, -1000, 401, 1902, -1000, 1901,
	-1000, 871, 895, 452, 546, 543, 449, 445, 443, 438,
	432, 417, 416, 414, 451, -1000, 829, 829, -116, -117,
	672, 611, 505, 505, 962, 571, 2219, 2217, -1000, -1000,
	829, 829, 829, 397, 829, 829, 829, 829, 345, 344,
	829, 829, 829, 829, 829, 829, 829, 829, 829, 829,
	829, 829, 829, 829, 829, 829, 829, 436, 2267, 329,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47284,
	213, 47284, -1000, 714, 47284, 957, 957, 186, 957, 957,
	957, 957, 237, 747, 99, -1000, 233, 330, 208, 326,
	948, 446, -1000, -1000, 315, 948, 1662, -1000, 818, 321,
	218, -1000, 957, 957, -1000, 12701, 193, 12701, 12701, -1000,
	2257, -1000, -1000, -1000, -1000, -1000, 1156, -1000, -1000, -1000,
	-1000, 0, 562, -1000, -1000, -1000, -1000, 45980, 43372, -286,
	-1000, -1000, 109, -1000, -1000, 1777, 1294, 19246, 1264, -1000,
	1929, 769, -1000, -1000, -1000, -1000, -1000, 695, -1000, 19898,
	19898, 19898, 19898, -1000, -1000, 1905, 42720, 1905, 1905, 19898,
	1905, -1000, 19898, 1905, 1905, 1905, 19246, 1905, 1905, 1905,
	1905, -1000, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	-1000, -1000, -1000, -1000, 1905, 711, 1905, 1905, 1905, 1905,
	1905, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1905,
	1905, 1905, 1905, 1905, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21202, 1356,
	1353, 1344, -1000, 16638, 1905, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 47284, -1000, 1905, 280, 45980,
	45980, 424, 2357, 1979, -1000, 2414, 2377, 404, -1000, 2911,
	1423, 1466, 1265, 1979, 1863, 47284, -1000, 1912, -1000, -1000,
	-1000, -1000, 2121, 1336, 1659, -1000, -1000, -1000, -1000, 2135,
	19246, -1000, -1000, 2435, -1000, 22507, 706, 2434, 42068, -1000,
	531, 531, 1894, 489, 28, -1000, -1000, -1000, -1000, 840,
	29028, -1000, -1000, -1000, -1000, 1762, 47284, -1000, -1000, 4260,
	1159, -1000, 1974, -1000, 1741, -1000, 1937, 19246, 1989, 617,
	1159, 593, 586, 545, -1000, -15, -1000, -1000, -1000, -1000,
	-1000, -1000, 829, 829, 829, -1000, 408, 2397, 248, 4306,
	-1000, -1000, -1000, 41416, 1973, 1159, -1000, 1967, -1000, 928,
	659, 731, 731, 1159, -1000, -1000, 46632, 1159, 923, 915,
	1159, 1159, 45980, 45980, -1000, 40764, -1000, 40112, 39460, 1142,
	45980, 38808, 38156, 37504, 36852, 36200, -1000, 2041, -1000, 2024,
	-1000, -1000, -1000, 46632, 1159, 1159, 46632, 45980, 46632, 47284,
	1159, -1000, -1000, 440, -1000, -1000, 1139, 1133, 1131, 829,
	829, 1129, 1654, 1652, 1650, 829, 829, 1128, 1642, 30984,
	1613, 366, 1127, 1125, 1113, 1163, 1585, 231, 1583, 1161,
	1153, 1111, 45980, 1962, 47284, -1000, 309, 828, 738, 838,
	2267, 2174, 1885, 555, 614, 1159, 516, 516, 45980, -1000,
	14675, -1000, -1000, 1578, 19246, -1000, 950, 948, 948, -1000,
	-1000, -1000, -1000, -1000, -1000, 957, 47284, 950, -1000, -1000,
	-1000, 948, 957, 47284, 957, 957, 957, 957, 948, 948,
	948, 957, 47284, 47284, 47284, 47284, 47284, 47284, 47284, 47284,
	47284, 12701, 818, 957, -311, -1000, 1552, -1000, -1000, 2069,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 12701, 12701, -1000, -1000,
	-1000, -1000, -1000, 1879, -1000, 234, 46, 236, -1000, 35548,
	406, 835, -1000, 406, 833, 1869, 34896, -1000, -313, -327,
	-328, -331, -1000, -1000, -1000, -334, -338, -1000, -1000, -1000,
	19246, 19246, 19246, 19246, -148, -1000, 920, 19898, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 181, 854, 19898, 19898, 19898,
	19898, 19898, 19898, 19898, 19898, 19898, 19898, 19898, 19898, 19898,
	19898, 19898, -1000, -1000, 27072, 5240, 5240, 769, 769, 769,
	769, -1000, -79, 1867, 46632, -1000, -1000, -1000, 704, 19246,
	19246, 769, -1000, 1159, 16638, 34244, 18594, 18594, 19246, 849,
	1294, 46632, 19246, -1000, 1265, -1000, -1000, -1000, 1034, -1000,
	925, 2234, 2234, 2234, 2234, 19246, 19246, 19246, 19246, 19246,
	19246, 19246, 19246, 19246, 19246, 2234, 45980, 45980, 896, 19246,
	19246, 19246, 19246, 19246, 19246, 15333, 19246, 19246, 19898, 19246,
	19246, 19246, 1265, 19246, 19246, 19246, 19246, 19246, 19246, 19246,
	19246, 19246, 19246, 19246, 19246, 19246, 19246, 19246, 19246, 19246,
	19246, 19246, 19246, 19246, 19246, 19246, 19246, 19246, 19246, 19246,
	1265, 19246, 1134, 19246, 19246, 18594, 14017, 18594, 18594, 18594,
	18594, 18594, -1000, -1000, -1000, -1000, -1000, 19246, 19246, 19246,
	19246, 19246, 19246, 19246, 19246, 1265, 19246, 19246, 19246, 19246,
	19246, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1502, 1323, 1369, 19246, -1000, 1865, -1000, -95, 24464,
	19246, 1550, 2432, 2001, 45980, -1000, -1000, -1000, 2357, -1000,
	2357, 1502, 2687, 2134, 18594, -1000, -1000, 2687, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1622, -1000, 47284, 1863,
	2316, 45980, 2117, 1544, 490, -1000, 19246, 19246, 1853, -1000,
	1252, 47284, -1000, -148, -1000, 33592, -1000, -1000, 12043, 47284,
	402, 47284, -1000, 23812, 32940, 287, -1000, 28, 1807, -1000,
	77, 44, 15985, 764, -1000, -1000, -1000, 672, 20550, 1770,
	764, 154, -1000, -1000, -1000, 1937, -1000, 1937, 1937, 1937,
	1937, 490, 490, 490, 490, -1000, -1000, -1000, -1000, -1000,
	1954, 1953, -1000, 1937, 1937, 1937, 1937, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1950, 1950, 1950, 1943, 1943, 499,
	-1000, 19246, 570, 32288, 2297, 1110, 1349, 309, 527, 2000,
	1159, 1159, 1159, 527, -1000, 1227, 1225, 1210, -1000, -453,
	1847, -1000, -1000, 2396, -1000, -1000, 997, 954, 951, 936,
	45980, 291, 368, -1000, 492, -1000, 32288, 1159, 894, 731,
	1159, -1000, 1159, -1000, -1000, -1000, -1000, -1000, 1159, -1000,
	-1000, 1840, -1000, 1834, 1010, 940, 982, 935, 1840, -1000,
	-1000, -86, 1840, -1000, 1840, -1000, 1840, -1000, 1840, -1000,
	1840, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	839, 241, -220, 45980, 291, 544, -1000, 539, 27072, -1000,
	-1000, -1000, 27072, 27072, -1000, -1000, -1000, -1000, 1540, 1495,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -440,
	47284, -1000, 305, 832, 359, 430, 356, 47284, 716, 2346,
	2342, 2338, 2337, 2319, 313, 343, 47284, 47284, 516, 2067,
	47284, 2303, 47284, -1000, -1000, -1000, -1000, -1000, 1294, 47284,
	-1000, -1000, 957, 957, -1000, -1000, 47284, 957, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 957, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47284, -1000, -1000, -1000, -1000, 0, 229, -1000,
	-1000, 45980, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -65, -1000, 348, 145, 75, 396, -1000, -1000, -1000,
	-1000, -1000, 2352, -1000, 1294, 909, 864, -1000, 1905, -1000,
	-1000, 1036, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 181,
	19898, 19898, 19898, 1305, 567, 1557, 1104, 1456, 1201, 1201,
	1191, 1191, 773, 773, 773, 773, 773, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1461, -1000, 1905, 46632, 1739,
	14017, 1821, 1612, 1265, 2895, -1000, 1731, -1000, 1731, 2130,
	881, -1000, 19246, 1265, 2886, -1000, -1000, 1265, 1265, 1265,
	19246, -1000, -1000, 19246, 19246, 19246, 19246, 1349, 1349, 1349,
	1349, 1349, 1349, 1349, 1349, 1349, 1349, 19246, 1819, 1814,
	2431, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1208, 1349, 1349, 1349, 1349, 1349, 19246, 2109,
	-1000, -1000, -1000, 1300, 2867, 1237, 2861, 1349, 1349, -1000,
	1349, 2846, 2826, 1265, 1777, 1265, 1809, -1000, 2820, 1349,
	2815, 2806, 2800, 2100, 2791, 2786, 2771, 1349, 1349, 1349,
	2071, 2765, 2759, 2743, 2739, 2727, 2719, 2713, 2650, 2639,
	1349, -151, 1349, 1265, -1000, -1000, -1000, -1000, -1000, 2619,
	2043, 1265, 1808, 1905, 702, -1000, -1000, 1731, 1265, 1265,
	1731, 1731, 2615, 2603, 2574, 2340, 2335, 2288, 1349, 1349,
	-1000, 1349, 2279, 2264, 2030, 1994, 1265, -1000, 1369, 47284,
	-1000, -306, -1000, 36, 762, 1905, -1000, 30984, 1265, -1000,
	4780, -1000, 1108, -1000, -1000, -1000, -1000, -1000, 28376, 1816,
	2687, -1000, -1000, 1905, 1729, -1000, -1000, 490, 142, 27724,
	761, 761, 174, 1294, 1294, 19246, -1000, -1000, -1000, -1000,
	-1000, -1000, 699, 2418, 403, 1905, -1000, 1849, 2341, -1000,
	-1000, -1000, 2315, 21855, -1000, -1000, 1905, 1905, 47284, 1766,
	1754, -1000, 680, -1000, 1174, 1807, 28, 38, -1000, -1000,
	-1000, -1000, 1294, -1000, 1170, 413, 319, -1000, 494, -1000,
	-1000, -1000, -1000, 2204, 136, -1000, -1000, -1000, 261, 490,
	-1000, -1000, -1000, -1000, -1000, -1000, 1457, 1457, -1000, -1000,
	-1000, -1000, -1000, 1109, -1000, -1000, -1000, 1107, -1000, -1000,
	2216, 1969, 570, -1000, -1000, 829, 1455, -1000, -1000, 2196,
	829, 829, 45980, -1000, -1000, 1756, 2297, 305, 47284, 859,
	2066, -1000, 2000, 2000, 2000, 47284, -1000, -1000, -1000, -1000,
	-1000, -1000, -441, 62, 439, -1000, -1000, -1000, 3463, 45980,
	1726, -1000, 277, -1000, 1752, -1000, 45980, -1000, 1724, 1949,
	1159, 1159, -1000, -1000, -1000, 45980, 1905, -1000, -1000, -1000,
	-1000, 613, 2265, 306, -1000, -1000, -182, -1000, -1000, 291,
	277, 46632, 1159, 764, -1000, -1000, -1000, -1000, -1000, -443,
	1719, 582, 294, 354, 47284, 47284, 47284, 47284, 47284, 681,
	-1000, -1000, 88, -1000, -1000, 256, -1000, -1000, -1000, -1000,
	256, -1000, -1000, -1000, -1000, 334, 538, -1000, 47284, 47284,
	689, -1000, -1000, -1000, 948, -1000, -1000, 948, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2253, 47284, 49, -367, -1000, -362,
	19246, -1000, -1000, -1000, -1000, 1124, 561, 1557, 19898, 19898,
	19898, -1000, -1000, -1000, 1402, 1402, 27072, -1000, 19246, 18594,
	-1000, -1000, 19246, 19246, 843, -1000, 19246, 990, -1000, 19246,
	-1000, -1000, -1000, 1369, 1349, 1349, 1349, 1349, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1839, 19246,
	19246, 19246, 1265, 367, -1000, -1000, -1000, -1000, -1000, 2425,
	-1000, 19246, -1000, 27072, 19246, 19246, 19246, -1000, -1000, -1000,
	19246, 19246, -1000, -1000, 19246, 19246, -1000, 19246, 19246, 19246,
	-1000, 19246, 19246, 19246, 19246, -1000, -1000, -1000, -1000, 19246,
	19246, 19246, 19246, 19246, 19246, 19246, 19246, 19246, 19246, -1000,
	-1000, 32288, 102, -151, 1134, 102, 1134, -1000, 18594, 13359,
	-1000, -1000, -1000, -1000, -1000, 19246, 19246, 19246, 19246, 19246,
	19246, -1000, -1000, -1000, 19246, 19246, -1000, 19246, -1000, 19246,
	-1000, -1000, -1000, -1000, -1000, 762, -1000, 731, 731, 731,
	45980, -1000, -1000, -1000, -1000, 1804, -1000, 2345, -1000, 2137,
	2132, 2420, 2418, -1000, 23812, 2687, -1000, -1000, 45980, -297,
	-1000, 2168, 2180, 761, 761, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 11385, 2357, 19246, 2064, 46632, 172, -1000, 23160,
	45980, 46632, 23812, 23812, 23812, 23812, 23812, -1000, 2096, 2088,
	-1000, 2082, 2081, 2098, 47284, -1000, 1502, 1714, -1000, 19246,
	25768, 1783, 23812, -1000, -1000, 23812, 47284, 10727, -1000, -1000,
	39, 26, -1000, -1000, -1000, -1000, 672, -1000, -1000, 1247,
	2311, 2184, -1000, -1000, -1000, -1000, -1000, 1690, -1000, 1685,
	1803, 1677, 241, -1000, 1988, 2236, 829, 829, -1000, 1105,
	-1000, 1159, 1432, 1429, -1000, -1000, -1000, 581, -1000, 2302,
	47284, 2063, 2061, 2060, -1000, -451, 1103, 1948, 1982, 19246,
	1946, 2393, 1789, 45980, -1000, -1000, 46632, -1000, 289, -1000,
	570, 45980, -1000, -1000, -1000, 368, 47284, -1000, 8012, -1000,
	-1000, -1000, 277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47284, 302, -1000, 1945, 1154, -1000, -1000, 1935, -1000, -1000,
	-1000, -1000, 250, 357, 1407, 264, 1390, 264, -1000, 47284,
	664, 1969, 47284, -1000, -1000, -1000, 957, 957, -1000, -1000,
	2231, -1000, 1159, 1349, 19898, 19898, -1000, 769, 300, -127,
	1937, 1937, -1000, 1937, 1943, -1000, 1937, 212, 1937, 192,
	1937, -1000, -1000, 1265, 1265, 1369, -1000, 1964, 1801, -1000,
	1294, 19246, 2258, -1000, -1000, -1000, -1000, -1000, -21, 2252,
	2248, 1349, -1000, 1936, 1934, 19246, 1349, 1265, 1926, 1349,
	1349, 1349, 1349, -1000, 1294, 1369, 2240, 1369, 1349, 1349,
	2212, 364, 1349, 1674, 1674, 1674, 1674, 1674, 1369, 1369,
	1369, 1369, 45980, -1000, -151, -1000, -1000, -201, -203, -1000,
	1265, -151, 1800, 1265, -1000, 1916, 1845, 2169, 1830, 1349,
	2152, 1349, 1349, 1349, 1797, -1000, 2349, 2349, 2349, 1630,
	1108, 47284, -1000, -1000, -1000, -1000, 2418, 2415, 1795, -1000,
	-1000, 142, 482, -1000, 2177, 2180, -1000, 2387, 2159, 2382,
	-1000, -1000, -1000, -1000, -1000, 1294, -1000, 2282, 1780, -1000,
	831, 1778, -1000, -1000, 17942, 1672, 2123, 670, 1630, 1805,
	2341, 1999, 2051, 2651, -1000, -1000, -1000, -1000, 2085, -1000,
	2083, -1000, -1000, 1912, -1000, 2147, 402, 23812, 1779, 1779,
	-1000, 658, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 964,
	7187, 2444, -1000, 1371, -1000, 1164, 223, 1098, -1000, -1000,
	829, 829, -1000, 890, 875, -1000, 47284, 1931, -1000, 490,
	1358, 490, 1087, -1000, 1071, -1000, -1000, -1000, -1000, 1892,
	2031, -1000, -1000, -1000, -1000, 47284, -1000, -1000, 47284, 47284,
	47284, 1930, 2381, -1000, 19246, 1920, 830, 2143, 45980, 45980,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 473, 829, -380, 340, 337, 829, 829, 829, -452,
	-1000, -1000, 1574, 1571, -1000, -107, -1000, 19246, -1000, -1000,
	-1000, 1076, 1076, 1356, 1353, 1344, -1000, 1912, -1000, -1000,
	-1000, 1711, -1000, -1000, -96, 45980, 45980, 45980, 45980, -1000,
	-1000, 1064, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 769, 1265, 352, -101, 1265, -1000,
	-1000, 490, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19246, -1000, 19246, -1000, 1294, 19246, 2357, 1337,
	19246, 19246, -1000, 1070, 1057, 1349, -1000, -1000, -1000, 19246,
	-1000, -1000, -1000, -1000, -1000, 19246, -1000, -1000, -1000, 19246,
	251, 1402, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1265, 378, -1000, -1000, -1000, -1000, 2416, -1000,
	1265, 19246, -1000, -1000, 19246, -1000, 19246, 19246, -1000, 19246,
	-1000, 19246, -1000, -1000, -1000, -1000, 19246, 1905, 2157, 1905,
	1905, 25768, -1000, -1000, 2415, 2408, 2375, 2148, 2150, 2150,
	2177, -1000, 2372, 2368, -1000, 1335, 2366, 1334, 872, -1000,
	46632, 19246, 172, -1000, 421, 45980, 172, 45980, -1000, 2406,
	-1000, -1000, 19246, 1919, -1000, 19246, -1000, -1000, -1000, -1000,
	5240, 2418, 1779, -1000, -1000, 794, -1000, 19246, -1000, -1000,
	-1000, 4671, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1321, 1302, -1000, -1000, 1913, 19246, -1000, -1000, -1000, 1682,
	1658, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1912,
	-1000, -1000, -1000, -1000, 368, -450, 2125, 45980, 1051, -1000,
	1448, 1789, 355, 172, 1291, 829, 829, 829, 1040, 1028,
	30984, 1446, -1000, 45980, 481, -1000, 368, -1000, -121, -123,
	1349, -1000, -1000, 2309, -1000, -1000, 13359, -1000, -1000, 1910,
	1938, -1000, -1000, -1000, -1000, 2116, -84, -103, -1000, -1000,
	1349, 1349, 1784, 1265, -1000, 1349, 1349, 1427, 1406, -1000,
	1349, 1369, 1790, -1000, 251, 1265, 2050, -1000, -1000, 5240,
	-1000, -1000, 2406, 2364, 102, -1000, -1000, 286, 102, 1294,
	1764, 1349, 1734, 1698, 1349, 1349, 26420, -1000, 2363, 2360,
	31636, 31636, 762, 2408, -171, 19246, 19246, 2141, 1067, -1000,
	-1000, -1000, -1000, 1286, 1255, -1000, 1229, -1000, 2443, -1000,
	1294, -1000, 172, -1000, 629, 1778, -1000, 2357, 1294, 45980,
	1294, 129, 2406, -1000, 1349, -1000, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905, 1905,
	1905, 1905, 1905, 1905, 1905, 1905, -1000, -1000, 45980, 2119,
	-1000, -1000, 2306, 1426, 61, -1000, 1341, 1789, -1000, -1000,
	173, -1000, 19246, -1000, 30984, 1213, 1192, -1000, -1000, -1000,
	-1000, -452, -1000, -1000, -1000, -1000, -1000, -1000, 404, 1786,
	-1000, 827, 45980, 47284, -1000, 2101, -1000, -1000, -1000, 19246,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19246, -1000,
	1265, 2049, -1000, -254, -1000, -382, 19246, -151, -1000, -1000,
	-151, -1000, 19246, -1000, -1000, 19246, -1000, 19246, -1000, -1000,
	1420, -1000, -1000, -1000, -1000, -1000, 1420, 1420, -1000, -171,
	-1000, 1782, -1000, 45980, 1294, 1777, -1000, 1065, -1000, -1000,
	-1000, -1000, -1000, 46632, 1778, 45980, -1000, 1413, 1265, 1905,
	2357, -1000, 1405, -1000, 404, -1000, 1909, 1982, -1000, -1000,
	-1000, 17290, -1000, -1000, -1000, -1000, -1000, 168, -93, 13359,
	10069, 1397, -1000, -89, 1349, 1369, -1000, -341, -1000, -1000,
	-1000, -1000, 215, -1000, -1000, 1777, -1000, -1000, 1657, 1340,
	1298, 30332, -1000, -1000, -1000, -1000, -171, -1000, -1000, 2305,
	-1000, -1000, 1774, -1000, -1000, 25768, 45328, -1000, -77, 453,
	-93, 19246, 1908, 1265, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47, -1000, -1000, -1000, -1000, -1000, 1935, -106,
	-1000, -1000, -1000, 207, -372, -175, -195, -1000, -1000, 19898,
	-1000, 19246, -1000, 19246, -1000, 19246, -1000, -1000, -1000, 45980,
	1905, -1000, 1366, -1000, 3515, -213, 2040, -1000, -43, -1000,
	-1000, -1000, 958, 1188, -1000, -1000, -1000, -1000, -1000, -1000,
	1694, 45980, -1000, 495, -1000, -1000, -96, -108, 861, -1000,
	-1000, -1000, -1000, -1000, 1144, 1075, 1349, -1000, 45980, -1000,
	45328, -208, 764, 5240, -1000, 2008, 2003, 2430, -1000, -1000,
	-1000, -1000, -1000, -1000, -459, 1307, 307, -1000, -1000, 207,
	-1000, 19246, -1000, 19246, -1000, 1265, -1000, -1000, 2300, 129,
	-1000, 2442, -1000, 2440, 816, 816, -1000, 1018, -459, -1000,
	-1000, 1349, 1349, -1000, -224, -1000, -1000, -1000, -1000, -1000,
	488, 1073, -1000, -1000, -1000, -1000, -1000, 5240, -1000, -1000,
	-1000, 275, 275, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3083, 3082, 30, 1, 37, 36, 3080, 91, 102,
	188, 40, 191, 105, 3077, 168, 3076, 3075, 3074, 3073,
	3069, 3067, 2492, 2472, 2463, 3065, 3064, 3063, 3062, 3061,
	3060, 3059, 3057, 3056, 3055, 169, 170, 193, 3053, 3052,
	3051, 117, 200, 89, 84, 183, 3047, 3045, 81, 3039,
	3032, 3030, 181, 180, 179, 939, 3026, 197, 114, 53,
	3024, 3023, 3022, 3019, 3018, 3017, 3015, 3014, 3013, 3012,
	3011, 3010, 3007, 3005, 3004, 3001, 2999, 276, 2997, 2996,
	22, 2994, 83, 2993, 2992, 2991, 2990, 2989, 11, 2984,
	2982, 16, 55, 2981, 2980, 51, 2978, 2973, 2972, 2971,
	2970, 23, 2969, 27, 2966, 38, 2963, 2960, 124, 2958,
	2952, 2946, 39, 2944, 2940, 2938, 2937, 2929, 2926, 2923,
	140, 2922, 2921, 2920, 254, 190, 2919, 2917, 265, 144,
	136, 2915, 2911, 111, 184, 2909, 123, 2905, 2902, 2897,
	149, 2883, 138, 2877, 2872, 75, 77, 2870, 346, 2867,
	2863, 10, 29, 74, 4, 9, 18, 2843, 2834, 67,
	80, 2833, 130, 2832, 2829, 99, 93, 2828, 97, 103,
	2826, 2825, 13, 7, 2822, 2, 6, 3, 68, 2821,
	2820, 122, 2816, 2813, 2811, 101, 2809, 2808, 3721, 2806,
	96, 131, 104, 78, 2805, 47, 58, 2803, 2802, 2800,
	2797, 2796, 56, 2794, 2793, 2787, 135, 224, 166, 2786,
	41, 106, 61, 133, 2783, 42, 92, 192, 158, 2782,
	2779, 137, 132, 2773, 2772, 65, 45, 44, 2771, 113,
	127, 118, 112, 110, 177, 2768, 2767, 62, 76, 2766,
	2764, 2762, 2759, 160, 2750, 2749, 69, 2748, 50, 2746,
	165, 2741, 21, 60, 2740, 46, 159, 2734, 73, 2733,
	2732, 66, 98, 70, 52, 2714, 156, 162, 125, 164,
	2710, 2709, 57, 2708, 2705, 2698, 185, 339, 2688, 2683,
	82, 171, 142, 148, 95, 2682, 342, 2677, 2676, 157,
	2247, 5468, 2661, 71, 163, 2657, 2646, 6892, 167, 48,
	26, 2644, 119, 2641, 2640, 2638, 2632, 196, 187, 107,
	161, 63, 2631, 2627, 2622, 17, 2621, 2620, 2612, 2611,
	2610, 2609, 85, 35, 34, 33, 253, 72, 20, 108,
	152, 86, 2606, 2598, 2592, 121, 90, 2591, 155, 153,
	134, 176, 2588, 174, 139, 129, 2586, 54, 32, 2585,
	2581, 2580, 2569, 100, 2561, 2550, 2549, 2545, 150, 143,
	120, 88, 2542, 79, 115, 147, 146, 59, 2541, 49,
	2540, 2532, 31, 182, 28, 2530, 15, 116, 242, 2529,
	4684, 178, 2525, 19, 358, 145, 2522, 2521, 8, 12,
	14, 2518, 2516, 2506, 2505, 128, 2498, 2496, 2488, 2487,
	25, 64, 24, 5, 109, 87, 2486, 2473, 141, 2467,
	2465, 3459, 0, 126, 2459, 209,
}

//line sql.y:7959
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) vtexplainTypeUnion() VtExplainType {
	v, _ := st.union.(VtExplainType)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 409, 410, 410, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 258,
	380, 381, 381, 256, 256, 33, 72, 35, 35, 34,
	34, 37, 37, 36, 8, 8, 8, 9, 9, 9,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 10,
	11, 11, 11, 11, 13, 13, 13, 13, 13, 20,
	21, 12, 12, 22, 22, 106, 106, 23, 24, 24,
	24, 24, 413, 413, 183, 183, 181, 181, 182, 182,
	261, 261, 25, 265, 265, 267, 267, 267, 267, 257,
	257, 257, 26, 26, 266, 266, 268, 268, 268, 271,
	271, 271, 271, 310, 310, 310, 27, 27, 27, 27,
	27, 126, 126, 383, 383, 382, 376, 376, 375, 375,
	374, 379, 379, 378, 378, 377, 39, 40, 49, 49,
	49, 49, 50, 51, 384, 384, 349, 56, 56, 55,
	55, 55, 55, 55, 55, 57, 57, 53, 53, 52,
	52, 54, 54, 351, 351, 337, 337, 350, 350, 350,
	350, 350, 350, 350, 336, 336, 137, 137, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 399, 399, 399, 398, 398,
	236, 236, 236, 236, 236, 236, 236, 236, 147, 147,
	159, 159, 159, 159, 159, 145, 145, 146, 144, 144,
	144, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	158, 158, 154, 154, 154, 155, 155, 155, 156, 156,
	400, 400, 400, 400, 315, 315, 315, 315, 318, 318,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 317,
	317, 317, 317, 317, 319, 319, 319, 319, 319, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 321, 321, 321, 321, 321,
	321, 321, 321, 335, 335, 322, 322, 330, 330, 331,
	331, 331, 332, 332, 332, 333, 333, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 329, 329, 328, 328,
	328, 338, 363, 363, 362, 362, 360, 360, 360, 360,
	360, 360, 360, 360, 347, 347, 357, 357, 357, 357,
	357, 346, 346, 342, 342, 342, 343, 343, 344, 344,
	341, 341, 345, 345, 359, 359, 358, 358, 339, 339,
	340, 340, 365, 401, 401, 401, 401, 401, 402, 402,
	366, 391, 393, 393, 393, 392, 392, 389, 390, 388,
	388, 388, 388, 388, 82, 82, 82, 284, 284, 285,
	285, 355, 355, 354, 354, 354, 356, 356, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 279,
	279, 279, 387, 387, 387, 387, 387, 387, 386, 386,
	386, 352, 352, 352, 385, 385, 58, 58, 216, 216,
	404, 404, 405, 405, 405, 46, 46, 46, 46, 46,
	46, 45, 45, 45, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 47, 47, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 108, 108, 109, 109, 109,
	109, 111, 111, 111, 368, 368, 59, 59, 3, 3,
	171, 173, 174, 174, 172, 172, 172, 172, 172, 172,
	61, 61, 60, 60, 176, 175, 177, 177, 177, 1,
	1, 2, 2, 4, 4, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 334, 334, 334,
	367, 367, 369, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 114, 113, 113, 112, 115, 115, 115,
	115, 115, 115, 115, 115, 371, 371, 371, 62, 62,
	372, 323, 324, 325, 5, 6, 348, 370, 122, 122,
	29, 38, 38, 30, 30, 30, 30, 31, 31, 63,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 278, 278, 287, 287, 277, 277, 302, 302,
	302, 280, 280, 280, 281, 281, 397, 397, 397, 274,
	274, 65, 65, 65, 303, 303, 303, 303, 67, 67,
	406, 406, 407, 407, 408, 408, 408, 68, 69, 69,
	305, 305, 306, 306, 70, 71, 83, 83, 83, 83,
	83, 83, 83, 84, 84, 84, 84, 84, 107, 107,
	107, 15, 15, 15, 15, 79, 79, 79, 14, 14,
	17, 66, 66, 73, 394, 394, 395, 396, 396, 396,
	396, 74, 76, 32, 32, 32, 32, 32, 32, 132,
	132, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 127, 127, 127, 121, 121, 414, 77,
	78, 78, 125, 125, 125, 118, 118, 118, 124, 124,
	124, 16, 16, 18, 260, 260, 19, 19, 129, 129,
	131, 131, 131, 131, 131, 133, 133, 133, 133, 133,
	133, 133, 128, 128, 130, 130, 130, 130, 295, 295,
	295, 294, 294, 165, 165, 167, 166, 166, 168, 168,
	169, 169, 169, 169, 214, 214, 191, 191, 253, 253,
	254, 254, 252, 252, 259, 259, 255, 255, 255, 255,
	262, 262, 170, 170, 170, 170, 178, 178, 179, 179,
	180, 180, 304, 304, 300, 300, 300, 299, 299, 184,
	184, 184, 186, 185, 185, 185, 185, 187, 187, 189,
	189, 188, 188, 190, 195, 195, 194, 194, 192, 192,
	192, 192, 193, 193, 193, 193, 196, 196, 142, 142,
	142, 142, 142, 142, 142, 157, 157, 157, 157, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	243, 243, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 148, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	151, 219, 219, 218, 218, 85, 85, 85, 86, 86,
	87, 87, 87, 87, 87, 88, 88, 88, 88, 88,
	143, 143, 90, 90, 89, 89, 209, 209, 292, 292,
	91, 92, 92, 95, 95, 94, 93, 93, 99, 99,
	96, 96, 98, 98, 97, 100, 100, 101, 102, 102,
	275, 275, 197, 197, 205, 205, 205, 205, 198, 198,
	198, 198, 198, 198, 198, 206, 206, 206, 213, 207,
	207, 203, 203, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 162,
	162, 162, 162, 224, 224, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	150, 150, 163, 163, 163, 163, 164, 164, 164, 164,
	164, 164, 164, 312, 312, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 415, 415, 326, 326,
	326, 326, 204, 204, 204, 204, 204, 123, 123, 123,
	123, 123, 309, 309, 309, 313, 313, 313, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 311, 314, 314, 222, 222, 119, 119, 220,
	220, 221, 223, 223, 215, 215, 215, 215, 217, 217,
	200, 200, 200, 225, 225, 226, 226, 103, 104, 104,
	105, 105, 227, 227, 229, 228, 228, 230, 231, 231,
	231, 232, 232, 233, 233, 233, 48, 48, 48, 48,
	48, 43, 43, 43, 43, 44, 44, 44, 44, 134,
	134, 134, 134, 136, 136, 135, 135, 80, 80, 81,
	81, 81, 140, 140, 141, 141, 141, 138, 138, 139,
	139, 250, 250, 234, 234, 234, 241, 241, 241, 237,
	237, 239, 239, 239, 240, 240, 240, 238, 247, 247,
	249, 249, 248, 248, 244, 244, 245, 245, 246, 246,
	246, 242, 242, 199, 199, 199, 199, 199, 251, 251,
	251, 251, 263, 263, 210, 210, 212, 212, 211, 211,
	161, 264, 264, 272, 269, 269, 270, 270, 296, 296,
	296, 273, 273, 286, 286, 282, 282, 283, 283, 276,
	276, 288, 288, 288, 75, 208, 208, 364, 364, 361,
	291, 291, 293, 293, 297, 297, 301, 301, 298, 298,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 411, 412, 307, 308,
	308, 308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 0, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 2, 0, 2, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 5, 5, 4, 4, 4, 6, 5,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	3, 3, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	8, 4, 1, 3, 3, 6, 7, 7, 8, 4,
	0, 1, 0, 1, 3, 3, 1, 1, 2, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 3, 3, 0, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 3, 2, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 3, 1, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 4, 4,
	4, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 1, 2, 3, 7, 0, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	7, 7, 6, 6, 2, 2, 1, 6, 3, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 4, 8, 6, 8, 6, 5,
	4, 10, 2, 2, 1, 2, 2, 2, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 8, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 4, 6, 6, 6,
	8, 6, 6, 4, 4, 3, 4, 6, 6, 4,
	4, 4, 6, 8, 6, 4, 6, 6, 8, 10,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 6, 8, 10, 12, 14,
	6, 8, 8, 10, 12, 14, 6, 8, 10, 12,
	6, 8, 4, 4, 3, 4, 6, 6, 4, 6,
	4, 6, 8, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 0, 5, 5, 2, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 1, 0, 1, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 1, 3, 5, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 4,
	1, 1, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -409, -77, -414, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -64,
	-65, -67, -68, -69, -70, -71, -14, -17, -66, -32,
	-33, -72, -73, -74, -75, -76, -16, -18, -19, -9,
	-8, -13, 10, 11, -106, -34, 33, -39, -49, 225,
	-50, -40, 226, -51, 228, 227, 266, 229, 259, 75,
	314, 315, 317, 318, 319, 320, -107, 615, 264, 265,
	231, 37, 46, 34, 35, 38, 235, 272, 273, 234,
	-10, -35, 9, -411, 12, 448, 261, 260, 29, -12,
	510, 87, -78, -410, 662, -250, -234, 23, 34, 30,
	-233, -229, -125, -234, 21, 19, 8, -77, -77, -77,
	13, 14, -77, -349, -351, 87, 159, 87, -77, -56,
	-55, -53, -52, -54, -57, 32, -46, -47, -373, -45,
	-42, 230, 227, 276, 123, 124, 266, 267, 268, 229,
	250, 265, 269, 264, 285, -41, 82, 34, 510, 513,
	-356, 226, 232, 233, 228, 449, 126, 125, 76, -353,
	371, 543, 632, -57, 634, 101, 104, 633, 45, 240,
	635, 636, 637, 550, 638, 249, 639, 640, 641, 642,
	648, 591, 649, 650, 651, 127, 8, -77, -301, -297,
	91, -290, 507, 252, 541, 542, 301, 82, 42, 516,
	368, 371, 543, 478, 632, 314, 330, 324, 483, 484,
	485, 351, 343, 508, 544, 517, 304, 253, 289, 626,
	341, 135, 634, 308, 545, 267, 376, 377, 546, 378,
	101, 317, 415, 647, 307, 547, 645, 104, 633, 322,
	80, 477, 52, 629, 45, 262, 339, 234, 335, 635,
	290, 548, 519, 283, 126, 123, 654, 37, 333, 51,
	31, 644, 125, 50, 636, 150, 549, 637, 550, 380,
	358, 620, 49, 381, 268, 551, 85, 273, 237, 512,
	311, 628, 382, 497, 334, 383, 300, 643, 231, 552,
	611, 603, 604, 384, 385, 621, 363, 359, 364, 499,
	553, 407, 482, 386, 607, 608, 661, 53, 554, 555,
	622, 124, 556, 79, 638, 81, 328, 329, 557, 298,
	251, 502, 503, 409, 355, 460, 467, 468, 111, 112,
	463, 113, 469, 114, 470, 471, 472, 461, 115, 108,
	462, 473, 474, 356, 357, 116, 475, 110, 109, 464,
	466, 117, 476, 249, 36, 387, 509, 302, 59, 306,
	277, 410, 47, 361, 658, 46, 616, 504, 558, 619,
	354, 350, 457, 54, 559, 560, 561, 562, 479, 639,
	353, 327, 349, 653, 4, 295, 480, 640, 63, 233,
	366, 365, 367, 284, 406, 346, 563, 564, 565, 256,
	83, 566, 336, 22, 567, 568, 388, 291, 569, 57,
	570, 571, 413, 265, 572, 55, 641, 40, 573, 270,
	655, 642, 574, 575, 576, 577, 272, 578, 390, 579,
	605, 606, 389, 360, 362, 505, 279, 391, 236, 511,
	580, 312, 332, 269, 646, 581, 257, 493, 494, 495,
	496, 627, 501, 500, 271, 276, 264, 414, 258, 582,
	583, 584, 585, 586, 305, 602, 587, 588, 318, 648,
	458, 44, 589, 590, 591, 592, 593, 299, 294, 408,
	417, 62, 84, 373, 594, 595, 625, 326, 323, 292,
	596, 315, 56, 649, 650, 651, 286, 652, 486, 487,
	488, 489, 10, 659, 660, 481, 393, 127, 296, 297,
	48, 347, 278, 597, 309, 598, 337, 338, 352, 325,
	348, 316, 612, 280, 394, 459, 266, 599, 416, 293,
	369, 374, 310, 515, 498, 285, 395, 624, 514, 490,
	491, 345, 342, 287, 492, 600, 396, 241, 281, 282,
	601, 613, 397, 398, 303, 399, 400, 401, 402, 403,
	405, 313, 404, 609, 610, 288, 513, 321, 340, 375,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 456, 239,
	-77, 239, -188, -297, 239, -269, 377, -287, 379, 392,
	387, 397, 385, -278, 388, 390, 279, -397, 407, 239,
	394, 225, 380, 389, 398, 399, 303, 405, 400, 313,
	404, 288, 401, 402, 403, -380, 177, 637, 652, 135,
	344, 384, 382, 408, 616, 91, -303, 91, 92, 93,
	-290, 316, -305, 321, -291, -380, -290, 319, -77, -77,
	-307, -307, -127, 616, 618, -207, -142, 143, -157, -160,
	-148, -152, -201, -202, -203, -204, -158, -217, -256, 166,
	167, 174, 144, -213, -161, 27, 506, 450, 449, 177,
	32, -151, 220, 69, 70, 452, 146, 58, 12, 425,
	426, -159, 420, 427, 422, 477, 479, 480, 481, 478,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	482, 454, 455, 118, 456, 108, 110, 109, 457, 458,
	459, 341, 504, 505, 499, 502, 503, 501, 500, 356,
	357, 460, 461, 462, 111, 112, 113, 114, 115, 116,
	117, 463, 466, 464, 465, 467, 468, 469, 474, 475,
	470, 471, 472, 473, 476, -87, -99, 532, 531, -100,
	-149, -150, -163, -164, -291, -297, 244, 419, 238, 172,
	448, -153, -146, -215, 107, 92, 93, -8, -211, 418,
	423, 424, 428, 421, 518, 520, 535, 536, 538, 523,
	528, 527, 530, 493, 494, 495, 496, 497, 498, 603,
	604, 605, 606, 607, 608, 609, 610, -380, -290, 91,
	-155, -154, -197, 94, 99, 102, 103, 105, -403, 262,
	337, 338, 119, -411, 630, 90, 95, 96, 97, 98,
	120, 121, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 45, 393, 393, -188, -77, -77,
	-77, -77, -227, -125, -229, -10, -8, -411, 9, -77,
	-8, -9, -13, -35, -37, 537, -36, -297, 100, -234,
	-250, 13, 162, 43, 51, -232, -233, -12, -8, -142,
	20, 24, 25, -130, 168, -142, -297, -130, -276, 243,
	-77, -77, -265, -310, 316, -267, 408, 616, 407, -257,
	-270, 91, -256, -269, 406, -350, 159, -336, -340, -291,
	254, -366, 250, -188, -359, -358, -291, -411, -126, -286,
	240, 248, 247, 136, -384, 139, 296, 419, 238, -52,
	-53, -54, -269, 176, 636, -108, 271, 275, 88, 88,
	-340, -339, -338, -385, 275, 254, -365, -357, 246, 255,
	-346, 247, 248, -341, 240, 137, -385, -341, 245, 255,
	250, 254, 275, 275, 127, 275, 127, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 270, -347, 151, -347,
	514, 514, -353, -385, 250, 240, -385, -385, 246, -288,
	-341, 242, 26, 242, 36, 36, -347, -347, -347, -269,
	176, -347, -347, -347, -347, 283, 283, -347, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, 239, -384, -134, 404, 303, 82,
	-55, 285, -38, -188, -286, 240, 241, -384, 272, -188,
	221, -188, -280, 159, 16, -280, -277, 393, 391, 378,
	383, -280, -280, -280, -280, 286, 376, -342, 240, 36,
	251, 393, 286, 376, 286, 287, 286, 287, 386, 396,
	286, -302, 15, 162, 419, 381, 385, 279, 239, 280,
	241, 395, 287, -302, 90, -281, 159, 286, 393, 282,
	-280, -280, -308, -411, -293, -291, -289, 230, 24, 142,
	26, 28, 145, 177, 130, 20, 146, 38, 232, 344,
	250, 176, 246, 449, 225, 73, 518, 420, 422, 418,
	425, 451, 452, 419, 379, 32, 14, 520, 29, 260,
	25, 39, 170, 227, 149, 521, 263, 27, 261, 118,
	121, 523, 23, 76, 255, 15, 248, 41, 17, 524,
	525, 18, 244, 243, 162, 240, 71, 12, 220, 30,
	158, 67, 526, 137, 527, 528, 529, 530, 131, 69,
	159, 21, 656, 423, 424, 34, 617, 506, 274, 172,
	74, 60, 618, 143, 421, 531, 532, 119, 533, 122,
	77, 623, 139, 19, 72, 43, 534, 275, 535, 245,
	657, 536, 411, 537, 160, 228, 448, 70, 161, 630,
	538, 631, 238, 392, 9, 453, 33, 259, 247, 129,
	68, 539, 239, 148, 454, 455, 242, 132, 120, 8,
	136, 35, 13, 75, 78, 426, 427, 428, 58, 128,
	510, 147, 16, 540, 412, 141, -380, 619, -308, -308,
	33, 92, -406, -407, -408, 510, 411, 242, -291, -188,
	-83, 611, 229, -84, 611, -132, 393, -120, 177, 637,
	620, 621, 622, 619, 390, 627, 625, 623, 286, 624,
	88, 139, 141, 142, 4, -142, 158, -198, 151, 152,
	153, 154, 155, 156, 157, 162, 143, 145, 159, -243,
	140, 163, 164, 165, 166, 167, 168, 169, 171, 170,
	172, 173, 160, 161, 176, 223, 224, -152, -152, -152,
	-152, -213, -219, -218, -411, -215, -380, -290, -297, -411,
	-411, -152, -275, -411, -411, -152, -411, -411, -411, -222,
	-142, -411, -411, -415, -411, -415, -415, -326, -411, -326,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, 221, -411, -411, -411,
	-411, -411, -326, -326, -326, -326, -326, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, 103, 99, 102, 94, -217, 105, 90, 90, 90,
	90, -8, -9, -207, -411, -307, -394, -395, -191, -188,
	-411, 303, -291, -291, 272, -232, -12, -8, -227, -233,
	-229, -8, -77, -118, -131, 64, 65, -133, 25, 39,
	68, 66, 24, -412, 89, -412, -250, -412, 88, -37,
	-253, 87, 62, 44, 90, 90, 88, 22, -228, -230,
	-142, 15, -295, 4, -294, 26, -291, 90, 221, 15,
	-189, 30, -188, -276, -276, 88, 91, 316, -266, -268,
	409, 411, 151, -296, -291, 90, 32, 89, 88, -188,
	-315, -318, -320, -319, -321, -316, -317, 341, 342, 177,
	345, 347, 348, 349, 350, 351, 352, 353, 354, 355,
	358, 33, 262, 337, 338, 339, 340, 359, 360, 361,
	362, 364, 365, 366, 367, 324, 343, 508, 325, 326,
	327, 328, 329, 330, 332, 333, 334, 335, 336, -381,
	-380, 87, 89, 88, -322, 87, -142, -134, 239, -380,
	240, 240, 240, -77, 448, -347, -347, -347, 270, 20,
	-45, -42, -373, 19, -41, -42, 230, 123, 124, 227,
	87, -336, 87, -345, -381, -380, 87, 137, 245, 136,
	-344, -341, -344, -345, -380, -215, -380, 137, 137, -380,
	-380, -262, -291, -262, -262, 24, -262, 24, -262, 24,
	96, -291, -262, 24, -262, 24, -262, 24, -262, 24,
	-262, 24, 32, 79, 80, 81, 32, 83, 84, 85,
	-215, -380, -380, -215, -336, -215, -188, -380, -269, 96,
	96, 96, -347, -347, 96, 90, 90, 90, -347, -347,
	96, 90, -299, -297, 90, 90, -386, 256, 300, 302,
	96, 96, 96, 96, 32, 90, -387, 32, 644, 643,
	645, 646, 647, 90, 96, 32, 96, 32, 96, -291,
	87, -188, -140, 290, 225, 227, 230, 77, 90, 306,
	307, 304, 309, 310, 151, 45, 88, 242, 239, -380,
	-282, 244, -282, -291, -298, -297, -289, 90, -142, -343,
	15, 162, -302, -302, -280, -188, -343, -302, -280, -188,
	-280, -280, -280, -280, -302, -302, -302, -280, -297, -297,
	-188, -188, -188, -188, -188, -188, -188, -308, -281, -280,
	619, 90, -274, 15, 77, -308, -308, 88, 322, 412,
	413, -306, 319, -79, -291, 90, -15, -11, -23, -22,
	-24, 151, -15, 151, 88, 510, -181, -188, 619, 619,
	619, 619, 619, 619, -142, -142, -142, -142, 533, -205,
	119, 143, 120, 121, -160, -206, -211, -213, 106, 162,
	145, 159, -243, -148, -152, -148, -148, -148, -148, -148,
	-148, -148, -148, -148, -148, -148, -148, -148, -309, -291,
	90, 177, -156, -155, 105, -403, -156, 507, 88, -218,
	221, -142, -142, -380, -142, -291, -128, -130, -128, -142,
	-220, -221, 147, -215, -142, -412, -412, 96, 105, 168,
	-124, 25, 39, -124, -124, -124, -124, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -124, -291, -291,
	-117, -116, 430, 431, 432, 433, 435, 436, 437, 440,
	441, 445, 446, 429, 447, 434, 439, 442, 443, 444,
	438, 340, -142, -142, -142, -142, -142, -142, -85, -142,
	130, 131, 132, -207, -142, -148, -142, -142, -142, -412,
	-142, -142, -142, -208, -207, -379, -378, -377, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -412, -142, -162, -146, 96, -258, 105, 92, -142,
	-142, -129, -128, -293, -298, -289, -290, -128, -129, -129,
	-128, -128, -142, -142, -142, -142, -142, -142, -142, -142,
	-412, -142, -142, -142, -142, -142, -250, -412, -207, 88,
	-396, 411, 412, 617, -300, 275, -299, 26, -208, 90,
	15, -260, 78, -291, -232, -232, 64, 65, 60, -128,
	-133, -412, -36, 26, -252, -291, 63, 90, -327, -269,
	368, 369, 177, -142, -142, 88, -231, 28, 29, -188,
	-294, 168, -298, -188, -261, 275, -188, -166, -168, -169,
	-170, -191, -214, -411, -171, -8, 529, 526, 15, -181,
	-182, -190, -297, -267, -310, -266, 88, 410, 412, 413,
	77, 122, -142, -328, 176, -355, -354, -353, -336, -338,
	-339, -340, 89, -328, -332, 374, 373, -322, -322, -322,
	-322, -322, -327, -327, -327, -327, 87, 87, -322, -322,
	-322, -322, -330, 87, -330, -330, -331, 87, -331, -366,
	-142, -363, -362, -360, -361, 249, 101, 601, 557, 510,
	550, 591, 78, -358, -231, 96, -412, -140, -283, 244,
	-364, -361, -380, -380, -380, -283, 91, 90, 91, 90,
	91, 90, -109, -59, -1, 656, 657, 658, 88, 20,
	-337, -336, -58, 300, -369, -370, 275, -365, -359, -345,
	137, -344, -345, -345, -380, 88, 30, 127, 127, 127,
	127, 510, 227, 33, -284, 549, 143, 601, 557, -336,
	-58, 242, 242, -309, -309, -309, 90, 90, -279, 652,
	-181, -136, 292, 151, 281, 281, 239, 239, 294, -188,
	305, 308, 306, 307, 304, 309, 310, 24, 24, 24,
	24, 24, 293, 295, 297, 283, -188, -188, -282, 77,
	-183, -188, 27, -297, -188, -280, -280, -188, -280, -280,
	-188, -408, 323, -291, 355, 612, 613, 615, 614, 355,
	239, 236, 237, -120, 411, 88, 510, 23, -121, 23,
	-411, 119, 120, 121, -206, -148, -152, -148, 142, 263,
	-411, -215, -412, -293, 26, 88, 78, -412, 88, 88,
	-412, -412, 88, 15, -223, -221, 149, -142, -412, 88,
	-412, -412, -412, -207, -142, -142, -142, -142, -412, -412,
	-412, -412, -412, -412, -412, -412, -412, -412, -207, 88,
	88, 15, -313, 26, -412, -412, -412, -412, -412, -222,
	-412, 15, -412, 78, 88, 162, 88, -412, -412, -412,
	88, 88, -412, -412, 88, 88, -412, 88, 88, 88,
	-412, 88, 88, 88, 88, -412, -412, -412, -412, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, -412,
	-92, 534, -412, -412, 88, -412, 88, -412, -411, 221,
	-412, -412, -412, -412, -412, 88, 88, 88, 88, 88,
	88, -412, -412, -412, 88, 88, -412, 88, -412, 88,
	-412, -395, 616, 412, -195, -194, -192, 75, 243, 76,
	-411, -299, -412, -156, -258, -259, -258, -200, -291, 96,
	105, -234, -165, -167, 15, -133, -213, 89, 88, -327,
	-238, -244, -277, -291, 90, 177, -329, 177, -329, 368,
	369, -230, 221, -196, 16, -199, 33, 58, -11, -411,
	-411, 33, 88, -184, -186, -185, -187, 67, 71, 73,
	68, 69, 70, 74, -304, 26, -8, -166, -8, -411,
	-188, -181, -413, 15, 78, -413, 88, 221, -268, -271,
	414, 411, 417, -380, 90, -108, 88, -353, -340, -235,
	-137, 41, -333, 375, -327, 517, -327, -335, 90, -335,
	96, 96, 89, -48, -43, -44, 34, 82, -360, -347,
	90, 40, -347, -347, -291, 89, -231, -136, -188, 143,
	77, -364, -364, -364, -297, -2, 655, 661, 137, 87,
	378, 19, -252, 88, 89, -216, 301, 89, -110, -291,
	89, 87, -345, -345, -291, -411, 239, 32, 32, 601,
	557, 549, -58, -216, -215, -380, -328, 654, 653, 89,
	241, 299, -141, 425, -138, 90, 91, -188, -188, -188,
	-188, -188, 230, 227, 401, -404, 311, -404, 284, 242,
	-181, -188, 88, -82, 258, 253, -302, -302, 34, -188,
	411, 628, 626, -142, 142, 263, -160, -152, -148, -311,
	177, 341, 262, 339, 335, 355, 346, 373, 337, 374,
	334, 333, 332, -311, -309, -207, -130, -142, -142, 150,
	-142, 148, -142, -412, -412, -412, -412, -412, -227, -142,
	-142, -142, -412, 177, 341, 15, -142, -309, -142, -142,
	-142, -142, -142, -377, -142, -207, -142, -207, -142, -142,
	-142, -142, -142, -378, -378, -378, -378, -378, -207, -207,
	-207, -207, -411, -291, -95, -94, -93, 584, 243, -92,
	-162, -95, -162, -129, -293, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -192, -341, -341, -341, -262,
	88, -273, 23, 15, 58, 58, -165, -196, -166, -133,
	-291, -241, 611, -247, 47, -245, -246, 48, -242, 49,
	57, -329, -329, 168, -232, -142, -263, 77, -264, -272,
	-215, -210, -212, -211, -411, -251, -412, -291, -262, -264,
	-168, -169, -169, -168, -169, 67, 67, 67, 72, 67,
	72, 67, -185, -297, -412, -142, -300, 78, -166, -166,
	-190, -297, 168, 411, 415, 416, -353, -402, 119, 143,
	32, 77, 371, 101, -400, 176, 546, 596, 601, 557,
	550, 591, -401, 245, 136, 137, 257, 26, 42, 89,
	88, 89, 88, 89, 88, -285, -284, -44, -43, -347,
	-347, 96, -380, 90, 90, 241, 27, -188, 77, 77,
	77, -111, 659, 96, 87, -3, 82, -142, 87, 20,
	-336, -215, -371, -323, -372, -324, -325, -5, -6, -348,
	-114, 58, 101, -62, 45, 240, 639, 640, 127, -411,
	652, -363, -252, -367, -369, -188, -145, -411, -144, -146,
	-153, 166, 167, 262, 337, 338, -216, -188, -135, 290,
	298, 87, -139, 92, -383, 78, 281, 371, 281, 90,
	-405, 312, 90, -405, -188, -82, -48, -188, -280, -280,
	34, -380, -412, -160, -152, -123, 162, 510, -314, 516,
	-322, -322, -322, -331, -322, 329, -322, 329, -322, -412,
	-412, -412, 88, -412, 23, -412, -142, 88, -119, 453,
	88, 88, -412, 87, 87, -142, -412, -412, -412, 88,
	-412, -412, -412, -412, -412, 88, -412, -412, -412, 88,
	-312, 602, -412, -412, -412, -412, -412, -412, -412, -412,
	-412, -412, -91, -292, -291, -92, 566, 566, -412, -92,
	-224, 88, -412, -412, 88, -412, 88, 88, -412, 88,
	-412, 88, -412, -412, -412, -412, 88, -193, 23, -193,
	-193, -412, -258, -188, -196, -225, 17, -238, 52, 347,
	-249, -248, 56, 48, -246, 20, 50, 20, 31, -263,
	88, 151, 88, -412, -412, 88, 58, 221, -412, -196,
	-179, -178, 77, 78, -180, 77, -178, 67, 67, -253,
	88, -261, -166, -196, -196, 221, 119, -411, -147, -159,
	-145, 13, 90, 90, -380, -399, 643, 644, 32, 96,
	-347, -347, 137, 137, -188, 87, -327, 90, -327, 96,
	96, 32, 83, 84, 85, 32, 79, 80, 81, -188,
	-188, -188, -188, -368, 87, 20, -142, 87, 151, 89,
	-252, -252, 277, 162, -347, 637, 283, 283, -347, -347,
	-347, -113, -112, 659, 89, -412, 88, -334, 510, 513,
	-142, -154, -154, -253, 89, -376, 510, -382, -291, -291,
	-291, -291, 96, 98, -412, 508, 74, 511, -412, -327,
	-142, -142, -142, -232, 90, -142, -142, 96, 96, -412,
	-142, -207, -142, -412, -176, -175, -177, 620, 119, 32,
	-311, -412, -209, 275, -98, -97, -96, 15, -412, -142,
	-142, -142, -142, -142, -142, -142, -411, 67, 19, 17,
	-411, -411, -300, -225, -226, 18, 20, -239, 54, -237,
	53, -237, -248, 20, 20, 90, 20, 90, 137, -272,
	-142, -212, 58, -11, -291, -210, -291, -227, -142, 87,
	-142, -156, -196, -196, -142, -202, 477, 479, 480, 481,
	478, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 482, 456, 108, 110, 109, 457, 458, 459, 341,
	504, 505, 499, 502, 503, 501, 500, 356, 357, 460,
	461, 462, 111, 112, 113, 114, 115, 116, 117, 463,
	466, 464, 467, 468, 469, 474, 475, 470, 471, 472,
	473, 476, 493, 494, 495, 496, 497, 498, 603, 604,
	605, 606, 607, 608, 609, 610, 90, 90, 87, -142,
	89, 89, -253, -367, -59, 89, -254, -252, 96, 89,
	278, -211, -411, 90, -347, -347, -347, 96, 96, -299,
	-412, 88, -291, -401, -369, 514, 514, -412, 26, -375,
	-374, -293, 87, 78, 63, 509, 512, -412, -412, 88,
	-412, -412, -412, 89, 89, -412, -412, -412, 88, -412,
	-175, -177, -412, 77, -156, -227, 20, -95, 300, 302,
	-95, -412, 88, -412, -412, 88, -412, 88, -412, -412,
	-255, -412, -291, 245, 20, 20, -255, -255, -195, -226,
	-105, -104, -103, 540, -142, -207, -240, 55, 77, 122,
	90, 90, 90, 13, -210, 221, -232, -252, -173, 378,
	-227, -412, -252, 89, 26, 89, 661, 137, 89, -211,
	-122, -411, 274, -299, 90, 90, -112, -115, -11, 88,
	151, -252, -188, 63, -142, -207, -412, 77, 521, 620,
	-90, -89, -86, 631, 657, -207, -92, -92, -142, -142,
	-142, 88, -412, -412, -412, -105, 88, -102, -101, -291,
	77, 122, -264, -291, 89, -412, -411, -232, 89, -236,
	-11, 87, -3, 274, -323, -372, -324, -325, -5, -6,
	-348, -80, 510, -374, -352, -293, 90, 96, 89, 510,
	-412, -412, -88, 145, 629, 599, -143, -154, -151, 220,
	-412, 88, -412, 88, -412, 88, -291, 245, -103, 88,
	26, -300, -174, -172, -291, 563, -392, -391, 506, -402,
	-398, 119, 143, 101, -400, 601, 557, 128, 129, -80,
	-142, 87, -412, -81, 289, 616, -383, 511, -88, 630,
	577, 552, 577, 552, -142, -142, -142, -101, -411, -412,
	88, 23, -315, -61, 574, -389, -390, 77, -393, 384,
	573, 594, 119, 90, 89, -252, 250, -376, 512, 142,
	-412, 88, -412, 88, -412, -91, -172, 570, -328, -156,
	-390, 77, -389, 77, 14, 13, -4, 660, 89, 291,
	-88, -142, -142, -412, -60, 27, -173, -388, 258, 253,
	256, 33, -388, 96, -4, -412, -412, 574, 252, 32,
	119, -156, -176, -175, -175,
}

var yyDef = [...]int{
	868, -2, -2, 870, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 70,
	72, 73, 868, 868, 868, 0, 868, 0, 0, 868,
	-2, -2, 868, 1476, 0, 868, 0, 0, -2, 782,
	788, 0, 797, -2, 0, 0, 868, 868, 2028, 2028,
	863, 0, 0, 0, 0, 0, 868, 868, 868, 868,
	1342, 50, 868, 0, 85, 86, 818, 819, 820, 65,
	0, 2026, 869, 1, 3, 71, 75, 0, 0, 0,
	58, 1351, 0, 78, 0, 0, 872, 0, 0, 1459,
	868, 868, 0, 126, 127, 0, 0, 0, -2, 130,
	-2, 159, 160, 161, 0, 166, 595, 518, 570, 516,
	555, -2, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 394, 394, 0, 0,
	-2, 504, 504, 504, 1461, 0, 0, 0, 552, 456,
	394, 394, 394, 0, 394, 394, 394, 394, 0, 0,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 1369, 165, 1477,
	1474, 1475, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 0,
	1453, 0, 708, 971, 0, 771, 771, 0, 771, 771,
	771, 771, 0, 0, 0, 720, 0, 0, 0, 0,
	768, 0, 736, 737, 0, 768, 0, 743, 774, 0,
	0, 749, 771, 771, 752, 2029, 0, 2029, 2029, 1444,
	0, 765, 763, 777, 778, 40, 781, 784, 785, 786,
	787, 790, 0, 801, 804, 1470, 1471, 0, 806, 813,
	831, 832, 0, 864, 865, 45, 1119, 0, 993, 998,
	1009, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 0,
	0, 0, 0, 1037, 1038, 0, 0, 0, 0, 0,
	1100, 1046, 0, 0, 0, 0, 1315, 0, 0, 1276,
	1276, 1134, 1276, 1278, 1278, 1678, 1815, 1823, 1942, 1640,
	1645, 1646, 1647, 1935, 1936, 1937, 1938, 1976, 1977, 1981,
	1739, 0, 0, 0, 2025, 1776, 1784, 1785, 1809, 1907,
	1962, 1657, 1804, 1872, 1736, 1758, 1759, 1889, 1890, 1780,
	1781, 1762, 1774, 1777, 1765, 1766, 1768, 1770, 1775, 1782,
	1788, 1767, 1787, 1786, 0, 1763, 1764, 1769, 1779, 1783,
	1771, 1772, 1773, 1778, 1789, 0, 0, 0, 0, 0,
	1215, 1216, 1217, 1218, 0, 0, 0, 0, 0, 0,
	0, 290, 291, 1328, 1329, 43, 44, 1118, 1440, 1278,
	1278, 1278, 1278, 1278, 1060, 1061, 1062, 1063, 1064, 1088,
	1089, 1095, 1096, 1884, 1885, 1886, 1887, 1720, 1971, 1728,
	1729, 1867, 1868, 1741, 1742, 2000, 2001, -2, -2, -2,
	231, 232, 233, 234, 235, 236, 237, 238, 0, 1682,
	1953, 1954, 227, 0, 0, 295, 296, 292, 293, 294,
	1102, 1103, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 273, 274, 275,
	276, 277, 278, 279, 280, 281, 282, 283, 284, 285,
	286, 287, 288, 289, 2028, 0, 841, 0, 0, 0,
	0, 0, 1351, 0, 1343, 1342, 63, 0, 868, -2,
	0, 0, 0, 0, 47, 0, 52, 928, 871, 77,
	76, 1391, 0, 0, 0, 59, 1352, 67, 69, 1353,
	0, 873, 874, 0, 904, 908, 0, 0, 0, 1460,
	1459, 1459, 102, 0, 0, 103, 123, 124, 125, 0,
	0, 109, 110, 1446, 1447, 0, 0, 177, 178, 0,
	41, 421, 0, 173, 0, 414, 355, 0, 1369, 0,
	0, 0, 0, 0, 868, 0, 1454, 154, 155, 162,
	163, 164, 394, 394, 394, 567, 0, 0, 165, 165,
	525, 526, 527, 0, 0, -2, 419, 0, 505, 0,
	0, 408, 408, 412, 410, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 544, 0, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 656, 0, 395, 0,
	565, 566, 457, 0, 0, 0, 0, 0, 0, 0,
	0, 1462, 1463, 0, 542, 543, 0, 0, 0, 394,
	394, 0, 0, 0, 0, 394, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 1382, 0, 0, 0,
	-2, 0, 700, 0, 0, 0, 1455, 1455, 0, 707,
	0, 709, 710, 0, 0, 711, 0, 768, 768, 766,
	767, 713, 714, 715, 716, 771, 0, 0, 403, 404,
	405, 768, 771, 0, 771, 771, 771, 771, 768, 768,
	768, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 774, 771, 0, 744, 0, 745, 746, 747,
	750, 751, 753, 2030, 2031, 1472, 1473, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 2029, 2029, 757, 761,
	1445, 783, 789, 791, 792, 0, 0, 802, 805, 825,
	49, 1727, 812, 49, 0, 843, 844, 849, 0, 0,
	0, 0, 855, 856, 857, 0, 0, 860, 861, 862,
	0, 0, 0, 0, 0, 991, 0, 0, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1010, 1011, 0, 0, 0, 1033, 1034, 1035,
	1036, 1039, 0, 1051, 0, 1053, 1324, -2, 0, 0,
	0, 1044, 1045, 0, 0, 0, 0, 0, 0, 0,
	1316, 0, 0, 1132, 0, 1133, 1135, 1136, 0, 1137,
	878, 878, 878, 878, 878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1465, 141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 888, 0, 0, 888, 888,
	0, 0, 220, 221, 222, 223, 224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 240, 241, 242, 243, 244, 297, 245, 246,
	247, 1118, 0, 0, 0, 46, 833, 834, 0, 954,
	1465, 0, 0, 884, 0, 57, 66, 68, 1351, 61,
	1351, 0, 890, 0, 0, -2, -2, 891, 897, 898,
	899, 900, 901, 54, 2027, 55, 0, 74, 0, 48,
	0, 0, 0, 0, 367, 1394, 0, 0, 1344, 1345,
	1348, 0, 905, 1821, 909, 0, 911, 912, 0, 0,
	100, 0, 970, 0, 0, 0, 111, 0, 113, 114,
	0, 0, 0, 378, 1448, 1449, 1450, -2, 401, 0,
	378, 362, 305, 306, 307, 355, 309, 355, 355, 355,
	355, 367, 367, 367, 367, 338, 339, 340, 341, 342,
	0, 0, 324, 355, 355, 355, 355, 345, 346, 347,
	348, 349, 350, 351, 352, 310, 311, 312, 313, 314,
	315, 316, 317, 318, 357, 357, 357, 359, 359, 0,
	42, 0, 382, 0, 1348, 0, 0, 1382, 1457, 1467,
	0, 0, 0, 1457, 132, 0, 0, 0, 568, 606,
	519, 556, 569, 0, 522, 523, -2, 0, 0, 504,
	0, 506, 0, 402, 0, -2, 0, 412, 0, 408,
	412, 409, 412, 400, 413, 546, 547, 548, 0, 550,
	551, 636, 940, 0, 0, 0, 0, 0, 642, 643,
	644, 0, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 557, 558, 559, 560, 561, 562, 563, 564,
	0, 0, 0, 0, 506, 0, 553, 0, 0, 458,
	459, 460, 0, 0, 463, 464, 465, 466, 0, 0,
	469, 470, 471, 957, 958, 472, 473, 498, 499, 500,
	474, 475, 476, 477, 478, 479, 480, 492, 493, 494,
	495, 496, 497, 481, 482, 483, 484, 485, 486, 489,
	0, 147, 1373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1455, 0,
	0, 0, 0, 887, 972, 1478, 1479, 772, 773, 0,
	406, 407, 771, 771, 717, 758, 0, 771, 721, 759,
	722, 724, 723, 725, 738, 739, 771, 728, 769, 770,
	729, 730, 731, 732, 733, 734, 735, 754, 740, 741,
	742, 775, 0, 779, 780, 755, 756, 0, 0, 795,
	796, 0, 803, 828, 826, 827, 829, 821, 822, 823,
	824, 0, 830, 0, 0, 0, 846, 96, 851, 852,
	853, 854, 866, 859, 1120, 988, 989, 990, 0, 992,
	995, 0, 1104, 1106, 997, 999, 1115, 1116, 1117, 0,
	0, 0, 0, 0, 1003, 1007, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1292,
	1293, 1294, 1048, 298, 299, 0, 1049, 0, 0, 0,
	0, 0, 0, 0, 1119, 1050, 0, 902, 0, 0,
	1322, 1319, 0, 0, 0, 1277, 1279, 0, 0, 0,
	0, 879, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1295, 0, 0, 0, 0, 0, 1315, 0,
	1055, 1056, 1057, 0, 0, 0, 0, 0, 0, 1175,
	0, 0, 0, 0, 1466, 0, 142, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 1220, 1221, 1222, 39, 0,
	0, 0, 889, 1326, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 0, 1438, 0, 0,
	836, 837, 839, 0, 974, 0, 955, 0, 0, 842,
	0, 883, 0, 886, 60, 62, 895, 896, 0, 913,
	892, 56, 51, 0, 0, 932, 1392, 367, 1414, 0,
	376, 376, 373, 1354, 1355, 0, 1347, 1349, 1350, 79,
	910, 906, 0, 986, 0, 0, 969, 0, 916, 918,
	919, 920, 952, 0, 923, 924, 0, 0, 0, 0,
	0, 98, 971, 104, 0, 112, 0, 0, 117, 118,
	105, 106, 107, 108, 0, 595, -2, 453, 179, 181,
	182, 183, 174, -2, 365, 363, 364, 308, 367, 367,
	332, 333, 334, 335, 336, 337, 0, 0, 325, 326,
	327, 328, 319, 0, 320, 321, 322, 0, 323, 420,
	0, 1356, 383, 384, 386, 394, 0, 389, 390, 0,
	394, 394, 0, 415, 416, 0, 1348, 1373, 0, 0,
	0, 1468, 1467, 1467, 1467, 0, 167, 168, 169, 170,
	171, 172, 631, 0, 0, 607, 629, 630, 165, 0,
	0, 175, 508, 507, 0, 663, 0, 418, 0, 0,
	412, 412, 397, 398, 549, 0, 0, 638, 639, 640,
	641, 0, 0, 0, 535, 447, 0, 536, 537, 506,
	508, 0, 0, 378, 461, 462, 467, 468, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	582, 583, 584, 587, 589, 510, 593, 586, 588, 590,
	510, 594, 1370, 1371, 1372, 0, 0, 701, 0, 0,
	444, 94, 1456, 706, 768, 727, 760, 768, 719, 726,
	748, 793, 794, 799, 807, 808, 809, 810, 811, 814,
	815, 816, 817, 850, 0, 0, 0, 0, 858, 0,
	0, 996, 1105, 1107, 1000, 0, 1004, 1008, 0, 0,
	0, 1054, 1052, 1326, 0, 0, 0, 1101, 0, 0,
	1123, 1124, 0, 0, 0, 1320, 0, 0, 1130, 0,
	1280, 1281, 1138, 0, 0, 0, 0, 0, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1342, 0,
	0, 0, 0, 0, 1159, 1160, 1161, 1162, 1163, 0,
	1165, 0, 1166, 0, 0, 0, 0, 1173, 1174, 1176,
	0, 0, 1179, 1180, 0, 0, 1181, 0, 0, 0,
	1185, 0, 0, 0, 0, 1194, 1195, 1196, 1197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1208,
	1209, 0, 1083, 0, 0, 1083, 0, 1121, 888, 0,
	1282, 1283, 1284, 1285, 1286, 0, 0, 0, 0, 0,
	0, 1242, 1243, 1245, 0, 0, 1248, 0, 1250, 0,
	1439, 835, 838, 840, 926, 975, 976, 0, 0, 0,
	0, 956, 1464, 881, 882, 885, 934, 0, 1330, 0,
	0, 913, 986, 914, 0, 893, 53, 929, 0, 1396,
	1395, 1408, 1421, 376, 376, 370, 371, 377, 372, 374,
	375, 1346, 0, 1351, 0, 1432, 0, 0, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	962, 0, 0, 0, 0, 953, 924, 0, 925, 0,
	-2, 0, 0, 92, 93, 0, 0, 0, 115, 116,
	0, 0, 122, 379, 380, 156, 165, 455, 180, 428,
	0, 0, 304, 366, 329, 330, 331, 0, 353, 0,
	0, 0, 449, 128, 1360, 1359, 394, 394, 385, 0,
	388, 0, 0, 0, 1469, 356, 417, 0, 146, 0,
	0, 0, 0, 0, 152, 601, 0, 0, 608, 0,
	0, 0, 517, 0, 528, 529, 0, 635, -2, 697,
	382, 0, 396, 399, 941, 0, 0, 530, 0, 533,
	534, 448, 508, 539, 540, 554, 541, 490, 491, 488,
	0, 0, 1383, 1384, 1389, 1387, 1388, 133, 575, 577,
	576, 580, 0, 0, 0, 512, 0, 512, 573, 0,
	444, 1356, 0, 705, 445, 446, 771, 771, 845, 97,
	0, 848, 0, 0, 0, 0, 1001, 1005, 1287, 1313,
	355, 355, 1300, 355, 359, 1303, 355, 1305, 355, 1308,
	355, 1311, 1312, 0, 0, 0, 903, 0, 0, 1129,
	1323, 0, 0, 1139, 1140, 1141, 1142, 1143, 1317, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 145, 0, 0, 0, 0, 0,
	0, 1253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1078, 1082, 0, 1084, 1085, 0, 0, 1211,
	0, 0, 1223, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 977, 982, 982, 982, 0,
	0, 0, 1451, 1452, 1331, 1332, 986, 1333, 915, 894,
	933, 1414, 0, 1407, 0, -2, 1416, 0, 0, 0,
	1422, 368, 369, 907, 80, 987, 83, 0, 1432, 1441,
	0, 1423, 1434, 1436, 0, 0, 0, 1428, 0, 986,
	917, 948, 950, 0, 945, 960, 961, 963, 0, 965,
	0, 967, 968, 928, 922, 0, 100, 0, 986, 986,
	99, 0, 973, 119, 120, 121, 454, 184, 189, 0,
	0, 0, 194, 0, 196, 0, 0, 0, 201, 202,
	394, 394, 429, 0, 301, 303, 0, 0, 187, 367,
	0, 367, 0, 360, 0, 430, 450, 1357, 1358, 0,
	0, 387, 391, 392, 393, 0, 1458, 148, 0, 0,
	0, 604, 0, 632, 0, 0, 0, 0, 0, 0,
	176, 509, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 0, 394, 0, 0, 0, 394, 394, 394, 0,
	689, 381, 0, 0, 660, 657, 531, 0, 225, 226,
	228, 0, 0, 0, 0, 0, 538, 928, 1374, 1375,
	1376, 0, 1386, 1390, 136, 0, 0, 0, 0, 585,
	591, 0, 511, 592, 702, 703, 704, 95, 712, 718,
	847, 867, 994, 1002, 1006, 0, 0, 0, 0, 1314,
	1298, 367, 1301, 1302, 1304, 1306, 1307, 1309, 1310, 1042,
	1043, 1047, 0, 1126, 0, 1128, 1321, 0, 1351, 0,
	0, 0, 1157, 0, 0, 0, 1168, 1167, 1169, 0,
	1171, 1172, 1177, 1178, 1182, 0, 1184, 1186, 1187, 0,
	0, 0, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 0, 1076, 1079, 1210, 1086, 1087, 1092, 1213,
	0, 0, 1122, 1225, 0, 1230, 0, 0, 1236, 0,
	1240, 0, 1246, 1247, 1249, 1251, 0, 0, 0, 0,
	0, 954, 935, 64, 1333, 1335, 0, 1401, 1399, 1399,
	1409, 1410, 0, 0, 1417, 0, 0, 0, 0, 84,
	0, 0, 0, 1437, 0, 0, 0, 0, 101, 1342,
	942, 949, 0, 0, 943, 0, 944, 964, 966, 921,
	0, 986, 986, 90, 91, 0, 190, 0, 192, 218,
	219, 0, 195, 197, 198, 199, 205, 206, 207, 200,
	0, 0, 300, 302, 0, 0, 343, 354, 344, 0,
	0, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 928,
	149, 150, 151, 596, 0, 606, 0, 930, 0, 599,
	0, 520, 0, 0, 0, 394, 394, 394, 0, 0,
	0, 0, 674, 0, 0, 637, 0, 645, 0, 0,
	0, 229, 230, 0, 1385, 574, 0, 134, 135, 0,
	0, 579, 513, 514, 1040, 0, 0, 0, 1041, 1299,
	0, 0, 0, 0, 1318, 0, 0, 0, 0, 1164,
	0, 0, 0, 1190, 0, 0, 0, 626, 627, 0,
	1254, 1081, 1342, 0, 1083, 1093, 1094, 0, 1083, 1224,
	0, 0, 0, 0, 0, 0, 0, 983, 0, 0,
	0, 0, 974, 1335, 1340, 0, 0, 1404, 0, 1397,
	1400, 1398, 1411, 0, 0, 1418, 0, 1420, 0, 1442,
	1443, 1435, 0, 1427, 1430, 1426, 1429, 1351, 946, 0,
	951, 0, 1342, 89, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 204, 0, 0,
	358, 361, 0, 0, 0, 597, 0, 931, 609, 600,
	0, 687, 0, 691, 0, 0, 0, 694, 695, 696,
	673, 0, 677, 422, 661, 658, 659, 532, 0, 137,
	138, 0, 0, 0, 1288, 0, 1291, 1125, 1127, 0,
	1154, 1155, 1156, 1296, 1297, 1170, 1183, 1188, 0, 1191,
	0, 0, 1192, 0, 628, 1072, 0, 0, 1090, 1091,
	0, 1226, 0, 1231, 1232, 0, 1237, 0, 1241, 1252,
	0, 979, 936, 937, 984, 985, 0, 0, 927, 1340,
	82, 1341, 1338, 0, 1336, 1334, 1393, 0, 1402, 1403,
	1412, 1413, 1419, 0, 1425, 0, 87, 0, 0, 0,
	1351, 191, 0, 210, 0, 605, 0, 608, 598, 685,
	686, 0, 698, 690, 692, 693, 675, -2, 1377, 0,
	0, 0, 581, 1289, 0, 0, 1193, 0, 624, 625,
	1080, 1073, 0, 1058, 1059, 1077, 1212, 1214, 0, 0,
	0, 0, 978, 980, 981, 81, 0, 1337, 1098, 0,
	1405, 1406, 1433, 1431, 947, 954, 0, 88, 435, 428,
	1377, 0, 0, 0, 678, 679, 680, 681, 682, 683,
	684, 571, 1379, 139, 140, 501, 502, 503, 133, 0,
	1131, 1189, 1074, 0, 0, 0, 0, 1070, 1071, 0,
	1227, 0, 1233, 0, 1238, 0, 938, 939, 1339, 0,
	0, 610, 0, 612, 0, -2, 423, 436, 0, 185,
	211, 212, 0, 0, 215, 216, 217, 208, 209, 129,
	0, 0, 699, 0, 1380, 1381, 136, 0, 0, 1065,
	1066, 1067, 1068, 1069, 0, 0, 0, 1099, 1078, 611,
	0, 0, 378, 0, 621, 424, 425, 0, 431, 432,
	433, 434, 213, 214, 633, 0, 0, 578, 1290, 0,
	1228, 0, 1234, 0, 1239, 0, 613, 614, 622, 0,
	426, 0, 427, 0, 0, 0, 602, 0, 633, 1378,
	1075, 0, 0, 1097, 0, 623, 619, 437, 439, 440,
	0, 0, 438, 634, 603, 1229, 1235, 0, 441, 442,
	443, 615, 616, 617, 618,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 662,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:602
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:620
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:657
		{
			setParseTree(yylex, nil)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:663
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:674
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:678
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:688
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:706
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:710
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:715
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:725
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:729
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:735
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:813
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:845
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:864
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:881
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:888
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:906
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:936
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:940
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:974
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:978
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:984
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:994
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1007
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1019
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1023
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1029
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1033
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1041
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1047
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1051
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1055
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1065
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1071
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1075
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1081
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1089
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1113
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1117
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1121
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1127
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1133
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1149
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1164
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1169
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1184
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1189
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1195
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1211
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1215
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1221
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1237
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1244
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1251
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1256
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1261
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1266
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1273
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1280
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1291
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1302
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1308
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1312
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1316
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1334
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1338
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1344
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1348
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1358
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1368
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1374
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1378
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1384
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1394
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1399
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1408
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1432
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1441
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1489
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1527
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1533
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1549
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1563
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1581
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1587
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1593
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1598
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1661
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1700
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1704
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1708
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1712
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1716
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1720
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1733
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Armscii8Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = ASCIIStr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = Big5Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = UBinaryStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Cp1250Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Cp1251Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Cp1256Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Cp1257Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Cp850Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Cp852Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Cp866Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Cp932Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Dec8Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = EucjpmsStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = EuckrStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = Gb18030Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = Gb2312Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.str = GbkStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1811
		{
			yyVAL.str = Geostd8Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.str = GreekStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = HebrewStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = Hp8Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = Keybcs2Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = Koi8rStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = Koi8uStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = Latin1Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = Latin2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = Latin5Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.str = Latin7Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.str = MacceStr
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = MacromanStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = SjisStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = Swe7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = Tis620Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1875
		{
			yyVAL.str = Ucs2Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.str = UjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = Utf16Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = Utf16leStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = Utf32Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = Utf8Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = Utf8mb4Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = Utf8Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1913
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1917
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1921
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1927
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1931
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1941
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1945
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1952
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1956
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1960
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1964
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2192
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2201
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2206
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2210
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2218
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2228
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2236
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2249
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2253
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2258
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2289
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2300
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2309
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2317
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2323
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2332
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2338
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2348
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2352
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2357
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2361
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2365
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2369
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2373
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2377
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2383
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2387
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2393
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2397
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2401
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2405
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2409
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2414
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = yyDollar[2].str
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.str = "key"
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2451
		{
			yyVAL.str = yyDollar[1].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = ""
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2476
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2486
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2490
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2496
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2500
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2506
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2510
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2516
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2522
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2526
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2530
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2534
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2538
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2547
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2553
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2559
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2565
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2569
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2573
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2578
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2582
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2588
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2594
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2600
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2604
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2608
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2612
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2616
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2621
		{
			yyVAL.str = ""
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2635
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2648
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2657
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2663
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2667
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2677
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2695
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2699
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2719
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2723
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2727
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2803
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2807
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = ""
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2820
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2858
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2862
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2867
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2871
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2889
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2893
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2902
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2906
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2910
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2914
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 520:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2918
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2924
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2932
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3066
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3070
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3108
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3112
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3298
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3333
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3342
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3350
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3359
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3366
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3378
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3387
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3402
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3407
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3411
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3416
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3420
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3426
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3432
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3438
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3448
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3452
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3458
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3464
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3470
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3476
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3482
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3486
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3490
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3494
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3500
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3506
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3512
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3516
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3520
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3526
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3530
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3535
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3539
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3544
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3548
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3554
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3558
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3562
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3566
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3570
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3574
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3578
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3582
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3586
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3590
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3594
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3598
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3602
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3606
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3610
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3614
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3618
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3647
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3651
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3657
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3672
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3676
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3681
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3686
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3691
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3696
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3701
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3707
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3713
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3718
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3724
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3730
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3740
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3745
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3749
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3754
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3759
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3764
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3769
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3775
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3781
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3788
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3795
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3802
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3810
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3814
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3820
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3826
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3832
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3838
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3844
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3850
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3862
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3872
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3884
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3888
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4146
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.str = "extended "
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4156
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4160
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4184
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4190
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4194
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4198
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4208
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4214
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.empty = struct{}{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4238
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4242
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4272
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4276
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4285
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4291
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4295
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4301
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4305
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4309
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4322
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4326
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4331
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4336
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4342
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4348
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4353
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4357
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4361
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4365
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4369
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4373
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4377
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4382
		{
			yyLOCAL = QueriesVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4386
		{
			yyLOCAL = JSONVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4390
		{
			yyLOCAL = TableVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4394
		{
			yyLOCAL = QueriesVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL VtExplainType
//line sql.y:4398
		{
			yyLOCAL = ExhaustiveVtExplainType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.str = yyDollar[1].str
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4412
		{
			yyVAL.str = yyDollar[1].str
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4418
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4422
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4430
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4449
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4453
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4459
		{
			yyLOCAL = &VtExplainStmt{Type: yyDollar[3].vtexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4475
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4481
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4485
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4491
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4497
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4501
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4505
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4509
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4527
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4539
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4543
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4547
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4563
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4567
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4595
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4612
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4616
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4620
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = ""
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4634
		{
			setAllowComments(yylex, true)
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4638
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4644
		{
			yyVAL.strs = nil
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4654
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4658
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4662
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.str = SQLCacheStr
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4680
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4684
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4688
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4694
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4698
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4708
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4717
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4723
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4727
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4732
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4736
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4741
		{
			yyVAL.strs = nil
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4745
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4757
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4767
		{
			yyVAL.str = SQLCacheStr
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.str = DistinctStr
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.str = DistinctStr
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4779
		{
			yyVAL.str = StraightJoinHint
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4793
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4803
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4807
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4811
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4815
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4820
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4828
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4840
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4844
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4850
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4856
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4870
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4874
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4878
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4882
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4888
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4892
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4898
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4902
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4911
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4920
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4926
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4936
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4940
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4946
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4950
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4958
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4964
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4968
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4981
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4985
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4989
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4993
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4999
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5001
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5005
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5007
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5011
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5013
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5016
		{
			yyVAL.empty = struct{}{}
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5018
		{
			yyVAL.empty = struct{}{}
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5021
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5025
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5029
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5042
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5046
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5050
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5056
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5062
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5066
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5070
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5074
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5080
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5084
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5094
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5108
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5114
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5123
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5129
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5133
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5139
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5143
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5147
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5151
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5156
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5160
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5164
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5168
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5219
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5279
		{
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5282
		{
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5430
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5438
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5446
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5458
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5462
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5468
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5472
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5478
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5482
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5486
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5492
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5496
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5503
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5507
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5511
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5515
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5519
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5525
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5529
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5533
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5537
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5541
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5560
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5566
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5570
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5579
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5584
		{
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5587
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5593
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5599
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5603
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5615
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5621
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5625
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5631
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5635
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5641
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5645
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5650
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5657
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5663
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5667
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5673
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5679
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5683
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5689
		{
			yyVAL.str = ""
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5693
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5699
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5703
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5710
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5714
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5718
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5722
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5728
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5732
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5736
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5740
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5744
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5748
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5752
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5758
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5762
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5766
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5773
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5779
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5783
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5797
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5811
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5815
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5819
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5823
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5839
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6203
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6219
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6223
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6227
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6231
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6235
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6345
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6351
		{
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6353
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6357
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6361
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6365
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6369
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6373
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6377
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6381
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6385
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6389
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6393
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6399
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6403
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6407
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6411
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6415
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6419
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6423
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6427
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6431
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6486
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6490
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6494
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6498
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6502
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6508
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6512
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6516
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6526
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6530
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6536
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6540
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6544
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6548
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6552
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6558
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6562
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6566
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6570
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6574
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6578
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6594
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6600
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6604
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6618
		{
			yyVAL.str = string("")
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6622
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6628
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6632
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6638
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6653
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6657
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6661
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6665
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6671
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6681
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6700
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6704
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6713
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6719
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6725
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6729
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6738
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6747
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6753
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6759
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6763
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6769
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6774
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6778
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6782
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6791
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6797
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6801
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6805
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6814
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6818
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6822
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6826
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6833
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6837
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6841
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6845
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6851
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6855
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6859
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6863
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6868
		{
			yyVAL.str = ""
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6872
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6876
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6880
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6885
		{
			yyVAL.str = ""
		}
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6889
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6895
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6899
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6904
		{
			yyVAL.str = ""
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6908
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6913
		{
			yyVAL.str = "cascaded"
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6917
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6921
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6930
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6936
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6942
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6948
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6957
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6961
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6966
		{
			yyVAL.str = ""
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6970
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6976
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6980
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6986
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6990
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6994
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6999
		{
			yyVAL.str = ""
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7003
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7007
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7012
		{
			yyVAL.str = ""
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7016
		{
			yyVAL.str = " header"
		}
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7021
		{
			yyVAL.str = ""
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7025
		{
			yyVAL.str = " manifest on"
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7029
		{
			yyVAL.str = " manifest off"
		}
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7034
		{
			yyVAL.str = ""
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7038
		{
			yyVAL.str = " overwrite on"
		}
	case 1406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7042
		{
			yyVAL.str = " overwrite off"
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7048
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7053
		{
			yyVAL.str = ""
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7057
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7063
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7067
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7073
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7077
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7082
		{
			yyVAL.str = ""
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7086
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7092
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7096
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7102
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7106
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7110
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7115
		{
			yyVAL.str = ""
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7119
		{
			yyVAL.str = " optionally"
		}
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7132
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7136
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7140
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7144
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7148
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7154
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7158
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7162
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7166
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7175
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7181
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7185
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7191
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7195
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7201
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7205
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7220
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7224
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7230
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7237
		{
			yyVAL.str = "charset"
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7247
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7251
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7255
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7264
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7266
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7276
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7281
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7284
		{
			yyVAL.empty = struct{}{}
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7286
		{
			yyVAL.empty = struct{}{}
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7288
		{
			yyVAL.empty = struct{}{}
		}
	case 1464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7292
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7301
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7308
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7312
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7318
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7322
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7329
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7335
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7339
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7345
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7349
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7356
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7929
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7938
		{
			decNesting(yylex)
		}
	case 2028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7943
		{
			skipToEnd(yylex)
		}
	case 2029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7948
		{
			skipToEnd(yylex)
		}
	case 2030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7952
		{
			skipToEnd(yylex)
		}
	case 2031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7956
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
