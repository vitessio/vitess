// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const LEX_ERROR = 57351
const UNION = 57352
const SELECT = 57353
const STREAM = 57354
const VSTREAM = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const ORDER = 57363
const BY = 57364
const LIMIT = 57365
const OFFSET = 57366
const FOR = 57367
const DISTINCT = 57368
const AS = 57369
const EXISTS = 57370
const ASC = 57371
const DESC = 57372
const INTO = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const DO = 57380
const CALL = 57381
const ALL = 57382
const ANY = 57383
const SOME = 57384
const DISTINCTROW = 57385
const PARSER = 57386
const GENERATED = 57387
const ALWAYS = 57388
const OUTFILE = 57389
const S3 = 57390
const DATA = 57391
const LOAD = 57392
const LINES = 57393
const TERMINATED = 57394
const ESCAPED = 57395
const ENCLOSED = 57396
const DUMPFILE = 57397
const CSV = 57398
const HEADER = 57399
const MANIFEST = 57400
const OVERWRITE = 57401
const STARTING = 57402
const OPTIONALLY = 57403
const VALUES = 57404
const LAST_INSERT_ID = 57405
const NEXT = 57406
const VALUE = 57407
const SHARE = 57408
const MODE = 57409
const SQL_NO_CACHE = 57410
const SQL_CACHE = 57411
const SQL_CALC_FOUND_ROWS = 57412
const JOIN = 57413
const STRAIGHT_JOIN = 57414
const LEFT = 57415
const RIGHT = 57416
const INNER = 57417
const OUTER = 57418
const CROSS = 57419
const NATURAL = 57420
const USE = 57421
const FORCE = 57422
const ON = 57423
const USING = 57424
const INPLACE = 57425
const COPY = 57426
const INSTANT = 57427
const ALGORITHM = 57428
const NONE = 57429
const SHARED = 57430
const EXCLUSIVE = 57431
const SUBQUERY_AS_EXPR = 57432
const STRING = 57433
const ID = 57434
const AT_ID = 57435
const AT_AT_ID = 57436
const HEX = 57437
const NCHAR_STRING = 57438
const INTEGRAL = 57439
const FLOAT = 57440
const DECIMAL = 57441
const HEXNUM = 57442
const COMMENT = 57443
const COMMENT_KEYWORD = 57444
const BITNUM = 57445
const BIT_LITERAL = 57446
const COMPRESSION = 57447
const VALUE_ARG = 57448
const LIST_ARG = 57449
const OFFSET_ARG = 57450
const JSON_PRETTY = 57451
const JSON_STORAGE_SIZE = 57452
const JSON_STORAGE_FREE = 57453
const JSON_CONTAINS = 57454
const JSON_CONTAINS_PATH = 57455
const JSON_EXTRACT = 57456
const JSON_KEYS = 57457
const JSON_OVERLAPS = 57458
const JSON_SEARCH = 57459
const JSON_VALUE = 57460
const JSON_ARRAYAGG = 57461
const JSON_OBJECTAGG = 57462
const EXTRACT = 57463
const NULL = 57464
const UNKNOWN = 57465
const TRUE = 57466
const FALSE = 57467
const OFF = 57468
const DISCARD = 57469
const IMPORT = 57470
const ENABLE = 57471
const DISABLE = 57472
const TABLESPACE = 57473
const VIRTUAL = 57474
const STORED = 57475
const BOTH = 57476
const LEADING = 57477
const TRAILING = 57478
const KILL = 57479
const EMPTY_FROM_CLAUSE = 57480
const LOWER_THAN_CHARSET = 57481
const CHARSET = 57482
const UNIQUE = 57483
const KEY = 57484
const EXPRESSION_PREC_SETTER = 57485
const OR = 57486
const XOR = 57487
const AND = 57488
const NOT = 57489
const BETWEEN = 57490
const CASE = 57491
const WHEN = 57492
const THEN = 57493
const ELSE = 57494
const END = 57495
const LE = 57496
const GE = 57497
const NE = 57498
const NULL_SAFE_EQUAL = 57499
const IS = 57500
const LIKE = 57501
const REGEXP = 57502
const RLIKE = 57503
const IN = 57504
const ASSIGNMENT_OPT = 57505
const SHIFT_LEFT = 57506
const SHIFT_RIGHT = 57507
const DIV = 57508
const MOD = 57509
const UNARY = 57510
const COLLATE = 57511
const BINARY = 57512
const UNDERSCORE_ARMSCII8 = 57513
const UNDERSCORE_ASCII = 57514
const UNDERSCORE_BIG5 = 57515
const UNDERSCORE_BINARY = 57516
const UNDERSCORE_CP1250 = 57517
const UNDERSCORE_CP1251 = 57518
const UNDERSCORE_CP1256 = 57519
const UNDERSCORE_CP1257 = 57520
const UNDERSCORE_CP850 = 57521
const UNDERSCORE_CP852 = 57522
const UNDERSCORE_CP866 = 57523
const UNDERSCORE_CP932 = 57524
const UNDERSCORE_DEC8 = 57525
const UNDERSCORE_EUCJPMS = 57526
const UNDERSCORE_EUCKR = 57527
const UNDERSCORE_GB18030 = 57528
const UNDERSCORE_GB2312 = 57529
const UNDERSCORE_GBK = 57530
const UNDERSCORE_GEOSTD8 = 57531
const UNDERSCORE_GREEK = 57532
const UNDERSCORE_HEBREW = 57533
const UNDERSCORE_HP8 = 57534
const UNDERSCORE_KEYBCS2 = 57535
const UNDERSCORE_KOI8R = 57536
const UNDERSCORE_KOI8U = 57537
const UNDERSCORE_LATIN1 = 57538
const UNDERSCORE_LATIN2 = 57539
const UNDERSCORE_LATIN5 = 57540
const UNDERSCORE_LATIN7 = 57541
const UNDERSCORE_MACCE = 57542
const UNDERSCORE_MACROMAN = 57543
const UNDERSCORE_SJIS = 57544
const UNDERSCORE_SWE7 = 57545
const UNDERSCORE_TIS620 = 57546
const UNDERSCORE_UCS2 = 57547
const UNDERSCORE_UJIS = 57548
const UNDERSCORE_UTF16 = 57549
const UNDERSCORE_UTF16LE = 57550
const UNDERSCORE_UTF32 = 57551
const UNDERSCORE_UTF8 = 57552
const UNDERSCORE_UTF8MB4 = 57553
const UNDERSCORE_UTF8MB3 = 57554
const INTERVAL = 57555
const WINDOW_EXPR = 57556
const JSON_EXTRACT_OP = 57557
const JSON_UNQUOTE_EXTRACT_OP = 57558
const CREATE = 57559
const ALTER = 57560
const DROP = 57561
const RENAME = 57562
const ANALYZE = 57563
const ADD = 57564
const FLUSH = 57565
const CHANGE = 57566
const MODIFY = 57567
const DEALLOCATE = 57568
const REVERT = 57569
const QUERIES = 57570
const SCHEMA = 57571
const TABLE = 57572
const INDEX = 57573
const VIEW = 57574
const TO = 57575
const IGNORE = 57576
const IF = 57577
const PRIMARY = 57578
const COLUMN = 57579
const SPATIAL = 57580
const FULLTEXT = 57581
const KEY_BLOCK_SIZE = 57582
const CHECK = 57583
const INDEXES = 57584
const ACTION = 57585
const CASCADE = 57586
const CONSTRAINT = 57587
const FOREIGN = 57588
const NO = 57589
const REFERENCES = 57590
const RESTRICT = 57591
const SHOW = 57592
const DESCRIBE = 57593
const EXPLAIN = 57594
const DATE = 57595
const ESCAPE = 57596
const REPAIR = 57597
const OPTIMIZE = 57598
const TRUNCATE = 57599
const COALESCE = 57600
const EXCHANGE = 57601
const REBUILD = 57602
const PARTITIONING = 57603
const REMOVE = 57604
const PREPARE = 57605
const EXECUTE = 57606
const MAXVALUE = 57607
const PARTITION = 57608
const REORGANIZE = 57609
const LESS = 57610
const THAN = 57611
const PROCEDURE = 57612
const TRIGGER = 57613
const VINDEX = 57614
const VINDEXES = 57615
const DIRECTORY = 57616
const NAME = 57617
const UPGRADE = 57618
const STATUS = 57619
const VARIABLES = 57620
const WARNINGS = 57621
const CASCADED = 57622
const DEFINER = 57623
const OPTION = 57624
const SQL = 57625
const UNDEFINED = 57626
const SEQUENCE = 57627
const MERGE = 57628
const TEMPORARY = 57629
const TEMPTABLE = 57630
const INVOKER = 57631
const SECURITY = 57632
const FIRST = 57633
const AFTER = 57634
const LAST = 57635
const VITESS_MIGRATION = 57636
const CANCEL = 57637
const RETRY = 57638
const LAUNCH = 57639
const COMPLETE = 57640
const CLEANUP = 57641
const THROTTLE = 57642
const UNTHROTTLE = 57643
const FORCE_CUTOVER = 57644
const EXPIRE = 57645
const RATIO = 57646
const VITESS_THROTTLER = 57647
const BEGIN = 57648
const START = 57649
const TRANSACTION = 57650
const COMMIT = 57651
const ROLLBACK = 57652
const SAVEPOINT = 57653
const RELEASE = 57654
const WORK = 57655
const CONSISTENT = 57656
const SNAPSHOT = 57657
const BIT = 57658
const TINYINT = 57659
const SMALLINT = 57660
const MEDIUMINT = 57661
const INT = 57662
const INTEGER = 57663
const BIGINT = 57664
const INTNUM = 57665
const REAL = 57666
const DOUBLE = 57667
const FLOAT_TYPE = 57668
const FLOAT4_TYPE = 57669
const FLOAT8_TYPE = 57670
const DECIMAL_TYPE = 57671
const NUMERIC = 57672
const TIME = 57673
const TIMESTAMP = 57674
const DATETIME = 57675
const YEAR = 57676
const CHAR = 57677
const VARCHAR = 57678
const BOOL = 57679
const CHARACTER = 57680
const VARBINARY = 57681
const NCHAR = 57682
const TEXT = 57683
const TINYTEXT = 57684
const MEDIUMTEXT = 57685
const LONGTEXT = 57686
const BLOB = 57687
const TINYBLOB = 57688
const MEDIUMBLOB = 57689
const LONGBLOB = 57690
const JSON = 57691
const JSON_SCHEMA_VALID = 57692
const JSON_SCHEMA_VALIDATION_REPORT = 57693
const ENUM = 57694
const GEOMETRY = 57695
const POINT = 57696
const LINESTRING = 57697
const POLYGON = 57698
const GEOMCOLLECTION = 57699
const GEOMETRYCOLLECTION = 57700
const MULTIPOINT = 57701
const MULTILINESTRING = 57702
const MULTIPOLYGON = 57703
const ASCII = 57704
const UNICODE = 57705
const NULLX = 57706
const AUTO_INCREMENT = 57707
const APPROXNUM = 57708
const SIGNED = 57709
const UNSIGNED = 57710
const ZEROFILL = 57711
const PURGE = 57712
const BEFORE = 57713
const CODE = 57714
const COLLATION = 57715
const COLUMNS = 57716
const DATABASES = 57717
const ENGINES = 57718
const EVENT = 57719
const EXTENDED = 57720
const FIELDS = 57721
const FULL = 57722
const FUNCTION = 57723
const GTID_EXECUTED = 57724
const KEYSPACES = 57725
const OPEN = 57726
const PLUGINS = 57727
const PRIVILEGES = 57728
const PROCESSLIST = 57729
const SCHEMAS = 57730
const TABLES = 57731
const TRIGGERS = 57732
const USER = 57733
const VGTID_EXECUTED = 57734
const VITESS_KEYSPACES = 57735
const VITESS_METADATA = 57736
const VITESS_MIGRATIONS = 57737
const VITESS_REPLICATION_STATUS = 57738
const VITESS_SHARDS = 57739
const VITESS_TABLETS = 57740
const VITESS_TARGET = 57741
const VSCHEMA = 57742
const VITESS_THROTTLED_APPS = 57743
const NAMES = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const ADDDATE = 57756
const CURRENT_TIMESTAMP = 57757
const DATABASE = 57758
const CURRENT_DATE = 57759
const CURDATE = 57760
const DATE_ADD = 57761
const DATE_SUB = 57762
const NOW = 57763
const SUBDATE = 57764
const CURTIME = 57765
const CURRENT_TIME = 57766
const LOCALTIME = 57767
const LOCALTIMESTAMP = 57768
const CURRENT_USER = 57769
const UTC_DATE = 57770
const UTC_TIME = 57771
const UTC_TIMESTAMP = 57772
const SYSDATE = 57773
const DAY = 57774
const DAY_HOUR = 57775
const DAY_MICROSECOND = 57776
const DAY_MINUTE = 57777
const DAY_SECOND = 57778
const HOUR = 57779
const HOUR_MICROSECOND = 57780
const HOUR_MINUTE = 57781
const HOUR_SECOND = 57782
const MICROSECOND = 57783
const MINUTE = 57784
const MINUTE_MICROSECOND = 57785
const MINUTE_SECOND = 57786
const MONTH = 57787
const QUARTER = 57788
const SECOND = 57789
const SECOND_MICROSECOND = 57790
const YEAR_MONTH = 57791
const WEEK = 57792
const SQL_TSI_DAY = 57793
const SQL_TSI_WEEK = 57794
const SQL_TSI_HOUR = 57795
const SQL_TSI_MINUTE = 57796
const SQL_TSI_MONTH = 57797
const SQL_TSI_QUARTER = 57798
const SQL_TSI_SECOND = 57799
const SQL_TSI_MICROSECOND = 57800
const SQL_TSI_YEAR = 57801
const REPLACE = 57802
const CONVERT = 57803
const CAST = 57804
const SUBSTR = 57805
const SUBSTRING = 57806
const MID = 57807
const SEPARATOR = 57808
const TIMESTAMPADD = 57809
const TIMESTAMPDIFF = 57810
const WEIGHT_STRING = 57811
const LTRIM = 57812
const RTRIM = 57813
const TRIM = 57814
const JSON_ARRAY = 57815
const JSON_OBJECT = 57816
const JSON_QUOTE = 57817
const JSON_DEPTH = 57818
const JSON_TYPE = 57819
const JSON_LENGTH = 57820
const JSON_VALID = 57821
const JSON_ARRAY_APPEND = 57822
const JSON_ARRAY_INSERT = 57823
const JSON_INSERT = 57824
const JSON_MERGE = 57825
const JSON_MERGE_PATCH = 57826
const JSON_MERGE_PRESERVE = 57827
const JSON_REMOVE = 57828
const JSON_REPLACE = 57829
const JSON_SET = 57830
const JSON_UNQUOTE = 57831
const COUNT = 57832
const AVG = 57833
const MAX = 57834
const MIN = 57835
const SUM = 57836
const GROUP_CONCAT = 57837
const BIT_AND = 57838
const BIT_OR = 57839
const BIT_XOR = 57840
const STD = 57841
const STDDEV = 57842
const STDDEV_POP = 57843
const STDDEV_SAMP = 57844
const VAR_POP = 57845
const VAR_SAMP = 57846
const VARIANCE = 57847
const ANY_VALUE = 57848
const REGEXP_INSTR = 57849
const REGEXP_LIKE = 57850
const REGEXP_REPLACE = 57851
const REGEXP_SUBSTR = 57852
const ExtractValue = 57853
const UpdateXML = 57854
const GET_LOCK = 57855
const RELEASE_LOCK = 57856
const RELEASE_ALL_LOCKS = 57857
const IS_FREE_LOCK = 57858
const IS_USED_LOCK = 57859
const LOCATE = 57860
const POSITION = 57861
const ST_GeometryCollectionFromText = 57862
const ST_GeometryFromText = 57863
const ST_LineStringFromText = 57864
const ST_MultiLineStringFromText = 57865
const ST_MultiPointFromText = 57866
const ST_MultiPolygonFromText = 57867
const ST_PointFromText = 57868
const ST_PolygonFromText = 57869
const ST_GeometryCollectionFromWKB = 57870
const ST_GeometryFromWKB = 57871
const ST_LineStringFromWKB = 57872
const ST_MultiLineStringFromWKB = 57873
const ST_MultiPointFromWKB = 57874
const ST_MultiPolygonFromWKB = 57875
const ST_PointFromWKB = 57876
const ST_PolygonFromWKB = 57877
const ST_AsBinary = 57878
const ST_AsText = 57879
const ST_Dimension = 57880
const ST_Envelope = 57881
const ST_IsSimple = 57882
const ST_IsEmpty = 57883
const ST_GeometryType = 57884
const ST_X = 57885
const ST_Y = 57886
const ST_Latitude = 57887
const ST_Longitude = 57888
const ST_EndPoint = 57889
const ST_IsClosed = 57890
const ST_Length = 57891
const ST_NumPoints = 57892
const ST_StartPoint = 57893
const ST_PointN = 57894
const ST_Area = 57895
const ST_Centroid = 57896
const ST_ExteriorRing = 57897
const ST_InteriorRingN = 57898
const ST_NumInteriorRings = 57899
const ST_NumGeometries = 57900
const ST_GeometryN = 57901
const ST_LongFromGeoHash = 57902
const ST_PointFromGeoHash = 57903
const ST_LatFromGeoHash = 57904
const ST_GeoHash = 57905
const ST_AsGeoJSON = 57906
const ST_GeomFromGeoJSON = 57907
const MATCH = 57908
const AGAINST = 57909
const BOOLEAN = 57910
const LANGUAGE = 57911
const WITH = 57912
const QUERY = 57913
const EXPANSION = 57914
const WITHOUT = 57915
const VALIDATION = 57916
const ROLLUP = 57917
const UNUSED = 57918
const ARRAY = 57919
const BYTE = 57920
const CUME_DIST = 57921
const DESCRIPTION = 57922
const DENSE_RANK = 57923
const EMPTY = 57924
const EXCEPT = 57925
const FIRST_VALUE = 57926
const GROUPING = 57927
const GROUPS = 57928
const JSON_TABLE = 57929
const LAG = 57930
const LAST_VALUE = 57931
const LATERAL = 57932
const LEAD = 57933
const NTH_VALUE = 57934
const NTILE = 57935
const OF = 57936
const OVER = 57937
const PERCENT_RANK = 57938
const RANK = 57939
const RECURSIVE = 57940
const ROW_NUMBER = 57941
const SYSTEM = 57942
const WINDOW = 57943
const ACTIVE = 57944
const ADMIN = 57945
const AUTOEXTEND_SIZE = 57946
const BUCKETS = 57947
const CLONE = 57948
const COLUMN_FORMAT = 57949
const COMPONENT = 57950
const DEFINITION = 57951
const ENFORCED = 57952
const ENGINE_ATTRIBUTE = 57953
const EXCLUDE = 57954
const FOLLOWING = 57955
const GET_MASTER_PUBLIC_KEY = 57956
const HISTOGRAM = 57957
const HISTORY = 57958
const INACTIVE = 57959
const INVISIBLE = 57960
const LOCKED = 57961
const MASTER_COMPRESSION_ALGORITHMS = 57962
const MASTER_PUBLIC_KEY_PATH = 57963
const MASTER_TLS_CIPHERSUITES = 57964
const MASTER_ZSTD_COMPRESSION_LEVEL = 57965
const NESTED = 57966
const NETWORK_NAMESPACE = 57967
const NOWAIT = 57968
const NULLS = 57969
const OJ = 57970
const OLD = 57971
const OPTIONAL = 57972
const ORDINALITY = 57973
const ORGANIZATION = 57974
const OTHERS = 57975
const PARTIAL = 57976
const PATH = 57977
const PERSIST = 57978
const PERSIST_ONLY = 57979
const PRECEDING = 57980
const PRIVILEGE_CHECKS_USER = 57981
const PROCESS = 57982
const RANDOM = 57983
const REFERENCE = 57984
const REQUIRE_ROW_FORMAT = 57985
const RESOURCE = 57986
const RESPECT = 57987
const RESTART = 57988
const RETAIN = 57989
const REUSE = 57990
const ROLE = 57991
const SECONDARY = 57992
const SECONDARY_ENGINE = 57993
const SECONDARY_ENGINE_ATTRIBUTE = 57994
const SECONDARY_LOAD = 57995
const SECONDARY_UNLOAD = 57996
const SIMPLE = 57997
const SKIP = 57998
const SRID = 57999
const THREAD_PRIORITY = 58000
const TIES = 58001
const UNBOUNDED = 58002
const VCPU = 58003
const VISIBLE = 58004
const RETURNING = 58005
const FORMAT_BYTES = 58006
const FORMAT_PICO_TIME = 58007
const PS_CURRENT_THREAD_ID = 58008
const PS_THREAD_ID = 58009
const GTID_SUBSET = 58010
const GTID_SUBTRACT = 58011
const WAIT_FOR_EXECUTED_GTID_SET = 58012
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58013
const FORMAT = 58014
const TREE = 58015
const VITESS = 58016
const TRADITIONAL = 58017
const VTEXPLAIN = 58018
const VEXPLAIN = 58019
const PLAN = 58020
const LOCAL = 58021
const LOW_PRIORITY = 58022
const NO_WRITE_TO_BINLOG = 58023
const LOGS = 58024
const ERROR = 58025
const GENERAL = 58026
const HOSTS = 58027
const OPTIMIZER_COSTS = 58028
const USER_RESOURCES = 58029
const SLOW = 58030
const CHANNEL = 58031
const RELAY = 58032
const EXPORT = 58033
const CURRENT = 58034
const ROW = 58035
const ROWS = 58036
const AVG_ROW_LENGTH = 58037
const CONNECTION = 58038
const CHECKSUM = 58039
const DELAY_KEY_WRITE = 58040
const ENCRYPTION = 58041
const ENGINE = 58042
const INSERT_METHOD = 58043
const MAX_ROWS = 58044
const MIN_ROWS = 58045
const PACK_KEYS = 58046
const PASSWORD = 58047
const FIXED = 58048
const DYNAMIC = 58049
const COMPRESSED = 58050
const REDUNDANT = 58051
const COMPACT = 58052
const ROW_FORMAT = 58053
const STATS_AUTO_RECALC = 58054
const STATS_PERSISTENT = 58055
const STATS_SAMPLE_PAGES = 58056
const STORAGE = 58057
const MEMORY = 58058
const DISK = 58059
const PARTITIONS = 58060
const LINEAR = 58061
const RANGE = 58062
const LIST = 58063
const SUBPARTITION = 58064
const SUBPARTITIONS = 58065
const HASH = 58066

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	15, 49,
	16, 49,
	-2, 40,
	-1, 52,
	1, 157,
	742, 157,
	-2, 165,
	-1, 53,
	143, 165,
	185, 165,
	355, 165,
	-2, 523,
	-1, 61,
	37, 777,
	248, 777,
	259, 777,
	294, 791,
	295, 791,
	-2, 779,
	-1, 66,
	250, 815,
	-2, 813,
	-1, 122,
	247, 1608,
	-2, 131,
	-1, 124,
	1, 158,
	742, 158,
	-2, 165,
	-1, 135,
	144, 408,
	253, 408,
	-2, 512,
	-1, 154,
	143, 165,
	185, 165,
	355, 165,
	-2, 532,
	-1, 741,
	171, 41,
	-2, 43,
	-1, 950,
	91, 1625,
	-2, 1469,
	-1, 951,
	91, 1626,
	230, 1630,
	-2, 1470,
	-1, 952,
	230, 1629,
	-2, 42,
	-1, 1036,
	64, 887,
	-2, 900,
	-1, 1124,
	258, 1096,
	263, 1096,
	-2, 419,
	-1, 1209,
	1, 580,
	742, 580,
	-2, 165,
	-1, 1513,
	230, 1630,
	-2, 1470,
	-1, 1726,
	64, 888,
	-2, 904,
	-1, 1727,
	64, 889,
	-2, 905,
	-1, 1783,
	143, 165,
	185, 165,
	355, 165,
	-2, 458,
	-1, 1864,
	144, 408,
	253, 408,
	-2, 512,
	-1, 1873,
	258, 1097,
	263, 1097,
	-2, 420,
	-1, 2318,
	230, 1634,
	-2, 1628,
	-1, 2319,
	230, 1630,
	-2, 1626,
	-1, 2422,
	143, 165,
	185, 165,
	355, 165,
	-2, 459,
	-1, 2429,
	27, 186,
	-2, 188,
	-1, 2888,
	82, 96,
	92, 96,
	-2, 963,
	-1, 2957,
	717, 700,
	-2, 674,
	-1, 3181,
	54, 1573,
	-2, 1567,
	-1, 4019,
	717, 700,
	-2, 688,
	-1, 4111,
	94, 632,
	99, 632,
	109, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	224, 632,
	225, 632,
	226, 632,
	227, 632,
	228, 632,
	-2, 2002,
}

const yyPrivate = 57344

const yyLast = 56576

var yyAct = [...]int{
	966, 3669, 4109, 87, 4186, 3670, 4199, 3671, 4090, 4153,
	1277, 961, 4154, 953, 4000, 3333, 2111, 4078, 2419, 3233,
	3240, 2347, 3905, 3469, 3982, 2123, 3282, 3194, 3291, 1275,
	3296, 3980, 3047, 1786, 3293, 3292, 3290, 3295, 3294, 1993,
	3619, 3606, 4051, 3311, 2349, 3132, 2049, 3248, 2493, 5,
	3310, 745, 3198, 3195, 3515, 3509, 3712, 3021, 954, 3046,
	3182, 739, 2848, 740, 2374, 2922, 915, 773, 914, 2456,
	3313, 3003, 2923, 2390, 1742, 919, 3340, 2954, 42, 2481,
	2461, 3499, 2924, 2524, 2393, 163, 1034, 2407, 87, 1054,
	1842, 2873, 1086, 2394, 1061, 43, 1031, 2840, 2824, 2107,
	2271, 3537, 41, 2995, 1132, 2502, 2480, 1034, 2854, 2303,
	2270, 2395, 149, 2463, 2541, 2915, 2145, 3192, 2057, 1871,
	2382, 1114, 1096, 1119, 1775, 2890, 2397, 1755, 100, 1707,
	1889, 1526, 104, 2151, 1156, 2082, 2071, 1451, 1989, 105,
	1436, 1093, 1878, 1970, 1125, 3197, 1090, 755, 1094, 2478,
	2452, 1120, 2861, 1774, 750, 2453, 1071, 1121, 1073, 1760,
	2375, 1033, 1729, 1037, 1043, 99, 3707, 2159, 2178, 2822,
	1053, 107, 1485, 1040, 2048, 1265, 85, 2001, 3470, 1863,
	132, 133, 1056, 1039, 1066, 3526, 1509, 84, 3699, 1122,
	1038, 1205, 732, 106, 1041, 742, 1029, 749, 1530, 98,
	4187, 93, 167, 3607, 127, 916, 1273, 1065, 1251, 125,
	126, 2495, 2496, 2497, 2495, 3279, 4035, 1535, 2977, 2976,
	2539, 2945, 677, 3599, 4136, 1028, 3011, 743, 1046, 3562,
	3012, 1452, 4031, 134, 2344, 2345, 2064, 2063, 2062, 2061,
	1161, 1136, 4036, 1087, 2060, 2059, 2032, 4030, 3674, 1221,
	674, 2820, 675, 2589, 3178, 128, 4157, 1746, 4130, 4209,
	1468, 1744, 3136, 1169, 4152, 733, 1047, 4177, 3473, 4192,
	4140, 1080, 3472, 1032, 1447, 3983, 2850, 1081, 1030, 2371,
	2370, 2526, 3301, 2970, 1098, 95, 1158, 1747, 2146, 1111,
	95, 1745, 2785, 1955, 4191, 4139, 1103, 2528, 2069, 1175,
	1176, 1177, 3359, 1180, 1181, 1182, 1183, 2, 1055, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1135, 128, 1178, 1110,
	3301, 2368, 4009, 717, 1109, 1108, 2947, 4105, 3299, 1462,
	3673, 2527, 1222, 3298, 4138, 1162, 1165, 1166, 4031, 920,
	1027, 3901, 111, 112, 113, 3900, 116, 711, 717, 122,
	3674, 3612, 191, 735, 3613, 669, 1160, 3305, 1159, 4137,
	4167, 3911, 95, 4134, 3631, 1438, 3620, 730, 731, 190,
	4079, 711, 86, 969, 970, 971, 3299, 1022, 1023, 1024,
	1025, 2967, 95, 86, 1036, 128, 4087, 2116, 2521, 1112,
	86, 3910, 129, 1465, 4114, 1466, 1467, 1709, 1079, 1083,
	918, 2085, 3385, 1852, 2821, 3305, 2864, 1776, 172, 1777,
	1736, 3229, 1068, 1069, 708, 3010, 2899, 2593, 1102, 2898,
	2413, 1104, 2900, 3726, 3230, 3231, 4091, 969, 970, 971,
	2414, 2415, 2041, 2042, 2865, 2994, 1241, 1020, 1458, 1270,
	2596, 1450, 3673, 1019, 3630, 2948, 711, 1107, 1229, 1214,
	1215, 2904, 95, 1230, 4001, 2911, 671, 86, 1486, 1242,
	88, 711, 693, 95, 169, 1235, 4014, 170, 1997, 1448,
	95, 3302, 1464, 711, 3367, 691, 1021, 2187, 1204, 1452,
	3356, 1217, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495,
	1494, 1496, 1497, 189, 2432, 2431, 711, 2346, 1229, 3337,
	4158, 3365, 4095, 1230, 2472, 1105, 1258, 2594, 1260, 1246,
	1247, 1228, 4119, 1227, 3068, 688, 2378, 2587, 1092, 3302,
	1107, 4159, 1099, 2040, 703, 725, 3335, 2466, 1437, 1101,
	1100, 2044, 4117, 3022, 2857, 2858, 729, 95, 1179, 698,
	3341, 723, 4123, 4124, 1711, 2996, 1257, 1259, 2955, 1269,
	701, 3250, 3251, 2503, 1243, 1268, 4095, 2542, 4118, 712,
	1236, 2980, 3328, 3953, 1945, 3954, 4189, 2590, 1971, 2591,
	3329, 2984, 2985, 1244, 1245, 2179, 1262, 2565, 1105, 2566,
	2181, 2567, 2548, 712, 2186, 2182, 1267, 1462, 2183, 2184,
	2185, 1250, 3338, 2180, 2188, 2189, 2190, 2191, 2192, 2193,
	2194, 2195, 2196, 3601, 1210, 2998, 1998, 173, 1946, 3885,
	1947, 3600, 2568, 1185, 1248, 1184, 179, 3024, 678, 3336,
	680, 694, 2546, 714, 1249, 713, 684, 2544, 682, 686,
	695, 687, 2506, 681, 1106, 692, 1714, 2549, 683, 696,
	697, 700, 704, 705, 706, 702, 699, 4131, 690, 715,
	1115, 3512, 3678, 1255, 1116, 1856, 2391, 1256, 712, 1116,
	3249, 1154, 1155, 3135, 2545, 1153, 1152, 1261, 1151, 1150,
	1149, 1148, 3252, 712, 1147, 1142, 3252, 2547, 1772, 2465,
	3069, 1079, 1083, 918, 4210, 712, 1091, 4164, 3034, 3033,
	3032, 1128, 1254, 3026, 1091, 3030, 1458, 3025, 1274, 3023,
	1274, 1274, 1091, 1127, 3028, 1990, 1089, 1106, 712, 2376,
	2377, 2479, 1067, 3027, 2555, 2551, 2553, 2554, 2552, 2556,
	2557, 2558, 1082, 1076, 1074, 2999, 2532, 1850, 2531, 711,
	1986, 3029, 3031, 1439, 1457, 1454, 1455, 1456, 1461, 1463,
	1460, 164, 1459, 1172, 3272, 2949, 2979, 2525, 1034, 1510,
	1515, 1516, 1453, 1519, 1521, 1522, 1523, 1524, 1525, 1849,
	1528, 1529, 1531, 1531, 1848, 1531, 1531, 1536, 1536, 1536,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 967, 1507, 1263, 3357, 1663, 967,
	1665, 1666, 1667, 1668, 1669, 3672, 1430, 1431, 1773, 3560,
	3561, 1072, 1536, 1536, 1536, 1536, 1536, 1536, 4008, 1446,
	1113, 2982, 2946, 89, 716, 2913, 3457, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 712, 3303, 3304, 1213, 709, 1226, 3597, 94, 1520,
	4093, 3629, 1429, 3513, 1511, 3307, 1216, 1500, 1704, 94,
	710, 1532, 1134, 1533, 1534, 1145, 94, 4054, 1500, 1503,
	1504, 1505, 1506, 1957, 1956, 1958, 1959, 1960, 1239, 1517,
	165, 1134, 4092, 2969, 1877, 1537, 1538, 177, 1143, 2594,
	3303, 3304, 1457, 1454, 1455, 1456, 1461, 1463, 1460, 1075,
	1459, 967, 2595, 3307, 4093, 1082, 1076, 1074, 1134, 2469,
	1453, 1225, 1710, 1231, 1232, 1233, 1234, 3672, 711, 2825,
	2827, 1034, 1735, 3002, 1164, 1034, 2965, 2968, 185, 4203,
	1127, 1034, 1701, 94, 1163, 1208, 4092, 1271, 1272, 1987,
	1846, 1220, 4122, 3015, 1134, 668, 2993, 3144, 2523, 2992,
	2470, 1501, 1502, 4132, 2611, 3996, 3551, 2468, 3533, 1702,
	1976, 2378, 3596, 2895, 2860, 1133, 1212, 2797, 1218, 2119,
	2143, 166, 171, 168, 174, 175, 176, 178, 180, 181,
	182, 183, 1764, 1664, 1133, 1219, 4121, 184, 186, 187,
	188, 2471, 2855, 1876, 3143, 3236, 1718, 124, 676, 2420,
	1722, 2467, 1500, 1497, 3228, 2622, 1033, 1480, 1050, 1266,
	4022, 1133, 1157, 1720, 1146, 1171, 1736, 104, 2160, 3592,
	1721, 1224, 3525, 1252, 105, 3163, 119, 1702, 1441, 1670,
	1671, 1672, 1673, 1674, 1675, 2161, 1708, 1144, 2543, 2002,
	2053, 1983, 1778, 3237, 3042, 2152, 2152, 1133, 2631, 1695,
	2938, 4168, 3161, 1127, 1130, 1131, 107, 1091, 3005, 1466,
	1467, 1124, 1128, 3004, 3721, 1467, 3567, 3239, 2135, 2124,
	2125, 2126, 2127, 2137, 2128, 2129, 2130, 2142, 2138, 2131,
	2132, 2139, 2140, 2141, 2133, 2134, 2136, 3234, 1134, 1238,
	1716, 2826, 3005, 1975, 1738, 1107, 1203, 3004, 2622, 1134,
	1240, 1705, 120, 3566, 2510, 1869, 3250, 3251, 1886, 1885,
	1875, 1134, 2520, 3235, 2518, 2515, 1030, 1145, 1032, 1719,
	1995, 1862, 1717, 1940, 2515, 1879, 1879, 1741, 1143, 4055,
	712, 1045, 4160, 1134, 3552, 4205, 1853, 1854, 1855, 3626,
	4211, 3627, 1881, 1769, 1770, 1703, 3988, 3241, 2308, 1922,
	2522, 3893, 1274, 3892, 2376, 2377, 4201, 2519, 1837, 4202,
	1207, 4200, 3883, 1891, 1880, 1892, 2517, 1894, 1896, 2158,
	1223, 1900, 1902, 1904, 1906, 1908, 1253, 4056, 1979, 1845,
	1977, 1978, 1075, 1980, 1981, 1982, 3643, 1859, 1860, 1858,
	1209, 1133, 2003, 1872, 3989, 1965, 3642, 1127, 1130, 1131,
	1468, 1091, 1133, 1930, 1931, 1124, 1128, 1137, 1127, 1936,
	1937, 3574, 1139, 3573, 1133, 3249, 1140, 1138, 1736, 1137,
	1127, 3563, 3280, 1926, 1139, 2157, 1123, 3252, 1140, 1138,
	3268, 1883, 4212, 1723, 1468, 2920, 1133, 1141, 1170, 969,
	970, 971, 1167, 2919, 1963, 1991, 1972, 1486, 1973, 3014,
	2918, 1974, 1492, 1493, 1495, 1494, 1496, 1497, 1918, 2475,
	1966, 1921, 1964, 1923, 1952, 1950, 1206, 1949, 1948, 2087,
	1938, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1494,
	1496, 1497, 1106, 2088, 1498, 1499, 2086, 1932, 4173, 1736,
	190, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1494, 1496,
	1497, 1851, 128, 1929, 1110, 2008, 1928, 1927, 1898, 1109,
	1108, 1962, 1715, 129, 2075, 2076, 2601, 2602, 3332, 1274,
	1274, 3557, 717, 717, 1468, 1433, 2004, 2005, 2030, 172,
	1772, 1951, 101, 87, 2902, 717, 87, 2668, 2491, 2490,
	2009, 1486, 102, 1465, 3238, 1466, 1467, 2016, 2017, 2018,
	1490, 1491, 1492, 1493, 1495, 1494, 1496, 1497, 2029, 2489,
	2488, 2487, 2486, 2672, 1768, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1495, 1494, 1496, 1497, 1749, 1465, 4161, 1466,
	1467, 2846, 4188, 1785, 4017, 169, 3044, 4016, 170, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1495, 1494, 1496, 1497,
	1736, 4148, 1736, 2114, 2114, 2112, 2112, 1486, 42, 2115,
	1482, 42, 1483, 1736, 189, 3992, 1468, 3991, 1486, 3990,
	2610, 1468, 1750, 2846, 1736, 2077, 1484, 1498, 1499, 1481,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1494,
	1496, 1497, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495,
	1494, 1496, 1497, 3888, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1495, 1494, 1496, 1497, 3872, 1924, 1465, 2006, 1466,
	1467, 2670, 1464, 1736, 2198, 2010, 3871, 2012, 2013, 2014,
	2015, 1464, 1736, 1736, 2019, 2846, 4086, 1701, 1474, 1475,
	1476, 1477, 1478, 1479, 1473, 1470, 2031, 2075, 2076, 2073,
	2074, 1969, 3720, 2308, 4171, 1736, 85, 2305, 3718, 85,
	2054, 2846, 4065, 4010, 1702, 3639, 2307, 1700, 1996, 2084,
	1699, 1468, 110, 2072, 1698, 2037, 2038, 3571, 173, 3556,
	2147, 3342, 965, 109, 2007, 108, 110, 179, 2846, 4061,
	1468, 2011, 3339, 103, 1468, 2089, 3271, 109, 3270, 108,
	3973, 1736, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 1465,
	2929, 1466, 1467, 2916, 1465, 2318, 1466, 1467, 1697, 2090,
	1468, 2092, 2093, 2094, 2095, 2096, 2097, 2099, 2101, 2102,
	2103, 2104, 2105, 2106, 2316, 2222, 3242, 2118, 1468, 1690,
	3246, 3610, 4007, 1468, 2317, 3896, 1736, 3245, 2162, 2163,
	2164, 2165, 2091, 2846, 3884, 1736, 1511, 2578, 2306, 4101,
	1736, 3920, 2176, 2304, 3374, 2577, 2197, 1468, 2537, 1736,
	3919, 1486, 2536, 1468, 2153, 3610, 1736, 3876, 4099, 1736,
	3875, 3247, 4097, 1736, 2846, 3608, 3243, 2515, 1736, 103,
	1468, 3244, 3531, 1736, 3618, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1495, 1494, 1496, 1497, 2214, 1468, 3966, 1736,
	2399, 2373, 164, 2352, 1465, 2318, 1466, 1467, 2752, 1736,
	2315, 3261, 3260, 2321, 2322, 2033, 3964, 1736, 3258, 3259,
	2956, 104, 1736, 1465, 2316, 1466, 1467, 1465, 105, 1466,
	1467, 3256, 3257, 101, 2388, 2429, 1999, 1468, 1961, 103,
	1703, 1736, 104, 102, 1953, 3961, 1736, 3256, 3255, 105,
	2363, 3943, 1736, 1465, 1468, 1466, 1467, 2351, 1468, 2870,
	1736, 2083, 2383, 2384, 1468, 2594, 2978, 2862, 3498, 1736,
	2843, 1465, 1096, 1466, 1467, 2401, 1465, 2658, 1466, 1467,
	1841, 2959, 2952, 2953, 103, 3491, 1736, 2212, 2058, 1468,
	2891, 1943, 2438, 2439, 2440, 2441, 1939, 1046, 2339, 2423,
	1465, 1736, 1466, 1467, 1935, 1096, 1465, 2424, 1466, 1467,
	2891, 1934, 2433, 1933, 2434, 2435, 2436, 2437, 1751, 2405,
	2357, 2364, 2358, 1465, 1264, 1466, 1467, 2846, 2845, 2934,
	2444, 2445, 2446, 2447, 2862, 2366, 2458, 2516, 2427, 1468,
	1465, 2870, 1466, 1467, 2504, 2841, 3488, 1736, 1468, 2428,
	2464, 2386, 3486, 1736, 3524, 2892, 1080, 2411, 2410, 1753,
	2409, 3528, 1081, 3193, 2143, 2894, 2426, 2295, 2296, 2297,
	2298, 2299, 2425, 1468, 3524, 2892, 3223, 3449, 1736, 1464,
	1465, 109, 1466, 1467, 2320, 2594, 2594, 2323, 2324, 2117,
	1736, 2501, 4049, 2474, 1841, 1840, 2618, 1465, 2515, 1466,
	1467, 1465, 1136, 1466, 1467, 1784, 1783, 1465, 3524, 1466,
	1467, 4021, 1879, 2846, 2459, 2455, 2448, 2450, 2451, 2477,
	2473, 2870, 3477, 2341, 1468, 2509, 3527, 1752, 2512, 3258,
	2513, 2485, 1465, 3166, 1466, 1467, 3447, 1736, 1468, 2412,
	2869, 165, 2752, 2655, 2529, 2654, 2508, 2507, 177, 2459,
	2511, 3575, 1464, 2515, 2498, 1468, 2533, 2381, 2530, 1740,
	2534, 2535, 2135, 2124, 2125, 2126, 2127, 2137, 2128, 2129,
	2130, 2142, 2138, 2131, 2132, 2139, 2140, 2141, 2133, 2134,
	2136, 2342, 1465, 1468, 1466, 1467, 2117, 1135, 1468, 185,
	2055, 1465, 1468, 1466, 1467, 2039, 2627, 1468, 2870, 1985,
	2599, 1737, 1739, 1468, 1771, 3576, 3577, 3578, 1468, 1034,
	1034, 1034, 3443, 1736, 1035, 1118, 1465, 2540, 1466, 1467,
	1117, 95, 4127, 4068, 3907, 3334, 3440, 1736, 1743, 1521,
	3873, 1521, 166, 171, 168, 174, 175, 176, 178, 180,
	181, 182, 183, 3438, 1736, 3733, 3591, 2614, 184, 186,
	187, 188, 3588, 3569, 3390, 3389, 2571, 1914, 1843, 2457,
	2318, 3330, 3285, 3281, 2960, 2454, 2620, 1465, 2449, 1466,
	1467, 2626, 1016, 1468, 2308, 3283, 2619, 1017, 2443, 2617,
	3915, 1465, 2442, 1466, 1467, 3436, 1736, 2113, 1968, 2317,
	4183, 3434, 1736, 1874, 95, 2385, 3432, 1736, 1465, 1870,
	1466, 1467, 1839, 2389, 121, 2392, 2926, 1208, 2058, 3908,
	2586, 1915, 1916, 1917, 2472, 2875, 2878, 2879, 2880, 2876,
	1468, 2877, 2881, 2592, 3538, 3539, 1465, 2355, 1466, 1467,
	4181, 1465, 4155, 1466, 1467, 1465, 4029, 1466, 1467, 2600,
	1465, 1468, 1466, 1467, 3948, 3541, 1465, 1468, 1466, 1467,
	3544, 1465, 2606, 1466, 1467, 3277, 2603, 2604, 2605, 2035,
	3579, 3430, 1736, 3276, 2084, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1910, 3428, 1736,
	3580, 3581, 3582, 2607, 2630, 2609, 1465, 2925, 1466, 1467,
	3275, 3193, 2939, 2036, 2612, 2572, 2613, 3215, 1468, 3426,
	1736, 673, 3216, 3213, 3543, 3424, 1736, 3212, 3214, 3217,
	1468, 2879, 2880, 3211, 1468, 4025, 2608, 2796, 1468, 3698,
	3909, 3697, 2372, 2615, 1748, 1468, 1048, 1911, 1912, 1913,
	2361, 1468, 3532, 1465, 2784, 1466, 1467, 1468, 2926, 2666,
	3171, 3170, 1468, 3987, 3183, 3185, 3711, 2580, 2581, 2828,
	3713, 1468, 2583, 3186, 1465, 3520, 1466, 1467, 1468, 3180,
	1465, 2584, 1466, 1467, 3517, 2114, 1051, 2112, 1034, 1984,
	2831, 3696, 3516, 1468, 1052, 734, 2058, 1049, 2875, 2878,
	2879, 2880, 2876, 2550, 2877, 2881, 3422, 1736, 3538, 3539,
	1018, 2867, 2868, 2569, 2570, 2829, 3254, 2574, 3420, 1736,
	2399, 1468, 3546, 1034, 2887, 2909, 3418, 1736, 2930, 2579,
	2160, 2564, 2563, 3416, 1736, 2832, 2582, 2834, 2562, 3414,
	1736, 2561, 1468, 2560, 1174, 3412, 1736, 2161, 2559, 1173,
	3410, 1736, 1468, 2080, 2078, 2079, 2083, 2866, 2847, 3396,
	1736, 1465, 2585, 1466, 1467, 3350, 3372, 1736, 2637, 2925,
	1468, 3008, 2966, 1465, 1432, 1466, 1467, 1465, 129, 1466,
	1467, 1465, 1736, 1466, 1467, 2652, 42, 1468, 1465, 1708,
	1466, 1467, 2819, 1468, 1465, 2884, 1466, 1467, 2886, 1060,
	1465, 1468, 1466, 1467, 2885, 1465, 2856, 1466, 1467, 2817,
	1736, 2839, 3522, 1059, 1465, 101, 1466, 1467, 1468, 2912,
	2914, 1465, 1702, 1466, 1467, 102, 1468, 103, 2905, 2859,
	2815, 1736, 4197, 1468, 110, 2844, 1465, 2964, 1466, 1467,
	2790, 1736, 4104, 2889, 101, 109, 1468, 108, 3273, 2575,
	103, 3500, 2893, 1468, 102, 103, 2598, 2896, 2767, 1736,
	1468, 4006, 2464, 2903, 1465, 3903, 1466, 1467, 2906, 2383,
	2384, 3253, 2975, 2883, 2367, 2759, 1736, 108, 3169, 2917,
	3972, 2750, 1736, 109, 2155, 1465, 3168, 1466, 1467, 2156,
	4162, 3971, 110, 1468, 3951, 1465, 2927, 1466, 1467, 3719,
	3717, 3716, 3709, 109, 1468, 108, 2748, 1736, 3589, 2940,
	2941, 2942, 2936, 1465, 3493, 1466, 1467, 2935, 3521, 3519,
	2928, 2735, 1736, 1468, 3286, 2931, 2932, 2218, 2972, 1468,
	1465, 1862, 1466, 1467, 2733, 1736, 1465, 2499, 1466, 1467,
	1857, 2731, 1736, 110, 1465, 1058, 1466, 1467, 2729, 1736,
	2961, 2962, 1468, 3510, 109, 2971, 1468, 3708, 3018, 3019,
	2862, 1465, 3682, 1466, 1467, 4185, 4184, 3, 2843, 1465,
	1468, 1466, 1467, 3072, 1468, 2656, 1465, 2353, 1466, 1467,
	1765, 2727, 1736, 1468, 1757, 4184, 2997, 4185, 1468, 1465,
	3993, 1466, 1467, 4005, 3016, 3555, 1465, 3035, 1466, 1467,
	1468, 114, 115, 1465, 97, 1466, 1467, 2301, 1, 1026,
	3000, 2725, 1736, 2052, 1435, 1468, 10, 2723, 1736, 1434,
	3559, 4116, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060,
	3061, 3062, 2050, 1468, 689, 9, 1465, 2333, 1466, 1467,
	3036, 3880, 3070, 2051, 2721, 1736, 8, 1465, 2343, 1466,
	1467, 1706, 4156, 4112, 4113, 1737, 2340, 2973, 2719, 1736,
	1954, 1944, 2717, 1736, 3621, 2269, 1465, 3904, 1466, 1467,
	3289, 3489, 1465, 2505, 1466, 1467, 2715, 1736, 1468, 3587,
	2462, 1126, 154, 2421, 2422, 4081, 118, 1084, 2713, 1736,
	3074, 2365, 1468, 1730, 117, 1465, 1129, 1466, 1467, 1465,
	1237, 1466, 1467, 2711, 1736, 2500, 3130, 1734, 3006, 3611,
	1731, 3007, 2910, 1465, 2430, 1466, 1467, 1465, 1790, 1466,
	1467, 2709, 1736, 1788, 1789, 1787, 1465, 1792, 1466, 1467,
	3020, 1465, 2888, 1466, 1467, 2359, 2360, 1733, 3037, 1732,
	3137, 1791, 4053, 1465, 3358, 1466, 1467, 3148, 2657, 3456,
	2043, 2951, 724, 2882, 718, 3139, 192, 1779, 1465, 3017,
	1466, 1467, 1758, 1168, 2399, 679, 2707, 1736, 3262, 3063,
	2306, 2538, 2306, 3110, 685, 2304, 1465, 2304, 1466, 1467,
	2705, 1736, 1518, 2034, 3167, 2897, 3200, 1078, 87, 1070,
	2354, 2399, 2399, 2399, 2399, 2399, 2833, 2476, 1077, 3120,
	3121, 3122, 3123, 3124, 3881, 3201, 2937, 3514, 3179, 3181,
	3148, 2399, 2849, 3184, 2399, 3177, 3986, 3205, 3138, 3710,
	3140, 1465, 4066, 1466, 1467, 2907, 1995, 1468, 1754, 3476,
	3222, 1468, 3038, 3147, 2629, 1465, 2150, 1466, 1467, 2401,
	1508, 2398, 3159, 1468, 3677, 2070, 747, 746, 3175, 744,
	3160, 3162, 3164, 2835, 1468, 2863, 3174, 3172, 1468, 1472,
	1471, 955, 1468, 1037, 2823, 1766, 2401, 2401, 2401, 2401,
	2401, 2874, 2986, 2987, 2988, 2989, 2990, 2991, 3306, 3165,
	3187, 3188, 2872, 1039, 3206, 2871, 2401, 3209, 3314, 2401,
	1038, 2573, 2406, 3218, 104, 3224, 3540, 3536, 3225, 2058,
	3001, 105, 3226, 3207, 3208, 1468, 3210, 4108, 2400, 2396,
	3232, 2842, 906, 3173, 1468, 2703, 1736, 3265, 1468, 3204,
	3593, 905, 3009, 756, 1468, 3263, 3264, 748, 738, 968,
	904, 2701, 1736, 1468, 903, 3316, 3317, 2981, 3331, 2983,
	2908, 3327, 2696, 1736, 1449, 1725, 2692, 1736, 1468, 1728,
	2690, 1736, 3190, 2362, 3318, 3315, 3319, 1097, 1468, 2464,
	3308, 3355, 4012, 2597, 3112, 3287, 3114, 3384, 1724, 3325,
	1465, 4019, 1466, 1467, 1465, 3297, 1466, 1467, 3605, 3278,
	3266, 3267, 3125, 3126, 3127, 3128, 1465, 3346, 1466, 1467,
	3196, 2957, 3345, 3455, 3343, 3196, 2492, 1465, 3353, 1466,
	1467, 1465, 3451, 1466, 1467, 1465, 3387, 1466, 1467, 69,
	1730, 46, 2683, 1736, 3981, 4050, 3363, 898, 895, 3679,
	3680, 2681, 1736, 3681, 1734, 3133, 3134, 1731, 3379, 3380,
	3381, 3382, 3383, 3360, 3361, 4032, 3362, 2921, 4033, 3364,
	894, 3366, 4034, 3368, 2207, 1445, 3386, 1442, 1465, 4129,
	1466, 1467, 1726, 1727, 1733, 2045, 1732, 1465, 96, 1466,
	1467, 1465, 1521, 1466, 1467, 36, 1521, 1465, 35, 1466,
	1467, 2616, 34, 33, 32, 2621, 1465, 26, 1466, 1467,
	25, 3288, 3501, 24, 3503, 3471, 23, 22, 29, 19,
	21, 1465, 3475, 1466, 1467, 20, 18, 3300, 2624, 4151,
	2625, 1465, 4196, 1466, 1467, 123, 2633, 55, 52, 50,
	2635, 2636, 131, 130, 53, 49, 1211, 47, 31, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 30,
	2653, 17, 16, 15, 14, 3199, 13, 12, 11, 7,
	6, 39, 38, 37, 2399, 28, 27, 40, 3506, 4,
	2944, 2494, 0, 2659, 2660, 2661, 2662, 3553, 2664, 2665,
	3511, 2667, 3518, 3354, 3502, 2669, 3504, 0, 0, 2674,
	2675, 0, 2676, 0, 1468, 2679, 2680, 2682, 2684, 2685,
	2686, 2687, 2688, 2689, 2691, 2693, 2694, 2695, 2697, 0,
	2699, 2700, 2702, 2704, 2706, 2708, 2710, 2712, 2714, 2716,
	2718, 2720, 2722, 2724, 2726, 2728, 2730, 2732, 2734, 2736,
	2737, 2738, 3309, 2740, 3545, 2742, 3547, 2744, 2745, 2401,
	2747, 2749, 2751, 3318, 3315, 3319, 2754, 3554, 3548, 736,
	2758, 3542, 3523, 0, 2763, 2764, 2765, 2766, 1468, 0,
	3570, 0, 3572, 1468, 0, 3508, 0, 2777, 2778, 2779,
	2780, 2781, 2782, 0, 0, 2786, 2787, 3478, 0, 3480,
	3481, 3482, 3378, 2789, 0, 1468, 0, 3274, 2795, 3348,
	3349, 0, 0, 2798, 2799, 2800, 2801, 2802, 3535, 0,
	0, 0, 0, 0, 2809, 2810, 1468, 2811, 0, 0,
	2814, 2816, 2365, 3312, 2818, 0, 0, 3549, 3550, 3615,
	3616, 3564, 3565, 0, 2830, 0, 0, 3326, 0, 1468,
	0, 0, 0, 1468, 0, 0, 0, 1465, 1468, 1466,
	1467, 3617, 0, 0, 1468, 0, 3376, 3344, 1468, 0,
	3347, 2813, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 1063, 1063, 0, 0, 0, 3633, 0, 0, 0,
	0, 0, 0, 2812, 3598, 0, 1468, 0, 3602, 3603,
	3604, 1468, 0, 0, 0, 0, 0, 0, 0, 1468,
	0, 3644, 0, 0, 2808, 0, 0, 1468, 0, 0,
	0, 1465, 0, 1466, 1467, 0, 1465, 0, 1466, 1467,
	0, 0, 0, 0, 0, 0, 0, 2807, 1468, 0,
	0, 2806, 0, 1468, 0, 0, 2805, 0, 1465, 1703,
	1466, 1467, 2804, 0, 0, 0, 2803, 1468, 0, 0,
	3695, 1468, 0, 3702, 3685, 3704, 3686, 3687, 3688, 1465,
	0, 1466, 1467, 0, 0, 3675, 1468, 0, 0, 0,
	1468, 0, 0, 0, 2794, 0, 0, 3705, 3200, 2793,
	0, 87, 1465, 3200, 1466, 1467, 1465, 2792, 1466, 1467,
	0, 1465, 0, 1466, 1467, 2791, 0, 1465, 0, 1466,
	1467, 1465, 0, 1466, 1467, 3638, 0, 0, 2114, 0,
	2112, 0, 0, 3735, 3706, 1468, 2788, 0, 0, 3715,
	3714, 2783, 0, 3725, 0, 3507, 1468, 3727, 3722, 1465,
	3724, 1466, 1467, 0, 1465, 2776, 1466, 1467, 0, 2775,
	0, 0, 1465, 0, 1466, 1467, 0, 0, 3887, 0,
	1465, 0, 1466, 1467, 2774, 0, 42, 3739, 2773, 0,
	0, 0, 0, 0, 0, 0, 0, 3594, 3595, 0,
	0, 1465, 0, 1466, 1467, 0, 1465, 0, 1466, 1467,
	0, 0, 0, 0, 0, 0, 0, 0, 3879, 3878,
	1465, 0, 1466, 1467, 1465, 0, 1466, 1467, 0, 3894,
	3906, 0, 0, 2772, 3899, 0, 3898, 0, 3877, 1465,
	3568, 1466, 1467, 1465, 2771, 1466, 1467, 0, 0, 0,
	3048, 3049, 3050, 3051, 3052, 3945, 0, 3946, 3729, 0,
	3583, 0, 0, 3584, 3585, 3586, 2114, 0, 2112, 0,
	3067, 3949, 3703, 0, 0, 0, 0, 0, 0, 0,
	3736, 3737, 0, 0, 0, 0, 0, 0, 1465, 0,
	1466, 1467, 0, 0, 0, 0, 0, 0, 0, 1465,
	0, 1466, 1467, 0, 0, 3952, 3994, 3200, 0, 3955,
	3196, 0, 3731, 0, 3889, 3890, 3891, 0, 0, 0,
	3666, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1659, 1660, 1661, 1662, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 3995, 3979, 3950, 3978, 0, 3199, 0, 1468,
	0, 0, 3199, 1468, 3969, 0, 4013, 1468, 0, 0,
	0, 3975, 1468, 3977, 0, 0, 1468, 0, 0, 0,
	3202, 0, 3998, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3997, 1468, 0, 3220, 0,
	0, 1468, 0, 3882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4002, 4015, 0, 0, 0, 4018, 0,
	0, 0, 0, 0, 0, 0, 1468, 3886, 0, 0,
	4020, 0, 1468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2770, 0, 0,
	0, 2769, 0, 0, 0, 2768, 0, 0, 0, 42,
	2762, 0, 0, 0, 2761, 4038, 0, 0, 4039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3985, 0,
	0, 0, 4063, 0, 2760, 0, 0, 87, 0, 2757,
	0, 4048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4057, 1465, 0, 1466, 1467, 1465, 0, 1466, 1467,
	1465, 0, 1466, 1467, 2756, 1465, 4069, 1466, 1467, 1465,
	2755, 1466, 1467, 0, 4080, 0, 3352, 1469, 4072, 0,
	4077, 3906, 4083, 4067, 4074, 4073, 4071, 4076, 4075, 1465,
	0, 1466, 1467, 0, 1465, 3999, 1466, 1467, 3369, 3370,
	0, 3371, 3373, 3375, 4102, 0, 3199, 0, 1527, 0,
	0, 0, 42, 0, 4107, 4125, 4115, 4120, 0, 1465,
	0, 1466, 1467, 4094, 0, 1465, 0, 1466, 1467, 3388,
	4135, 0, 4133, 0, 3391, 4146, 3393, 3394, 3395, 3397,
	3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407,
	3408, 3409, 3411, 3413, 3415, 3417, 3419, 3421, 3423, 3425,
	3427, 3429, 3431, 3433, 3435, 3437, 3439, 3441, 3442, 3444,
	3445, 3446, 3448, 1995, 4150, 3450, 4145, 3452, 3453, 3454,
	4094, 4176, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465,
	3466, 3467, 3468, 2114, 4182, 2112, 4180, 4169, 4179, 4178,
	4175, 3474, 4165, 4064, 4166, 3479, 1703, 4190, 1468, 3483,
	3484, 4059, 3485, 3487, 1468, 3490, 3492, 0, 3494, 3495,
	3496, 3497, 4204, 4206, 4198, 1468, 0, 0, 3505, 3196,
	0, 1468, 0, 0, 0, 4004, 1468, 0, 0, 0,
	1468, 0, 0, 0, 0, 4214, 1468, 0, 0, 4215,
	4216, 2114, 3946, 2112, 1468, 0, 4213, 4094, 0, 1468,
	0, 0, 4027, 3529, 3530, 4011, 0, 3534, 0, 4023,
	4037, 0, 0, 0, 1468, 0, 0, 0, 0, 1468,
	0, 0, 0, 0, 1468, 0, 0, 0, 0, 0,
	0, 0, 1468, 0, 0, 0, 2753, 0, 0, 1468,
	0, 0, 2746, 0, 0, 0, 4149, 0, 0, 0,
	0, 0, 0, 2743, 0, 1807, 0, 0, 0, 2741,
	0, 4141, 0, 0, 2739, 0, 0, 0, 2698, 0,
	0, 0, 1703, 0, 2678, 0, 0, 0, 0, 0,
	0, 0, 2677, 0, 0, 0, 4024, 2673, 0, 0,
	0, 1465, 0, 1466, 1467, 0, 4058, 1465, 0, 1466,
	1467, 0, 2671, 0, 0, 0, 0, 2663, 1465, 0,
	1466, 1467, 2634, 3609, 1465, 0, 1466, 1467, 0, 1465,
	2628, 1466, 1467, 1465, 0, 1466, 1467, 2623, 0, 1465,
	0, 1466, 1467, 0, 0, 0, 0, 1465, 1756, 1466,
	1467, 0, 1465, 0, 1466, 1467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1465, 3628, 1466,
	1467, 3632, 1465, 0, 1466, 1467, 0, 1465, 0, 1466,
	1467, 0, 0, 0, 0, 1465, 1844, 1466, 1467, 0,
	0, 0, 1465, 0, 1466, 1467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4163,
	0, 951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3676, 0, 0, 0, 0, 0, 0, 3683,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	195, 1808, 0, 0, 722, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 195, 728, 1821, 1824, 1825, 1826, 1827, 1828,
	1829, 0, 1830, 1831, 1833, 1834, 1832, 1835, 1836, 1809,
	1810, 1811, 1812, 1793, 1794, 1822, 0, 1796, 0, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 0, 0,
	1806, 1813, 1814, 1815, 1816, 0, 1817, 1818, 1819, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 3895, 0,
	0, 0, 0, 0, 0, 0, 0, 3902, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3912, 3913, 3914,
	0, 3916, 0, 3917, 3918, 0, 0, 0, 0, 3921,
	3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931,
	3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941,
	3942, 0, 3944, 3947, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3956, 3957,
	3958, 3959, 3960, 3962, 3963, 3965, 3967, 3968, 3970, 0,
	0, 0, 3974, 0, 0, 0, 3976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4003, 0, 0, 2065, 2066, 2067, 2068, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2120, 2121, 0, 0, 0,
	0, 2144, 0, 0, 2148, 2149, 1823, 0, 0, 2154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 0, 2177, 0, 0, 0, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2208, 0, 2213,
	0, 2215, 2216, 2217, 0, 2219, 2220, 2221, 0, 2223,
	2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 0, 0,
	0, 0, 0, 2300, 0, 2302, 0, 2309, 2310, 2311,
	2312, 2313, 2314, 0, 0, 0, 0, 0, 4028, 0,
	0, 0, 0, 0, 0, 0, 2325, 2326, 2327, 2328,
	2329, 2330, 2331, 2332, 0, 2334, 2335, 2336, 2337, 2338,
	0, 0, 4043, 0, 0, 0, 0, 0, 4046, 0,
	4047, 0, 0, 86, 44, 45, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 92, 4062, 0, 1063, 48, 76, 77, 0,
	74, 78, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 75, 129, 0, 151, 0, 0, 0, 4088,
	4089, 0, 2379, 2380, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 4096, 4098, 4100, 0, 0, 0, 0,
	0, 62, 0, 0, 0, 0, 0, 0, 2418, 0,
	0, 4106, 0, 95, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 4128, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 170, 0,
	195, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 4147, 83, 0, 0, 0, 0, 0, 0, 2460,
	138, 139, 161, 160, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 728, 728, 0, 0, 4170, 4172, 4174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 195, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1513, 0, 0, 0, 0, 0, 4207, 4208, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 54, 57, 56,
	59, 0, 73, 0, 0, 82, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 136, 158, 143, 135,
	0, 156, 157, 0, 0, 0, 0, 0, 173, 61,
	91, 90, 0, 0, 71, 72, 58, 179, 144, 0,
	1808, 0, 80, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 145, 140, 141, 142, 146, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 63, 64, 0, 65, 66,
	67, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 1824, 1825, 1826, 1827, 1828, 1829,
	0, 1830, 1831, 1833, 1834, 1832, 1835, 1836, 1809, 1810,
	1811, 1812, 1793, 1794, 1822, 0, 1796, 0, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 0, 0, 1806,
	1813, 1814, 1815, 1816, 0, 1817, 1818, 1819, 1820, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2632, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2638, 2639, 2640, 2641, 0, 0, 0, 89,
	0, 195, 0, 0, 0, 728, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1527, 0, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 728, 0, 0, 94,
	0, 0, 0, 0, 728, 1823, 0, 1513, 728, 0,
	0, 728, 728, 728, 728, 0, 728, 152, 728, 728,
	153, 728, 728, 728, 728, 728, 728, 0, 0, 0,
	0, 0, 0, 0, 1513, 728, 728, 1513, 728, 1513,
	195, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 177, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 1016,
	0, 0, 0, 728, 1017, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 2113, 0, 728, 0, 0, 728,
	0, 195, 195, 0, 0, 0, 0, 0, 0, 185,
	0, 1756, 0, 0, 0, 0, 70, 0, 195, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 171, 168, 174, 175, 176, 178, 180,
	181, 182, 183, 0, 0, 0, 0, 0, 184, 186,
	187, 188, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 3013,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3039, 3040, 3041, 0,
	0, 3043, 0, 0, 3045, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 0, 3064, 3065, 3066, 0, 0, 0,
	0, 0, 1513, 3071, 0, 0, 0, 0, 3073, 0,
	0, 3075, 3076, 3077, 0, 0, 0, 3078, 3079, 0,
	1513, 3080, 0, 3081, 0, 0, 0, 0, 0, 0,
	3082, 0, 3083, 0, 0, 0, 3084, 0, 3085, 0,
	0, 3086, 0, 3087, 0, 3088, 0, 3089, 0, 3090,
	0, 3091, 0, 3092, 0, 3093, 0, 3094, 0, 3095,
	0, 3096, 0, 3097, 0, 3098, 0, 3099, 0, 3100,
	0, 3101, 0, 3102, 0, 3103, 0, 0, 0, 3104,
	0, 3105, 0, 3106, 0, 0, 3107, 0, 3108, 0,
	3109, 0, 2272, 3111, 0, 0, 3113, 0, 0, 3115,
	3116, 3117, 3118, 0, 0, 0, 0, 3119, 2272, 2272,
	2272, 2272, 2272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3129, 0, 0, 0, 0, 0, 0,
	0, 3142, 0, 0, 3146, 0, 0, 0, 0, 0,
	0, 0, 0, 3149, 3150, 3151, 3152, 3153, 3154, 0,
	0, 0, 3155, 3156, 0, 3157, 2319, 3158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1063, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 3191, 0, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 3221, 0, 0,
	0, 0, 195, 0, 0, 728, 2950, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 195,
	151, 0, 0, 728, 0, 0, 2319, 195, 0, 195,
	0, 195, 195, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3284, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	728, 728, 728, 0, 0, 1865, 1866, 161, 160, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 728, 728, 0, 0,
	728, 0, 728, 0, 0, 0, 0, 0, 728, 950,
	0, 0, 0, 0, 3377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3392, 728, 0, 0, 0, 0, 728, 0,
	0, 0, 728, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 727, 190, 0,
	155, 1867, 158, 0, 1864, 0, 156, 157, 0, 1861,
	195, 0, 0, 173, 0, 0, 0, 195, 0, 0,
	0, 129, 179, 151, 0, 0, 0, 195, 195, 0,
	0, 195, 0, 195, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 727,
	195, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 150, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 1866,
	161, 160, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1513,
	0, 2319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3590, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 1867, 158, 0, 1864, 0, 156,
	157, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 159, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3634, 0, 3635, 0, 3636, 0, 3637, 0,
	0, 0, 0, 0, 0, 0, 3640, 3641, 0, 0,
	0, 0, 0, 0, 0, 0, 3646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3647, 0, 3648, 0, 3649, 0, 3650, 0, 3651, 0,
	3652, 0, 3653, 0, 3654, 0, 3655, 0, 3656, 0,
	3657, 0, 3658, 0, 3659, 0, 3660, 0, 3661, 0,
	3662, 0, 0, 3663, 0, 0, 0, 3664, 0, 3665,
	0, 0, 0, 0, 0, 3667, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3684, 0, 0,
	164, 0, 0, 0, 0, 0, 3689, 0, 3690, 3691,
	0, 3692, 0, 3693, 195, 0, 165, 0, 3694, 0,
	0, 0, 195, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3723, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3732, 0,
	0, 3734, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 195, 0, 3738, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3874,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 0, 0,
	0, 0, 0, 184, 186, 187, 188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 728, 0, 0, 0, 0, 0, 0, 728, 0,
	0, 0, 728, 728, 0, 0, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1513, 728, 152, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 195, 195, 195, 195,
	195, 195, 0, 0, 0, 0, 0, 0, 3984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 195, 195, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 727, 1428, 727,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 727,
	0, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 171, 168, 174, 175, 176, 178, 180, 181, 182,
	183, 0, 728, 0, 0, 0, 184, 186, 187, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4026, 0, 0, 0, 0,
	0, 907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4040, 0, 0, 4041, 0, 4042, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 195, 0, 0, 728, 0,
	0, 1512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 0, 0, 0, 1513, 0, 0, 728,
	728, 1513, 195, 195, 195, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	195, 1088, 195, 1095, 0, 195, 195, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 727, 0, 0, 0, 4126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 4142, 0, 4143,
	0, 4144, 0, 727, 728, 0, 0, 1513, 0, 0,
	0, 0, 728, 0, 0, 0, 0, 195, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 727, 0, 727, 0, 0, 0, 0, 0,
	0, 4193, 727, 4194, 0, 1512, 727, 0, 0, 727,
	727, 727, 727, 0, 727, 0, 727, 727, 0, 727,
	727, 727, 727, 727, 727, 0, 0, 0, 0, 0,
	0, 0, 1512, 727, 727, 1512, 727, 1512, 0, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 195, 195, 195,
	0, 0, 0, 0, 0, 0, 0, 728, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 727, 727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 0, 728, 728, 728, 728,
	0, 0, 0, 908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	1512, 0, 672, 0, 0, 0, 0, 0, 0, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1064, 1064, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	0, 1276, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1440, 0, 728, 0, 728, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	195, 0, 0, 728, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 195, 0, 0, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 0, 0, 728, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 728, 0, 0, 727, 727,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 727, 0,
	0, 0, 0, 0, 727, 727, 0, 0, 727, 0,
	727, 0, 0, 0, 0, 0, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1712, 1713, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 0, 727, 0, 0, 0,
	727, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 1088, 0, 1873, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 1884, 728,
	195, 1887, 1888, 1890, 1890, 0, 1890, 0, 1890, 1890,
	0, 1899, 1890, 1890, 1890, 1890, 1890, 0, 0, 0,
	0, 0, 0, 727, 0, 1919, 1920, 0, 1088, 0,
	0, 1925, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1967, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 728, 1988, 0, 0, 1992,
	0, 0, 0, 0, 0, 1513, 728, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 727,
	0, 0, 672, 0, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 728, 2319, 0, 0, 0, 0, 0,
	0, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1276, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2046, 0, 0, 0, 0, 95, 0,
	0, 1016, 0, 0, 0, 956, 1017, 969, 970, 971,
	957, 0, 0, 958, 959, 0, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 965, 0, 972, 973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 0, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3320, 3321, 0, 1514, 0, 0, 0, 0,
	2901, 0, 0, 0, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 0, 0, 0, 0,
	0, 0, 727, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 0, 727,
	0, 0, 0, 0, 0, 0, 727, 3322, 0, 0,
	727, 727, 0, 0, 0, 727, 0, 0, 0, 0,
	672, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1512, 727, 0, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3323, 3324, 0, 0, 1514,
	0, 0, 0, 0, 0, 0, 2356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1514, 0, 0, 1514,
	727, 1514, 672, 0, 0, 2369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1941, 1762, 0, 0, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 0, 921,
	727, 0, 0, 1994, 672, 925, 0, 0, 0, 922,
	923, 0, 0, 0, 924, 926, 0, 0, 0, 0,
	672, 0, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 2020, 2021, 672, 672,
	672, 672, 672, 672, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 1095, 0, 0, 0, 0, 0, 0,
	2482, 2483, 2484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1088, 0, 0, 0, 0, 0, 1095, 1882, 0, 0,
	1882, 0, 1882, 0, 0, 0, 0, 0, 2514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 1088, 0, 0, 0, 0, 2108, 0,
	0, 0, 2108, 2108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 1512, 0, 0, 727, 727, 1512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2588, 0, 0, 0, 0,
	3269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 727, 0, 0, 1512, 0, 0, 0, 0,
	727, 0, 0, 0, 1514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1994, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1064,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 0, 0, 0, 1994, 672,
	0, 672, 0, 672, 2408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3558, 0, 2836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 727, 727, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2369, 0, 0, 0, 0, 0, 0, 2958, 0,
	0, 0, 1882, 1882, 0, 0, 0, 2963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2974, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	672, 0, 0, 672, 0, 2576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 2108, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 0, 0, 0, 0,
	0, 727, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1514, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 0, 0,
	0, 0, 727, 0, 727, 0, 0, 0, 0, 0,
	1890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3176, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 0, 0, 3203,
	1890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 1941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 0, 0, 0, 0,
	0, 0, 2369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 0, 672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 2943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 1514, 0, 0, 0, 0,
	0, 0, 0, 1512, 727, 0, 727, 0, 672, 672,
	672, 672, 672, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 727, 0, 0, 672, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 727, 0, 727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2369, 2369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3622, 3623, 3624, 3625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1064, 0, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 1514, 672, 672, 672, 672, 672, 0,
	0, 0, 0, 0, 0, 0, 3219, 0, 0, 0,
	0, 0, 1941, 0, 672, 0, 0, 672, 3227, 1994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3700, 0, 3700, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1514,
	0, 0, 0, 3728, 0, 3730, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3897,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3700, 0, 0,
	0, 0, 0, 0, 3700, 0, 3700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2369, 0, 0, 0, 0,
	0, 672, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3760, 3762,
	3761, 3827, 3828, 3829, 3830, 3831, 3832, 3833, 3763, 3764,
	798, 0, 0, 0, 0, 0, 672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 672, 0, 0, 672,
	672, 672, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4044, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2369, 0, 4060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1276, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3776, 3777, 4110, 0, 3852, 3851, 3850,
	0, 0, 3848, 3849, 3847, 0, 0, 0, 0, 1941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1514, 0,
	0, 0, 1941, 0, 0, 4052, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3853, 921, 2369,
	774, 775, 3854, 3855, 925, 3856, 777, 778, 922, 923,
	0, 772, 776, 924, 926, 0, 0, 0, 1838, 0,
	4110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1941, 0,
	3757, 3758, 3759, 3765, 3766, 3767, 3778, 3825, 3826, 3834,
	3836, 877, 3835, 3837, 3838, 3839, 3842, 3843, 3844, 3845,
	3840, 3841, 3846, 3740, 3744, 3741, 3742, 3743, 3755, 3745,
	3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3756,
	3857, 3858, 3859, 3860, 3861, 3862, 3771, 3775, 3774, 3772,
	3773, 3769, 3770, 3797, 3796, 3798, 3799, 3800, 3801, 3802,
	3803, 3805, 3804, 3806, 3807, 3808, 3809, 3810, 3811, 3779,
	3780, 3783, 3784, 3782, 3781, 3785, 3794, 3795, 3786, 3787,
	3788, 3789, 3790, 3791, 3793, 3792, 3812, 3813, 3814, 3815,
	3816, 3818, 3817, 3821, 3822, 3820, 3819, 3824, 3823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 927, 0, 928, 0, 0, 932, 0, 0,
	0, 934, 933, 0, 935, 897, 896, 0, 0, 929,
	930, 0, 931, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3863, 3864, 3865,
	3866, 3867, 3868, 3869, 3870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 0, 0, 0,
	396, 0, 0, 0, 0, 0, 1411, 1397, 527, 0,
	1339, 1414, 1308, 1327, 1424, 1330, 1333, 1376, 1286, 1354,
	416, 1324, 1312, 1281, 1319, 1282, 1310, 1341, 270, 1307,
	1399, 1358, 1413, 366, 267, 1288, 1279, 204, 505, 1313,
	430, 1329, 203, 1378, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 1420, 370,
	1364, 0, 497, 401, 0, 0, 1994, 1343, 1403, 1352,
	1390, 1338, 1377, 1296, 1363, 1415, 1325, 1373, 1416, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	4084, 952, 0, 0, 0, 0, 4085, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	1321, 1370, 606, 1410, 1322, 1372, 265, 321, 272, 264,
	579, 1421, 1402, 1285, 1351, 1409, 1346, 0, 0, 229,
	1412, 1345, 0, 1375, 0, 1427, 1280, 1366, 0, 1283,
	1287, 1423, 1407, 1316, 275, 0, 0, 0, 0, 0,
	0, 0, 1342, 1353, 1387, 1391, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 1362, 0, 0,
	0, 1292, 1284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	1295, 0, 1315, 1388, 0, 1278, 297, 1289, 402, 257,
	0, 453, 1395, 1406, 1337, 624, 1408, 1335, 1334, 1382,
	1293, 1401, 1328, 365, 1291, 330, 197, 225, 0, 1326,
	412, 461, 473, 1400, 1311, 1320, 253, 1318, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 1361, 1380,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 1290, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 1306, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 1396, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	1385, 1426, 425, 472, 240, 603, 496, 199, 1300, 1305,
	1298, 0, 254, 255, 1367, 574, 1301, 1299, 1356, 1357,
	1302, 1417, 1418, 1419, 1404, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 1389, 1294, 0, 1303, 1304, 398, 1398,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 1360,
	196, 221, 368, 1422, 454, 288, 645, 614, 484, 609,
	206, 223, 1297, 262, 1309, 1317, 0, 1323, 1331, 1332,
	1344, 1347, 1348, 1349, 1350, 1368, 1369, 1371, 1379, 1381,
	1384, 1386, 1393, 1405, 1425, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 1359, 1365, 381, 281, 305, 320, 1374,
	613, 502, 227, 466, 290, 251, 1392, 1394, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 1355, 1383, 376, 575, 576, 316, 396, 0,
	0, 0, 0, 0, 1411, 1397, 527, 0, 1339, 1414,
	1308, 1327, 1424, 1330, 1333, 1376, 1286, 1354, 416, 1324,
	1312, 1281, 1319, 1282, 1310, 1341, 270, 1307, 1399, 1358,
	1413, 366, 267, 1288, 1279, 204, 505, 1313, 430, 1329,
	203, 1378, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 1420, 370, 1364, 0,
	497, 401, 0, 0, 0, 1343, 1403, 1352, 1390, 1338,
	1377, 1296, 1363, 1415, 1325, 1373, 1416, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 1321, 1370,
	606, 1410, 1322, 1372, 265, 321, 272, 264, 579, 1421,
	1402, 1285, 1351, 1409, 1346, 0, 0, 229, 1412, 1345,
	0, 1375, 0, 1427, 1280, 1366, 0, 1283, 1287, 1423,
	1407, 1316, 275, 0, 0, 0, 0, 0, 0, 0,
	1342, 1353, 1387, 1391, 1336, 0, 0, 0, 0, 0,
	0, 3228, 0, 1314, 0, 1362, 0, 0, 0, 1292,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1340, 0, 0, 0, 0, 1295, 0,
	1315, 1388, 0, 1278, 297, 1289, 402, 257, 0, 453,
	1395, 1406, 1337, 624, 1408, 1335, 1334, 1382, 1293, 1401,
	1328, 365, 1291, 330, 197, 225, 0, 1326, 412, 461,
	473, 1400, 1311, 1320, 253, 1318, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 1361, 1380, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 1290,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 1306, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 1396,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 1385, 1426,
	425, 472, 240, 603, 496, 199, 1300, 1305, 1298, 0,
	254, 255, 1367, 574, 1301, 1299, 1356, 1357, 1302, 1417,
	1418, 1419, 1404, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 1389, 1294, 0, 1303, 1304, 398, 1398, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 1360, 196, 221,
	368, 1422, 454, 288, 645, 614, 484, 609, 206, 223,
	1297, 262, 1309, 1317, 0, 1323, 1331, 1332, 1344, 1347,
	1348, 1349, 1350, 1368, 1369, 1371, 1379, 1381, 1384, 1386,
	1393, 1405, 1425, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 1359, 1365, 381, 281, 305, 320, 1374, 613, 502,
	227, 466, 290, 251, 1392, 1394, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	1355, 1383, 376, 575, 576, 316, 396, 0, 0, 0,
	0, 0, 1411, 1397, 527, 0, 1339, 1414, 1308, 1327,
	1424, 1330, 1333, 1376, 1286, 1354, 416, 1324, 1312, 1281,
	1319, 1282, 1310, 1341, 270, 1307, 1399, 1358, 1413, 366,
	267, 1288, 1279, 204, 505, 1313, 430, 1329, 203, 1378,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 1420, 370, 1364, 0, 497, 401,
	0, 0, 0, 1343, 1403, 1352, 1390, 1338, 1377, 1296,
	1363, 1415, 1325, 1373, 1416, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 1321, 1370, 606, 1410,
	1322, 1372, 265, 321, 272, 264, 579, 1421, 1402, 1285,
	1351, 1409, 1346, 0, 0, 229, 1412, 1345, 0, 1375,
	0, 1427, 1280, 1366, 0, 1283, 1287, 1423, 1407, 1316,
	275, 0, 0, 0, 0, 0, 0, 0, 1342, 1353,
	1387, 1391, 1336, 0, 0, 0, 0, 0, 0, 3189,
	0, 1314, 0, 1362, 0, 0, 0, 1292, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 1295, 0, 1315, 1388,
	0, 1278, 297, 1289, 402, 257, 0, 453, 1395, 1406,
	1337, 624, 1408, 1335, 1334, 1382, 1293, 1401, 1328, 365,
	1291, 330, 197, 225, 0, 1326, 412, 461, 473, 1400,
	1311, 1320, 253, 1318, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 1361, 1380, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 1290, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 1306, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 1396, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 1385, 1426, 425, 472,
	240, 603, 496, 199, 1300, 1305, 1298, 0, 254, 255,
	1367, 574, 1301, 1299, 1356, 1357, 1302, 1417, 1418, 1419,
	1404, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 1389,
	1294, 0, 1303, 1304, 398, 1398, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 1360, 196, 221, 368, 1422,
	454, 288, 645, 614, 484, 609, 206, 223, 1297, 262,
	1309, 1317, 0, 1323, 1331, 1332, 1344, 1347, 1348, 1349,
	1350, 1368, 1369, 1371, 1379, 1381, 1384, 1386, 1393, 1405,
	1425, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 1359,
	1365, 381, 281, 305, 320, 1374, 613, 502, 227, 466,
	290, 251, 1392, 1394, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 1355, 1383,
	376, 575, 576, 316, 396, 0, 0, 0, 0, 0,
	1411, 1397, 527, 0, 1339, 1414, 1308, 1327, 1424, 1330,
	1333, 1376, 1286, 1354, 416, 1324, 1312, 1281, 1319, 1282,
	1310, 1341, 270, 1307, 1399, 1358, 1413, 366, 267, 1288,
	1279, 204, 505, 1313, 430, 1329, 203, 1378, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 1420, 370, 1364, 0, 497, 401, 0, 0,
	0, 1343, 1403, 1352, 1390, 1338, 1377, 1296, 1363, 1415,
	1325, 1373, 1416, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 1321, 1370, 606, 1410, 1322, 1372,
	265, 321, 272, 264, 579, 1421, 1402, 1285, 1351, 1409,
	1346, 0, 0, 229, 1412, 1345, 0, 1375, 0, 1427,
	1280, 1366, 0, 1283, 1287, 1423, 1407, 1316, 275, 0,
	0, 0, 0, 0, 0, 0, 1342, 1353, 1387, 1391,
	1336, 0, 0, 0, 0, 0, 0, 2387, 0, 1314,
	0, 1362, 0, 0, 0, 1292, 1284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 1295, 0, 1315, 1388, 0, 1278,
	297, 1289, 402, 257, 0, 453, 1395, 1406, 1337, 624,
	1408, 1335, 1334, 1382, 1293, 1401, 1328, 365, 1291, 330,
	197, 225, 0, 1326, 412, 461, 473, 1400, 1311, 1320,
	253, 1318, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 1361, 1380, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 1290, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 1306, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 1396, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 1385, 1426, 425, 472, 240, 603,
	496, 199, 1300, 1305, 1298, 0, 254, 255, 1367, 574,
	1301, 1299, 1356, 1357, 1302, 1417, 1418, 1419, 1404, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 1389, 1294, 0,
	1303, 1304, 398, 1398, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 1360, 196, 221, 368, 1422, 454, 288,
	645, 614, 484, 609, 206, 223, 1297, 262, 1309, 1317,
	0, 1323, 1331, 1332, 1344, 1347, 1348, 1349, 1350, 1368,
	1369, 1371, 1379, 1381, 1384, 1386, 1393, 1405, 1425, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 1359, 1365, 381,
	281, 305, 320, 1374, 613, 502, 227, 466, 290, 251,
	1392, 1394, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 1355, 1383, 376, 575,
	576, 316, 396, 0, 0, 0, 0, 0, 1411, 1397,
	527, 0, 1339, 1414, 1308, 1327, 1424, 1330, 1333, 1376,
	1286, 1354, 416, 1324, 1312, 1281, 1319, 1282, 1310, 1341,
	270, 1307, 1399, 1358, 1413, 366, 267, 1288, 1279, 204,
	505, 1313, 430, 1329, 203, 1378, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	1420, 370, 1364, 0, 497, 401, 0, 0, 0, 1343,
	1403, 1352, 1390, 1338, 1377, 1296, 1363, 1415, 1325, 1373,
	1416, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 1321, 1370, 606, 1410, 1322, 1372, 265, 321,
	272, 264, 579, 1421, 1402, 1285, 1351, 1409, 1346, 0,
	0, 229, 1412, 1345, 0, 1375, 0, 1427, 1280, 1366,
	0, 1283, 1287, 1423, 1407, 1316, 275, 0, 0, 0,
	0, 0, 0, 0, 1342, 1353, 1387, 1391, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 1314, 0, 1362,
	0, 0, 0, 1292, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1340, 0, 0,
	0, 0, 1295, 0, 1315, 1388, 0, 1278, 297, 1289,
	402, 257, 0, 453, 1395, 1406, 1337, 624, 1408, 1335,
	1334, 1382, 1293, 1401, 1328, 365, 1291, 330, 197, 225,
	0, 1326, 412, 461, 473, 1400, 1311, 1320, 253, 1318,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	1361, 1380, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 1290, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	1306, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 1396, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 1385, 1426, 425, 472, 240, 603, 496, 199,
	1300, 1305, 1298, 0, 254, 255, 1367, 574, 1301, 1299,
	1356, 1357, 1302, 1417, 1418, 1419, 1404, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 1389, 1294, 0, 1303, 1304,
	398, 1398, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 1360, 196, 221, 368, 1422, 454, 288, 645, 614,
	484, 609, 206, 223, 1297, 262, 1309, 1317, 0, 1323,
	1331, 1332, 1344, 1347, 1348, 1349, 1350, 1368, 1369, 1371,
	1379, 1381, 1384, 1386, 1393, 1405, 1425, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 1359, 1365, 381, 281, 305,
	320, 1374, 613, 502, 227, 466, 290, 251, 1392, 1394,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 1355, 1383, 376, 575, 576, 316,
	396, 0, 0, 0, 0, 0, 1411, 1397, 527, 0,
	1339, 1414, 1308, 1327, 1424, 1330, 1333, 1376, 1286, 1354,
	416, 1324, 1312, 1281, 1319, 1282, 1310, 1341, 270, 1307,
	1399, 1358, 1413, 366, 267, 1288, 1279, 204, 505, 1313,
	430, 1329, 203, 1378, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 1420, 370,
	1364, 0, 497, 401, 0, 0, 0, 1343, 1403, 1352,
	1390, 1338, 1377, 1296, 1363, 1415, 1325, 1373, 1416, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	1321, 1370, 606, 1410, 1322, 1372, 265, 321, 272, 264,
	579, 1421, 1402, 1285, 1351, 1409, 1346, 0, 0, 229,
	1412, 1345, 0, 1375, 0, 1427, 1280, 1366, 0, 1283,
	1287, 1423, 1407, 1316, 275, 0, 0, 0, 0, 0,
	0, 0, 1342, 1353, 1387, 1391, 1336, 0, 0, 0,
	0, 0, 0, 0, 0, 1314, 0, 1362, 0, 0,
	0, 1292, 1284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1340, 0, 0, 0, 0,
	1295, 0, 1315, 1388, 0, 1278, 297, 1289, 402, 257,
	0, 453, 1395, 1406, 1337, 624, 1408, 1335, 1334, 1382,
	1293, 1401, 1328, 365, 1291, 330, 197, 225, 0, 1326,
	412, 461, 473, 1400, 1311, 1320, 253, 1318, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 1361, 1380,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 1290, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 1306, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 1396, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	1385, 1426, 425, 472, 240, 603, 496, 199, 1300, 1305,
	1298, 0, 254, 255, 1367, 574, 1301, 1299, 1356, 1357,
	1302, 1417, 1418, 1419, 1404, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 1389, 1294, 0, 1303, 1304, 398, 1398,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 1360,
	196, 221, 368, 1422, 454, 288, 645, 614, 484, 609,
	206, 223, 1297, 262, 1309, 1317, 0, 1323, 1331, 1332,
	1344, 1347, 1348, 1349, 1350, 1368, 1369, 1371, 1379, 1381,
	1384, 1386, 1393, 1405, 1425, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 1359, 1365, 381, 281, 305, 320, 1374,
	613, 502, 227, 466, 290, 251, 1392, 1394, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 1355, 1383, 376, 575, 576, 316, 396, 0,
	0, 0, 0, 0, 1411, 1397, 527, 0, 1339, 1414,
	1308, 1327, 1424, 1330, 1333, 1376, 1286, 1354, 416, 1324,
	1312, 1281, 1319, 1282, 1310, 1341, 270, 1307, 1399, 1358,
	1413, 366, 267, 1288, 1279, 204, 505, 1313, 430, 1329,
	203, 1378, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 1420, 370, 1364, 0,
	497, 401, 0, 0, 0, 1343, 1403, 1352, 1390, 1338,
	1377, 1296, 1363, 1415, 1325, 1373, 1416, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 1321, 1370,
	606, 1410, 1322, 1372, 265, 321, 272, 264, 579, 1421,
	1402, 1285, 1351, 1409, 1346, 0, 0, 229, 1412, 1345,
	0, 1375, 0, 1427, 1280, 1366, 0, 1283, 1287, 1423,
	1407, 1316, 275, 0, 0, 0, 0, 0, 0, 0,
	1342, 1353, 1387, 1391, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 1314, 0, 1362, 0, 0, 0, 1292,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1340, 0, 0, 0, 0, 1295, 0,
	1315, 1388, 0, 1278, 297, 1289, 402, 257, 0, 453,
	1395, 1406, 1337, 624, 1408, 1335, 1334, 1382, 1293, 1401,
	1328, 365, 1291, 330, 197, 225, 0, 1326, 412, 461,
	473, 1400, 1311, 1320, 253, 1318, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 1361, 1380, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 1290,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 1306, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 1396,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 1385, 1426,
	425, 472, 240, 603, 496, 199, 1300, 1305, 1298, 0,
	254, 255, 1367, 574, 1301, 1299, 1356, 1357, 1302, 1417,
	1418, 1419, 1404, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 1389, 1294, 0, 1303, 1304, 398, 1398, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 1360, 196, 221,
	368, 1422, 454, 288, 645, 614, 484, 609, 206, 223,
	1297, 262, 1309, 1317, 0, 1323, 1331, 1332, 1344, 1347,
	1348, 1349, 1350, 1368, 1369, 1371, 1379, 1381, 1384, 1386,
	1393, 1405, 1425, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 1359, 1365, 381, 281, 305, 320, 1374, 613, 502,
	227, 466, 290, 251, 1392, 1394, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	1355, 1383, 376, 575, 576, 316, 396, 0, 0, 0,
	0, 0, 1411, 1397, 527, 0, 1339, 1414, 1308, 1327,
	1424, 1330, 1333, 1376, 1286, 1354, 416, 1324, 1312, 1281,
	1319, 1282, 1310, 1341, 270, 1307, 1399, 1358, 1413, 366,
	267, 1288, 1279, 204, 505, 1313, 430, 1329, 203, 1378,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 1420, 370, 1364, 0, 497, 401,
	0, 0, 0, 1343, 1403, 1352, 1390, 1338, 1377, 1296,
	1363, 1415, 1325, 1373, 1416, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 1321, 1370, 606, 1410,
	1322, 1372, 265, 321, 272, 264, 579, 1421, 1402, 1285,
	1351, 1409, 1346, 0, 0, 229, 1412, 1345, 0, 1375,
	0, 1427, 1280, 1366, 0, 1283, 1287, 1423, 1407, 1316,
	275, 0, 0, 0, 0, 0, 0, 0, 1342, 1353,
	1387, 1391, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 1314, 0, 1362, 0, 0, 0, 1292, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 1295, 0, 1315, 1388,
	0, 1278, 297, 1289, 402, 257, 0, 453, 1395, 1406,
	1337, 624, 1408, 1335, 1334, 1382, 1293, 1401, 1328, 365,
	1291, 330, 197, 225, 0, 1326, 412, 461, 473, 1400,
	1311, 1320, 253, 1318, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 1361, 1380, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 1290, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 1306, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 1396, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 1385, 1426, 425, 472,
	240, 603, 496, 199, 1300, 1305, 1298, 0, 254, 255,
	1367, 574, 1301, 1299, 1356, 1357, 1302, 1417, 1418, 1419,
	1404, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 1389,
	1294, 0, 1303, 1304, 398, 1398, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 1360, 196, 221, 368, 1422,
	454, 288, 645, 614, 484, 609, 206, 223, 1297, 262,
	1309, 1317, 0, 1323, 1331, 1332, 1344, 1347, 1348, 1349,
	1350, 1368, 1369, 1371, 1379, 1381, 1384, 1386, 1393, 1405,
	1425, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 1359,
	1365, 381, 281, 305, 320, 1374, 613, 502, 227, 466,
	290, 251, 1392, 1394, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 1355, 1383,
	376, 575, 576, 316, 396, 0, 0, 0, 0, 0,
	0, 0, 527, 0, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 757, 0,
	0, 0, 270, 762, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 769, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 764, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 1016, 952, 741, 918, 956, 1017,
	969, 970, 971, 957, 0, 238, 958, 959, 245, 960,
	0, 917, 800, 802, 801, 867, 868, 869, 870, 871,
	872, 873, 803, 804, 798, 965, 606, 972, 973, 0,
	265, 321, 272, 264, 579, 0, 0, 2209, 2210, 2211,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 737, 754, 0, 768, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 751, 752, 0, 0, 0,
	0, 912, 0, 753, 0, 0, 761, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 911, 0, 0, 624,
	0, 0, 909, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	962, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 963, 964,
	256, 647, 808, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 816, 817, 280,
	307, 893, 892, 891, 306, 308, 889, 890, 888, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 899, 921, 910, 774, 775, 900, 901, 925, 902,
	777, 778, 922, 923, 771, 772, 776, 924, 926, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 913, 760, 759,
	0, 766, 767, 0, 796, 797, 799, 805, 806, 807,
	818, 865, 866, 874, 876, 877, 875, 878, 879, 880,
	883, 884, 885, 886, 881, 882, 887, 779, 783, 780,
	781, 782, 794, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 795, 936, 937, 938, 939, 940, 941,
	811, 815, 814, 812, 813, 809, 810, 837, 836, 838,
	839, 840, 841, 842, 843, 845, 844, 846, 847, 848,
	849, 850, 851, 819, 820, 823, 824, 822, 821, 825,
	834, 835, 826, 827, 828, 829, 830, 831, 833, 832,
	852, 853, 854, 855, 856, 858, 857, 861, 862, 860,
	859, 864, 863, 758, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 927, 262, 928, 0,
	0, 932, 0, 0, 0, 934, 933, 0, 935, 897,
	896, 0, 0, 929, 930, 0, 931, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 942, 943, 944, 945, 946, 947, 948, 949, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	967, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	757, 0, 0, 0, 270, 762, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 769, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 764, 765, 0, 0, 0,
	0, 0, 0, 2416, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 1016, 952, 741, 918,
	956, 1017, 969, 970, 971, 957, 0, 238, 958, 959,
	245, 960, 0, 917, 800, 802, 801, 867, 868, 869,
	870, 871, 872, 873, 803, 804, 798, 965, 606, 972,
	973, 2417, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 737, 754, 0, 768, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 751, 752, 0,
	0, 0, 0, 912, 0, 753, 0, 0, 761, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 911, 0,
	0, 624, 0, 0, 909, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 962, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	963, 964, 256, 647, 808, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 816,
	817, 280, 307, 893, 892, 891, 306, 308, 889, 890,
	888, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 899, 921, 910, 774, 775, 900, 901,
	925, 902, 777, 778, 922, 923, 771, 772, 776, 924,
	926, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 913,
	760, 759, 0, 766, 767, 0, 796, 797, 799, 805,
	806, 807, 818, 865, 866, 874, 876, 877, 875, 878,
	879, 880, 883, 884, 885, 886, 881, 882, 887, 779,
	783, 780, 781, 782, 794, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 795, 936, 937, 938, 939,
	940, 941, 811, 815, 814, 812, 813, 809, 810, 837,
	836, 838, 839, 840, 841, 842, 843, 845, 844, 846,
	847, 848, 849, 850, 851, 819, 820, 823, 824, 822,
	821, 825, 834, 835, 826, 827, 828, 829, 830, 831,
	833, 832, 852, 853, 854, 855, 856, 858, 857, 861,
	862, 860, 859, 864, 863, 758, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 927, 262,
	928, 0, 0, 932, 0, 0, 0, 934, 933, 0,
	935, 897, 896, 0, 0, 929, 930, 0, 931, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 942, 943, 944, 945, 946, 947, 948,
	949, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 967, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 86, 527, 0, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 757, 0, 0, 0, 270, 762, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 769, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 764, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1016, 952,
	741, 918, 956, 1017, 969, 970, 971, 957, 0, 238,
	958, 959, 245, 960, 0, 917, 800, 802, 801, 867,
	868, 869, 870, 871, 872, 873, 803, 804, 798, 965,
	606, 972, 973, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 737, 754, 0, 768, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 751,
	752, 0, 0, 0, 0, 912, 0, 753, 0, 0,
	761, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	911, 0, 0, 624, 0, 0, 909, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 962, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 963, 964, 256, 647, 808, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 816, 817, 280, 307, 893, 892, 891, 306, 308,
	889, 890, 888, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 899, 921, 910, 774, 775,
	900, 901, 925, 902, 777, 778, 922, 923, 771, 772,
	776, 924, 926, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 913, 760, 759, 0, 766, 767, 0, 796, 797,
	799, 805, 806, 807, 818, 865, 866, 874, 876, 877,
	875, 878, 879, 880, 883, 884, 885, 886, 881, 882,
	887, 779, 783, 780, 781, 782, 794, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 795, 936, 937,
	938, 939, 940, 941, 811, 815, 814, 812, 813, 809,
	810, 837, 836, 838, 839, 840, 841, 842, 843, 845,
	844, 846, 847, 848, 849, 850, 851, 819, 820, 823,
	824, 822, 821, 825, 834, 835, 826, 827, 828, 829,
	830, 831, 833, 832, 852, 853, 854, 855, 856, 858,
	857, 861, 862, 860, 859, 864, 863, 758, 196, 221,
	368, 94, 454, 288, 645, 614, 484, 609, 206, 223,
	927, 262, 928, 0, 0, 932, 0, 0, 0, 934,
	933, 0, 935, 897, 896, 0, 0, 929, 930, 0,
	931, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 942, 943, 944, 945, 946,
	947, 948, 949, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 967, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 757, 0, 0, 0, 270, 762,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 769, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 764,
	765, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	1016, 952, 741, 918, 956, 1017, 969, 970, 971, 957,
	0, 238, 958, 959, 245, 960, 0, 917, 800, 802,
	801, 867, 868, 869, 870, 871, 872, 873, 803, 804,
	798, 965, 606, 972, 973, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 737, 754, 0,
	768, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 751, 752, 0, 0, 0, 0, 912, 0, 753,
	0, 0, 761, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 911, 0, 0, 624, 0, 0, 909, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 962, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 4070, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 963, 964, 256, 647, 808, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 816, 817, 280, 307, 893, 892, 891,
	306, 308, 889, 890, 888, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 899, 921, 910,
	774, 775, 900, 901, 925, 902, 777, 778, 922, 923,
	771, 772, 776, 924, 926, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 913, 760, 759, 0, 766, 767, 0,
	796, 797, 799, 805, 806, 807, 818, 865, 866, 874,
	876, 877, 875, 878, 879, 880, 883, 884, 885, 886,
	881, 882, 887, 779, 783, 780, 781, 782, 794, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 795,
	936, 937, 938, 939, 940, 941, 811, 815, 814, 812,
	813, 809, 810, 837, 836, 838, 839, 840, 841, 842,
	843, 845, 844, 846, 847, 848, 849, 850, 851, 819,
	820, 823, 824, 822, 821, 825, 834, 835, 826, 827,
	828, 829, 830, 831, 833, 832, 852, 853, 854, 855,
	856, 858, 857, 861, 862, 860, 859, 864, 863, 758,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 927, 262, 928, 0, 0, 932, 0, 0,
	0, 934, 933, 0, 935, 897, 896, 0, 0, 929,
	930, 0, 931, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 942, 943, 944,
	945, 946, 947, 948, 949, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 967, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 757, 0, 0, 0,
	270, 762, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	769, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 764, 765, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 1736, 1016, 952, 741, 918, 956, 1017, 969, 970,
	971, 957, 0, 238, 958, 959, 245, 960, 0, 917,
	800, 802, 801, 867, 868, 869, 870, 871, 872, 873,
	803, 804, 798, 965, 606, 972, 973, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 737,
	754, 0, 768, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 751, 752, 0, 0, 0, 0, 912,
	0, 753, 0, 0, 761, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 911, 0, 0, 624, 0, 0,
	909, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 962, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 963, 964, 256, 647,
	808, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 816, 817, 280, 307, 893,
	892, 891, 306, 308, 889, 890, 888, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 899,
	921, 910, 774, 775, 900, 901, 925, 902, 777, 778,
	922, 923, 771, 772, 776, 924, 926, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 913, 760, 759, 0, 766,
	767, 0, 796, 797, 799, 805, 806, 807, 818, 865,
	866, 874, 876, 877, 875, 878, 879, 880, 883, 884,
	885, 886, 881, 882, 887, 779, 783, 780, 781, 782,
	794, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 795, 936, 937, 938, 939, 940, 941, 811, 815,
	814, 812, 813, 809, 810, 837, 836, 838, 839, 840,
	841, 842, 843, 845, 844, 846, 847, 848, 849, 850,
	851, 819, 820, 823, 824, 822, 821, 825, 834, 835,
	826, 827, 828, 829, 830, 831, 833, 832, 852, 853,
	854, 855, 856, 858, 857, 861, 862, 860, 859, 864,
	863, 758, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 927, 262, 928, 0, 0, 932,
	0, 0, 0, 934, 933, 0, 935, 897, 896, 0,
	0, 929, 930, 0, 931, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 942,
	943, 944, 945, 946, 947, 948, 949, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 967, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 757, 0,
	0, 0, 270, 762, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 769, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 764, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 1016, 952, 741, 918, 956, 1017,
	969, 970, 971, 957, 0, 238, 958, 959, 245, 960,
	0, 917, 800, 802, 801, 867, 868, 869, 870, 871,
	872, 873, 803, 804, 798, 965, 606, 972, 973, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 737, 754, 0, 768, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 751, 752, 1062, 0, 0,
	0, 912, 0, 753, 0, 0, 761, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 911, 0, 0, 624,
	0, 0, 909, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	962, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 963, 964,
	256, 647, 808, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 816, 817, 280,
	307, 893, 892, 891, 306, 308, 889, 890, 888, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 899, 921, 910, 774, 775, 900, 901, 925, 902,
	777, 778, 922, 923, 771, 772, 776, 924, 926, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 913, 760, 759,
	0, 766, 767, 0, 796, 797, 799, 805, 806, 807,
	818, 865, 866, 874, 876, 877, 875, 878, 879, 880,
	883, 884, 885, 886, 881, 882, 887, 779, 783, 780,
	781, 782, 794, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 795, 936, 937, 938, 939, 940, 941,
	811, 815, 814, 812, 813, 809, 810, 837, 836, 838,
	839, 840, 841, 842, 843, 845, 844, 846, 847, 848,
	849, 850, 851, 819, 820, 823, 824, 822, 821, 825,
	834, 835, 826, 827, 828, 829, 830, 831, 833, 832,
	852, 853, 854, 855, 856, 858, 857, 861, 862, 860,
	859, 864, 863, 758, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 927, 262, 928, 0,
	0, 932, 0, 0, 0, 934, 933, 0, 935, 897,
	896, 0, 0, 929, 930, 0, 931, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 942, 943, 944, 945, 946, 947, 948, 949, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	967, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	757, 0, 0, 0, 270, 762, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 769, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 764, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 1016, 952, 741, 918,
	956, 1017, 969, 970, 971, 957, 0, 238, 958, 959,
	245, 960, 0, 917, 800, 802, 801, 867, 868, 869,
	870, 871, 872, 873, 803, 804, 798, 965, 606, 972,
	973, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 737, 754, 0, 768, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 751, 752, 0,
	0, 0, 0, 912, 0, 753, 0, 0, 761, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 911, 0,
	0, 624, 0, 0, 909, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 962, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	963, 964, 256, 647, 808, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 816,
	817, 280, 307, 893, 892, 891, 306, 308, 889, 890,
	888, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 899, 921, 910, 774, 775, 900, 901,
	925, 902, 777, 778, 922, 923, 771, 772, 776, 924,
	926, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 913,
	760, 759, 0, 766, 767, 0, 796, 797, 799, 805,
	806, 807, 818, 865, 866, 874, 876, 877, 875, 878,
	879, 880, 883, 884, 885, 886, 881, 882, 887, 779,
	783, 780, 781, 782, 794, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 795, 936, 937, 938, 939,
	940, 941, 811, 815, 814, 812, 813, 809, 810, 837,
	836, 838, 839, 840, 841, 842, 843, 845, 844, 846,
	847, 848, 849, 850, 851, 819, 820, 823, 824, 822,
	821, 825, 834, 835, 826, 827, 828, 829, 830, 831,
	833, 832, 852, 853, 854, 855, 856, 858, 857, 861,
	862, 860, 859, 864, 863, 758, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 927, 262,
	928, 0, 0, 932, 0, 0, 0, 934, 933, 0,
	935, 897, 896, 0, 0, 929, 930, 0, 931, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 942, 943, 944, 945, 946, 947, 948,
	949, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 967, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 757, 0, 0, 0, 270, 762, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 769, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 764, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 1016, 952,
	741, 918, 956, 1017, 969, 970, 971, 957, 0, 238,
	958, 959, 245, 960, 0, 917, 800, 802, 801, 867,
	868, 869, 870, 871, 872, 873, 803, 804, 798, 965,
	606, 972, 973, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 737, 754, 0, 768, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 751,
	752, 0, 0, 0, 0, 912, 0, 753, 0, 0,
	761, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 3145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	911, 0, 0, 624, 0, 0, 909, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 962, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 963, 964, 256, 647, 808, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 816, 817, 280, 307, 893, 892, 891, 306, 308,
	889, 890, 888, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 899, 921, 910, 774, 775,
	900, 901, 925, 902, 777, 778, 922, 923, 771, 772,
	776, 924, 926, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 913, 760, 759, 0, 766, 767, 0, 796, 797,
	799, 805, 806, 807, 818, 865, 866, 874, 876, 877,
	875, 878, 879, 880, 883, 884, 885, 886, 881, 882,
	887, 779, 783, 780, 781, 782, 794, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 795, 936, 937,
	938, 939, 940, 941, 811, 815, 814, 812, 813, 809,
	810, 837, 836, 838, 839, 840, 841, 842, 843, 845,
	844, 846, 847, 848, 849, 850, 851, 819, 820, 823,
	824, 822, 821, 825, 834, 835, 826, 827, 828, 829,
	830, 831, 833, 832, 852, 853, 854, 855, 856, 858,
	857, 861, 862, 860, 859, 864, 863, 758, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	927, 262, 928, 0, 0, 932, 0, 0, 0, 934,
	933, 0, 935, 897, 896, 0, 0, 929, 930, 0,
	931, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 942, 943, 944, 945, 946,
	947, 948, 949, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 967, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	770, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 757, 0, 0, 0, 270, 762,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 769, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 764,
	765, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 95, 0, 0,
	1016, 952, 741, 918, 956, 1017, 969, 970, 971, 957,
	0, 238, 958, 959, 245, 960, 0, 917, 800, 802,
	801, 867, 868, 869, 870, 871, 872, 873, 803, 804,
	798, 965, 606, 972, 973, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 737, 754, 0,
	768, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 751, 752, 0, 0, 0, 0, 912, 0, 753,
	0, 0, 761, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 3141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 911, 0, 0, 624, 0, 0, 909, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 962, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 963, 964, 256, 647, 808, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 816, 817, 280, 307, 893, 892, 891,
	306, 308, 889, 890, 888, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 899, 921, 910,
	774, 775, 900, 901, 925, 902, 777, 778, 922, 923,
	771, 772, 776, 924, 926, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 913, 760, 759, 0, 766, 767, 0,
	796, 797, 799, 805, 806, 807, 818, 865, 866, 874,
	876, 877, 875, 878, 879, 880, 883, 884, 885, 886,
	881, 882, 887, 779, 783, 780, 781, 782, 794, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 795,
	936, 937, 938, 939, 940, 941, 811, 815, 814, 812,
	813, 809, 810, 837, 836, 838, 839, 840, 841, 842,
	843, 845, 844, 846, 847, 848, 849, 850, 851, 819,
	820, 823, 824, 822, 821, 825, 834, 835, 826, 827,
	828, 829, 830, 831, 833, 832, 852, 853, 854, 855,
	856, 858, 857, 861, 862, 860, 859, 864, 863, 758,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 927, 262, 928, 0, 0, 932, 0, 0,
	0, 934, 933, 0, 935, 897, 896, 0, 0, 929,
	930, 0, 931, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 942, 943, 944,
	945, 946, 947, 948, 949, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 967, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 757, 0, 0, 0,
	270, 762, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	769, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 764, 765, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 1016, 952, 1083, 918, 956, 1017, 969, 970,
	971, 957, 0, 238, 958, 959, 245, 960, 0, 917,
	800, 802, 801, 867, 868, 869, 870, 871, 872, 873,
	803, 804, 798, 965, 606, 972, 973, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 0, 768, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 751, 752, 0, 0, 0, 0, 912,
	0, 753, 0, 0, 761, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 911, 0, 0, 624, 0, 0,
	909, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 962, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 963, 964, 256, 647,
	808, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 816, 817, 280, 307, 893,
	892, 891, 306, 308, 889, 890, 888, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 899,
	921, 910, 774, 775, 900, 901, 925, 902, 777, 778,
	922, 923, 771, 772, 776, 924, 926, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 913, 760, 759, 0, 766,
	767, 0, 796, 797, 799, 805, 806, 807, 818, 865,
	866, 874, 876, 877, 875, 878, 879, 880, 883, 884,
	885, 886, 881, 882, 887, 779, 783, 780, 781, 782,
	794, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 795, 936, 937, 938, 939, 940, 941, 811, 815,
	814, 812, 813, 809, 810, 837, 836, 838, 839, 840,
	841, 842, 843, 845, 844, 846, 847, 848, 849, 850,
	851, 819, 820, 823, 824, 822, 821, 825, 834, 835,
	826, 827, 828, 829, 830, 831, 833, 832, 852, 853,
	854, 855, 856, 858, 857, 861, 862, 860, 859, 864,
	863, 758, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 927, 262, 928, 0, 0, 932,
	0, 0, 0, 934, 933, 0, 935, 897, 896, 0,
	0, 929, 930, 0, 931, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 942,
	943, 944, 945, 946, 947, 948, 949, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 967, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 757, 0,
	0, 0, 270, 762, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 769, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 764, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 1016, 952, 1083, 918, 956, 1017,
	969, 970, 971, 957, 0, 238, 958, 959, 245, 960,
	0, 917, 800, 802, 801, 867, 868, 869, 870, 871,
	872, 873, 803, 804, 798, 965, 606, 972, 973, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 0, 768, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 751, 752, 0, 0, 0,
	0, 912, 0, 753, 0, 0, 761, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 2100,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 911, 0, 0, 624,
	0, 0, 909, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	962, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 963, 964,
	256, 647, 808, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 816, 817, 280,
	307, 893, 892, 891, 306, 308, 889, 890, 888, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 899, 921, 910, 774, 775, 900, 901, 925, 902,
	777, 778, 922, 923, 771, 772, 776, 924, 926, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 913, 760, 759,
	0, 766, 767, 0, 796, 797, 799, 805, 806, 807,
	818, 865, 866, 874, 876, 877, 875, 878, 879, 880,
	883, 884, 885, 886, 881, 882, 887, 779, 783, 780,
	781, 782, 794, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 795, 936, 937, 938, 939, 940, 941,
	811, 815, 814, 812, 813, 809, 810, 837, 836, 838,
	839, 840, 841, 842, 843, 845, 844, 846, 847, 848,
	849, 850, 851, 819, 820, 823, 824, 822, 821, 825,
	834, 835, 826, 827, 828, 829, 830, 831, 833, 832,
	852, 853, 854, 855, 856, 858, 857, 861, 862, 860,
	859, 864, 863, 758, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 927, 262, 928, 0,
	0, 932, 0, 0, 0, 934, 933, 0, 935, 897,
	896, 0, 0, 929, 930, 0, 931, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 942, 943, 944, 945, 946, 947, 948, 949, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	967, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 770, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	757, 0, 0, 0, 270, 762, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 769, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 764, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 0, 1016, 952, 1083, 918,
	956, 1017, 969, 970, 971, 957, 0, 238, 958, 959,
	245, 960, 0, 917, 800, 802, 801, 867, 868, 869,
	870, 871, 872, 873, 803, 804, 798, 965, 606, 972,
	973, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 0, 768, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 751, 752, 0,
	0, 0, 0, 912, 0, 753, 0, 0, 761, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 911, 0,
	0, 624, 0, 0, 909, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 962, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	963, 964, 256, 647, 808, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 816,
	817, 280, 307, 893, 892, 891, 306, 308, 889, 890,
	888, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 899, 921, 910, 774, 775, 900, 901,
	925, 902, 777, 778, 922, 923, 771, 772, 776, 924,
	926, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 913,
	760, 759, 0, 766, 767, 0, 796, 797, 799, 805,
	806, 807, 818, 865, 866, 874, 876, 877, 875, 878,
	879, 880, 883, 884, 885, 886, 881, 882, 887, 779,
	783, 780, 781, 782, 794, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 795, 936, 937, 938, 939,
	940, 941, 811, 815, 814, 812, 813, 809, 810, 837,
	836, 838, 839, 840, 841, 842, 843, 845, 844, 846,
	847, 848, 849, 850, 851, 819, 820, 823, 824, 822,
	821, 825, 834, 835, 826, 827, 828, 829, 830, 831,
	833, 832, 852, 853, 854, 855, 856, 858, 857, 861,
	862, 860, 859, 864, 863, 758, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 927, 262,
	928, 0, 0, 932, 0, 0, 0, 934, 933, 0,
	935, 897, 896, 0, 0, 929, 930, 0, 931, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 942, 943, 944, 945, 946, 947, 948,
	949, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 967, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 1133, 624, 0, 0, 0, 0, 0, 1130,
	1131, 365, 1091, 330, 197, 225, 1124, 1128, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	1697, 952, 0, 0, 1694, 0, 0, 0, 0, 1692,
	0, 238, 1693, 1691, 245, 1696, 0, 917, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 606, 0, 0, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 398, 0,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 86,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 95,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 606, 0, 0, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	398, 0, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 196, 221, 368, 94, 454, 288, 645, 614,
	484, 609, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 2403, 0, 0, 2402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 1759, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 1761, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 1763, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 606, 0, 0, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 1465, 0, 1466,
	1467, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 398, 0, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 86, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 95, 0, 1736, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 606, 0,
	0, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 398, 0, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 196, 221, 368, 94,
	454, 288, 645, 614, 484, 609, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 95, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 2403, 0,
	0, 2402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 2350, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	1942, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 606, 0, 0, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 2348,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 398, 0,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 606, 0, 0, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 1085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 365, 1091, 330, 197, 225,
	1089, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	398, 0, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 2350, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 1942, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 606, 0, 0, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 398, 0, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 1736, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 606, 0,
	0, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 624, 0, 0, 0, 3701, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 398, 0, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 2109, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	2852, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 606, 0, 0, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 398, 0,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 2837, 0,
	0, 0, 0, 238, 0, 0, 245, 2838, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 606, 0, 0, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	398, 0, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 1782, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 1781, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 606, 0, 0, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 398, 0, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 719, 720, 721,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 606, 0,
	0, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 398, 0, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 624, 0, 0, 0, 4045, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	1942, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 606, 0, 0, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 398, 0,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 606, 0, 0, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 624, 0, 0,
	0, 3701, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	398, 0, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 606, 0, 0, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 398, 0, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 0, 0, 0, 2404,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 606, 0,
	0, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 398, 0, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 1763, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 606, 0, 0, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 398, 0,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	196, 221, 368, 2056, 454, 288, 645, 614, 484, 609,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 2047, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 606, 0, 0, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	398, 0, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	1909, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 606, 0, 0, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 398, 0, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 1907, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 606, 0,
	0, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 398, 0, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 1905, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 1903, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 606, 0, 0, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 398, 0,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 1901, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 606, 0, 0, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	398, 0, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	1897, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 606, 0, 0, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 398, 0, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 1895, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 606, 0,
	0, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 398, 0, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 1893, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 1868, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 606, 0, 0, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 0, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 398, 0,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 1767,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 606, 0, 0, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	398, 0, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 409,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 95, 0, 0, 0, 952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 606, 0, 0, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 398, 0, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 606, 0,
	0, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1444, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 398, 0, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 1443, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1042,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	396, 0, 376, 575, 576, 316, 0, 0, 527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 366, 267, 0, 0, 204, 505, 0,
	430, 0, 203, 0, 487, 252, 377, 374, 582, 282,
	273, 269, 250, 317, 385, 428, 517, 422, 0, 370,
	0, 0, 497, 401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	248, 325, 202, 413, 498, 286, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 245, 0, 0, 0, 351, 360,
	359, 339, 340, 342, 344, 350, 357, 363, 336, 345,
	0, 0, 606, 0, 0, 0, 265, 321, 272, 264,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 0, 402, 257,
	0, 453, 0, 670, 0, 624, 0, 0, 0, 0,
	0, 0, 0, 365, 0, 330, 197, 225, 0, 0,
	412, 461, 473, 0, 0, 0, 253, 0, 471, 426,
	601, 233, 284, 458, 432, 469, 440, 287, 0, 0,
	470, 372, 584, 450, 598, 625, 626, 263, 406, 611,
	521, 619, 643, 226, 260, 420, 506, 604, 494, 397,
	580, 581, 329, 493, 295, 201, 369, 631, 224, 479,
	371, 242, 231, 586, 608, 299, 289, 456, 638, 213,
	516, 596, 239, 483, 0, 0, 646, 247, 504, 215,
	593, 503, 393, 326, 327, 214, 0, 457, 268, 293,
	0, 0, 258, 415, 588, 589, 256, 647, 228, 618,
	220, 0, 617, 408, 583, 594, 394, 383, 219, 592,
	392, 382, 334, 355, 356, 280, 307, 447, 375, 448,
	306, 308, 404, 403, 405, 207, 605, 0, 208, 0,
	499, 607, 648, 452, 212, 234, 235, 237, 0, 279,
	283, 291, 294, 303, 304, 313, 367, 419, 446, 442,
	451, 0, 578, 599, 612, 623, 629, 630, 632, 633,
	634, 635, 636, 639, 637, 407, 311, 495, 333, 373,
	0, 0, 425, 472, 240, 603, 496, 199, 0, 0,
	0, 0, 254, 255, 0, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 644, 507, 513, 508, 509, 510, 511,
	512, 0, 514, 0, 0, 0, 0, 0, 398, 0,
	590, 591, 667, 384, 486, 600, 335, 349, 352, 341,
	361, 0, 362, 337, 338, 343, 346, 347, 348, 353,
	354, 358, 364, 249, 210, 390, 399, 577, 312, 216,
	217, 218, 523, 524, 525, 526, 615, 616, 620, 205,
	462, 463, 464, 465, 292, 610, 309, 468, 467, 331,
	332, 379, 449, 539, 541, 552, 556, 558, 560, 566,
	569, 540, 542, 553, 557, 559, 561, 567, 570, 529,
	531, 533, 535, 548, 547, 544, 572, 573, 550, 555,
	534, 546, 551, 564, 571, 568, 528, 532, 536, 545,
	563, 562, 543, 554, 565, 549, 537, 530, 538, 0,
	196, 221, 368, 0, 454, 288, 645, 614, 484, 609,
	206, 223, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 200, 209, 222, 232,
	236, 243, 261, 276, 278, 285, 298, 310, 318, 319,
	322, 328, 380, 386, 387, 388, 389, 409, 410, 411,
	414, 417, 418, 421, 423, 424, 427, 431, 435, 436,
	437, 439, 441, 443, 455, 460, 474, 475, 476, 477,
	478, 481, 482, 488, 489, 490, 491, 492, 500, 501,
	515, 585, 587, 602, 621, 627, 480, 301, 302, 444,
	445, 314, 315, 641, 642, 300, 597, 628, 595, 640,
	622, 438, 378, 0, 0, 381, 281, 305, 320, 0,
	613, 502, 227, 466, 290, 251, 0, 0, 211, 246,
	230, 259, 274, 277, 324, 391, 400, 429, 434, 296,
	271, 244, 459, 241, 485, 518, 519, 520, 522, 395,
	266, 433, 396, 0, 376, 575, 576, 316, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 366, 267, 0, 0, 204,
	505, 0, 430, 0, 203, 0, 487, 252, 377, 374,
	582, 282, 273, 269, 250, 317, 385, 428, 517, 422,
	0, 370, 0, 0, 497, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 248, 325, 202, 413, 498, 286, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 245, 0, 0, 0,
	351, 360, 359, 339, 340, 342, 344, 350, 357, 363,
	336, 345, 0, 0, 606, 0, 0, 0, 265, 321,
	272, 264, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 0,
	402, 257, 0, 453, 0, 0, 0, 624, 0, 0,
	0, 0, 0, 0, 0, 365, 0, 330, 197, 225,
	0, 0, 412, 461, 473, 0, 0, 0, 253, 0,
	471, 426, 601, 233, 284, 458, 432, 469, 440, 287,
	0, 0, 470, 372, 584, 450, 598, 625, 626, 263,
	406, 611, 521, 619, 643, 226, 260, 420, 506, 604,
	494, 397, 580, 581, 329, 493, 295, 201, 369, 631,
	224, 479, 371, 242, 231, 586, 608, 299, 289, 456,
	638, 213, 516, 596, 239, 483, 0, 0, 646, 247,
	504, 215, 593, 503, 393, 326, 327, 214, 0, 457,
	268, 293, 0, 0, 258, 415, 588, 589, 256, 647,
	228, 618, 220, 0, 617, 408, 583, 594, 394, 383,
	219, 592, 392, 382, 334, 355, 356, 280, 307, 447,
	375, 448, 306, 308, 404, 403, 405, 207, 605, 0,
	208, 0, 499, 607, 648, 452, 212, 234, 235, 237,
	0, 279, 283, 291, 294, 303, 304, 313, 367, 419,
	446, 442, 451, 0, 578, 599, 612, 623, 629, 630,
	632, 633, 634, 635, 636, 639, 637, 407, 311, 495,
	333, 373, 0, 0, 425, 472, 240, 603, 496, 199,
	0, 0, 0, 0, 254, 255, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 644, 507, 513, 508, 509,
	510, 511, 512, 0, 514, 0, 0, 0, 0, 0,
	398, 0, 590, 591, 667, 384, 486, 600, 335, 349,
	352, 341, 361, 0, 362, 337, 338, 343, 346, 347,
	348, 353, 354, 358, 364, 249, 210, 390, 399, 577,
	312, 216, 217, 218, 523, 524, 525, 526, 615, 616,
	620, 205, 462, 463, 464, 465, 292, 610, 309, 468,
	467, 331, 332, 379, 449, 539, 541, 552, 556, 558,
	560, 566, 569, 540, 542, 553, 557, 559, 561, 567,
	570, 529, 531, 533, 535, 548, 547, 544, 572, 573,
	550, 555, 534, 546, 551, 564, 571, 568, 528, 532,
	536, 545, 563, 562, 543, 554, 565, 549, 537, 530,
	538, 0, 196, 221, 368, 0, 454, 288, 645, 614,
	484, 609, 206, 223, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 200, 209,
	222, 232, 236, 243, 261, 276, 278, 285, 298, 310,
	318, 319, 322, 328, 380, 386, 387, 388, 389, 4111,
	410, 411, 414, 417, 418, 421, 423, 424, 427, 431,
	435, 436, 437, 439, 441, 443, 455, 460, 474, 475,
	476, 477, 478, 481, 482, 488, 489, 490, 491, 492,
	500, 501, 515, 585, 587, 602, 621, 627, 480, 301,
	302, 444, 445, 314, 315, 641, 642, 300, 597, 628,
	595, 640, 622, 438, 378, 0, 0, 381, 281, 305,
	320, 0, 613, 502, 227, 466, 290, 251, 0, 0,
	211, 246, 230, 259, 274, 277, 324, 391, 400, 429,
	434, 296, 271, 244, 459, 241, 485, 518, 519, 520,
	522, 395, 266, 433, 396, 0, 376, 575, 576, 316,
	0, 0, 527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 366, 267, 0,
	0, 204, 505, 0, 430, 0, 203, 0, 487, 252,
	377, 374, 582, 282, 273, 269, 250, 317, 385, 428,
	517, 422, 0, 370, 0, 0, 497, 401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 248, 325, 202, 413, 498, 286,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 245, 0,
	0, 0, 351, 360, 359, 339, 340, 342, 344, 350,
	357, 363, 336, 345, 0, 0, 606, 0, 0, 0,
	265, 321, 272, 264, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 402, 257, 0, 453, 0, 0, 0, 624,
	0, 0, 0, 0, 0, 0, 0, 365, 0, 330,
	197, 225, 0, 0, 412, 461, 473, 0, 0, 0,
	253, 0, 471, 426, 601, 233, 284, 458, 432, 469,
	440, 287, 0, 0, 470, 372, 584, 450, 598, 625,
	626, 263, 406, 611, 521, 619, 643, 226, 260, 420,
	506, 604, 494, 397, 580, 581, 329, 493, 295, 201,
	369, 631, 224, 479, 371, 242, 231, 586, 608, 299,
	289, 456, 638, 213, 516, 596, 239, 483, 0, 0,
	646, 247, 504, 215, 593, 503, 393, 326, 327, 214,
	0, 457, 268, 293, 0, 0, 258, 415, 588, 589,
	256, 647, 228, 618, 220, 0, 617, 408, 583, 594,
	394, 383, 219, 592, 392, 382, 334, 355, 356, 280,
	307, 447, 375, 448, 306, 308, 404, 403, 405, 207,
	605, 0, 208, 0, 499, 607, 648, 452, 212, 234,
	235, 237, 0, 279, 283, 291, 294, 303, 304, 313,
	367, 419, 446, 442, 451, 0, 578, 599, 612, 623,
	629, 630, 632, 633, 634, 635, 636, 639, 637, 407,
	311, 495, 333, 373, 0, 0, 425, 472, 240, 603,
	496, 199, 0, 0, 0, 0, 254, 255, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 644, 507, 513,
	508, 509, 510, 511, 512, 0, 514, 0, 0, 0,
	0, 0, 398, 0, 590, 591, 667, 384, 486, 600,
	335, 349, 352, 341, 361, 0, 362, 337, 338, 343,
	346, 347, 348, 353, 354, 358, 364, 249, 210, 390,
	399, 577, 312, 216, 217, 218, 523, 524, 525, 526,
	615, 616, 620, 205, 462, 463, 464, 465, 292, 610,
	309, 468, 467, 331, 332, 379, 449, 539, 541, 552,
	556, 558, 560, 566, 569, 540, 542, 553, 557, 559,
	561, 567, 570, 529, 531, 533, 535, 548, 547, 544,
	572, 573, 550, 555, 534, 546, 551, 564, 571, 568,
	528, 532, 536, 545, 563, 562, 543, 554, 565, 549,
	537, 530, 538, 0, 196, 221, 368, 0, 454, 288,
	645, 614, 484, 609, 206, 223, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	200, 209, 222, 232, 236, 243, 261, 276, 278, 285,
	298, 310, 318, 319, 322, 328, 380, 386, 387, 388,
	389, 409, 410, 411, 414, 417, 418, 421, 423, 424,
	427, 431, 435, 436, 437, 439, 441, 443, 455, 460,
	474, 475, 476, 477, 478, 481, 482, 488, 489, 490,
	491, 492, 500, 501, 515, 585, 587, 602, 621, 627,
	480, 301, 302, 444, 445, 314, 315, 641, 642, 300,
	597, 628, 595, 640, 622, 438, 378, 0, 0, 381,
	281, 305, 320, 0, 613, 502, 227, 466, 290, 251,
	0, 0, 211, 246, 230, 259, 274, 277, 324, 391,
	400, 429, 434, 296, 271, 244, 459, 241, 485, 518,
	519, 520, 522, 395, 266, 433, 396, 0, 376, 575,
	576, 316, 0, 0, 527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 366,
	267, 0, 0, 204, 505, 0, 430, 0, 203, 0,
	487, 252, 377, 374, 582, 282, 273, 269, 250, 317,
	385, 428, 517, 422, 0, 370, 0, 0, 497, 401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 248, 325, 202, 413,
	498, 286, 0, 0, 0, 0, 0, 952, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	245, 0, 0, 0, 351, 360, 359, 339, 340, 342,
	344, 350, 357, 363, 336, 345, 0, 0, 606, 0,
	0, 0, 265, 321, 272, 264, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 402, 257, 0, 453, 0, 0,
	0, 624, 0, 0, 0, 0, 0, 0, 0, 365,
	0, 330, 197, 225, 0, 0, 412, 461, 473, 0,
	0, 0, 253, 0, 471, 426, 601, 233, 284, 458,
	432, 469, 440, 287, 0, 0, 470, 372, 584, 450,
	598, 625, 626, 263, 406, 611, 521, 619, 643, 226,
	260, 420, 506, 604, 494, 397, 580, 581, 329, 493,
	295, 201, 369, 631, 224, 479, 371, 242, 231, 586,
	608, 299, 289, 456, 638, 213, 516, 596, 239, 483,
	0, 0, 646, 247, 504, 215, 593, 503, 393, 326,
	327, 214, 0, 457, 268, 293, 0, 0, 258, 415,
	588, 589, 256, 647, 228, 618, 220, 0, 617, 408,
	583, 594, 394, 383, 219, 592, 392, 382, 334, 355,
	356, 280, 307, 447, 375, 448, 306, 308, 404, 403,
	405, 207, 605, 0, 208, 0, 499, 607, 648, 452,
	212, 234, 235, 237, 0, 279, 283, 291, 294, 303,
	304, 313, 367, 419, 446, 442, 451, 0, 578, 599,
	612, 623, 629, 630, 632, 633, 634, 635, 636, 639,
	637, 407, 311, 495, 333, 373, 0, 0, 425, 472,
	240, 603, 496, 199, 0, 0, 0, 0, 254, 255,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 644,
	507, 513, 508, 509, 510, 511, 512, 0, 514, 0,
	0, 0, 0, 0, 398, 0, 590, 591, 667, 384,
	486, 600, 335, 349, 352, 341, 361, 0, 362, 337,
	338, 343, 346, 347, 348, 353, 354, 358, 364, 249,
	210, 390, 399, 577, 312, 216, 217, 218, 523, 524,
	525, 526, 615, 616, 620, 205, 462, 463, 464, 465,
	292, 610, 309, 468, 467, 331, 332, 379, 449, 539,
	541, 552, 556, 558, 560, 566, 569, 540, 542, 553,
	557, 559, 561, 567, 570, 529, 531, 533, 535, 548,
	547, 544, 572, 573, 550, 555, 534, 546, 551, 564,
	571, 568, 528, 532, 536, 545, 563, 562, 543, 554,
	565, 549, 537, 530, 538, 0, 196, 221, 368, 0,
	454, 288, 645, 614, 484, 609, 206, 223, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 200, 209, 222, 232, 236, 243, 261, 276,
	278, 285, 298, 310, 318, 319, 322, 328, 380, 386,
	387, 388, 389, 409, 410, 411, 414, 417, 418, 421,
	423, 424, 427, 431, 435, 436, 437, 439, 441, 443,
	455, 460, 474, 475, 476, 477, 478, 481, 482, 488,
	489, 490, 491, 492, 500, 501, 515, 585, 587, 602,
	621, 627, 480, 301, 302, 444, 445, 314, 315, 641,
	642, 300, 597, 628, 595, 640, 622, 438, 378, 0,
	0, 381, 281, 305, 320, 0, 613, 502, 227, 466,
	290, 251, 0, 0, 211, 246, 230, 259, 274, 277,
	324, 391, 400, 429, 434, 296, 271, 244, 459, 241,
	485, 518, 519, 520, 522, 395, 266, 433, 396, 0,
	376, 575, 576, 316, 0, 0, 527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 366, 267, 0, 0, 204, 505, 0, 430, 0,
	203, 0, 487, 252, 377, 374, 582, 282, 273, 269,
	250, 317, 385, 428, 517, 422, 0, 370, 0, 0,
	497, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 248, 325,
	202, 413, 498, 286, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 245, 0, 0, 0, 351, 360, 359, 339,
	340, 342, 344, 350, 357, 363, 336, 345, 0, 0,
	606, 0, 0, 0, 265, 321, 272, 264, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 402, 257, 0, 453,
	0, 0, 0, 624, 0, 0, 0, 0, 0, 0,
	0, 365, 0, 330, 197, 225, 0, 0, 412, 461,
	473, 0, 0, 0, 253, 0, 471, 426, 601, 233,
	284, 458, 432, 469, 440, 287, 0, 0, 470, 372,
	584, 450, 598, 625, 626, 263, 406, 611, 521, 619,
	643, 226, 260, 420, 506, 604, 494, 397, 580, 581,
	329, 493, 295, 201, 369, 631, 224, 479, 371, 242,
	231, 586, 608, 299, 289, 456, 638, 213, 516, 596,
	239, 483, 0, 0, 646, 247, 504, 215, 593, 503,
	393, 326, 327, 214, 0, 457, 268, 293, 0, 0,
	258, 415, 588, 589, 256, 647, 228, 618, 220, 0,
	617, 408, 583, 594, 394, 383, 219, 592, 392, 382,
	334, 355, 356, 280, 307, 447, 375, 448, 306, 308,
	404, 403, 405, 207, 605, 0, 208, 0, 499, 607,
	648, 452, 212, 234, 235, 237, 0, 279, 283, 291,
	294, 303, 304, 313, 367, 419, 446, 442, 451, 0,
	578, 599, 612, 623, 629, 630, 632, 633, 634, 635,
	636, 639, 637, 407, 311, 495, 333, 373, 0, 0,
	425, 472, 240, 603, 496, 199, 0, 0, 0, 0,
	254, 255, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 644, 507, 513, 508, 509, 510, 511, 512, 0,
	514, 0, 0, 0, 0, 0, 398, 0, 590, 591,
	667, 384, 486, 600, 335, 349, 352, 341, 361, 0,
	362, 337, 338, 343, 346, 347, 348, 353, 354, 358,
	364, 249, 210, 390, 399, 577, 312, 216, 217, 218,
	523, 524, 525, 526, 615, 616, 620, 205, 462, 463,
	464, 465, 292, 610, 309, 468, 467, 331, 332, 379,
	449, 539, 541, 552, 556, 558, 560, 566, 569, 540,
	542, 553, 557, 559, 561, 567, 570, 529, 531, 533,
	535, 548, 547, 544, 572, 573, 550, 555, 534, 546,
	551, 564, 571, 568, 528, 532, 536, 545, 563, 562,
	543, 554, 565, 549, 537, 530, 538, 0, 196, 221,
	368, 0, 454, 288, 645, 614, 484, 609, 206, 223,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 200, 209, 222, 232, 236, 243,
	261, 276, 278, 285, 298, 310, 318, 319, 322, 328,
	380, 386, 387, 388, 389, 409, 410, 411, 414, 417,
	418, 421, 423, 424, 427, 431, 435, 436, 437, 439,
	441, 443, 455, 460, 474, 475, 476, 477, 478, 481,
	482, 488, 489, 490, 491, 492, 500, 501, 515, 585,
	587, 602, 621, 627, 480, 301, 302, 444, 445, 314,
	315, 641, 642, 300, 597, 628, 595, 640, 622, 438,
	378, 0, 0, 381, 281, 305, 320, 0, 613, 502,
	227, 466, 290, 251, 0, 0, 211, 246, 230, 259,
	274, 277, 324, 391, 400, 429, 434, 296, 271, 244,
	459, 241, 485, 518, 519, 520, 522, 395, 266, 433,
	0, 0, 376, 575, 576, 316,
}

var yyPact = [...]int{
	-1000, -1000, 5002, -1000, -543, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2499, 2504, -1000, -1000, -1000, -1000, 2666, -1000, 1045,
	2083, -1000, 2425, 5020, -1000, 55834, 808, -1000, 52906, -446,
	922, 238, 36802, -1000, 226, -1000, 205, 54370, 218, -1000,
	-1000, -1000, -1000, -446, 22162, 2341, 47, 41, 55834, -1000,
	-1000, -1000, -1000, -363, 2613, 2073, -1000, 389, -1000, -1000,
	-1000, -1000, -1000, -1000, 52174, -1000, 1137, -1000, -1000, 2476,
	2470, 2311, 948, 2319, -1000, 2534, 2073, -1000, 22162, 2603,
	2453, 21430, 21430, 471, -1000, -1000, 596, -1000, -1000, 31678,
	55834, 39730, 284, -1000, 2425, -1000, -1000, -1000, 214, -1000,
	381, 1998, -1000, 1993, -1000, 1053, 1064, 402, 864, 841,
	401, 398, 397, 396, 395, 393, 392, 388, 394, -1000,
	963, 963, -223, -225, 1390, 786, 459, 459, 1098, 503,
	2392, 2387, -1000, -1000, 963, 963, 963, 363, 963, 963,
	963, 963, 334, 332, 963, 963, 963, 963, 963, 963,
	963, 963, 963, 963, 963, 963, 963, 963, 963, 963,
	963, 959, 2425, 321, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55834, 211,
	55834, -1000, 865, 804, -1000, -1000, -450, 1113, 1113, 117,
	1113, 1113, 1113, 1113, 181, 951, 40, -1000, 175, 289,
	225, 307, 1116, 269, -1000, -1000, 291, 1116, 1800, -1000,
	952, 302, 159, -1000, 1113, 1113, -1000, 14818, 263, 14818,
	14818, -1000, 2420, -1000, -1000, -1000, -1000, -1000, 1339, -1000,
	-1000, -1000, -1000, -49, 493, -1000, -1000, -1000, -1000, 54370,
	51442, 234, -1000, -1000, 45, 1857, 1527, 22162, 1439, 946,
	-1000, -1000, 1369, 927, -1000, -1000, -1000, -1000, -1000, 829,
	-1000, 24358, 24358, 24358, 24358, -1000, -1000, 2000, 50710, 2000,
	2000, 24358, 2000, 24358, 2000, 2000, 2000, 2000, 22162, 2000,
	2000, 2000, 2000, -1000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, -1000, -1000, -1000, -1000, 2000, 863, 2000,
	2000, 2000, 2000, 2000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2000, 2000, 2000, 2000, 2000, 2000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	-1000, -1000, -1000, 1605, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 27286, 1540, 1536, 1533, -1000, 19234, 2000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55834,
	-1000, 2000, 243, 54370, 54370, 366, 1322, -1000, -1000, 2534,
	2073, -1000, 2613, 2562, 389, -1000, 3064, 1622, 1778, 1500,
	2073, 1937, 55834, -1000, 2007, -1000, -1000, -1000, -382, -386,
	2258, 1438, 1794, -1000, -1000, -1000, -1000, 1905, 22162, -1000,
	-1000, 2647, -1000, 28750, 862, 2643, 49978, -1000, 471, 471,
	1982, 593, -5, -1000, -1000, -1000, -1000, 993, 36070, -1000,
	-1000, -1000, -1000, -1000, 1883, 55834, -1000, -1000, 5010, 54370,
	-1000, 2081, -1000, 1872, -1000, 2037, 22162, 2091, 803, 54370,
	526, 521, 489, -1000, -64, -1000, -1000, -1000, -1000, -1000,
	-1000, 963, 963, 963, -1000, 387, 2598, 5020, 6408, -1000,
	-1000, -1000, 49246, 2078, 54370, -1000, 2072, -1000, 1075, 850,
	827, 827, 54370, -1000, -1000, 55102, 54370, 1074, 1073, 54370,
	54370, 54370, 54370, -1000, 48514, -1000, 47782, 47050, 1318, 54370,
	46318, 45586, 44854, 44122, 43390, -1000, 2244, -1000, 2094, -1000,
	-1000, -1000, 55102, 54370, 54370, 55102, 54370, 55102, 55834, 54370,
	-1000, -1000, 328, -1000, -1000, 1317, 1316, 1313, 963, 963,
	1297, 1789, 1787, 1780, 963, 963, 1280, 1772, 38266, 1767,
	310, 1278, 1277, 1275, 1341, 1720, 260, 1714, 1321, 1272,
	1270, 54370, 2067, 55834, -1000, 280, 1122, 976, 992, 2425,
	2320, 1977, 490, 802, 54370, 463, 463, 54370, -1000, 15556,
	55834, 228, -1000, 1712, 22162, -1000, 1132, 1116, 1116, -1000,
	-1000, -1000, -1000, -1000, -1000, 1113, 55834, 1132, -1000, -1000,
	-1000, 1116, 1113, 55834, 1113, 1113, 1113, 1113, 1116, 1116,
	1116, 1113, 55834, 55834, 55834, 55834, 55834, 55834, 55834, 55834,
	55834, 14818, 952, 1113, -453, -1000, 1691, -1000, -1000, -1000,
	2212, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14818, 14818,
	-1000, -1000, -1000, -1000, -1000, 1973, -1000, 202, 17, 213,
	-1000, 42658, 456, 991, -1000, 456, -1000, -1000, -1000, 1968,
	41926, -1000, -454, -455, -460, -461, -1000, -1000, -1000, -462,
	-463, -1000, -1000, -1000, 22162, 22162, 22162, 22162, -313, -1000,
	1482, 24358, 2393, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22162, 301, 1226, 24358, 24358, 24358, 24358, 24358, 24358, 24358,
	25822, 25090, 24358, 24358, 24358, 24358, 24358, 24358, -1000, -1000,
	33874, 5565, 5565, 927, 927, 927, 927, -1000, -187, 1964,
	55102, -1000, -1000, -1000, 849, 22162, 22162, 927, -1000, 1338,
	1583, 19234, 22162, 22162, 22162, 22162, 1000, 1527, 55102, 22162,
	-1000, 1500, -1000, -1000, -1000, -1000, 1235, -1000, -1000, 1102,
	2384, 2384, 2384, 2384, 22162, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 2384, 22162, 136, 136, 729, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, 17770, 22162, 22162,
	24358, 22162, 22162, 22162, 1500, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 1500, 22162, 1517, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 17032, 22162, 22162, 22162, 22162, 22162,
	-1000, -1000, -1000, -1000, -1000, -1000, 22162, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 1500, 22162, 22162, 22162, 22162, 22162,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1636, 1417, 1490, 22162, -1000, 1959, -1000, -190, 30946,
	22162, 1679, 2640, 2115, 54370, -1000, -1000, -1000, -1000, 2534,
	-1000, 2534, 1636, 2747, 2266, 21430, -1000, -1000, 2747, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1718, -1000,
	55834, 1937, 2527, 54370, -1000, -356, -1000, -357, 2255, 1677,
	885, -1000, 22162, 22162, 1935, -1000, 1803, 55834, -1000, -313,
	-1000, 41194, -1000, -1000, 14080, 55834, 383, 55834, -1000, 30214,
	40462, 313, -1000, -5, 1917, -1000, 7, 15, 18502, 924,
	-1000, -1000, -1000, 1390, 26554, 1826, 924, 120, -1000, -1000,
	-1000, 2037, -1000, 2037, 2037, 2037, 2037, 885, 885, 885,
	885, -1000, -1000, -1000, -1000, -1000, 2061, 2057, -1000, 2037,
	2037, 2037, 2037, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2047, 2047, 2047, 2044, 2044, 2038, 2038, 446, -1000, 22162,
	432, 39730, 2520, 1269, 2369, 280, 469, 2102, 54370, 54370,
	54370, 469, -1000, 1377, 1375, 1354, -1000, -525, 1932, -1000,
	-1000, 2595, -1000, -1000, 909, 1104, 1093, 1076, 54370, 255,
	359, -1000, 438, -1000, 39730, 54370, 1069, 827, 54370, -1000,
	54370, -1000, -1000, -1000, -1000, -1000, 54370, -1000, -1000, 1931,
	-1000, 1876, 1142, 1090, 1133, 1088, 1931, -1000, -1000, -189,
	1931, -1000, 1931, -1000, 1931, -1000, 1931, -1000, 1931, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1024, 130,
	-338, 54370, 255, 488, -1000, 486, 33874, -1000, -1000, -1000,
	33874, 33874, -1000, -1000, -1000, -1000, 1638, 1634, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -512, 55834, -1000,
	267, 989, 348, 385, 345, 55834, 412, 2388, 2383, 2381,
	2378, 2372, 2371, 286, 331, 55834, 55834, 463, 2214, 55834,
	2501, 55834, -1000, -1000, -1000, -1000, -1000, 1631, 1623, -1000,
	1527, 55834, -1000, -1000, 1113, 1113, -1000, -1000, 55834, 1113,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1113, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 55834, -1000, -1000, -1000, -1000, -49,
	195, -1000, -1000, 54370, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -113, -1000, 303, 3, 425, -1000, -1000,
	-1000, -1000, -1000, 2511, -1000, 1527, 1020, 1025, -1000, 2000,
	-1000, -1000, 1299, -1000, -1000, -1000, -1000, -1000, 2000, 2000,
	2000, -1000, -1000, -1000, -1000, -1000, 301, 24358, 24358, 24358,
	1380, 793, 1392, 1327, 1228, 1285, 1285, 1185, 24358, 1185,
	24358, 931, 931, 931, 931, 931, -1000, -1000, -1000, -1000,
	-1000, -1000, 1605, -1000, 1584, -1000, 2000, 55102, 1867, 17032,
	1939, 2054, 1500, 940, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4265, 1500, 1857, 1500, 2049, 4258,
	1001, -1000, 22162, 1500, 4250, -1000, -1000, 1500, 1500, 22162,
	-1000, -1000, 22162, 22162, 22162, 22162, 2369, 2369, 2369, 2369,
	2369, 2369, 2369, 2369, 2369, 2369, 22162, 2369, 1923, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1921, 2638, 1820,
	2369, 2369, 2369, 2369, 4245, 2369, 2369, 22162, 1430, -1000,
	-1000, -1000, 1499, 4240, 1303, 4225, 2369, 2369, -1000, 2369,
	4220, 4212, 1500, 3009, 3000, 2369, 2369, 2369, 2369, 2369,
	2938, 2934, 2369, 2369, 2930, 2369, 4206, 2369, 2919, 2903,
	2768, 2754, 2709, 2691, 2676, 2664, 2650, 2646, 2632, 2605,
	2599, 2569, 2536, 2529, 2522, 2509, 2369, 2369, 2369, 4202,
	2369, 4197, 2369, 4191, 2369, 2369, 4180, 2494, 2469, 1500,
	1920, -1000, 4174, 2369, 3948, 3942, 3917, 2463, 3912, 3892,
	3888, 2369, 2369, 2369, 2446, 3883, 3879, 3875, 3572, 3561,
	3516, 3512, 3497, 3493, 2369, 1490, 1490, 1490, 1490, 1490,
	3479, -320, 2369, 1500, -1000, -1000, -1000, -1000, -1000, 3474,
	2428, 3453, 3445, 3437, 3432, 1500, 2000, 847, -1000, -1000,
	1490, 1500, 1500, 1490, 1490, 3404, 3400, 3394, 3389, 3385,
	3362, 2369, 2369, -1000, 2369, 3341, 3319, 2418, 2397, 1500,
	-1000, 1490, 55834, -1000, -445, -1000, -11, 950, 2000, -1000,
	38266, 1500, -1000, 2048, -1000, 1162, -1000, -1000, -1000, -1000,
	-1000, 35338, 1823, -1000, -1000, -1000, -1000, 2000, 1805, -1000,
	-1000, -1000, -1000, 885, 67, 34606, 916, 916, 165, 1527,
	1527, 22162, -1000, -1000, -1000, -1000, -1000, -1000, 844, 2622,
	382, 2000, -1000, 1976, 2114, -1000, -1000, -1000, 2526, 28018,
	-1000, -1000, 2000, 2000, 55834, 1863, 1843, -1000, 843, -1000,
	1345, 1917, -5, 2, -1000, -1000, -1000, -1000, 1527, -1000,
	1350, 386, 369, -1000, 454, -1000, -1000, -1000, -1000, 2360,
	79, -1000, -1000, -1000, 340, 885, -1000, -1000, -1000, -1000,
	-1000, -1000, 1579, 1579, -1000, -1000, -1000, -1000, -1000, 1260,
	-1000, -1000, -1000, -1000, 1253, -1000, -1000, 1245, -1000, -1000,
	3024, 2252, 432, -1000, -1000, 963, 1576, -1000, -1000, 2364,
	963, 963, 54370, -1000, -1000, 1806, 2520, 267, 55834, 1009,
	2211, -1000, 2102, 2102, 2102, 55834, -1000, -1000, -1000, -1000,
	-1000, -1000, -514, 191, 364, -1000, -1000, -1000, 6185, 54370,
	1760, -1000, 249, -1000, 1697, -1000, 54370, -1000, 1758, 2043,
	54370, 54370, -1000, -1000, -1000, 54370, 2000, -1000, -1000, -1000,
	-1000, 789, 2419, 358, -1000, -1000, -344, -1000, -1000, 255,
	249, 55102, 54370, 924, -1000, -1000, -1000, -1000, -1000, -515,
	1743, 507, 264, 487, 55834, 55834, 55834, 55834, 55834, 55834,
	820, -1000, -1000, 31, -1000, -1000, 235, -1000, -1000, -1000,
	-1000, -1000, 235, -1000, -1000, -1000, -1000, -1000, 323, 485,
	-1000, 55834, 55834, 941, -1000, -1000, -1000, -1000, -1000, 1116,
	-1000, -1000, 1116, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2416, 55834, 1, -482, -1000, -476, 22162,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1209, 782, 1392,
	24358, 24358, 1583, 1583, 24358, -1000, -1000, -1000, 357, 357,
	33874, -1000, 24358, 22162, -1000, -1000, 22162, 22162, 22162, 996,
	-1000, 22162, 1340, -1000, 22162, -1000, -320, 1490, 2369, 2369,
	2369, 2369, -320, -320, -320, -320, -320, -320, -320, -320,
	-320, -320, 1930, -1000, 22162, 22162, 22162, 1500, 338, -1000,
	-1000, -1000, -320, 22162, -1000, -1000, 2636, -1000, 22162, -1000,
	33874, 22162, 22162, 22162, -1000, -1000, -1000, 22162, 22162, -1000,
	-1000, 22162, -1000, 22162, -1000, -1000, -1000, -1000, -1000, -1000,
	22162, -1000, 22162, -1000, -1000, -1000, 22162, -1000, 22162, -1000,
	-1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162,
	-1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162,
	-1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162,
	-1000, 22162, -1000, 22162, -1000, 22162, -1000, -1000, -1000, 22162,
	-1000, 22162, -1000, 22162, -1000, -1000, 22162, -1000, 22162, -1000,
	22162, -1000, 22162, 22162, -1000, 22162, 22162, 22162, -1000, 22162,
	22162, 22162, 22162, -1000, -1000, -1000, -1000, 22162, 22162, 22162,
	22162, 22162, 22162, 22162, 22162, 22162, 22162, -1000, -1000, -1000,
	-1000, -1000, -1000, 22162, -1000, 39730, 11, -320, 1517, 11,
	1517, 23626, 875, 828, 22894, -1000, 22162, 16294, -1000, -1000,
	-1000, -1000, -1000, 22162, 22162, 22162, 22162, 22162, 22162, -1000,
	-1000, -1000, 22162, 22162, -1000, 22162, -1000, 22162, -1000, -1000,
	-1000, -1000, -1000, 950, -1000, 873, 846, 827, 54370, -1000,
	-1000, -1000, -1000, 1911, -1000, 2541, -1000, 2279, 2278, 2631,
	2622, 21430, -1000, 30214, -1000, -1000, 54370, -435, -1000, 2308,
	2292, 916, 916, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13342, 2534, 22162, 2210, 55102, 199, -1000, 29482, 54370, 55102,
	30214, 30214, 30214, 30214, 30214, -1000, 2242, 2236, -1000, 2232,
	2226, 2238, 55834, -1000, 1636, 1737, -1000, 22162, 32410, 1864,
	30214, -1000, -1000, 30214, 55834, 12604, -1000, -1000, -3, 6,
	-1000, -1000, -1000, -1000, 1390, -1000, -1000, 1072, 2524, 2350,
	-1000, -1000, -1000, -1000, -1000, 1725, -1000, 1709, 1907, 1696,
	1689, 130, -1000, 2090, 2414, 963, 963, -1000, 1240, -1000,
	1338, 1564, 1562, -1000, -1000, -1000, 505, -1000, 2500, 55834,
	2209, 2152, 2144, -1000, -524, 1232, 2042, 2059, 22162, 2041,
	2582, 1891, 54370, -1000, -1000, 55102, -1000, 281, -1000, 432,
	54370, -1000, -1000, -1000, 359, 55834, -1000, 8587, -1000, -1000,
	-1000, 249, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55834,
	274, -1000, 2040, 1332, -1000, -1000, 2013, -1000, -1000, -1000,
	-1000, -1000, 247, 220, 1558, 229, 1547, 229, -1000, 55834,
	907, 2252, 55834, -1000, -1000, -1000, 1113, 1113, -1000, -1000,
	2410, -1000, 1338, 2369, 24358, 24358, -1000, 927, -1000, -1000,
	320, -292, 2037, 2037, -1000, 2037, 2038, -1000, 2037, 173,
	2037, 146, 2037, -1000, -1000, 1500, 1500, -1000, 1490, 2354,
	1699, 3314, -1000, 1527, 22162, 3250, -1000, -1000, -320, -320,
	-320, -320, -320, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -71, 3034, 2994, 2369, -1000, 2034, 2033,
	-1000, 2369, 22162, 2369, 1500, 2347, 2369, 2369, 2369, 2369,
	2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2338, 2333,
	2327, 2321, 2314, 2306, 2294, 2213, 2207, 2186, 2139, 2074,
	2069, 2063, 2021, 2004, 2369, 2369, 1990, 2369, 1914, 1855,
	-1000, 1527, 1490, 2990, 1490, 2369, 2369, 2981, 256, 2369,
	1686, 1686, 1686, 1686, 1686, 1490, 1490, 1490, 1490, 2369,
	54370, -1000, -320, -1000, -1000, -372, -376, -1000, 1500, -320,
	1900, 24358, 2369, 24358, 24358, 24358, 2369, 1500, -1000, 1830,
	1824, 2659, 1763, 2369, 2502, 2369, 2369, 2369, 1746, -1000,
	2506, 2000, 2506, 2000, 2506, 1655, 1162, 55834, -1000, -1000,
	-1000, -1000, 2622, 2614, -1000, 1899, -1000, 67, 605, -1000,
	2312, 2292, -1000, 2577, 2301, 2576, -1000, -1000, -1000, -1000,
	-1000, 1527, -1000, 2460, 1852, -1000, 973, 1904, -1000, -1000,
	20698, 1660, 2270, 838, 1655, 1886, 2114, 2113, 2134, 2307,
	-1000, -1000, -1000, -1000, 2233, -1000, 2149, -1000, -1000, 2007,
	-1000, 2310, 383, 30214, 1819, 1819, -1000, 836, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1119, 8587, 2660, -1000, 1545,
	-1000, 1337, 196, 1231, -1000, -1000, 963, 963, -1000, 1068,
	1031, -1000, 55834, 2032, -1000, 885, 1543, 885, 1223, -1000,
	-1000, 1221, -1000, -1000, -1000, -1000, 1988, 2197, -1000, -1000,
	-1000, -1000, 55834, -1000, -1000, 55834, 55834, 55834, 2031, 2566,
	-1000, 22162, 2025, 970, 2907, 54370, 54370, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 787, 963,
	-494, 330, 322, 963, 963, 963, -536, -1000, -1000, 1652,
	1643, -1000, -226, -1000, 22162, -1000, -1000, -1000, -1000, -1000,
	1249, 1249, 1540, 1536, 1533, -1000, 2007, -1000, -1000, -1000,
	1661, -1000, -1000, -211, 54370, 54370, 54370, 54370, -1000, -1000,
	-1000, 1149, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 927, 1500, 376, -214, 1500, -1000,
	-1000, 885, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22162, -1000, 22162, -1000, 22162, 1527, 22162, -1000,
	-1000, -1000, -1000, -1000, 2534, 1531, 22162, 22162, -1000, 1206,
	1196, -320, 2369, -1000, -1000, -1000, 22162, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000,
	22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000,
	22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000, 22162, -1000,
	22162, -1000, -1000, 22162, -1000, -1000, -1000, 22162, -1000, 22162,
	-1000, 22162, -1000, -1000, -1000, 22162, 327, 357, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1500,
	379, -1000, -1000, -1000, 2625, -1000, 1500, 22162, 1583, -1000,
	1583, 1583, 1583, -1000, -1000, -1000, 22162, -1000, 22162, 22162,
	-1000, 22162, -1000, 22162, -1000, -1000, -1000, -1000, 22162, 2000,
	2300, 38998, 2000, 38998, 2000, 32410, -1000, -1000, 2614, 2617,
	2560, 2288, 2293, 2293, 2312, -1000, 2559, 2558, -1000, 1524,
	2557, 1518, 1029, -1000, 55102, 22162, -1000, 199, 38266, -1000,
	371, 54370, 199, 54370, -1000, 2542, -1000, -1000, 22162, 2024,
	-1000, 22162, -1000, -1000, -1000, -1000, 5565, 2622, 1819, -1000,
	-1000, 937, -1000, 22162, -1000, 10926, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1492, 1481, -1000, -1000, 2009, 22162,
	-1000, -1000, -1000, 1647, 1644, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2007, -1000, -1000, -1000, -1000, 359, -522,
	2628, 54370, 1172, -1000, 1621, 1891, 333, 199, 1469, 963,
	963, 963, 1163, 1161, 38266, 1613, -1000, 54370, 421, -1000,
	359, -1000, -236, -240, 2369, -1000, -1000, 2518, -1000, -1000,
	16294, -1000, -1000, 2003, 2097, -1000, -1000, -1000, -1000, 2253,
	-185, -218, -1000, -1000, 2369, 2369, 2369, 2058, 1500, -1000,
	2369, 2369, 1637, 1628, -1000, -1000, 2369, 2369, 2369, 2369,
	2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369, 2369,
	2369, 2369, 2369, 2369, 2369, 2369, 1490, 1729, -1000, 327,
	1500, 2133, -1000, -1000, 5565, -1000, -1000, 2542, 2552, 11,
	-1000, -1000, 265, 11, 1527, 1033, 1500, 1500, 1033, 1723,
	2369, 1694, 1676, 2369, 2369, 33142, -1000, 2549, 2538, 1568,
	-1000, -1000, 38998, 1568, 38998, 950, 2617, -343, 22162, 22162,
	2284, 1175, -1000, -1000, -1000, -1000, 1435, 1433, -1000, 1431,
	-1000, 2655, -1000, 1527, -1000, 2000, 199, -1000, 835, 1904,
	-1000, 2534, 1527, 54370, 1527, 73, 2542, -1000, 2369, -1000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000,
	2000, -1000, -1000, 54370, 2580, -1000, -1000, 2514, 1609, 187,
	-1000, 1530, 1891, -1000, -1000, 194, -1000, 22162, -1000, 38266,
	1403, 1400, -1000, -1000, -1000, -1000, -536, -1000, -1000, -1000,
	-1000, -1000, -1000, 389, 1889, -1000, 961, 54370, 55834, -1000,
	2248, -1000, -1000, -1000, -1000, 22162, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 22162, -1000, 1500, 2125, -1000, -352, -1000,
	-495, 22162, -320, -1000, -1000, -320, -1000, -1000, -1000, -1000,
	-1000, 22162, -1000, -1000, 22162, -1000, 22162, -1000, -1000, 1568,
	-1000, -1000, -1000, 37534, -1000, 1568, -1000, 1568, -1000, -343,
	-1000, 1870, -1000, 54370, 1527, 390, -1000, 1158, -1000, -1000,
	-1000, -1000, -1000, 55102, 54370, 1904, 54370, -1000, -1000, 1556,
	1500, 2000, 2534, -1000, 1529, -1000, 389, -1000, 2002, 2059,
	-1000, -1000, -1000, 19966, -1000, -1000, -1000, -1000, -1000, 233,
	-207, 16294, 11866, 1503, -1000, -191, 2369, 1490, -1000, -468,
	-1000, -1000, -1000, -1000, 283, -1000, -1000, 1857, -1000, -1000,
	1650, 1646, 1627, -1000, -1000, -1000, -1000, -1000, -1000, -343,
	-1000, -1000, 2495, -1000, -255, -1000, -1000, 1832, 1441, -1000,
	-1000, -1000, 32410, 53638, -1000, -179, 417, -207, 22162, 2001,
	1500, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -39,
	-1000, -1000, 833, -1000, -1000, -1000, 2013, -215, -1000, -1000,
	-1000, 337, -486, -286, -360, 24358, -1000, 22162, -1000, 22162,
	-1000, 22162, -1000, 54370, 2000, -1000, -1000, -1000, 1419, -1000,
	4251, -388, 2121, -1000, -141, -1000, -1000, -1000, 1117, 1394,
	-1000, -1000, -1000, -1000, -1000, -1000, 2477, 54370, -1000, 439,
	-1000, -1000, 15556, -211, -219, 1011, -1000, -1000, -1000, -1000,
	-1000, 1583, 1522, 1306, 2369, -1000, 54370, -1000, 53638, -381,
	924, 5565, -1000, 2119, 2079, 2630, -1000, -1000, -1000, -1000,
	-1000, -1000, -540, 1399, 277, -1000, -1000, -1000, 337, -361,
	-1000, 22162, -1000, 22162, -1000, 1500, -1000, -1000, 2484, 73,
	-1000, 2652, -1000, 2649, 1005, 1005, -1000, 1145, -540, -1000,
	-1000, -1000, -1000, 2369, 2369, -1000, -393, -1000, -1000, -1000,
	-1000, -1000, 434, 1217, -1000, -1000, -1000, -1000, -1000, 5565,
	-1000, -1000, -1000, 215, 215, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3231, 3230, 26, 4, 38, 37, 3229, 3227, 3226,
	174, 3225, 3223, 3222, 3221, 3220, 3219, 2723, 2712, 2693,
	3218, 3217, 3216, 3214, 3213, 3212, 3211, 3209, 3198, 46,
	95, 75, 102, 187, 201, 3197, 173, 164, 194, 3196,
	3195, 3194, 112, 179, 72, 82, 181, 3193, 3192, 65,
	3189, 3188, 3187, 210, 209, 204, 1107, 3185, 202, 105,
	48, 3182, 3179, 3177, 3176, 3175, 3170, 3169, 3168, 3167,
	3166, 3163, 3160, 3157, 3154, 3153, 3152, 3148, 3145, 307,
	3138, 3135, 17, 3129, 71, 3127, 3125, 3124, 3122, 3120,
	8, 3118, 3115, 23, 32, 59, 3106, 3105, 45, 3103,
	3100, 3099, 3098, 3097, 42, 3095, 24, 3094, 31, 3091,
	3089, 121, 3076, 3071, 3059, 41, 3058, 3055, 3051, 25,
	168, 3048, 3047, 137, 3043, 3042, 3041, 167, 193, 3037,
	2301, 3033, 94, 3029, 3025, 3024, 162, 191, 3021, 114,
	3020, 3019, 3018, 143, 3017, 3309, 3016, 3015, 66, 70,
	195, 3014, 3010, 227, 68, 58, 3009, 13, 16, 3008,
	3007, 67, 63, 3003, 109, 3001, 2992, 97, 84, 2991,
	93, 111, 2989, 2988, 2, 14, 2987, 5, 1, 7,
	101, 2977, 2976, 118, 2972, 2971, 2965, 91, 2962, 2951,
	407, 2945, 87, 126, 98, 81, 2944, 169, 152, 2941,
	2940, 2939, 2935, 2933, 2929, 51, 2927, 2926, 2925, 135,
	288, 116, 2924, 145, 349, 52, 147, 2921, 205, 77,
	197, 186, 2920, 2916, 133, 131, 2914, 2909, 55, 166,
	196, 2908, 96, 127, 120, 170, 89, 128, 2905, 2902,
	56, 62, 2899, 2896, 2895, 2893, 172, 2892, 2889, 60,
	2888, 54, 2887, 165, 2885, 331, 74, 2884, 188, 154,
	2878, 61, 2876, 2870, 73, 130, 117, 27, 2869, 153,
	158, 124, 160, 2867, 2865, 53, 2864, 2863, 2862, 184,
	276, 2854, 2851, 342, 175, 138, 149, 83, 2848, 284,
	2845, 2843, 10, 4461, 7231, 178, 29, 159, 2842, 2837,
	7803, 39, 44, 21, 2836, 208, 2834, 185, 2833, 2832,
	2830, 192, 206, 99, 156, 57, 2829, 2828, 2824, 2822,
	33, 2821, 2807, 2805, 2804, 2803, 2798, 36, 35, 34,
	90, 217, 64, 18, 108, 155, 150, 69, 2794, 2792,
	2789, 115, 92, 2785, 157, 151, 123, 104, 2780, 177,
	142, 119, 2776, 134, 30, 2774, 2767, 2766, 2765, 85,
	2764, 2763, 2762, 2761, 148, 141, 113, 79, 2760, 80,
	106, 144, 146, 50, 2759, 43, 2753, 2750, 28, 180,
	22, 2747, 40, 100, 110, 2745, 6349, 2744, 15, 296,
	189, 2741, 2740, 6, 9, 12, 2734, 2733, 2732, 2731,
	129, 2728, 2714, 2701, 2700, 20, 47, 19, 11, 103,
	136, 76, 2699, 2694, 140, 2689, 2688, 2684, 0, 1032,
	125, 2647, 198,
}

//line sql.y:8691
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 416, 417, 417, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 261, 386, 259, 259, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 420, 420, 185, 185, 183, 183, 184, 184,
	264, 264, 20, 268, 268, 270, 270, 270, 270, 260,
	260, 260, 21, 21, 269, 269, 271, 271, 271, 274,
	274, 274, 274, 314, 314, 314, 22, 22, 22, 22,
	22, 129, 129, 388, 388, 387, 382, 382, 381, 381,
	380, 385, 385, 384, 384, 383, 40, 41, 50, 50,
	50, 50, 51, 52, 389, 389, 355, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 357, 357, 343, 343, 356, 356, 356,
	356, 356, 356, 356, 342, 342, 140, 140, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 404, 404, 404, 403, 403,
	239, 239, 239, 239, 239, 239, 239, 239, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 405, 405, 405, 405, 320, 320, 320,
	320, 323, 323, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 322, 322, 322, 322, 322, 322, 322, 324,
	324, 324, 324, 324, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	326, 326, 326, 326, 326, 326, 326, 326, 341, 341,
	330, 330, 335, 335, 336, 336, 337, 337, 337, 338,
	338, 338, 339, 339, 332, 332, 332, 332, 332, 332,
	332, 332, 332, 334, 334, 333, 333, 333, 344, 369,
	369, 368, 368, 366, 366, 366, 366, 366, 366, 366,
	366, 353, 353, 363, 363, 363, 363, 363, 352, 352,
	348, 348, 348, 349, 349, 350, 350, 347, 347, 351,
	351, 365, 365, 364, 364, 345, 345, 346, 346, 371,
	406, 406, 406, 406, 406, 407, 407, 372, 396, 398,
	398, 398, 397, 397, 394, 395, 393, 393, 393, 393,
	393, 84, 84, 84, 287, 287, 288, 288, 361, 361,
	360, 360, 360, 362, 362, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 282, 282, 282, 392,
	392, 392, 392, 392, 392, 391, 391, 391, 358, 358,
	358, 358, 390, 390, 59, 59, 219, 219, 409, 409,
	411, 411, 411, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 111, 111, 112,
	112, 112, 112, 114, 114, 114, 374, 374, 60, 60,
	3, 3, 173, 175, 176, 176, 174, 174, 174, 174,
	174, 174, 62, 62, 61, 61, 178, 177, 179, 179,
	179, 1, 1, 2, 2, 4, 4, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 340,
	340, 340, 373, 373, 375, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 117, 116, 116, 115, 118,
	118, 118, 118, 118, 118, 118, 118, 377, 377, 377,
	63, 63, 378, 327, 328, 329, 5, 6, 354, 376,
	125, 125, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 281, 281, 290,
	290, 280, 280, 305, 305, 305, 283, 283, 283, 284,
	284, 402, 402, 402, 277, 277, 66, 66, 66, 306,
	306, 306, 306, 69, 69, 412, 412, 413, 413, 414,
	414, 414, 70, 71, 71, 309, 309, 310, 310, 72,
	73, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	110, 110, 110, 10, 10, 10, 10, 81, 81, 81,
	9, 9, 11, 68, 68, 75, 399, 399, 400, 401,
	401, 401, 401, 76, 78, 27, 27, 27, 27, 27,
	27, 135, 135, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 130, 130, 130, 124, 124,
	421, 79, 80, 80, 128, 128, 128, 121, 121, 121,
	127, 127, 127, 12, 12, 13, 263, 263, 14, 14,
	134, 134, 133, 133, 136, 136, 136, 136, 136, 136,
	136, 131, 131, 132, 132, 132, 132, 298, 298, 298,
	297, 297, 167, 167, 169, 168, 168, 170, 170, 171,
	171, 171, 171, 217, 217, 193, 193, 256, 256, 257,
	257, 255, 255, 262, 262, 258, 258, 258, 258, 265,
	265, 172, 172, 172, 172, 180, 180, 181, 181, 182,
	182, 308, 308, 303, 303, 303, 302, 302, 186, 186,
	186, 188, 187, 187, 187, 187, 189, 189, 191, 191,
	190, 190, 192, 197, 197, 196, 196, 194, 194, 194,
	194, 194, 194, 195, 195, 195, 195, 198, 198, 145,
	145, 145, 145, 145, 145, 145, 145, 410, 410, 159,
	159, 159, 159, 159, 159, 159, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 246, 246, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 222,
	222, 221, 221, 87, 87, 87, 88, 88, 89, 89,
	89, 89, 89, 90, 90, 90, 90, 90, 90, 90,
	92, 92, 91, 91, 212, 212, 295, 295, 93, 94,
	94, 95, 95, 98, 98, 97, 96, 96, 102, 102,
	99, 99, 101, 101, 100, 103, 103, 104, 105, 105,
	278, 278, 199, 199, 208, 208, 208, 208, 200, 200,
	201, 201, 201, 201, 201, 201, 209, 209, 209, 216,
	210, 210, 206, 206, 204, 204, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 164, 164,
	164, 164, 227, 227, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 152,
	152, 165, 165, 165, 165, 166, 166, 166, 166, 166,
	166, 166, 316, 316, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 422, 422, 331, 331, 331, 207, 207, 207,
	207, 207, 126, 126, 126, 126, 126, 313, 313, 313,
	317, 317, 317, 315, 315, 315, 315, 315, 315, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 318, 318,
	225, 225, 122, 122, 223, 223, 224, 226, 226, 218,
	218, 218, 218, 220, 220, 203, 203, 203, 228, 228,
	319, 319, 229, 229, 106, 107, 107, 108, 108, 230,
	230, 232, 231, 231, 233, 234, 234, 234, 235, 235,
	236, 236, 236, 49, 49, 49, 49, 49, 44, 44,
	44, 44, 45, 45, 45, 45, 137, 137, 137, 137,
	139, 139, 138, 138, 82, 82, 83, 83, 83, 143,
	143, 144, 144, 144, 141, 141, 142, 142, 253, 253,
	253, 253, 253, 253, 253, 237, 237, 237, 244, 244,
	244, 240, 240, 242, 242, 242, 243, 243, 243, 241,
	250, 250, 252, 252, 251, 251, 247, 247, 248, 248,
	249, 249, 249, 245, 245, 202, 202, 202, 202, 202,
	254, 254, 254, 254, 307, 307, 307, 266, 266, 213,
	213, 215, 215, 214, 214, 163, 267, 267, 275, 272,
	272, 273, 273, 299, 299, 299, 276, 276, 289, 289,
	285, 285, 286, 286, 279, 279, 291, 291, 291, 77,
	211, 211, 370, 370, 367, 294, 294, 296, 296, 300,
	300, 304, 304, 301, 301, 8, 415, 415, 415, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 418, 419, 311, 312, 312, 312,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 5, 5, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 6, 1, 1, 3,
	4, 3, 4, 4, 4, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 5, 5, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 7,
	7, 6, 6, 2, 2, 5, 6, 3, 3, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 4, 2, 4,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 1, 0, 0, 1, 1, 2, 2, 1, 1,
	2, 2, 0, 1, 1, 1, 1, 5, 1, 3,
	0, 3, 1, 1, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 8, 6, 8,
	6, 5, 4, 10, 2, 2, 1, 2, 2, 2,
	2, 2, 5, 6, 6, 6, 6, 6, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 8, 4,
	8, 8, 6, 5, 4, 4, 4, 5, 7, 4,
	4, 7, 4, 4, 6, 6, 6, 8, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 6, 4,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	4, 4, 4, 6, 4, 6, 4, 4, 6, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	4, 4, 6, 4, 6, 4, 8, 6, 4, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 5, 9, 6, 9, 8, 6,
	8, 8, 8, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 6, 6, 4, 6, 4,
	6, 8, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 5, 1, 1, 1, 2, 2, 0, 4,
	0, 2, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 3,
	4, 2, 3, 4, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 3, 1, 6, 5, 4,
	1, 3, 3, 5, 0, 2, 5, 0, 5, 1,
	3, 1, 2, 3, 4, 1, 1, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -416, -79, -421, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 12, 13, -109, -35, 34, -40,
	-50, 234, -51, -41, 235, -52, 237, 236, 274, 238,
	387, 267, 79, 323, 324, 326, 327, 328, 329, -110,
	694, 272, 273, 240, 38, 50, 35, 36, 39, 244,
	280, 281, 243, 140, -33, -36, 11, -418, 14, 477,
	269, 268, 30, -34, 587, 91, -80, -417, 742, -253,
	-237, 25, 35, 31, -236, -232, -128, -237, 23, 21,
	10, -79, -79, -79, 15, 16, -79, -355, -357, 91,
	167, 91, -79, -57, -56, -54, -53, -55, -58, 33,
	-47, -48, -379, -46, -43, 239, 236, 284, 130, 131,
	274, 275, 276, 238, 258, 273, 277, 272, 293, -42,
	86, 35, 587, 590, -362, 235, 241, 242, 237, 478,
	133, 132, 80, -359, 382, 621, 712, -58, 714, 105,
	108, 713, 49, 248, 715, 716, 717, 628, 718, 257,
	719, 720, 721, 722, 728, 669, 729, 730, 731, 134,
	10, -79, -304, -300, 95, -293, 584, 260, 619, 431,
	620, 309, 86, 46, 41, 523, 594, 379, 382, 621,
	508, 712, 388, 323, 339, 333, 513, 514, 515, 362,
	354, 585, 622, 595, 312, 261, 297, 706, 352, 143,
	714, 316, 623, 275, 389, 390, 624, 391, 105, 326,
	428, 727, 315, 625, 725, 108, 713, 331, 84, 507,
	56, 709, 49, 270, 436, 437, 350, 243, 346, 715,
	298, 626, 597, 291, 133, 130, 734, 38, 342, 55,
	32, 724, 132, 54, 716, 158, 627, 717, 628, 393,
	369, 700, 53, 394, 276, 629, 89, 281, 589, 320,
	708, 395, 528, 343, 396, 308, 723, 240, 630, 319,
	689, 681, 682, 397, 398, 701, 374, 370, 375, 530,
	631, 420, 512, 399, 685, 686, 741, 57, 632, 633,
	702, 131, 634, 83, 718, 85, 337, 338, 635, 306,
	259, 533, 534, 422, 366, 490, 122, 497, 498, 115,
	116, 493, 117, 499, 118, 123, 500, 501, 502, 491,
	119, 112, 492, 503, 504, 367, 368, 120, 505, 114,
	113, 494, 496, 121, 506, 257, 37, 400, 586, 310,
	63, 314, 285, 423, 51, 372, 738, 50, 696, 535,
	636, 699, 365, 361, 487, 58, 637, 638, 639, 640,
	509, 719, 364, 336, 360, 733, 4, 303, 482, 510,
	720, 67, 242, 377, 376, 378, 292, 419, 357, 641,
	642, 643, 264, 87, 644, 347, 24, 645, 646, 401,
	299, 647, 61, 648, 649, 426, 273, 650, 59, 721,
	44, 651, 278, 735, 722, 652, 653, 654, 695, 655,
	280, 656, 403, 657, 683, 684, 402, 371, 373, 536,
	287, 404, 387, 245, 588, 658, 321, 341, 277, 726,
	659, 265, 524, 525, 526, 527, 707, 532, 531, 279,
	284, 272, 427, 266, 660, 661, 662, 663, 664, 313,
	680, 665, 666, 327, 592, 728, 488, 48, 667, 668,
	669, 670, 671, 307, 302, 421, 430, 66, 88, 384,
	672, 673, 705, 335, 332, 42, 300, 468, 470, 471,
	472, 473, 474, 469, 476, 674, 324, 60, 729, 730,
	731, 294, 732, 516, 517, 518, 519, 12, 570, 553,
	581, 554, 571, 555, 564, 556, 572, 580, 582, 537,
	545, 538, 546, 576, 559, 573, 565, 558, 557, 579,
	562, 566, 539, 547, 577, 563, 540, 548, 541, 549,
	542, 550, 575, 574, 567, 578, 543, 551, 569, 544,
	552, 568, 560, 561, 439, 739, 740, 511, 406, 134,
	304, 305, 52, 358, 286, 675, 317, 676, 348, 349,
	484, 485, 363, 334, 359, 692, 325, 690, 288, 407,
	489, 274, 677, 429, 301, 380, 126, 385, 318, 593,
	529, 293, 408, 704, 591, 520, 521, 356, 353, 295,
	522, 678, 694, 409, 249, 289, 290, 679, 691, 410,
	411, 311, 412, 413, 414, 415, 416, 418, 322, 417,
	693, 687, 688, 296, 467, 590, 330, 351, 386, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 486, 247, -79,
	247, -190, -300, -130, 696, 698, 186, -272, 390, -290,
	392, 405, 400, 410, 398, -281, 401, 403, 287, -402,
	420, 247, 407, 234, 393, 402, 411, 412, 311, 418,
	413, 322, 417, 296, 414, 415, 416, -386, 186, 717,
	732, 143, 355, 397, 395, 421, 696, 95, -306, 95,
	96, 97, -293, 325, -309, 330, -294, -386, -293, 328,
	-79, -79, -311, -311, -130, -210, -145, 151, -159, -261,
	-162, 96, -150, -153, -204, -205, -206, -207, -160, -220,
	-259, 175, 176, 183, 152, -216, -163, 28, 583, 479,
	478, 186, 33, 229, 73, 74, 481, 482, 154, 62,
	14, 444, 445, -161, 434, 435, 446, 440, 441, 507,
	509, 510, 511, 508, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 512, 523, 484, 485, 124, 486,
	112, 114, 113, 122, 123, 487, 488, 489, 352, 535,
	536, 530, 533, 534, 532, 531, 367, 368, 490, 553,
	554, 558, 557, 555, 556, 559, 562, 563, 564, 565,
	566, 567, 569, 568, 560, 561, 538, 537, 539, 540,
	541, 542, 543, 544, 546, 545, 547, 548, 549, 550,
	551, 552, 570, 571, 572, 573, 574, 576, 575, 580,
	579, 577, 578, 582, 581, 491, 492, 115, 116, 117,
	118, 119, 120, 121, 493, 496, 494, 495, 497, 498,
	499, 504, 505, 500, 501, 502, 503, 506, 378, 376,
	377, 373, 372, 371, -89, -102, 610, 609, -103, 431,
	436, 437, 439, -151, -152, -165, -166, -294, -300, 252,
	433, 246, 181, 477, -154, -148, -218, 111, 97, -31,
	-214, 432, 442, 443, 447, 438, 448, 596, 598, 613,
	614, 616, 601, 606, 605, 608, 524, 525, 526, 527,
	528, 529, 681, 682, 683, 684, 685, 686, 687, 688,
	-386, -293, 95, -157, -155, -199, 98, 103, 106, 107,
	109, -408, 270, 348, 349, 125, -418, 710, -156, 100,
	101, 102, 127, 128, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 94, 99, 49, 406,
	406, -190, -79, -79, -79, -79, -415, 713, 588, -230,
	-128, -232, -33, -31, -418, 11, -79, -31, -32, -30,
	-36, -38, 615, -37, -300, 104, -237, -253, 15, 66,
	170, 47, 55, -235, -236, -34, -31, -145, 22, 40,
	26, -132, 177, -145, -300, -132, -279, 251, -79, -79,
	-268, -314, 325, -270, 421, 696, 420, -260, -273, 95,
	-259, -272, 419, 96, -356, 167, -342, -346, -294, 262,
	-372, 258, -190, -365, -364, -294, -418, -129, -289, 248,
	256, 255, 144, -389, 147, 304, 433, 246, -53, -54,
	-55, -272, 185, 716, -111, 279, 283, 92, 92, -346,
	-345, -344, -390, 283, 262, -371, -363, 254, 263, -352,
	255, 256, -347, 248, 145, -390, -347, 253, 263, 258,
	262, 283, 283, 134, 283, 134, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 278, -353, 159, -353, 591,
	591, -359, -390, 258, 248, -390, -390, 254, -291, -347,
	250, 27, 250, 37, 37, -353, -353, -353, -272, 185,
	-353, -353, -353, -353, 291, 291, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, 247, -389, -137, 417, 311, 86, -56,
	293, -39, -190, -289, 248, 249, -389, 280, -190, 230,
	247, 699, -283, 167, 18, -283, -280, 406, 404, 391,
	396, -283, -283, -283, -283, 294, 389, -348, 248, 37,
	259, 406, 294, 389, 294, 295, 294, 295, 399, 409,
	294, -305, 17, 170, 433, 394, 398, 287, 247, 288,
	249, 408, 295, -305, 94, -284, 167, 294, 406, 400,
	290, -283, -283, -312, -418, -296, -294, -292, 239, 40,
	150, 27, 29, 153, 186, 137, 22, 154, 39, 241,
	355, 258, 185, 254, 478, 234, 77, 596, 434, 441,
	432, 440, 444, 480, 481, 433, 392, 33, 16, 598,
	30, 268, 26, 43, 179, 236, 157, 599, 271, 28,
	269, 124, 128, 601, 25, 80, 263, 17, 256, 45,
	19, 602, 603, 20, 252, 251, 170, 248, 75, 14,
	229, 31, 166, 71, 604, 145, 140, 605, 606, 607,
	608, 138, 73, 167, 23, 736, 442, 443, 35, 697,
	583, 282, 181, 78, 64, 698, 151, 438, 609, 610,
	125, 611, 129, 81, 703, 147, 21, 76, 47, 612,
	283, 613, 253, 737, 614, 424, 615, 168, 237, 477,
	74, 169, 710, 616, 711, 246, 405, 11, 483, 34,
	267, 255, 136, 72, 448, 617, 247, 156, 250, 139,
	127, 10, 144, 36, 15, 79, 82, 445, 446, 447,
	62, 135, 587, 155, 18, 618, 425, 149, -386, 699,
	-312, -312, 34, 96, -412, -413, -414, 587, 424, 250,
	-294, -190, -85, 689, 238, -86, 695, 40, 245, -135,
	406, -123, 186, 717, 700, 701, 702, 699, 403, 707,
	705, 703, 294, 704, 92, 147, 149, 150, 4, -145,
	166, -200, -201, 165, 159, 160, 161, 162, 163, 164,
	171, 170, 151, 153, 167, -246, 148, 172, 173, 174,
	175, 176, 177, 178, 180, 179, 181, 182, 168, 169,
	185, 232, 233, -153, -153, -153, -153, -216, -222, -221,
	-418, -218, -386, -293, -300, -418, -418, -153, -278, -418,
	-150, -418, -418, -418, -418, -418, -225, -145, -418, -418,
	-422, -418, -422, -422, -422, -331, -418, -331, -331, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	-418, -418, -418, -418, 230, -418, -418, -418, -418, -418,
	-331, -331, -331, -331, -331, -331, -418, -418, -418, -418,
	-418, -418, -418, -418, -418, -418, -418, -418, -418, -418,
	94, 107, 103, 106, 98, -220, 109, 94, 94, 94,
	94, -31, -32, -210, -418, -311, -399, -400, -193, -190,
	-418, 311, -294, -294, 280, 100, -235, -34, -31, -230,
	-236, -232, -31, -79, -121, -134, 68, 69, -133, -136,
	26, 43, 72, 70, 40, -419, 93, -419, -253, -419,
	92, -38, -256, 91, 643, 673, 643, 673, 66, 48,
	94, 94, 92, 24, -231, -233, -145, 17, -298, 4,
	-297, 27, -294, 94, 230, 17, -191, 31, -190, -279,
	-279, 92, 95, 325, -269, -271, 422, 424, 159, -299,
	-294, 94, 33, 93, 92, -190, -320, -323, -325, -324,
	-326, -321, -322, 352, 353, 186, 356, 358, 359, 360,
	361, 362, 363, 364, 365, 366, 369, 34, 270, 348,
	349, 350, 351, 370, 371, 372, 373, 375, 376, 377,
	378, 333, 354, 585, 334, 335, 336, 337, 338, 339,
	341, 342, 345, 343, 344, 346, 347, -295, -294, 91,
	93, 92, -330, 91, -145, -137, 247, -294, 248, 248,
	248, -79, 477, -353, -353, -353, 278, 22, -46, -43,
	-379, 21, -42, -43, 239, 130, 131, 236, 91, -342,
	91, -351, -295, -294, 91, 145, 253, 144, -350, -347,
	-350, -351, -294, -218, -294, 145, 145, -294, -294, -265,
	-294, -265, -265, 40, -265, 40, -265, 40, 100, -294,
	-265, 40, -265, 40, -265, 40, -265, 40, -265, 40,
	33, 83, 84, 85, 33, 87, 88, 89, -218, -294,
	-294, -218, -342, -218, -190, -294, -272, 100, 100, 100,
	-353, -353, 100, 94, 94, 94, -353, -353, 100, 94,
	-302, -300, 94, 94, -391, 264, 308, 310, 100, 100,
	100, 100, 33, 94, -392, 33, 724, 723, 725, 726,
	727, 94, 100, 33, 100, 33, 100, -294, 91, -190,
	-143, 298, 234, 236, 239, 81, 94, 314, 315, 312,
	317, 318, 319, 159, 49, 92, 250, 247, -294, -285,
	252, -285, -294, -301, -300, -292, -190, 250, 388, 94,
	-145, -349, 17, 170, -305, -305, -283, -190, -349, -305,
	-283, -190, -283, -283, -283, -283, -305, -305, -305, -283,
	-300, -300, -190, -190, -190, -190, -190, -190, -190, -312,
	-284, -283, 699, 94, -277, 17, 81, -312, -312, 92,
	331, 425, 426, -310, 328, -81, -294, 94, -10, -29,
	-18, -17, -19, 159, -10, 92, 587, -183, -190, 699,
	699, 699, 699, 699, 699, -145, -145, -145, -145, 611,
	-208, -410, 151, 127, 128, 125, 126, -162, 41, 42,
	40, -145, -209, -214, -216, 110, 170, 153, 167, -246,
	-150, -153, -150, -150, -150, -150, -150, -150, 229, -150,
	229, -150, -150, -150, -150, -150, -150, -313, -294, 94,
	186, -158, -157, 109, -408, -158, 584, 92, -221, 230,
	-145, -145, -386, -119, 450, 451, 452, 453, 455, 456,
	457, 460, 461, 465, 466, 449, 467, 454, 459, 462,
	463, 464, 458, 351, -145, -211, -210, -211, -145, -145,
	-223, -224, 155, -218, -145, -419, -419, 100, 177, -127,
	26, 43, -127, -127, -127, -127, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -127, -145, -120, 449,
	467, 454, 459, 462, 463, 464, 458, 351, 468, 469,
	470, 471, 472, 473, 474, 475, 476, -120, -119, -145,
	-145, -145, -145, -145, -145, -145, -145, -87, -145, 137,
	138, 139, -210, -145, -150, -145, -145, -145, -419, -145,
	-145, -145, -211, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -385,
	-384, -383, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -210, -210, -210, -210, -210,
	-145, -419, -145, -164, -148, 100, -261, 109, 96, -145,
	-145, -145, -145, -145, -145, -211, -296, -301, -292, -293,
	-210, -211, -211, -210, -210, -145, -145, -145, -145, -145,
	-145, -145, -145, -419, -145, -145, -145, -145, -145, -253,
	-419, -210, 92, -401, 424, 425, 697, -303, 283, -302,
	27, -211, 94, 17, -263, 82, -294, -235, -235, 68,
	69, 64, -131, -132, -136, -419, -37, 27, -255, -294,
	636, 636, 67, 94, -332, -272, 379, 380, 186, -145,
	-145, 92, -234, 29, 30, -190, -297, 177, -301, -190,
	-264, 283, -190, -168, -170, -171, -172, -193, -217, -418,
	-173, -31, 607, 604, 17, -183, -184, -192, -300, -270,
	-314, -269, 92, 423, 425, 426, 81, 129, -145, -333,
	185, -361, -360, -359, -342, -344, -345, -346, 93, -333,
	-338, 385, 384, -330, -330, -330, -330, -330, -332, -332,
	-332, -332, 91, 91, -330, -330, -330, -330, -335, 91,
	-335, -335, -336, -335, 91, -336, -337, 91, -337, -372,
	-145, -369, -368, -366, -367, 257, 105, 679, 635, 587,
	628, 669, 82, -364, -234, 100, -419, -143, -286, 252,
	-370, -367, -294, -294, -294, -286, 95, 94, 95, 94,
	95, 94, -112, -60, -1, 736, 737, 738, 92, 22,
	-343, -342, -59, 308, -375, -376, 283, -371, -365, -351,
	145, -350, -351, -351, -294, 92, 31, 134, 134, 134,
	134, 587, 236, 34, -287, 627, 151, 679, 635, -342,
	-59, 250, 250, -313, -313, -313, 94, 94, -282, 732,
	-183, -139, 300, 159, 289, 289, 247, 302, 247, 302,
	-190, 313, 316, 314, 315, 312, 317, 318, 319, 40,
	40, 40, 40, 40, 40, 301, 303, 305, 291, -190,
	-190, -285, 81, -185, -190, 28, -300, 94, 94, -190,
	-283, -283, -190, -283, -283, -190, -414, 332, -294, 366,
	690, 692, -123, 424, 92, 587, 25, -124, 25, -418,
	-410, 127, 128, -216, -216, -216, -209, -150, -153, -150,
	150, 271, -150, -150, -418, -218, -419, -296, 27, 92,
	82, -419, 175, 92, -419, -419, 92, 17, 92, -226,
	-224, 157, -145, -419, 92, -419, -419, -210, -145, -145,
	-145, -145, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -210, -419, 92, 92, 17, -317, 27, -419,
	-419, -419, -419, 92, -419, -419, -225, -419, 17, -419,
	82, 92, 170, 92, -419, -419, -419, 92, 92, -419,
	-419, 92, -419, 92, -419, -419, -419, -419, -419, -419,
	92, -419, 92, -419, -419, -419, 92, -419, 92, -419,
	-419, 92, -419, 92, -419, 92, -419, 92, -419, 92,
	-419, 92, -419, 92, -419, 92, -419, 92, -419, 92,
	-419, 92, -419, 92, -419, 92, -419, 92, -419, 92,
	-419, 92, -419, 92, -419, 92, -419, -419, -419, 92,
	-419, 92, -419, 92, -419, -419, 92, -419, 92, -419,
	92, -419, 92, 92, -419, 92, 92, 92, -419, 92,
	92, 92, 92, -419, -419, -419, -419, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, -419, -419, -419,
	-419, -419, -419, 92, -94, 612, -419, -419, 92, -419,
	92, 92, 92, 92, 92, -419, -418, 230, -419, -419,
	-419, -419, -419, 92, 92, 92, 92, 92, 92, -419,
	-419, -419, 92, 92, -419, 92, -419, 92, -419, -400,
	696, 425, -197, -196, -194, 79, 251, 80, -418, -302,
	-419, -158, -261, -262, -261, -203, -294, 100, 109, -237,
	-167, 92, -169, 17, -216, 93, 92, -332, -241, -247,
	-280, -294, 94, 186, -334, 186, -334, 379, 380, -233,
	230, -198, 18, -202, 34, 62, -29, -418, -418, 34,
	92, -186, -188, -187, -189, 71, 75, 77, 72, 73,
	74, 78, -308, 27, -31, -168, -31, -418, -190, -183,
	-420, 17, 82, -420, 92, 230, -271, -274, 427, 424,
	430, -386, 94, -111, 92, -359, -346, -238, -140, 45,
	-339, 386, -332, 595, -332, -341, 94, -341, 100, 100,
	100, 93, -49, -44, -45, 35, 86, -366, -353, 94,
	44, -353, -353, -294, 93, -234, -139, -190, 151, 81,
	-370, -370, -370, -300, -2, 735, 741, 145, 91, 391,
	21, -255, 92, 93, -219, 309, 93, -113, -294, 93,
	91, -351, -351, -294, -418, 247, 33, 33, 679, 635,
	627, -59, -219, -218, -294, -333, 734, 733, 93, 249,
	307, -144, 444, -141, 94, 95, -190, -190, -190, -190,
	-190, -190, 239, 236, 414, -409, 320, -409, 292, 250,
	-183, -190, 92, -84, 266, 261, -305, -305, 35, -190,
	424, 708, 706, -145, 150, 271, -162, -153, -119, -119,
	-150, -315, 186, 352, 270, 350, 346, 366, 357, 384,
	348, 385, 343, 342, 341, -315, -313, -150, -210, -145,
	-145, -145, 158, -145, 156, -145, -95, -94, -419, -419,
	-419, -419, -419, -95, -95, -95, -95, -95, -95, -95,
	-95, -95, -95, -230, -145, -145, -145, -419, 186, 352,
	-95, -145, 17, -145, -313, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-383, -145, -210, -145, -210, -145, -145, -145, -145, -145,
	-384, -384, -384, -384, -384, -210, -210, -210, -210, -145,
	-418, -294, -98, -97, -96, 662, 251, -94, -164, -98,
	-164, 229, -145, 229, 229, 229, -145, -211, -296, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -194,
	-347, 289, -347, 289, -347, -265, 92, -276, 25, 17,
	62, 62, -167, -198, -132, -168, -294, -244, 689, -250,
	51, -248, -249, 52, -245, 53, 61, -334, -334, 177,
	-235, -145, -266, 81, -267, -275, -218, -213, -215, -214,
	-418, -254, -419, -294, -265, -267, -170, -171, -171, -170,
	-171, 71, 71, 71, 76, 71, 76, 71, -187, -300,
	-419, -145, -303, 82, -168, -168, -192, -300, 177, 424,
	428, 429, -359, -407, 125, 151, 33, 81, 382, 105,
	-405, 185, 624, 674, 679, 635, 628, 669, -406, 253,
	144, 145, 265, 27, 46, 93, 92, 93, 92, 93,
	93, 92, -288, -287, -45, -44, -353, -353, 100, -386,
	94, 94, 249, 28, -190, 81, 81, 81, -114, 739,
	100, 91, -3, 86, -145, 91, 22, -342, -218, -377,
	-327, -378, -328, -329, -5, -6, -354, -117, 62, 105,
	-63, 49, 248, 719, 720, 134, -418, 732, -369, -255,
	-373, -375, -190, -149, -418, -161, -147, -146, -148, -154,
	175, 176, 270, 348, 349, -219, -190, -138, 298, 306,
	91, -142, 96, -388, 82, 289, 382, 289, 382, 94,
	-411, 321, 94, -411, -190, -84, -49, -190, -283, -283,
	35, -386, -419, -162, -153, -126, 170, 587, -318, 594,
	-330, -330, -330, -337, -330, 338, -330, 338, -330, -419,
	-419, -419, 92, -419, 25, -419, 92, -145, 92, -95,
	-95, -95, -95, -95, -122, 483, 92, 92, -419, 91,
	91, -419, -145, -419, -419, -419, 92, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	92, -419, 92, -419, 92, -419, 92, -419, 92, -419,
	92, -419, 92, -419, 92, -419, 92, -419, 92, -419,
	92, -419, 92, -419, 92, -419, 92, -419, 92, -419,
	92, -419, -419, 92, -419, -419, -419, 92, -419, 92,
	-419, 92, -419, -419, -419, 92, -316, 680, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -93,
	-295, -94, 644, 644, -419, -94, -227, 92, -150, -419,
	-150, -150, -150, -419, -419, -419, 92, -419, 92, 92,
	-419, 92, -419, 92, -419, -419, -419, -419, 92, -195,
	25, -418, -195, -418, -195, -419, -261, -190, -198, -228,
	19, -241, 56, 358, -252, -251, 60, 52, -249, 22,
	54, 22, 32, -266, 92, 159, -307, 92, 27, -419,
	-419, 92, 62, 230, -419, -198, -181, -180, 81, 82,
	-182, 81, -180, 71, 71, -256, 92, -264, -168, -198,
	-198, 230, 125, -418, -149, 15, 94, 94, -386, -404,
	723, 724, 33, 100, -353, -353, 145, 145, -190, 91,
	-332, 94, -332, 100, 100, 33, 87, 88, 89, 33,
	83, 84, 85, -190, -190, -190, -190, -374, 91, 22,
	-145, 91, 159, 93, -255, -255, 285, 170, -353, 717,
	291, 291, -353, -353, -353, -116, -115, 739, 93, -419,
	92, -340, 587, 590, -145, -155, -155, -256, 93, -382,
	587, -387, -294, -294, -294, -294, 100, 102, -419, 585,
	78, 588, -419, -332, -145, -145, -145, -145, -235, 94,
	-145, -145, 100, 100, -95, -419, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -210, -145, -419, -178,
	-177, -179, 700, 125, 33, -315, -419, -212, 283, -101,
	-100, -99, 17, -419, -145, -119, -119, -119, -119, -145,
	-145, -145, -145, -145, -145, -418, 71, 21, 19, -258,
	-294, 253, -418, -258, -418, -303, -228, -229, 20, 22,
	-242, 58, -240, 57, -240, -251, 22, 22, 94, 22,
	94, 145, -275, -145, -215, -302, 62, -29, -294, -213,
	-294, -230, -145, 91, -145, -158, -198, -198, -145, -205,
	507, 509, 510, 511, 508, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 512, 523, 484, 485, 486,
	112, 114, 113, 122, 123, 487, 488, 489, 352, 535,
	536, 530, 533, 534, 532, 531, 367, 368, 490, 553,
	554, 558, 557, 555, 556, 559, 562, 563, 564, 565,
	566, 567, 569, 568, 560, 561, 538, 537, 539, 540,
	541, 542, 543, 544, 546, 545, 547, 548, 549, 550,
	551, 552, 570, 571, 572, 573, 574, 576, 575, 580,
	579, 577, 578, 582, 581, 491, 492, 115, 116, 117,
	118, 119, 120, 121, 493, 496, 494, 497, 498, 499,
	504, 505, 500, 501, 502, 503, 506, 378, 376, 377,
	373, 372, 371, 431, 436, 437, 439, 524, 525, 526,
	527, 528, 529, 681, 682, 683, 684, 685, 686, 687,
	688, 94, 94, 91, -145, 93, 93, -256, -373, -60,
	93, -257, -255, 100, 93, 286, -214, -418, 94, -353,
	-353, -353, 100, 100, -302, -419, 92, -294, -406, -375,
	591, 591, -419, 27, -381, -380, -296, 91, 82, 67,
	586, 589, -419, -419, -419, 92, -419, -419, -419, 93,
	93, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, -419, -419, -419, -419, -419, -419, -419,
	-419, -419, -419, 92, -419, -177, -179, -419, 81, -158,
	-230, 22, -98, 308, 310, -98, -419, -419, -419, -419,
	-419, 92, -419, -419, 92, -419, 92, -419, -419, -258,
	-419, 22, 22, 92, -419, -258, -419, -258, -197, -229,
	-108, -107, -106, 618, -145, -210, -243, 59, 81, 129,
	94, 94, 94, 15, -418, -213, 230, -307, -235, -255,
	-175, 391, -230, -419, -255, 93, 27, 93, 741, 145,
	93, -214, -125, -418, 282, -302, 94, 94, -115, -118,
	-29, 92, 159, -255, -190, 67, -145, -210, -419, 81,
	599, 700, -92, -91, -88, 711, 737, -210, -94, -94,
	-145, -145, -145, -419, -294, 253, -419, -419, -108, 92,
	-105, -104, -294, -319, 587, 81, 129, -267, -255, -307,
	-294, 93, -419, -418, -235, 93, -239, -29, 91, -3,
	282, -327, -378, -328, -329, -5, -6, -354, -82, 587,
	-380, -358, -300, -296, 94, 100, 93, 587, -419, -419,
	-90, 153, 709, 677, -155, 229, -419, 92, -419, 92,
	-419, 92, -106, 92, 27, 592, -419, -303, -176, -174,
	-294, 641, -397, -396, 583, -407, -403, 125, 151, 105,
	-405, 679, 635, 135, 136, -82, -145, 91, -419, -83,
	297, 696, 230, -388, 588, -90, 710, 655, 630, 655,
	630, -150, -145, -145, -145, -104, -418, -419, 92, 25,
	-320, -62, 652, -394, -395, 81, -398, 397, 651, 672,
	125, 94, 93, -255, 258, -301, -382, 589, 150, -119,
	-419, 92, -419, 92, -419, -93, -174, 648, -333, -158,
	-395, 81, -394, 81, 16, 15, -4, 740, 93, 299,
	-90, 655, 630, -145, -145, -419, -61, 28, -175, -393,
	266, 261, 264, 34, -393, 100, -4, -419, -419, 652,
	260, 33, 125, -158, -178, -177, -177,
}

var yyDef = [...]int{
	880, -2, -2, 882, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 880, 880, 880, 0, 880, 0,
	0, 880, -2, -2, 880, 1631, 0, 880, 0, 875,
	0, -2, 797, 803, 0, 812, -2, 0, 0, 880,
	880, 2263, 2263, 875, 0, 0, 0, 0, 0, 880,
	880, 880, 880, 1636, 1489, 50, 880, 0, 85, 86,
	830, 831, 832, 65, 0, 2261, 881, 1, 3, 71,
	75, 0, 0, 0, 58, 1498, 0, 78, 0, 0,
	884, 0, 0, 1614, 880, 880, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1616, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1516, 165, 1632, 1629, 1630, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 0, 1608,
	0, 720, 980, 0, 876, 877, 0, 786, 786, 0,
	786, 786, 786, 786, 0, 0, 0, 734, 0, 0,
	0, 0, 783, 0, 750, 751, 0, 783, 0, 757,
	789, 0, 0, 764, 786, 786, 767, 2264, 0, 2264,
	2264, 1599, 0, 780, 778, 792, 793, 42, 796, 799,
	800, 801, 802, 805, 0, 816, 819, 1625, 1626, 0,
	821, 826, 843, 844, 0, 45, 1140, 0, 1004, 0,
	1015, -2, 1026, 1043, 1044, 1045, 1046, 1047, 1049, 1050,
	1051, 0, 0, 0, 0, 1056, 1057, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 1991, 1460, 0,
	0, 1422, 1422, 1156, 1422, 1422, 1424, 1424, 1424, 1842,
	1983, 1992, 2170, 1803, 1809, 1810, 1811, 2116, 2117, 2118,
	2119, 2208, 2209, 2213, 1905, 1798, 2183, 2184, 0, 2260,
	1944, 1952, 1953, 1929, 1938, 1977, 2079, 2193, 1821, 1972,
	2042, 1902, 1924, 1925, 2060, 2061, 1948, 1949, 1928, 2122,
	2124, 2140, 2141, 2126, 2128, 2137, 2143, 2148, 2127, 2139,
	2144, 2157, 2161, 2164, 2165, 2166, 2134, 2132, 2145, 2149,
	2151, 2153, 2159, 2162, 2135, 2133, 2146, 2150, 2152, 2154,
	2160, 2163, 2121, 2125, 2129, 2138, 2156, 2136, 2155, 2130,
	2142, 2147, 2158, 2131, 2123, 1942, 1945, 1932, 1933, 1935,
	1937, 1943, 1950, 1956, 1934, 1955, 1954, 0, 1930, 1931,
	1936, 1947, 1951, 1939, 1940, 1941, 1946, 1957, 1998, 1997,
	1996, 2041, 1968, 2040, 0, 0, 0, 0, 0, 1792,
	1847, 1848, 2167, 1344, 1345, 1346, 1347, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 1473, 1474, 44, 1139,
	1595, 1424, 1424, 1424, 1424, 1424, 1424, 1078, 1079, 1080,
	1081, 1082, 1108, 1109, 1115, 1116, 2055, 2056, 2057, 2058,
	1885, 2203, 1894, 1895, 2037, 2038, 1907, 1908, 2234, 2235,
	-2, -2, -2, 232, 233, 234, 235, 236, 237, 238,
	239, 0, 1846, 2181, 2182, 228, 0, 0, 296, 293,
	294, 295, 1122, 1123, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 280, 281, 282, 283, 284,
	285, 286, 287, 288, 289, 290, 298, 299, 2263, 0,
	853, 0, 0, 0, 0, 0, 0, 1637, 1638, 1498,
	0, 1490, 1489, 63, 0, 880, -2, 0, 0, 0,
	0, 47, 0, 52, 937, 883, 77, 76, 1538, 1541,
	0, 0, 0, 59, 1499, 67, 69, 1500, 0, 885,
	886, 0, 913, 917, 0, 0, 0, 1615, 1614, 1614,
	102, 0, 0, 103, 123, 124, 125, 0, 0, 109,
	110, 1601, 1602, 43, 0, 0, 177, 178, 0, 1096,
	428, 0, 173, 0, 421, 360, 0, 1516, 0, 0,
	0, 0, 0, 880, 0, 1609, 154, 155, 162, 163,
	164, 401, 401, 401, 575, 0, 0, 165, 165, 533,
	534, 535, 0, 0, -2, 426, 0, 513, 0, 0,
	415, 415, 419, 417, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 668, 0, 402, 0, 573,
	574, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	1617, 1618, 0, 550, 551, 0, 0, 0, 401, 401,
	0, 0, 0, 0, 401, 401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 1529, 0, 0, 0, -2,
	0, 712, 0, 0, 0, 1610, 1610, 0, 719, 0,
	0, 0, 724, 0, 0, 725, 0, 783, 783, 781,
	782, 727, 728, 729, 730, 786, 0, 0, 410, 411,
	412, 783, 786, 0, 786, 786, 786, 786, 783, 783,
	783, 786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2264, 789, 786, 0, 758, 0, 759, 760, 761,
	762, 765, 766, 768, 2265, 2266, 1627, 1628, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 2264, 2264,
	772, 776, 1600, 798, 804, 806, 807, 0, 0, 817,
	820, 837, 49, 1893, 825, 49, 827, 828, 829, 855,
	856, 861, 0, 0, 0, 0, 867, 868, 869, 0,
	0, 872, 873, 874, 0, 0, 0, 0, 0, 1002,
	0, 0, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1027, 1028,
	0, 0, 0, 1052, 1053, 1054, 1055, 1058, 0, 1069,
	0, 1071, 1469, -2, 0, 0, 0, 1063, 1064, 0,
	0, 0, 1620, 1620, 0, 0, 0, 1461, 0, 0,
	1154, 0, 1155, 1157, 1158, 1159, 0, 1160, 1161, 890,
	890, 890, 890, 890, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1620, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1620, 0, 0, 1620, 1620, 0, 0,
	220, 221, 222, 223, 224, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 240, 241, 242, 243, 244, 245, 300, 246, 247,
	248, 1139, 0, 0, 0, 46, 845, 846, 0, 963,
	1620, 0, 0, 896, 0, 1635, 57, 66, 68, 1498,
	61, 1498, 0, 900, 0, 0, -2, -2, 901, 902,
	906, 907, 908, 909, 910, 54, 2262, 55, 0, 74,
	0, 48, 0, 0, 1539, 0, 1542, 0, 0, 0,
	374, 1546, 0, 0, 1491, 1492, 1495, 0, 914, 1989,
	918, 0, 920, 921, 0, 0, 100, 0, 979, 0,
	0, 0, 111, 0, 113, 114, 0, 0, 0, 385,
	1603, 1604, 1605, -2, 408, 0, 385, 369, 308, 309,
	310, 360, 312, 360, 360, 360, 360, 374, 374, 374,
	374, 343, 344, 345, 346, 347, 0, 0, 329, 360,
	360, 360, 360, 350, 351, 352, 353, 354, 355, 356,
	357, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	362, 362, 362, 362, 362, 366, 366, 0, 1097, 0,
	389, 0, 1495, 0, 0, 1529, 1612, 1622, 0, 0,
	0, 1612, 132, 0, 0, 0, 576, 618, 527, 564,
	577, 0, 530, 531, -2, 0, 0, 512, 0, 514,
	0, 409, 0, -2, 0, 419, 0, 415, 419, 416,
	419, 407, 420, 554, 555, 556, 0, 558, 559, 648,
	949, 0, 0, 0, 0, 0, 654, 655, 656, 0,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	565, 566, 567, 568, 569, 570, 571, 572, 0, 0,
	0, 0, 514, 0, 561, 0, 0, 465, 466, 467,
	0, 0, 470, 471, 472, 473, 0, 0, 476, 477,
	478, 966, 967, 479, 480, 505, 506, 507, 481, 482,
	483, 484, 485, 486, 487, 499, 500, 501, 502, 503,
	504, 488, 489, 490, 491, 492, 493, 496, 0, 147,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1610, 0, 0,
	0, 0, 899, 981, 1633, 1634, 721, 0, 0, 787,
	788, 0, 413, 414, 786, 786, 731, 773, 0, 786,
	735, 774, 736, 738, 737, 739, 752, 753, 786, 742,
	784, 785, 743, 744, 745, 746, 747, 748, 749, 769,
	754, 755, 756, 790, 0, 794, 795, 770, 771, 0,
	0, 810, 811, 0, 818, 840, 838, 839, 841, 833,
	834, 835, 836, 0, 842, 0, 0, 858, 96, 863,
	864, 865, 866, 878, 871, 1141, 999, 1000, 1001, 0,
	1003, 1009, 0, 1124, 1126, 1007, 1008, 1011, 0, 0,
	0, 1005, 1016, 1136, 1137, 1138, 0, 0, 0, 0,
	0, 1020, 1024, 1029, 1030, 1031, 1032, 1033, 0, 1034,
	0, 1037, 1038, 1039, 1040, 1041, 1042, 1048, 1437, 1438,
	1439, 1067, 301, 302, 0, 1068, 0, 0, 0, 0,
	0, 0, 0, 0, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1140, 0, 1621, 0, 0, 0,
	1467, 1464, 0, 0, 0, 1423, 1425, 0, 0, 0,
	891, 892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 0, 0, 1440,
	0, 0, 0, 0, 0, 0, 0, 1460, 0, 1073,
	1074, 1075, 0, 0, 0, 0, 0, 0, 1202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1348, 1349, 1350, 1351, 41, 0,
	0, 0, 0, 0, 0, 0, 1471, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1373, 0, 0, 0, 0, 0, 0,
	1593, 0, 0, 848, 849, 851, 0, 983, 0, 964,
	0, 0, 854, 0, 895, 0, 898, 60, 62, 904,
	905, 0, 922, 911, 903, 56, 51, 0, 0, 941,
	1540, 1543, 1544, 374, 1566, 0, 383, 383, 380, 1501,
	1502, 0, 1494, 1496, 1497, 79, 919, 915, 0, 997,
	0, 0, 978, 0, 925, 927, 928, 929, 961, 0,
	932, 933, 0, 0, 0, 0, 0, 98, 980, 104,
	0, 112, 0, 0, 117, 118, 105, 106, 107, 108,
	0, 607, -2, 460, 179, 181, 182, 183, 174, -2,
	372, 370, 371, 311, 374, 374, 337, 338, 339, 340,
	341, 342, 0, 0, 330, 331, 332, 333, 322, 0,
	323, 324, 325, 364, 0, 326, 327, 0, 328, 427,
	0, 1503, 390, 391, 393, 401, 0, 396, 397, 0,
	401, 401, 0, 422, 423, 0, 1495, 1520, 0, 0,
	0, 1623, 1622, 1622, 1622, 0, 167, 168, 169, 170,
	171, 172, 643, 0, 0, 619, 641, 642, 165, 0,
	0, 175, 516, 515, 0, 675, 0, 425, 0, 0,
	419, 419, 404, 405, 557, 0, 0, 650, 651, 652,
	653, 0, 0, 0, 543, 454, 0, 544, 545, 514,
	516, 0, 0, 385, 468, 469, 474, 475, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 592, 593, 594, 597, 599, 518, 603, 605, 596,
	598, 600, 518, 604, 606, 1517, 1518, 1519, 0, 0,
	713, 0, 0, 451, 94, 1611, 718, 722, 723, 783,
	741, 775, 783, 733, 740, 763, 808, 809, 814, 822,
	823, 824, 862, 0, 0, 0, 0, 870, 0, 0,
	1010, 1125, 1127, 1012, 1013, 1014, 1017, 0, 1021, 1025,
	0, 0, 0, 0, 0, 1072, 1070, 1471, 0, 0,
	0, 1121, 0, 0, 1144, 1145, 0, 0, 0, 0,
	1465, 0, 0, 1152, 0, 1426, 1102, 0, 0, 0,
	0, 0, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
	1102, 1102, 1489, 1179, 0, 0, 0, 0, 0, 1184,
	1185, 1186, 1102, 0, 1189, 1190, 0, 1192, 0, 1193,
	0, 0, 0, 0, 1200, 1201, 1203, 0, 0, 1206,
	1207, 0, 1209, 0, 1211, 1212, 1213, 1214, 1215, 1216,
	0, 1218, 0, 1220, 1221, 1222, 0, 1224, 0, 1226,
	1227, 0, 1229, 0, 1231, 0, 1234, 0, 1237, 0,
	1240, 0, 1243, 0, 1246, 0, 1249, 0, 1252, 0,
	1255, 0, 1258, 0, 1261, 0, 1264, 0, 1267, 0,
	1270, 0, 1273, 0, 1276, 0, 1279, 1280, 1281, 0,
	1283, 0, 1285, 0, 1288, 1289, 0, 1291, 0, 1294,
	0, 1297, 0, 0, 1298, 0, 0, 0, 1302, 0,
	0, 0, 0, 1311, 1312, 1313, 1314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 1326, 1327,
	1328, 1329, 1330, 0, 1332, 0, 1103, 0, 0, 1103,
	0, 0, 0, 0, 0, 1142, 1620, 0, 1427, 1428,
	1429, 1430, 1431, 0, 0, 0, 0, 0, 0, 1371,
	1372, 1374, 0, 0, 1377, 0, 1379, 0, 1594, 847,
	850, 852, 935, 984, 985, 0, 0, 0, 0, 965,
	1619, 893, 894, 897, 943, 0, 1475, 0, 0, 922,
	997, 0, 923, 0, 53, 938, 0, 1548, 1547, 1560,
	1573, 383, 383, 377, 378, 384, 379, 381, 382, 1493,
	0, 1498, 0, 1587, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 968, 0, 0, 971, 0,
	0, 0, 0, 962, 933, 0, 934, 0, -2, 0,
	0, 92, 93, 0, 0, 0, 115, 116, 0, 0,
	122, 386, 387, 156, 165, 462, 180, 435, 0, 0,
	307, 373, 334, 335, 336, 0, 358, 0, 0, 0,
	0, 456, 128, 1507, 1506, 401, 401, 392, 0, 395,
	0, 0, 0, 1624, 361, 424, 0, 146, 0, 0,
	0, 0, 0, 152, 613, 0, 0, 620, 0, 0,
	0, 525, 0, 536, 537, 0, 647, -2, 709, 389,
	0, 403, 406, 950, 0, 0, 538, 0, 541, 542,
	455, 516, 547, 548, 562, 549, 497, 498, 495, 0,
	0, 1530, 1531, 1536, 1534, 1535, 133, 583, 585, 589,
	584, 588, 0, 0, 0, 520, 0, 520, 581, 0,
	451, 1503, 0, 717, 452, 453, 786, 786, 857, 97,
	0, 860, 0, 0, 0, 0, 1018, 1022, 1035, 1036,
	1432, 1458, 360, 360, 1445, 360, 366, 1448, 360, 1450,
	360, 1453, 360, 1456, 1457, 0, 0, 1065, 0, 0,
	0, 0, 1151, 1468, 0, 0, 1162, 1101, 1102, 1102,
	1102, 1102, 1102, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 1176, 1177, 1462, 0, 0, 0, 1183, 0, 0,
	1187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 145, 0, 0, 0, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 1100, 0, 1104, 1105, 0, 0, 1334, 0, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 1472, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 986,
	993, 0, 993, 0, 993, 0, 0, 0, 1606, 1607,
	1476, 1477, 997, 1478, 912, 924, 942, 1566, 0, 1559,
	0, -2, 1568, 0, 0, 0, 1574, 375, 376, 916,
	80, 998, 83, 0, 1587, 1596, 0, 1584, 1589, 1591,
	0, 0, 0, 1580, 0, 997, 926, 957, 959, 0,
	954, 969, 970, 972, 0, 974, 0, 976, 977, 937,
	931, 0, 100, 0, 997, 997, 99, 0, 982, 119,
	120, 121, 461, 184, 189, 0, 0, 0, 194, 0,
	196, 0, 0, 0, 201, 202, 401, 401, 436, 0,
	304, 306, 0, 0, 187, 374, 0, 374, 0, 365,
	367, 0, 437, 457, 1504, 1505, 0, 0, 394, 398,
	399, 400, 0, 1613, 148, 0, 0, 0, 616, 0,
	644, 0, 0, 0, 0, 0, 0, 176, 517, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 0, 401,
	0, 0, 0, 401, 401, 401, 0, 701, 388, 0,
	0, 672, 669, 539, 0, 218, 219, 226, 227, 229,
	0, 0, 0, 0, 0, 546, 937, 1521, 1522, 1523,
	0, 1533, 1537, 136, 0, 0, 0, 0, 591, 595,
	601, 0, 519, 602, 714, 715, 716, 95, 726, 732,
	859, 879, 1006, 1019, 1023, 0, 0, 0, 0, 1459,
	1443, 374, 1446, 1447, 1449, 1451, 1452, 1454, 1455, 1061,
	1062, 1066, 0, 1148, 0, 1150, 0, 1466, 0, 1163,
	1164, 1165, 1166, 1167, 1498, 0, 0, 0, 1182, 0,
	0, 1102, 0, 1195, 1194, 1196, 0, 1198, 1199, 1204,
	1205, 1208, 1210, 1217, 1219, 1223, 1225, 1228, 1230, 1232,
	0, 1235, 0, 1238, 0, 1241, 0, 1244, 0, 1247,
	0, 1250, 0, 1253, 0, 1256, 0, 1259, 0, 1262,
	0, 1265, 0, 1268, 0, 1271, 0, 1274, 0, 1277,
	0, 1282, 1284, 0, 1287, 1290, 1292, 0, 1295, 0,
	1299, 0, 1301, 1303, 1304, 0, 0, 0, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1331, 0,
	1094, 1333, 1106, 1107, 1112, 1336, 0, 0, 0, 1339,
	0, 0, 0, 1343, 1143, 1354, 0, 1359, 0, 0,
	1365, 0, 1369, 0, 1375, 1376, 1378, 1380, 0, 0,
	0, 0, 0, 0, 0, 963, 944, 64, 1478, 1482,
	0, 1553, 1551, 1551, 1561, 1562, 0, 0, 1569, 0,
	0, 0, 0, 84, 0, 0, 1575, 0, 0, 1592,
	0, 0, 0, 0, 101, 1489, 951, 958, 0, 0,
	952, 0, 953, 973, 975, 930, 0, 997, 997, 90,
	91, 0, 190, 0, 192, 0, 195, 197, 198, 199,
	205, 206, 207, 200, 0, 0, 303, 305, 0, 0,
	348, 359, 349, 0, 0, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 937, 149, 150, 151, 608, 0, 618,
	0, 939, 0, 611, 0, 528, 0, 0, 0, 401,
	401, 401, 0, 0, 0, 0, 686, 0, 0, 649,
	0, 657, 0, 0, 0, 230, 231, 0, 1532, 582,
	0, 134, 135, 0, 0, 587, 521, 522, 1059, 0,
	0, 0, 1060, 1444, 0, 0, 0, 0, 0, 1463,
	0, 0, 0, 0, 1188, 1191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1307, 0,
	0, 0, 638, 639, 0, 1383, 1099, 1489, 0, 1103,
	1113, 1114, 0, 1103, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	945, 946, 0, 0, 0, 983, 1482, 1487, 0, 0,
	1556, 0, 1549, 1552, 1550, 1563, 0, 0, 1570, 0,
	1572, 0, 1597, 1598, 1590, 1585, 0, 1579, 1582, 1584,
	1581, 1498, 955, 0, 960, 0, 1489, 89, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 204, 0, 0, 363, 368, 0, 0, 0,
	609, 0, 940, 621, 612, 0, 699, 0, 703, 0,
	0, 0, 706, 707, 708, 685, 0, 689, 429, 673,
	670, 671, 540, 0, 137, 138, 0, 0, 0, 1433,
	0, 1436, 1146, 1149, 1147, 0, 1178, 1180, 1181, 1441,
	1442, 1197, 1233, 1236, 1239, 1242, 1245, 1248, 1251, 1254,
	1257, 1260, 1263, 1266, 1269, 1272, 1275, 1278, 1286, 1293,
	1296, 1300, 1305, 0, 1308, 0, 0, 1309, 0, 640,
	1090, 0, 0, 1110, 1111, 0, 1338, 1340, 1341, 1342,
	1355, 0, 1360, 1361, 0, 1366, 0, 1370, 1381, 0,
	988, 995, 996, 0, 991, 0, 992, 0, 936, 1487,
	82, 1488, 1485, 0, 1483, 1480, 1545, 0, 1554, 1555,
	1564, 1565, 1571, 0, 0, 1584, 0, 1578, 87, 0,
	0, 0, 1498, 191, 0, 210, 0, 617, 0, 620,
	610, 697, 698, 0, 710, 702, 704, 705, 687, -2,
	1524, 0, 0, 0, 590, 1434, 0, 0, 1310, 0,
	636, 637, 1098, 1091, 0, 1076, 1077, 1095, 1335, 1337,
	0, 0, 0, 987, 947, 948, 989, 990, 81, 0,
	1484, 1118, 0, 1479, 0, 1557, 1558, 1588, 0, 1577,
	1583, 956, 963, 0, 88, 442, 435, 1524, 0, 0,
	0, 690, 691, 692, 693, 694, 695, 696, 579, 1526,
	139, 140, 0, 509, 510, 511, 133, 0, 1153, 1306,
	1092, 0, 0, 0, 0, 0, 1356, 0, 1362, 0,
	1367, 0, 1486, 0, 0, 1481, 1586, 622, 0, 624,
	0, -2, 430, 443, 0, 185, 211, 212, 0, 0,
	215, 216, 217, 208, 209, 129, 0, 0, 711, 0,
	1527, 1528, 0, 136, 0, 0, 1083, 1084, 1085, 1086,
	1088, 0, 0, 0, 0, 1119, 1096, 623, 0, 0,
	385, 0, 633, 431, 432, 0, 438, 439, 440, 441,
	213, 214, 645, 0, 0, 508, 586, 1435, 0, 0,
	1357, 0, 1363, 0, 1368, 0, 625, 626, 634, 0,
	433, 0, 434, 0, 0, 0, 614, 0, 645, 1525,
	1093, 1087, 1089, 0, 0, 1117, 0, 635, 631, 444,
	446, 447, 0, 0, 445, 646, 615, 1358, 1364, 0,
	448, 449, 450, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 152, 3, 3, 3, 180, 172, 3,
	91, 93, 177, 175, 92, 176, 230, 178, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 742,
	160, 159, 161, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 182, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 148, 3, 183,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 156,
	157, 158, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 173, 174, 179, 181, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:622
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:635
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:640
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:685
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:697
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:701
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:713
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:723
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:742
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:748
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:822
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:877
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:894
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:915
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:919
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:937
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:949
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:953
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:983
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:987
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:997
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1007
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1020
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1026
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1032
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1042
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1046
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1060
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1064
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1068
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1074
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1078
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1084
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1088
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1094
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1098
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1126
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1130
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1134
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1146
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1162
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1166
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1173
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1177
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1182
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1197
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1202
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1208
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1228
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1234
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1250
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1264
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1269
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1274
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1279
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1286
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1293
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1304
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1321
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1325
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1347
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1377
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1381
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1387
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1391
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1397
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1407
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1412
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1434
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1445
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1454
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1544
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1553
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1559
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1563
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1567
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1573
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1577
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1582
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1586
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1591
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1596
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1601
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1922
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1926
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1940
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1964
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1970
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1974
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1978
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1982
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2231
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2240
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2270
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2365
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2370
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2374
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2380
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2394
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2419
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2439
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2443
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2451
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2518
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2528
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2532
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2538
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2542
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2548
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2552
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2558
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2572
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2589
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2595
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2601
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2611
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2615
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2620
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2646
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2650
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2658
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2690
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2699
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2705
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2719
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2723
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2917
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2935
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2939
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2948
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2952
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2964
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2970
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3110
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3156
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3362
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3370
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3390
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3401
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3410
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3418
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3427
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3434
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3446
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3455
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3470
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3475
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3479
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3484
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3488
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3494
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3500
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3506
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3516
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3520
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3526
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3532
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3538
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3544
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3558
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3562
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3568
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3574
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3580
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3584
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3588
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3594
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3598
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3603
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3607
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3612
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3616
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3690
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3694
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3698
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3702
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3706
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3725
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3744
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3749
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3754
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3759
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3764
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3769
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3774
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3779
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3784
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3790
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3796
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3806
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3811
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3815
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3820
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3825
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3830
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3835
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3840
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3845
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3852
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3859
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3866
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3878
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3884
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3890
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3896
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3902
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3908
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3914
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3926
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3948
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3952
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4258
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4272
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4276
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4286
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4324
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4363
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4369
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4379
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4383
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4387
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4400
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4409
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4414
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4420
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4431
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4435
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4439
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4443
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4447
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4452
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4456
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4460
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4464
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4488
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4541
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4547
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4551
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4557
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4563
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4567
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4571
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4575
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4597
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4601
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4609
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4613
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			setAllowComments(yylex, true)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4746
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4764
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4774
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4783
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4789
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4793
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4798
		{
			yyVAL.strs = nil
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4812
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4848
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4858
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4862
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4866
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4870
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4875
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4883
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4890
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4895
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4899
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4905
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4911
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4925
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4929
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4933
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4937
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4943
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4947
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4953
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4957
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4966
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4975
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4981
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4985
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4991
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4995
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5001
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5005
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5009
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5019
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5023
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5036
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5040
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5044
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5048
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5054
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5056
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5060
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5066
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5068
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5071
		{
			yyVAL.empty = struct{}{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.empty = struct{}{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5076
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5084
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5091
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5097
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5101
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5105
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5111
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5121
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5125
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5129
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5135
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5139
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5149
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5163
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5169
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5178
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5184
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5188
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 987:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5194
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5198
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5202
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5206
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5210
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5214
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5219
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5223
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5227
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5231
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5282
		{
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5285
		{
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5290
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5294
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5298
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5366
		{
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5369
		{
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5543
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5547
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5553
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5557
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5563
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5567
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5571
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5577
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5581
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5588
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5592
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5596
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5600
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5604
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5610
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5614
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5618
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5622
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5626
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5630
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5634
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5643
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5649
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5653
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5662
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5667
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5677
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5683
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5687
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5693
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5697
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5709
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5715
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5719
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5725
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5729
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5735
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5739
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5744
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5751
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5757
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5761
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5767
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5773
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5777
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5783
		{
			yyVAL.str = ""
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5787
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5793
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5797
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5804
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5808
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5812
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5816
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5822
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5826
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5832
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5836
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5840
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5844
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5848
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5852
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5858
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5862
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5866
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5873
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5879
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5883
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &JSONArrayAgg{Expr: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &JSONObjectAgg{Key: yyDollar[3].exprUnion(), Value: yyDollar[5].exprUnion(), OverClause: yyDollar[7].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6751
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6797
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6805
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6809
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6816
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6826
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6830
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6834
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6838
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6877
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6883
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6887
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6891
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6895
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6899
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6903
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6915
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6951
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6955
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6959
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6965
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6969
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6973
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6977
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6985
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6989
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6993
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6997
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7001
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7005
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7009
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7013
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7017
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7021
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7025
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7029
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7033
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7043
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7047
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7051
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7061
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7065
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7069
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7073
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7083
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7087
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7091
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7095
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7099
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7105
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7109
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7113
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7123
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7127
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7133
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7137
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7141
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7145
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7149
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7155
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7159
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7163
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7167
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7175
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7179
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7183
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7187
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7191
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7197
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7215
		{
			yyVAL.str = string("")
		}
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7219
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7225
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7229
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7235
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7244
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7250
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7254
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7258
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7262
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7268
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7272
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7278
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7287
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7291
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7300
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7305
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7309
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7319
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7325
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7331
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7335
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7344
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7353
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7359
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7365
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7369
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7375
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7380
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7384
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7388
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7397
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7403
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7407
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7411
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7420
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7424
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7428
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7432
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7439
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7443
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7447
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7451
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7457
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7461
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7465
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7469
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7474
		{
			yyVAL.str = ""
		}
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7478
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7482
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7486
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7491
		{
			yyVAL.str = ""
		}
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7495
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7505
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7510
		{
			yyVAL.str = ""
		}
	case 1525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7514
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7519
		{
			yyVAL.str = "cascaded"
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7527
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7536
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7542
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7548
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7554
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7563
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7572
		{
			yyVAL.str = ""
		}
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7576
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7582
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7586
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7590
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7594
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7598
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7602
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7606
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7612
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7616
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7620
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7625
		{
			yyVAL.str = ""
		}
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7629
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7633
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7638
		{
			yyVAL.str = ""
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7642
		{
			yyVAL.str = " header"
		}
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7647
		{
			yyVAL.str = ""
		}
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7651
		{
			yyVAL.str = " manifest on"
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7655
		{
			yyVAL.str = " manifest off"
		}
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7660
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7664
		{
			yyVAL.str = " overwrite on"
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7668
		{
			yyVAL.str = " overwrite off"
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7674
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7679
		{
			yyVAL.str = ""
		}
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7689
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7693
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7699
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7703
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7708
		{
			yyVAL.str = ""
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7712
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7718
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7722
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7728
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7732
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7736
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7741
		{
			yyVAL.str = ""
		}
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7745
		{
			yyVAL.str = " optionally"
		}
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7758
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7762
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7766
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7770
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7774
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7780
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7784
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7788
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7792
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7801
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7805
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7814
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7820
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7824
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7830
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7834
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7840
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7844
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7849
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7859
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7863
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7869
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7876
		{
			yyVAL.str = "charset"
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7886
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7890
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7894
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7903
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7905
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7908
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7910
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7913
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7915
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7918
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7920
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7923
		{
			yyVAL.empty = struct{}{}
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7925
		{
			yyVAL.empty = struct{}{}
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7927
		{
			yyVAL.empty = struct{}{}
		}
	case 1619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7931
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7940
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7947
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7951
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7957
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7961
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7968
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7974
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7978
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7984
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7988
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7995
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8001
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8007
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8011
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8015
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8666
		{
		}
	case 2262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8671
		{
		}
	case 2263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8675
		{
			skipToEnd(yylex)
		}
	case 2264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8680
		{
			skipToEnd(yylex)
		}
	case 2265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8684
		{
			skipToEnd(yylex)
		}
	case 2266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8688
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
