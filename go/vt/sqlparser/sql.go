// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const REVERT = 57537
const SCHEMA = 57538
const TABLE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const KEY_BLOCK_SIZE = 57549
const CHECK = 57550
const INDEXES = 57551
const ACTION = 57552
const CASCADE = 57553
const CONSTRAINT = 57554
const FOREIGN = 57555
const NO = 57556
const REFERENCES = 57557
const RESTRICT = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const COALESCE = 57567
const EXCHANGE = 57568
const REBUILD = 57569
const PARTITIONING = 57570
const REMOVE = 57571
const MAXVALUE = 57572
const PARTITION = 57573
const REORGANIZE = 57574
const LESS = 57575
const THAN = 57576
const PROCEDURE = 57577
const TRIGGER = 57578
const VINDEX = 57579
const VINDEXES = 57580
const DIRECTORY = 57581
const NAME = 57582
const UPGRADE = 57583
const STATUS = 57584
const VARIABLES = 57585
const WARNINGS = 57586
const CASCADED = 57587
const DEFINER = 57588
const OPTION = 57589
const SQL = 57590
const UNDEFINED = 57591
const SEQUENCE = 57592
const MERGE = 57593
const TEMPORARY = 57594
const TEMPTABLE = 57595
const INVOKER = 57596
const SECURITY = 57597
const FIRST = 57598
const AFTER = 57599
const LAST = 57600
const VITESS_MIGRATION = 57601
const CANCEL = 57602
const RETRY = 57603
const COMPLETE = 57604
const CLEANUP = 57605
const BEGIN = 57606
const START = 57607
const TRANSACTION = 57608
const COMMIT = 57609
const ROLLBACK = 57610
const SAVEPOINT = 57611
const RELEASE = 57612
const WORK = 57613
const BIT = 57614
const TINYINT = 57615
const SMALLINT = 57616
const MEDIUMINT = 57617
const INT = 57618
const INTEGER = 57619
const BIGINT = 57620
const INTNUM = 57621
const REAL = 57622
const DOUBLE = 57623
const FLOAT_TYPE = 57624
const DECIMAL_TYPE = 57625
const NUMERIC = 57626
const TIME = 57627
const TIMESTAMP = 57628
const DATETIME = 57629
const YEAR = 57630
const CHAR = 57631
const VARCHAR = 57632
const BOOL = 57633
const CHARACTER = 57634
const VARBINARY = 57635
const NCHAR = 57636
const TEXT = 57637
const TINYTEXT = 57638
const MEDIUMTEXT = 57639
const LONGTEXT = 57640
const BLOB = 57641
const TINYBLOB = 57642
const MEDIUMBLOB = 57643
const LONGBLOB = 57644
const JSON = 57645
const ENUM = 57646
const GEOMETRY = 57647
const POINT = 57648
const LINESTRING = 57649
const POLYGON = 57650
const GEOMETRYCOLLECTION = 57651
const MULTIPOINT = 57652
const MULTILINESTRING = 57653
const MULTIPOLYGON = 57654
const ASCII = 57655
const UNICODE = 57656
const NULLX = 57657
const AUTO_INCREMENT = 57658
const APPROXNUM = 57659
const SIGNED = 57660
const UNSIGNED = 57661
const ZEROFILL = 57662
const CODE = 57663
const COLLATION = 57664
const COLUMNS = 57665
const DATABASES = 57666
const ENGINES = 57667
const EVENT = 57668
const EXTENDED = 57669
const FIELDS = 57670
const FULL = 57671
const FUNCTION = 57672
const GTID_EXECUTED = 57673
const KEYSPACES = 57674
const OPEN = 57675
const PLUGINS = 57676
const PRIVILEGES = 57677
const PROCESSLIST = 57678
const SCHEMAS = 57679
const TABLES = 57680
const TRIGGERS = 57681
const USER = 57682
const VGTID_EXECUTED = 57683
const VITESS_KEYSPACES = 57684
const VITESS_METADATA = 57685
const VITESS_MIGRATIONS = 57686
const VITESS_REPLICATION_STATUS = 57687
const VITESS_SHARDS = 57688
const VITESS_TABLETS = 57689
const VSCHEMA = 57690
const NAMES = 57691
const GLOBAL = 57692
const SESSION = 57693
const ISOLATION = 57694
const LEVEL = 57695
const READ = 57696
const WRITE = 57697
const ONLY = 57698
const REPEATABLE = 57699
const COMMITTED = 57700
const UNCOMMITTED = 57701
const SERIALIZABLE = 57702
const CURRENT_TIMESTAMP = 57703
const DATABASE = 57704
const CURRENT_DATE = 57705
const CURRENT_TIME = 57706
const LOCALTIME = 57707
const LOCALTIMESTAMP = 57708
const CURRENT_USER = 57709
const UTC_DATE = 57710
const UTC_TIME = 57711
const UTC_TIMESTAMP = 57712
const DAY = 57713
const DAY_HOUR = 57714
const DAY_MICROSECOND = 57715
const DAY_MINUTE = 57716
const DAY_SECOND = 57717
const HOUR = 57718
const HOUR_MICROSECOND = 57719
const HOUR_MINUTE = 57720
const HOUR_SECOND = 57721
const MICROSECOND = 57722
const MINUTE = 57723
const MINUTE_MICROSECOND = 57724
const MINUTE_SECOND = 57725
const MONTH = 57726
const QUARTER = 57727
const SECOND = 57728
const SECOND_MICROSECOND = 57729
const YEAR_MONTH = 57730
const WEEK = 57731
const REPLACE = 57732
const CONVERT = 57733
const CAST = 57734
const SUBSTR = 57735
const SUBSTRING = 57736
const GROUP_CONCAT = 57737
const SEPARATOR = 57738
const TIMESTAMPADD = 57739
const TIMESTAMPDIFF = 57740
const WEIGHT_STRING = 57741
const MATCH = 57742
const AGAINST = 57743
const BOOLEAN = 57744
const LANGUAGE = 57745
const WITH = 57746
const QUERY = 57747
const EXPANSION = 57748
const WITHOUT = 57749
const VALIDATION = 57750
const UNUSED = 57751
const ARRAY = 57752
const CUME_DIST = 57753
const DESCRIPTION = 57754
const DENSE_RANK = 57755
const EMPTY = 57756
const EXCEPT = 57757
const FIRST_VALUE = 57758
const GROUPING = 57759
const GROUPS = 57760
const JSON_TABLE = 57761
const LAG = 57762
const LAST_VALUE = 57763
const LATERAL = 57764
const LEAD = 57765
const MEMBER = 57766
const NTH_VALUE = 57767
const NTILE = 57768
const OF = 57769
const OVER = 57770
const PERCENT_RANK = 57771
const RANK = 57772
const RECURSIVE = 57773
const ROW_NUMBER = 57774
const SYSTEM = 57775
const WINDOW = 57776
const ACTIVE = 57777
const ADMIN = 57778
const BUCKETS = 57779
const CLONE = 57780
const COMPONENT = 57781
const DEFINITION = 57782
const ENFORCED = 57783
const EXCLUDE = 57784
const FOLLOWING = 57785
const GEOMCOLLECTION = 57786
const GET_MASTER_PUBLIC_KEY = 57787
const HISTOGRAM = 57788
const HISTORY = 57789
const INACTIVE = 57790
const INVISIBLE = 57791
const LOCKED = 57792
const MASTER_COMPRESSION_ALGORITHMS = 57793
const MASTER_PUBLIC_KEY_PATH = 57794
const MASTER_TLS_CIPHERSUITES = 57795
const MASTER_ZSTD_COMPRESSION_LEVEL = 57796
const NESTED = 57797
const NETWORK_NAMESPACE = 57798
const NOWAIT = 57799
const NULLS = 57800
const OJ = 57801
const OLD = 57802
const OPTIONAL = 57803
const ORDINALITY = 57804
const ORGANIZATION = 57805
const OTHERS = 57806
const PATH = 57807
const PERSIST = 57808
const PERSIST_ONLY = 57809
const PRECEDING = 57810
const PRIVILEGE_CHECKS_USER = 57811
const PROCESS = 57812
const RANDOM = 57813
const REFERENCE = 57814
const REQUIRE_ROW_FORMAT = 57815
const RESOURCE = 57816
const RESPECT = 57817
const RESTART = 57818
const RETAIN = 57819
const REUSE = 57820
const ROLE = 57821
const SECONDARY = 57822
const SECONDARY_ENGINE = 57823
const SECONDARY_LOAD = 57824
const SECONDARY_UNLOAD = 57825
const SKIP = 57826
const SRID = 57827
const THREAD_PRIORITY = 57828
const TIES = 57829
const UNBOUNDED = 57830
const VCPU = 57831
const VISIBLE = 57832
const FORMAT = 57833
const TREE = 57834
const VITESS = 57835
const TRADITIONAL = 57836
const LOCAL = 57837
const LOW_PRIORITY = 57838
const NO_WRITE_TO_BINLOG = 57839
const LOGS = 57840
const ERROR = 57841
const GENERAL = 57842
const HOSTS = 57843
const OPTIMIZER_COSTS = 57844
const USER_RESOURCES = 57845
const SLOW = 57846
const CHANNEL = 57847
const RELAY = 57848
const EXPORT = 57849
const AVG_ROW_LENGTH = 57850
const CONNECTION = 57851
const CHECKSUM = 57852
const DELAY_KEY_WRITE = 57853
const ENCRYPTION = 57854
const ENGINE = 57855
const INSERT_METHOD = 57856
const MAX_ROWS = 57857
const MIN_ROWS = 57858
const PACK_KEYS = 57859
const PASSWORD = 57860
const FIXED = 57861
const DYNAMIC = 57862
const COMPRESSED = 57863
const REDUNDANT = 57864
const COMPACT = 57865
const ROW_FORMAT = 57866
const STATS_AUTO_RECALC = 57867
const STATS_PERSISTENT = 57868
const STATS_SAMPLE_PAGES = 57869
const STORAGE = 57870
const MEMORY = 57871
const DISK = 57872
const PARTITIONS = 57873
const LINEAR = 57874
const RANGE = 57875
const LIST = 57876
const SUBPARTITION = 57877
const SUBPARTITIONS = 57878
const HASH = 57879

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	555, 137,
	-2, 143,
	-1, 45,
	116, 143,
	156, 143,
	309, 143,
	-2, 444,
	-1, 52,
	33, 623,
	215, 623,
	226, 623,
	259, 637,
	260, 637,
	-2, 625,
	-1, 57,
	217, 648,
	-2, 646,
	-1, 108,
	214, 1102,
	-2, 116,
	-1, 110,
	1, 138,
	555, 138,
	-2, 143,
	-1, 120,
	117, 347,
	220, 347,
	-2, 438,
	-1, 139,
	116, 143,
	156, 143,
	309, 143,
	-2, 453,
	-1, 602,
	200, 1123,
	-2, 1119,
	-1, 603,
	200, 1124,
	-2, 1120,
	-1, 674,
	57, 716,
	-2, 724,
	-1, 711,
	132, 1482,
	-2, 109,
	-1, 712,
	132, 1359,
	-2, 110,
	-1, 718,
	132, 1413,
	-2, 1096,
	-1, 860,
	132, 1292,
	-2, 1093,
	-1, 898,
	225, 38,
	230, 38,
	-2, 358,
	-1, 975,
	1, 492,
	555, 492,
	-2, 143,
	-1, 1173,
	57, 717,
	-2, 729,
	-1, 1174,
	57, 718,
	-2, 730,
	-1, 1226,
	116, 143,
	156, 143,
	309, 143,
	-2, 388,
	-1, 1303,
	117, 347,
	220, 347,
	-2, 438,
	-1, 1312,
	225, 39,
	230, 39,
	-2, 359,
	-1, 1563,
	200, 1128,
	-2, 1122,
	-1, 1640,
	116, 143,
	156, 143,
	309, 143,
	-2, 389,
	-1, 1647,
	23, 162,
	-2, 164,
	-1, 1883,
	75, 91,
	84, 91,
	-2, 782,
	-1, 2051,
	47, 1064,
	-2, 1058,
	-1, 2254,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 757,
}

const yyPrivate = 57344

const yyLast = 34008

var yyAct = [...]int{
	602, 2506, 1594, 2500, 2313, 2471, 2172, 2459, 2392, 2102,
	2109, 2143, 597, 596, 34, 1038, 2338, 90, 1155, 667,
	3, 2065, 2155, 1828, 1700, 2111, 2154, 1188, 689, 2063,
	2062, 2066, 553, 2225, 1856, 2219, 2343, 557, 1577, 605,
	594, 1613, 2052, 2245, 2060, 595, 1670, 550, 176, 1879,
	1848, 176, 986, 517, 176, 2330, 1915, 1944, 1675, 533,
	579, 176, 2157, 1985, 1690, 863, 1916, 1868, 1626, 176,
	551, 1917, 148, 716, 35, 1175, 1840, 33, 1618, 690,
	1557, 176, 1507, 545, 1617, 671, 1598, 675, 669, 549,
	134, 928, 2001, 1637, 1514, 1689, 1466, 1709, 1742, 1677,
	1909, 1218, 888, 533, 1885, 692, 533, 176, 533, 893,
	1197, 1417, 85, 1579, 89, 1526, 1620, 1158, 713, 1484,
	1414, 1057, 562, 1310, 867, 1317, 896, 1560, 1687, 1605,
	870, 871, 1400, 1666, 894, 899, 1217, 895, 1201, 971,
	1215, 1036, 1278, 906, 681, 1031, 703, 92, 677, 679,
	1422, 676, 70, 1123, 1326, 1302, 91, 1015, 117, 118,
	540, 1127, 2433, 1599, 1937, 178, 179, 180, 83, 2507,
	1702, 1703, 1704, 1702, 2140, 1964, 1963, 151, 111, 112,
	1935, 1740, 79, 678, 71, 1570, 1993, 1994, 178, 179,
	180, 697, 1473, 702, 1472, 520, 1471, 683, 8, 7,
	6, 119, 1470, 1386, 1574, 1575, 1469, 1468, 1455, 543,
	1460, 544, 933, 1826, 2485, 864, 490, 2048, 2126, 84,
	874, 1058, 113, 541, 670, 1850, 2278, 668, 930, 2388,
	879, 2387, 2306, 699, 96, 2307, 507, 72, 932, 931,
	74, 944, 945, 710, 948, 949, 950, 951, 909, 2516,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 910, 717, 934, 935, 936,
	1283, 684, 98, 99, 691, 102, 172, 886, 108, 72,
	2469, 173, 506, 72, 485, 2510, 72, 2444, 113, 885,
	884, 941, 2499, 504, 1780, 2314, 1682, 2460, 546, 1728,
	114, 2468, 2000, 1859, 666, 2443, 2205, 674, 1292, 2099,
	2100, 1827, 1972, 156, 81, 946, 1971, 2098, 1894, 974,
	1680, 1893, 1992, 1068, 1895, 1632, 1633, 693, 1860, 1777,
	1631, 501, 2356, 1010, 1011, 705, 706, 1034, 1005, 883,
	515, 980, 981, 1219, 664, 1220, 1576, 663, 993, 993,
	1938, 1906, 113, 994, 994, 512, 81, 172, 1778, 1022,
	81, 1024, 992, 81, 991, 1650, 1649, 1058, 531, 1006,
	153, 999, 154, 2174, 2222, 2196, 2027, 520, 520, 2194,
	1162, 114, 171, 1459, 535, 1406, 529, 1945, 521, 1710,
	1967, 1401, 1743, 878, 156, 881, 880, 1021, 1023, 1461,
	1462, 1463, 2509, 1028, 970, 2167, 1748, 1014, 520, 1754,
	1751, 1753, 1752, 2168, 2002, 976, 1064, 947, 491, 1056,
	493, 508, 1012, 523, 1376, 522, 497, 1980, 495, 499,
	509, 500, 1013, 494, 1759, 505, 1899, 1033, 496, 510,
	511, 513, 527, 526, 514, 1679, 503, 524, 1007, 1089,
	1000, 153, 2175, 154, 883, 969, 1756, 520, 1757, 1749,
	1758, 1008, 1009, 171, 2486, 953, 1377, 952, 1378, 1068,
	2397, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1097,
	1099, 1100, 1747, 2176, 1745, 176, 157, 176, 1019, 883,
	176, 875, 1020, 2299, 2004, 162, 917, 887, 877, 876,
	2151, 1713, 1025, 915, 81, 882, 585, 1614, 1026, 889,
	1778, 890, 890, 926, 925, 1295, 908, 973, 533, 533,
	533, 1101, 1746, 924, 1018, 2028, 923, 922, 1984, 921,
	920, 919, 914, 927, 1101, 2115, 533, 533, 868, 2511,
	2497, 868, 1316, 902, 989, 881, 995, 996, 997, 998,
	901, 34, 2125, 1003, 2014, 2013, 2012, 2006, 1050, 2010,
	868, 2005, 1064, 2003, 866, 1415, 1688, 157, 2008, 1035,
	521, 521, 1407, 1829, 1831, 704, 162, 2007, 943, 1063,
	1060, 1061, 1062, 1067, 1069, 1066, 1981, 1065, 1734, 1411,
	1044, 525, 2009, 2011, 1059, 2035, 937, 2133, 2432, 1966,
	1936, 521, 908, 1996, 149, 908, 972, 1939, 2150, 518,
	1969, 2034, 2033, 907, 1290, 1289, 1791, 1027, 911, 901,
	882, 1288, 1600, 1601, 519, 1956, 1412, 1153, 912, 1104,
	1105, 1106, 1107, 918, 2504, 1730, 1286, 2223, 75, 1112,
	916, 1115, 1681, 489, 484, 1315, 913, 2423, 1979, 1148,
	521, 1978, 80, 2442, 1987, 882, 1102, 1103, 2259, 1986,
	1040, 1041, 908, 2241, 176, 1890, 1855, 1818, 2384, 1029,
	1569, 1205, 1987, 908, 1135, 984, 1100, 1986, 1101, 110,
	1638, 176, 1165, 2097, 686, 149, 1169, 1108, 669, 1168,
	1166, 1154, 671, 1032, 80, 1779, 1163, 988, 80, 907,
	533, 80, 907, 1016, 176, 2438, 979, 911, 901, 533,
	1388, 1387, 1389, 1390, 1391, 533, 982, 912, 990, 1830,
	2295, 71, 2235, 929, 713, 1063, 1060, 1061, 1062, 1067,
	1069, 1066, 1125, 1065, 1126, 1002, 1053, 1051, 1052, 1405,
	1059, 1423, 1489, 1744, 1129, 1408, 1004, 1221, 2020, 2398,
	1154, 1167, 1054, 1527, 105, 89, 1490, 1491, 1488, 907,
	1141, 1142, 1143, 1144, 1928, 901, 904, 905, 1073, 868,
	907, 2352, 942, 898, 902, 178, 179, 180, 2270, 1509,
	1159, 1074, 598, 2493, 580, 582, 599, 600, 92, 578,
	581, 601, 897, 2269, 1072, 1073, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 1722, 1717, 1121,
	1729, 106, 167, 168, 169, 170, 1727, 1325, 583, 584,
	2369, 1324, 1314, 1156, 987, 2477, 1527, 668, 1805, 2475,
	1187, 670, 2502, 1017, 1726, 2503, 1725, 2501, 2479, 2480,
	1479, 1481, 1482, 2113, 2114, 917, 1510, 546, 908, 915,
	2476, 1164, 1211, 1212, 975, 1095, 1096, 1098, 1097, 1099,
	1100, 1480, 1184, 176, 2200, 1182, 1813, 1279, 1402, 2447,
	1403, 1424, 717, 1404, 2202, 2495, 1287, 150, 155, 152,
	158, 159, 160, 161, 163, 164, 165, 166, 2260, 1071,
	2512, 1072, 1073, 167, 168, 169, 170, 533, 2022, 1312,
	1071, 2448, 1072, 1073, 1216, 1206, 2416, 1321, 1170, 2514,
	1071, 1323, 1072, 1073, 533, 533, 2105, 533, 2379, 533,
	533, 1722, 533, 533, 533, 533, 533, 533, 1198, 1093,
	1094, 1095, 1096, 1098, 1097, 1099, 1100, 533, 2417, 1182,
	81, 176, 1359, 1182, 2329, 907, 2112, 1322, 1724, 1395,
	1531, 901, 904, 905, 1487, 868, 1794, 176, 2115, 898,
	902, 2106, 1308, 1071, 2513, 1072, 1073, 2328, 533, 2277,
	176, 2276, 1354, 1355, 1071, 2141, 1072, 1073, 1293, 1294,
	2131, 1413, 1913, 1301, 1912, 176, 2108, 1783, 1784, 1785,
	2103, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1097, 1099,
	1100, 176, 1356, 1685, 2113, 2114, 1396, 708, 176, 1393,
	1381, 2104, 1394, 1285, 1606, 1607, 1380, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 533, 533, 533, 1379,
	1320, 1319, 1071, 1383, 1072, 1073, 1370, 1364, 1362, 1363,
	1361, 1311, 1360, 2110, 1368, 1369, 1335, 1298, 1318, 1318,
	1299, 1297, 1427, 1071, 2494, 1072, 1073, 176, 1419, 1431,
	2420, 1433, 1434, 1435, 1436, 616, 617, 618, 1440, 1328,
	1372, 1329, 1392, 1331, 1333, 2419, 2418, 1337, 1339, 1341,
	1343, 1345, 1454, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1098, 1097, 1099, 1100, 2171, 2351, 1382, 1485, 1089, 2349,
	1995, 1357, 1508, 1416, 178, 179, 180, 2112, 2267, 1071,
	1191, 1072, 1073, 2325, 1291, 1517, 533, 2274, 2266, 2115,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1097, 1099,
	1100, 533, 533, 1922, 1492, 603, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1425,
	1426, 1561, 1429, 113, 885, 884, 1910, 1738, 1493, 1192,
	1528, 176, 1801, 1430, 2429, 1737, 1483, 1450, 1451, 1452,
	1437, 1438, 1439, 1597, 1453, 178, 179, 180, 1583, 1796,
	1582, 1195, 1512, 177, 1511, 1456, 177, 176, 1795, 177,
	533, 1420, 1384, 1371, 534, 1584, 177, 1585, 1367, 1071,
	176, 1072, 1073, 533, 177, 1366, 1365, 1486, 176, 1563,
	176, 1193, 176, 176, 533, 1030, 177, 533, 1565, 1566,
	2107, 1561, 1421, 1043, 1071, 1182, 1072, 1073, 533, 713,
	1846, 2508, 713, 89, 1800, 1846, 2466, 1513, 534, 2377,
	88, 534, 177, 534, 1519, 1520, 1194, 1562, 1182, 89,
	2405, 1590, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1075,
	1071, 1616, 1072, 1073, 1564, 1846, 2453, 1567, 1568, 2404,
	1071, 2373, 1072, 1073, 1071, 2296, 1072, 1073, 2372, 1563,
	1846, 2451, 1071, 533, 1072, 1073, 1846, 2434, 2312, 1691,
	1692, 1693, 94, 1642, 1695, 1697, 1946, 683, 1182, 1641,
	1589, 1914, 2304, 2431, 1474, 1475, 1476, 1477, 533, 1624,
	1071, 2208, 1072, 1073, 533, 1321, 2092, 1611, 1321, 1925,
	1321, 2406, 1182, 1647, 1672, 1778, 1721, 1656, 1657, 1658,
	1659, 1592, 1711, 2207, 1846, 2380, 1071, 1645, 1072, 1073,
	1646, 1609, 95, 2234, 1515, 1516, 1678, 1071, 1857, 1072,
	1073, 1629, 1521, 94, 1628, 93, 533, 95, 1508, 1089,
	1792, 1790, 1644, 1508, 1508, 1643, 2236, 1556, 94, 1071,
	93, 1072, 1073, 1708, 178, 179, 180, 717, 1897, 88,
	717, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1097,
	1099, 1100, 178, 179, 180, 546, 1698, 2304, 1182, 176,
	178, 179, 180, 1673, 1696, 1070, 176, 2437, 1668, 1669,
	1846, 176, 176, 1684, 1683, 176, 86, 176, 1686, 1865,
	1694, 1731, 1182, 176, 86, 1846, 2302, 87, 1602, 1603,
	176, 88, 1865, 909, 2121, 87, 1673, 1182, 1716, 1089,
	1733, 1719, 1718, 1720, 1715, 1735, 1736, 1714, 1722, 1182,
	910, 2239, 1182, 1630, 1732, 1636, 1886, 1555, 176, 533,
	1318, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1097,
	1099, 1100, 2123, 2122, 2119, 2120, 2119, 2118, 1769, 1770,
	1864, 1182, 1792, 1772, 1865, 1182, 1792, 1182, 1857, 1182,
	1778, 1965, 1773, 1282, 1950, 1741, 1942, 1943, 1842, 1886,
	1810, 1485, 1846, 1845, 1809, 1651, 1723, 1652, 1653, 1654,
	1655, 1070, 1182, 88, 1674, 1282, 1281, 1227, 1226, 1887,
	2061, 1722, 1705, 1662, 1663, 1664, 1665, 2279, 1889, 1604,
	2234, 1186, 1572, 1762, 1865, 1464, 1410, 1787, 1213, 1789,
	1547, 1536, 1537, 1538, 1539, 1549, 1540, 1541, 1542, 1554,
	1550, 1543, 1544, 1551, 1552, 1553, 1545, 1546, 1548, 2234,
	673, 1788, 1887, 1722, 1350, 892, 891, 2483, 2456, 2173,
	1792, 1778, 81, 176, 2394, 1189, 2370, 2280, 2281, 2282,
	2363, 176, 2294, 2291, 2272, 1824, 1776, 2211, 2210, 533,
	1284, 1870, 1873, 1874, 1875, 1871, 1671, 1872, 1876, 2169,
	533, 2246, 2247, 2146, 2142, 1951, 1667, 1661, 1786, 1660,
	2283, 1486, 1398, 1313, 1351, 1352, 1353, 1309, 1918, 1280,
	177, 107, 177, 176, 176, 177, 1347, 34, 2144, 1919,
	974, 2246, 2247, 2395, 1861, 1682, 1881, 81, 2490, 1896,
	2472, 1804, 2249, 1563, 2138, 2137, 2136, 2061, 1929, 1763,
	1802, 1457, 2252, 534, 534, 534, 2083, 2284, 2285, 2081,
	2085, 2084, 1874, 1875, 2082, 1919, 1843, 2251, 2080, 2079,
	2488, 534, 534, 1348, 1349, 2467, 1596, 1190, 1588, 2240,
	2041, 1562, 2040, 533, 1847, 1948, 1815, 1816, 176, 1159,
	1825, 2227, 2415, 2342, 1833, 176, 2053, 2055, 2344, 2226,
	1880, 587, 1839, 687, 2230, 2056, 2050, 533, 1409, 1941,
	662, 688, 2117, 1900, 533, 1854, 1844, 1904, 1321, 1321,
	1884, 1923, 1523, 533, 939, 938, 86, 86, 2183, 1918,
	1888, 1042, 1891, 88, 1990, 1962, 1524, 87, 87, 1907,
	1908, 1678, 1898, 95, 1958, 1957, 176, 176, 176, 176,
	176, 114, 1901, 2232, 94, 88, 93, 1606, 1607, 2134,
	532, 1806, 1911, 176, 176, 88, 1870, 1873, 1874, 1875,
	1871, 1921, 1872, 1876, 1766, 2430, 1920, 2390, 2116, 176,
	1878, 1593, 695, 696, 2039, 1926, 1755, 1930, 1931, 1932,
	1960, 1782, 2038, 93, 2350, 2348, 1301, 1508, 2347, 177,
	2340, 2292, 95, 2231, 715, 2229, 2147, 865, 1706, 872,
	1296, 1180, 1176, 94, 95, 93, 177, 694, 94, 533,
	669, 2339, 2019, 1842, 2220, 94, 1177, 1961, 1857, 1959,
	2492, 2491, 2492, 533, 2032, 534, 1811, 1207, 1198, 177,
	1199, 1952, 1953, 176, 534, 100, 101, 533, 2421, 2265,
	534, 1586, 1587, 1179, 685, 1178, 533, 97, 82, 1982,
	1, 611, 1998, 533, 533, 2474, 176, 176, 176, 176,
	176, 2032, 502, 2067, 1573, 2043, 675, 1157, 176, 2016,
	1997, 516, 2470, 176, 176, 2058, 176, 1999, 2015, 176,
	176, 176, 2044, 1385, 1375, 2073, 1169, 2064, 2031, 2315,
	2391, 1947, 2064, 1712, 2290, 1676, 900, 139, 1639, 1640,
	2462, 104, 861, 103, 903, 1001, 2042, 1707, 2305, 2045,
	1905, 1648, 2091, 1233, 2132, 1231, 1988, 1232, 1230, 1989,
	176, 1235, 1234, 1229, 1812, 2093, 1458, 677, 2094, 530,
	676, 1877, 174, 533, 2086, 2075, 2076, 1222, 2078, 1200,
	2074, 940, 533, 2077, 2153, 492, 2124, 176, 2095, 1739,
	2090, 89, 498, 1113, 1419, 2037, 1892, 176, 714, 707,
	2069, 2224, 2101, 2049, 2051, 1849, 2054, 2047, 2414, 1180,
	1176, 2341, 176, 2149, 2128, 176, 2454, 2036, 2127, 1902,
	1196, 1803, 1120, 1525, 1177, 2184, 1621, 1581, 177, 2161,
	1478, 555, 554, 552, 2160, 1835, 1858, 1076, 2148, 2152,
	2129, 2130, 606, 1208, 1869, 1678, 1867, 2164, 2072, 1173,
	1174, 1179, 1866, 1178, 1764, 1625, 2248, 2244, 1619, 1841,
	563, 556, 534, 548, 2017, 2018, 604, 2262, 176, 2021,
	2179, 2181, 2182, 2023, 2024, 2025, 2178, 2159, 1968, 534,
	534, 2170, 534, 2192, 534, 534, 1970, 534, 534, 534,
	534, 534, 534, 1903, 2166, 1055, 1172, 2186, 542, 873,
	1522, 2396, 534, 2382, 1781, 2204, 177, 2218, 1171, 1534,
	1535, 2139, 1699, 60, 38, 2185, 537, 2484, 1046, 701,
	32, 2059, 177, 176, 2228, 31, 30, 29, 2221, 28,
	23, 22, 21, 534, 20, 177, 19, 2233, 2243, 25,
	18, 2268, 17, 16, 109, 2253, 176, 47, 44, 42,
	177, 2250, 116, 115, 45, 41, 977, 39, 2257, 2258,
	27, 26, 15, 2255, 176, 14, 177, 176, 176, 176,
	13, 12, 2256, 177, 11, 10, 2161, 533, 533, 2297,
	2298, 2160, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 534, 534, 534, 2300, 9, 2263, 5, 2264, 4,
	1049, 24, 2145, 2, 533, 533, 533, 533, 1934, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 2311, 0, 0, 0, 0, 0, 0,
	0, 0, 2309, 2310, 0, 2273, 0, 2275, 0, 0,
	0, 0, 0, 0, 533, 533, 533, 176, 0, 715,
	715, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2324, 0, 2320, 0, 1045, 1047, 0,
	533, 0, 533, 0, 0, 0, 0, 0, 0, 2067,
	0, 534, 34, 2067, 2337, 2336, 2206, 0, 2346, 2357,
	2345, 669, 2359, 2361, 2353, 0, 534, 534, 2355, 0,
	2334, 2335, 2064, 2189, 2190, 0, 2191, 2321, 0, 2193,
	0, 2195, 0, 2197, 0, 0, 0, 0, 0, 0,
	2365, 2366, 0, 0, 0, 533, 177, 2378, 2368, 0,
	0, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2381, 1151, 2374, 533, 0, 2376, 2375, 0,
	0, 0, 177, 0, 0, 534, 0, 2386, 2385, 0,
	2393, 0, 0, 0, 0, 177, 0, 0, 534, 0,
	0, 0, 0, 177, 0, 177, 0, 177, 177, 534,
	0, 0, 534, 0, 2411, 0, 0, 0, 0, 2413,
	2410, 0, 0, 534, 533, 0, 2425, 0, 0, 2067,
	0, 533, 0, 2428, 0, 0, 2293, 0, 2422, 0,
	0, 0, 0, 669, 0, 2426, 0, 0, 1250, 0,
	2424, 0, 2308, 0, 0, 533, 176, 2439, 0, 0,
	0, 1203, 0, 0, 34, 0, 0, 533, 0, 0,
	715, 2436, 0, 0, 0, 0, 1223, 0, 534, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2322, 0, 2323, 0, 533, 533,
	0, 2326, 2327, 534, 34, 2457, 2461, 0, 0, 534,
	0, 2455, 2449, 2393, 2463, 2452, 0, 0, 0, 2064,
	0, 0, 0, 2481, 2473, 2478, 0, 0, 0, 2354,
	0, 0, 0, 2487, 0, 0, 2489, 0, 0, 0,
	2362, 0, 0, 2364, 533, 0, 2496, 0, 0, 0,
	0, 534, 2498, 0, 0, 2367, 2505, 1089, 0, 0,
	1085, 0, 1086, 0, 0, 0, 2371, 0, 0, 0,
	2515, 0, 0, 0, 0, 1238, 1087, 1088, 1084, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1098, 1097, 1099, 1100,
	0, 0, 0, 0, 177, 546, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 177, 177, 0, 0,
	177, 0, 177, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 2412, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 534, 1251, 0, 0, 865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1151, 0, 0, 0, 1327, 1327, 546, 1327, 0,
	1327, 1327, 0, 1336, 1327, 1327, 1327, 1327, 1327, 0,
	0, 0, 0, 0, 0, 0, 1151, 1151, 865, 0,
	0, 0, 0, 0, 588, 0, 0, 1264, 1267, 1268,
	1269, 1270, 1271, 1272, 0, 1273, 1274, 1275, 1276, 1277,
	1252, 1253, 1254, 1255, 1236, 1237, 1265, 0, 1239, 1397,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 0, 0,
	2482, 0, 175, 0, 0, 488, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 177, 0,
	0, 0, 0, 488, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 534, 682, 0, 715, 715, 715,
	0, 0, 0, 0, 0, 534, 0, 0, 0, 0,
	1181, 700, 0, 700, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 177, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 534, 0,
	0, 0, 0, 177, 1151, 0, 0, 0, 0, 0,
	177, 0, 1532, 1533, 0, 0, 0, 715, 0, 0,
	0, 0, 534, 172, 0, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 1940, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 177, 177, 177, 177, 177, 0, 0, 0, 0,
	0, 1595, 0, 0, 0, 0, 0, 0, 177, 177,
	0, 0, 0, 0, 1203, 0, 0, 715, 0, 0,
	0, 146, 0, 0, 177, 715, 135, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 154,
	0, 0, 0, 0, 0, 1304, 1305, 145, 144, 171,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 534, 0, 872, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 534, 534,
	0, 177, 177, 177, 177, 177, 0, 0, 0, 865,
	0, 0, 0, 177, 0, 872, 0, 0, 177, 177,
	0, 177, 0, 0, 177, 177, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 1306, 147, 0, 1303, 0, 141, 142,
	0, 0, 0, 157, 0, 0, 0, 865, 0, 0,
	0, 0, 162, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	177, 613, 73, 0, 0, 0, 0, 0, 0, 488,
	0, 488, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 73, 0, 0, 72, 36,
	37, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 672, 0, 0, 0, 0, 78, 0,
	0, 0, 40, 66, 67, 0, 64, 68, 177, 0,
	0, 0, 0, 0, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 1152, 0, 0, 137,
	0, 0, 138, 0, 53, 0, 0, 0, 0, 177,
	0, 715, 177, 177, 177, 81, 0, 0, 0, 0,
	0, 0, 534, 534, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 488, 534,
	534, 534, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 488, 534,
	534, 534, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 534, 0, 534, 0, 167,
	168, 169, 170, 0, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 46, 49, 48, 51,
	0, 63, 0, 0, 69, 0, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 1949, 0, 1183, 1185, 0,
	0, 0, 0, 0, 1954, 0, 52, 77, 76, 0,
	534, 61, 62, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 55, 0, 56, 57, 58, 59,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 534, 488, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 536, 0, 0, 0, 0, 0, 0, 0, 665,
	534, 177, 0, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 2046, 0,
	0, 0, 0, 0, 1152, 0, 0, 715, 0, 534,
	0, 1151, 0, 0, 2071, 1327, 1151, 869, 0, 0,
	0, 0, 0, 534, 534, 0, 0, 0, 0, 1152,
	1152, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 1373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 488, 0, 0, 0, 0, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1037,
	1037, 1037, 0, 0, 865, 488, 0, 1151, 0, 0,
	0, 0, 488, 1595, 0, 0, 0, 0, 0, 73,
	0, 1441, 1442, 488, 488, 488, 488, 488, 488, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 672, 1109, 1110, 1111,
	0, 1114, 0, 1116, 1117, 1118, 1119, 0, 1122, 1124,
	1124, 488, 1124, 1128, 1128, 1130, 1131, 1132, 1133, 1134,
	0, 1136, 1137, 1138, 1139, 1140, 0, 0, 0, 0,
	1128, 1128, 1128, 1128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 700, 0, 0, 0, 0, 0,
	0, 700, 700, 0, 0, 0, 0, 1152, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 700,
	1418, 700, 700, 700, 700, 700, 0, 1161, 0, 0,
	672, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	672, 0, 0, 0, 0, 1373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 1595, 1595,
	1418, 0, 488, 0, 488, 0, 488, 1627, 0, 0,
	0, 0, 0, 0, 0, 1529, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 2316, 2317, 2318, 2319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 1571, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2332, 2332, 2332, 0, 0,
	0, 0, 0, 0, 0, 1591, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 1151, 0, 1300, 0,
	0, 2358, 0, 2360, 0, 978, 0, 983, 0, 0,
	985, 114, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 1595, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 153, 0, 154, 0, 0, 0, 0, 0, 1304,
	1305, 145, 144, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 488, 488, 0, 0, 488,
	0, 1767, 0, 0, 0, 1595, 0, 488, 0, 0,
	0, 0, 1595, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1595, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 2445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1151, 0, 2450, 140, 1306, 147, 0,
	1303, 0, 141, 142, 0, 0, 0, 157, 0, 715,
	715, 0, 0, 0, 0, 0, 162, 1037, 1037, 1037,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1210, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1595, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 700, 700, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 1373, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1793, 149, 0, 0, 1797, 0,
	1798, 1799, 0, 0, 0, 0, 0, 488, 488, 1807,
	0, 0, 1808, 81, 0, 0, 0, 0, 0, 607,
	614, 615, 616, 617, 618, 608, 610, 0, 0, 0,
	609, 0, 0, 612, 619, 620, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 1819, 1820, 1821, 1822, 1823,
	0, 1591, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1834, 1228, 0, 0, 0, 0, 0, 0,
	143, 0, 488, 1622, 0, 0, 2162, 2163, 0, 1933,
	0, 0, 0, 137, 0, 0, 138, 0, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 0,
	488, 488, 488, 488, 488, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 0, 488, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	1399, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 155, 152,
	158, 159, 160, 161, 163, 164, 165, 166, 0, 0,
	0, 1428, 700, 167, 168, 169, 170, 0, 1432, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1152, 0, 0, 0, 0, 1152,
	488, 488, 488, 488, 488, 0, 0, 1467, 0, 0,
	0, 0, 2087, 0, 0, 0, 0, 488, 1373, 0,
	488, 0, 0, 488, 2096, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 0, 2029, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 598, 0,
	0, 0, 599, 600, 488, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 2070, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	2088, 2089, 0, 0, 0, 0, 488, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	1615, 0, 0, 1467, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 672, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 1863, 488, 0, 0,
	0, 0, 2188, 0, 1882, 0, 0, 0, 114, 0,
	136, 0, 0, 0, 0, 0, 2198, 2199, 2201, 2203,
	488, 156, 0, 0, 0, 0, 2209, 0, 0, 0,
	0, 0, 2212, 0, 0, 0, 0, 2216, 488, 0,
	0, 488, 488, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2237,
	2238, 0, 0, 2242, 0, 0, 0, 0, 153, 0,
	154, 0, 0, 0, 0, 0, 123, 124, 145, 144,
	171, 2254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 1373, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 1760, 1761, 0, 0, 1765, 0, 0, 0, 1152,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 2303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 140, 121, 147, 128, 120, 0, 141,
	142, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2331, 0, 0, 0, 132, 130,
	125, 126, 127, 131, 1622, 0, 0, 0, 122, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 2068, 0, 73, 0, 0, 1622, 1622, 1622,
	1622, 1622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 1622, 0, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 2389,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2399, 2400, 2401, 1152, 2402, 2403, 0,
	0, 2407, 0, 0, 0, 2408, 2409, 0, 0, 0,
	2158, 0, 0, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2187, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2441, 0, 0,
	137, 0, 0, 138, 0, 0, 0, 0, 1927, 0,
	0, 0, 0, 0, 0, 2213, 2214, 2215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 1974, 1975, 1976,
	1977, 0, 0, 0, 1622, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 1983, 0, 0, 2261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 0, 0, 0, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	73, 0, 2068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2156, 0, 0,
	0, 2383, 0, 0, 0, 0, 0, 2165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2177, 0, 0, 2180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1133, 0, 0, 0, 0, 0, 0, 2217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2286, 0, 0, 2287, 2288, 2289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 2464, 0, 2465,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 203, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 0, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 2440, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 1039, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 203, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 2097, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 0, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 1039, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 203, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 2057, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 0, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 1039, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 203, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 1610, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 0, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 1039, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	81, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 203, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 0, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 0, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 1039, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 203, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 0, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 0, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 1039, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 860, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 0, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 0, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 730, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 718, 712, 711, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 860, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 0, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 0, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	1214, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 730, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 718, 712, 711, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 843, 829, 410, 0, 777, 846, 747, 765,
	856, 768, 771, 811, 726, 790, 333, 762, 0, 751,
	722, 757, 723, 749, 779, 237, 746, 831, 794, 845,
	289, 234, 728, 752, 347, 767, 187, 813, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 852, 293, 800, 0, 395, 318, 0, 0,
	0, 781, 835, 788, 825, 776, 812, 736, 799, 847,
	763, 808, 848, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 759,
	805, 842, 760, 807, 232, 277, 239, 231, 414, 853,
	834, 0, 0, 860, 844, 783, 0, 810, 0, 859,
	721, 802, 0, 724, 727, 855, 838, 755, 242, 0,
	0, 0, 0, 0, 0, 0, 780, 789, 822, 774,
	0, 0, 0, 0, 0, 0, 0, 753, 0, 798,
	0, 0, 0, 732, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	735, 0, 754, 823, 0, 719, 260, 729, 319, 0,
	827, 837, 775, 447, 841, 773, 772, 817, 733, 833,
	766, 288, 731, 285, 182, 199, 0, 764, 329, 369,
	375, 832, 750, 758, 223, 756, 373, 343, 431, 207,
	250, 366, 348, 371, 797, 815, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	709, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 730, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 745, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 828, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 718, 712, 711, 286, 295, 820, 858,
	342, 374, 213, 433, 394, 740, 744, 738, 739, 792,
	793, 741, 849, 850, 851, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 824, 734, 0, 742, 743, 0,
	830, 839, 840, 483, 796, 181, 196, 291, 854, 363,
	253, 461, 441, 437, 720, 737, 229, 748, 0, 0,
	761, 769, 770, 782, 784, 785, 786, 787, 315, 803,
	804, 806, 814, 816, 819, 821, 826, 836, 857, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	795, 801, 302, 247, 265, 276, 809, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 791, 818, 298, 411,
	412, 272, 410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 1558, 0, 564,
	0, 0, 0, 237, 569, 0, 0, 0, 289, 234,
	0, 1559, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	576, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 571, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 81, 0,
	0, 178, 179, 180, 607, 614, 615, 616, 617, 618,
	608, 610, 0, 0, 211, 609, 218, 585, 612, 619,
	620, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 547,
	561, 0, 575, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 559, 698, 0, 0, 0, 592, 0, 560,
	0, 0, 568, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 591, 0,
	0, 447, 0, 0, 589, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 598, 590, 580, 582, 599, 600, 577,
	578, 581, 601, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 593, 567, 566, 0, 573, 574, 0, 583,
	584, 586, 565, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 564, 0, 0, 0, 237, 569, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 576, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 571, 572, 0, 0, 0, 0, 0,
	0, 1634, 0, 279, 220, 186, 330, 396, 252, 0,
	81, 0, 0, 178, 179, 180, 607, 614, 615, 616,
	617, 618, 608, 610, 0, 0, 211, 609, 218, 585,
	612, 619, 620, 1635, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 547, 561, 0, 575, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 559, 0, 0, 0, 0, 592,
	0, 560, 0, 0, 568, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	591, 0, 0, 447, 0, 0, 589, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 598, 590, 580, 582, 599,
	600, 577, 578, 581, 601, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 593, 567, 566, 0, 573, 574,
	0, 583, 584, 586, 565, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 72, 410, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 564, 0, 0, 0, 237, 569,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 576, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 571, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 81, 0, 0, 178, 179, 180, 607,
	614, 615, 616, 617, 618, 608, 610, 0, 0, 211,
	609, 218, 585, 612, 619, 620, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 547, 561, 0, 575, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 559, 0, 0,
	0, 0, 592, 0, 560, 0, 0, 568, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 591, 0, 0, 447, 0, 0, 589,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 598, 590,
	580, 582, 599, 600, 577, 578, 581, 601, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 593, 567, 566,
	0, 573, 574, 0, 583, 584, 586, 565, 181, 196,
	291, 80, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 564, 0, 0, 0,
	237, 569, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 576, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 571, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 81, 0, 0, 178, 179,
	180, 607, 614, 615, 616, 617, 618, 608, 610, 0,
	0, 211, 609, 218, 585, 612, 619, 620, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 547, 561, 0, 575,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 559,
	0, 0, 0, 0, 592, 0, 560, 0, 0, 568,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 591, 0, 0, 447, 0,
	0, 589, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 2435,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	598, 590, 580, 582, 599, 600, 577, 578, 581, 601,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 593,
	567, 566, 0, 573, 574, 0, 583, 584, 586, 565,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 564, 0,
	0, 0, 237, 569, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 576,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	571, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 81, 0, 1182,
	178, 179, 180, 607, 614, 615, 616, 617, 618, 608,
	610, 0, 0, 211, 609, 218, 585, 612, 619, 620,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 547, 561,
	0, 575, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 559, 0, 0, 0, 0, 592, 0, 560, 0,
	0, 568, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 591, 0, 0,
	447, 0, 0, 589, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 598, 590, 580, 582, 599, 600, 577, 578,
	581, 601, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 593, 567, 566, 0, 573, 574, 0, 583, 584,
	586, 565, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	564, 0, 0, 0, 237, 569, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 576, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 571, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 81,
	0, 0, 178, 179, 180, 607, 614, 615, 616, 617,
	618, 608, 610, 0, 0, 211, 609, 218, 585, 612,
	619, 620, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	547, 561, 0, 575, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 559, 698, 0, 0, 0, 592, 0,
	560, 0, 0, 568, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 591,
	0, 0, 447, 0, 0, 589, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 598, 590, 580, 582, 599, 600,
	577, 578, 581, 601, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 593, 567, 566, 0, 573, 574, 0,
	583, 584, 586, 565, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 564, 0, 0, 0, 237, 569, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 576, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 571, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 81, 0, 0, 178, 179, 180, 607, 614, 615,
	616, 617, 618, 608, 610, 0, 0, 211, 609, 218,
	585, 612, 619, 620, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 547, 561, 0, 575, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 559, 0, 0, 0, 0,
	592, 0, 560, 0, 0, 568, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 591, 0, 0, 447, 0, 0, 589, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 598, 590, 580, 582,
	599, 600, 577, 578, 581, 601, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 593, 567, 566, 0, 573,
	574, 0, 583, 584, 586, 565, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 564, 0, 0, 0, 237, 569,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 576, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 571, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 81, 0, 0, 178, 179, 180, 607,
	614, 615, 616, 617, 618, 608, 610, 0, 0, 211,
	609, 218, 585, 612, 619, 620, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 575, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 559, 0, 0,
	0, 0, 592, 0, 560, 0, 0, 568, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 591, 0, 0, 447, 0, 0, 589,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 598, 590,
	580, 582, 599, 600, 577, 578, 581, 601, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 593, 567, 566,
	0, 573, 574, 0, 583, 584, 586, 565, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 203, 0,
	908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 907, 447, 0,
	0, 0, 0, 0, 904, 905, 288, 868, 285, 182,
	199, 898, 902, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 1202, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 1204, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 1071, 0, 1072, 1073, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 1147, 1150, 0, 0, 0,
	0, 1146, 1149, 0, 0, 211, 1145, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 72, 410, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 81, 0, 1182, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 181, 196, 291,
	80, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 72, 410,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 81, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 0, 447, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	181, 196, 291, 80, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 1580, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 1374, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 1578, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	288, 868, 285, 182, 199, 866, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 1580, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 1374, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 1182, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 0, 0, 0, 447, 0, 0, 0,
	2333, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 0, 447, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 1837, 0, 0, 0,
	1838, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 1225, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 2446, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 0, 0, 0, 447, 0, 0, 0,
	2333, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 81, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 0, 447, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 1374, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 0, 410, 298, 411, 412, 272, 1623,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 1204,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 1465, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 1346, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 1344, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	1342, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 1340, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 1338, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 1334, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 1332, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	1330, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 1307, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	1209, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 1048, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 538, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 486, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 81, 0, 298, 411, 412, 272, 607, 614,
	615, 616, 617, 618, 608, 610, 0, 0, 0, 609,
	0, 0, 612, 619, 620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2162, 2163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661,
}

var yyPact = [...]int{
	3192, -1000, -387, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1706, 1738, -1000, -1000, -1000, -1000, 1835,
	-1000, 671, 1538, -1000, 1722, 4719, -1000, 33343, 430, -1000,
	32801, 429, 79, 33343, -1000, 103, -1000, 80, 33343, 98,
	32259, -1000, -1000, -303, 13828, 1668, -8, -11, 33343, -1000,
	1809, 1554, -1000, 280, -1000, -1000, -1000, -1000, -1000, -1000,
	31717, -1000, -1000, -1000, 1728, 1707, 1844, 542, 1663, -1000,
	1775, 1554, -1000, 13828, 1800, 1761, 13286, -1000, 13286, 357,
	-1000, -1000, 10027, -1000, -1000, 18166, 33343, 33343, 276, -1000,
	1722, -1000, -1000, 341, -1000, 263, 1482, -1000, 1481, -1000,
	544, 398, 284, 392, 385, 283, 282, 281, 279, 278,
	275, 266, 265, 288, -1000, 591, 591, -186, -187, 271,
	329, 329, 329, 379, 1692, 1691, -1000, 555, -1000, 591,
	591, 261, 591, 591, 591, 591, 211, 209, 591, 591,
	591, 591, 591, 591, 591, 591, 591, 591, 591, 591,
	591, 591, 591, 241, 1722, 157, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 33343, 126, 33343, -1000, 475, 33343,
	684, 684, 9, 684, 684, 684, 684, 112, 520, -17,
	-1000, 110, 202, 74, 148, 691, 145, 102, -1000, -1000,
	143, 691, 1125, 553, 82, -1000, 684, 7827, 7827, 7827,
	-1000, 1701, -1000, -1000, -1000, -1000, -1000, -1000, 1136, -1000,
	373, -1000, -1000, -1000, -1000, 33343, 31175, 231, 620, -1000,
	-1000, -1000, 64, -1000, -1000, 1321, 912, 13828, 1120, -1000,
	2376, 522, -1000, -1000, -1000, -1000, -1000, 455, 14370, 14370,
	14370, 14370, -1000, -1000, 1489, 1489, 1489, 1489, 14370, 1489,
	14370, 1489, 1489, 1489, 1489, 13828, 1489, 1489, 1489, -1000,
	1489, 1489, 1489, 1489, 1489, 1489, 1489, 1489, 474, 1489,
	1489, 1489, 1489, 1489, -1000, -1000, -1000, -1000, 1489, 1489,
	1489, 1489, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15996, -1000, 11660, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 33343, -1000, 1489, 104, 1775, 1554, -1000,
	1809, 1797, 280, -1000, 1958, 1352, 1404, 1163, 1554, 1447,
	33343, -1000, 1492, -1000, -1000, -1000, 1618, 1069, 1121, -1000,
	-1000, -1000, -1000, 1162, 13828, -1000, -1000, 1828, -1000, 15454,
	471, 807, 1825, 30633, -1000, 357, 357, 1454, 9477, -26,
	-1000, -1000, -1000, 615, 20876, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1701, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1433, 33343, -1000, -1000, 2358, 1089, -1000, 1536, -1000,
	1431, -1000, 1507, 1552, 422, 1089, 406, 400, 399, -1000,
	-99, -1000, -1000, -1000, -1000, -1000, 591, 591, -1000, 270,
	1793, 4719, 3922, -1000, -1000, -1000, 30091, 1534, 1089, -1000,
	1530, -1000, 704, 425, 484, 484, 1089, -1000, -1000, 33343,
	1089, 703, 699, 33343, 33343, -1000, 29549, -1000, 29007, 28465,
	954, 33343, 27923, 27381, 26839, 26297, 25755, -1000, 1597, -1000,
	1535, -1000, -1000, -1000, 33343, 33343, 33343, 262, -1000, -1000,
	33343, 1089, -1000, -1000, 950, 948, 591, 591, 945, 1116,
	1115, 1108, 591, 591, 944, 1103, 23044, 193, 937, 924,
	918, 1004, 1102, 174, 980, 920, 914, 33343, 1529, 33343,
	-1000, 128, 665, 295, 613, 1722, 1666, 1452, 372, 412,
	1089, 346, 346, -1000, 8377, -1000, -1000, 1101, 13828, -1000,
	729, 691, 691, -1000, -1000, -1000, -1000, -1000, -1000, 684,
	33343, 729, -1000, -1000, -1000, 691, 684, 33343, 684, 684,
	684, 684, 691, 691, 691, 684, 33343, 33343, 33343, 33343,
	33343, 33343, 33343, 33343, 33343, 7827, 7827, 7827, 553, 684,
	-307, -1000, 1095, -1000, 1577, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 97, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -110, 1451, 25213, -1000, -308, -309,
	-313, -319, -1000, -1000, -1000, -321, -323, -1000, -1000, -1000,
	13828, 13828, 13828, 13828, -1000, 737, 14370, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 857, 616, 14370, 14370, 14370, 14370,
	14370, 14370, 14370, 14370, 14370, 14370, 14370, 14370, 14370, 14370,
	14370, 689, 1094, 1092, 522, 522, 522, 522, -1000, 13286,
	13828, 13828, 522, -1000, 1089, 24671, 13286, 13286, 13828, 1700,
	625, 912, 33343, -1000, 1163, -1000, -1000, -1000, 858, -1000,
	33343, 33343, 1152, 13828, 10575, 8377, 13286, 13286, 13286, 13286,
	13286, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 470, 1337, 1396, 1427, -1000, 1448, -1000, -167,
	17624, 13828, 1088, -1000, -1000, -1000, 1775, -1000, 1775, 1337,
	1790, 1621, 13286, -1000, -1000, 1790, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1213, -1000, 33343, 1447, 1758, 33343,
	1616, 1083, 292, -1000, 13828, 13828, 1445, -1000, 989, 33343,
	-1000, -1000, 24129, -1000, -1000, 7277, -1000, 33343, 259, 33343,
	-1000, 22502, 23587, 8927, -26, -1000, 8927, 1369, -1000, -40,
	-47, 11117, 524, -1000, -1000, -1000, 271, 14912, 1255, 524,
	30, -1000, -1000, -1000, 1507, -1000, 1507, 1507, 1507, 1507,
	292, 292, 292, 292, -1000, -1000, -1000, -1000, -1000, 1526,
	1524, -1000, 1507, 1507, 1507, 1507, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1523, 1523, 1523, 1513, 1513, 316, -1000,
	13828, 221, 33343, 1732, 911, 128, 347, 1560, 1089, 1089,
	1089, 347, -1000, 1314, 1306, -1000, -379, 1438, -1000, -1000,
	1791, -1000, -1000, 730, 738, 734, 487, 33343, 116, 253,
	-1000, 313, -1000, 33343, 1089, 690, 484, 1089, -1000, 1089,
	-1000, -1000, -1000, -1000, -1000, 1089, 1437, -1000, 1479, 837,
	725, 723, 705, 1437, -1000, -1000, -122, 1437, -1000, 1437,
	-1000, 1437, -1000, 1437, -1000, 1437, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 605, 33343, 116, 689, -1000, 371,
	-1000, -1000, 689, 689, -1000, -1000, -1000, -1000, 1075, 1067,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -364, 33343, -1000,
	127, 611, 230, 268, 192, 33343, 132, 1765, 190, 178,
	33343, 33343, 346, 1575, 33343, 1750, 33343, -1000, -1000, -1000,
	-1000, 912, 33343, -1000, -1000, 684, 684, -1000, -1000, 33343,
	684, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 684,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33343, 33343, -1000,
	-1000, -1000, -1000, -1000, 210, -42, 274, -1000, -1000, -1000,
	-1000, -1000, 1771, -1000, 912, 672, 645, -1000, -1000, -1000,
	884, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 857, 14370,
	14370, 14370, 1238, 378, 1318, 940, 847, 783, 783, 707,
	707, 523, 523, 523, 523, 523, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1402, -1000, 933, 1104, 1163, -1000, 1402,
	1402, 1150, 13286, -1000, -1000, 698, -1000, 13828, 1163, -1000,
	-1000, 1163, 1420, 1416, 1824, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 843, 1163, 13286, 13286,
	1398, 1489, 467, -1000, 1402, 1163, 1163, 1402, 1402, 8377,
	1163, -1000, 33343, -1000, -299, -1000, -61, 501, 1489, -1000,
	23044, 1163, 1321, -1000, -1000, -1000, -1000, -1000, 20334, 1486,
	1790, -1000, -1000, 1489, 1418, -1000, -1000, 292, 8, 19792,
	-1000, -1000, 912, 912, 13828, -1000, -1000, -1000, -1000, -1000,
	-1000, 466, 1815, 273, 1489, -1000, 1450, 1702, -1000, -1000,
	-1000, 1757, 17082, 33343, 1487, 1444, -1000, 465, -1000, 1369,
	-26, -53, -1000, -1000, -1000, -1000, 912, -1000, 1288, 264,
	352, -1000, 335, -1000, -1000, -1000, -1000, 1679, 14, -1000,
	-1000, -1000, 292, 292, -1000, -1000, -1000, -1000, -1000, -1000,
	1066, 1066, -1000, -1000, -1000, -1000, -1000, 892, -1000, -1000,
	-1000, 890, -1000, -1000, 1216, 1587, 221, -1000, -1000, 591,
	1043, 1684, 33343, -1000, -1000, 1234, 127, 33343, 640, 1574,
	-1000, 1560, 1560, 1560, 33343, -1000, -1000, -1000, -1000, -368,
	46, 267, -1000, -1000, -1000, 2838, 33343, 1412, -1000, 113,
	-1000, 1211, 1630, 33343, -1000, 1409, 1522, 1089, 1089, -1000,
	-1000, -1000, 33343, 1489, -1000, -1000, -1000, -1000, 411, 1716,
	1715, 116, 113, 524, 1089, -1000, -1000, -1000, -1000, -1000,
	-371, 1406, 383, 118, 226, 33343, 33343, 33343, 33343, 33343,
	443, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 170,
	369, -1000, 33343, 33343, 444, -1000, -1000, -1000, 691, -1000,
	-1000, 691, -1000, -1000, -1000, -1000, -1000, 1703, 33343, -49,
	-338, -1000, -335, -1000, -1000, -1000, -1000, 977, 365, 1318,
	14370, 14370, 13286, -116, 257, 257, 689, -1000, -1000, -1000,
	13828, 13828, 1276, 617, -1000, 13828, 769, -1000, -1000, 13828,
	13828, 13828, 1163, 219, -1000, 1402, 1402, 13286, 8377, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 397,
	396, 380, 33343, -1000, -1000, 1772, -1000, 1627, 1625, 1811,
	1815, -1000, 22502, 1790, -1000, -1000, 33343, -291, -1000, 1662,
	1651, -1000, -1000, -1000, -1000, 6727, 1775, 13828, 1573, 33343,
	1489, -1000, 16539, 33343, 33343, 22502, 22502, 22502, 22502, 22502,
	-1000, 1605, 1604, -1000, 1595, 1592, 1596, 33343, -1000, 1400,
	1163, 1797, 17082, 18708, 1241, 22502, -1000, -1000, 22502, 33343,
	6177, -1000, -1000, -54, -66, -1000, -1000, -1000, -1000, 271,
	-1000, -1000, 887, 1755, 1673, -1000, -1000, -1000, -1000, 1392,
	-1000, 1390, 1350, 1388, 94, -1000, 1551, 1698, 591, 591,
	-1000, 888, -1000, 1089, -1000, -1000, 381, -1000, 1735, 33343,
	1572, 1571, 1570, -1000, -378, 883, 1521, 1550, 13828, 1520,
	1789, 1326, 33343, -1000, -1000, 33343, -1000, -1000, 358, -1000,
	221, 33343, -1000, -1000, -1000, 253, 33343, -1000, 33809, 113,
	-1000, -1000, -1000, -1000, -1000, -1000, 33343, 142, -1000, 1516,
	1007, -1000, -1000, 1494, -1000, -1000, -1000, -1000, 119, 229,
	-1000, 33343, 426, 1587, 33343, -1000, -1000, -1000, 684, 684,
	-1000, -1000, 1697, -1000, 1089, 14370, 14370, -1000, 522, -1000,
	1489, 1163, 1507, 1507, -1000, 1507, 1513, -1000, 1507, 85,
	1507, 81, 1507, -1000, -1000, 1163, 1163, 780, 854, -107,
	-1000, 912, 13828, 1249, 1227, 1140, -1000, 1505, 1504, -1000,
	-1000, 1163, -1000, 1489, 1489, 1489, 1364, 33343, -1000, -1000,
	-1000, -1000, 1815, 1810, 1348, -1000, -1000, 8, 325, -1000,
	1646, 1651, -1000, 1788, 1657, 1786, -1000, -1000, -1000, 912,
	-1000, 1725, 1446, -1000, 590, 1282, -1000, -1000, 12744, 1367,
	1624, 463, 1364, 1475, 1702, 1557, 1568, 1527, -1000, -1000,
	-1000, -1000, 1603, -1000, 1588, -1000, -1000, 1492, -1000, -1000,
	1396, 259, 22502, 1335, 1335, -1000, 458, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 785, 4190, 1839, -1000, 1028, -1000,
	1018, -1000, 675, 660, -1000, 33343, 1501, -1000, 292, 1027,
	292, 879, -1000, 877, -1000, -1000, -232, -1000, -1000, 1498,
	1581, -1000, -1000, 33343, -1000, -1000, 33343, 33343, 33343, 1500,
	1784, -1000, 13828, 1499, 588, 1190, 33343, 33343, -1000, -1000,
	242, 1489, -1000, 1341, 1313, -1000, -189, -1000, 13828, -1000,
	-1000, -1000, 973, 973, -1000, 1492, -1000, -1000, -1000, 1203,
	-1000, -1000, -126, 33343, 33343, 33343, 33343, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 522, 14370, -1000, -1000,
	292, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13828, -1000, 13828, -1000, 1775, 1023, 912, 13828, 13828, -1000,
	875, 852, -1000, 19250, 21960, 21960, 18708, -1000, 1810, 1806,
	1783, 1642, 1648, 1648, 1646, -1000, 1781, 1778, -1000, 1009,
	1777, 1005, 653, -1000, 33343, 13828, 1489, -1000, 277, 33343,
	1489, 33343, -1000, 1802, -1000, -1000, 13828, 1497, -1000, 13828,
	-1000, -1000, -1000, -1000, -1000, 1815, 1335, -1000, -1000, 535,
	-1000, 13828, -1000, -1000, -1000, 404, -1000, -1000, -1000, -1000,
	-1000, 1493, 13828, -1000, -1000, -1000, 1193, 1186, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1492, -1000, -1000, -1000,
	-1000, 253, -376, 1154, 33343, 826, -1000, 1250, 1326, 421,
	-1000, 13828, 303, -1000, 253, -1000, -194, -196, 1140, -1000,
	-1000, 1754, -1000, -1000, 8377, -1000, -1000, 1491, 1558, -1000,
	328, -1000, 1140, 1140, 1163, -1000, 1140, 1140, 1184, 1165,
	1237, -1000, -1000, -1000, 1237, 1237, 501, 1806, -1000, 13828,
	13828, 1640, 832, -1000, -1000, -1000, -1000, 986, 985, -1000,
	970, -1000, 1838, -1000, 912, -1000, 1489, -1000, 447, 1282,
	-1000, 1775, 912, 33343, 912, 1802, -1000, 1140, -1000, 1489,
	33343, 1079, -1000, -1000, 1752, 1218, 44, -1000, 1202, -1000,
	-1000, -1000, -1000, 12202, -1000, -1000, -1000, -1000, -1000, -1000,
	280, 1323, -1000, 573, 33343, 33343, 1163, 234, -135, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21418, -1000, -1000, -1000,
	-1000, -1000, 912, 1321, -1000, 795, -1000, -1000, -1000, -1000,
	-1000, 33343, 1282, 33343, -1000, 1196, 1775, -1000, 1181, -1000,
	280, -1000, 1485, 1550, -1000, 1163, -124, 8377, 5627, 1151,
	-1000, -1000, 1615, -119, -143, -1000, -1000, -1000, -1000, 1259,
	-1000, -1000, -1000, 1566, 726, -124, 13828, 1484, -1000, -1000,
	-48, -1000, -1000, -1000, -1000, -1000, 1494, -1000, 1610, -1000,
	1564, -1000, 1820, -1000, -1000, -1000, 680, 964, -1000, -1000,
	-1000, -1000, 790, 33343, 315, -1000, -1000, -126, -129, -1000,
	1822, 604, 604, -1000, -1000, -384, 1146, 138, -1000, -137,
	-1000, -1000, -1000, 312, 861, -1000, -1000, 817, -384, -1000,
	-174, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2179, 2178, 11, 1, 2173, 13, 77, 152, 20,
	182, 74, 2171, 2170, 2169, 2167, 200, 199, 198, 2165,
	2145, 2144, 2141, 2140, 2135, 2132, 2131, 2130, 2127, 183,
	144, 149, 2126, 2125, 2124, 90, 155, 66, 71, 159,
	2123, 2122, 56, 2119, 2118, 2117, 179, 178, 679, 2114,
	177, 97, 24, 2113, 2112, 2110, 2109, 2106, 2104, 2102,
	2101, 2100, 2099, 2097, 2096, 2095, 2090, 234, 2089, 2088,
	7, 2087, 63, 2086, 2084, 2083, 102, 2082, 2081, 2080,
	2079, 2078, 2075, 121, 2074, 2073, 2071, 2070, 156, 2069,
	2068, 127, 80, 94, 2066, 2065, 75, 139, 2064, 98,
	2063, 2056, 2051, 132, 2048, 233, 2047, 62, 45, 2037,
	47, 70, 40, 39, 2036, 2033, 2031, 60, 89, 2030,
	76, 49, 2029, 84, 78, 2028, 43, 2027, 2026, 96,
	2025, 2024, 2022, 67, 2016, 2014, 3460, 2013, 68, 116,
	23, 34, 2012, 2007, 2006, 2005, 2003, 32, 2002, 2001,
	2000, 119, 18, 1997, 21, 12, 31, 122, 1996, 37,
	57, 1993, 115, 1992, 1991, 35, 16, 19, 1990, 17,
	110, 129, 28, 79, 112, 1989, 1986, 36, 50, 1981,
	1978, 1977, 1976, 1975, 1974, 42, 1973, 33, 1971, 185,
	1970, 2, 27, 55, 41, 154, 44, 30, 1969, 163,
	1968, 29, 140, 101, 136, 1966, 1965, 1963, 146, 225,
	1962, 1959, 52, 145, 120, 128, 1956, 220, 1955, 1951,
	73, 1135, 1701, 15, 138, 1949, 1947, 2644, 111, 113,
	38, 1942, 157, 1941, 1939, 1936, 160, 141, 82, 904,
	92, 1934, 1933, 1932, 1931, 1928, 1927, 1925, 1923, 270,
	161, 86, 93, 133, 46, 1921, 1920, 1918, 100, 65,
	1917, 137, 134, 109, 143, 1915, 150, 125, 123, 1914,
	91, 1913, 1912, 1911, 1910, 72, 1909, 1908, 1907, 1906,
	131, 130, 99, 64, 1905, 58, 95, 135, 124, 26,
	1904, 22, 1903, 1901, 158, 8, 1900, 4, 0, 1899,
	6, 142, 230, 126, 1894, 1893, 3, 1882, 5, 1881,
	1877, 117, 1874, 1872, 1865, 10, 25, 9, 1861, 1860,
	1858, 3121, 2740, 104, 1857, 153,
}

//line sql.y:6117
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 319, 320, 320, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 298, 298, 298, 301, 301,
	27, 62, 29, 29, 28, 28, 31, 31, 30, 6,
	6, 6, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 9, 9, 11,
	11, 11, 11, 11, 14, 15, 10, 10, 16, 16,
	74, 74, 17, 18, 18, 18, 18, 323, 323, 131,
	131, 129, 129, 130, 130, 194, 194, 19, 20, 20,
	204, 204, 203, 203, 203, 205, 205, 205, 205, 239,
	239, 21, 21, 21, 21, 21, 89, 89, 300, 300,
	299, 297, 297, 296, 296, 295, 33, 34, 43, 43,
	43, 43, 44, 45, 302, 302, 271, 49, 49, 48,
	48, 48, 48, 50, 50, 47, 47, 46, 46, 273,
	273, 260, 260, 272, 272, 272, 272, 272, 272, 272,
	259, 259, 100, 100, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 314, 314, 176, 176, 176,
	176, 176, 176, 109, 109, 117, 117, 117, 117, 107,
	107, 108, 106, 106, 106, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 116, 116,
	113, 113, 113, 114, 114, 114, 315, 315, 315, 315,
	242, 242, 242, 242, 245, 245, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 244, 244, 244, 244, 244,
	246, 246, 246, 246, 246, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	248, 248, 248, 248, 248, 248, 248, 248, 258, 258,
	249, 249, 253, 253, 254, 254, 254, 255, 255, 255,
	256, 256, 251, 251, 251, 251, 251, 251, 252, 252,
	252, 261, 285, 285, 284, 284, 282, 282, 282, 282,
	270, 270, 279, 279, 279, 279, 279, 269, 269, 265,
	265, 265, 266, 266, 267, 267, 264, 264, 268, 268,
	281, 281, 280, 262, 262, 263, 263, 287, 316, 316,
	316, 316, 317, 317, 288, 307, 308, 306, 306, 306,
	306, 306, 72, 72, 72, 216, 216, 216, 277, 277,
	276, 276, 276, 278, 278, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 211, 211, 211, 305, 305, 305, 305,
	305, 305, 304, 304, 304, 274, 274, 274, 303, 303,
	51, 51, 160, 160, 40, 40, 40, 40, 40, 40,
	39, 39, 39, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 41, 41, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 76, 76, 77,
	77, 77, 77, 78, 78, 78, 290, 290, 52, 52,
	3, 3, 1, 1, 2, 2, 4, 4, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	257, 257, 257, 289, 289, 291, 293, 293, 293, 293,
	292, 85, 85, 23, 32, 32, 24, 24, 24, 24,
	25, 25, 53, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 309, 309, 210, 210, 218, 218, 209, 209, 232,
	232, 232, 212, 212, 212, 213, 213, 313, 313, 313,
	55, 55, 55, 57, 57, 58, 59, 59, 234, 234,
	235, 235, 60, 61, 73, 73, 73, 73, 73, 73,
	75, 75, 75, 13, 13, 13, 13, 69, 69, 69,
	12, 12, 56, 56, 63, 310, 310, 311, 312, 312,
	312, 312, 64, 66, 26, 26, 26, 26, 26, 26,
	95, 95, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 90, 90, 90, 84, 84, 324,
	67, 68, 68, 88, 88, 88, 81, 81, 81, 87,
	87, 87, 92, 92, 94, 94, 94, 94, 94, 96,
	96, 96, 96, 96, 96, 96, 91, 91, 93, 93,
	93, 93, 225, 225, 225, 224, 224, 120, 120, 122,
	121, 121, 123, 123, 124, 124, 124, 158, 139, 139,
	192, 192, 191, 191, 193, 193, 193, 193, 195, 195,
	125, 125, 125, 125, 126, 126, 127, 127, 128, 128,
	233, 233, 230, 230, 230, 229, 229, 132, 132, 132,
	134, 133, 133, 133, 133, 135, 135, 137, 137, 136,
	136, 138, 140, 140, 140, 140, 140, 141, 141, 105,
	105, 105, 105, 105, 105, 115, 115, 115, 115, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 207, 207, 142, 142,
	150, 150, 150, 150, 143, 143, 143, 143, 143, 143,
	143, 151, 151, 151, 157, 152, 152, 148, 148, 148,
	148, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 325, 325, 250, 250, 250, 149, 149, 149, 149,
	149, 86, 86, 86, 86, 86, 238, 238, 238, 241,
	241, 241, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 163, 163, 82,
	82, 161, 161, 162, 164, 164, 159, 159, 159, 145,
	145, 145, 165, 165, 166, 166, 167, 167, 169, 168,
	168, 170, 171, 171, 171, 172, 172, 173, 173, 173,
	42, 42, 42, 42, 42, 37, 37, 37, 37, 38,
	38, 38, 97, 97, 97, 97, 99, 99, 98, 98,
	70, 70, 71, 71, 71, 103, 103, 104, 104, 104,
	101, 101, 102, 102, 189, 189, 174, 174, 174, 181,
	181, 181, 177, 177, 179, 179, 179, 180, 180, 180,
	178, 186, 186, 188, 188, 187, 187, 183, 183, 184,
	184, 185, 185, 185, 182, 182, 144, 144, 144, 144,
	144, 190, 190, 190, 190, 196, 196, 154, 154, 156,
	156, 155, 119, 197, 197, 201, 198, 198, 202, 202,
	202, 202, 202, 199, 199, 200, 200, 226, 226, 226,
	206, 206, 217, 217, 214, 214, 215, 215, 208, 208,
	219, 219, 219, 65, 153, 153, 286, 286, 283, 222,
	222, 223, 223, 227, 227, 231, 231, 228, 228, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 321, 322, 236, 237, 237, 237,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	5, 10, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 4, 4, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 4, 2, 4, 5, 4, 4, 4,
	4, 4, 3, 3, 3, 5, 2, 3, 3, 3,
	3, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 5, 4, 5, 5, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 5, 5,
	6, 4, 4, 8, 6, 8, 6, 8, 5, 4,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -319, -5, -9, -14, -15, -16, -17, -18, -19,
	-20, -21, -22, -23, -24, -25, -53, -54, -55, -57,
	-58, -59, -60, -61, -12, -56, -26, -27, -62, -63,
	-64, -65, -66, -7, -6, -11, 7, 8, -74, -28,
	30, -33, -43, 203, -44, -34, 204, -45, 206, 205,
	241, 207, 234, 72, 281, 282, 284, 285, 286, 287,
	-75, 239, 240, 209, 34, 43, 31, 32, 35, 212,
	-8, -29, 6, -321, 9, 407, 236, 235, 26, -10,
	421, 83, -320, 555, -189, -174, 20, 31, 27, -173,
	-169, -88, -174, 18, 16, 5, -67, -324, -67, -67,
	10, 11, -67, -271, -273, 83, 140, 83, -67, -49,
	-48, -47, -46, -50, 29, -40, -41, -294, -39, -36,
	208, 205, 249, 107, 108, 241, 242, 243, 207, 225,
	240, 244, 239, 258, -35, 78, 31, 421, 424, -278,
	204, 210, 211, 408, 110, 109, 73, 206, -275, 333,
	525, -50, 527, 99, 101, 526, 42, 215, 528, 529,
	530, 531, 224, 532, 533, 534, 535, 541, 542, 543,
	544, 111, 5, -67, -231, -227, -298, -221, 86, 87,
	88, 418, 227, 452, 453, 274, 78, 39, 330, 333,
	525, 281, 295, 289, 316, 308, 419, 454, 277, 228,
	262, 522, 306, 116, 527, 280, 455, 242, 338, 339,
	340, 99, 284, 375, 540, 279, 456, 538, 101, 526,
	77, 49, 42, 237, 304, 300, 528, 263, 457, 429,
	256, 110, 107, 547, 34, 298, 48, 28, 537, 109,
	47, 529, 131, 458, 530, 342, 321, 516, 46, 343,
	243, 459, 81, 423, 524, 344, 299, 345, 273, 536,
	209, 460, 508, 346, 347, 517, 461, 322, 326, 462,
	367, 348, 554, 50, 463, 464, 518, 108, 465, 76,
	531, 293, 294, 466, 271, 226, 369, 320, 224, 33,
	349, 420, 275, 56, 250, 370, 44, 324, 551, 43,
	512, 467, 515, 319, 315, 51, 468, 469, 470, 471,
	532, 318, 292, 314, 546, 441, 268, 533, 60, 211,
	328, 327, 329, 257, 366, 311, 472, 473, 474, 231,
	79, 475, 301, 19, 476, 477, 350, 264, 478, 54,
	479, 480, 373, 240, 481, 52, 534, 37, 245, 548,
	535, 482, 483, 484, 485, 486, 352, 487, 351, 323,
	325, 252, 353, 422, 488, 297, 244, 539, 489, 232,
	523, 246, 249, 239, 374, 233, 490, 491, 492, 493,
	494, 278, 495, 496, 285, 541, 41, 497, 498, 499,
	500, 272, 267, 368, 377, 59, 80, 335, 501, 521,
	291, 265, 502, 282, 53, 542, 543, 544, 259, 545,
	7, 552, 553, 355, 111, 269, 270, 45, 312, 251,
	503, 504, 302, 303, 317, 290, 313, 283, 509, 253,
	356, 241, 505, 376, 266, 331, 336, 426, 258, 357,
	520, 425, 310, 307, 260, 506, 358, 216, 254, 255,
	507, 510, 359, 360, 276, 361, 362, 363, 364, 365,
	261, 424, 288, 305, 337, 388, 389, 390, 391, 392,
	393, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 416, 214, -67, 214, -136, -227, 214,
	-199, 339, -218, 341, 354, 349, 359, 347, -210, 350,
	352, 252, -313, 367, 214, 356, 203, 157, 342, 351,
	360, 361, 276, 362, 365, 261, -309, -298, 530, 545,
	116, 309, 346, 344, 368, 512, 364, 363, -227, 283,
	-234, 288, -222, -298, -221, 286, -136, -73, 508, 207,
	-236, -236, -90, 512, 514, -152, -105, 124, -115, -118,
	-110, -111, -146, -147, -148, -149, -116, -159, 146, 147,
	154, 125, -157, -119, 24, 417, 409, 408, 157, 29,
	199, 66, 67, 411, 412, 127, 55, 384, 385, -117,
	380, 386, 381, 414, 415, 102, 416, -222, -227, 219,
	379, 213, 152, 407, -112, -108, -6, -155, 378, 382,
	383, 387, -298, -221, -114, -113, -142, 89, 95, 100,
	96, -318, 103, -321, 90, 91, 92, 93, 94, 104,
	105, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 42, 355, 355, -136, -67, -167, -88, -169,
	-8, -6, -321, 6, -67, -6, -7, -11, -29, -31,
	448, -30, -227, -174, -189, 10, 142, 40, 48, -172,
	-173, -10, -6, -105, 17, 21, 22, -93, 148, -105,
	-227, -68, -93, -208, 218, -67, -67, -198, -239, 283,
	-202, 368, 367, -223, -200, -222, -220, -199, 366, 208,
	427, 123, 23, 25, 126, 157, 17, 127, 35, 210,
	309, 225, 156, 221, 408, 203, 70, 428, 380, 381,
	378, 384, 410, 411, 379, 341, 29, 11, 430, 26,
	235, 22, 36, 150, 205, 130, 238, 24, 236, 102,
	105, 433, 20, 73, 230, 12, 223, 38, 14, 434,
	435, 15, 219, 218, 142, 215, 68, 9, 199, 27,
	139, 64, 436, 118, 437, 438, 439, 440, 66, 140,
	18, 549, 382, 383, 31, 513, 417, 247, 152, 71,
	57, 514, 124, 442, 443, 103, 444, 106, 74, 519,
	120, 16, 69, 40, 445, 248, 446, 220, 550, 447,
	371, 448, 141, 206, 407, 67, 449, 213, 354, 6,
	413, 30, 234, 222, 113, 65, 450, 214, 129, 414,
	415, 217, 104, 5, 117, 32, 10, 72, 75, 385,
	386, 387, 55, 112, 421, 128, 13, 451, 372, 122,
	116, -272, 140, -259, -263, -222, 229, -288, 225, -136,
	-281, -280, -222, -89, -217, 215, 223, 222, 117, -302,
	120, 269, 379, 213, -46, -47, -199, 156, -76, 246,
	248, 84, 84, -263, -262, -261, -303, 248, 229, -287,
	-279, 221, 230, -269, 222, 223, -264, 215, 118, -303,
	-264, 220, 230, 248, 248, 111, 248, 111, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 245, -270, 132,
	-270, 425, 425, -275, -303, -303, -303, 217, 33, 33,
	-219, -264, 217, 23, -270, -270, -199, 156, -270, -270,
	-270, -270, 256, 256, -270, -270, -270, -270, -270, -270,
	-270, -270, -270, -270, -270, -270, -270, -270, -270, 214,
	-302, -97, 365, 276, 78, -48, 258, -32, -136, -217,
	215, 216, -302, -136, 200, -136, -212, 140, 13, -212,
	-209, 355, 353, 340, 345, -212, -212, -212, -212, 259,
	338, -265, 215, 33, 226, 355, 259, 338, 259, 260,
	259, 260, 348, 358, 259, -232, 12, 142, 379, 343,
	347, 252, 214, 253, 216, 357, -298, 515, 260, -232,
	90, -213, 140, 355, 255, -212, -237, -321, -223, 309,
	-237, -237, 30, 87, 217, -222, -69, -222, 90, -13,
	-9, -17, -16, -18, 132, -95, 355, -83, 157, 530,
	516, 517, 518, 515, 352, 523, 521, 519, 259, 520,
	84, 120, 122, 123, -105, 139, -143, 132, 133, 134,
	135, 136, 137, 138, 142, 124, 126, 140, 141, 121,
	143, 144, 145, 146, 147, 148, 149, 151, 150, 152,
	153, 156, 201, 202, -111, -111, -111, -111, -157, -321,
	-321, -321, -111, -207, -321, -111, -321, -321, -321, -321,
	-163, -105, -321, -325, -321, -325, -325, -250, -321, -250,
	-321, -321, -321, -321, -321, 200, -321, -321, -321, -321,
	-321, -250, -250, -250, -250, 100, 95, 89, -159, 96,
	90, -222, -227, -6, -7, -152, -236, -310, -311, -139,
	-136, -321, 276, -172, -10, -6, -167, -173, -169, -6,
	-67, -81, -94, 61, 62, -96, 22, 36, 65, 63,
	21, -322, 85, -322, -189, -322, 84, -31, -192, 83,
	59, 41, 90, 90, 84, 19, -168, -170, -105, 12,
	-225, -224, 23, -222, 90, 200, 98, 12, -137, 27,
	-136, -208, -208, 84, 283, -202, -239, -204, -203, 369,
	371, 132, -226, -222, 90, 29, 85, 84, -136, -242,
	-245, -247, -246, -248, -243, -244, 306, 307, 157, 310,
	312, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	30, 237, 302, 303, 304, 305, 322, 323, 324, 325,
	326, 327, 328, 329, 289, 308, 419, 290, 291, 292,
	293, 294, 295, 297, 298, 299, 300, 301, -301, -298,
	83, 85, 84, -249, 83, -97, 214, -298, 215, 215,
	215, -67, 407, -270, -270, 245, 17, -39, -36, -294,
	16, -35, -36, 208, 107, 108, 205, 83, -259, 83,
	-268, -301, -298, 83, 118, 220, 117, -267, -264, -267,
	-268, -298, -159, -298, 118, 118, -195, -222, -195, -195,
	21, -195, 21, -195, 21, 92, -222, -195, 21, -195,
	21, -195, 21, -195, 21, -195, 21, 29, 76, 77,
	29, 79, 80, 81, -159, -159, -259, -199, -136, -298,
	92, 92, -270, -270, 92, 90, 90, 90, -270, -270,
	92, 90, -229, -227, 90, -304, 231, 273, 275, 92,
	92, 92, 92, 29, 90, -305, 29, 537, 536, 538,
	539, 540, 92, 29, 92, 29, 92, -222, 83, -136,
	-103, 263, 203, 205, 208, 74, 90, 277, 132, 42,
	84, 217, 214, -298, -214, 219, -214, -228, -227, -220,
	90, -105, -266, 12, 142, -232, -232, -212, -136, -266,
	-232, -212, -136, -212, -212, -212, -212, -232, -232, -232,
	-212, -227, -227, -136, -136, -136, -136, -136, -136, -136,
	-237, -237, -237, -213, -212, 515, 90, 74, -235, 286,
	320, 509, 510, 511, 84, 421, -129, -136, 515, 515,
	515, 515, 515, 515, -105, -105, -105, -105, -150, 103,
	124, 104, 105, -118, -151, -155, -157, 97, 142, 126,
	140, 141, -110, -111, -110, -110, -110, -110, -110, -110,
	-110, -110, -110, -110, -110, -110, -110, -238, -298, 90,
	157, 90, 90, -91, -93, -105, -105, -298, -222, -91,
	-91, -105, -87, 22, 36, -161, -162, 128, -159, -322,
	-322, 92, -222, -222, -80, -79, 389, 390, 391, 392,
	394, 395, 396, 399, 400, 404, 405, 388, 406, 393,
	398, 401, 402, 403, 397, 305, -105, -92, 22, 36,
	-91, -223, -228, -220, -91, -92, -92, -91, -91, 200,
	-189, -322, 84, -312, 371, 372, 513, -230, 248, -229,
	23, -153, -152, 90, -172, -172, 61, 62, 57, -91,
	-96, -322, -30, 23, -191, -222, 60, 90, -251, -199,
	330, 331, -105, -105, 84, -171, 25, 26, -136, -224,
	148, -228, -136, -194, 248, -136, -121, -123, -124, -125,
	-139, -158, -321, 12, -129, -130, -138, -227, -202, -204,
	84, 370, 372, 373, 74, 106, -105, -252, 156, -277,
	-276, -275, -259, -261, -262, -263, 85, -252, -255, 336,
	335, -249, -249, -249, -249, -249, -251, -251, -251, -251,
	83, 83, -249, -249, -249, -249, -253, 83, -253, -253,
	-254, 83, -254, -288, -105, -285, -284, -282, -283, 224,
	99, 421, 75, -280, -171, 92, -103, -215, 219, -286,
	-283, -298, -298, -298, -215, -298, 90, -298, 90, -77,
	-52, -1, 549, 550, 551, 84, 17, -260, -259, -51,
	273, -291, -292, 248, -287, -281, -268, 118, -267, -268,
	-268, -298, 84, 27, 111, 111, 111, 111, 421, 205,
	30, -259, -51, -238, 217, -238, -238, 90, 90, -211,
	545, -129, -99, 265, 132, 254, 254, 214, 214, 267,
	-136, 278, 280, 279, 277, 21, 266, 268, 270, 256,
	-136, -136, -214, 74, -131, -136, 24, -227, -136, -212,
	-212, -136, -212, -212, -136, -222, -83, 371, 84, 421,
	20, -84, 20, 103, 104, 105, -151, -110, -111, -110,
	123, 238, 84, -322, 23, 84, 75, -322, -322, -322,
	84, 12, -91, -164, -162, 130, -105, -322, -322, 84,
	84, 12, -241, 23, -322, -91, -91, -321, 200, -322,
	-322, -322, -322, -322, -223, -311, 512, 372, -140, 72,
	218, 73, -321, -229, -322, -145, -222, 92, 96, -174,
	-120, -122, 12, -96, -157, 85, 84, -251, -178, -183,
	-209, -222, 90, 157, -170, 200, -141, 13, -144, 30,
	55, -9, -321, -321, 30, 84, -132, -134, -133, -135,
	64, 68, 70, 65, 66, 67, 71, -233, 23, -121,
	-7, -6, -321, -136, -129, -323, 12, 75, -323, 84,
	200, -203, -205, 374, 371, 377, -298, 90, -76, 84,
	-275, -263, -175, -100, 38, -256, 337, -251, -251, -258,
	90, -258, 92, 92, 85, -42, -37, -38, 31, 78,
	-282, -270, 90, 37, -222, 85, -99, -136, 124, 74,
	-286, -286, -286, -227, -2, 548, 554, 118, 83, 340,
	16, -191, 84, 85, -160, 274, 85, -293, 55, -222,
	85, 83, -268, -268, -222, -321, 214, 29, 29, -51,
	-160, -252, -298, 547, 546, 85, 216, 272, -104, 384,
	-101, 90, 86, -136, -136, -136, -136, -136, 208, 205,
	257, 217, -129, -136, 84, -72, 233, 228, -232, -232,
	31, -136, 371, 524, 522, 123, 238, -118, -111, -93,
	418, -240, 157, 306, 237, 304, 300, 320, 311, 335,
	302, 336, 299, 298, 297, -240, -238, -105, -105, -167,
	131, -105, 129, -105, -105, -105, -322, 157, 306, -322,
	-322, -92, -223, 215, 215, 215, -195, -206, 20, 12,
	55, 55, -120, -141, -121, -96, -222, -181, 508, -186,
	44, -184, -185, 45, -182, 46, 54, 148, -172, -105,
	-196, 74, -197, -201, -159, -154, -156, -155, -321, -190,
	-322, -222, -195, -197, -123, -124, -124, -123, -124, 64,
	64, 64, 69, 64, 69, 64, -133, -227, -322, -322,
	-7, -230, 75, -121, -121, -138, -227, 148, 371, 375,
	376, -275, -317, 103, 124, 29, 74, 333, 99, -315,
	156, -316, 220, 117, 118, 232, 23, 39, 85, 84,
	85, 84, 85, 84, -216, 458, 124, -38, -37, -270,
	-270, 92, -298, 216, 24, -136, 74, 74, 74, -78,
	552, 92, 83, -3, 78, -105, 83, 17, -259, -159,
	250, 142, -285, -191, -289, -291, -136, -107, -321, -106,
	-108, -112, 146, 147, -160, -136, -98, 263, 271, 83,
	-102, 87, -300, 75, 254, 333, 254, -136, -72, -42,
	-136, -212, -212, 31, -298, -118, -111, -321, -322, -249,
	-249, -249, -254, -249, 294, -249, 294, -249, -322, -322,
	84, -322, 20, -322, -82, 413, -105, 84, 84, -322,
	83, 83, -322, -321, -321, -321, -322, -136, -141, -165,
	14, -178, 49, 312, -188, -187, 53, 45, -185, 17,
	47, 17, 28, -196, 84, 132, 84, -322, -322, 84,
	55, 200, -322, -141, -127, -126, 74, 75, -128, 74,
	-126, 64, 64, -192, -322, -194, -121, -141, -141, 200,
	103, -321, -109, -117, -107, 10, 90, 90, -298, 118,
	118, -136, 83, -251, 90, -251, 92, 92, 458, 29,
	79, 80, 81, 29, 76, 77, -136, -136, -136, -136,
	-290, 83, 17, -105, 83, 132, 85, -191, -191, 251,
	-155, -321, 85, -322, 84, -257, 421, 424, -105, -113,
	-113, -192, 85, -297, 421, -299, -222, -222, -222, -222,
	-110, -251, -105, -105, -172, 90, -105, -105, 92, 92,
	-193, -322, -222, 220, -193, -193, -230, -165, -166, 15,
	17, -179, 51, -177, 50, -177, -187, 17, 17, 90,
	17, 90, 118, -201, -105, -156, 55, -9, -222, -154,
	-222, -167, -105, 83, -105, -141, -141, -105, -147, 416,
	83, -105, 85, 85, -192, -289, -52, 85, -191, 92,
	85, -155, -85, -321, 247, -316, -291, 425, 425, -322,
	23, -296, -295, -223, 83, 75, -86, 142, 421, -322,
	-322, -322, -322, -322, 85, 85, 84, -322, -322, -322,
	-140, -166, -105, -152, -180, 52, 74, 106, 90, 90,
	90, 10, -154, 200, -172, -191, -167, -322, -191, 85,
	23, 85, 554, 118, 85, 247, -9, 84, 132, -191,
	-136, -322, 419, 71, 422, -222, 220, 74, 106, -197,
	-222, 85, -172, 85, -176, -9, 83, -3, -322, -70,
	421, -295, -274, -223, 90, 92, 85, 60, 420, 423,
	-307, -308, 74, -317, -314, 103, 124, 99, -315, 112,
	113, -70, -105, 83, -71, 262, 512, -300, 60, -308,
	74, 11, 10, 103, 90, 85, -191, 225, -297, 421,
	-306, 233, 228, 231, 30, -306, -4, 553, 85, 264,
	422, 227, 29, 103, 92, -4, 423,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 709, 709, 709, 0,
	709, 0, 0, 709, -2, -2, 709, 1125, 0, 709,
	0, 0, -2, 641, 643, 0, 645, -2, 0, 0,
	654, 1575, 1575, 704, 0, 0, 0, 0, 0, 709,
	986, 45, 709, 0, 80, 81, 660, 661, 662, 60,
	0, 1573, 1, 3, 66, 70, 0, 0, 0, 53,
	995, 0, 73, 0, 0, 713, 0, 711, 0, 1108,
	709, 709, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 507, 447, 490, 445, 476,
	-2, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 340, 340, 0, 0, -2,
	438, 438, 438, 0, 0, 0, 473, 1110, 393, 340,
	340, 0, 340, 340, 340, 340, 0, 0, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 1012, 143, 1126, 1123, 1124, 35, 36,
	37, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 0, 1102, 0, 571, 799, 0,
	632, 632, 0, 632, 632, 632, 632, 0, 0, 0,
	583, 0, 0, 0, 0, 629, 0, 0, 602, 604,
	0, 629, 0, 635, 0, 616, 632, 1576, 1576, 1576,
	1093, 0, 626, 624, 638, 639, 621, 622, 640, 644,
	0, 649, 652, 1119, 1120, 0, 667, 44, 1351, 659,
	672, 673, 0, 705, 706, 40, 885, 0, 814, 818,
	829, 842, 843, 844, 845, 846, 848, 849, 0, 0,
	0, 0, 854, 855, 0, 0, 0, 0, 0, 866,
	0, 0, 0, 0, 0, 967, 0, 931, 931, 902,
	931, 933, 933, 0, 0, 0, 1572, 976, 0, 0,
	0, 0, 0, 0, 248, 249, 884, 1082, 933, 933,
	933, 933, -2, -2, 195, 196, 197, 198, 199, 200,
	201, 0, 191, 0, 253, 254, 250, 251, 252, 868,
	869, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 1575, 0, 682, 0, 0, 995, 0, 987,
	986, 58, 0, 709, -2, 0, 0, 0, 0, 42,
	0, 47, 760, 72, 71, 1034, 0, 0, 0, 54,
	996, 62, 64, 997, 0, 714, 715, 0, 738, 742,
	0, 710, 0, 0, 1109, 1108, 1108, 97, 0, 1516,
	1086, -2, -2, 0, 0, 1121, 1122, 1095, -2, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	-2, 0, 0, 153, 154, 0, 38, 366, 0, 149,
	0, 360, 310, 1012, 0, 0, 0, 0, 0, 709,
	0, 1103, 134, 135, 141, 142, 340, 340, 487, 0,
	0, 143, 143, 454, 455, 456, 0, 0, -2, 364,
	0, 439, 0, 0, 354, 354, 358, 356, 357, 0,
	0, 0, 0, 0, 0, 467, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 341,
	0, 485, 486, 394, 0, 0, 0, 0, 465, 466,
	0, 0, 1111, 1112, 0, 0, 340, 340, 0, 0,
	0, 0, 340, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 1025, 0, 0, 0, -2, 0, 563, 0, 0,
	0, 1104, 1104, 570, 0, 572, 573, 0, 0, 574,
	0, 629, 629, 627, 628, 576, 577, 578, 579, 632,
	0, 0, 349, 350, 351, 629, 632, 0, 632, 632,
	632, 632, 629, 629, 629, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1576, 1576, 1576, 635, 632,
	0, 612, 0, 613, 614, 617, 618, 1577, 1578, 1140,
	619, 620, 1094, 642, 650, 653, 670, 668, 669, 671,
	663, 664, 665, 666, 0, 684, 685, 690, 0, 0,
	0, 0, 696, 697, 698, 0, 0, 701, 702, 703,
	0, 0, 0, 0, 812, 0, 0, 874, 875, 876,
	877, 878, 879, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 850, 851, 852, 853, 856, 0,
	0, 0, 861, 862, 0, 0, 0, 0, 0, 719,
	0, 968, 0, 900, 0, 901, 903, 904, 0, 905,
	0, 0, 0, 0, 722, 0, 0, 722, 722, 0,
	0, 185, 186, 187, 188, 202, 203, 204, 205, 206,
	255, 976, 0, 884, 0, 0, 41, 674, 675, 0,
	782, 1114, 0, 52, 61, 63, 995, 56, 995, 0,
	724, 0, 0, -2, -2, 725, 731, 732, 733, 734,
	735, 49, 1574, 50, 0, 69, 0, 43, 0, 0,
	0, 0, 322, 1037, 0, 0, 988, 989, 992, 0,
	739, 743, 0, 745, 746, 0, 712, 0, 95, 0,
	798, 0, 0, 0, 1516, 1092, 0, 99, 100, 0,
	0, 0, 328, 1097, 1098, 1099, -2, 347, 0, 328,
	317, 261, 262, 263, 310, 265, 310, 310, 310, 310,
	322, 322, 322, 322, 293, 294, 295, 296, 297, 0,
	0, 280, 310, 310, 310, 310, 300, 301, 302, 303,
	304, 305, 306, 307, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 312, 312, 312, 314, 314, 0, 39,
	0, 332, 0, 992, 0, 1025, 1106, 1116, 0, 0,
	0, 1106, 117, 0, 0, 488, 518, 448, 477, 489,
	0, 451, 452, -2, 0, 0, 438, 0, 440, 0,
	348, 0, -2, 0, 358, 0, 354, 358, 355, 358,
	346, 359, 469, 470, 471, 0, 529, 768, 0, 0,
	0, 0, 0, 535, 536, 537, 0, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 478, 479, 480,
	481, 482, 483, 484, 0, 0, 440, 0, 474, 0,
	395, 396, 0, 0, 399, 400, 401, 402, 0, 0,
	405, 406, 407, 785, 786, 408, 432, 433, 434, 409,
	410, 411, 412, 413, 414, 415, 426, 427, 428, 429,
	430, 431, 416, 417, 418, 419, 420, 423, 0, 127,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 800, 1127, 1128,
	633, 634, 0, 352, 353, 632, 632, 580, 603, 0,
	632, 584, 605, 585, 587, 586, 588, 607, 608, 632,
	591, 630, 631, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 609, 610, 611, 636, 0, 0, 651,
	655, 656, 657, 658, 0, 0, 687, 91, 692, 693,
	694, 695, 707, 700, 886, 809, 810, 811, 813, 815,
	0, 870, 872, 817, 819, 881, 882, 883, 0, 0,
	0, 0, 0, 823, 827, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 847, 946, 947,
	948, 864, 865, 0, 736, 0, 0, 0, 863, 0,
	0, 0, 0, 720, 721, 974, 971, 0, 0, 932,
	934, 0, 0, 0, 0, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 949, 0, 0, 0,
	723, 977, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1081, 0, 677, 678, 680, 0, 802, 0, 783,
	0, 0, 1115, 683, 55, 57, 729, 730, 0, 747,
	726, 51, 46, 0, 0, 762, 1035, 322, 1057, 0,
	326, 327, 998, 999, 0, 991, 993, 994, 74, 744,
	740, 0, 807, 0, 0, 797, 0, 750, 752, 753,
	754, 780, 0, 0, 0, 0, 93, 799, 1087, 98,
	0, 0, 103, 104, 1088, 1089, 1090, 1091, 0, 507,
	-2, 390, 155, 157, 158, 159, 150, -2, 320, 318,
	319, 264, 322, 322, 287, 288, 289, 290, 291, 292,
	0, 0, 281, 282, 283, 284, 275, 0, 276, 277,
	278, 0, 279, 365, 0, 1000, 333, 334, 336, 340,
	0, 0, 0, 361, 362, 0, 1016, 0, 0, 0,
	1117, 1116, 1116, 1116, 0, 145, 146, 147, 148, 524,
	0, 0, 519, 522, 523, 143, 0, 0, 151, 442,
	441, 0, 556, 0, 363, 0, 0, 358, 358, 343,
	344, 472, 0, 0, 531, 532, 533, 534, 0, 0,
	0, 440, 442, 328, 0, 397, 398, 403, 404, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 503, 504, 505, 506, 1013, 1014, 1015, 0,
	0, 564, 0, 0, 382, 89, 1105, 569, 629, 590,
	606, 629, 582, 589, 615, 647, 691, 0, 0, 0,
	0, 699, 0, 816, 871, 873, 820, 0, 824, 828,
	0, 0, 0, 0, 0, 0, 0, 867, 891, 892,
	0, 0, 986, 0, 972, 0, 0, 899, 935, 0,
	0, 0, 0, 0, 887, 0, 0, 722, 0, 936,
	937, 938, 939, 940, 977, 676, 679, 681, 758, 0,
	0, 0, 0, 784, 1113, 0, 979, 0, 0, 747,
	807, 748, 0, 727, 48, 761, 0, 1039, 1038, 1051,
	1064, 323, 324, 325, 990, 0, 995, 0, 1075, 0,
	0, 1067, 0, 0, 0, 0, 0, 0, 0, 0,
	787, 0, 0, 790, 0, 0, 0, 0, 781, 0,
	0, 0, 0, -2, 0, 0, 87, 88, 0, 0,
	0, 101, 102, 0, 0, 108, 329, 330, 136, 143,
	392, 156, 372, 0, 0, 260, 321, 285, 286, 0,
	308, 0, 0, 0, 385, 113, 1004, 1003, 340, 340,
	335, 0, 338, 0, 1118, 311, 0, 126, 0, 0,
	0, 0, 0, 132, 513, 0, 0, 520, 0, 0,
	0, 446, 0, 457, 458, 0, 528, 555, 0, 560,
	332, 0, 342, 345, 769, 0, 0, 459, 0, 442,
	463, 464, 475, 424, 425, 422, 0, 0, 1026, 1027,
	1032, 1030, 1031, 118, 495, 497, 496, 500, 0, 0,
	493, 0, 382, 1000, 0, 568, 383, 384, 632, 632,
	686, 92, 0, 689, 0, 0, 0, 821, 825, 737,
	0, 0, 310, 310, 954, 310, 314, 957, 310, 959,
	310, 962, 310, 965, 966, 0, 0, 0, 0, 969,
	898, 975, 0, 0, 0, 0, 909, 0, 0, 888,
	889, 0, 978, 0, 0, 0, 0, 0, 1100, 1101,
	980, 981, 807, 982, 749, 728, 763, 1057, 0, 1050,
	0, -2, 1059, 0, 0, 0, 1065, 741, 75, 808,
	78, 0, 1075, 1083, 0, 1066, 1077, 1079, 0, 0,
	0, 1071, 0, 807, 751, 776, 778, 0, 773, 788,
	789, 791, 0, 793, 0, 795, 796, 760, 756, 757,
	0, 95, 0, 807, 807, 94, 0, 801, 105, 106,
	107, 391, 160, 165, 0, 0, 0, 170, 0, 172,
	0, 373, 0, 257, 259, 0, 0, 163, 322, 0,
	322, 0, 315, 0, 374, 386, 0, 1001, 1002, 0,
	0, 337, 339, 0, 1107, 128, 0, 0, 0, 516,
	0, 525, 0, 0, 0, 0, 0, 0, 152, 443,
	0, 0, 331, 0, 0, 553, 550, 460, 0, 189,
	190, 192, 0, 0, 462, 760, 1017, 1018, 1019, 0,
	1029, 1033, 121, 0, 0, 0, 0, 565, 566, 567,
	90, 575, 581, 688, 708, 822, 826, 0, 858, 952,
	322, 955, 956, 958, 960, 961, 963, 964, 859, 860,
	0, 894, 0, 896, 995, 0, 973, 0, 0, 908,
	0, 0, 890, 0, 0, 0, 782, 59, 982, 984,
	0, 1044, 1042, 1042, 1052, 1053, 0, 0, 1060, 0,
	0, 0, 0, 79, 0, 0, 0, 1080, 0, 0,
	0, 0, 96, 986, 770, 777, 0, 0, 771, 0,
	772, 792, 794, 755, -2, 807, 807, 85, 86, 0,
	166, 0, 168, 183, 184, 0, 171, 173, 174, 256,
	258, 0, 0, 298, 309, 299, 0, 0, 387, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 760, 129, 130, 131,
	508, 0, 518, 0, 0, 0, 511, 0, 449, 0,
	559, 0, 0, 530, 0, 538, 0, 0, 0, 193,
	194, 0, 1028, 494, 0, 119, 120, 0, 0, 499,
	941, 953, 0, 0, 0, 970, 0, 0, 0, 0,
	0, 804, 764, 765, 0, 0, 802, 984, 77, 0,
	0, 1047, 0, 1040, 1043, 1041, 1054, 0, 0, 1061,
	0, 1063, 0, 1084, 1085, 1078, 0, 1070, 1073, 1069,
	1072, 995, 774, 0, 779, 986, 84, 0, 169, 0,
	0, 0, 313, 316, 0, 0, 0, 509, 0, 521,
	512, 557, 558, 0, 561, 367, 554, 551, 552, 461,
	0, 122, 123, 0, 0, 0, 0, 0, 0, 893,
	895, 897, 906, 907, 950, 951, 0, 803, 805, 806,
	759, 76, 985, 983, 1036, 0, 1045, 1046, 1055, 1056,
	1062, 0, 1068, 0, 82, 0, 995, 167, 0, 177,
	0, 517, 0, 520, 510, 0, 1020, 0, 0, 0,
	501, 857, 0, 0, 0, 766, 767, 1048, 1049, 1076,
	1074, 775, 83, 368, 372, 1020, 0, 0, 562, 491,
	1022, 124, 125, 435, 436, 437, 118, 942, 0, 945,
	369, 370, 0, 161, 178, 179, 0, 0, 182, 175,
	176, 114, 0, 0, 0, 1023, 1024, 121, 943, 371,
	0, 0, 0, 180, 181, 526, 0, 0, 498, 0,
	375, 377, 378, 0, 0, 376, 514, 0, 526, 1021,
	0, 379, 380, 381, 527, 515, 944,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 555,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:469
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:474
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:475
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:479
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:512
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:518
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:522
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:526
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:531
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:541
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:547
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:553
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:557
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:566
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:572
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:576
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:582
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:588
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:592
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:625
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:630
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:656
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:735
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:741
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:761
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:773
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:785
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:789
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:801
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:818
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:819
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:823
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:827
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:833
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:843
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:856
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:878
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:882
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:888
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:892
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:896
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:902
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:906
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:910
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:914
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:920
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:924
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:963
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:967
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:972
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:976
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:987
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:992
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:998
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1015
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1022
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1029
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1034
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1039
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1044
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1051
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1058
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1069
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1080
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1086
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1090
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1104
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1108
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1114
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1118
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1124
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1128
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1135
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1139
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1145
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1155
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1160
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1169
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1193
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1202
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1211
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1224
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1228
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1234
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1240
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1245
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1250
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1255
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1260
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1265
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1274
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1281
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1285
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1290
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1294
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1299
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1305
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1311
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1316
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1323
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1330
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1334
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1338
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1342
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1353
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1360
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1364
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1370
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1374
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1386
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1390
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1394
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = Armscii8Str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = ASCIIStr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = Big5Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.str = UBinaryStr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.str = Cp1250Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.str = Cp1251Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.str = Cp1256Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = Cp1257Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = Cp850Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = Cp852Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = Cp866Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = Cp932Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = Dec8Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = EucjpmsStr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = EuckrStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = Gb18030Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = Gb2312Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = GbkStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = Geostd8Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = GreekStr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = HebrewStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = Hp8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Keybcs2Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Koi8rStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Koi8uStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Latin1Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Latin2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Latin5Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Latin7Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = MacceStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = MacromanStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = SjisStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = Swe7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = Tis620Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = Ucs2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = UjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Utf16Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = Utf16leStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Utf32Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Utf8Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = Utf8mb4Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1607
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1621
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1625
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1629
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1633
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1650
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1864
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1869
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1873
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1881
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1891
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1899
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1916
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1948
		{
			yyVAL.str = ""
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1963
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1972
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1978
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1988
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1992
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1997
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2001
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2007
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2017
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2021
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2025
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2029
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2033
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = yyDollar[2].str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2072
		{
			yyVAL.str = "key"
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.str = yyDollar[1].str
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2101
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2105
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2111
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2117
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2121
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2127
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2131
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2137
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2143
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2147
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2151
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2155
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2160
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2164
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2170
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2176
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2182
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2188
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2192
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2196
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2200
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2204
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2209
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2222
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2230
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2239
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2245
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2253
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2259
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2263
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2269
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2273
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2277
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2281
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2285
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2289
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2293
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2297
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2301
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2305
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2309
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2313
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2317
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2321
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2325
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2329
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2333
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2337
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = ""
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2386
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2390
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = ""
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2432
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2441
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2450
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2454
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2458
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 449:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2466
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2472
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2486
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2490
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2494
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2498
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2502
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2506
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2510
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2514
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2518
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2522
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2526
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2530
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2534
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2538
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2542
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2546
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2550
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2554
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2580
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2584
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2590
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2628
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2635
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2642
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2649
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2666
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2673
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2685
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2716
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2726
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2730
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2741
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2780
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2789
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2797
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2806
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2813
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2825
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2834
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2849
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2854
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2858
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2863
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2867
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2873
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2877
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2882
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2886
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2891
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2895
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2901
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2905
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2909
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2913
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2917
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2921
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2925
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2929
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2933
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2937
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2941
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2945
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2949
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2953
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2957
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2961
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2965
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2969
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2973
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2977
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2981
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2985
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2990
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3005
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3009
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3020
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3024
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3031
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3038
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3047
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3063
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3069
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3073
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3092
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3102
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3117
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3141
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3310
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3324
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = ""
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.str = "extended "
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3344
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3348
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3358
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3364
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3368
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3382
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3386
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3396
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3402
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3406
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3416
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3440
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3455
		{
			yyVAL.empty = struct{}{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.empty = struct{}{}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3460
		{
			yyVAL.empty = struct{}{}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3473
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3478
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3482
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3486
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3490
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3494
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3498
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = yyDollar[1].str
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = yyDollar[1].str
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3518
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3522
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3549
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3553
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3575
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3585
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3591
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3595
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3599
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3603
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3609
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3615
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3625
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3651
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3681
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3685
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3706
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3710
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3714
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3728
		{
			setAllowComments(yylex, true)
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3732
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3738
		{
			yyVAL.strs = nil
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3748
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3761
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = SQLCacheStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3782
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3791
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3796
		{
			yyVAL.strs = nil
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3808
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3812
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = SQLCacheStr
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = DistinctStr
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = DistinctStr
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = StraightJoinHint
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3848
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3858
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3862
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3866
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3870
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3875
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3890
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3895
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3899
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3905
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3911
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3915
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3925
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3929
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3933
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3939
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3945
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3949
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3958
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3964
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3974
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3978
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3986
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3992
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3996
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4009
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4013
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4017
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4021
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4027
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4029
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4033
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4039
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4041
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4044
		{
			yyVAL.empty = struct{}{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4049
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4057
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4064
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4070
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4074
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4078
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4084
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4090
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4094
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4098
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4102
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4108
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4112
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4122
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4136
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4142
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4151
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4155
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4159
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4163
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4172
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4179
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4183
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4187
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4191
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4195
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4199
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4206
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4210
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4214
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4218
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4224
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4228
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4240
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4244
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4248
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4252
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4256
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4260
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4264
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4290
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4306
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4310
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4314
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4318
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4324
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4328
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4340
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4344
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4348
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4352
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4356
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4360
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4364
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4368
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4372
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4376
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4380
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4384
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4388
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4392
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4396
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4416
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4420
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4427
		{
			yyVAL.str = ""
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4431
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4437
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4441
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4448
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4452
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4456
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4460
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4466
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4470
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4474
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4478
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4482
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4486
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4490
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4496
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4500
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4504
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4511
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4517
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4531
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4535
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4543
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4577
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4581
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4585
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4600
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4604
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4610
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4614
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4643
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4647
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4651
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4655
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4659
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4663
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4667
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4671
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4675
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4679
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4683
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4689
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4693
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4697
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4701
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4705
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4709
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4713
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4717
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4721
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4731
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4739
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4749
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4753
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4757
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4761
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4765
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4771
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4775
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4779
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4783
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4787
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4793
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4811
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4815
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4821
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4825
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4829
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4833
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4837
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4843
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4847
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4851
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4855
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4859
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4863
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4867
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4871
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4875
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4879
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4889
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4894
		{
			yyVAL.str = string("")
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4904
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4908
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4914
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4929
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4933
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4937
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4952
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4966
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4984
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4990
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4996
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5000
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5006
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5011
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5015
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5019
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5028
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5034
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5038
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5042
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5051
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5055
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5059
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5063
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5070
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5074
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5078
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5082
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5088
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5092
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5096
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5101
		{
			yyVAL.str = ""
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5105
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5109
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5113
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5118
		{
			yyVAL.str = ""
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5122
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5137
		{
			yyVAL.str = ""
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5141
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5146
		{
			yyVAL.str = "cascaded"
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5163
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5169
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5175
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5181
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5190
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5194
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5199
		{
			yyVAL.str = ""
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5209
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5213
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5219
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5223
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5227
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5236
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5240
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5245
		{
			yyVAL.str = ""
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5249
		{
			yyVAL.str = " header"
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5254
		{
			yyVAL.str = ""
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5258
		{
			yyVAL.str = " manifest on"
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5262
		{
			yyVAL.str = " manifest off"
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5267
		{
			yyVAL.str = ""
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5271
		{
			yyVAL.str = " overwrite on"
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5275
		{
			yyVAL.str = " overwrite off"
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5286
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5300
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5306
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5315
		{
			yyVAL.str = ""
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5329
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5348
		{
			yyVAL.str = ""
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5352
		{
			yyVAL.str = " optionally"
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5365
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5369
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5373
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5377
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5381
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5387
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5391
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5395
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5399
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5408
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5414
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5418
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5424
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5428
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5434
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5449
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5453
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5459
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5465
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5469
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5475
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5479
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5483
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5487
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5491
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5499
		{
			yyVAL.str = "charset"
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5528
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5533
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5538
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5541
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5543
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5546
		{
			yyVAL.empty = struct{}{}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5548
		{
			yyVAL.empty = struct{}{}
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.empty = struct{}{}
		}
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5554
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5559
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5563
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5570
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5574
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5601
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5607
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6087
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			decNesting(yylex)
		}
	case 1575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6101
		{
			skipToEnd(yylex)
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6106
		{
			skipToEnd(yylex)
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			skipToEnd(yylex)
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6114
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
