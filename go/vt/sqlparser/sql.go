// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const REVERT = 57537
const SCHEMA = 57538
const TABLE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const KEY_BLOCK_SIZE = 57549
const CHECK = 57550
const INDEXES = 57551
const ACTION = 57552
const CASCADE = 57553
const CONSTRAINT = 57554
const FOREIGN = 57555
const NO = 57556
const REFERENCES = 57557
const RESTRICT = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const COALESCE = 57567
const EXCHANGE = 57568
const REBUILD = 57569
const PARTITIONING = 57570
const REMOVE = 57571
const MAXVALUE = 57572
const PARTITION = 57573
const REORGANIZE = 57574
const LESS = 57575
const THAN = 57576
const PROCEDURE = 57577
const TRIGGER = 57578
const VINDEX = 57579
const VINDEXES = 57580
const DIRECTORY = 57581
const NAME = 57582
const UPGRADE = 57583
const STATUS = 57584
const VARIABLES = 57585
const WARNINGS = 57586
const CASCADED = 57587
const DEFINER = 57588
const OPTION = 57589
const SQL = 57590
const UNDEFINED = 57591
const SEQUENCE = 57592
const MERGE = 57593
const TEMPORARY = 57594
const TEMPTABLE = 57595
const INVOKER = 57596
const SECURITY = 57597
const FIRST = 57598
const AFTER = 57599
const LAST = 57600
const VITESS_MIGRATION = 57601
const CANCEL = 57602
const RETRY = 57603
const COMPLETE = 57604
const CLEANUP = 57605
const BEGIN = 57606
const START = 57607
const TRANSACTION = 57608
const COMMIT = 57609
const ROLLBACK = 57610
const SAVEPOINT = 57611
const RELEASE = 57612
const WORK = 57613
const BIT = 57614
const TINYINT = 57615
const SMALLINT = 57616
const MEDIUMINT = 57617
const INT = 57618
const INTEGER = 57619
const BIGINT = 57620
const INTNUM = 57621
const REAL = 57622
const DOUBLE = 57623
const FLOAT_TYPE = 57624
const DECIMAL_TYPE = 57625
const NUMERIC = 57626
const TIME = 57627
const TIMESTAMP = 57628
const DATETIME = 57629
const YEAR = 57630
const CHAR = 57631
const VARCHAR = 57632
const BOOL = 57633
const CHARACTER = 57634
const VARBINARY = 57635
const NCHAR = 57636
const TEXT = 57637
const TINYTEXT = 57638
const MEDIUMTEXT = 57639
const LONGTEXT = 57640
const BLOB = 57641
const TINYBLOB = 57642
const MEDIUMBLOB = 57643
const LONGBLOB = 57644
const JSON = 57645
const ENUM = 57646
const GEOMETRY = 57647
const POINT = 57648
const LINESTRING = 57649
const POLYGON = 57650
const GEOMETRYCOLLECTION = 57651
const MULTIPOINT = 57652
const MULTILINESTRING = 57653
const MULTIPOLYGON = 57654
const ASCII = 57655
const UNICODE = 57656
const NULLX = 57657
const AUTO_INCREMENT = 57658
const APPROXNUM = 57659
const SIGNED = 57660
const UNSIGNED = 57661
const ZEROFILL = 57662
const CODE = 57663
const COLLATION = 57664
const COLUMNS = 57665
const DATABASES = 57666
const ENGINES = 57667
const EVENT = 57668
const EXTENDED = 57669
const FIELDS = 57670
const FULL = 57671
const FUNCTION = 57672
const GTID_EXECUTED = 57673
const KEYSPACES = 57674
const OPEN = 57675
const PLUGINS = 57676
const PRIVILEGES = 57677
const PROCESSLIST = 57678
const SCHEMAS = 57679
const TABLES = 57680
const TRIGGERS = 57681
const USER = 57682
const VGTID_EXECUTED = 57683
const VITESS_KEYSPACES = 57684
const VITESS_METADATA = 57685
const VITESS_MIGRATIONS = 57686
const VITESS_REPLICATION_STATUS = 57687
const VITESS_SHARDS = 57688
const VITESS_TABLETS = 57689
const VSCHEMA = 57690
const NAMES = 57691
const GLOBAL = 57692
const SESSION = 57693
const ISOLATION = 57694
const LEVEL = 57695
const READ = 57696
const WRITE = 57697
const ONLY = 57698
const REPEATABLE = 57699
const COMMITTED = 57700
const UNCOMMITTED = 57701
const SERIALIZABLE = 57702
const CURRENT_TIMESTAMP = 57703
const DATABASE = 57704
const CURRENT_DATE = 57705
const CURRENT_TIME = 57706
const LOCALTIME = 57707
const LOCALTIMESTAMP = 57708
const CURRENT_USER = 57709
const UTC_DATE = 57710
const UTC_TIME = 57711
const UTC_TIMESTAMP = 57712
const DAY = 57713
const DAY_HOUR = 57714
const DAY_MICROSECOND = 57715
const DAY_MINUTE = 57716
const DAY_SECOND = 57717
const HOUR = 57718
const HOUR_MICROSECOND = 57719
const HOUR_MINUTE = 57720
const HOUR_SECOND = 57721
const MICROSECOND = 57722
const MINUTE = 57723
const MINUTE_MICROSECOND = 57724
const MINUTE_SECOND = 57725
const MONTH = 57726
const QUARTER = 57727
const SECOND = 57728
const SECOND_MICROSECOND = 57729
const YEAR_MONTH = 57730
const WEEK = 57731
const REPLACE = 57732
const CONVERT = 57733
const CAST = 57734
const SUBSTR = 57735
const SUBSTRING = 57736
const GROUP_CONCAT = 57737
const SEPARATOR = 57738
const TIMESTAMPADD = 57739
const TIMESTAMPDIFF = 57740
const WEIGHT_STRING = 57741
const MATCH = 57742
const AGAINST = 57743
const BOOLEAN = 57744
const LANGUAGE = 57745
const WITH = 57746
const QUERY = 57747
const EXPANSION = 57748
const WITHOUT = 57749
const VALIDATION = 57750
const UNUSED = 57751
const ARRAY = 57752
const CUME_DIST = 57753
const DESCRIPTION = 57754
const DENSE_RANK = 57755
const EMPTY = 57756
const EXCEPT = 57757
const FIRST_VALUE = 57758
const GROUPING = 57759
const GROUPS = 57760
const JSON_TABLE = 57761
const LAG = 57762
const LAST_VALUE = 57763
const LATERAL = 57764
const LEAD = 57765
const MEMBER = 57766
const NTH_VALUE = 57767
const NTILE = 57768
const OF = 57769
const OVER = 57770
const PERCENT_RANK = 57771
const RANK = 57772
const RECURSIVE = 57773
const ROW_NUMBER = 57774
const SYSTEM = 57775
const WINDOW = 57776
const ACTIVE = 57777
const ADMIN = 57778
const BUCKETS = 57779
const CLONE = 57780
const COMPONENT = 57781
const DEFINITION = 57782
const ENFORCED = 57783
const EXCLUDE = 57784
const FOLLOWING = 57785
const GEOMCOLLECTION = 57786
const GET_MASTER_PUBLIC_KEY = 57787
const HISTOGRAM = 57788
const HISTORY = 57789
const INACTIVE = 57790
const INVISIBLE = 57791
const LOCKED = 57792
const MASTER_COMPRESSION_ALGORITHMS = 57793
const MASTER_PUBLIC_KEY_PATH = 57794
const MASTER_TLS_CIPHERSUITES = 57795
const MASTER_ZSTD_COMPRESSION_LEVEL = 57796
const NESTED = 57797
const NETWORK_NAMESPACE = 57798
const NOWAIT = 57799
const NULLS = 57800
const OJ = 57801
const OLD = 57802
const OPTIONAL = 57803
const ORDINALITY = 57804
const ORGANIZATION = 57805
const OTHERS = 57806
const PATH = 57807
const PERSIST = 57808
const PERSIST_ONLY = 57809
const PRECEDING = 57810
const PRIVILEGE_CHECKS_USER = 57811
const PROCESS = 57812
const RANDOM = 57813
const REFERENCE = 57814
const REQUIRE_ROW_FORMAT = 57815
const RESOURCE = 57816
const RESPECT = 57817
const RESTART = 57818
const RETAIN = 57819
const REUSE = 57820
const ROLE = 57821
const SECONDARY = 57822
const SECONDARY_ENGINE = 57823
const SECONDARY_LOAD = 57824
const SECONDARY_UNLOAD = 57825
const SKIP = 57826
const SRID = 57827
const THREAD_PRIORITY = 57828
const TIES = 57829
const UNBOUNDED = 57830
const VCPU = 57831
const VISIBLE = 57832
const FORMAT = 57833
const TREE = 57834
const VITESS = 57835
const TRADITIONAL = 57836
const LOCAL = 57837
const LOW_PRIORITY = 57838
const NO_WRITE_TO_BINLOG = 57839
const LOGS = 57840
const ERROR = 57841
const GENERAL = 57842
const HOSTS = 57843
const OPTIMIZER_COSTS = 57844
const USER_RESOURCES = 57845
const SLOW = 57846
const CHANNEL = 57847
const RELAY = 57848
const EXPORT = 57849
const AVG_ROW_LENGTH = 57850
const CONNECTION = 57851
const CHECKSUM = 57852
const DELAY_KEY_WRITE = 57853
const ENCRYPTION = 57854
const ENGINE = 57855
const INSERT_METHOD = 57856
const MAX_ROWS = 57857
const MIN_ROWS = 57858
const PACK_KEYS = 57859
const PASSWORD = 57860
const FIXED = 57861
const DYNAMIC = 57862
const COMPRESSED = 57863
const REDUNDANT = 57864
const COMPACT = 57865
const ROW_FORMAT = 57866
const STATS_AUTO_RECALC = 57867
const STATS_PERSISTENT = 57868
const STATS_SAMPLE_PAGES = 57869
const STORAGE = 57870
const MEMORY = 57871
const DISK = 57872
const PARTITIONS = 57873
const LINEAR = 57874
const RANGE = 57875
const LIST = 57876
const SUBPARTITION = 57877
const SUBPARTITIONS = 57878
const HASH = 57879

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	555, 137,
	-2, 143,
	-1, 45,
	116, 143,
	156, 143,
	309, 143,
	-2, 444,
	-1, 52,
	33, 623,
	215, 623,
	226, 623,
	259, 637,
	260, 637,
	-2, 625,
	-1, 57,
	217, 648,
	-2, 646,
	-1, 108,
	214, 1109,
	-2, 116,
	-1, 110,
	1, 138,
	555, 138,
	-2, 143,
	-1, 120,
	117, 347,
	220, 347,
	-2, 438,
	-1, 139,
	116, 143,
	156, 143,
	309, 143,
	-2, 453,
	-1, 602,
	200, 1130,
	-2, 1126,
	-1, 603,
	200, 1131,
	-2, 1127,
	-1, 674,
	57, 716,
	-2, 724,
	-1, 711,
	132, 1489,
	-2, 109,
	-1, 712,
	132, 1366,
	-2, 110,
	-1, 718,
	132, 1420,
	-2, 1103,
	-1, 860,
	132, 1299,
	-2, 1100,
	-1, 898,
	225, 38,
	230, 38,
	-2, 358,
	-1, 975,
	1, 492,
	555, 492,
	-2, 143,
	-1, 1173,
	57, 717,
	-2, 729,
	-1, 1174,
	57, 718,
	-2, 730,
	-1, 1226,
	116, 143,
	156, 143,
	309, 143,
	-2, 388,
	-1, 1303,
	117, 347,
	220, 347,
	-2, 438,
	-1, 1312,
	225, 39,
	230, 39,
	-2, 359,
	-1, 1563,
	200, 1135,
	-2, 1129,
	-1, 1640,
	116, 143,
	156, 143,
	309, 143,
	-2, 389,
	-1, 1647,
	23, 162,
	-2, 164,
	-1, 1885,
	75, 91,
	84, 91,
	-2, 782,
	-1, 2054,
	47, 1071,
	-2, 1065,
	-1, 2258,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 757,
}

const yyPrivate = 57344

const yyLast = 34052

var yyAct = [...]int{
	602, 2518, 2512, 2317, 2483, 2175, 2469, 2396, 2105, 2112,
	2146, 2068, 2065, 90, 1155, 689, 1828, 667, 1594, 2342,
	2114, 2158, 2157, 3, 1038, 2410, 1700, 553, 557, 1188,
	2069, 2066, 2347, 597, 2229, 605, 2223, 594, 596, 34,
	595, 1577, 1881, 579, 2160, 2249, 550, 2063, 176, 1613,
	2055, 176, 2216, 517, 176, 1850, 1670, 549, 986, 533,
	551, 176, 1917, 1946, 1690, 1675, 1987, 1919, 1918, 176,
	716, 148, 1626, 1870, 35, 33, 1617, 863, 690, 545,
	1326, 176, 1175, 1830, 669, 928, 1598, 1842, 2003, 1637,
	1514, 1015, 1507, 1858, 1709, 134, 1618, 1689, 1557, 1742,
	1677, 1218, 888, 533, 1466, 1911, 533, 176, 533, 893,
	671, 1887, 675, 89, 562, 1197, 85, 1620, 1579, 1158,
	1526, 1484, 1057, 1310, 1414, 867, 1417, 713, 1317, 1687,
	692, 871, 870, 1400, 1560, 1217, 899, 896, 1605, 894,
	895, 1201, 1036, 1031, 1278, 906, 681, 1422, 677, 676,
	151, 92, 1302, 1666, 111, 117, 679, 1215, 703, 70,
	1599, 118, 971, 91, 540, 1123, 1127, 83, 2441, 1939,
	2519, 2143, 79, 1702, 112, 1937, 1570, 1702, 1703, 1704,
	1966, 1965, 1740, 1386, 8, 1058, 7, 697, 6, 702,
	678, 71, 1995, 1996, 1473, 113, 1574, 1575, 119, 1472,
	1471, 683, 1470, 1469, 1058, 178, 179, 180, 1468, 1455,
	84, 933, 543, 490, 544, 864, 1460, 2497, 1826, 2051,
	1852, 2282, 930, 2129, 879, 2392, 874, 541, 2391, 2310,
	932, 670, 2311, 2528, 668, 944, 945, 931, 948, 949,
	950, 951, 1682, 2479, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 909,
	710, 113, 684, 717, 691, 885, 1680, 910, 1780, 2522,
	2452, 1283, 96, 2511, 886, 2318, 2470, 1728, 934, 935,
	936, 2478, 2451, 172, 2002, 884, 2208, 1068, 1292, 2102,
	2103, 1974, 1827, 941, 1942, 1973, 1219, 878, 1220, 72,
	880, 72, 585, 2101, 72, 72, 1068, 114, 74, 136,
	98, 99, 946, 102, 1994, 883, 108, 980, 981, 173,
	156, 1896, 485, 1861, 1895, 113, 1005, 1897, 1632, 1633,
	1777, 1022, 1778, 1024, 1631, 664, 1089, 1555, 1576, 1034,
	974, 663, 666, 1940, 993, 674, 1908, 520, 1862, 994,
	2360, 146, 2029, 699, 1010, 1011, 135, 2401, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1098, 1097, 1099, 1100, 1021,
	1023, 881, 1006, 705, 706, 999, 81, 153, 81, 154,
	1064, 81, 81, 1056, 2177, 1304, 1305, 145, 144, 171,
	2226, 1679, 2199, 883, 2197, 875, 993, 531, 970, 1064,
	1459, 994, 877, 876, 520, 1461, 1462, 1463, 520, 992,
	535, 991, 1650, 1649, 1754, 1751, 1753, 1752, 546, 529,
	1547, 1536, 1537, 1538, 1539, 1549, 1540, 1541, 1542, 1554,
	1550, 1543, 1544, 1551, 1552, 1553, 1545, 1546, 1548, 1033,
	520, 1406, 1162, 1012, 947, 1947, 1710, 693, 887, 881,
	1376, 1007, 1748, 1013, 1000, 1969, 1743, 2170, 1028, 1401,
	1019, 2521, 1014, 2178, 1020, 2171, 976, 2498, 1756, 1982,
	1757, 1747, 1758, 1759, 1025, 883, 969, 1008, 1009, 953,
	952, 882, 140, 1306, 147, 176, 1303, 176, 141, 142,
	176, 2179, 1377, 157, 1378, 1745, 1018, 2303, 2154, 1713,
	1614, 2030, 162, 890, 81, 1749, 917, 915, 1026, 926,
	889, 1746, 890, 925, 924, 923, 922, 921, 533, 533,
	533, 920, 919, 914, 1295, 927, 1101, 1101, 1778, 2516,
	2523, 1986, 2118, 2509, 868, 908, 533, 533, 973, 902,
	521, 1003, 868, 1063, 1060, 1061, 1062, 1067, 1069, 1066,
	989, 1065, 995, 996, 997, 998, 868, 2128, 1059, 882,
	866, 1050, 1063, 1060, 1061, 1062, 1067, 1069, 1066, 901,
	1065, 1316, 1831, 1833, 1415, 1035, 34, 1059, 598, 1688,
	580, 582, 599, 600, 704, 578, 581, 601, 1681, 1971,
	1983, 1734, 1411, 1044, 937, 2136, 1968, 521, 2004, 908,
	1941, 521, 1290, 1029, 2440, 1938, 2153, 1289, 1998, 1791,
	1730, 149, 1288, 1958, 583, 584, 2373, 1412, 1286, 1104,
	1105, 1106, 1107, 489, 484, 2431, 1405, 972, 1407, 1112,
	2450, 1115, 907, 521, 1027, 2263, 2402, 911, 901, 1981,
	1148, 882, 1980, 918, 916, 2245, 1892, 912, 110, 1102,
	1103, 1857, 1153, 2227, 1600, 1601, 943, 1818, 1569, 1205,
	1135, 1040, 1041, 984, 176, 913, 1101, 908, 2388, 1779,
	1638, 1100, 1989, 2100, 1315, 1989, 686, 1988, 2006, 1108,
	1988, 176, 1032, 1163, 669, 1168, 143, 908, 1166, 1154,
	1388, 1387, 1389, 1390, 1391, 1016, 907, 988, 1423, 137,
	533, 105, 138, 2446, 176, 2299, 75, 1165, 2239, 533,
	982, 1169, 979, 990, 80, 533, 80, 671, 1832, 80,
	80, 1489, 1053, 1002, 1051, 929, 1052, 2514, 71, 1744,
	2515, 1408, 2513, 713, 1004, 1490, 1491, 1488, 2016, 2015,
	2014, 2008, 1221, 2012, 1125, 2007, 1126, 2005, 1154, 1129,
	1167, 908, 2010, 1054, 89, 1402, 2108, 1403, 106, 2022,
	1404, 2009, 1527, 1930, 907, 1141, 1142, 1143, 1144, 2489,
	901, 904, 905, 2487, 868, 908, 2011, 2013, 898, 902,
	2356, 1159, 2491, 2492, 907, 1729, 1073, 2116, 2117, 911,
	901, 1727, 92, 1071, 2488, 1072, 1073, 897, 1801, 912,
	2274, 2109, 2024, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 178, 179, 180, 2273, 1509, 167,
	168, 169, 170, 975, 987, 1017, 2111, 1156, 1424, 1527,
	2106, 1805, 1717, 2205, 668, 2203, 1182, 1187, 670, 1325,
	1071, 1164, 1072, 1073, 2116, 2117, 1072, 1073, 907, 1324,
	942, 2107, 1314, 1184, 1093, 1094, 1095, 1096, 1098, 1097,
	1099, 1100, 1722, 176, 1211, 1212, 1725, 1279, 917, 717,
	1800, 1071, 907, 1072, 1073, 2507, 1287, 1722, 901, 904,
	905, 915, 868, 2113, 2457, 1510, 898, 902, 2505, 1726,
	2115, 1095, 1096, 1098, 1097, 1099, 1100, 533, 1182, 1312,
	2424, 1074, 2118, 2264, 1724, 2524, 1071, 1321, 1072, 1073,
	1071, 1323, 1072, 1073, 533, 533, 2458, 533, 1206, 533,
	533, 1395, 533, 533, 533, 533, 533, 533, 1216, 1121,
	1796, 2526, 2425, 1071, 2383, 1072, 1073, 533, 1322, 1795,
	2333, 176, 1359, 1783, 1784, 1785, 1170, 2115, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1075, 2332, 176, 1182, 2118,
	2281, 2280, 1813, 1354, 1355, 1531, 81, 546, 533, 2144,
	176, 2134, 1293, 1294, 1308, 1071, 1915, 1072, 1073, 2525,
	1487, 1413, 1606, 1607, 1394, 176, 1914, 1685, 1301, 1479,
	1481, 1482, 616, 617, 618, 1328, 1396, 1329, 1381, 1331,
	1333, 176, 1380, 1337, 1339, 1341, 1343, 1345, 176, 1393,
	1480, 178, 179, 180, 1356, 2271, 1195, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 533, 533, 533, 1383,
	1320, 708, 1362, 1363, 1319, 1379, 1285, 1370, 1368, 1369,
	1364, 1361, 1360, 1311, 1298, 1335, 1191, 1299, 1198, 2506,
	1318, 1318, 2437, 1297, 2428, 1419, 1182, 176, 1427, 1071,
	2110, 1072, 1073, 2427, 2426, 1431, 2355, 1433, 1434, 1435,
	1436, 2353, 1392, 2381, 1440, 1372, 2329, 1071, 1794, 1072,
	1073, 1194, 2278, 1425, 1426, 2270, 2300, 1071, 1454, 1072,
	1073, 1071, 1382, 1072, 1073, 1192, 1924, 1430, 1357, 178,
	179, 180, 1508, 1899, 1437, 1438, 1439, 1416, 1071, 1912,
	1072, 1073, 178, 179, 180, 1517, 533, 1071, 1485, 1072,
	1073, 1071, 1738, 1072, 1073, 1737, 113, 2211, 1597, 1583,
	885, 533, 533, 1492, 1483, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1493, 1429,
	884, 1528, 1291, 2210, 1512, 1511, 1456, 1420, 1916, 2238,
	1561, 176, 1384, 1071, 1182, 1072, 1073, 1371, 1450, 1451,
	1452, 1367, 1453, 1366, 1365, 1071, 1582, 1072, 1073, 178,
	179, 180, 1584, 1698, 1585, 1193, 1030, 176, 2174, 1071,
	533, 1072, 1073, 1071, 86, 1072, 1073, 1043, 95, 1486,
	176, 88, 2409, 533, 86, 87, 1563, 2408, 176, 94,
	176, 93, 176, 176, 533, 87, 2377, 533, 1091, 1092,
	1093, 1094, 1095, 1096, 1098, 1097, 1099, 1100, 533, 2376,
	1561, 2316, 89, 1848, 2520, 1948, 1565, 1566, 713, 1848,
	2476, 713, 95, 1927, 1513, 178, 179, 180, 89, 1696,
	1646, 1519, 1520, 94, 1616, 93, 1848, 2463, 1590, 1182,
	1848, 2461, 1562, 2240, 88, 2453, 1182, 1848, 2442, 1182,
	1859, 1564, 2308, 2439, 1567, 1568, 1563, 1888, 1182, 1848,
	2384, 2308, 1182, 533, 1848, 2306, 1722, 1182, 1888, 1691,
	1692, 1693, 2243, 1182, 1695, 1697, 2126, 2125, 1641, 2122,
	2123, 683, 2122, 2121, 88, 1642, 1844, 1589, 533, 1867,
	1182, 1792, 1182, 1859, 533, 1321, 2095, 1624, 1321, 1647,
	1321, 88, 1182, 1778, 1967, 1778, 1721, 1656, 1657, 1658,
	1659, 1711, 1611, 1592, 1672, 1282, 1952, 1645, 1944, 1945,
	1889, 1867, 1421, 1866, 1609, 94, 1678, 1848, 1847, 1891,
	1629, 1889, 1070, 1182, 1282, 1281, 533, 1070, 1508, 2064,
	1778, 1723, 1182, 1508, 1508, 1227, 1226, 1644, 1643, 2238,
	2445, 1628, 1848, 1867, 717, 2124, 1630, 717, 1792, 1792,
	1810, 1809, 1722, 1705, 2238, 1708, 1604, 1186, 603, 1572,
	1464, 1410, 1213, 892, 673, 891, 2176, 1867, 2495, 176,
	2466, 81, 2398, 1189, 1673, 2374, 176, 2367, 2298, 2295,
	2276, 176, 176, 1792, 1683, 176, 2283, 176, 1722, 1686,
	2214, 1694, 1684, 176, 1474, 1475, 1476, 1477, 1668, 1669,
	176, 2213, 1284, 1731, 1671, 2172, 177, 1673, 1716, 177,
	2149, 1719, 177, 1720, 909, 1718, 1715, 534, 1714, 177,
	1733, 1732, 910, 2145, 1953, 1735, 1736, 177, 176, 533,
	1667, 1661, 1318, 1660, 1515, 1516, 2284, 2285, 2286, 177,
	2287, 81, 1521, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1098, 1097, 1099, 1100, 1769, 1770, 1398, 1556, 1313, 1772,
	1309, 534, 1280, 107, 534, 177, 534, 2147, 1773, 1920,
	1921, 974, 1350, 1741, 2250, 2251, 1651, 2399, 1652, 1653,
	1654, 1655, 1682, 2502, 2484, 546, 2253, 2288, 2289, 2141,
	2140, 2139, 1485, 2064, 1662, 1663, 1664, 1665, 1931, 1347,
	1763, 1457, 2500, 1190, 2256, 2086, 1787, 1762, 1789, 1089,
	2087, 2337, 1085, 2336, 1086, 2084, 1921, 2255, 1602, 1603,
	2085, 1788, 1351, 1352, 1353, 2083, 2082, 2477, 1087, 1088,
	1084, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1097,
	1099, 1100, 1596, 176, 1588, 1636, 1348, 1349, 2244, 2044,
	2088, 176, 1876, 1877, 2056, 2058, 2423, 1776, 2043, 533,
	1089, 2335, 1997, 2059, 1824, 1872, 1875, 1876, 1877, 1873,
	533, 1874, 1878, 1486, 1950, 2250, 2251, 2346, 2348, 2234,
	1786, 2053, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098,
	1097, 1099, 1100, 176, 176, 1872, 1875, 1876, 1877, 1873,
	2231, 1874, 1878, 687, 1674, 1180, 1176, 1863, 2230, 1898,
	1563, 688, 1409, 662, 2120, 1906, 1804, 1925, 1523, 939,
	1177, 938, 34, 86, 86, 2186, 1920, 1802, 1992, 1042,
	88, 1883, 1524, 2236, 87, 87, 1960, 95, 1959, 114,
	1606, 1607, 2137, 1845, 88, 1586, 1587, 1179, 94, 1178,
	93, 1766, 2438, 533, 1849, 2217, 2394, 2119, 176, 88,
	1159, 1880, 1825, 1815, 1816, 176, 1562, 1593, 1882, 1835,
	695, 696, 2042, 1755, 1782, 93, 1841, 533, 1846, 2415,
	2041, 95, 1902, 2414, 533, 1180, 1176, 2354, 1321, 1321,
	1856, 587, 94, 533, 93, 1943, 2352, 2351, 1886, 2344,
	1177, 2296, 1893, 2235, 2233, 1964, 2150, 1890, 1706, 1909,
	1910, 1678, 1900, 1296, 694, 94, 176, 176, 176, 176,
	176, 95, 1903, 2343, 2224, 1173, 1174, 1179, 1859, 1178,
	2504, 2503, 94, 176, 176, 1923, 1844, 1913, 1811, 1207,
	1199, 100, 101, 2504, 2429, 2269, 685, 1922, 97, 176,
	532, 1089, 82, 1790, 1, 611, 1928, 2486, 502, 1932,
	1933, 1934, 1573, 1157, 516, 2482, 1962, 1508, 1385, 1375,
	2319, 1301, 2395, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1098, 1097, 1099, 1100, 1949, 1712, 669, 2294, 1676, 533,
	2021, 900, 139, 1963, 715, 1639, 1961, 865, 1640, 872,
	2472, 104, 861, 103, 903, 533, 1001, 1707, 2309, 1907,
	1648, 1954, 1955, 2034, 1233, 176, 1231, 1232, 1999, 533,
	1230, 1235, 2000, 1234, 1229, 1812, 1458, 530, 533, 1879,
	1990, 174, 1222, 1991, 1200, 533, 533, 1984, 176, 176,
	176, 176, 176, 177, 2061, 177, 940, 492, 177, 2076,
	176, 1806, 2034, 2001, 2017, 176, 176, 2047, 176, 2018,
	2067, 176, 176, 176, 2127, 2067, 2070, 1739, 498, 1113,
	2040, 1894, 714, 675, 707, 2072, 534, 534, 534, 2228,
	2052, 2054, 1851, 2035, 2057, 2039, 2033, 2050, 2422, 2345,
	2464, 1904, 1196, 1169, 534, 534, 2135, 2094, 2048, 2045,
	2096, 1803, 176, 2097, 1120, 1525, 2046, 1621, 1581, 677,
	676, 1478, 555, 554, 2077, 533, 2075, 2080, 552, 1837,
	1860, 1076, 2089, 606, 533, 1829, 1208, 1871, 1198, 176,
	2093, 1869, 89, 1419, 2098, 2078, 2079, 1868, 2081, 176,
	1764, 1625, 2156, 2104, 2252, 2248, 2152, 2036, 2037, 2038,
	1619, 1843, 563, 556, 176, 548, 2130, 176, 2131, 604,
	2266, 2162, 1970, 2173, 1972, 1905, 2169, 2187, 2164, 1055,
	1172, 2163, 542, 873, 1089, 1522, 2132, 2133, 2400, 2386,
	1781, 2207, 1171, 1534, 1535, 2142, 172, 1678, 2155, 1699,
	60, 38, 2151, 537, 2496, 2167, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1098, 1097, 1099, 1100, 1046, 701, 32,
	114, 176, 31, 30, 29, 28, 23, 22, 2182, 2184,
	2185, 2181, 177, 156, 21, 2188, 20, 19, 25, 2189,
	18, 17, 16, 109, 47, 2195, 44, 42, 116, 177,
	115, 45, 41, 977, 39, 27, 26, 15, 14, 13,
	12, 11, 10, 9, 5, 4, 1049, 24, 534, 2,
	2218, 2219, 177, 1936, 1701, 1901, 176, 534, 0, 0,
	0, 0, 0, 534, 0, 2232, 2225, 0, 0, 0,
	153, 0, 154, 2237, 2272, 0, 0, 0, 0, 176,
	2257, 0, 171, 0, 0, 0, 2254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 2260, 2222,
	176, 176, 176, 0, 2259, 0, 2164, 0, 0, 2163,
	533, 533, 2267, 2268, 2019, 2020, 0, 0, 0, 2023,
	0, 0, 0, 2025, 2026, 2027, 0, 0, 2301, 2302,
	2247, 0, 0, 0, 0, 0, 0, 533, 533, 533,
	533, 0, 0, 0, 0, 0, 0, 0, 2304, 0,
	2261, 2262, 0, 0, 0, 0, 0, 0, 2315, 0,
	0, 2313, 2314, 0, 0, 0, 0, 0, 2277, 0,
	2279, 0, 0, 2062, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 2328, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 2324, 0, 715,
	715, 715, 0, 0, 533, 0, 533, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 2363, 1045, 1047, 2341,
	2349, 669, 2340, 2350, 0, 2365, 2361, 2067, 0, 0,
	2357, 2359, 0, 0, 2070, 0, 2192, 2193, 2070, 2194,
	2325, 34, 2196, 0, 2198, 534, 2200, 0, 0, 0,
	0, 0, 0, 0, 2148, 0, 0, 2372, 0, 533,
	0, 0, 534, 534, 0, 534, 0, 534, 534, 0,
	534, 534, 534, 534, 534, 534, 0, 2382, 2379, 533,
	2378, 0, 0, 2380, 0, 534, 0, 2389, 0, 177,
	2390, 0, 0, 1151, 0, 533, 0, 2385, 0, 533,
	533, 0, 0, 2397, 149, 177, 0, 0, 0, 0,
	0, 0, 0, 2369, 2370, 0, 534, 2418, 177, 2421,
	0, 2419, 0, 0, 2416, 2417, 0, 0, 533, 0,
	0, 0, 2430, 177, 0, 533, 0, 0, 2209, 0,
	0, 2432, 0, 669, 0, 0, 2433, 2434, 0, 177,
	0, 0, 0, 2436, 2070, 0, 177, 0, 0, 533,
	176, 0, 0, 0, 0, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 534, 534, 534, 2447, 2444, 0,
	0, 1203, 0, 0, 0, 546, 0, 0, 0, 1181,
	715, 0, 533, 34, 0, 0, 1223, 0, 0, 0,
	0, 0, 2459, 0, 0, 177, 533, 533, 0, 0,
	2462, 0, 2467, 2471, 533, 0, 0, 0, 2067, 0,
	0, 0, 2465, 0, 0, 0, 0, 0, 0, 0,
	2397, 2473, 2493, 2485, 2490, 0, 0, 34, 0, 0,
	0, 0, 2499, 0, 0, 0, 0, 2501, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 2297,
	0, 0, 0, 2510, 534, 0, 0, 2517, 0, 0,
	0, 0, 0, 0, 2508, 2312, 0, 0, 0, 534,
	534, 0, 2527, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 0, 0, 177,
	114, 0, 167, 168, 169, 170, 0, 2326, 0, 2327,
	0, 0, 0, 156, 2330, 2331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 534, 0, 2358, 0, 0, 177, 0, 177, 0,
	177, 177, 534, 0, 2366, 534, 0, 2368, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 865, 2371,
	153, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	2375, 1151, 171, 0, 0, 1327, 1327, 0, 1327, 0,
	1327, 1327, 0, 1336, 1327, 1327, 1327, 1327, 1327, 0,
	0, 0, 0, 0, 0, 0, 1151, 1151, 865, 546,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1397,
	114, 0, 136, 0, 0, 0, 534, 2420, 546, 0,
	0, 0, 534, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 0, 146, 0, 157, 0, 0, 135,
	0, 546, 0, 0, 534, 162, 0, 715, 715, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 154, 0, 0, 0, 0, 0, 123, 124,
	145, 144, 171, 0, 0, 0, 0, 175, 0, 0,
	488, 0, 0, 528, 0, 0, 0, 177, 0, 0,
	488, 0, 0, 0, 177, 0, 0, 0, 488, 177,
	177, 0, 0, 177, 0, 177, 0, 0, 0, 0,
	682, 177, 0, 0, 0, 0, 0, 0, 177, 0,
	2494, 0, 0, 0, 0, 0, 700, 0, 700, 0,
	0, 0, 0, 0, 0, 0, 488, 1518, 0, 0,
	0, 0, 0, 0, 1151, 0, 177, 534, 0, 0,
	0, 0, 1532, 1533, 149, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 140, 121, 147, 128, 120,
	0, 141, 142, 0, 0, 0, 157, 0, 0, 0,
	613, 73, 0, 0, 0, 162, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 130, 125, 126, 127, 131, 0, 0, 0, 0,
	122, 1595, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 0, 0, 1203, 0, 0, 715, 0, 0,
	0, 0, 0, 0, 0, 715, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	0, 0, 672, 0, 73, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 672, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 0, 0, 0, 0,
	0, 177, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 865,
	0, 0, 0, 0, 0, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 0, 0, 0,
	0, 0, 167, 168, 169, 170, 0, 0, 0, 143,
	0, 534, 0, 0, 0, 0, 177, 865, 0, 0,
	0, 0, 137, 177, 0, 138, 0, 0, 0, 72,
	36, 37, 74, 0, 0, 534, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 0, 1183, 1185, 0, 78,
	0, 534, 0, 40, 66, 67, 0, 64, 68, 0,
	0, 0, 0, 0, 0, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 177, 177, 177, 177, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 177, 0, 0, 53, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 0, 0, 0,
	0, 0, 167, 168, 169, 170, 0, 534, 0, 0,
	0, 0, 0, 0, 488, 0, 488, 0, 0, 488,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 0, 0, 534, 534, 0, 177, 177, 177, 177,
	177, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 177, 177, 0, 177, 0, 0, 177,
	177, 177, 0, 0, 0, 0, 43, 46, 49, 48,
	51, 715, 63, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 52, 77, 76,
	177, 1853, 61, 62, 50, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 1152, 534, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 54, 55, 0, 56, 57, 58,
	59, 0, 177, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 1037, 1037,
	1037, 0, 0, 0, 1926, 0, 0, 0, 0, 0,
	682, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 177,
	0, 0, 0, 488, 0, 1951, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 672, 1109, 1110, 1111, 0,
	1114, 0, 1116, 1117, 1118, 1119, 0, 1122, 1124, 1124,
	0, 1124, 1128, 1128, 1130, 1131, 1132, 1133, 1134, 0,
	1136, 1137, 1138, 1139, 1140, 0, 0, 0, 0, 1128,
	1128, 1128, 1128, 0, 177, 0, 0, 0, 0, 0,
	75, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 177, 177,
	177, 0, 0, 0, 0, 0, 0, 0, 534, 534,
	715, 0, 0, 0, 0, 0, 1161, 0, 0, 672,
	0, 0, 0, 672, 1529, 0, 1327, 0, 1530, 672,
	0, 0, 0, 0, 0, 534, 534, 534, 534, 0,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 1151, 1183, 1571, 2074, 1327, 1151, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	1160, 0, 0, 0, 1591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 534, 0, 0, 0, 0, 1152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 0, 1152, 1152, 865, 0, 0, 1151,
	488, 536, 0, 0, 0, 1595, 0, 0, 0, 665,
	0, 0, 0, 0, 0, 0, 1373, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 869, 0, 0,
	0, 0, 0, 534, 0, 0, 0, 534, 534, 0,
	488, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 1441, 1442, 488, 488,
	488, 488, 488, 488, 488, 0, 534, 0, 0, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 534, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 534, 0, 0, 0, 700,
	0, 0, 534, 0, 0, 0, 700, 700, 0, 0,
	0, 0, 1152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 700, 1418, 700, 700, 700, 700,
	700, 1595, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	1373, 0, 0, 0, 0, 0, 0, 0, 2320, 2321,
	2322, 2323, 700, 0, 0, 0, 1037, 1037, 1037, 0,
	0, 0, 0, 0, 0, 0, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 1418, 0, 488, 0, 488,
	0, 488, 1627, 1793, 0, 0, 0, 1797, 0, 1798,
	1799, 0, 0, 0, 0, 178, 179, 180, 1807, 0,
	1151, 1808, 0, 0, 0, 2362, 0, 2364, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 0, 1814, 0, 0,
	0, 0, 0, 0, 1819, 1820, 1821, 1822, 1823, 0,
	1591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2412, 0, 0, 0,
	2412, 2412, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 0, 0, 0, 0, 0, 1595,
	0, 0, 1622, 0, 0, 978, 1595, 983, 0, 0,
	985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 501, 0, 0, 0, 0, 0, 0, 488, 0,
	515, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	488, 488, 0, 0, 488, 512, 1767, 0, 0, 0,
	0, 1151, 488, 2460, 0, 0, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 715, 715, 0,
	0, 0, 0, 0, 0, 2480, 0, 0, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	493, 508, 0, 523, 0, 522, 497, 1595, 495, 499,
	509, 500, 0, 494, 0, 505, 0, 0, 496, 510,
	511, 513, 527, 526, 514, 0, 503, 524, 0, 0,
	0, 0, 2028, 0, 0, 2031, 2032, 0, 0, 0,
	0, 0, 700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 700, 700,
	0, 0, 0, 0, 2073, 0, 0, 0, 0, 1418,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	1373, 2091, 2092, 0, 1210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 0, 0, 488, 0, 0,
	0, 0, 0, 0, 1935, 0, 0, 0, 0, 0,
	0, 0, 0, 2191, 0, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 0, 0, 0, 2201, 2202, 2204,
	2206, 0, 0, 0, 0, 0, 0, 2212, 0, 1834,
	0, 0, 0, 2215, 0, 0, 0, 0, 0, 2220,
	0, 0, 0, 1228, 672, 488, 488, 488, 488, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 488, 1864, 1865, 0, 0, 0, 0,
	0, 2241, 2242, 1884, 0, 2246, 0, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 700, 2258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	1399, 0, 0, 0, 0, 0, 0, 2307, 0, 0,
	0, 1152, 0, 0, 0, 0, 1152, 488, 488, 488,
	488, 488, 0, 0, 1957, 0, 0, 0, 0, 2090,
	0, 1428, 0, 0, 488, 1373, 0, 488, 1432, 0,
	488, 2099, 1418, 0, 0, 0, 0, 0, 0, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 1467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1152, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 1300, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	114, 0, 136, 488, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 156, 0, 1622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2393, 2071, 0, 73, 0, 0, 1622, 1622,
	1622, 1622, 1622, 0, 146, 0, 2403, 2404, 2405, 135,
	2406, 2407, 0, 0, 2411, 1884, 0, 0, 1622, 0,
	488, 1622, 0, 0, 1238, 0, 0, 0, 0, 0,
	153, 0, 154, 0, 0, 0, 0, 0, 1304, 1305,
	145, 144, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 2435, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 0, 1612, 0,
	1615, 0, 0, 1467, 0, 488, 0, 0, 0, 0,
	2449, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2454, 2161, 0, 0, 0, 0, 2455, 2456, 488, 0,
	0, 0, 0, 0, 1251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 0, 488,
	488, 488, 0, 2468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2190, 0, 140, 1306, 147, 0, 1303,
	0, 141, 142, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 1264, 1267, 1268, 1269,
	1270, 1271, 1272, 0, 1273, 1274, 1275, 1276, 1277, 1252,
	1253, 1254, 1255, 1236, 1237, 1265, 0, 1239, 0, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 0, 0, 0,
	1373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1152, 0,
	0, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 0, 0, 0, 149, 0, 1750, 0, 0, 0,
	0, 1760, 1761, 0, 0, 1765, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 2305, 1266, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 2334, 0, 2338,
	2339, 0, 137, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2071, 0, 73, 0, 2071, 0, 0, 0, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 0, 0, 0,
	0, 0, 167, 168, 169, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 2071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 73,
	0, 607, 614, 615, 616, 617, 618, 608, 610, 0,
	0, 0, 609, 0, 0, 612, 619, 620, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 1985, 0, 0, 0, 2165, 2166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1993,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2159,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 2168,
	0, 0, 0, 0, 607, 614, 615, 616, 617, 618,
	608, 610, 0, 0, 2180, 609, 0, 2183, 612, 619,
	620, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 599, 600, 0, 0, 0, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2165, 2166, 0, 0, 0, 0, 0, 0, 0,
	0, 2221, 0, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2290, 0, 0,
	2291, 2292, 2293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 2474, 0, 2475, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 203, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	2448, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	1039, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 203, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 2100,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	0, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	1039, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 203, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 2060,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	0, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	1039, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 203, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 1610,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	0, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	1039, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 81, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 203, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	0, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	1039, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 203, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	0, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	1039, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 860, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	0, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	730, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 718, 712, 711,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 860, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	0, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 1214, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	730, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 718, 712, 711,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 843, 829, 410, 0,
	777, 846, 747, 765, 856, 768, 771, 811, 726, 790,
	333, 762, 0, 751, 722, 757, 723, 749, 779, 237,
	746, 831, 794, 845, 289, 234, 728, 752, 347, 767,
	187, 813, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 852, 293, 800, 0,
	395, 318, 0, 0, 0, 781, 835, 788, 825, 776,
	812, 736, 799, 847, 763, 808, 848, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 759, 805, 842, 760, 807, 232, 277,
	239, 231, 414, 853, 834, 0, 0, 860, 844, 783,
	0, 810, 0, 859, 721, 802, 0, 724, 727, 855,
	838, 755, 242, 0, 0, 0, 0, 0, 0, 0,
	780, 789, 822, 774, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 798, 0, 0, 0, 732, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	778, 0, 0, 0, 735, 0, 754, 823, 0, 719,
	260, 729, 319, 0, 827, 837, 775, 447, 841, 773,
	772, 817, 733, 833, 766, 288, 731, 285, 182, 199,
	0, 764, 329, 369, 375, 832, 750, 758, 223, 756,
	373, 343, 431, 207, 250, 366, 348, 371, 797, 815,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 709, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	730, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 745, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 828, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 718, 712, 711,
	286, 295, 820, 858, 342, 374, 213, 433, 394, 740,
	744, 738, 739, 792, 793, 741, 849, 850, 851, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 824, 734,
	0, 742, 743, 0, 830, 839, 840, 483, 796, 181,
	196, 291, 854, 363, 253, 461, 441, 437, 720, 737,
	229, 748, 0, 0, 761, 769, 770, 782, 784, 785,
	786, 787, 315, 803, 804, 806, 814, 816, 819, 821,
	826, 836, 857, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 795, 801, 302, 247, 265, 276,
	809, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	791, 818, 298, 411, 412, 272, 410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 1558, 0, 564, 0, 0, 0, 237, 569, 0,
	0, 0, 289, 234, 0, 1559, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 576, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 571, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 81, 0, 0, 178, 179, 180, 607, 614,
	615, 616, 617, 618, 608, 610, 0, 0, 211, 609,
	218, 585, 612, 619, 620, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 547, 561, 0, 575, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 558, 559, 698, 0, 0,
	0, 592, 0, 560, 0, 0, 568, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 591, 0, 0, 447, 0, 0, 589, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 598, 590, 580,
	582, 599, 600, 577, 578, 581, 601, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 593, 567, 566, 0,
	573, 574, 0, 583, 584, 586, 565, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 564, 0, 0, 0, 237,
	569, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 576, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 571, 572, 0,
	0, 0, 0, 0, 0, 1634, 0, 279, 220, 186,
	330, 396, 252, 0, 81, 0, 0, 178, 179, 180,
	607, 614, 615, 616, 617, 618, 608, 610, 0, 0,
	211, 609, 218, 585, 612, 619, 620, 1635, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 547, 561, 0, 575, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 559, 0,
	0, 0, 0, 592, 0, 560, 0, 0, 568, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 591, 0, 0, 447, 0, 0,
	589, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 598,
	590, 580, 582, 599, 600, 577, 578, 581, 601, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 593, 567,
	566, 0, 573, 574, 0, 583, 584, 586, 565, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	72, 410, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 564, 0,
	0, 0, 237, 569, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 576,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	571, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 81, 0, 0,
	178, 179, 180, 607, 614, 615, 616, 617, 618, 608,
	610, 0, 0, 211, 609, 218, 585, 612, 619, 620,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 547, 561,
	0, 575, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 559, 0, 0, 0, 0, 592, 0, 560, 0,
	0, 568, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 591, 0, 0,
	447, 0, 0, 589, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 598, 590, 580, 582, 599, 600, 577, 578,
	581, 601, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 593, 567, 566, 0, 573, 574, 0, 583, 584,
	586, 565, 181, 196, 291, 80, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	564, 0, 0, 0, 237, 569, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 576, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 571, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 81,
	0, 0, 178, 179, 180, 607, 614, 615, 616, 617,
	618, 608, 610, 0, 0, 211, 609, 218, 585, 612,
	619, 620, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	547, 561, 0, 575, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 559, 0, 0, 0, 0, 592, 0,
	560, 0, 0, 568, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 591,
	0, 0, 447, 0, 0, 589, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 2443, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 598, 590, 580, 582, 599, 600,
	577, 578, 581, 601, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 593, 567, 566, 0, 573, 574, 0,
	583, 584, 586, 565, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 564, 0, 0, 0, 237, 569, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 576, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 571, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 81, 0, 1182, 178, 179, 180, 607, 614, 615,
	616, 617, 618, 608, 610, 0, 0, 211, 609, 218,
	585, 612, 619, 620, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 547, 561, 0, 575, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 559, 0, 0, 0, 0,
	592, 0, 560, 0, 0, 568, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 591, 0, 0, 447, 0, 0, 589, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 598, 590, 580, 582,
	599, 600, 577, 578, 581, 601, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 593, 567, 566, 0, 573,
	574, 0, 583, 584, 586, 565, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 564, 0, 0, 0, 237, 569,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 576, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 571, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 81, 0, 0, 178, 179, 180, 607,
	614, 615, 616, 617, 618, 608, 610, 0, 0, 211,
	609, 218, 585, 612, 619, 620, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 547, 561, 0, 575, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 559, 698, 0,
	0, 0, 592, 0, 560, 0, 0, 568, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 591, 0, 0, 447, 0, 0, 589,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 598, 590,
	580, 582, 599, 600, 577, 578, 581, 601, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 593, 567, 566,
	0, 573, 574, 0, 583, 584, 586, 565, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 564, 0, 0, 0,
	237, 569, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 576, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 571, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 81, 0, 0, 178, 179,
	180, 607, 614, 615, 616, 617, 618, 608, 610, 0,
	0, 211, 609, 218, 585, 612, 619, 620, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 547, 561, 0, 575,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 559,
	0, 0, 0, 0, 592, 0, 560, 0, 0, 568,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 591, 0, 0, 447, 0,
	0, 589, 0, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	598, 590, 580, 582, 599, 600, 577, 578, 581, 601,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 593,
	567, 566, 0, 573, 574, 0, 583, 584, 586, 565,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 564, 0,
	0, 0, 237, 569, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 576,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	571, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 81, 0, 0,
	178, 179, 180, 607, 614, 615, 616, 617, 618, 608,
	610, 0, 0, 211, 609, 218, 585, 612, 619, 620,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 561,
	0, 575, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 559, 0, 0, 0, 0, 592, 0, 560, 0,
	0, 568, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 591, 0, 0,
	447, 0, 0, 589, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 598, 590, 580, 582, 599, 600, 577, 578,
	581, 601, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 593, 567, 566, 0, 573, 574, 0, 583, 584,
	586, 565, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 908, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 907, 447, 0, 0, 0, 0, 0, 904, 905,
	288, 868, 285, 182, 199, 898, 902, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 1202, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 1204, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 203, 0, 0, 0, 1071, 0,
	1072, 1073, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 1147,
	1150, 0, 0, 0, 0, 1146, 1149, 0, 0, 211,
	1145, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 0, 0, 0, 447, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 72,
	410, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 81, 0, 1182, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 80, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 72, 410, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 81,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 181, 196, 291, 80, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 1580, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 1374, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 1578, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 0, 0, 0, 447, 0, 0, 0,
	0, 0, 0, 0, 288, 868, 285, 182, 199, 866,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 0, 0, 1182, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 0, 447, 0,
	0, 0, 2413, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 1580, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 1374, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 0,
	0, 0, 178, 179, 180, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	1839, 0, 0, 0, 1840, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 410, 0, 298,
	411, 412, 272, 0, 0, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 1225,
	0, 0, 0, 289, 234, 0, 0, 347, 0, 187,
	0, 386, 222, 299, 296, 417, 248, 240, 236, 221,
	273, 305, 345, 404, 339, 0, 293, 0, 0, 395,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 220, 186, 330,
	396, 252, 0, 0, 0, 0, 178, 179, 180, 0,
	1224, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 218, 0, 0, 0, 0, 0, 232, 277, 239,
	231, 414, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 319, 0, 0, 0, 0, 447, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 182, 199, 0,
	0, 329, 369, 375, 0, 0, 0, 223, 0, 373,
	343, 431, 207, 250, 366, 348, 371, 0, 0, 372,
	294, 419, 361, 429, 448, 449, 230, 323, 438, 408,
	444, 460, 200, 227, 337, 401, 434, 392, 316, 415,
	416, 284, 391, 258, 185, 292, 454, 198, 381, 215,
	205, 191, 403, 427, 212, 384, 0, 0, 462, 193,
	425, 400, 312, 281, 282, 192, 0, 365, 235, 256,
	225, 332, 422, 423, 224, 463, 202, 443, 195, 0,
	442, 325, 418, 426, 313, 304, 194, 424, 311, 303,
	287, 246, 267, 359, 297, 360, 268, 321, 320, 322,
	188, 435, 0, 189, 0, 397, 436, 464, 208, 209,
	210, 0, 245, 249, 255, 257, 263, 264, 271, 290,
	336, 358, 356, 362, 0, 413, 430, 439, 446, 452,
	453, 455, 456, 457, 458, 459, 324, 270, 393, 286,
	295, 0, 0, 342, 374, 213, 433, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 181, 196,
	291, 0, 363, 253, 461, 441, 437, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 197, 206, 216, 228, 243, 251,
	261, 266, 269, 274, 275, 278, 283, 301, 306, 307,
	308, 309, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 351, 352, 353, 354, 355, 357, 364, 368,
	376, 377, 378, 379, 380, 382, 383, 387, 388, 389,
	390, 398, 402, 420, 421, 432, 445, 450, 262, 428,
	451, 0, 300, 0, 0, 302, 247, 265, 276, 0,
	440, 399, 201, 370, 254, 190, 219, 204, 226, 241,
	244, 280, 310, 317, 346, 350, 259, 238, 217, 367,
	214, 385, 405, 406, 407, 409, 314, 233, 349, 410,
	0, 298, 411, 412, 272, 0, 0, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 289, 234, 0, 0, 347,
	0, 187, 0, 386, 222, 299, 296, 417, 248, 240,
	236, 221, 273, 305, 345, 404, 339, 0, 293, 0,
	0, 395, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 220,
	186, 330, 396, 252, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 218, 0, 0, 0, 0, 0, 232,
	277, 239, 231, 414, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 319, 0, 0, 0, 0, 447, 0,
	0, 0, 2481, 0, 0, 0, 288, 0, 285, 182,
	199, 0, 0, 329, 369, 375, 0, 0, 0, 223,
	0, 373, 343, 431, 207, 250, 366, 348, 371, 0,
	0, 372, 294, 419, 361, 429, 448, 449, 230, 323,
	438, 408, 444, 460, 200, 227, 337, 401, 434, 392,
	316, 415, 416, 284, 391, 258, 185, 292, 454, 198,
	381, 215, 205, 191, 403, 427, 212, 384, 0, 0,
	462, 193, 425, 400, 312, 281, 282, 192, 0, 365,
	235, 256, 225, 332, 422, 423, 224, 463, 202, 443,
	195, 0, 442, 325, 418, 426, 313, 304, 194, 424,
	311, 303, 287, 246, 267, 359, 297, 360, 268, 321,
	320, 322, 188, 435, 0, 189, 0, 397, 436, 464,
	208, 209, 210, 0, 245, 249, 255, 257, 263, 264,
	271, 290, 336, 358, 356, 362, 0, 413, 430, 439,
	446, 452, 453, 455, 456, 457, 458, 459, 324, 270,
	393, 286, 295, 0, 0, 342, 374, 213, 433, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	181, 196, 291, 0, 363, 253, 461, 441, 437, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 197, 206, 216, 228,
	243, 251, 261, 266, 269, 274, 275, 278, 283, 301,
	306, 307, 308, 309, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 351, 352, 353, 354, 355, 357,
	364, 368, 376, 377, 378, 379, 380, 382, 383, 387,
	388, 389, 390, 398, 402, 420, 421, 432, 445, 450,
	262, 428, 451, 0, 300, 0, 0, 302, 247, 265,
	276, 0, 440, 399, 201, 370, 254, 190, 219, 204,
	226, 241, 244, 280, 310, 317, 346, 350, 259, 238,
	217, 367, 214, 385, 405, 406, 407, 409, 314, 233,
	349, 410, 0, 298, 411, 412, 272, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 289, 234, 0,
	0, 347, 0, 187, 0, 386, 222, 299, 296, 417,
	248, 240, 236, 221, 273, 305, 345, 404, 339, 0,
	293, 0, 0, 395, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 220, 186, 330, 396, 252, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 218, 0, 0, 0, 0,
	0, 232, 277, 239, 231, 414, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 319, 0, 0, 0, 0,
	447, 0, 0, 0, 2413, 0, 0, 0, 288, 0,
	285, 182, 199, 0, 0, 329, 369, 375, 0, 0,
	0, 223, 0, 373, 343, 431, 207, 250, 366, 348,
	371, 0, 0, 372, 294, 419, 361, 429, 448, 449,
	230, 323, 438, 408, 444, 460, 200, 227, 337, 401,
	434, 392, 316, 415, 416, 284, 391, 258, 185, 292,
	454, 198, 381, 215, 205, 191, 403, 427, 212, 384,
	0, 0, 462, 193, 425, 400, 312, 281, 282, 192,
	0, 365, 235, 256, 225, 332, 422, 423, 224, 463,
	202, 443, 195, 0, 442, 325, 418, 426, 313, 304,
	194, 424, 311, 303, 287, 246, 267, 359, 297, 360,
	268, 321, 320, 322, 188, 435, 0, 189, 0, 397,
	436, 464, 208, 209, 210, 0, 245, 249, 255, 257,
	263, 264, 271, 290, 336, 358, 356, 362, 0, 413,
	430, 439, 446, 452, 453, 455, 456, 457, 458, 459,
	324, 270, 393, 286, 295, 0, 0, 342, 374, 213,
	433, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 181, 196, 291, 0, 363, 253, 461, 441,
	437, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 197, 206,
	216, 228, 243, 251, 261, 266, 269, 274, 275, 278,
	283, 301, 306, 307, 308, 309, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 351, 352, 353, 354,
	355, 357, 364, 368, 376, 377, 378, 379, 380, 382,
	383, 387, 388, 389, 390, 398, 402, 420, 421, 432,
	445, 450, 262, 428, 451, 0, 300, 0, 0, 302,
	247, 265, 276, 0, 440, 399, 201, 370, 254, 190,
	219, 204, 226, 241, 244, 280, 310, 317, 346, 350,
	259, 238, 217, 367, 214, 385, 405, 406, 407, 409,
	314, 233, 349, 410, 0, 298, 411, 412, 272, 0,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 289,
	234, 0, 0, 347, 0, 187, 0, 386, 222, 299,
	296, 417, 248, 240, 236, 221, 273, 305, 345, 404,
	339, 0, 293, 0, 0, 395, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 220, 186, 330, 396, 252, 0, 81,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 218, 0, 0,
	0, 0, 0, 232, 277, 239, 231, 414, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 319, 0, 0,
	0, 0, 447, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 285, 182, 199, 0, 0, 329, 369, 375,
	0, 0, 0, 223, 0, 373, 343, 431, 207, 250,
	366, 348, 371, 0, 0, 372, 294, 419, 361, 429,
	448, 449, 230, 323, 438, 408, 444, 460, 200, 227,
	337, 401, 434, 392, 316, 415, 416, 284, 391, 258,
	185, 292, 454, 198, 381, 215, 205, 191, 403, 427,
	212, 384, 0, 0, 462, 193, 425, 400, 312, 281,
	282, 192, 0, 365, 235, 256, 225, 332, 422, 423,
	224, 463, 202, 443, 195, 0, 442, 325, 418, 426,
	313, 304, 194, 424, 311, 303, 287, 246, 267, 359,
	297, 360, 268, 321, 320, 322, 188, 435, 0, 189,
	0, 397, 436, 464, 208, 209, 210, 0, 245, 249,
	255, 257, 263, 264, 271, 290, 336, 358, 356, 362,
	0, 413, 430, 439, 446, 452, 453, 455, 456, 457,
	458, 459, 324, 270, 393, 286, 295, 0, 0, 342,
	374, 213, 433, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 181, 196, 291, 0, 363, 253,
	461, 441, 437, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	197, 206, 216, 228, 243, 251, 261, 266, 269, 274,
	275, 278, 283, 301, 306, 307, 308, 309, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 351, 352,
	353, 354, 355, 357, 364, 368, 376, 377, 378, 379,
	380, 382, 383, 387, 388, 389, 390, 398, 402, 420,
	421, 432, 445, 450, 262, 428, 451, 0, 300, 0,
	0, 302, 247, 265, 276, 0, 440, 399, 201, 370,
	254, 190, 219, 204, 226, 241, 244, 280, 310, 317,
	346, 350, 259, 238, 217, 367, 214, 385, 405, 406,
	407, 409, 314, 233, 349, 410, 0, 298, 411, 412,
	272, 0, 0, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 289, 234, 0, 0, 347, 0, 187, 0, 386,
	222, 299, 296, 417, 248, 240, 236, 221, 273, 305,
	345, 404, 339, 0, 293, 0, 0, 395, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 220, 186, 330, 396, 252,
	0, 0, 0, 0, 178, 179, 180, 0, 1374, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 218,
	0, 0, 0, 0, 0, 232, 277, 239, 231, 414,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 319,
	0, 0, 0, 0, 447, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 285, 182, 199, 0, 0, 329,
	369, 375, 0, 0, 0, 223, 0, 373, 343, 431,
	207, 250, 366, 348, 371, 0, 0, 372, 294, 419,
	361, 429, 448, 449, 230, 323, 438, 408, 444, 460,
	200, 227, 337, 401, 434, 392, 316, 415, 416, 284,
	391, 258, 185, 292, 454, 198, 381, 215, 205, 191,
	403, 427, 212, 384, 0, 0, 462, 193, 425, 400,
	312, 281, 282, 192, 0, 365, 235, 256, 225, 332,
	422, 423, 224, 463, 202, 443, 195, 0, 442, 325,
	418, 426, 313, 304, 194, 424, 311, 303, 287, 246,
	267, 359, 297, 360, 268, 321, 320, 322, 188, 435,
	0, 189, 0, 397, 436, 464, 208, 209, 210, 0,
	245, 249, 255, 257, 263, 264, 271, 290, 336, 358,
	356, 362, 0, 413, 430, 439, 446, 452, 453, 455,
	456, 457, 458, 459, 324, 270, 393, 286, 295, 0,
	0, 342, 374, 213, 433, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 181, 196, 291, 0,
	363, 253, 461, 441, 437, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 197, 206, 216, 228, 243, 251, 261, 266,
	269, 274, 275, 278, 283, 301, 306, 307, 308, 309,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	351, 352, 353, 354, 355, 357, 364, 368, 376, 377,
	378, 379, 380, 382, 383, 387, 388, 389, 390, 398,
	402, 420, 421, 432, 445, 450, 262, 428, 451, 0,
	300, 0, 0, 302, 247, 265, 276, 0, 440, 399,
	201, 370, 254, 190, 219, 204, 226, 241, 244, 280,
	310, 317, 346, 350, 259, 238, 217, 367, 214, 385,
	405, 406, 407, 409, 314, 233, 349, 0, 410, 298,
	411, 412, 272, 1623, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 1204, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 181, 196, 291, 1465, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	1346, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 1344, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 1342, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 1340, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 1338, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	1334, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 1332, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 1330, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 262, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 1307, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 1209, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 410, 0, 298, 411,
	412, 272, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 289, 234, 0, 0, 347, 0, 187, 0,
	386, 222, 299, 296, 417, 248, 240, 236, 221, 273,
	305, 345, 404, 339, 0, 293, 0, 0, 395, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 220, 186, 330, 396,
	252, 0, 0, 0, 0, 178, 179, 180, 0, 1048,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 0,
	218, 0, 0, 0, 0, 0, 232, 277, 239, 231,
	414, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	319, 0, 0, 0, 0, 447, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 285, 182, 199, 0, 0,
	329, 369, 375, 0, 0, 0, 223, 0, 373, 343,
	431, 207, 250, 366, 348, 371, 0, 0, 372, 294,
	419, 361, 429, 448, 449, 230, 323, 438, 408, 444,
	460, 200, 227, 337, 401, 434, 392, 316, 415, 416,
	284, 391, 258, 185, 292, 454, 198, 381, 215, 205,
	191, 403, 427, 212, 384, 0, 0, 462, 193, 425,
	400, 312, 281, 282, 192, 0, 365, 235, 256, 225,
	332, 422, 423, 224, 463, 202, 443, 195, 0, 442,
	325, 418, 426, 313, 304, 194, 424, 311, 303, 287,
	246, 267, 359, 297, 360, 268, 321, 320, 322, 188,
	435, 0, 189, 0, 397, 436, 464, 208, 209, 210,
	0, 245, 249, 255, 257, 263, 264, 271, 290, 336,
	358, 356, 362, 0, 413, 430, 439, 446, 452, 453,
	455, 456, 457, 458, 459, 324, 270, 393, 286, 295,
	0, 0, 342, 374, 213, 433, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 181, 196, 291,
	0, 363, 253, 461, 441, 437, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 197, 206, 216, 228, 243, 251, 261,
	266, 269, 274, 275, 278, 283, 301, 306, 307, 308,
	309, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 351, 352, 353, 354, 355, 357, 364, 368, 376,
	377, 378, 379, 380, 382, 383, 387, 388, 389, 390,
	398, 402, 420, 421, 432, 445, 450, 262, 428, 451,
	0, 300, 0, 0, 302, 247, 265, 276, 0, 440,
	399, 201, 370, 254, 190, 219, 204, 226, 241, 244,
	280, 310, 317, 346, 350, 259, 238, 217, 367, 214,
	385, 405, 406, 407, 409, 314, 233, 349, 410, 0,
	298, 411, 412, 272, 0, 0, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 289, 234, 0, 0, 347, 0,
	187, 0, 386, 222, 299, 296, 417, 248, 240, 236,
	221, 273, 305, 345, 404, 339, 0, 293, 0, 0,
	395, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 220, 186,
	330, 396, 252, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 218, 0, 0, 0, 0, 0, 232, 277,
	239, 231, 414, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 319, 0, 0, 0, 0, 447, 0, 0,
	0, 0, 0, 0, 0, 288, 0, 285, 182, 199,
	0, 0, 329, 369, 375, 0, 0, 0, 223, 0,
	373, 343, 431, 207, 250, 366, 348, 371, 0, 0,
	372, 294, 419, 361, 429, 448, 449, 230, 323, 438,
	408, 444, 460, 200, 227, 337, 401, 434, 392, 316,
	415, 416, 284, 391, 258, 185, 292, 454, 198, 381,
	215, 205, 191, 403, 427, 212, 384, 0, 0, 462,
	193, 425, 400, 312, 281, 282, 192, 0, 365, 235,
	256, 225, 332, 422, 423, 224, 463, 202, 443, 195,
	0, 442, 325, 418, 426, 313, 304, 194, 424, 311,
	303, 287, 246, 267, 359, 297, 360, 268, 321, 320,
	322, 188, 435, 0, 189, 0, 397, 436, 464, 208,
	209, 210, 0, 245, 249, 255, 257, 263, 264, 271,
	290, 336, 358, 356, 362, 0, 413, 430, 439, 446,
	452, 453, 455, 456, 457, 458, 459, 324, 270, 393,
	286, 295, 0, 0, 342, 374, 213, 433, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 181,
	196, 291, 0, 363, 253, 461, 441, 437, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 0, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 183, 184, 197, 206, 216, 228, 243,
	251, 261, 266, 269, 274, 275, 278, 283, 301, 306,
	307, 308, 309, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 351, 352, 353, 354, 355, 357, 364,
	368, 376, 377, 378, 379, 380, 382, 383, 387, 388,
	389, 390, 398, 402, 420, 421, 432, 445, 450, 262,
	428, 451, 0, 300, 0, 0, 302, 247, 265, 276,
	0, 440, 399, 201, 370, 254, 190, 219, 204, 226,
	241, 244, 280, 310, 317, 346, 350, 259, 238, 217,
	367, 214, 385, 405, 406, 407, 409, 314, 233, 349,
	410, 0, 298, 411, 412, 272, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 289, 234, 0, 0,
	347, 0, 187, 0, 386, 222, 299, 296, 417, 248,
	240, 236, 221, 273, 305, 345, 404, 339, 0, 293,
	0, 0, 395, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	220, 186, 330, 396, 252, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 218, 0, 0, 0, 0, 0,
	232, 277, 239, 231, 414, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 0, 260, 0, 319, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	182, 199, 0, 0, 329, 369, 375, 0, 0, 0,
	223, 0, 373, 343, 431, 207, 250, 366, 348, 371,
	0, 0, 372, 294, 419, 361, 429, 448, 449, 230,
	323, 438, 408, 444, 460, 200, 227, 337, 401, 434,
	392, 316, 415, 416, 284, 391, 258, 185, 292, 454,
	198, 381, 215, 205, 191, 403, 427, 212, 384, 0,
	0, 462, 193, 425, 400, 312, 281, 282, 192, 0,
	365, 235, 256, 225, 332, 422, 423, 224, 463, 202,
	443, 195, 0, 442, 325, 418, 426, 313, 304, 194,
	424, 311, 303, 287, 246, 267, 359, 297, 360, 268,
	321, 320, 322, 188, 435, 0, 189, 0, 397, 436,
	464, 208, 209, 210, 0, 245, 249, 255, 257, 263,
	264, 271, 290, 336, 358, 356, 362, 0, 413, 430,
	439, 446, 452, 453, 455, 456, 457, 458, 459, 324,
	270, 393, 286, 295, 0, 0, 342, 374, 213, 433,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 181, 196, 291, 0, 363, 253, 461, 441, 437,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 197, 206, 216,
	228, 243, 251, 261, 266, 269, 274, 275, 278, 283,
	301, 306, 307, 308, 309, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 351, 352, 353, 354, 355,
	357, 364, 368, 376, 377, 378, 379, 380, 382, 383,
	387, 388, 389, 390, 398, 402, 420, 421, 432, 445,
	450, 538, 428, 451, 0, 300, 0, 0, 302, 247,
	265, 276, 0, 440, 399, 201, 370, 254, 190, 219,
	204, 226, 241, 244, 280, 310, 317, 346, 350, 259,
	238, 217, 367, 214, 385, 405, 406, 407, 409, 314,
	233, 349, 410, 0, 298, 411, 412, 272, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 289, 234,
	0, 0, 347, 0, 187, 0, 386, 222, 299, 296,
	417, 248, 240, 236, 221, 273, 305, 345, 404, 339,
	0, 293, 0, 0, 395, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 220, 186, 330, 396, 252, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 218, 0, 0, 0,
	0, 0, 232, 277, 239, 231, 414, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 319, 0, 0, 486,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 285, 182, 199, 0, 0, 329, 369, 375, 0,
	0, 0, 223, 0, 373, 343, 431, 207, 250, 366,
	348, 371, 0, 0, 372, 294, 419, 361, 429, 448,
	449, 230, 323, 438, 408, 444, 460, 200, 227, 337,
	401, 434, 392, 316, 415, 416, 284, 391, 258, 185,
	292, 454, 198, 381, 215, 205, 191, 403, 427, 212,
	384, 0, 0, 462, 193, 425, 400, 312, 281, 282,
	192, 0, 365, 235, 256, 225, 332, 422, 423, 224,
	463, 202, 443, 195, 0, 442, 325, 418, 426, 313,
	304, 194, 424, 311, 303, 287, 246, 267, 359, 297,
	360, 268, 321, 320, 322, 188, 435, 0, 189, 0,
	397, 436, 464, 208, 209, 210, 0, 245, 249, 255,
	257, 263, 264, 271, 290, 336, 358, 356, 362, 0,
	413, 430, 439, 446, 452, 453, 455, 456, 457, 458,
	459, 324, 270, 393, 286, 295, 0, 0, 342, 374,
	213, 433, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 181, 196, 291, 0, 363, 253, 461,
	441, 437, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 197,
	206, 216, 228, 243, 251, 261, 266, 269, 274, 275,
	278, 283, 301, 306, 307, 308, 309, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 351, 352, 353,
	354, 355, 357, 364, 368, 376, 377, 378, 379, 380,
	382, 383, 387, 388, 389, 390, 398, 402, 420, 421,
	432, 445, 450, 262, 428, 451, 0, 300, 0, 0,
	302, 247, 265, 276, 0, 440, 399, 201, 370, 254,
	190, 219, 204, 226, 241, 244, 280, 310, 317, 346,
	350, 259, 238, 217, 367, 214, 385, 405, 406, 407,
	409, 314, 233, 349, 410, 0, 298, 411, 412, 272,
	0, 0, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	289, 234, 0, 0, 347, 0, 187, 0, 386, 222,
	299, 296, 417, 248, 240, 236, 221, 273, 305, 345,
	404, 339, 0, 293, 0, 0, 395, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 220, 186, 330, 396, 252, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 218, 0,
	0, 0, 0, 0, 232, 277, 239, 231, 414, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 319, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 182, 199, 0, 0, 329, 369,
	375, 0, 0, 0, 223, 0, 373, 343, 431, 207,
	250, 366, 348, 371, 0, 0, 372, 294, 419, 361,
	429, 448, 449, 230, 323, 438, 408, 444, 460, 200,
	227, 337, 401, 434, 392, 316, 415, 416, 284, 391,
	258, 185, 292, 454, 198, 381, 215, 205, 191, 403,
	427, 212, 384, 0, 0, 462, 193, 425, 400, 312,
	281, 282, 192, 0, 365, 235, 256, 225, 332, 422,
	423, 224, 463, 202, 443, 195, 0, 442, 325, 418,
	426, 313, 304, 194, 424, 311, 303, 287, 246, 267,
	359, 297, 360, 268, 321, 320, 322, 188, 435, 0,
	189, 0, 397, 436, 464, 208, 209, 210, 0, 245,
	249, 255, 257, 263, 264, 271, 290, 336, 358, 356,
	362, 0, 413, 430, 439, 446, 452, 453, 455, 456,
	457, 458, 459, 324, 270, 393, 286, 295, 0, 0,
	342, 374, 213, 433, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 181, 196, 291, 0, 363,
	253, 461, 441, 437, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 197, 206, 216, 228, 243, 251, 261, 266, 269,
	274, 275, 278, 283, 301, 306, 307, 308, 309, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 351,
	352, 353, 354, 355, 357, 364, 368, 376, 377, 378,
	379, 380, 382, 383, 387, 388, 389, 390, 398, 402,
	420, 421, 432, 445, 450, 262, 428, 451, 0, 300,
	0, 0, 302, 247, 265, 276, 0, 440, 399, 201,
	370, 254, 190, 219, 204, 226, 241, 244, 280, 310,
	317, 346, 350, 259, 238, 217, 367, 214, 385, 405,
	406, 407, 409, 314, 233, 349, 0, 0, 298, 411,
	412, 272,
}

var yyPact = [...]int{
	3083, -1000, -388, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1633, 1662, -1000, -1000, -1000, -1000, 1761,
	-1000, 618, 1410, -1000, 1640, 2661, -1000, 33497, 410, -1000,
	32955, 409, 3869, 33497, -1000, 136, -1000, 109, 33497, 124,
	32413, -1000, -1000, -300, 13982, 1601, -14, -20, 33497, -1000,
	1746, 1388, -1000, 298, -1000, -1000, -1000, -1000, -1000, -1000,
	31871, -1000, -1000, -1000, 1647, 1634, 1766, 534, 1593, -1000,
	1687, 1388, -1000, 13982, 1727, 1679, 13440, -1000, 13440, 366,
	-1000, -1000, 10181, -1000, -1000, 18320, 33497, 33497, 180, -1000,
	1640, -1000, -1000, 292, -1000, 264, 1311, -1000, 1309, -1000,
	549, 417, 275, 396, 395, 274, 273, 269, 268, 267,
	266, 265, 261, 280, -1000, 593, 593, -188, -195, 2521,
	348, 348, 348, 377, 1618, 1616, -1000, 633, -1000, 593,
	593, 288, 593, 593, 593, 593, 224, 223, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 262, 1640, 208, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 33497, 102, 33497, -1000, 463, 33497,
	684, 684, 56, 684, 684, 684, 684, 116, 508, -29,
	-1000, 113, 218, 95, 203, 683, 117, 119, -1000, -1000,
	198, 683, 1096, 542, 84, -1000, 684, 7981, 7981, 7981,
	-1000, 1629, -1000, -1000, -1000, -1000, -1000, -1000, 1110, -1000,
	376, -1000, -1000, -1000, -1000, 33497, 31329, 299, 621, -1000,
	-1000, -1000, 28, -1000, -1000, 1273, 720, 13982, 816, -1000,
	1418, 510, -1000, -1000, -1000, -1000, -1000, 448, 14524, 14524,
	14524, 14524, -1000, -1000, 1318, 1318, 1318, 1318, 14524, 1318,
	14524, 1318, 1318, 1318, 1318, 13982, 1318, 1318, 1318, -1000,
	1318, 1318, 1318, 1318, 1318, 1318, 1318, 1318, 460, 1318,
	1318, 1318, 1318, 1318, -1000, -1000, -1000, -1000, 1318, 1318,
	1318, 1318, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 16150, -1000, 11814, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 33497, -1000, 1318, 166, 1687, 1388, -1000,
	1746, 1706, 298, -1000, 1694, 1237, 1174, 1079, 1388, 1303,
	33497, -1000, 1320, -1000, -1000, -1000, 1474, 1005, 1095, -1000,
	-1000, -1000, -1000, 997, 13982, -1000, -1000, 1758, -1000, 15608,
	459, 820, 1757, 30787, -1000, 366, 366, 1308, 9631, -73,
	-1000, -1000, -1000, 610, 21030, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1629, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1281, 33497, -1000, -1000, 4617, 1026, -1000, 1409, -1000,
	1270, -1000, 1349, 1423, 404, 1026, 397, 392, 387, -1000,
	-119, -1000, -1000, -1000, -1000, -1000, 593, 593, -1000, 279,
	1726, 2661, 4681, -1000, -1000, -1000, 30245, 1407, 1026, -1000,
	1405, -1000, 734, 454, 481, 481, 1026, -1000, -1000, 33497,
	1026, 731, 721, 33497, 33497, -1000, 29703, -1000, 29161, 28619,
	953, 33497, 28077, 27535, 26993, 26451, 25909, -1000, 1500, -1000,
	1473, -1000, -1000, -1000, 33497, 33497, 33497, 231, -1000, -1000,
	33497, 1026, -1000, -1000, 950, 949, 593, 593, 948, 1084,
	1083, 1081, 593, 593, 945, 1077, 23198, 219, 943, 910,
	906, 1000, 1072, 154, 980, 892, 904, 33497, 1403, 33497,
	-1000, 196, 552, 351, 599, 1640, 1600, 1307, 375, 403,
	1026, 355, 355, -1000, 8531, -1000, -1000, 1067, 13982, -1000,
	686, 683, 683, -1000, -1000, -1000, -1000, -1000, -1000, 684,
	33497, 686, -1000, -1000, -1000, 683, 684, 33497, 684, 684,
	684, 684, 683, 683, 683, 684, 33497, 33497, 33497, 33497,
	33497, 33497, 33497, 33497, 33497, 7981, 7981, 7981, 542, 684,
	-306, -1000, 1066, -1000, 1457, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 114, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -104, 1306, 25367, -1000, -307, -312,
	-313, -315, -1000, -1000, -1000, -316, -321, -1000, -1000, -1000,
	13982, 13982, 13982, 13982, -1000, 886, 14524, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 883, 595, 14524, 14524, 14524, 14524,
	14524, 14524, 14524, 14524, 14524, 14524, 14524, 14524, 14524, 14524,
	14524, 728, 1065, 1064, 510, 510, 510, 510, -1000, 13440,
	13982, 13982, 510, -1000, 1026, 24825, 13440, 13440, 13982, 1626,
	634, 720, 33497, -1000, 1079, -1000, -1000, -1000, 873, -1000,
	33497, 33497, 32, 13982, 10729, 8531, 13440, 13440, 13440, 13440,
	13440, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 458, 1193, 1184, 1268, -1000, 1305, -1000, -175,
	17778, 13982, 1039, -1000, -1000, -1000, 1687, -1000, 1687, 1193,
	1614, 1517, 13440, -1000, -1000, 1614, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1277, -1000, 33497, 1303, 1674, 33497,
	1512, 1038, 324, -1000, 13982, 13982, 1302, -1000, 957, 33497,
	-1000, -1000, 24283, -1000, -1000, 7431, -1000, 33497, 252, 33497,
	-1000, 22656, 23741, 9081, -73, -1000, 9081, 1292, -1000, -36,
	-44, 11271, 514, -1000, -1000, -1000, 2521, 15066, 1165, 514,
	77, -1000, -1000, -1000, 1349, -1000, 1349, 1349, 1349, 1349,
	324, 324, 324, 324, -1000, -1000, -1000, -1000, -1000, 1380,
	1378, -1000, 1349, 1349, 1349, 1349, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1377, 1377, 1377, 1351, 1351, 317, -1000,
	13982, 167, 33497, 1645, 895, 196, 360, 1437, 1026, 1026,
	1026, 360, -1000, 1159, 1093, -1000, -372, 1299, -1000, -1000,
	1721, -1000, -1000, 657, 770, 757, 569, 33497, 173, 251,
	-1000, 309, -1000, 33497, 1026, 714, 481, 1026, -1000, 1026,
	-1000, -1000, -1000, -1000, -1000, 1026, 1298, -1000, 1334, 793,
	755, 778, 680, 1298, -1000, -1000, -144, 1298, -1000, 1298,
	-1000, 1298, -1000, 1298, -1000, 1298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 580, 33497, 173, 728, -1000, 374,
	-1000, -1000, 728, 728, -1000, -1000, -1000, -1000, 1035, 1032,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -363, 33497, -1000,
	191, 597, 241, 257, 238, 33497, 137, 1682, 202, 217,
	33497, 33497, 355, 1456, 33497, 1657, 33497, -1000, -1000, -1000,
	-1000, 720, 33497, -1000, -1000, 684, 684, -1000, -1000, 33497,
	684, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 684,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33497, 33497, -1000,
	-1000, -1000, -1000, -1000, 47, -41, 248, -1000, -1000, -1000,
	-1000, -1000, 1684, -1000, 720, 724, 663, -1000, -1000, -1000,
	840, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 883, 14524,
	14524, 14524, 1660, 371, 1883, 1330, 1074, 708, 708, 743,
	743, 518, 518, 518, 518, 518, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1227, -1000, 1055, 855, 1079, -1000, 1227,
	1227, 786, 13440, -1000, -1000, 701, -1000, 13982, 1079, -1000,
	-1000, 1079, 1297, 1296, 1756, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 939, 1079, 13440, 13440,
	1295, 1318, 457, -1000, 1227, 1079, 1079, 1227, 1227, 8531,
	1079, -1000, 33497, -1000, -294, -1000, -80, 500, 1318, -1000,
	23198, 1079, 1273, -1000, -1000, -1000, -1000, -1000, 20488, 1294,
	1614, -1000, -1000, 1318, 1263, -1000, -1000, 324, 4, 19946,
	-1000, -1000, 720, 720, 13982, -1000, -1000, -1000, -1000, -1000,
	-1000, 451, 1745, 293, 1318, -1000, 1313, 1561, -1000, -1000,
	-1000, 1668, 17236, 33497, 1276, 1265, -1000, 446, -1000, 1292,
	-73, -50, -1000, -1000, -1000, -1000, 720, -1000, 1013, 255,
	2011, -1000, 331, -1000, -1000, -1000, -1000, 1607, 9, -1000,
	-1000, -1000, 324, 324, -1000, -1000, -1000, -1000, -1000, -1000,
	1019, 1019, -1000, -1000, -1000, -1000, -1000, 894, -1000, -1000,
	-1000, 884, -1000, -1000, 1073, 1468, 167, -1000, -1000, 593,
	1006, 1610, 33497, -1000, -1000, 1158, 191, 33497, 639, 1454,
	-1000, 1437, 1437, 1437, 33497, -1000, -1000, -1000, -1000, -373,
	51, 260, -1000, -1000, -1000, 278, 33497, 1254, -1000, 171,
	-1000, 1150, 1549, 33497, -1000, 1251, 1371, 1026, 1026, -1000,
	-1000, -1000, 33497, 1318, -1000, -1000, -1000, -1000, 399, 1639,
	1637, 173, 171, 514, 1026, -1000, -1000, -1000, -1000, -1000,
	-366, 1239, 380, 183, 205, 33497, 33497, 33497, 33497, 33497,
	434, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 212,
	373, -1000, 33497, 33497, 447, -1000, -1000, -1000, 683, -1000,
	-1000, 683, -1000, -1000, -1000, -1000, -1000, 1627, 33497, -57,
	-332, -1000, -329, -1000, -1000, -1000, -1000, 1469, 370, 1883,
	14524, 14524, 13440, -134, 441, 441, 728, -1000, -1000, -1000,
	13982, 13982, 1329, 628, -1000, 13982, 673, -1000, -1000, 13982,
	13982, 13982, 1079, 195, -1000, 1227, 1227, 13440, 8531, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 500,
	-1000, 481, 481, 481, 33497, -1000, -1000, 1690, -1000, 1533,
	1524, 1754, 1745, -1000, 22656, 1614, -1000, -1000, 33497, -289,
	-1000, 1567, 1539, -1000, -1000, -1000, -1000, 6881, 1687, 13982,
	1449, 33497, 1318, -1000, 16693, 33497, 33497, 22656, 22656, 22656,
	22656, 22656, -1000, 1492, 1491, -1000, 1481, 1471, 1516, 33497,
	-1000, 1225, 1079, 1706, 17236, 19404, 1241, 22656, -1000, -1000,
	22656, 33497, 6331, -1000, -1000, -68, -86, -1000, -1000, -1000,
	-1000, 2521, -1000, -1000, 727, 1664, 1605, -1000, -1000, -1000,
	-1000, 1218, -1000, 1215, 1291, 1212, 99, -1000, 1422, 1625,
	593, 593, -1000, 879, -1000, 1026, -1000, -1000, 379, -1000,
	1648, 33497, 1447, 1446, 1445, -1000, -381, 877, 1370, 1419,
	13982, 1357, 1719, 1288, 33497, -1000, -1000, 33497, -1000, -1000,
	356, -1000, 167, 33497, -1000, -1000, -1000, 251, 33497, -1000,
	5495, 171, -1000, -1000, -1000, -1000, -1000, -1000, 33497, 194,
	-1000, 1352, 1101, -1000, -1000, 1321, -1000, -1000, -1000, -1000,
	130, 237, -1000, 33497, 444, 1468, 33497, -1000, -1000, -1000,
	684, 684, -1000, -1000, 1624, -1000, 1026, 14524, 14524, -1000,
	510, -1000, 1318, 1079, 1349, 1349, -1000, 1349, 1351, -1000,
	1349, 100, 1349, 98, 1349, -1000, -1000, 1079, 1079, 751,
	813, -127, -1000, 720, 13982, 1069, 1043, 971, -1000, 1348,
	1337, -1000, -1000, 1079, -1000, -1000, 1665, 1665, 1665, 1202,
	33497, -1000, -1000, -1000, -1000, 1745, 1740, 1289, -1000, -1000,
	4, 341, -1000, 1585, 1539, -1000, 1717, 1562, 1716, -1000,
	-1000, -1000, 720, -1000, 1635, 1285, -1000, 576, 1179, -1000,
	-1000, 12898, 1208, 1523, 445, 1202, 1300, 1561, 1430, 1442,
	1531, -1000, -1000, -1000, -1000, 1483, -1000, 1470, -1000, -1000,
	1320, -1000, -1000, 1184, 252, 22656, 1257, 1257, -1000, 435,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 800, 5232, 1765,
	-1000, 995, -1000, 925, -1000, 699, 682, -1000, 33497, 1327,
	-1000, 324, 992, 324, 869, -1000, 868, -1000, -1000, -237,
	-1000, -1000, 1387, 1441, -1000, -1000, 33497, -1000, -1000, 33497,
	33497, 33497, 1326, 1714, -1000, 13982, 1325, 573, 1001, 33497,
	33497, -1000, -1000, 246, 1318, -1000, 1200, 1197, -1000, -192,
	-1000, 13982, -1000, -1000, -1000, 900, 900, -1000, 1320, -1000,
	-1000, -1000, 1146, -1000, -1000, -146, 33497, 33497, 33497, 33497,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 510,
	14524, -1000, -1000, 324, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13982, -1000, 13982, -1000, 1687, 986, 720,
	13982, 13982, -1000, 864, 848, -1000, 1318, 1527, 1318, 1318,
	19404, -1000, 1740, 1738, 1712, 1556, 1558, 1558, 1585, -1000,
	1710, 1709, -1000, 981, 1700, 976, 662, -1000, 33497, 13982,
	1318, -1000, 295, 33497, 1318, 33497, -1000, 1729, -1000, -1000,
	13982, 1324, -1000, 13982, -1000, -1000, -1000, -1000, -1000, 1745,
	1257, -1000, -1000, 525, -1000, 13982, -1000, -1000, -1000, 200,
	-1000, -1000, -1000, -1000, -1000, 1322, 13982, -1000, -1000, -1000,
	1144, 1131, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1320, -1000, -1000, -1000, -1000, 251, -376, 988, 33497, 842,
	-1000, 1195, 1288, 421, -1000, 13982, 300, -1000, 251, -1000,
	-197, -200, 971, -1000, -1000, 1663, -1000, -1000, 8531, -1000,
	-1000, 1319, 1432, -1000, 215, -1000, 971, 971, 1079, -1000,
	971, 971, 1122, 1117, 18862, -1000, 1696, 1692, 22114, 22114,
	500, 1738, -1000, 13982, 13982, 1534, 826, -1000, -1000, -1000,
	-1000, 974, 973, -1000, 964, -1000, 1764, -1000, 720, -1000,
	1318, -1000, 425, 1179, -1000, 1687, 720, 33497, 720, 1729,
	-1000, 971, -1000, 1318, 33497, 967, -1000, -1000, 1659, 1188,
	50, -1000, 1183, -1000, -1000, -1000, -1000, 12356, -1000, -1000,
	-1000, -1000, -1000, -1000, 298, 1286, -1000, 571, 33497, 33497,
	1079, 211, -152, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1181, -1000, -1000, -1000, -1000, -1000, 1181, 1181, -1000, -1000,
	720, 1273, -1000, 810, -1000, -1000, -1000, -1000, -1000, 33497,
	1179, 33497, -1000, 1176, 1687, -1000, 1172, -1000, 298, -1000,
	1317, 1419, -1000, 1079, -145, 8531, 5781, 1155, -1000, -1000,
	1497, -139, -180, 21572, -1000, -1000, -1000, -1000, -1000, 1075,
	-1000, -1000, -1000, 1440, 670, -145, 13982, 1315, -1000, -1000,
	-45, -1000, -1000, -1000, -1000, -1000, 1321, -1000, 1472, -1000,
	-1000, -1000, 1439, -1000, 1750, -1000, -1000, -1000, 785, 959,
	-1000, -1000, -1000, -1000, 790, 33497, 308, -1000, -1000, -146,
	-148, -1000, 1763, 499, 499, -1000, -1000, -383, 1149, 197,
	-1000, -153, -1000, -1000, -1000, 303, 876, -1000, -1000, 839,
	-383, -1000, -190, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2094, 2093, 10, 1, 2089, 38, 75, 159, 23,
	172, 74, 2087, 2086, 2085, 2084, 188, 186, 184, 2083,
	2082, 2081, 2080, 2079, 2078, 2077, 2076, 2075, 2074, 190,
	146, 156, 2073, 2072, 2071, 95, 152, 68, 67, 161,
	2070, 2068, 62, 2067, 2066, 2064, 174, 154, 648, 2063,
	150, 94, 26, 2062, 2061, 2060, 2058, 2057, 2056, 2054,
	2047, 2046, 2045, 2044, 2043, 2042, 2039, 272, 2038, 2037,
	6, 2024, 66, 2023, 2021, 2020, 102, 2019, 2015, 2014,
	2013, 2012, 2011, 122, 2010, 2009, 2008, 2005, 163, 2003,
	2002, 134, 98, 90, 2000, 1999, 82, 162, 1996, 99,
	1995, 1994, 1993, 133, 1992, 353, 1991, 44, 40, 1990,
	46, 60, 37, 35, 1989, 1985, 1983, 43, 57, 1982,
	87, 42, 1981, 76, 96, 1980, 45, 1975, 1974, 104,
	1971, 1970, 1967, 73, 1961, 1957, 3610, 1956, 72, 117,
	83, 52, 1955, 16, 93, 1953, 1951, 1950, 1949, 1948,
	27, 1943, 1942, 1941, 121, 14, 1938, 11, 33, 30,
	114, 1937, 28, 63, 1935, 120, 1934, 1931, 36, 19,
	17, 1922, 13, 115, 138, 15, 78, 116, 1921, 1920,
	32, 55, 1919, 1918, 1917, 1914, 1912, 1911, 50, 1910,
	34, 1909, 176, 1905, 18, 29, 25, 49, 80, 47,
	12, 1904, 160, 1902, 31, 157, 101, 135, 1901, 1900,
	1899, 158, 220, 1898, 1897, 58, 143, 124, 129, 1894,
	226, 1877, 1876, 70, 1388, 1721, 24, 141, 1864, 1862,
	2729, 126, 118, 41, 1861, 91, 1859, 1857, 1856, 164,
	142, 92, 928, 88, 1855, 1854, 1853, 1851, 1850, 1847,
	1846, 1844, 271, 166, 86, 89, 153, 56, 1840, 1839,
	1838, 105, 77, 1837, 140, 139, 109, 145, 1836, 147,
	128, 123, 1834, 85, 1833, 1832, 1831, 1830, 71, 1828,
	1825, 1822, 1821, 131, 132, 100, 64, 1818, 65, 97,
	136, 125, 22, 1817, 21, 1815, 1814, 155, 7, 1802,
	3, 0, 1800, 5, 144, 224, 137, 1799, 1798, 2,
	1795, 4, 1794, 1793, 119, 1792, 1788, 1787, 9, 20,
	8, 1785, 1784, 1782, 2880, 2429, 111, 1778, 165,
}

//line sql.y:6155
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 322, 323, 323, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 301, 301, 301, 304, 304,
	27, 62, 29, 29, 28, 28, 31, 31, 30, 6,
	6, 6, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 9, 9, 9, 9, 11,
	11, 11, 11, 11, 14, 15, 10, 10, 16, 16,
	74, 74, 17, 18, 18, 18, 18, 326, 326, 131,
	131, 129, 129, 130, 130, 197, 197, 19, 20, 20,
	207, 207, 206, 206, 206, 208, 208, 208, 208, 242,
	242, 21, 21, 21, 21, 21, 89, 89, 303, 303,
	302, 300, 300, 299, 299, 298, 33, 34, 43, 43,
	43, 43, 44, 45, 305, 305, 274, 49, 49, 48,
	48, 48, 48, 50, 50, 47, 47, 46, 46, 276,
	276, 263, 263, 275, 275, 275, 275, 275, 275, 275,
	262, 262, 100, 100, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 317, 317, 179, 179, 179,
	179, 179, 179, 109, 109, 117, 117, 117, 117, 107,
	107, 108, 106, 106, 106, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 116, 116,
	113, 113, 113, 114, 114, 114, 318, 318, 318, 318,
	245, 245, 245, 245, 248, 248, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 247, 247, 247, 247, 247,
	249, 249, 249, 249, 249, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	251, 251, 251, 251, 251, 251, 251, 251, 261, 261,
	252, 252, 256, 256, 257, 257, 257, 258, 258, 258,
	259, 259, 254, 254, 254, 254, 254, 254, 255, 255,
	255, 264, 288, 288, 287, 287, 285, 285, 285, 285,
	273, 273, 282, 282, 282, 282, 282, 272, 272, 268,
	268, 268, 269, 269, 270, 270, 267, 267, 271, 271,
	284, 284, 283, 265, 265, 266, 266, 290, 319, 319,
	319, 319, 320, 320, 291, 310, 311, 309, 309, 309,
	309, 309, 72, 72, 72, 219, 219, 219, 280, 280,
	279, 279, 279, 281, 281, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 214, 214, 214, 308, 308, 308, 308,
	308, 308, 307, 307, 307, 277, 277, 277, 306, 306,
	51, 51, 163, 163, 40, 40, 40, 40, 40, 40,
	39, 39, 39, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 41, 41, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 76, 76, 77,
	77, 77, 77, 78, 78, 78, 293, 293, 52, 52,
	3, 3, 1, 1, 2, 2, 4, 4, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	260, 260, 260, 292, 292, 294, 296, 296, 296, 296,
	295, 85, 85, 23, 32, 32, 24, 24, 24, 24,
	25, 25, 53, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 312, 312, 213, 213, 221, 221, 212, 212, 235,
	235, 235, 215, 215, 215, 216, 216, 316, 316, 316,
	55, 55, 55, 57, 57, 58, 59, 59, 237, 237,
	238, 238, 60, 61, 73, 73, 73, 73, 73, 73,
	75, 75, 75, 13, 13, 13, 13, 69, 69, 69,
	12, 12, 56, 56, 63, 313, 313, 314, 315, 315,
	315, 315, 64, 66, 26, 26, 26, 26, 26, 26,
	95, 95, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 90, 90, 90, 84, 84, 327,
	67, 68, 68, 88, 88, 88, 81, 81, 81, 87,
	87, 87, 92, 92, 94, 94, 94, 94, 94, 96,
	96, 96, 96, 96, 96, 96, 91, 91, 93, 93,
	93, 93, 228, 228, 228, 227, 227, 120, 120, 122,
	121, 121, 123, 123, 124, 124, 124, 161, 139, 139,
	195, 195, 194, 194, 196, 196, 196, 196, 198, 198,
	125, 125, 125, 125, 126, 126, 127, 127, 128, 128,
	236, 236, 233, 233, 233, 232, 232, 132, 132, 132,
	134, 133, 133, 133, 133, 135, 135, 137, 137, 136,
	136, 138, 143, 143, 142, 142, 140, 140, 140, 140,
	141, 141, 141, 141, 144, 144, 105, 105, 105, 105,
	105, 105, 115, 115, 115, 115, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 210, 210, 145, 145, 153, 153, 153,
	153, 146, 146, 146, 146, 146, 146, 146, 154, 154,
	154, 160, 155, 155, 151, 151, 151, 151, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 328, 328,
	253, 253, 253, 152, 152, 152, 152, 152, 86, 86,
	86, 86, 86, 241, 241, 241, 244, 244, 244, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 166, 166, 82, 82, 164, 164,
	165, 167, 167, 162, 162, 162, 148, 148, 148, 168,
	168, 169, 169, 170, 170, 172, 171, 171, 173, 174,
	174, 174, 175, 175, 176, 176, 176, 42, 42, 42,
	42, 42, 37, 37, 37, 37, 38, 38, 38, 97,
	97, 97, 97, 99, 99, 98, 98, 70, 70, 71,
	71, 71, 103, 103, 104, 104, 104, 101, 101, 102,
	102, 192, 192, 177, 177, 177, 184, 184, 184, 180,
	180, 182, 182, 182, 183, 183, 183, 181, 189, 189,
	191, 191, 190, 190, 186, 186, 187, 187, 188, 188,
	188, 185, 185, 147, 147, 147, 147, 147, 193, 193,
	193, 193, 199, 199, 157, 157, 159, 159, 158, 119,
	200, 200, 204, 201, 201, 205, 205, 205, 205, 205,
	202, 202, 203, 203, 229, 229, 229, 209, 209, 220,
	220, 217, 217, 218, 218, 211, 211, 222, 222, 222,
	65, 156, 156, 289, 289, 286, 225, 225, 226, 226,
	230, 230, 234, 234, 231, 231, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	324, 325, 239, 240, 240, 240,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	5, 10, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 1, 1, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 2, 0, 4, 4, 3,
	2, 1, 3, 3, 3, 5, 7, 7, 6, 5,
	3, 2, 3, 3, 3, 7, 3, 3, 3, 3,
	4, 7, 5, 2, 4, 4, 4, 4, 4, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 4, 2, 4, 5, 4, 4, 4,
	4, 4, 3, 3, 3, 5, 2, 3, 3, 3,
	3, 1, 1, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 5, 5, 6, 4, 4,
	8, 6, 8, 6, 8, 5, 4, 2, 2, 1,
	2, 2, 2, 8, 8, 6, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -322, -5, -9, -14, -15, -16, -17, -18, -19,
	-20, -21, -22, -23, -24, -25, -53, -54, -55, -57,
	-58, -59, -60, -61, -12, -56, -26, -27, -62, -63,
	-64, -65, -66, -7, -6, -11, 7, 8, -74, -28,
	30, -33, -43, 203, -44, -34, 204, -45, 206, 205,
	241, 207, 234, 72, 281, 282, 284, 285, 286, 287,
	-75, 239, 240, 209, 34, 43, 31, 32, 35, 212,
	-8, -29, 6, -324, 9, 407, 236, 235, 26, -10,
	421, 83, -323, 555, -192, -177, 20, 31, 27, -176,
	-172, -88, -177, 18, 16, 5, -67, -327, -67, -67,
	10, 11, -67, -274, -276, 83, 140, 83, -67, -49,
	-48, -47, -46, -50, 29, -40, -41, -297, -39, -36,
	208, 205, 249, 107, 108, 241, 242, 243, 207, 225,
	240, 244, 239, 258, -35, 78, 31, 421, 424, -281,
	204, 210, 211, 408, 110, 109, 73, 206, -278, 333,
	525, -50, 527, 99, 101, 526, 42, 215, 528, 529,
	530, 531, 224, 532, 533, 534, 535, 541, 542, 543,
	544, 111, 5, -67, -234, -230, -301, -224, 86, 87,
	88, 418, 227, 452, 453, 274, 78, 39, 330, 333,
	525, 281, 295, 289, 316, 308, 419, 454, 277, 228,
	262, 522, 306, 116, 527, 280, 455, 242, 338, 339,
	340, 99, 284, 375, 540, 279, 456, 538, 101, 526,
	77, 49, 42, 237, 304, 300, 528, 263, 457, 429,
	256, 110, 107, 547, 34, 298, 48, 28, 537, 109,
	47, 529, 131, 458, 530, 342, 321, 516, 46, 343,
	243, 459, 81, 423, 524, 344, 299, 345, 273, 536,
	209, 460, 508, 346, 347, 517, 461, 322, 326, 462,
	367, 348, 554, 50, 463, 464, 518, 108, 465, 76,
	531, 293, 294, 466, 271, 226, 369, 320, 224, 33,
	349, 420, 275, 56, 250, 370, 44, 324, 551, 43,
	512, 467, 515, 319, 315, 51, 468, 469, 470, 471,
	532, 318, 292, 314, 546, 441, 268, 533, 60, 211,
	328, 327, 329, 257, 366, 311, 472, 473, 474, 231,
	79, 475, 301, 19, 476, 477, 350, 264, 478, 54,
	479, 480, 373, 240, 481, 52, 534, 37, 245, 548,
	535, 482, 483, 484, 485, 486, 352, 487, 351, 323,
	325, 252, 353, 422, 488, 297, 244, 539, 489, 232,
	523, 246, 249, 239, 374, 233, 490, 491, 492, 493,
	494, 278, 495, 496, 285, 541, 41, 497, 498, 499,
	500, 272, 267, 368, 377, 59, 80, 335, 501, 521,
	291, 265, 502, 282, 53, 542, 543, 544, 259, 545,
	7, 552, 553, 355, 111, 269, 270, 45, 312, 251,
	503, 504, 302, 303, 317, 290, 313, 283, 509, 253,
	356, 241, 505, 376, 266, 331, 336, 426, 258, 357,
	520, 425, 310, 307, 260, 506, 358, 216, 254, 255,
	507, 510, 359, 360, 276, 361, 362, 363, 364, 365,
	261, 424, 288, 305, 337, 388, 389, 390, 391, 392,
	393, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 416, 214, -67, 214, -136, -230, 214,
	-202, 339, -221, 341, 354, 349, 359, 347, -213, 350,
	352, 252, -316, 367, 214, 356, 203, 157, 342, 351,
	360, 361, 276, 362, 365, 261, -312, -301, 530, 545,
	116, 309, 346, 344, 368, 512, 364, 363, -230, 283,
	-237, 288, -225, -301, -224, 286, -136, -73, 508, 207,
	-239, -239, -90, 512, 514, -155, -105, 124, -115, -118,
	-110, -111, -149, -150, -151, -152, -116, -162, 146, 147,
	154, 125, -160, -119, 24, 417, 409, 408, 157, 29,
	199, 66, 67, 411, 412, 127, 55, 384, 385, -117,
	380, 386, 381, 414, 415, 102, 416, -225, -230, 219,
	379, 213, 152, 407, -112, -108, -6, -158, 378, 382,
	383, 387, -301, -224, -114, -113, -145, 89, 95, 100,
	96, -321, 103, -324, 90, 91, 92, 93, 94, 104,
	105, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 42, 355, 355, -136, -67, -170, -88, -172,
	-8, -6, -324, 6, -67, -6, -7, -11, -29, -31,
	448, -30, -230, -177, -192, 10, 142, 40, 48, -175,
	-176, -10, -6, -105, 17, 21, 22, -93, 148, -105,
	-230, -68, -93, -211, 218, -67, -67, -201, -242, 283,
	-205, 368, 367, -226, -203, -225, -223, -202, 366, 208,
	427, 123, 23, 25, 126, 157, 17, 127, 35, 210,
	309, 225, 156, 221, 408, 203, 70, 428, 380, 381,
	378, 384, 410, 411, 379, 341, 29, 11, 430, 26,
	235, 22, 36, 150, 205, 130, 238, 24, 236, 102,
	105, 433, 20, 73, 230, 12, 223, 38, 14, 434,
	435, 15, 219, 218, 142, 215, 68, 9, 199, 27,
	139, 64, 436, 118, 437, 438, 439, 440, 66, 140,
	18, 549, 382, 383, 31, 513, 417, 247, 152, 71,
	57, 514, 124, 442, 443, 103, 444, 106, 74, 519,
	120, 16, 69, 40, 445, 248, 446, 220, 550, 447,
	371, 448, 141, 206, 407, 67, 449, 213, 354, 6,
	413, 30, 234, 222, 113, 65, 450, 214, 129, 414,
	415, 217, 104, 5, 117, 32, 10, 72, 75, 385,
	386, 387, 55, 112, 421, 128, 13, 451, 372, 122,
	116, -275, 140, -262, -266, -225, 229, -291, 225, -136,
	-284, -283, -225, -89, -220, 215, 223, 222, 117, -305,
	120, 269, 379, 213, -46, -47, -202, 156, -76, 246,
	248, 84, 84, -266, -265, -264, -306, 248, 229, -290,
	-282, 221, 230, -272, 222, 223, -267, 215, 118, -306,
	-267, 220, 230, 248, 248, 111, 248, 111, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 245, -273, 132,
	-273, 425, 425, -278, -306, -306, -306, 217, 33, 33,
	-222, -267, 217, 23, -273, -273, -202, 156, -273, -273,
	-273, -273, 256, 256, -273, -273, -273, -273, -273, -273,
	-273, -273, -273, -273, -273, -273, -273, -273, -273, 214,
	-305, -97, 365, 276, 78, -48, 258, -32, -136, -220,
	215, 216, -305, -136, 200, -136, -215, 140, 13, -215,
	-212, 355, 353, 340, 345, -215, -215, -215, -215, 259,
	338, -268, 215, 33, 226, 355, 259, 338, 259, 260,
	259, 260, 348, 358, 259, -235, 12, 142, 379, 343,
	347, 252, 214, 253, 216, 357, -301, 515, 260, -235,
	90, -216, 140, 355, 255, -215, -240, -324, -226, 309,
	-240, -240, 30, 87, 217, -225, -69, -225, 90, -13,
	-9, -17, -16, -18, 132, -95, 355, -83, 157, 530,
	516, 517, 518, 515, 352, 523, 521, 519, 259, 520,
	84, 120, 122, 123, -105, 139, -146, 132, 133, 134,
	135, 136, 137, 138, 142, 124, 126, 140, 141, 121,
	143, 144, 145, 146, 147, 148, 149, 151, 150, 152,
	153, 156, 201, 202, -111, -111, -111, -111, -160, -324,
	-324, -324, -111, -210, -324, -111, -324, -324, -324, -324,
	-166, -105, -324, -328, -324, -328, -328, -253, -324, -253,
	-324, -324, -324, -324, -324, 200, -324, -324, -324, -324,
	-324, -253, -253, -253, -253, 100, 95, 89, -162, 96,
	90, -225, -230, -6, -7, -155, -239, -313, -314, -139,
	-136, -324, 276, -175, -10, -6, -170, -176, -172, -6,
	-67, -81, -94, 61, 62, -96, 22, 36, 65, 63,
	21, -325, 85, -325, -192, -325, 84, -31, -195, 83,
	59, 41, 90, 90, 84, 19, -171, -173, -105, 12,
	-228, -227, 23, -225, 90, 200, 98, 12, -137, 27,
	-136, -211, -211, 84, 283, -205, -242, -207, -206, 369,
	371, 132, -229, -225, 90, 29, 85, 84, -136, -245,
	-248, -250, -249, -251, -246, -247, 306, 307, 157, 310,
	312, 313, 314, 315, 316, 317, 318, 319, 320, 321,
	30, 237, 302, 303, 304, 305, 322, 323, 324, 325,
	326, 327, 328, 329, 289, 308, 419, 290, 291, 292,
	293, 294, 295, 297, 298, 299, 300, 301, -304, -301,
	83, 85, 84, -252, 83, -97, 214, -301, 215, 215,
	215, -67, 407, -273, -273, 245, 17, -39, -36, -297,
	16, -35, -36, 208, 107, 108, 205, 83, -262, 83,
	-271, -304, -301, 83, 118, 220, 117, -270, -267, -270,
	-271, -301, -162, -301, 118, 118, -198, -225, -198, -198,
	21, -198, 21, -198, 21, 92, -225, -198, 21, -198,
	21, -198, 21, -198, 21, -198, 21, 29, 76, 77,
	29, 79, 80, 81, -162, -162, -262, -202, -136, -301,
	92, 92, -273, -273, 92, 90, 90, 90, -273, -273,
	92, 90, -232, -230, 90, -307, 231, 273, 275, 92,
	92, 92, 92, 29, 90, -308, 29, 537, 536, 538,
	539, 540, 92, 29, 92, 29, 92, -225, 83, -136,
	-103, 263, 203, 205, 208, 74, 90, 277, 132, 42,
	84, 217, 214, -301, -217, 219, -217, -231, -230, -223,
	90, -105, -269, 12, 142, -235, -235, -215, -136, -269,
	-235, -215, -136, -215, -215, -215, -215, -235, -235, -235,
	-215, -230, -230, -136, -136, -136, -136, -136, -136, -136,
	-240, -240, -240, -216, -215, 515, 90, 74, -238, 286,
	320, 509, 510, 511, 84, 421, -129, -136, 515, 515,
	515, 515, 515, 515, -105, -105, -105, -105, -153, 103,
	124, 104, 105, -118, -154, -158, -160, 97, 142, 126,
	140, 141, -110, -111, -110, -110, -110, -110, -110, -110,
	-110, -110, -110, -110, -110, -110, -110, -241, -301, 90,
	157, 90, 90, -91, -93, -105, -105, -301, -225, -91,
	-91, -105, -87, 22, 36, -164, -165, 128, -162, -325,
	-325, 92, -225, -225, -80, -79, 389, 390, 391, 392,
	394, 395, 396, 399, 400, 404, 405, 388, 406, 393,
	398, 401, 402, 403, 397, 305, -105, -92, 22, 36,
	-91, -226, -231, -223, -91, -92, -92, -91, -91, 200,
	-192, -325, 84, -315, 371, 372, 513, -233, 248, -232,
	23, -156, -155, 90, -175, -175, 61, 62, 57, -91,
	-96, -325, -30, 23, -194, -225, 60, 90, -254, -202,
	330, 331, -105, -105, 84, -174, 25, 26, -136, -227,
	148, -231, -136, -197, 248, -136, -121, -123, -124, -125,
	-139, -161, -324, 12, -129, -130, -138, -230, -205, -207,
	84, 370, 372, 373, 74, 106, -105, -255, 156, -280,
	-279, -278, -262, -264, -265, -266, 85, -255, -258, 336,
	335, -252, -252, -252, -252, -252, -254, -254, -254, -254,
	83, 83, -252, -252, -252, -252, -256, 83, -256, -256,
	-257, 83, -257, -291, -105, -288, -287, -285, -286, 224,
	99, 421, 75, -283, -174, 92, -103, -218, 219, -289,
	-286, -301, -301, -301, -218, -301, 90, -301, 90, -77,
	-52, -1, 549, 550, 551, 84, 17, -263, -262, -51,
	273, -294, -295, 248, -290, -284, -271, 118, -270, -271,
	-271, -301, 84, 27, 111, 111, 111, 111, 421, 205,
	30, -262, -51, -241, 217, -241, -241, 90, 90, -214,
	545, -129, -99, 265, 132, 254, 254, 214, 214, 267,
	-136, 278, 280, 279, 277, 21, 266, 268, 270, 256,
	-136, -136, -217, 74, -131, -136, 24, -230, -136, -215,
	-215, -136, -215, -215, -136, -225, -83, 371, 84, 421,
	20, -84, 20, 103, 104, 105, -154, -110, -111, -110,
	123, 238, 84, -325, 23, 84, 75, -325, -325, -325,
	84, 12, -91, -167, -165, 130, -105, -325, -325, 84,
	84, 12, -244, 23, -325, -91, -91, -324, 200, -325,
	-325, -325, -325, -325, -226, -314, 512, 372, -143, -142,
	-140, 72, 218, 73, -324, -232, -325, -148, -225, 92,
	96, -177, -120, -122, 12, -96, -160, 85, 84, -254,
	-181, -186, -212, -225, 90, 157, -173, 200, -144, 13,
	-147, 30, 55, -9, -324, -324, 30, 84, -132, -134,
	-133, -135, 64, 68, 70, 65, 66, 67, 71, -236,
	23, -121, -7, -6, -324, -136, -129, -326, 12, 75,
	-326, 84, 200, -206, -208, 374, 371, 377, -301, 90,
	-76, 84, -278, -266, -178, -100, 38, -259, 337, -254,
	-254, -261, 90, -261, 92, 92, 85, -42, -37, -38,
	31, 78, -285, -273, 90, 37, -225, 85, -99, -136,
	124, 74, -289, -289, -289, -230, -2, 548, 554, 118,
	83, 340, 16, -194, 84, 85, -163, 274, 85, -296,
	55, -225, 85, 83, -271, -271, -225, -324, 214, 29,
	29, -51, -163, -255, -301, 547, 546, 85, 216, 272,
	-104, 384, -101, 90, 86, -136, -136, -136, -136, -136,
	208, 205, 257, 217, -129, -136, 84, -72, 233, 228,
	-235, -235, 31, -136, 371, 524, 522, 123, 238, -118,
	-111, -93, 418, -243, 157, 306, 237, 304, 300, 320,
	311, 335, 302, 336, 299, 298, 297, -243, -241, -105,
	-105, -170, 131, -105, 129, -105, -105, -105, -325, 157,
	306, -325, -325, -92, -226, -140, -267, -267, -267, -198,
	-209, 20, 12, 55, 55, -120, -144, -121, -96, -225,
	-184, 508, -189, 44, -187, -188, 45, -185, 46, 54,
	148, -175, -105, -199, 74, -200, -204, -162, -157, -159,
	-158, -324, -193, -325, -225, -198, -200, -123, -124, -124,
	-123, -124, 64, 64, 64, 69, 64, 69, 64, -133,
	-230, -325, -325, -7, -233, 75, -121, -121, -138, -230,
	148, 371, 375, 376, -278, -320, 103, 124, 29, 74,
	333, 99, -318, 156, -319, 220, 117, 118, 232, 23,
	39, 85, 84, 85, 84, 85, 84, -219, 458, 124,
	-38, -37, -273, -273, 92, -301, 216, 24, -136, 74,
	74, 74, -78, 552, 92, 83, -3, 78, -105, 83,
	17, -262, -162, 250, 142, -288, -194, -292, -294, -136,
	-107, -324, -106, -108, -112, 146, 147, -163, -136, -98,
	263, 271, 83, -102, 87, -303, 75, 254, 333, 254,
	-136, -72, -42, -136, -215, -215, 31, -301, -118, -111,
	-324, -325, -252, -252, -252, -257, -252, 294, -252, 294,
	-252, -325, -325, 84, -325, 20, -325, -82, 413, -105,
	84, 84, -325, 83, 83, -325, -141, 20, -141, -141,
	-325, -136, -144, -168, 14, -181, 49, 312, -191, -190,
	53, 45, -188, 17, 47, 17, 28, -199, 84, 132,
	84, -325, -325, 84, 55, 200, -325, -144, -127, -126,
	74, 75, -128, 74, -126, 64, 64, -195, -325, -197,
	-121, -144, -144, 200, 103, -324, -109, -117, -107, 10,
	90, 90, -301, 118, 118, -136, 83, -254, 90, -254,
	92, 92, 458, 29, 79, 80, 81, 29, 76, 77,
	-136, -136, -136, -136, -293, 83, 17, -105, 83, 132,
	85, -194, -194, 251, -158, -324, 85, -325, 84, -260,
	421, 424, -105, -113, -113, -195, 85, -300, 421, -302,
	-225, -225, -225, -225, -110, -254, -105, -105, -175, 90,
	-105, -105, 92, 92, -324, 64, 16, 14, -324, -324,
	-233, -168, -169, 15, 17, -182, 51, -180, 50, -180,
	-190, 17, 17, 90, 17, 90, 118, -204, -105, -159,
	55, -9, -225, -157, -225, -170, -105, 83, -105, -144,
	-144, -105, -150, 416, 83, -105, 85, 85, -195, -292,
	-52, 85, -194, 92, 85, -158, -85, -324, 247, -319,
	-294, 425, 425, -325, 23, -299, -298, -226, 83, 75,
	-86, 142, 421, -325, -325, -325, -325, -325, 85, 85,
	-196, -325, -225, 220, 17, 17, -196, -196, -143, -169,
	-105, -155, -183, 52, 74, 106, 90, 90, 90, 10,
	-157, 200, -175, -194, -170, -325, -194, 85, 23, 85,
	554, 118, 85, 247, -9, 84, 132, -194, -136, -325,
	419, 71, 422, 84, -325, -325, -325, 74, 106, -200,
	-225, 85, -175, 85, -179, -9, 83, -3, -325, -70,
	421, -298, -277, -226, 90, 92, 85, 60, 420, 423,
	-225, 220, -310, -311, 74, -320, -317, 103, 124, 99,
	-318, 112, 113, -70, -105, 83, -71, 262, 512, -303,
	60, -311, 74, 11, 10, 103, 90, 85, -194, 225,
	-300, 421, -309, 233, 228, 231, 30, -309, -4, 553,
	85, 264, 422, 227, 29, 103, 92, -4, 423,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 709, 709, 709, 0,
	709, 0, 0, 709, -2, -2, 709, 1132, 0, 709,
	0, 0, -2, 641, 643, 0, 645, -2, 0, 0,
	654, 1582, 1582, 704, 0, 0, 0, 0, 0, 709,
	993, 45, 709, 0, 80, 81, 660, 661, 662, 60,
	0, 1580, 1, 3, 66, 70, 0, 0, 0, 53,
	1002, 0, 73, 0, 0, 713, 0, 711, 0, 1115,
	709, 709, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 507, 447, 490, 445, 476,
	-2, 438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 340, 340, 0, 0, -2,
	438, 438, 438, 0, 0, 0, 473, 1117, 393, 340,
	340, 0, 340, 340, 340, 340, 0, 0, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 1019, 143, 1133, 1130, 1131, 35, 36,
	37, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 0, 1109, 0, 571, 799, 0,
	632, 632, 0, 632, 632, 632, 632, 0, 0, 0,
	583, 0, 0, 0, 0, 629, 0, 0, 602, 604,
	0, 629, 0, 635, 0, 616, 632, 1583, 1583, 1583,
	1100, 0, 626, 624, 638, 639, 621, 622, 640, 644,
	0, 649, 652, 1126, 1127, 0, 667, 44, 1358, 659,
	672, 673, 0, 705, 706, 40, 892, 0, 821, 825,
	836, 849, 850, 851, 852, 853, 855, 856, 0, 0,
	0, 0, 861, 862, 0, 0, 0, 0, 0, 873,
	0, 0, 0, 0, 0, 974, 0, 938, 938, 909,
	938, 940, 940, 0, 0, 0, 1579, 983, 0, 0,
	0, 0, 0, 0, 248, 249, 891, 1089, 940, 940,
	940, 940, -2, -2, 195, 196, 197, 198, 199, 200,
	201, 0, 191, 0, 253, 254, 250, 251, 252, 875,
	876, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 1582, 0, 682, 0, 0, 1002, 0, 994,
	993, 58, 0, 709, -2, 0, 0, 0, 0, 42,
	0, 47, 760, 72, 71, 1041, 0, 0, 0, 54,
	1003, 62, 64, 1004, 0, 714, 715, 0, 738, 742,
	0, 710, 0, 0, 1116, 1115, 1115, 97, 0, 1523,
	1093, -2, -2, 0, 0, 1128, 1129, 1102, -2, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	-2, 0, 0, 153, 154, 0, 38, 366, 0, 149,
	0, 360, 310, 1019, 0, 0, 0, 0, 0, 709,
	0, 1110, 134, 135, 141, 142, 340, 340, 487, 0,
	0, 143, 143, 454, 455, 456, 0, 0, -2, 364,
	0, 439, 0, 0, 354, 354, 358, 356, 357, 0,
	0, 0, 0, 0, 0, 467, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 341,
	0, 485, 486, 394, 0, 0, 0, 0, 465, 466,
	0, 0, 1118, 1119, 0, 0, 340, 340, 0, 0,
	0, 0, 340, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 1032, 0, 0, 0, -2, 0, 563, 0, 0,
	0, 1111, 1111, 570, 0, 572, 573, 0, 0, 574,
	0, 629, 629, 627, 628, 576, 577, 578, 579, 632,
	0, 0, 349, 350, 351, 629, 632, 0, 632, 632,
	632, 632, 629, 629, 629, 632, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 1583, 1583, 635, 632,
	0, 612, 0, 613, 614, 617, 618, 1584, 1585, 1147,
	619, 620, 1101, 642, 650, 653, 670, 668, 669, 671,
	663, 664, 665, 666, 0, 684, 685, 690, 0, 0,
	0, 0, 696, 697, 698, 0, 0, 701, 702, 703,
	0, 0, 0, 0, 819, 0, 0, 881, 882, 883,
	884, 885, 886, 887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 857, 858, 859, 860, 863, 0,
	0, 0, 868, 869, 0, 0, 0, 0, 0, 719,
	0, 975, 0, 907, 0, 908, 910, 911, 0, 912,
	0, 0, 0, 0, 722, 0, 0, 722, 722, 0,
	0, 185, 186, 187, 188, 202, 203, 204, 205, 206,
	255, 983, 0, 891, 0, 0, 41, 674, 675, 0,
	782, 1121, 0, 52, 61, 63, 1002, 56, 1002, 0,
	724, 0, 0, -2, -2, 725, 731, 732, 733, 734,
	735, 49, 1581, 50, 0, 69, 0, 43, 0, 0,
	0, 0, 322, 1044, 0, 0, 995, 996, 999, 0,
	739, 743, 0, 745, 746, 0, 712, 0, 95, 0,
	798, 0, 0, 0, 1523, 1099, 0, 99, 100, 0,
	0, 0, 328, 1104, 1105, 1106, -2, 347, 0, 328,
	317, 261, 262, 263, 310, 265, 310, 310, 310, 310,
	322, 322, 322, 322, 293, 294, 295, 296, 297, 0,
	0, 280, 310, 310, 310, 310, 300, 301, 302, 303,
	304, 305, 306, 307, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 312, 312, 312, 314, 314, 0, 39,
	0, 332, 0, 999, 0, 1032, 1113, 1123, 0, 0,
	0, 1113, 117, 0, 0, 488, 518, 448, 477, 489,
	0, 451, 452, -2, 0, 0, 438, 0, 440, 0,
	348, 0, -2, 0, 358, 0, 354, 358, 355, 358,
	346, 359, 469, 470, 471, 0, 529, 768, 0, 0,
	0, 0, 0, 535, 536, 537, 0, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 478, 479, 480,
	481, 482, 483, 484, 0, 0, 440, 0, 474, 0,
	395, 396, 0, 0, 399, 400, 401, 402, 0, 0,
	405, 406, 407, 785, 786, 408, 432, 433, 434, 409,
	410, 411, 412, 413, 414, 415, 426, 427, 428, 429,
	430, 431, 416, 417, 418, 419, 420, 423, 0, 127,
	1023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1111, 0, 0, 0, 0, 800, 1134, 1135,
	633, 634, 0, 352, 353, 632, 632, 580, 603, 0,
	632, 584, 605, 585, 587, 586, 588, 607, 608, 632,
	591, 630, 631, 592, 593, 594, 595, 596, 597, 598,
	599, 600, 601, 609, 610, 611, 636, 0, 0, 651,
	655, 656, 657, 658, 0, 0, 687, 91, 692, 693,
	694, 695, 707, 700, 893, 816, 817, 818, 820, 822,
	0, 877, 879, 824, 826, 888, 889, 890, 0, 0,
	0, 0, 0, 830, 834, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 854, 953, 954,
	955, 871, 872, 0, 736, 0, 0, 0, 870, 0,
	0, 0, 0, 720, 721, 981, 978, 0, 0, 939,
	941, 0, 0, 0, 0, 917, 918, 919, 920, 921,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	932, 933, 934, 935, 936, 937, 956, 0, 0, 0,
	723, 984, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 677, 678, 680, 0, 802, 0, 783,
	0, 0, 1122, 683, 55, 57, 729, 730, 0, 747,
	726, 51, 46, 0, 0, 762, 1042, 322, 1064, 0,
	326, 327, 1005, 1006, 0, 998, 1000, 1001, 74, 744,
	740, 0, 814, 0, 0, 797, 0, 750, 752, 753,
	754, 780, 0, 0, 0, 0, 93, 799, 1094, 98,
	0, 0, 103, 104, 1095, 1096, 1097, 1098, 0, 507,
	-2, 390, 155, 157, 158, 159, 150, -2, 320, 318,
	319, 264, 322, 322, 287, 288, 289, 290, 291, 292,
	0, 0, 281, 282, 283, 284, 275, 0, 276, 277,
	278, 0, 279, 365, 0, 1007, 333, 334, 336, 340,
	0, 0, 0, 361, 362, 0, 1023, 0, 0, 0,
	1124, 1123, 1123, 1123, 0, 145, 146, 147, 148, 524,
	0, 0, 519, 522, 523, 143, 0, 0, 151, 442,
	441, 0, 556, 0, 363, 0, 0, 358, 358, 343,
	344, 472, 0, 0, 531, 532, 533, 534, 0, 0,
	0, 440, 442, 328, 0, 397, 398, 403, 404, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 503, 504, 505, 506, 1020, 1021, 1022, 0,
	0, 564, 0, 0, 382, 89, 1112, 569, 629, 590,
	606, 629, 582, 589, 615, 647, 691, 0, 0, 0,
	0, 699, 0, 823, 878, 880, 827, 0, 831, 835,
	0, 0, 0, 0, 0, 0, 0, 874, 898, 899,
	0, 0, 993, 0, 979, 0, 0, 906, 942, 0,
	0, 0, 0, 0, 894, 0, 0, 722, 0, 943,
	944, 945, 946, 947, 984, 676, 679, 681, 758, 803,
	804, 0, 0, 0, 0, 784, 1120, 0, 986, 0,
	0, 747, 814, 748, 0, 727, 48, 761, 0, 1046,
	1045, 1058, 1071, 323, 324, 325, 997, 0, 1002, 0,
	1082, 0, 0, 1074, 0, 0, 0, 0, 0, 0,
	0, 0, 787, 0, 0, 790, 0, 0, 0, 0,
	781, 0, 0, 0, 0, -2, 0, 0, 87, 88,
	0, 0, 0, 101, 102, 0, 0, 108, 329, 330,
	136, 143, 392, 156, 372, 0, 0, 260, 321, 285,
	286, 0, 308, 0, 0, 0, 385, 113, 1011, 1010,
	340, 340, 335, 0, 338, 0, 1125, 311, 0, 126,
	0, 0, 0, 0, 0, 132, 513, 0, 0, 520,
	0, 0, 0, 446, 0, 457, 458, 0, 528, 555,
	0, 560, 332, 0, 342, 345, 769, 0, 0, 459,
	0, 442, 463, 464, 475, 424, 425, 422, 0, 0,
	1033, 1034, 1039, 1037, 1038, 118, 495, 497, 496, 500,
	0, 0, 493, 0, 382, 1007, 0, 568, 383, 384,
	632, 632, 686, 92, 0, 689, 0, 0, 0, 828,
	832, 737, 0, 0, 310, 310, 961, 310, 314, 964,
	310, 966, 310, 969, 310, 972, 973, 0, 0, 0,
	0, 976, 905, 982, 0, 0, 0, 0, 916, 0,
	0, 895, 896, 0, 985, 805, 810, 810, 810, 0,
	0, 1107, 1108, 987, 988, 814, 989, 749, 728, 763,
	1064, 0, 1057, 0, -2, 1066, 0, 0, 0, 1072,
	741, 75, 815, 78, 0, 1082, 1090, 0, 1073, 1084,
	1086, 0, 0, 0, 1078, 0, 814, 751, 776, 778,
	0, 773, 788, 789, 791, 0, 793, 0, 795, 796,
	760, 756, 757, 0, 95, 0, 814, 814, 94, 0,
	801, 105, 106, 107, 391, 160, 165, 0, 0, 0,
	170, 0, 172, 0, 373, 0, 257, 259, 0, 0,
	163, 322, 0, 322, 0, 315, 0, 374, 386, 0,
	1008, 1009, 0, 0, 337, 339, 0, 1114, 128, 0,
	0, 0, 516, 0, 525, 0, 0, 0, 0, 0,
	0, 152, 443, 0, 0, 331, 0, 0, 553, 550,
	460, 0, 189, 190, 192, 0, 0, 462, 760, 1024,
	1025, 1026, 0, 1036, 1040, 121, 0, 0, 0, 0,
	565, 566, 567, 90, 575, 581, 688, 708, 829, 833,
	0, 865, 959, 322, 962, 963, 965, 967, 968, 970,
	971, 866, 867, 0, 901, 0, 903, 1002, 0, 980,
	0, 0, 915, 0, 0, 897, 0, 0, 0, 0,
	782, 59, 989, 991, 0, 1051, 1049, 1049, 1059, 1060,
	0, 0, 1067, 0, 0, 0, 0, 79, 0, 0,
	0, 1087, 0, 0, 0, 0, 96, 993, 770, 777,
	0, 0, 771, 0, 772, 792, 794, 755, -2, 814,
	814, 85, 86, 0, 166, 0, 168, 183, 184, 0,
	171, 173, 174, 256, 258, 0, 0, 298, 309, 299,
	0, 0, 387, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	760, 129, 130, 131, 508, 0, 518, 0, 0, 0,
	511, 0, 449, 0, 559, 0, 0, 530, 0, 538,
	0, 0, 0, 193, 194, 0, 1035, 494, 0, 119,
	120, 0, 0, 499, 948, 960, 0, 0, 0, 977,
	0, 0, 0, 0, 0, 811, 0, 0, 0, 0,
	802, 991, 77, 0, 0, 1054, 0, 1047, 1050, 1048,
	1061, 0, 0, 1068, 0, 1070, 0, 1091, 1092, 1085,
	0, 1077, 1080, 1076, 1079, 1002, 774, 0, 779, 993,
	84, 0, 169, 0, 0, 0, 313, 316, 0, 0,
	0, 509, 0, 521, 512, 557, 558, 0, 561, 367,
	554, 551, 552, 461, 0, 122, 123, 0, 0, 0,
	0, 0, 0, 900, 902, 904, 913, 914, 957, 958,
	0, 807, 764, 765, 812, 813, 0, 0, 759, 76,
	992, 990, 1043, 0, 1052, 1053, 1062, 1063, 1069, 0,
	1075, 0, 82, 0, 1002, 167, 0, 177, 0, 517,
	0, 520, 510, 0, 1027, 0, 0, 0, 501, 864,
	0, 0, 0, 0, 806, 808, 809, 1055, 1056, 1083,
	1081, 775, 83, 368, 372, 1027, 0, 0, 562, 491,
	1029, 124, 125, 435, 436, 437, 118, 949, 0, 952,
	766, 767, 369, 370, 0, 161, 178, 179, 0, 0,
	182, 175, 176, 114, 0, 0, 0, 1030, 1031, 121,
	950, 371, 0, 0, 0, 180, 181, 526, 0, 0,
	498, 0, 375, 377, 378, 0, 0, 376, 514, 0,
	526, 1028, 0, 379, 380, 381, 527, 515, 951,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 555,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:473
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:478
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:479
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:483
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:516
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:522
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:526
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:530
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:535
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:539
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:545
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:551
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:557
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:561
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:570
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:576
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:580
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:586
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:592
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:600
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:623
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:634
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:653
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:660
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:732
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:739
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:745
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:765
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:777
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:789
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:793
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:799
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:817
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:823
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:827
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:831
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:837
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:847
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:860
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:882
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:886
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:892
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:896
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:900
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:906
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:910
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:914
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:918
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:924
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:928
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:947
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:976
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:986
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:991
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:996
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1002
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1019
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1026
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1033
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1038
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1043
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1048
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1055
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1062
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1073
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1084
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1090
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1094
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1108
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1112
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1118
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1122
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1128
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1132
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1139
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1143
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1149
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1159
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1164
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1169
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1173
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1186
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1197
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1206
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1228
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1232
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1238
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1244
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1249
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1259
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1264
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1269
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1274
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1278
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1285
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1289
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1294
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1303
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1309
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1315
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1320
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1327
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1334
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1338
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1342
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1346
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1357
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1364
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1368
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1374
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1386
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1390
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1394
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1398
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = Armscii8Str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = ASCIIStr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.str = Big5Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.str = UBinaryStr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.str = Cp1250Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.str = Cp1251Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = Cp1256Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = Cp1257Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = Cp850Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = Cp852Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = Cp866Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = Cp932Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = Dec8Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = EucjpmsStr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = EuckrStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = Gb18030Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = Gb2312Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = GbkStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = Geostd8Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = GreekStr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = HebrewStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Hp8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Keybcs2Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Koi8rStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Koi8uStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Latin1Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Latin2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Latin5Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Latin7Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = MacceStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = MacromanStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = SjisStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = Swe7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = Tis620Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Ucs2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = UjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = Utf16Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Utf16leStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Utf32Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = Utf8Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Utf8mb4Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1604
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1625
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1629
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1633
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1637
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1868
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1873
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1885
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1889
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1903
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1907
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1911
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1916
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1920
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1946
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1952
		{
			yyVAL.str = ""
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1967
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1972
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1976
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1982
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1992
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1996
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2001
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2005
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2021
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2025
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2029
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2033
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2037
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = yyDollar[2].str
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2076
		{
			yyVAL.str = "key"
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.str = yyDollar[1].str
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2105
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2109
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2115
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2121
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2125
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2131
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2135
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2141
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2147
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2151
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2155
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2159
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2164
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2168
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2174
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2180
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2186
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2192
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2196
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2200
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2204
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2208
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2213
		{
			yyVAL.str = ""
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2230
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2243
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2249
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2257
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2263
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2273
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2277
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2281
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2285
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2289
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2293
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2297
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2301
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2305
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2309
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2313
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2317
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2321
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2325
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2329
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2333
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2337
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2386
		{
			yyVAL.str = ""
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2390
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2426
		{
			yyVAL.str = ""
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2445
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2450
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2454
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2458
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2462
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 449:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2470
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2476
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2490
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2494
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2498
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2502
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2506
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2510
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2514
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2518
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2522
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2526
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2530
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2534
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2538
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2542
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2546
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2550
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2554
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2584
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2588
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2632
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2639
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2646
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2653
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2670
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2677
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2689
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2720
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2730
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2752
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2759
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2766
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2784
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2793
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2801
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2810
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2817
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2829
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2838
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2849
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2853
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2858
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2862
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2867
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2871
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2877
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2881
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2886
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2890
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2895
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2899
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2905
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2909
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2913
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2917
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2921
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2925
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2929
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2933
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2937
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2941
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2945
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2949
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2953
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2957
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2961
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2965
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2969
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2973
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2977
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2981
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2985
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2989
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2998
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3002
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3009
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3013
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3028
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3035
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3042
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3051
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3073
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3077
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3141
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3314
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3338
		{
			yyVAL.str = ""
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = "extended "
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3348
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3358
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3368
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3376
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3382
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3386
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3390
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3396
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3400
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3406
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3428
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3450
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3459
		{
			yyVAL.empty = struct{}{}
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3461
		{
			yyVAL.empty = struct{}{}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3464
		{
			yyVAL.empty = struct{}{}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3466
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3477
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3482
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3486
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3490
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3494
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3498
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3502
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = yyDollar[1].str
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = yyDollar[1].str
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3522
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3553
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3573
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3579
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3583
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3589
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3595
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3599
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3603
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3607
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3613
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3619
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3625
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3681
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3710
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3714
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3732
		{
			setAllowComments(yylex, true)
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3742
		{
			yyVAL.strs = nil
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3746
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3752
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3756
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3760
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = SQLCacheStr
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3778
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3782
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3786
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3795
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3800
		{
			yyVAL.strs = nil
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3816
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = SQLCacheStr
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = DistinctStr
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = DistinctStr
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = StraightJoinHint
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3852
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3862
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3866
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3870
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3874
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3879
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3894
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3899
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3903
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3909
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3915
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3929
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3933
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3937
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3943
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3949
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3953
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3962
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3968
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3978
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3982
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3986
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3996
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4000
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4013
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4017
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4021
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4025
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4033
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4037
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4043
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4045
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.empty = struct{}{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4053
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4074
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4078
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4082
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4088
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4094
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4098
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4102
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4106
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4112
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4116
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4126
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4140
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4155
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4161
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4165
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4171
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4175
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4179
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4183
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4188
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4192
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4196
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4200
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4210
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4217
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4221
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4225
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4229
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4233
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4237
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4244
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4248
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4252
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4256
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4290
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4308
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4312
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4316
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4320
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4324
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4344
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4352
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4356
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4370
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4378
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4382
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4386
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4390
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4394
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4398
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4402
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4406
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4410
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4414
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4418
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4434
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4446
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4475
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4479
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4486
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4490
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4494
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4498
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4504
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4508
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4512
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4516
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4520
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4524
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4528
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4534
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4538
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4542
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4549
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4555
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4559
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4577
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4581
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4638
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4642
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4681
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4685
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4689
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4693
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4697
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4701
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4705
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4709
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4713
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4717
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4721
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4727
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4731
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4735
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4739
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4743
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4747
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4751
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4755
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4759
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4769
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4773
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4777
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4795
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4803
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4809
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4813
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4817
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4821
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4825
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4849
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4853
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4859
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4863
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4867
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4871
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4875
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4881
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4885
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4889
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4893
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4897
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4901
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4905
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4909
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4913
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4917
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4927
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4932
		{
			yyVAL.str = string("")
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4936
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4942
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4946
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4952
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4967
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4971
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4975
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5000
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5004
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5022
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5028
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5034
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5038
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5044
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5049
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5053
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5057
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5066
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5072
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5076
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5080
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5089
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5093
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5097
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5101
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5108
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5112
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5116
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5120
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5126
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5130
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5134
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5139
		{
			yyVAL.str = ""
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5143
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5147
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5151
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5156
		{
			yyVAL.str = ""
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5160
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5175
		{
			yyVAL.str = ""
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = "cascaded"
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5201
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5207
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5213
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5219
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5228
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5237
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5241
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5247
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5251
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5257
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5261
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5265
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5270
		{
			yyVAL.str = ""
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5274
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5278
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5283
		{
			yyVAL.str = ""
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5287
		{
			yyVAL.str = " header"
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5292
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5296
		{
			yyVAL.str = " manifest on"
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5300
		{
			yyVAL.str = " manifest off"
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = ""
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = " overwrite on"
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5313
		{
			yyVAL.str = " overwrite off"
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5324
		{
			yyVAL.str = ""
		}
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5328
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5344
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5348
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = ""
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5357
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5373
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5381
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = ""
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = " optionally"
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5403
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5407
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5411
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5415
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5419
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5425
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5429
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5433
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5437
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5446
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5452
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5456
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5462
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5466
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5472
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5487
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5491
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5497
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5503
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5507
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5513
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5517
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5521
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5525
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5529
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5537
		{
			yyVAL.str = "charset"
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5564
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5566
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5569
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5571
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5574
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5576
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5579
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5581
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5584
		{
			yyVAL.empty = struct{}{}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5586
		{
			yyVAL.empty = struct{}{}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5588
		{
			yyVAL.empty = struct{}{}
		}
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5592
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5597
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5601
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5606
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5608
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5612
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5629
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5635
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5639
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5645
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5649
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6125
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6134
		{
			decNesting(yylex)
		}
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6139
		{
			skipToEnd(yylex)
		}
	case 1583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6144
		{
			skipToEnd(yylex)
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6148
		{
			skipToEnd(yylex)
		}
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6152
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
