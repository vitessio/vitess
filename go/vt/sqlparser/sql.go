// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const COUNT = 57792
const AVG = 57793
const MAX = 57794
const MIN = 57795
const SUM = 57796
const GROUP_CONCAT = 57797
const BIT_AND = 57798
const BIT_OR = 57799
const BIT_XOR = 57800
const STD = 57801
const STDDEV = 57802
const STDDEV_POP = 57803
const STDDEV_SAMP = 57804
const VAR_POP = 57805
const VAR_SAMP = 57806
const VARIANCE = 57807
const REGEXP_INSTR = 57808
const REGEXP_LIKE = 57809
const REGEXP_REPLACE = 57810
const REGEXP_SUBSTR = 57811
const ExtractValue = 57812
const UpdateXML = 57813
const GET_LOCK = 57814
const RELEASE_LOCK = 57815
const RELEASE_ALL_LOCKS = 57816
const IS_FREE_LOCK = 57817
const IS_USED_LOCK = 57818
const MATCH = 57819
const AGAINST = 57820
const BOOLEAN = 57821
const LANGUAGE = 57822
const WITH = 57823
const QUERY = 57824
const EXPANSION = 57825
const WITHOUT = 57826
const VALIDATION = 57827
const UNUSED = 57828
const ARRAY = 57829
const BYTE = 57830
const CUME_DIST = 57831
const DESCRIPTION = 57832
const DENSE_RANK = 57833
const EMPTY = 57834
const EXCEPT = 57835
const FIRST_VALUE = 57836
const GROUPING = 57837
const GROUPS = 57838
const JSON_TABLE = 57839
const LAG = 57840
const LAST_VALUE = 57841
const LATERAL = 57842
const LEAD = 57843
const NTH_VALUE = 57844
const NTILE = 57845
const OF = 57846
const OVER = 57847
const PERCENT_RANK = 57848
const RANK = 57849
const RECURSIVE = 57850
const ROW_NUMBER = 57851
const SYSTEM = 57852
const WINDOW = 57853
const ACTIVE = 57854
const ADMIN = 57855
const AUTOEXTEND_SIZE = 57856
const BUCKETS = 57857
const CLONE = 57858
const COLUMN_FORMAT = 57859
const COMPONENT = 57860
const DEFINITION = 57861
const ENFORCED = 57862
const ENGINE_ATTRIBUTE = 57863
const EXCLUDE = 57864
const FOLLOWING = 57865
const GEOMCOLLECTION = 57866
const GET_MASTER_PUBLIC_KEY = 57867
const HISTOGRAM = 57868
const HISTORY = 57869
const INACTIVE = 57870
const INVISIBLE = 57871
const LOCKED = 57872
const MASTER_COMPRESSION_ALGORITHMS = 57873
const MASTER_PUBLIC_KEY_PATH = 57874
const MASTER_TLS_CIPHERSUITES = 57875
const MASTER_ZSTD_COMPRESSION_LEVEL = 57876
const NESTED = 57877
const NETWORK_NAMESPACE = 57878
const NOWAIT = 57879
const NULLS = 57880
const OJ = 57881
const OLD = 57882
const OPTIONAL = 57883
const ORDINALITY = 57884
const ORGANIZATION = 57885
const OTHERS = 57886
const PARTIAL = 57887
const PATH = 57888
const PERSIST = 57889
const PERSIST_ONLY = 57890
const PRECEDING = 57891
const PRIVILEGE_CHECKS_USER = 57892
const PROCESS = 57893
const RANDOM = 57894
const REFERENCE = 57895
const REQUIRE_ROW_FORMAT = 57896
const RESOURCE = 57897
const RESPECT = 57898
const RESTART = 57899
const RETAIN = 57900
const REUSE = 57901
const ROLE = 57902
const SECONDARY = 57903
const SECONDARY_ENGINE = 57904
const SECONDARY_ENGINE_ATTRIBUTE = 57905
const SECONDARY_LOAD = 57906
const SECONDARY_UNLOAD = 57907
const SIMPLE = 57908
const SKIP = 57909
const SRID = 57910
const THREAD_PRIORITY = 57911
const TIES = 57912
const UNBOUNDED = 57913
const VCPU = 57914
const VISIBLE = 57915
const RETURNING = 57916
const FORMAT = 57917
const TREE = 57918
const VITESS = 57919
const TRADITIONAL = 57920
const LOCAL = 57921
const LOW_PRIORITY = 57922
const NO_WRITE_TO_BINLOG = 57923
const LOGS = 57924
const ERROR = 57925
const GENERAL = 57926
const HOSTS = 57927
const OPTIMIZER_COSTS = 57928
const USER_RESOURCES = 57929
const SLOW = 57930
const CHANNEL = 57931
const RELAY = 57932
const EXPORT = 57933
const CURRENT = 57934
const ROW = 57935
const ROWS = 57936
const AVG_ROW_LENGTH = 57937
const CONNECTION = 57938
const CHECKSUM = 57939
const DELAY_KEY_WRITE = 57940
const ENCRYPTION = 57941
const ENGINE = 57942
const INSERT_METHOD = 57943
const MAX_ROWS = 57944
const MIN_ROWS = 57945
const PACK_KEYS = 57946
const PASSWORD = 57947
const FIXED = 57948
const DYNAMIC = 57949
const COMPRESSED = 57950
const REDUNDANT = 57951
const COMPACT = 57952
const ROW_FORMAT = 57953
const STATS_AUTO_RECALC = 57954
const STATS_PERSISTENT = 57955
const STATS_SAMPLE_PAGES = 57956
const STORAGE = 57957
const MEMORY = 57958
const DISK = 57959
const PARTITIONS = 57960
const LINEAR = 57961
const RANGE = 57962
const LIST = 57963
const SUBPARTITION = 57964
const SUBPARTITIONS = 57965
const HASH = 57966

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	642, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 739,
	235, 739,
	246, 739,
	281, 753,
	282, 753,
	-2, 741,
	-1, 60,
	237, 766,
	-2, 764,
	-1, 114,
	234, 1396,
	-2, 119,
	-1, 116,
	1, 146,
	642, 146,
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 767,
	218, 1417,
	-2, 1413,
	-1, 768,
	218, 1418,
	-2, 1414,
	-1, 844,
	59, 834,
	-2, 849,
	-1, 881,
	148, 1847,
	-2, 112,
	-1, 882,
	148, 1677,
	-2, 113,
	-1, 888,
	148, 1766,
	-2, 1390,
	-1, 1038,
	148, 1601,
	-2, 1387,
	-1, 1079,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1163,
	1, 554,
	642, 554,
	-2, 153,
	-1, 1434,
	59, 835,
	-2, 854,
	-1, 1435,
	59, 836,
	-2, 855,
	-1, 1488,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1567,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1576,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1914,
	218, 1422,
	-2, 1416,
	-1, 2006,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 2013,
	25, 174,
	-2, 176,
	-1, 2296,
	87, 39,
	-2, 891,
	-1, 2353,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2421,
	617, 666,
	-2, 640,
	-1, 2583,
	49, 1357,
	-2, 1351,
	-1, 2826,
	87, 39,
	-2, 892,
	-1, 2864,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 3205,
	617, 666,
	-2, 654,
	-1, 3295,
	22, 1768,
	32, 1768,
	174, 1768,
	257, 1768,
	315, 1768,
	316, 1768,
	317, 1768,
	318, 1768,
	319, 1768,
	320, 1768,
	321, 1768,
	323, 1768,
	324, 1768,
	325, 1768,
	326, 1768,
	327, 1768,
	328, 1768,
	329, 1768,
	330, 1768,
	331, 1768,
	332, 1768,
	333, 1768,
	334, 1768,
	336, 1768,
	338, 1768,
	339, 1768,
	340, 1768,
	341, 1768,
	342, 1768,
	343, 1768,
	344, 1768,
	345, 1768,
	346, 1768,
	349, 1768,
	350, 1768,
	351, 1768,
	352, 1768,
	353, 1768,
	354, 1768,
	355, 1768,
	356, 1768,
	357, 1768,
	496, 1768,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 46537

var yyAct = [...]int{
	767, 2969, 2970, 2525, 3367, 3379, 3186, 2968, 3336, 3273,
	3337, 659, 3293, 776, 1956, 2801, 2941, 770, 2003, 1491,
	3238, 3261, 2732, 2638, 2645, 1936, 2236, 3170, 3121, 1226,
	3, 2686, 2596, 2695, 3168, 2700, 2256, 2697, 769, 2696,
	2928, 2997, 2694, 2699, 745, 2599, 2698, 646, 1412, 1938,
	3158, 186, 2715, 837, 186, 2284, 607, 186, 2653, 642,
	3002, 2073, 622, 2714, 186, 859, 2600, 2544, 744, 37,
	2597, 2835, 186, 1449, 2829, 2524, 2481, 742, 743, 2324,
	2523, 2855, 2594, 2584, 2311, 639, 2347, 186, 1960, 667,
	2717, 2753, 2036, 2821, 2386, 2737, 638, 2464, 2418, 2061,
	1545, 2041, 2387, 640, 2388, 1976, 1992, 2104, 2336, 622,
	38, 1981, 622, 186, 622, 1041, 634, 36, 886, 2317,
	860, 1980, 2286, 2303, 1908, 155, 1175, 1875, 1785, 1436,
	839, 1111, 1743, 1592, 2456, 1901, 1795, 1874, 883, 1574,
	2082, 2060, 141, 2043, 1968, 2120, 841, 2380, 845, 1074,
	1069, 1480, 2355, 1458, 651, 1311, 1983, 91, 95, 1762,
	1803, 1416, 1692, 1247, 1581, 1688, 862, 1045, 96, 1048,
	1080, 2058, 1049, 1672, 2032, 1075, 1076, 1479, 1871, 1463,
	851, 1279, 1477, 1224, 1566, 124, 1077, 1087, 1218, 1540,
	847, 1811, 1697, 125, 873, 98, 1159, 846, 1204, 849,
	76, 629, 97, 89, 1318, 1928, 3195, 2411, 3368, 1314,
	2075, 2076, 2077, 2075, 119, 2929, 2705, 2683, 3223, 85,
	159, 2409, 117, 1911, 118, 2440, 2439, 2118, 8, 2702,
	848, 77, 7, 126, 1657, 6, 2921, 3320, 87, 867,
	2884, 872, 90, 2472, 3224, 611, 2473, 2973, 853, 3219,
	782, 783, 784, 87, 3218, 87, 1933, 1934, 87, 1248,
	1750, 1042, 1961, 1749, 2705, 1748, 1747, 630, 120, 1765,
	1746, 1745, 1116, 2973, 2703, 1113, 1728, 1737, 840, 838,
	3314, 782, 783, 784, 2282, 632, 1067, 633, 1129, 1130,
	1131, 880, 1134, 1135, 1136, 1137, 2709, 854, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1090, 1091, 861, 578, 2580,
	2790, 2108, 2703, 2431, 188, 189, 190, 3340, 3274, 2313,
	1443, 1065, 2972, 3324, 1117, 1120, 1121, 120, 102, 1064,
	1248, 1063, 1126, 3322, 2709, 3219, 1058, 1053, 2548, 3390,
	3335, 3358, 2806, 2805, 2434, 3171, 2257, 1755, 2972, 3323,
	2754, 2106, 3117, 3116, 2934, 2107, 1258, 2935, 2162, 3321,
	1115, 887, 746, 188, 189, 190, 78, 611, 1114, 104,
	105, 78, 108, 1066, 2052, 114, 3387, 3271, 183, 3371,
	3214, 573, 3349, 78, 78, 2942, 80, 3262, 2101, 3270,
	2327, 2480, 182, 746, 3303, 120, 3298, 2706, 2772, 2046,
	1555, 833, 834, 835, 836, 2283, 611, 844, 3301, 1964,
	3213, 3200, 1132, 2635, 2636, 2328, 121, 3307, 3308, 2641,
	3015, 1998, 1999, 2160, 2448, 2655, 2656, 2364, 2447, 164,
	2363, 2634, 3302, 2365, 2471, 875, 876, 1258, 612, 1481,
	2159, 1482, 1935, 1997, 87, 2706, 3187, 1221, 608, 87,
	1057, 1280, 1194, 1059, 1062, 1254, 1168, 1169, 1246, 1199,
	1200, 87, 87, 831, 2642, 830, 1182, 2376, 2016, 2015,
	1195, 1183, 2369, 3126, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1289, 1288, 1290, 1291, 611, 1182, 161, 1171, 162,
	2644, 1183, 2412, 1188, 2734, 2762, 594, 2320, 2321, 1181,
	2760, 1180, 2832, 611, 2639, 3341, 611, 1736, 592, 181,
	620, 618, 1060, 624, 1738, 1739, 1740, 2083, 2457, 1678,
	1158, 2655, 2656, 2512, 1420, 2738, 3342, 1964, 2640, 3147,
	1647, 3148, 2654, 2419, 2727, 2443, 1254, 2126, 2121, 3370,
	1673, 2045, 2728, 1215, 2657, 1197, 1198, 1133, 589, 1203,
	1062, 1164, 1054, 1220, 1201, 1196, 1211, 603, 1213, 1056,
	1055, 2646, 2459, 186, 1202, 186, 2923, 2922, 186, 2138,
	612, 2139, 599, 2140, 1648, 1162, 1649, 2141, 1189, 2735,
	1139, 2125, 3315, 2132, 2129, 2131, 2130, 2133, 2134, 1138,
	1100, 2736, 2127, 1962, 1963, 2123, 1210, 1212, 622, 1228,
	622, 622, 3101, 2919, 2086, 1423, 1070, 1098, 1060, 612,
	1071, 2977, 1977, 1071, 1109, 622, 622, 2657, 1108, 3391,
	165, 1107, 1106, 2124, 1105, 1104, 1103, 1102, 2654, 171,
	1061, 1097, 1559, 1110, 3347, 1294, 2160, 1046, 1294, 2463,
	2657, 579, 1083, 581, 595, 1046, 614, 1240, 613, 585,
	1082, 583, 587, 596, 588, 1046, 582, 1689, 593, 1044,
	2059, 584, 597, 598, 601, 604, 605, 606, 602, 600,
	1580, 591, 615, 2547, 1253, 1250, 1251, 1252, 1257, 1259,
	1256, 2513, 1255, 3383, 874, 37, 2287, 2289, 612, 2460,
	2112, 1685, 1249, 1208, 1192, 1234, 1178, 1209, 1184, 1185,
	1186, 1187, 1128, 3194, 2410, 1122, 612, 1214, 1119, 612,
	2676, 1962, 1963, 2442, 1082, 1553, 2918, 1552, 1118, 1068,
	2476, 1222, 1223, 2174, 1551, 1679, 1061, 1062, 1157, 1680,
	1681, 1207, 2429, 3276, 1686, 1089, 1101, 1549, 577, 572,
	2378, 1297, 1298, 1299, 1300, 2103, 156, 1089, 2105, 2643,
	2445, 1305, 779, 1099, 3275, 1253, 1250, 1251, 1252, 1257,
	1259, 1256, 2455, 1255, 3276, 2454, 3183, 779, 116, 779,
	1295, 1296, 2871, 1249, 2413, 2851, 2360, 1579, 2323, 1677,
	2267, 2707, 2708, 1230, 1231, 3275, 1927, 1216, 1467, 2833,
	1384, 1173, 1161, 2318, 2711, 2049, 2004, 2466, 1301, 1294,
	2466, 1291, 2465, 2633, 1205, 2465, 2971, 856, 111, 1698,
	1219, 1089, 3127, 81, 1405, 3208, 1659, 1658, 1660, 1661,
	1662, 186, 2882, 2883, 1229, 622, 622, 1112, 2433, 2707,
	2708, 1177, 2971, 3212, 2161, 2050, 1088, 1410, 3306, 2914,
	1390, 186, 2711, 2048, 2845, 1243, 2122, 77, 1088, 1241,
	2288, 2499, 1242, 1092, 1082, 1682, 86, 1483, 1094, 1244,
	622, 86, 1095, 1093, 186, 1320, 1316, 1812, 1317, 622,
	616, 1804, 2432, 86, 86, 622, 2402, 2051, 112, 1089,
	3350, 1813, 3305, 1096, 1427, 1264, 1411, 2047, 1160, 1262,
	1263, 609, 1442, 1424, 1191, 1263, 3011, 1426, 883, 3381,
	1179, 1430, 3382, 1061, 3380, 1193, 610, 841, 2889, 2888,
	1170, 1167, 1088, 1804, 1127, 2187, 157, 2090, 1589, 1588,
	1578, 1089, 2647, 169, 2095, 1674, 2651, 1675, 2100, 2098,
	1676, 1757, 1759, 1760, 2650, 1100, 1098, 2102, 2095, 3343,
	1089, 1264, 1391, 1392, 1393, 1394, 1395, 2872, 3240, 1206,
	1411, 1468, 1428, 1163, 1699, 1758, 95, 2166, 2167, 2168,
	1478, 2099, 1429, 1443, 3392, 177, 96, 1767, 2652, 3176,
	1808, 2482, 1176, 2648, 1809, 2097, 3344, 1417, 2649, 1264,
	1088, 1768, 1292, 1293, 1766, 3385, 1082, 1085, 1086, 3109,
	1046, 3241, 3203, 98, 1079, 1083, 3108, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 1810, 782,
	783, 784, 3177, 176, 178, 179, 180, 1261, 3099, 1262,
	1263, 1414, 1088, 2961, 3354, 1443, 2501, 1667, 1082, 1085,
	1086, 186, 1046, 838, 2960, 1541, 1079, 1083, 2896, 840,
	1448, 1088, 1445, 1264, 2895, 1550, 1092, 1082, 1425, 3393,
	2948, 1094, 2949, 2184, 2484, 1095, 1093, 1078, 2885, 1264,
	1473, 1474, 1286, 1287, 1289, 1288, 1290, 1291, 622, 878,
	1576, 2684, 2672, 1261, 2384, 1262, 1263, 2383, 1585, 2055,
	2213, 1665, 1587, 1654, 1668, 1590, 1591, 622, 622, 1652,
	622, 1666, 622, 622, 1651, 622, 622, 622, 622, 622,
	622, 1284, 1285, 1286, 1287, 1289, 1288, 1290, 1291, 1622,
	1623, 1261, 622, 1262, 1263, 1650, 186, 1628, 1640, 1634,
	2494, 2493, 2492, 2486, 1631, 2490, 2183, 2485, 1586, 2483,
	1630, 887, 1629, 186, 2488, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1266, 2487, 1601, 1664, 622, 1653, 186, 188,
	189, 190, 1264, 2879, 3202, 1621, 3180, 3179, 1624, 1687,
	2489, 2491, 622, 3178, 186, 3104, 188, 189, 190, 1264,
	2367, 3089, 1431, 3088, 1264, 1261, 3010, 1262, 1263, 3008,
	186, 2957, 1642, 1572, 1452, 2893, 2878, 186, 1556, 1557,
	1558, 1261, 2739, 1262, 1263, 2675, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 622, 1565, 1282, 1283, 1284,
	1285, 1286, 1287, 1289, 1288, 1290, 1291, 1584, 2674, 622,
	622, 1594, 2393, 1595, 2381, 1597, 1599, 1625, 1407, 1603,
	1605, 1607, 1609, 1611, 1453, 3352, 1443, 186, 2116, 1548,
	2115, 1583, 188, 189, 190, 1959, 1280, 1562, 1563, 1276,
	1941, 1277, 3285, 1443, 1632, 1633, 1561, 3283, 1443, 1575,
	1638, 1639, 1729, 1582, 1582, 1278, 1292, 1293, 1275, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1289, 1288, 1290, 1291,
	1695, 1663, 1694, 1655, 1261, 622, 1262, 1263, 1645, 1789,
	1793, 188, 189, 190, 1641, 2071, 1637, 1636, 1798, 1792,
	1792, 1261, 1264, 1262, 1263, 1702, 1261, 1635, 1262, 1263,
	1763, 1280, 1706, 2475, 1708, 1709, 1710, 1711, 1454, 1217,
	2731, 1715, 1264, 1233, 1790, 1790, 1690, 1443, 622, 622,
	2309, 3369, 3134, 1727, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1289, 1288, 1290, 1291, 188, 189, 190, 94, 2069,
	3133, 1805, 3093, 1770, 1761, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1065, 1700,
	1701, 1904, 1771, 1704, 120, 1626, 1064, 3092, 1063, 1264,
	2940, 622, 2420, 1705, 100, 3281, 1443, 1554, 1725, 2325,
	1712, 1713, 1714, 1872, 1726, 1264, 2398, 2768, 1280, 2325,
	2173, 2012, 1733, 1734, 1912, 3156, 1443, 1443, 92, 186,
	2844, 188, 189, 190, 622, 2067, 3331, 1443, 1260, 93,
	1764, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1288,
	1290, 1291, 1264, 92, 1261, 2846, 1262, 1263, 186, 2595,
	94, 622, 2332, 1264, 93, 2309, 3268, 3236, 1769, 1902,
	2844, 186, 1930, 1260, 1261, 622, 1262, 1263, 1872, 101,
	186, 2333, 186, 1443, 186, 186, 622, 2309, 3248, 622,
	100, 2844, 99, 101, 1443, 2309, 3244, 1264, 3154, 1443,
	622, 94, 2628, 1946, 100, 1947, 99, 1912, 3231, 1443,
	2309, 3196, 2160, 1914, 3207, 883, 1264, 2333, 883, 1443,
	2013, 1916, 1917, 2309, 1814, 1815, 1816, 1817, 2932, 3193,
	2333, 1261, 2810, 1262, 1263, 2237, 1794, 1264, 1828, 1969,
	1970, 95, 1799, 1800, 2786, 1443, 2866, 1261, 2096, 1262,
	1263, 96, 1264, 3112, 1443, 622, 2786, 1913, 1264, 87,
	1443, 95, 2062, 2063, 2064, 2309, 3100, 2066, 2068, 2070,
	1979, 96, 1264, 2177, 1443, 1456, 1952, 1264, 2932, 1443,
	3151, 1443, 622, 2663, 1261, 2568, 1262, 1263, 622, 1585,
	2309, 2930, 1585, 1996, 1585, 1261, 1914, 1262, 1263, 3311,
	2094, 2022, 2023, 2024, 2025, 1264, 2095, 2017, 1940, 2018,
	2019, 2020, 2021, 853, 2175, 2008, 2230, 1990, 2210, 1915,
	3137, 1443, 1918, 1919, 2007, 2028, 2029, 2030, 2031, 1261,
	2209, 1262, 1263, 2095, 1443, 622, 2084, 622, 1954, 2095,
	1974, 1455, 2038, 622, 622, 2849, 1443, 2078, 1261, 2011,
	1262, 1263, 1967, 2044, 1972, 2818, 1443, 1260, 1443, 1447,
	2815, 1443, 2230, 1443, 1995, 2665, 2664, 1951, 1994, 1261,
	2305, 1262, 1263, 2661, 2662, 2010, 2009, 2661, 2660, 2356,
	1264, 186, 2333, 1443, 1261, 94, 1262, 1263, 186, 1443,
	1261, 1852, 1262, 1263, 1931, 186, 186, 2081, 1741, 186,
	2054, 186, 2175, 1443, 1261, 1684, 1262, 1263, 186, 1261,
	1475, 1262, 1263, 2160, 2441, 186, 1544, 2423, 2039, 2416,
	2417, 2034, 2035, 2309, 2308, 3251, 1264, 2053, 2089, 1544,
	1543, 2092, 2057, 2093, 1264, 1073, 2065, 1261, 1072, 1262,
	1263, 186, 2357, 2175, 1489, 1488, 622, 3123, 887, 1264,
	2109, 887, 2359, 2039, 1450, 2091, 2087, 2088, 3090, 1444,
	1446, 1264, 2687, 2813, 1443, 2111, 1264, 1090, 1091, 3022,
	1264, 2113, 2114, 2913, 1264, 1280, 2110, 2356, 1582, 1844,
	1833, 1834, 1835, 1836, 1846, 1837, 1838, 1839, 1851, 1847,
	1840, 1841, 1848, 1849, 1850, 1842, 1843, 1845, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1289, 1288, 1290, 1291, 2766,
	1443, 1264, 1261, 2119, 1262, 1263, 2390, 2262, 1443, 1264,
	2897, 1763, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289,
	1288, 1290, 1291, 3345, 843, 2910, 1264, 2151, 2152, 2179,
	2357, 2891, 2154, 1264, 2245, 1443, 2221, 1264, 2733, 2178,
	2160, 2155, 1264, 2777, 3191, 2776, 1162, 2820, 1261, 1546,
	1262, 1263, 2144, 2170, 2037, 2172, 1261, 2729, 1262, 1263,
	2193, 2898, 2899, 2900, 1264, 3124, 2689, 2685, 2424, 1264,
	2033, 1261, 2171, 1262, 1263, 2027, 2026, 2208, 1617, 1670,
	1577, 1573, 1264, 1261, 2816, 1262, 1263, 1264, 1261, 1542,
	1262, 1263, 1261, 3097, 1262, 1263, 1261, 1264, 1262, 1263,
	113, 1264, 87, 2856, 2857, 2158, 2901, 2052, 1264, 1944,
	1443, 3364, 188, 189, 190, 3362, 1731, 2915, 1903, 3338,
	2788, 1764, 1905, 1264, 3217, 2784, 2169, 2389, 1264, 1618,
	1619, 1620, 186, 1261, 3142, 1262, 1263, 1264, 2859, 777,
	186, 1261, 1264, 1262, 1263, 622, 2293, 2774, 2681, 2680,
	2679, 622, 2773, 2902, 2903, 2904, 1792, 2279, 1261, 2297,
	1262, 1263, 622, 2186, 2595, 1261, 2385, 1262, 1263, 1261,
	2278, 1262, 1263, 3317, 1261, 2390, 1262, 1263, 1732, 2403,
	2277, 1790, 1264, 2145, 2276, 3269, 186, 2617, 2615, 2291,
	186, 2275, 2618, 2616, 2862, 2861, 1261, 2614, 1262, 1263,
	2613, 1261, 1613, 1262, 1263, 2366, 2274, 2329, 1958, 1451,
	2619, 2273, 2342, 2343, 1261, 2219, 1262, 1263, 1264, 1261,
	2260, 1262, 1263, 1950, 2850, 2254, 2573, 2572, 1264, 1261,
	2837, 1262, 1263, 1261, 3175, 1262, 1263, 1264, 2836, 2992,
	1261, 2991, 1262, 1263, 3001, 37, 1914, 3003, 2310, 1614,
	1615, 1616, 2840, 622, 2349, 1261, 1264, 1262, 1263, 186,
	1261, 2582, 1262, 1263, 1264, 2253, 186, 857, 2659, 1261,
	1683, 1262, 1263, 829, 1261, 858, 1262, 1263, 2374, 2394,
	622, 1264, 2306, 2319, 1124, 1264, 1812, 622, 1417, 2990,
	1913, 1585, 1585, 2281, 2415, 2842, 622, 2747, 1123, 2389,
	1813, 2252, 1264, 2348, 92, 2469, 1264, 2377, 2379, 2302,
	2307, 2251, 1264, 2438, 1261, 93, 1262, 1263, 1232, 2430,
	2250, 2322, 2354, 121, 186, 186, 186, 186, 186, 94,
	2437, 3377, 2370, 2264, 2265, 3290, 1969, 1970, 2677, 2249,
	2585, 2587, 2044, 2148, 2358, 186, 186, 2248, 2361, 2588,
	1261, 3192, 1262, 1263, 101, 3119, 2368, 2658, 2371, 92,
	1261, 186, 1262, 1263, 2247, 100, 94, 99, 2246, 1261,
	93, 1262, 1263, 2346, 1955, 2382, 94, 2392, 865, 866,
	622, 2137, 2395, 2396, 2571, 2240, 2391, 2136, 1261, 2239,
	1262, 1263, 2570, 99, 2135, 2238, 1261, 2822, 1262, 1263,
	2164, 2399, 3163, 2400, 2404, 2405, 2406, 3162, 3145, 2436,
	3009, 3007, 101, 1261, 3006, 1262, 1263, 1261, 1806, 1262,
	1263, 1565, 1807, 100, 100, 99, 2999, 2911, 2841, 2839,
	2425, 2426, 2690, 2079, 1261, 1560, 1262, 1263, 1261, 864,
	1262, 1263, 1264, 2998, 1261, 2830, 1262, 1263, 2325, 1792,
	2435, 1792, 3365, 1867, 1792, 2495, 101, 2981, 622, 1792,
	2305, 1904, 2507, 1904, 3366, 3365, 3366, 100, 622, 2514,
	2477, 2458, 2211, 1942, 1790, 1469, 1790, 2461, 2478, 1790,
	1264, 1899, 1460, 2526, 1790, 2526, 106, 107, 2526, 3181,
	2877, 622, 855, 2526, 103, 88, 2549, 2556, 1, 2881,
	2538, 2539, 2540, 2541, 3300, 590, 186, 1932, 2496, 1415,
	622, 3339, 2479, 3296, 1444, 1929, 2531, 3297, 2528, 1656,
	1646, 2532, 1264, 2943, 622, 2235, 1873, 3120, 1264, 2551,
	2693, 622, 622, 2085, 186, 186, 186, 186, 186, 1902,
	2909, 1902, 2042, 1081, 146, 2005, 186, 2006, 1953, 2467,
	1264, 186, 2468, 2556, 186, 3264, 186, 110, 2519, 186,
	186, 186, 1039, 2234, 109, 2607, 1084, 1190, 1264, 2080,
	2933, 2375, 2014, 2601, 1261, 2598, 1262, 1263, 1495, 2627,
	2598, 1493, 1494, 2575, 2533, 2534, 2535, 2536, 2537, 1492,
	2592, 2555, 2576, 1497, 1496, 2673, 2550, 2212, 2552, 845,
	2789, 1735, 619, 2345, 186, 2233, 184, 1484, 2563, 1461,
	2802, 2231, 1261, 1125, 1262, 1263, 580, 622, 1264, 1430,
	2349, 2666, 2117, 586, 2567, 622, 2574, 1306, 1730, 2569,
	186, 2362, 768, 2227, 2589, 2590, 2577, 884, 877, 2713,
	1943, 847, 2629, 186, 2295, 2630, 2609, 2610, 846, 2612,
	2056, 2226, 2603, 2620, 1261, 2608, 1262, 1263, 2611, 2834,
	1261, 186, 1262, 1263, 186, 2606, 2631, 2692, 2624, 2625,
	95, 2581, 2583, 2312, 2748, 2564, 2565, 2566, 2586, 1694,
	96, 2579, 1261, 187, 1262, 1263, 187, 3174, 3000, 187,
	3249, 2669, 2668, 2667, 623, 2637, 187, 2372, 1457, 2809,
	1261, 2222, 1262, 1263, 187, 2185, 1802, 1984, 2976, 2721,
	2720, 2338, 2341, 2342, 2343, 2339, 1756, 2340, 2344, 187,
	644, 2670, 2671, 2044, 643, 2712, 641, 2298, 2326, 1267,
	771, 2285, 2691, 1470, 2724, 2337, 2335, 2334, 2146, 1991,
	2858, 623, 2854, 622, 623, 187, 623, 3292, 2783, 1986,
	1261, 1982, 1262, 1263, 2740, 2304, 652, 2743, 645, 2742,
	637, 734, 733, 2874, 2719, 3277, 2444, 2730, 2446, 622,
	186, 2373, 2750, 2726, 1245, 1441, 1437, 1433, 631, 2758,
	2751, 2804, 1052, 2755, 2756, 3125, 2757, 2764, 2808, 2759,
	1438, 2761, 3198, 2763, 2745, 2746, 2338, 2341, 2342, 2343,
	2339, 2163, 2340, 2344, 2771, 1432, 2856, 2857, 1441, 1437,
	1831, 1832, 3205, 2701, 2927, 1948, 1949, 1440, 2682, 1439,
	2421, 2072, 63, 1438, 41, 3169, 3237, 732, 729, 186,
	2978, 2979, 2980, 2545, 2546, 3220, 3221, 728, 3222, 1859,
	626, 3313, 1236, 871, 32, 31, 30, 2880, 1434, 1435,
	1440, 29, 1439, 28, 2828, 23, 22, 21, 186, 2823,
	2824, 20, 19, 25, 2831, 18, 17, 2838, 16, 2704,
	3334, 3376, 115, 50, 47, 45, 123, 186, 122, 2843,
	186, 186, 186, 48, 44, 1165, 42, 2853, 27, 26,
	622, 622, 15, 2860, 14, 2863, 13, 2176, 12, 11,
	10, 2180, 2181, 2182, 2916, 2917, 9, 5, 2189, 2869,
	2870, 2190, 2191, 2192, 4, 2868, 35, 34, 33, 2721,
	2720, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2875, 2876, 2867, 622, 622, 622, 622, 1239, 24,
	2937, 2938, 2, 2408, 2074, 0, 0, 0, 0, 2892,
	0, 2894, 0, 0, 0, 0, 0, 2214, 2215, 2216,
	2217, 2218, 0, 2220, 0, 0, 0, 0, 2223, 2224,
	0, 2225, 0, 0, 2228, 0, 2229, 0, 0, 0,
	2232, 0, 0, 2886, 2887, 0, 0, 0, 2241, 2242,
	2243, 2244, 0, 0, 0, 0, 0, 0, 1792, 2939,
	1792, 2255, 0, 2258, 2259, 0, 0, 0, 0, 0,
	2261, 2263, 0, 0, 0, 0, 0, 0, 2268, 2269,
	2270, 2271, 2272, 1790, 0, 1790, 186, 0, 0, 0,
	0, 1953, 2526, 2280, 2526, 2920, 0, 2956, 2950, 2924,
	2925, 2926, 0, 2292, 0, 2952, 0, 0, 0, 0,
	622, 2995, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2965, 0, 0, 2964, 0, 2974, 0, 0,
	3024, 0, 0, 0, 0, 0, 0, 0, 0, 3016,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2601, 2598, 0, 3004, 2601, 3018, 0, 0, 0,
	0, 0, 0, 2996, 0, 1790, 3005, 3020, 0, 0,
	0, 0, 0, 3014, 622, 3012, 0, 37, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 3098, 0,
	622, 0, 0, 0, 0, 0, 0, 3028, 0, 0,
	0, 0, 0, 622, 0, 0, 0, 3025, 3026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3102, 0, 0, 0, 0, 0,
	3139, 3140, 3122, 3096, 3095, 0, 3110, 3143, 0, 3094,
	0, 0, 0, 0, 0, 3115, 0, 1792, 0, 3114,
	622, 0, 0, 0, 622, 622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 187, 0, 0,
	187, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 622, 0, 0, 0, 0, 0, 0,
	3144, 0, 0, 0, 0, 0, 0, 3185, 3167, 0,
	623, 0, 623, 623, 3164, 3165, 3146, 0, 3173, 0,
	3149, 3166, 0, 3105, 3106, 3107, 0, 623, 623, 0,
	2601, 3182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3188,
	0, 0, 0, 0, 0, 0, 3184, 0, 0, 0,
	0, 622, 0, 0, 0, 0, 2502, 2503, 2504, 2505,
	2506, 0, 0, 0, 0, 3190, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 2511, 0, 0, 0, 0,
	0, 0, 0, 0, 622, 186, 0, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3209, 2527,
	0, 0, 0, 0, 0, 0, 3197, 0, 0, 0,
	3206, 121, 0, 3204, 0, 3201, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 2553, 2554, 0,
	0, 0, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3226, 622, 0, 3227, 0, 37, 0,
	0, 0, 0, 0, 3225, 0, 0, 0, 0, 0,
	0, 0, 3235, 0, 0, 0, 0, 0, 622, 622,
	0, 0, 0, 0, 3242, 0, 0, 0, 0, 0,
	0, 0, 161, 3250, 162, 0, 0, 3252, 0, 2598,
	0, 0, 622, 2604, 3279, 0, 3263, 3122, 3265, 3255,
	3278, 3260, 3272, 3257, 181, 3256, 186, 622, 3254, 3259,
	2622, 2623, 3258, 0, 3247, 0, 0, 0, 0, 0,
	0, 37, 0, 187, 3288, 0, 0, 623, 623, 0,
	0, 3291, 3309, 3299, 3304, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 3319, 0, 3279, 0, 0, 0,
	622, 3316, 3278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 187, 0, 0, 0,
	3328, 623, 622, 0, 3333, 0, 0, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 3346, 0, 0, 0,
	622, 0, 622, 3348, 0, 0, 0, 0, 3360, 0,
	0, 0, 0, 0, 3357, 3356, 3363, 3361, 1792, 0,
	0, 0, 3359, 0, 0, 165, 0, 0, 0, 0,
	3372, 0, 3279, 0, 171, 0, 0, 3378, 3278, 0,
	0, 0, 3384, 1790, 3386, 0, 0, 2749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3394, 0, 3396, 3397, 3140, 2765,
	2767, 2769, 3395, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 2775, 0, 0, 0, 0, 2779, 2780,
	2781, 2782, 0, 0, 0, 0, 2785, 0, 0, 1790,
	0, 0, 2787, 0, 0, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 0, 0, 0, 0, 0,
	0, 0, 0, 2807, 0, 0, 0, 0, 2811, 0,
	2812, 2814, 0, 2817, 2819, 0, 0, 0, 0, 0,
	2825, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2847, 2848, 0, 0, 2852,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2864, 2865, 623,
	623, 0, 623, 0, 623, 623, 0, 623, 623, 623,
	623, 623, 623, 0, 0, 78, 39, 40, 80, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 43,
	69, 70, 0, 67, 71, 187, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 623, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 187, 0, 0, 0,
	0, 56, 0, 0, 0, 0, 0, 2931, 0, 0,
	0, 0, 187, 87, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 623, 0, 0,
	0, 157, 0, 0, 0, 0, 2951, 0, 169, 0,
	0, 623, 623, 0, 0, 0, 0, 2953, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 187,
	0, 2962, 0, 0, 0, 0, 2963, 0, 0, 0,
	0, 0, 2967, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 2975, 0, 0, 0, 0, 0,
	0, 0, 2982, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 623, 0, 0,
	0, 2414, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 121, 0, 143, 0, 176, 178,
	179, 180, 0, 0, 0, 0, 0, 164, 0, 46,
	49, 52, 51, 54, 0, 66, 0, 0, 75, 72,
	623, 623, 0, 0, 0, 0, 863, 0, 0, 869,
	0, 869, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 55, 83, 82, 142, 0, 64, 65, 53, 0,
	0, 0, 0, 0, 73, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 0, 0,
	3111, 0, 0, 1568, 1569, 152, 151, 181, 0, 3118,
	0, 0, 0, 0, 57, 58, 0, 59, 60, 61,
	62, 187, 0, 0, 0, 0, 623, 3128, 3129, 3130,
	0, 3131, 3132, 0, 0, 0, 0, 3135, 0, 3136,
	0, 3138, 3141, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 623, 0, 0, 0, 3150, 3152, 3153,
	3155, 3157, 3159, 187, 0, 0, 0, 623, 0, 0,
	0, 0, 187, 0, 187, 0, 187, 187, 623, 0,
	0, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 0, 0, 0,
	3189, 0, 0, 0, 0, 0, 147, 1570, 154, 0,
	1567, 0, 148, 149, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3211, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	0, 0, 3216, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 623, 0, 623,
	0, 3232, 0, 0, 0, 623, 623, 3233, 3234, 121,
	0, 143, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 3245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 153, 0, 0, 0, 187, 187, 142,
	0, 187, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 3280, 3282, 3284, 3332, 0, 0, 187, 0, 0,
	161, 0, 162, 0, 1512, 0, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 3312, 0, 130, 131,
	152, 151, 181, 187, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 0, 0, 3318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3351, 3353,
	3355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 3375,
	0, 147, 128, 154, 135, 127, 0, 148, 149, 0,
	0, 0, 0, 165, 0, 0, 3388, 3389, 0, 0,
	0, 0, 171, 136, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 139, 137, 132,
	133, 134, 138, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 1265, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	1312, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 1513,
	0, 0, 187, 0, 0, 0, 0, 623, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 187, 0, 0, 0, 0, 1526, 1529, 1530,
	1531, 1532, 1533, 1534, 0, 1535, 1536, 1537, 1538, 1539,
	1514, 1515, 1516, 1517, 1498, 1499, 1527, 0, 1501, 0,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 0,
	0, 1511, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 623, 0,
	0, 0, 0, 0, 0, 0, 144, 0, 0, 145,
	0, 1459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 187, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1528, 0,
	0, 0, 623, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 0, 0, 0, 176, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 623, 1564, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 121, 187, 143,
	0, 0, 623, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 0, 0, 623, 623, 0, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 153, 0, 187, 0, 0, 187, 142, 187, 0,
	0, 187, 187, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1568, 1569, 152, 151,
	181, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 623,
	0, 0, 0, 0, 1696, 0, 0, 623, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	1570, 154, 0, 1567, 0, 148, 149, 1751, 1752, 1753,
	1754, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 869,
	1796, 1797, 0, 0, 0, 869, 869, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 623, 187, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 0, 0, 0, 0, 1853, 1854, 1855,
	1856, 1857, 1858, 1860, 1864, 1865, 1866, 0, 1868, 1869,
	1870, 0, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 0, 1900, 0, 1906, 1907,
	869, 187, 869, 869, 869, 869, 869, 156, 0, 0,
	0, 0, 0, 1921, 1922, 1923, 1924, 1925, 1926, 0,
	0, 0, 0, 0, 0, 1512, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	869, 0, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 623, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 1966, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 0, 0, 0, 0, 0, 623, 623, 623, 623,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 144, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 1500, 0, 0,
	0, 575, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 625, 0, 0, 169, 0, 0, 0, 0, 832,
	0, 0, 0, 185, 0, 0, 576, 0, 187, 617,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 623, 0, 177, 0, 0, 852,
	1047, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 870, 0, 0,
	1513, 0, 0, 0, 0, 576, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 623, 0, 0, 0, 0, 0, 1526, 1529,
	1530, 1531, 1532, 1533, 1534, 623, 1535, 1536, 1537, 1538,
	1539, 1514, 1515, 1516, 1517, 1498, 1499, 1527, 0, 1501,
	0, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	0, 0, 1511, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 623, 0, 0, 0, 623, 623, 0, 0,
	0, 778, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2194, 2195, 2196, 2197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 842,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 623, 0, 0, 0, 0, 0, 842,
	0, 0, 0, 0, 0, 0, 1312, 0, 187, 0,
	0, 0, 0, 0, 0, 1051, 0, 0, 0, 1528,
	0, 0, 0, 0, 0, 0, 623, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 869, 869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	623, 623, 0, 0, 1459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 772,
	780, 781, 782, 783, 784, 773, 775, 0, 0, 0,
	774, 0, 0, 0, 0, 885, 0, 0, 1043, 0,
	1050, 0, 623, 777, 785, 786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 0, 0, 0,
	1166, 0, 1172, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 623, 0, 623, 0, 0, 0, 0, 0,
	2722, 2723, 0, 0, 0, 576, 0, 576, 0, 0,
	576, 0, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	2497, 2498, 0, 0, 2500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2508, 2509, 2510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2515, 2516,
	0, 0, 0, 2517, 2518, 0, 0, 1876, 2520, 0,
	2521, 2522, 0, 0, 0, 2529, 2530, 0, 0, 0,
	0, 0, 0, 1876, 1876, 1876, 1876, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 0,
	2557, 2558, 2559, 2560, 2561, 2562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 751, 0,
	748, 749, 0, 0, 0, 750, 0, 0, 0, 2626,
	0, 0, 0, 576, 0, 0, 0, 0, 0, 1225,
	0, 1225, 1225, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 852, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 842, 1302, 1303, 1304, 2688,
	1307, 0, 1308, 1309, 1310, 0, 1313, 1315, 1315, 0,
	1315, 1319, 1319, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 0, 0, 1383, 0, 1385,
	1386, 1387, 1388, 1389, 0, 0, 0, 0, 2770, 1319,
	1319, 1319, 1319, 1319, 0, 0, 0, 0, 0, 0,
	0, 2778, 0, 1396, 1397, 1398, 1399, 1400, 1401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 885, 0, 885, 885, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 1237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	842, 0, 0, 0, 842, 0, 0, 0, 0, 0,
	842, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 1409, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 0, 2912, 0, 0, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 1707, 0, 1693, 0, 0, 0,
	0, 0, 0, 1408, 0, 1718, 1719, 1720, 1721, 1722,
	1723, 1724, 576, 0, 0, 2936, 0, 0, 0, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 1717,
	576, 576, 576, 576, 576, 576, 576, 0, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1421, 1422, 2954, 0, 2955, 0, 0, 0, 576,
	2958, 2959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1465, 0, 0, 0,
	0, 0, 0, 0, 0, 885, 0, 2983, 0, 0,
	2984, 1485, 2985, 2986, 0, 2987, 0, 2988, 0, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 0,
	0, 870, 870, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 3013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3021, 0, 0, 3023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 1693, 870, 870,
	870, 870, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 1225, 1975, 0, 1978,
	852, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	1225, 1225, 0, 576, 0, 0, 0, 0, 0, 0,
	1693, 0, 576, 0, 576, 3172, 576, 1993, 0, 0,
	0, 0, 0, 0, 1043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 1593, 1593, 0, 1593, 0, 1593, 1593,
	0, 1602, 1593, 1593, 1593, 1593, 1593, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 1408, 1043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3215, 0, 0, 0, 0, 0,
	0, 885, 0, 0, 0, 0, 0, 0, 3228, 0,
	0, 3229, 0, 3230, 0, 885, 885, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 2128, 0, 0, 0, 0,
	0, 0, 2142, 2143, 0, 0, 2147, 0, 0, 0,
	0, 0, 0, 576, 0, 2150, 0, 0, 0, 0,
	576, 0, 2153, 0, 0, 0, 0, 576, 576, 0,
	0, 576, 0, 2149, 0, 0, 0, 0, 0, 0,
	576, 1786, 0, 0, 0, 1985, 0, 576, 2156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 3310, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3325, 0,
	3326, 0, 3327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1051, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 885, 0, 0, 0, 0, 0, 1920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3373,
	1945, 3374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1465, 0, 0, 885, 0, 0, 0, 0, 0,
	0, 0, 885, 0, 0, 885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1693, 0, 0, 0, 576, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1043, 0,
	0, 0, 0, 0, 1050, 0, 0, 2165, 576, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1043, 0, 1786, 0, 0, 2401, 0, 0, 1786,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 0, 0, 2407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2449, 2450, 2451, 2452, 2453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1744, 2462, 0, 0, 576, 576, 576, 576,
	576, 0, 0, 0, 0, 0, 0, 0, 2470, 0,
	0, 0, 2157, 0, 2266, 0, 0, 576, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 0, 2290,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 0, 0, 0, 0, 0, 842, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2330, 2331,
	0, 0, 0, 0, 0, 0, 0, 2350, 0, 2351,
	2352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1409, 0,
	1409, 0, 0, 1409, 0, 0, 0, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2428, 0,
	1409, 0, 0, 0, 885, 1409, 576, 576, 576, 576,
	576, 0, 0, 0, 0, 0, 0, 0, 2621, 0,
	0, 1957, 0, 576, 0, 0, 1643, 2299, 576, 0,
	0, 576, 2632, 1693, 0, 0, 0, 0, 2314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 2716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2725, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 2741, 0,
	0, 2744, 0, 0, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2397,
	0, 0, 0, 576, 0, 0, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 2542,
	0, 0, 0, 2422, 0, 0, 0, 0, 0, 0,
	0, 0, 2427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2602, 0, 79, 0, 0, 1985, 1985, 1985, 1985, 1985,
	0, 0, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2350, 842, 0, 0, 1786, 1985, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 2890, 0, 0, 0, 0,
	0, 0, 1408, 0, 1408, 0, 0, 1408, 0, 0,
	0, 0, 1408, 2710, 2905, 0, 0, 2906, 2907, 2908,
	576, 780, 781, 2718, 2543, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 885, 0, 0, 0, 0, 576,
	0, 0, 576, 576, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1593, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2752, 0, 0, 0, 2578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	885, 0, 0, 0, 1408, 0, 0, 2605, 1593, 1408,
	0, 0, 0, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 87, 0, 1409, 0, 1409,
	0, 772, 780, 781, 782, 783, 784, 773, 775, 0,
	0, 0, 774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 777, 785, 786, 0, 0,
	0, 0, 0, 1043, 0, 0, 1408, 0, 1643, 0,
	0, 1957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1985, 0, 2722, 2723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2873, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 2294, 0, 0, 780,
	781, 0, 0, 0, 0, 1791, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2989, 0, 2993, 2994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2602, 0,
	79, 0, 2602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1957, 0, 0,
	0, 0, 3210, 0, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2944, 2945, 2946, 2947, 0, 0, 0, 0, 0, 0,
	0, 3103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 1408, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2602, 1643, 0,
	0, 1408, 0, 0, 0, 0, 3017, 0, 3019, 0,
	0, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1396, 1397, 1398, 1399, 1400, 1401,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3199, 0, 0, 3113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 885,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3160, 0, 0, 0,
	3160, 3160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3246,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3329, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1408, 0,
	3243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 885, 885, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2803, 375, 3294, 0,
	1021, 1006, 488, 0, 949, 1024, 918, 937, 1034, 940,
	943, 985, 897, 963, 394, 934, 890, 922, 892, 929,
	893, 920, 951, 258, 917, 1008, 967, 1023, 347, 255,
	899, 923, 408, 939, 197, 987, 458, 242, 357, 354,
	496, 270, 261, 257, 240, 300, 364, 406, 478, 400,
	1030, 351, 973, 0, 468, 379, 0, 0, 0, 953,
	1012, 961, 999, 948, 986, 907, 972, 1025, 935, 982,
	1026, 306, 238, 308, 196, 391, 469, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 3266, 0, 3267, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 332, 341,
	340, 321, 322, 324, 326, 331, 338, 344, 931, 979,
	1020, 932, 981, 253, 304, 260, 252, 493, 1031, 1011,
	896, 960, 1019, 0, 0, 220, 1022, 955, 0, 984,
	0, 1037, 891, 975, 0, 894, 898, 1033, 1015, 926,
	263, 0, 0, 0, 0, 0, 0, 0, 952, 962,
	996, 1000, 946, 0, 0, 0, 0, 0, 0, 0,
	924, 0, 971, 0, 0, 0, 903, 895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	950, 0, 0, 0, 0, 906, 0, 925, 997, 0,
	889, 285, 900, 380, 245, 0, 1004, 1014, 947, 533,
	1018, 945, 944, 991, 904, 1010, 938, 346, 902, 313,
	192, 216, 0, 936, 390, 433, 445, 1009, 921, 930,
	243, 928, 443, 404, 512, 224, 272, 430, 410, 441,
	417, 275, 970, 989, 442, 352, 498, 424, 509, 534,
	535, 251, 384, 521, 482, 529, 548, 217, 248, 398,
	475, 515, 465, 376, 494, 495, 312, 464, 283, 195,
	350, 540, 215, 451, 233, 222, 500, 518, 277, 428,
	204, 477, 507, 230, 455, 0, 0, 550, 206, 505,
	474, 372, 309, 310, 205, 0, 429, 256, 281, 246,
	393, 502, 503, 244, 551, 219, 528, 211, 1227, 527,
	386, 497, 506, 373, 362, 210, 504, 371, 361, 317,
	336, 337, 268, 292, 422, 355, 423, 293, 382, 381,
	383, 199, 516, 0, 200, 0, 470, 517, 552, 225,
	226, 228, 916, 267, 271, 279, 282, 288, 289, 298,
	348, 397, 421, 419, 425, 1005, 492, 510, 522, 532,
	538, 539, 541, 542, 543, 544, 545, 547, 546, 385,
	296, 466, 316, 353, 994, 1036, 403, 444, 231, 514,
	467, 911, 915, 909, 976, 910, 965, 966, 912, 1027,
	1028, 1029, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	0, 998, 905, 0, 913, 914, 1007, 1016, 1017, 571,
	363, 457, 511, 318, 330, 333, 323, 342, 0, 343,
	319, 320, 325, 327, 328, 329, 334, 335, 339, 345,
	239, 202, 369, 377, 491, 297, 207, 208, 209, 484,
	485, 486, 487, 525, 526, 530, 434, 435, 436, 437,
	280, 520, 294, 440, 439, 314, 315, 969, 191, 212,
	349, 1032, 426, 276, 549, 524, 519, 198, 214, 908,
	250, 919, 927, 0, 933, 941, 942, 954, 956, 957,
	958, 959, 977, 978, 980, 988, 990, 993, 995, 1002,
	1013, 1035, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 291, 295, 301, 302, 305, 311,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 427, 432, 446, 447, 448, 449, 450, 453,
	454, 459, 460, 461, 462, 463, 471, 472, 476, 499,
	501, 513, 531, 536, 452, 287, 508, 537, 0, 358,
	968, 974, 360, 269, 290, 303, 983, 523, 473, 218,
	438, 278, 241, 1001, 1003, 203, 237, 221, 247, 262,
	265, 307, 370, 378, 407, 412, 284, 259, 235, 431,
	232, 456, 479, 480, 481, 483, 374, 254, 411, 964,
	992, 356, 489, 490, 299, 375, 0, 0, 1021, 1006,
	488, 0, 949, 1024, 918, 937, 1034, 940, 943, 985,
	897, 963, 394, 934, 890, 922, 892, 929, 893, 920,
	951, 258, 917, 1008, 967, 1023, 347, 255, 899, 923,
	408, 939, 197, 987, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 1030, 351,
	973, 0, 468, 379, 0, 0, 0, 953, 1012, 961,
	999, 948, 986, 907, 972, 1025, 935, 982, 1026, 306,
	238, 308, 196, 391, 469, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 332, 341, 340, 321,
	322, 324, 326, 331, 338, 344, 931, 979, 1020, 932,
	981, 253, 304, 260, 252, 493, 1031, 1011, 896, 960,
	1019, 0, 0, 220, 1022, 955, 0, 984, 0, 1037,
	891, 975, 0, 894, 898, 1033, 1015, 926, 263, 0,
	0, 0, 0, 0, 0, 0, 952, 962, 996, 1000,
	946, 0, 0, 0, 0, 0, 2633, 0, 924, 0,
	971, 0, 0, 0, 903, 895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 0, 0, 906, 0, 925, 997, 0, 889, 285,
	900, 380, 245, 0, 1004, 1014, 947, 533, 1018, 945,
	944, 991, 904, 1010, 938, 346, 902, 313, 192, 216,
	0, 936, 390, 433, 445, 1009, 921, 930, 243, 928,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	970, 989, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 1227, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 336, 337,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	916, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 1005, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 385, 296, 466,
	316, 353, 994, 1036, 403, 444, 231, 514, 467, 911,
	915, 909, 976, 910, 965, 966, 912, 1027, 1028, 1029,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 998,
	905, 0, 913, 914, 1007, 1016, 1017, 571, 363, 457,
	511, 318, 330, 333, 323, 342, 0, 343, 319, 320,
	325, 327, 328, 329, 334, 335, 339, 345, 239, 202,
	369, 377, 491, 297, 207, 208, 209, 484, 485, 486,
	487, 525, 526, 530, 434, 435, 436, 437, 280, 520,
	294, 440, 439, 314, 315, 969, 191, 212, 349, 1032,
	426, 276, 549, 524, 519, 198, 214, 908, 250, 919,
	927, 0, 933, 941, 942, 954, 956, 957, 958, 959,
	977, 978, 980, 988, 990, 993, 995, 1002, 1013, 1035,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 968, 974,
	360, 269, 290, 303, 983, 523, 473, 218, 438, 278,
	241, 1001, 1003, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 964, 992, 356,
	489, 490, 299, 375, 0, 0, 1021, 1006, 488, 0,
	949, 1024, 918, 937, 1034, 940, 943, 985, 897, 963,
	394, 934, 890, 922, 892, 929, 893, 920, 951, 258,
	917, 1008, 967, 1023, 347, 255, 899, 923, 408, 939,
	197, 987, 458, 242, 357, 354, 496, 270, 261, 257,
	240, 300, 364, 406, 478, 400, 1030, 351, 973, 0,
	468, 379, 0, 0, 0, 953, 1012, 961, 999, 948,
	986, 907, 972, 1025, 935, 982, 1026, 306, 238, 308,
	196, 391, 469, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 332, 341, 340, 321, 322, 324,
	326, 331, 338, 344, 931, 979, 1020, 932, 981, 253,
	304, 260, 252, 493, 1031, 1011, 896, 960, 1019, 0,
	0, 220, 1022, 955, 0, 984, 0, 1037, 891, 975,
	0, 894, 898, 1033, 1015, 926, 263, 0, 0, 0,
	0, 0, 0, 0, 952, 962, 996, 1000, 946, 0,
	0, 0, 0, 0, 2591, 0, 924, 0, 971, 0,
	0, 0, 903, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 950, 0, 0, 0,
	0, 906, 0, 925, 997, 0, 889, 285, 900, 380,
	245, 0, 1004, 1014, 947, 533, 1018, 945, 944, 991,
	904, 1010, 938, 346, 902, 313, 192, 216, 0, 936,
	390, 433, 445, 1009, 921, 930, 243, 928, 443, 404,
	512, 224, 272, 430, 410, 441, 417, 275, 970, 989,
	442, 352, 498, 424, 509, 534, 535, 251, 384, 521,
	482, 529, 548, 217, 248, 398, 475, 515, 465, 376,
	494, 495, 312, 464, 283, 195, 350, 540, 215, 451,
	233, 222, 500, 518, 277, 428, 204, 477, 507, 230,
	455, 0, 0, 550, 206, 505, 474, 372, 309, 310,
	205, 0, 429, 256, 281, 246, 393, 502, 503, 244,
	551, 219, 528, 211, 1227, 527, 386, 497, 506, 373,
	362, 210, 504, 371, 361, 317, 336, 337, 268, 292,
	422, 355, 423, 293, 382, 381, 383, 199, 516, 0,
	200, 0, 470, 517, 552, 225, 226, 228, 916, 267,
	271, 279, 282, 288, 289, 298, 348, 397, 421, 419,
	425, 1005, 492, 510, 522, 532, 538, 539, 541, 542,
	543, 544, 545, 547, 546, 385, 296, 466, 316, 353,
	994, 1036, 403, 444, 231, 514, 467, 911, 915, 909,
	976, 910, 965, 966, 912, 1027, 1028, 1029, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 0, 998, 905, 0,
	913, 914, 1007, 1016, 1017, 571, 363, 457, 511, 318,
	330, 333, 323, 342, 0, 343, 319, 320, 325, 327,
	328, 329, 334, 335, 339, 345, 239, 202, 369, 377,
	491, 297, 207, 208, 209, 484, 485, 486, 487, 525,
	526, 530, 434, 435, 436, 437, 280, 520, 294, 440,
	439, 314, 315, 969, 191, 212, 349, 1032, 426, 276,
	549, 524, 519, 198, 214, 908, 250, 919, 927, 0,
	933, 941, 942, 954, 956, 957, 958, 959, 977, 978,
	980, 988, 990, 993, 995, 1002, 1013, 1035, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	291, 295, 301, 302, 305, 311, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 427, 432,
	446, 447, 448, 449, 450, 453, 454, 459, 460, 461,
	462, 463, 471, 472, 476, 499, 501, 513, 531, 536,
	452, 287, 508, 537, 0, 358, 968, 974, 360, 269,
	290, 303, 983, 523, 473, 218, 438, 278, 241, 1001,
	1003, 203, 237, 221, 247, 262, 265, 307, 370, 378,
	407, 412, 284, 259, 235, 431, 232, 456, 479, 480,
	481, 483, 374, 254, 411, 964, 992, 356, 489, 490,
	299, 375, 0, 0, 1021, 1006, 488, 0, 949, 1024,
	918, 937, 1034, 940, 943, 985, 897, 963, 394, 934,
	890, 922, 892, 929, 893, 920, 951, 258, 917, 1008,
	967, 1023, 347, 255, 899, 923, 408, 939, 197, 987,
	458, 242, 357, 354, 496, 270, 261, 257, 240, 300,
	364, 406, 478, 400, 1030, 351, 973, 0, 468, 379,
	0, 0, 0, 953, 1012, 961, 999, 948, 986, 907,
	972, 1025, 935, 982, 1026, 306, 238, 308, 196, 391,
	469, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 332, 341, 340, 321, 322, 324, 326, 331,
	338, 344, 931, 979, 1020, 932, 981, 253, 304, 260,
	252, 493, 1031, 1011, 896, 960, 1019, 0, 0, 220,
	1022, 955, 0, 984, 0, 1037, 891, 975, 0, 894,
	898, 1033, 1015, 926, 263, 0, 0, 0, 0, 0,
	0, 0, 952, 962, 996, 1000, 946, 0, 0, 0,
	0, 0, 1973, 0, 924, 0, 971, 0, 0, 0,
	903, 895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 950, 0, 0, 0, 0, 906,
	0, 925, 997, 0, 889, 285, 900, 380, 245, 0,
	1004, 1014, 947, 533, 1018, 945, 944, 991, 904, 1010,
	938, 346, 902, 313, 192, 216, 0, 936, 390, 433,
	445, 1009, 921, 930, 243, 928, 443, 404, 512, 224,
	272, 430, 410, 441, 417, 275, 970, 989, 442, 352,
	498, 424, 509, 534, 535, 251, 384, 521, 482, 529,
	548, 217, 248, 398, 475, 515, 465, 376, 494, 495,
	312, 464, 283, 195, 350, 540, 215, 451, 233, 222,
	500, 518, 277, 428, 204, 477, 507, 230, 455, 0,
	0, 550, 206, 505, 474, 372, 309, 310, 205, 0,
	429, 256, 281, 246, 393, 502, 503, 244, 551, 219,
	528, 211, 1227, 527, 386, 497, 506, 373, 362, 210,
	504, 371, 361, 317, 336, 337, 268, 292, 422, 355,
	423, 293, 382, 381, 383, 199, 516, 0, 200, 0,
	470, 517, 552, 225, 226, 228, 916, 267, 271, 279,
	282, 288, 289, 298, 348, 397, 421, 419, 425, 1005,
	492, 510, 522, 532, 538, 539, 541, 542, 543, 544,
	545, 547, 546, 385, 296, 466, 316, 353, 994, 1036,
	403, 444, 231, 514, 467, 911, 915, 909, 976, 910,
	965, 966, 912, 1027, 1028, 1029, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 0, 998, 905, 0, 913, 914,
	1007, 1016, 1017, 571, 363, 457, 511, 318, 330, 333,
	323, 342, 0, 343, 319, 320, 325, 327, 328, 329,
	334, 335, 339, 345, 239, 202, 369, 377, 491, 297,
	207, 208, 209, 484, 485, 486, 487, 525, 526, 530,
	434, 435, 436, 437, 280, 520, 294, 440, 439, 314,
	315, 969, 191, 212, 349, 1032, 426, 276, 549, 524,
	519, 198, 214, 908, 250, 919, 927, 0, 933, 941,
	942, 954, 956, 957, 958, 959, 977, 978, 980, 988,
	990, 993, 995, 1002, 1013, 1035, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 291, 295,
	301, 302, 305, 311, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 427, 432, 446, 447,
	448, 449, 450, 453, 454, 459, 460, 461, 462, 463,
	471, 472, 476, 499, 501, 513, 531, 536, 452, 287,
	508, 537, 0, 358, 968, 974, 360, 269, 290, 303,
	983, 523, 473, 218, 438, 278, 241, 1001, 1003, 203,
	237, 221, 247, 262, 265, 307, 370, 378, 407, 412,
	284, 259, 235, 431, 232, 456, 479, 480, 481, 483,
	374, 254, 411, 964, 992, 356, 489, 490, 299, 375,
	0, 0, 1021, 1006, 488, 0, 949, 1024, 918, 937,
	1034, 940, 943, 985, 897, 963, 394, 934, 890, 922,
	892, 929, 893, 920, 951, 258, 917, 1008, 967, 1023,
	347, 255, 899, 923, 408, 939, 197, 987, 458, 242,
	357, 354, 496, 270, 261, 257, 240, 300, 364, 406,
	478, 400, 1030, 351, 973, 0, 468, 379, 0, 0,
	0, 953, 1012, 961, 999, 948, 986, 907, 972, 1025,
	935, 982, 1026, 306, 238, 308, 196, 391, 469, 274,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	332, 341, 340, 321, 322, 324, 326, 331, 338, 344,
	931, 979, 1020, 932, 981, 253, 304, 260, 252, 493,
	1031, 1011, 896, 960, 1019, 0, 0, 220, 1022, 955,
	0, 984, 0, 1037, 891, 975, 0, 894, 898, 1033,
	1015, 926, 263, 0, 0, 0, 0, 0, 0, 0,
	952, 962, 996, 1000, 946, 0, 0, 0, 0, 0,
	0, 0, 924, 0, 971, 0, 0, 0, 903, 895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 950, 0, 0, 0, 0, 906, 0, 925,
	997, 0, 889, 285, 900, 380, 245, 0, 1004, 1014,
	947, 533, 1018, 945, 944, 991, 904, 1010, 938, 346,
	902, 313, 192, 216, 0, 936, 390, 433, 445, 1009,
	921, 930, 243, 928, 443, 404, 512, 224, 272, 430,
	410, 441, 417, 275, 970, 989, 442, 352, 498, 424,
	509, 534, 535, 251, 384, 521, 482, 529, 548, 217,
	248, 398, 475, 515, 465, 376, 494, 495, 312, 464,
	283, 195, 350, 540, 215, 451, 233, 222, 500, 518,
	277, 428, 204, 477, 507, 230, 455, 0, 0, 550,
	206, 505, 474, 372, 309, 310, 205, 0, 429, 256,
	281, 246, 393, 502, 503, 244, 551, 219, 528, 211,
	1227, 527, 386, 497, 506, 373, 362, 210, 504, 371,
	361, 317, 336, 337, 268, 292, 422, 355, 423, 293,
	382, 381, 383, 199, 516, 0, 200, 0, 470, 517,
	552, 225, 226, 228, 916, 267, 271, 279, 282, 288,
	289, 298, 348, 397, 421, 419, 425, 1005, 492, 510,
	522, 532, 538, 539, 541, 542, 543, 544, 545, 547,
	546, 385, 296, 466, 316, 353, 994, 1036, 403, 444,
	231, 514, 467, 911, 915, 909, 976, 910, 965, 966,
	912, 1027, 1028, 1029, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 0, 998, 905, 0, 913, 914, 1007, 1016,
	1017, 571, 363, 457, 511, 318, 330, 333, 323, 342,
	0, 343, 319, 320, 325, 327, 328, 329, 334, 335,
	339, 345, 239, 202, 369, 377, 491, 297, 207, 208,
	209, 484, 485, 486, 487, 525, 526, 530, 434, 435,
	436, 437, 280, 520, 294, 440, 439, 314, 315, 969,
	191, 212, 349, 1032, 426, 276, 549, 524, 519, 198,
	214, 908, 250, 919, 927, 0, 933, 941, 942, 954,
	956, 957, 958, 959, 977, 978, 980, 988, 990, 993,
	995, 1002, 1013, 1035, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 291, 295, 301, 302,
	305, 311, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 427, 432, 446, 447, 448, 449,
	450, 453, 454, 459, 460, 461, 462, 463, 471, 472,
	476, 499, 501, 513, 531, 536, 452, 287, 508, 537,
	0, 358, 968, 974, 360, 269, 290, 303, 983, 523,
	473, 218, 438, 278, 241, 1001, 1003, 203, 237, 221,
	247, 262, 265, 307, 370, 378, 407, 412, 284, 259,
	235, 431, 232, 456, 479, 480, 481, 483, 374, 254,
	411, 964, 992, 356, 489, 490, 299, 375, 0, 0,
	1021, 1006, 488, 0, 949, 1024, 918, 937, 1034, 940,
	943, 985, 897, 963, 394, 934, 890, 922, 892, 929,
	893, 920, 951, 258, 917, 1008, 967, 1023, 347, 255,
	899, 923, 408, 939, 197, 987, 458, 242, 357, 354,
	496, 270, 261, 257, 240, 300, 364, 406, 478, 400,
	1030, 351, 973, 0, 468, 379, 0, 0, 0, 953,
	1012, 961, 999, 948, 986, 907, 972, 1025, 935, 982,
	1026, 306, 238, 308, 196, 391, 469, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 332, 341,
	340, 321, 322, 324, 326, 331, 338, 344, 931, 979,
	1020, 932, 981, 253, 304, 260, 252, 493, 1031, 1011,
	896, 960, 1019, 0, 0, 220, 1022, 955, 0, 984,
	0, 1037, 891, 975, 0, 894, 898, 1033, 1015, 926,
	263, 0, 0, 0, 0, 0, 0, 0, 952, 962,
	996, 1000, 946, 0, 0, 0, 0, 0, 0, 0,
	924, 0, 971, 0, 0, 0, 903, 895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	950, 0, 0, 0, 0, 906, 0, 925, 997, 0,
	889, 285, 900, 380, 245, 0, 1004, 1014, 947, 533,
	1018, 945, 944, 991, 904, 1010, 938, 346, 902, 313,
	192, 216, 0, 936, 390, 433, 445, 1009, 921, 930,
	243, 928, 443, 404, 512, 224, 272, 430, 410, 441,
	417, 275, 970, 989, 442, 352, 498, 424, 509, 534,
	535, 251, 384, 521, 482, 529, 548, 217, 248, 398,
	475, 515, 465, 376, 494, 495, 312, 464, 283, 195,
	350, 540, 215, 451, 233, 222, 500, 518, 277, 428,
	204, 477, 507, 230, 455, 0, 0, 550, 206, 505,
	474, 372, 309, 310, 205, 0, 429, 256, 281, 246,
	393, 502, 503, 244, 551, 219, 528, 211, 1227, 527,
	386, 497, 506, 373, 362, 210, 504, 371, 361, 317,
	336, 337, 268, 292, 422, 355, 423, 293, 382, 381,
	383, 199, 516, 0, 200, 0, 470, 517, 552, 225,
	226, 228, 916, 267, 271, 279, 282, 288, 289, 298,
	348, 397, 421, 419, 425, 1005, 492, 510, 522, 532,
	538, 539, 541, 542, 543, 544, 545, 547, 546, 385,
	296, 466, 316, 353, 994, 1036, 403, 444, 231, 514,
	467, 911, 915, 909, 976, 910, 965, 966, 912, 1027,
	1028, 1029, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	0, 998, 905, 0, 913, 914, 1007, 1016, 1017, 571,
	363, 457, 511, 318, 330, 333, 323, 342, 0, 343,
	319, 320, 325, 327, 328, 329, 334, 335, 339, 345,
	239, 202, 369, 377, 491, 297, 207, 208, 209, 484,
	485, 486, 487, 525, 526, 530, 434, 435, 436, 437,
	280, 520, 294, 440, 439, 314, 315, 969, 191, 212,
	349, 1032, 426, 276, 549, 524, 519, 198, 214, 908,
	250, 919, 927, 0, 933, 941, 942, 954, 956, 957,
	958, 959, 977, 978, 980, 988, 990, 993, 995, 1002,
	1013, 1035, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 291, 295, 301, 302, 305, 311,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 427, 432, 446, 447, 448, 449, 450, 453,
	454, 459, 460, 461, 462, 463, 471, 472, 476, 499,
	501, 513, 531, 536, 452, 287, 508, 537, 0, 358,
	968, 974, 360, 269, 290, 303, 983, 523, 473, 218,
	438, 278, 241, 1001, 1003, 203, 237, 221, 247, 262,
	265, 307, 370, 378, 407, 412, 284, 259, 235, 431,
	232, 456, 479, 480, 481, 483, 374, 254, 411, 964,
	992, 356, 489, 490, 299, 375, 0, 0, 1021, 1006,
	488, 0, 949, 1024, 918, 937, 1034, 940, 943, 985,
	897, 963, 394, 934, 890, 922, 892, 929, 893, 920,
	951, 258, 917, 1008, 967, 1023, 347, 255, 899, 923,
	408, 939, 197, 987, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 1030, 351,
	973, 0, 468, 379, 0, 0, 0, 953, 1012, 961,
	999, 948, 986, 907, 972, 1025, 935, 982, 1026, 306,
	238, 308, 196, 391, 469, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 332, 341, 340, 321,
	322, 324, 326, 331, 338, 344, 931, 979, 1020, 932,
	981, 253, 304, 260, 252, 493, 1031, 1011, 896, 960,
	1019, 0, 0, 1038, 1022, 955, 0, 984, 0, 1037,
	891, 975, 0, 894, 898, 1033, 1015, 926, 263, 0,
	0, 0, 0, 0, 0, 0, 952, 962, 996, 1000,
	946, 0, 0, 0, 0, 0, 0, 0, 924, 0,
	971, 0, 0, 0, 903, 895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 0, 0, 906, 0, 925, 997, 0, 889, 285,
	900, 380, 245, 0, 1004, 1014, 947, 533, 1018, 945,
	944, 991, 904, 1010, 938, 346, 902, 313, 192, 216,
	0, 936, 390, 433, 445, 1009, 921, 930, 243, 928,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	970, 989, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 901, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 336, 337,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	916, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 1005, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 888, 882, 881,
	316, 353, 994, 1036, 403, 444, 231, 514, 467, 911,
	915, 909, 976, 910, 965, 966, 912, 1027, 1028, 1029,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 998,
	905, 0, 913, 914, 1007, 1016, 1017, 571, 363, 457,
	511, 318, 330, 333, 323, 342, 0, 343, 319, 320,
	325, 327, 328, 329, 334, 335, 339, 345, 239, 202,
	369, 377, 491, 297, 207, 208, 209, 484, 485, 486,
	487, 525, 526, 530, 434, 435, 436, 437, 280, 520,
	294, 440, 439, 314, 315, 969, 191, 212, 349, 1032,
	426, 276, 549, 524, 519, 198, 214, 908, 250, 919,
	927, 0, 933, 941, 942, 954, 956, 957, 958, 959,
	977, 978, 980, 988, 990, 993, 995, 1002, 1013, 1035,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 968, 974,
	360, 269, 290, 303, 983, 523, 473, 218, 438, 278,
	241, 1001, 1003, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 964, 992, 356,
	489, 490, 299, 375, 0, 0, 1021, 1006, 488, 0,
	949, 1024, 918, 937, 1034, 940, 943, 985, 897, 963,
	394, 934, 890, 922, 892, 929, 893, 920, 951, 258,
	917, 1008, 967, 1023, 347, 255, 899, 923, 408, 939,
	197, 987, 458, 242, 357, 354, 496, 270, 261, 257,
	240, 300, 364, 406, 478, 400, 1030, 351, 973, 0,
	468, 379, 0, 0, 0, 953, 1012, 961, 999, 948,
	986, 907, 972, 1025, 935, 982, 1026, 306, 238, 308,
	196, 391, 469, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 332, 341, 340, 321, 322, 324,
	326, 331, 338, 344, 931, 979, 1020, 932, 981, 253,
	304, 260, 252, 493, 1031, 1011, 896, 960, 1019, 0,
	0, 1038, 1022, 955, 0, 984, 0, 1037, 891, 975,
	0, 894, 898, 1033, 1015, 926, 263, 0, 0, 0,
	0, 0, 0, 0, 952, 962, 996, 1000, 946, 0,
	0, 0, 0, 0, 0, 0, 924, 0, 971, 0,
	0, 0, 903, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 950, 0, 0, 0,
	0, 906, 0, 925, 997, 0, 889, 285, 900, 380,
	245, 0, 1004, 1014, 947, 533, 1018, 945, 944, 991,
	904, 1010, 938, 346, 902, 313, 192, 216, 0, 936,
	390, 433, 445, 1009, 921, 930, 243, 928, 443, 404,
	512, 224, 272, 430, 410, 441, 417, 275, 970, 989,
	442, 352, 498, 424, 509, 534, 535, 251, 384, 521,
	482, 529, 548, 217, 248, 398, 475, 515, 465, 376,
	494, 495, 312, 464, 283, 195, 350, 540, 215, 451,
	233, 222, 500, 518, 277, 428, 204, 477, 1476, 230,
	455, 0, 0, 550, 206, 505, 474, 372, 309, 310,
	205, 0, 429, 256, 281, 246, 393, 502, 503, 244,
	551, 219, 528, 211, 901, 527, 386, 497, 506, 373,
	362, 210, 504, 371, 361, 317, 336, 337, 268, 292,
	422, 355, 423, 293, 382, 381, 383, 199, 516, 0,
	200, 0, 470, 517, 552, 225, 226, 228, 916, 267,
	271, 279, 282, 288, 289, 298, 348, 397, 421, 419,
	425, 1005, 492, 510, 522, 532, 538, 539, 541, 542,
	543, 544, 545, 547, 546, 888, 882, 881, 316, 353,
	994, 1036, 403, 444, 231, 514, 467, 911, 915, 909,
	976, 910, 965, 966, 912, 1027, 1028, 1029, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 0, 998, 905, 0,
	913, 914, 1007, 1016, 1017, 571, 363, 457, 511, 318,
	330, 333, 323, 342, 0, 343, 319, 320, 325, 327,
	328, 329, 334, 335, 339, 345, 239, 202, 369, 377,
	491, 297, 207, 208, 209, 484, 485, 486, 487, 525,
	526, 530, 434, 435, 436, 437, 280, 520, 294, 440,
	439, 314, 315, 969, 191, 212, 349, 1032, 426, 276,
	549, 524, 519, 198, 214, 908, 250, 919, 927, 0,
	933, 941, 942, 954, 956, 957, 958, 959, 977, 978,
	980, 988, 990, 993, 995, 1002, 1013, 1035, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	291, 295, 301, 302, 305, 311, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 427, 432,
	446, 447, 448, 449, 450, 453, 454, 459, 460, 461,
	462, 463, 471, 472, 476, 499, 501, 513, 531, 536,
	452, 287, 508, 537, 0, 358, 968, 974, 360, 269,
	290, 303, 983, 523, 473, 218, 438, 278, 241, 1001,
	1003, 203, 237, 221, 247, 262, 265, 307, 370, 378,
	407, 412, 284, 259, 235, 431, 232, 456, 479, 480,
	481, 483, 374, 254, 411, 964, 992, 356, 489, 490,
	299, 375, 0, 0, 1021, 1006, 488, 0, 949, 1024,
	918, 937, 1034, 940, 943, 985, 897, 963, 394, 934,
	890, 922, 892, 929, 893, 920, 951, 258, 917, 1008,
	967, 1023, 347, 255, 899, 923, 408, 939, 197, 987,
	458, 242, 357, 354, 496, 270, 261, 257, 240, 300,
	364, 406, 478, 400, 1030, 351, 973, 0, 468, 379,
	0, 0, 0, 953, 1012, 961, 999, 948, 986, 907,
	972, 1025, 935, 982, 1026, 306, 238, 308, 196, 391,
	469, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 332, 341, 340, 321, 322, 324, 326, 331,
	338, 344, 931, 979, 1020, 932, 981, 253, 304, 260,
	252, 493, 1031, 1011, 896, 960, 1019, 0, 0, 1038,
	1022, 955, 0, 984, 0, 1037, 891, 975, 0, 894,
	898, 1033, 1015, 926, 263, 0, 0, 0, 0, 0,
	0, 0, 952, 962, 996, 1000, 946, 0, 0, 0,
	0, 0, 0, 0, 924, 0, 971, 0, 0, 0,
	903, 895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 950, 0, 0, 0, 0, 906,
	0, 925, 997, 0, 889, 285, 900, 380, 245, 0,
	1004, 1014, 947, 533, 1018, 945, 944, 991, 904, 1010,
	938, 346, 902, 313, 192, 216, 0, 936, 390, 433,
	445, 1009, 921, 930, 243, 928, 443, 404, 512, 224,
	272, 430, 410, 441, 417, 275, 970, 989, 442, 352,
	498, 424, 509, 534, 535, 251, 384, 521, 482, 529,
	548, 217, 248, 398, 475, 515, 465, 376, 494, 495,
	312, 464, 283, 195, 350, 540, 215, 451, 233, 222,
	500, 518, 277, 428, 204, 477, 879, 230, 455, 0,
	0, 550, 206, 505, 474, 372, 309, 310, 205, 0,
	429, 256, 281, 246, 393, 502, 503, 244, 551, 219,
	528, 211, 901, 527, 386, 497, 506, 373, 362, 210,
	504, 371, 361, 317, 336, 337, 268, 292, 422, 355,
	423, 293, 382, 381, 383, 199, 516, 0, 200, 0,
	470, 517, 552, 225, 226, 228, 916, 267, 271, 279,
	282, 288, 289, 298, 348, 397, 421, 419, 425, 1005,
	492, 510, 522, 532, 538, 539, 541, 542, 543, 544,
	545, 547, 546, 888, 882, 881, 316, 353, 994, 1036,
	403, 444, 231, 514, 467, 911, 915, 909, 976, 910,
	965, 966, 912, 1027, 1028, 1029, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 0, 998, 905, 0, 913, 914,
	1007, 1016, 1017, 571, 363, 457, 511, 318, 330, 333,
	323, 342, 0, 343, 319, 320, 325, 327, 328, 329,
	334, 335, 339, 345, 239, 202, 369, 377, 491, 297,
	207, 208, 209, 484, 485, 486, 487, 525, 526, 530,
	434, 435, 436, 437, 280, 520, 294, 440, 439, 314,
	315, 969, 191, 212, 349, 1032, 426, 276, 549, 524,
	519, 198, 214, 908, 250, 919, 927, 0, 933, 941,
	942, 954, 956, 957, 958, 959, 977, 978, 980, 988,
	990, 993, 995, 1002, 1013, 1035, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 291, 295,
	301, 302, 305, 311, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 427, 432, 446, 447,
	448, 449, 450, 453, 454, 459, 460, 461, 462, 463,
	471, 472, 476, 499, 501, 513, 531, 536, 452, 287,
	508, 537, 0, 358, 968, 974, 360, 269, 290, 303,
	983, 523, 473, 218, 438, 278, 241, 1001, 1003, 203,
	237, 221, 247, 262, 265, 307, 370, 378, 407, 412,
	284, 259, 235, 431, 232, 456, 479, 480, 481, 483,
	374, 254, 411, 964, 992, 356, 489, 490, 299, 375,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 1909,
	0, 653, 0, 0, 0, 258, 658, 0, 0, 0,
	347, 255, 0, 1910, 408, 0, 197, 0, 458, 242,
	357, 354, 496, 270, 261, 257, 240, 300, 364, 406,
	478, 400, 664, 351, 0, 0, 468, 379, 0, 0,
	0, 0, 0, 660, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 238, 308, 196, 391, 469, 274,
	0, 87, 0, 0, 188, 189, 190, 772, 780, 781,
	782, 783, 784, 773, 775, 0, 0, 229, 774, 236,
	691, 693, 692, 707, 708, 709, 710, 711, 712, 713,
	689, 777, 785, 786, 0, 253, 304, 260, 252, 493,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 636, 650, 0, 663, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 648,
	868, 0, 0, 0, 740, 0, 649, 0, 0, 657,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 380, 245, 0, 739, 0,
	0, 533, 0, 0, 737, 0, 0, 0, 0, 346,
	0, 313, 192, 216, 0, 0, 390, 433, 445, 0,
	0, 0, 243, 0, 443, 404, 512, 224, 272, 430,
	410, 441, 417, 275, 0, 0, 442, 352, 498, 424,
	509, 534, 535, 251, 384, 521, 482, 529, 548, 217,
	248, 398, 475, 515, 465, 376, 494, 495, 312, 464,
	283, 195, 350, 540, 215, 451, 233, 222, 500, 518,
	277, 428, 204, 477, 507, 230, 455, 0, 0, 550,
	206, 505, 474, 372, 309, 310, 205, 0, 429, 256,
	281, 246, 393, 502, 503, 244, 551, 219, 528, 211,
	0, 527, 386, 497, 506, 373, 362, 210, 504, 371,
	361, 317, 702, 703, 268, 292, 422, 355, 423, 293,
	382, 381, 383, 199, 516, 0, 200, 0, 470, 517,
	552, 225, 226, 228, 0, 267, 271, 279, 282, 288,
	289, 298, 348, 397, 421, 419, 425, 0, 492, 510,
	522, 532, 538, 539, 541, 542, 543, 544, 545, 547,
	546, 385, 296, 466, 316, 353, 0, 0, 403, 444,
	231, 514, 467, 747, 738, 668, 751, 670, 748, 749,
	665, 666, 669, 750, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 0, 741, 656, 655, 0, 662, 0, 687,
	688, 690, 694, 695, 696, 704, 705, 706, 714, 716,
	717, 715, 718, 719, 720, 723, 724, 725, 726, 721,
	722, 727, 671, 675, 672, 673, 674, 686, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 761, 762,
	763, 764, 765, 766, 697, 701, 700, 698, 699, 654,
	191, 212, 349, 0, 426, 276, 549, 524, 519, 198,
	214, 752, 250, 753, 0, 0, 757, 0, 0, 0,
	759, 758, 0, 760, 731, 730, 0, 0, 754, 755,
	0, 756, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 291, 295, 301, 302,
	305, 311, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 427, 432, 446, 447, 448, 449,
	450, 453, 454, 459, 460, 461, 462, 463, 471, 472,
	476, 499, 501, 513, 531, 536, 452, 287, 508, 537,
	0, 358, 0, 0, 360, 269, 290, 303, 0, 523,
	473, 218, 438, 278, 241, 779, 0, 203, 237, 221,
	247, 262, 265, 307, 370, 378, 407, 412, 284, 259,
	235, 431, 232, 456, 479, 480, 481, 483, 374, 254,
	411, 0, 375, 356, 489, 490, 299, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 653, 0, 0, 0, 258, 658,
	0, 0, 0, 347, 255, 0, 0, 408, 0, 197,
	0, 458, 242, 357, 354, 496, 270, 261, 257, 240,
	300, 364, 406, 478, 400, 664, 351, 0, 0, 468,
	379, 0, 0, 0, 0, 0, 660, 661, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 238, 308, 196,
	391, 469, 274, 0, 87, 0, 0, 188, 189, 190,
	772, 780, 781, 782, 783, 784, 773, 775, 0, 0,
	229, 774, 236, 691, 693, 692, 707, 708, 709, 710,
	711, 712, 713, 689, 777, 785, 786, 0, 253, 304,
	260, 252, 493, 0, 0, 1861, 1862, 1863, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 636, 650,
	0, 663, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 647, 648, 0, 0, 0, 0, 740, 0, 649,
	0, 0, 657, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 380, 245,
	0, 739, 0, 0, 533, 0, 0, 737, 0, 0,
	0, 0, 346, 0, 313, 192, 216, 0, 0, 390,
	433, 445, 0, 0, 0, 243, 0, 443, 404, 512,
	224, 272, 430, 410, 441, 417, 275, 0, 0, 442,
	352, 498, 424, 509, 534, 535, 251, 384, 521, 482,
	529, 548, 217, 248, 398, 475, 515, 465, 376, 494,
	495, 312, 464, 283, 195, 350, 540, 215, 451, 233,
	222, 500, 518, 277, 428, 204, 477, 507, 230, 455,
	0, 0, 550, 206, 505, 474, 372, 309, 310, 205,
	0, 429, 256, 281, 246, 393, 502, 503, 244, 551,
	219, 528, 211, 0, 527, 386, 497, 506, 373, 362,
	210, 504, 371, 361, 317, 702, 703, 268, 292, 422,
	355, 423, 293, 382, 381, 383, 199, 516, 0, 200,
	0, 470, 517, 552, 225, 226, 228, 0, 267, 271,
	279, 282, 288, 289, 298, 348, 397, 421, 419, 425,
	0, 492, 510, 522, 532, 538, 539, 541, 542, 543,
	544, 545, 547, 546, 385, 296, 466, 316, 353, 0,
	0, 403, 444, 231, 514, 467, 747, 738, 668, 751,
	670, 748, 749, 665, 666, 669, 750, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 0, 741, 656, 655, 0,
	662, 0, 687, 688, 690, 694, 695, 696, 704, 705,
	706, 714, 716, 717, 715, 718, 719, 720, 723, 724,
	725, 726, 721, 722, 727, 671, 675, 672, 673, 674,
	686, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 761, 762, 763, 764, 765, 766, 697, 701, 700,
	698, 699, 654, 191, 212, 349, 0, 426, 276, 549,
	524, 519, 198, 214, 752, 250, 753, 0, 0, 757,
	0, 0, 0, 759, 758, 0, 760, 731, 730, 0,
	0, 754, 755, 0, 756, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 291,
	295, 301, 302, 305, 311, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 427, 432, 446,
	447, 448, 449, 450, 453, 454, 459, 460, 461, 462,
	463, 471, 472, 476, 499, 501, 513, 531, 536, 452,
	287, 508, 537, 0, 358, 0, 0, 360, 269, 290,
	303, 0, 523, 473, 218, 438, 278, 241, 779, 0,
	203, 237, 221, 247, 262, 265, 307, 370, 378, 407,
	412, 284, 259, 235, 431, 232, 456, 479, 480, 481,
	483, 374, 254, 411, 0, 375, 356, 489, 490, 299,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 653, 0, 0,
	0, 258, 658, 0, 0, 0, 347, 255, 0, 0,
	408, 0, 197, 0, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 664, 351,
	0, 0, 468, 379, 0, 0, 0, 0, 0, 660,
	661, 0, 0, 0, 0, 0, 0, 2000, 0, 306,
	238, 308, 196, 391, 469, 274, 0, 87, 0, 0,
	188, 189, 190, 772, 780, 781, 782, 783, 784, 773,
	775, 0, 0, 229, 774, 236, 691, 693, 692, 707,
	708, 709, 710, 711, 712, 713, 689, 777, 785, 786,
	2001, 253, 304, 260, 252, 493, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 636, 650, 0, 663, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 648, 0, 0, 0, 0,
	740, 0, 649, 0, 0, 657, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 380, 245, 0, 739, 0, 0, 533, 0, 0,
	737, 0, 0, 0, 0, 346, 0, 313, 192, 216,
	0, 0, 390, 433, 445, 0, 0, 0, 243, 0,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	0, 0, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 0, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 702, 703,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	0, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 0, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 385, 296, 466,
	316, 353, 0, 0, 403, 444, 231, 514, 467, 747,
	738, 668, 751, 670, 748, 749, 665, 666, 669, 750,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 741,
	656, 655, 0, 662, 0, 687, 688, 690, 694, 695,
	696, 704, 705, 706, 714, 716, 717, 715, 718, 719,
	720, 723, 724, 725, 726, 721, 722, 727, 671, 675,
	672, 673, 674, 686, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 761, 762, 763, 764, 765, 766,
	697, 701, 700, 698, 699, 654, 191, 212, 349, 0,
	426, 276, 549, 524, 519, 198, 214, 752, 250, 753,
	0, 0, 757, 0, 0, 0, 759, 758, 0, 760,
	731, 730, 0, 0, 754, 755, 0, 756, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 0, 0,
	360, 269, 290, 303, 0, 523, 473, 218, 438, 278,
	241, 779, 0, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 0, 0, 356,
	489, 490, 299, 375, 0, 0, 0, 78, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 653, 0, 0, 0, 258,
	658, 0, 0, 0, 347, 255, 0, 0, 408, 0,
	197, 0, 458, 242, 357, 354, 496, 270, 261, 257,
	240, 300, 364, 406, 478, 400, 664, 351, 0, 0,
	468, 379, 0, 0, 0, 0, 0, 660, 661, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 238, 308,
	196, 391, 469, 274, 0, 87, 0, 0, 188, 189,
	190, 772, 780, 781, 782, 783, 784, 773, 775, 0,
	0, 229, 774, 236, 691, 693, 692, 707, 708, 709,
	710, 711, 712, 713, 689, 777, 785, 786, 0, 253,
	304, 260, 252, 493, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 636,
	650, 0, 663, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 648, 0, 0, 0, 0, 740, 0,
	649, 0, 0, 657, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 380,
	245, 0, 739, 0, 0, 533, 0, 0, 737, 0,
	0, 0, 0, 346, 0, 313, 192, 216, 0, 0,
	390, 433, 445, 0, 0, 0, 243, 0, 443, 404,
	512, 224, 272, 430, 410, 441, 417, 275, 0, 0,
	442, 352, 498, 424, 509, 534, 535, 251, 384, 521,
	482, 529, 548, 217, 248, 398, 475, 515, 465, 376,
	494, 495, 312, 464, 283, 195, 350, 540, 215, 451,
	233, 222, 500, 518, 277, 428, 204, 477, 507, 230,
	455, 0, 0, 550, 206, 505, 474, 372, 309, 310,
	205, 0, 429, 256, 281, 246, 393, 502, 503, 244,
	551, 219, 528, 211, 0, 527, 386, 497, 506, 373,
	362, 210, 504, 371, 361, 317, 702, 703, 268, 292,
	422, 355, 423, 293, 382, 381, 383, 199, 516, 0,
	200, 0, 470, 517, 552, 225, 226, 228, 0, 267,
	271, 279, 282, 288, 289, 298, 348, 397, 421, 419,
	425, 0, 492, 510, 522, 532, 538, 539, 541, 542,
	543, 544, 545, 547, 546, 385, 296, 466, 316, 353,
	0, 0, 403, 444, 231, 514, 467, 747, 738, 668,
	751, 670, 748, 749, 665, 666, 669, 750, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 0, 741, 656, 655,
	0, 662, 0, 687, 688, 690, 694, 695, 696, 704,
	705, 706, 714, 716, 717, 715, 718, 719, 720, 723,
	724, 725, 726, 721, 722, 727, 671, 675, 672, 673,
	674, 686, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 761, 762, 763, 764, 765, 766, 697, 701,
	700, 698, 699, 654, 191, 212, 349, 86, 426, 276,
	549, 524, 519, 198, 214, 752, 250, 753, 0, 0,
	757, 0, 0, 0, 759, 758, 0, 760, 731, 730,
	0, 0, 754, 755, 0, 756, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	291, 295, 301, 302, 305, 311, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 427, 432,
	446, 447, 448, 449, 450, 453, 454, 459, 460, 461,
	462, 463, 471, 472, 476, 499, 501, 513, 531, 536,
	452, 287, 508, 537, 0, 358, 0, 0, 360, 269,
	290, 303, 0, 523, 473, 218, 438, 278, 241, 779,
	0, 203, 237, 221, 247, 262, 265, 307, 370, 378,
	407, 412, 284, 259, 235, 431, 232, 456, 479, 480,
	481, 483, 374, 254, 411, 0, 375, 356, 489, 490,
	299, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 653, 0,
	0, 0, 258, 658, 0, 0, 0, 347, 255, 0,
	0, 408, 0, 197, 0, 458, 242, 357, 354, 496,
	270, 261, 257, 240, 300, 364, 406, 478, 400, 664,
	351, 0, 0, 468, 379, 0, 0, 0, 0, 0,
	660, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 238, 308, 196, 391, 469, 274, 0, 87, 0,
	0, 188, 189, 190, 772, 780, 781, 782, 783, 784,
	773, 775, 0, 0, 229, 774, 236, 691, 693, 692,
	707, 708, 709, 710, 711, 712, 713, 689, 777, 785,
	786, 0, 253, 304, 260, 252, 493, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 636, 650, 0, 663, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 648, 0, 0, 0,
	0, 740, 0, 649, 0, 0, 657, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 380, 245, 0, 739, 0, 0, 533, 0,
	0, 737, 0, 0, 0, 0, 346, 0, 313, 192,
	216, 0, 0, 390, 433, 445, 0, 0, 0, 243,
	0, 443, 404, 512, 224, 272, 430, 410, 441, 417,
	275, 3253, 0, 442, 352, 498, 424, 509, 534, 535,
	251, 384, 521, 482, 529, 548, 217, 248, 398, 475,
	515, 465, 376, 494, 495, 312, 464, 283, 195, 350,
	540, 215, 451, 233, 222, 500, 518, 277, 428, 204,
	477, 507, 230, 455, 0, 0, 550, 206, 505, 474,
	372, 309, 310, 205, 0, 429, 256, 281, 246, 393,
	502, 503, 244, 551, 219, 528, 211, 0, 527, 386,
	497, 506, 373, 362, 210, 504, 371, 361, 317, 702,
	703, 268, 292, 422, 355, 423, 293, 382, 381, 383,
	199, 516, 0, 200, 0, 470, 517, 552, 225, 226,
	228, 0, 267, 271, 279, 282, 288, 289, 298, 348,
	397, 421, 419, 425, 0, 492, 510, 522, 532, 538,
	539, 541, 542, 543, 544, 545, 547, 546, 385, 296,
	466, 316, 353, 0, 0, 403, 444, 231, 514, 467,
	747, 738, 668, 751, 670, 748, 749, 665, 666, 669,
	750, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 0,
	741, 656, 655, 0, 662, 0, 687, 688, 690, 694,
	695, 696, 704, 705, 706, 714, 716, 717, 715, 718,
	719, 720, 723, 724, 725, 726, 721, 722, 727, 671,
	675, 672, 673, 674, 686, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 761, 762, 763, 764, 765,
	766, 697, 701, 700, 698, 699, 654, 191, 212, 349,
	0, 426, 276, 549, 524, 519, 198, 214, 752, 250,
	753, 0, 0, 757, 0, 0, 0, 759, 758, 0,
	760, 731, 730, 0, 0, 754, 755, 0, 756, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 291, 295, 301, 302, 305, 311, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 427, 432, 446, 447, 448, 449, 450, 453, 454,
	459, 460, 461, 462, 463, 471, 472, 476, 499, 501,
	513, 531, 536, 452, 287, 508, 537, 0, 358, 0,
	0, 360, 269, 290, 303, 0, 523, 473, 218, 438,
	278, 241, 779, 0, 203, 237, 221, 247, 262, 265,
	307, 370, 378, 407, 412, 284, 259, 235, 431, 232,
	456, 479, 480, 481, 483, 374, 254, 411, 0, 375,
	356, 489, 490, 299, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 653, 0, 0, 0, 258, 658, 0, 0, 0,
	347, 255, 0, 0, 408, 0, 197, 0, 458, 242,
	357, 354, 496, 270, 261, 257, 240, 300, 364, 406,
	478, 400, 664, 351, 0, 0, 468, 379, 0, 0,
	0, 0, 0, 660, 661, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 238, 308, 196, 391, 469, 274,
	0, 87, 0, 1443, 188, 189, 190, 772, 780, 781,
	782, 783, 784, 773, 775, 0, 0, 229, 774, 236,
	691, 693, 692, 707, 708, 709, 710, 711, 712, 713,
	689, 777, 785, 786, 0, 253, 304, 260, 252, 493,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 636, 650, 0, 663, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 648,
	0, 0, 0, 0, 740, 0, 649, 0, 0, 657,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 799, 800, 801, 802, 803, 804, 805, 806,
	807, 808, 809, 810, 811, 812, 813, 814, 815, 816,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 380, 245, 0, 739, 0,
	0, 533, 0, 0, 737, 0, 0, 0, 0, 346,
	0, 313, 192, 216, 0, 0, 390, 433, 445, 0,
	0, 0, 243, 0, 443, 404, 512, 224, 272, 430,
	410, 441, 417, 275, 0, 0, 442, 352, 498, 424,
	509, 534, 535, 251, 384, 521, 482, 529, 548, 217,
	248, 398, 475, 515, 465, 376, 494, 495, 312, 464,
	283, 195, 350, 540, 215, 451, 233, 222, 500, 518,
	277, 428, 204, 477, 507, 230, 455, 0, 0, 550,
	206, 505, 474, 372, 309, 310, 205, 0, 429, 256,
	281, 246, 393, 502, 503, 244, 551, 219, 528, 211,
	0, 527, 386, 497, 506, 373, 362, 210, 504, 371,
	361, 317, 702, 703, 268, 292, 422, 355, 423, 293,
	382, 381, 383, 199, 516, 0, 200, 0, 470, 517,
	552, 225, 226, 228, 0, 267, 271, 279, 282, 288,
	289, 298, 348, 397, 421, 419, 425, 0, 492, 510,
	522, 532, 538, 539, 541, 542, 543, 544, 545, 547,
	546, 385, 296, 466, 316, 353, 0, 0, 403, 444,
	231, 514, 467, 747, 738, 668, 751, 670, 748, 749,
	665, 666, 669, 750, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 0, 741, 656, 655, 0, 662, 0, 687,
	688, 690, 694, 695, 696, 704, 705, 706, 714, 716,
	717, 715, 718, 719, 720, 723, 724, 725, 726, 721,
	722, 727, 671, 675, 672, 673, 674, 686, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 761, 762,
	763, 764, 765, 766, 697, 701, 700, 698, 699, 654,
	191, 212, 349, 0, 426, 276, 549, 524, 519, 198,
	214, 752, 250, 753, 0, 0, 757, 0, 0, 0,
	759, 758, 0, 760, 731, 730, 0, 0, 754, 755,
	0, 756, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 291, 295, 301, 302,
	305, 311, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 427, 432, 446, 447, 448, 449,
	450, 453, 454, 459, 460, 461, 462, 463, 471, 472,
	476, 499, 501, 513, 531, 536, 452, 287, 508, 537,
	0, 358, 0, 0, 360, 269, 290, 303, 0, 523,
	473, 218, 438, 278, 241, 779, 0, 203, 237, 221,
	247, 262, 265, 307, 370, 378, 407, 412, 284, 259,
	235, 431, 232, 456, 479, 480, 481, 483, 374, 254,
	411, 0, 375, 356, 489, 490, 299, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 653, 0, 0, 0, 258, 658,
	0, 0, 0, 347, 255, 0, 0, 408, 0, 197,
	0, 458, 242, 357, 354, 496, 270, 261, 257, 240,
	300, 364, 406, 478, 400, 664, 351, 0, 0, 468,
	379, 0, 0, 0, 0, 0, 660, 661, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 238, 308, 196,
	391, 469, 274, 0, 87, 0, 0, 188, 189, 190,
	772, 780, 781, 782, 783, 784, 773, 775, 0, 0,
	229, 774, 236, 691, 693, 692, 707, 708, 709, 710,
	711, 712, 713, 689, 777, 785, 786, 0, 253, 304,
	260, 252, 493, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 636, 650,
	0, 663, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 647, 648, 868, 0, 0, 0, 740, 0, 649,
	0, 0, 657, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 380, 245,
	0, 739, 0, 0, 533, 0, 0, 737, 0, 0,
	0, 0, 346, 0, 313, 192, 216, 0, 0, 390,
	433, 445, 0, 0, 0, 243, 0, 443, 404, 512,
	224, 272, 430, 410, 441, 417, 275, 0, 0, 442,
	352, 498, 424, 509, 534, 535, 251, 384, 521, 482,
	529, 548, 217, 248, 398, 475, 515, 465, 376, 494,
	495, 312, 464, 283, 195, 350, 540, 215, 451, 233,
	222, 500, 518, 277, 428, 204, 477, 507, 230, 455,
	0, 0, 550, 206, 505, 474, 372, 309, 310, 205,
	0, 429, 256, 281, 246, 393, 502, 503, 244, 551,
	219, 528, 211, 0, 527, 386, 497, 506, 373, 362,
	210, 504, 371, 361, 317, 702, 703, 268, 292, 422,
	355, 423, 293, 382, 381, 383, 199, 516, 0, 200,
	0, 470, 517, 552, 225, 226, 228, 0, 267, 271,
	279, 282, 288, 289, 298, 348, 397, 421, 419, 425,
	0, 492, 510, 522, 532, 538, 539, 541, 542, 543,
	544, 545, 547, 546, 385, 296, 466, 316, 353, 0,
	0, 403, 444, 231, 514, 467, 747, 738, 668, 751,
	670, 748, 749, 665, 666, 669, 750, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 0, 741, 656, 655, 0,
	662, 0, 687, 688, 690, 694, 695, 696, 704, 705,
	706, 714, 716, 717, 715, 718, 719, 720, 723, 724,
	725, 726, 721, 722, 727, 671, 675, 672, 673, 674,
	686, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 761, 762, 763, 764, 765, 766, 697, 701, 700,
	698, 699, 654, 191, 212, 349, 0, 426, 276, 549,
	524, 519, 198, 214, 752, 250, 753, 0, 0, 757,
	0, 0, 0, 759, 758, 0, 760, 731, 730, 0,
	0, 754, 755, 0, 756, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 291,
	295, 301, 302, 305, 311, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 427, 432, 446,
	447, 448, 449, 450, 453, 454, 459, 460, 461, 462,
	463, 471, 472, 476, 499, 501, 513, 531, 536, 452,
	287, 508, 537, 0, 358, 0, 0, 360, 269, 290,
	303, 0, 523, 473, 218, 438, 278, 241, 779, 0,
	203, 237, 221, 247, 262, 265, 307, 370, 378, 407,
	412, 284, 259, 235, 431, 232, 456, 479, 480, 481,
	483, 374, 254, 411, 0, 375, 356, 489, 490, 299,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 653, 0, 0,
	0, 258, 658, 0, 0, 0, 347, 255, 0, 0,
	408, 0, 197, 0, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 664, 351,
	0, 0, 468, 379, 0, 0, 0, 0, 0, 660,
	661, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	238, 308, 196, 391, 469, 274, 0, 87, 0, 0,
	188, 189, 190, 772, 780, 781, 782, 783, 784, 773,
	775, 0, 0, 229, 774, 236, 691, 693, 692, 707,
	708, 709, 710, 711, 712, 713, 689, 777, 785, 786,
	0, 253, 304, 260, 252, 493, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 636, 650, 0, 663, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 648, 0, 0, 0, 0,
	740, 0, 649, 0, 0, 657, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 380, 245, 0, 739, 0, 0, 533, 0, 0,
	737, 0, 0, 0, 0, 346, 0, 313, 192, 216,
	0, 0, 390, 433, 445, 0, 0, 0, 243, 0,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	0, 0, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 0, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 702, 703,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	0, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 0, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 385, 296, 466,
	316, 353, 0, 0, 403, 444, 231, 514, 467, 747,
	738, 668, 751, 670, 748, 749, 665, 666, 669, 750,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 741,
	656, 655, 0, 662, 0, 687, 688, 690, 694, 695,
	696, 704, 705, 706, 714, 716, 717, 715, 718, 719,
	720, 723, 724, 725, 726, 721, 722, 727, 671, 675,
	672, 673, 674, 686, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 761, 762, 763, 764, 765, 766,
	697, 701, 700, 698, 699, 654, 191, 212, 349, 0,
	426, 276, 549, 524, 519, 198, 214, 752, 250, 753,
	0, 0, 757, 0, 0, 0, 759, 758, 0, 760,
	731, 730, 0, 0, 754, 755, 0, 756, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 0, 0,
	360, 269, 290, 303, 0, 523, 473, 218, 438, 278,
	241, 779, 0, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 0, 375, 356,
	489, 490, 299, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	653, 0, 0, 0, 258, 658, 0, 0, 0, 347,
	255, 0, 0, 408, 0, 197, 0, 458, 242, 357,
	354, 496, 270, 261, 257, 240, 300, 364, 406, 478,
	400, 664, 351, 0, 0, 468, 379, 0, 0, 0,
	0, 0, 660, 661, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 238, 308, 196, 391, 469, 274, 0,
	87, 0, 0, 188, 189, 190, 772, 780, 781, 782,
	783, 784, 773, 775, 0, 0, 229, 774, 236, 691,
	693, 692, 707, 708, 709, 710, 711, 712, 713, 689,
	777, 785, 786, 0, 253, 304, 260, 252, 493, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 650, 0, 663, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 648, 0,
	0, 0, 0, 740, 0, 649, 0, 0, 657, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 809, 810, 811, 812, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 380, 245, 0, 739, 0, 0,
	533, 0, 0, 737, 0, 0, 0, 0, 346, 0,
	313, 192, 216, 0, 0, 390, 433, 445, 0, 0,
	0, 243, 0, 443, 404, 512, 224, 272, 430, 410,
	441, 417, 275, 0, 0, 442, 352, 498, 424, 509,
	534, 535, 251, 384, 521, 482, 529, 548, 217, 248,
	398, 475, 515, 465, 376, 494, 495, 312, 464, 283,
	195, 350, 540, 215, 451, 233, 222, 500, 518, 277,
	428, 204, 477, 507, 230, 455, 0, 0, 550, 206,
	505, 474, 372, 309, 310, 205, 0, 429, 256, 281,
	246, 393, 502, 503, 244, 551, 219, 528, 211, 0,
	527, 386, 497, 506, 373, 362, 210, 504, 371, 361,
	317, 702, 703, 268, 292, 422, 355, 423, 293, 382,
	381, 383, 199, 516, 0, 200, 0, 470, 517, 552,
	225, 226, 228, 0, 267, 271, 279, 282, 288, 289,
	298, 348, 397, 421, 419, 425, 0, 492, 510, 522,
	532, 538, 539, 541, 542, 543, 544, 545, 547, 546,
	385, 296, 466, 316, 353, 0, 0, 403, 444, 231,
	514, 467, 747, 738, 668, 751, 670, 748, 749, 665,
	666, 669, 750, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 0, 741, 656, 655, 0, 662, 0, 687, 688,
	690, 694, 695, 696, 704, 705, 706, 714, 716, 717,
	715, 718, 719, 720, 723, 724, 725, 726, 721, 722,
	727, 671, 675, 672, 673, 674, 686, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 761, 762, 763,
	764, 765, 766, 697, 701, 700, 698, 699, 654, 191,
	212, 349, 0, 426, 276, 549, 524, 519, 198, 214,
	752, 250, 753, 0, 0, 757, 0, 0, 0, 759,
	758, 0, 760, 731, 730, 0, 0, 754, 755, 0,
	756, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 291, 295, 301, 302, 305,
	311, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 427, 432, 446, 447, 448, 449, 450,
	453, 454, 459, 460, 461, 462, 463, 471, 472, 476,
	499, 501, 513, 531, 536, 452, 287, 508, 537, 0,
	358, 0, 0, 360, 269, 290, 303, 0, 523, 473,
	218, 438, 278, 241, 779, 0, 203, 237, 221, 247,
	262, 265, 307, 370, 378, 407, 412, 284, 259, 235,
	431, 232, 456, 479, 480, 481, 483, 374, 254, 411,
	0, 375, 356, 489, 490, 299, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 347, 255, 0, 0, 408, 0, 197, 0,
	458, 242, 357, 354, 496, 270, 261, 257, 240, 300,
	364, 406, 478, 400, 0, 351, 0, 0, 468, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 238, 308, 196, 391,
	469, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	780, 781, 0, 0, 0, 0, 1791, 0, 0, 229,
	0, 236, 332, 341, 340, 321, 322, 324, 326, 331,
	338, 344, 0, 0, 0, 0, 0, 253, 304, 260,
	252, 493, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 806, 807, 808, 809, 810, 811, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 380, 245, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 313, 192, 216, 0, 0, 390, 433,
	445, 0, 0, 0, 243, 0, 443, 404, 512, 224,
	272, 430, 410, 441, 417, 275, 0, 0, 442, 352,
	498, 424, 509, 534, 535, 251, 384, 521, 482, 529,
	548, 217, 248, 398, 475, 515, 465, 376, 494, 495,
	312, 464, 283, 195, 350, 540, 215, 451, 233, 222,
	500, 518, 277, 428, 204, 477, 507, 230, 455, 0,
	0, 550, 206, 505, 474, 372, 309, 310, 205, 0,
	429, 256, 281, 246, 393, 502, 503, 244, 551, 219,
	528, 211, 0, 527, 386, 497, 506, 373, 362, 210,
	504, 371, 361, 317, 336, 337, 268, 292, 422, 355,
	423, 293, 382, 381, 383, 199, 516, 0, 200, 0,
	470, 517, 552, 225, 226, 228, 0, 267, 271, 279,
	282, 288, 289, 298, 348, 397, 421, 419, 425, 0,
	492, 510, 522, 532, 538, 539, 541, 542, 543, 544,
	545, 547, 546, 385, 296, 466, 316, 353, 0, 0,
	403, 444, 231, 514, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 363, 457, 511, 318, 330, 333,
	323, 342, 0, 343, 319, 320, 325, 327, 328, 329,
	334, 335, 339, 345, 239, 202, 369, 377, 491, 297,
	207, 208, 209, 484, 485, 486, 487, 525, 526, 530,
	434, 435, 436, 437, 280, 520, 294, 440, 439, 314,
	315, 0, 191, 212, 349, 0, 426, 276, 549, 524,
	519, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 291, 295,
	301, 302, 305, 311, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 427, 432, 446, 447,
	448, 449, 450, 453, 454, 459, 460, 461, 462, 463,
	471, 472, 476, 499, 501, 513, 531, 536, 452, 287,
	508, 537, 0, 358, 0, 0, 360, 269, 290, 303,
	0, 523, 473, 218, 438, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 307, 370, 378, 407, 412,
	284, 259, 235, 431, 232, 456, 479, 480, 481, 483,
	374, 254, 411, 0, 375, 356, 489, 490, 299, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 347, 255, 0, 0, 408,
	0, 197, 0, 458, 242, 357, 354, 496, 270, 261,
	257, 240, 300, 364, 406, 478, 400, 0, 351, 0,
	0, 468, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 238,
	308, 196, 391, 469, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 332, 341, 340, 321, 322,
	324, 326, 331, 338, 344, 0, 0, 0, 0, 0,
	253, 304, 260, 252, 493, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	380, 245, 0, 0, 0, 1088, 533, 0, 0, 0,
	0, 0, 1085, 1086, 346, 1046, 313, 192, 216, 1079,
	1083, 390, 433, 445, 0, 0, 0, 243, 0, 443,
	404, 512, 224, 272, 430, 410, 441, 417, 275, 0,
	0, 442, 352, 498, 424, 509, 534, 535, 251, 384,
	521, 482, 529, 548, 217, 248, 398, 475, 515, 465,
	376, 494, 495, 312, 464, 283, 195, 350, 540, 215,
	451, 233, 222, 500, 518, 277, 428, 204, 477, 507,
	230, 455, 0, 0, 550, 206, 505, 474, 372, 309,
	310, 205, 0, 429, 256, 281, 246, 393, 502, 503,
	244, 551, 219, 528, 211, 0, 527, 386, 497, 506,
	373, 362, 210, 504, 371, 361, 317, 336, 337, 268,
	292, 422, 355, 423, 293, 382, 381, 383, 199, 516,
	0, 200, 0, 470, 517, 552, 225, 226, 228, 0,
	267, 271, 279, 282, 288, 289, 298, 348, 397, 421,
	419, 425, 0, 492, 510, 522, 532, 538, 539, 541,
	542, 543, 544, 545, 547, 546, 385, 296, 466, 316,
	353, 0, 0, 403, 444, 231, 514, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 363, 457, 511,
	318, 330, 333, 323, 342, 0, 343, 319, 320, 325,
	327, 328, 329, 334, 335, 339, 345, 239, 202, 369,
	377, 491, 297, 207, 208, 209, 484, 485, 486, 487,
	525, 526, 530, 434, 435, 436, 437, 280, 520, 294,
	440, 439, 314, 315, 0, 191, 212, 349, 0, 426,
	276, 549, 524, 519, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 291, 295, 301, 302, 305, 311, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 427,
	432, 446, 447, 448, 449, 450, 453, 454, 459, 460,
	461, 462, 463, 471, 472, 476, 499, 501, 513, 531,
	536, 452, 287, 508, 537, 0, 358, 0, 0, 360,
	269, 290, 303, 0, 523, 473, 218, 438, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 307, 370,
	378, 407, 412, 284, 259, 235, 431, 232, 456, 479,
	480, 481, 483, 374, 254, 411, 0, 0, 356, 489,
	490, 299, 375, 0, 0, 0, 78, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 347, 255, 0, 0, 408, 0, 197,
	0, 458, 242, 357, 354, 496, 270, 261, 257, 240,
	300, 364, 406, 478, 400, 0, 351, 0, 0, 468,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 238, 308, 196,
	391, 469, 274, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 332, 341, 340, 321, 322, 324, 326,
	331, 338, 344, 0, 0, 0, 0, 0, 253, 304,
	260, 252, 493, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 380, 245,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 313, 192, 216, 0, 0, 390,
	433, 445, 0, 0, 0, 243, 0, 443, 404, 512,
	224, 272, 430, 410, 441, 417, 275, 0, 0, 442,
	352, 498, 424, 509, 534, 535, 251, 384, 521, 482,
	529, 548, 217, 248, 398, 475, 515, 465, 376, 494,
	495, 312, 464, 283, 195, 350, 540, 215, 451, 233,
	222, 500, 518, 277, 428, 204, 477, 507, 230, 455,
	0, 0, 550, 206, 505, 474, 372, 309, 310, 205,
	0, 429, 256, 281, 246, 393, 502, 503, 244, 551,
	219, 528, 211, 0, 527, 386, 497, 506, 373, 362,
	210, 504, 371, 361, 317, 336, 337, 268, 292, 422,
	355, 423, 293, 382, 381, 383, 199, 516, 0, 200,
	0, 470, 517, 552, 225, 226, 228, 0, 267, 271,
	279, 282, 288, 289, 298, 348, 397, 421, 419, 425,
	0, 492, 510, 522, 532, 538, 539, 541, 542, 543,
	544, 545, 547, 546, 385, 296, 466, 316, 353, 0,
	0, 403, 444, 231, 514, 467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 363, 457, 511, 318, 330,
	333, 323, 342, 0, 343, 319, 320, 325, 327, 328,
	329, 334, 335, 339, 345, 239, 202, 369, 377, 491,
	297, 207, 208, 209, 484, 485, 486, 487, 525, 526,
	530, 434, 435, 436, 437, 280, 520, 294, 440, 439,
	314, 315, 0, 191, 212, 349, 86, 426, 276, 549,
	524, 519, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 291,
	295, 301, 302, 305, 311, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 427, 432, 446,
	447, 448, 449, 450, 453, 454, 459, 460, 461, 462,
	463, 471, 472, 476, 499, 501, 513, 531, 536, 452,
	287, 508, 537, 0, 358, 0, 0, 360, 269, 290,
	303, 0, 523, 473, 218, 438, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 307, 370, 378, 407,
	412, 284, 259, 235, 431, 232, 456, 479, 480, 481,
	483, 374, 254, 411, 0, 1462, 356, 489, 490, 299,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 1464, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 347, 255, 0, 0,
	408, 0, 197, 0, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 0, 351,
	0, 0, 468, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	238, 308, 196, 391, 469, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 1466, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 332, 341, 340, 321,
	322, 324, 326, 331, 338, 344, 0, 0, 0, 0,
	0, 253, 304, 260, 252, 493, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 1261, 0, 1262,
	1263, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 380, 245, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 313, 192, 216,
	0, 0, 390, 433, 445, 0, 0, 0, 243, 0,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	0, 0, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 0, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 336, 337,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	0, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 0, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 385, 296, 466,
	316, 353, 0, 0, 403, 444, 231, 514, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 363, 457,
	511, 318, 330, 333, 323, 342, 0, 343, 319, 320,
	325, 327, 328, 329, 334, 335, 339, 345, 239, 202,
	369, 377, 491, 297, 207, 208, 209, 484, 485, 486,
	487, 525, 526, 530, 434, 435, 436, 437, 280, 520,
	294, 440, 439, 314, 315, 0, 191, 212, 349, 0,
	426, 276, 549, 524, 519, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 0, 0,
	360, 269, 290, 303, 0, 523, 473, 218, 438, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 0, 375, 356,
	489, 490, 299, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 347,
	255, 0, 0, 408, 0, 197, 0, 458, 242, 357,
	354, 496, 270, 261, 257, 240, 300, 364, 406, 478,
	400, 0, 351, 0, 0, 468, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 238, 308, 196, 391, 469, 274, 0,
	0, 0, 0, 188, 189, 190, 1404, 1407, 0, 0,
	0, 0, 1403, 1406, 0, 0, 229, 1402, 236, 332,
	341, 340, 321, 322, 324, 326, 331, 338, 344, 0,
	0, 0, 0, 0, 253, 304, 260, 252, 493, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 380, 245, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	313, 192, 216, 0, 0, 390, 433, 445, 0, 0,
	0, 243, 0, 443, 404, 512, 224, 272, 430, 410,
	441, 417, 275, 0, 0, 442, 352, 498, 424, 509,
	534, 535, 251, 384, 521, 482, 529, 548, 217, 248,
	398, 475, 515, 465, 376, 494, 495, 312, 464, 283,
	195, 350, 540, 215, 451, 233, 222, 500, 518, 277,
	428, 204, 477, 507, 230, 455, 0, 0, 550, 206,
	505, 474, 372, 309, 310, 205, 0, 429, 256, 281,
	246, 393, 502, 503, 244, 551, 219, 528, 211, 0,
	527, 386, 497, 506, 373, 362, 210, 504, 371, 361,
	317, 336, 337, 268, 292, 422, 355, 423, 293, 382,
	381, 383, 199, 516, 0, 200, 0, 470, 517, 552,
	225, 226, 228, 0, 267, 271, 279, 282, 288, 289,
	298, 348, 397, 421, 419, 425, 0, 492, 510, 522,
	532, 538, 539, 541, 542, 543, 544, 545, 547, 546,
	385, 296, 466, 316, 353, 0, 0, 403, 444, 231,
	514, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 363, 457, 511, 318, 330, 333, 323, 342, 0,
	343, 319, 320, 325, 327, 328, 329, 334, 335, 339,
	345, 239, 202, 369, 377, 491, 297, 207, 208, 209,
	484, 485, 486, 487, 525, 526, 530, 434, 435, 436,
	437, 280, 520, 294, 440, 439, 314, 315, 0, 191,
	212, 349, 0, 426, 276, 549, 524, 519, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 291, 295, 301, 302, 305,
	311, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 427, 432, 446, 447, 448, 449, 450,
	453, 454, 459, 460, 461, 462, 463, 471, 472, 476,
	499, 501, 513, 531, 536, 452, 287, 508, 537, 0,
	358, 0, 0, 360, 269, 290, 303, 0, 523, 473,
	218, 438, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 307, 370, 378, 407, 412, 284, 259, 235,
	431, 232, 456, 479, 480, 481, 483, 374, 254, 411,
	0, 0, 356, 489, 490, 299, 375, 0, 0, 0,
	78, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 347, 255, 0,
	0, 408, 0, 197, 0, 458, 242, 357, 354, 496,
	270, 261, 257, 240, 300, 364, 406, 478, 400, 0,
	351, 0, 0, 468, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 238, 308, 196, 391, 469, 274, 0, 87, 0,
	1443, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 332, 341, 340,
	321, 322, 324, 326, 331, 338, 344, 0, 0, 0,
	0, 0, 253, 304, 260, 252, 493, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 380, 245, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 313, 192,
	216, 0, 0, 390, 433, 445, 0, 0, 0, 243,
	0, 443, 404, 512, 224, 272, 430, 410, 441, 417,
	275, 0, 0, 442, 352, 498, 424, 509, 534, 535,
	251, 384, 521, 482, 529, 548, 217, 248, 398, 475,
	515, 465, 376, 494, 495, 312, 464, 283, 195, 350,
	540, 215, 451, 233, 222, 500, 518, 277, 428, 204,
	477, 507, 230, 455, 0, 0, 550, 206, 505, 474,
	372, 309, 310, 205, 0, 429, 256, 281, 246, 393,
	502, 503, 244, 551, 219, 528, 211, 0, 527, 386,
	497, 506, 373, 362, 210, 504, 371, 361, 317, 336,
	337, 268, 292, 422, 355, 423, 293, 382, 381, 383,
	199, 516, 0, 200, 0, 470, 517, 552, 225, 226,
	228, 0, 267, 271, 279, 282, 288, 289, 298, 348,
	397, 421, 419, 425, 0, 492, 510, 522, 532, 538,
	539, 541, 542, 543, 544, 545, 547, 546, 385, 296,
	466, 316, 353, 0, 0, 403, 444, 231, 514, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 363,
	457, 511, 318, 330, 333, 323, 342, 0, 343, 319,
	320, 325, 327, 328, 329, 334, 335, 339, 345, 239,
	202, 369, 377, 491, 297, 207, 208, 209, 484, 485,
	486, 487, 525, 526, 530, 434, 435, 436, 437, 280,
	520, 294, 440, 439, 314, 315, 0, 191, 212, 349,
	86, 426, 276, 549, 524, 519, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 291, 295, 301, 302, 305, 311, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 427, 432, 446, 447, 448, 449, 450, 453, 454,
	459, 460, 461, 462, 463, 471, 472, 476, 499, 501,
	513, 531, 536, 452, 287, 508, 537, 0, 358, 0,
	0, 360, 269, 290, 303, 0, 523, 473, 218, 438,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	307, 370, 378, 407, 412, 284, 259, 235, 431, 232,
	456, 479, 480, 481, 483, 374, 254, 411, 0, 375,
	356, 489, 490, 299, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	347, 255, 0, 0, 408, 0, 197, 0, 458, 242,
	357, 354, 496, 270, 261, 257, 240, 300, 364, 406,
	478, 400, 0, 351, 0, 0, 468, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 238, 308, 196, 391, 469, 274,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	332, 341, 340, 321, 322, 324, 326, 331, 338, 344,
	0, 0, 0, 0, 0, 253, 304, 260, 252, 493,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 380, 245, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 313, 192, 216, 0, 0, 390, 433, 445, 0,
	0, 0, 243, 0, 443, 404, 512, 224, 272, 430,
	410, 441, 417, 275, 0, 0, 442, 352, 498, 424,
	509, 534, 535, 251, 384, 521, 482, 529, 548, 217,
	248, 398, 475, 515, 465, 376, 494, 495, 312, 464,
	283, 195, 350, 540, 215, 451, 233, 222, 500, 518,
	277, 428, 204, 477, 507, 230, 455, 0, 0, 550,
	206, 505, 474, 372, 309, 310, 205, 0, 429, 256,
	281, 246, 393, 502, 503, 244, 551, 219, 528, 211,
	0, 527, 386, 497, 506, 373, 362, 210, 504, 371,
	361, 317, 336, 337, 268, 292, 422, 355, 423, 293,
	382, 381, 383, 199, 516, 0, 200, 0, 470, 517,
	552, 225, 226, 228, 0, 267, 271, 279, 282, 288,
	289, 298, 348, 397, 421, 419, 425, 0, 492, 510,
	522, 532, 538, 539, 541, 542, 543, 544, 545, 547,
	546, 385, 296, 466, 316, 353, 0, 0, 403, 444,
	231, 514, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 571, 363, 457, 511, 318, 330, 333, 323, 342,
	0, 343, 319, 320, 325, 327, 328, 329, 334, 335,
	339, 345, 239, 202, 369, 377, 491, 297, 207, 208,
	209, 484, 485, 486, 487, 525, 526, 530, 434, 435,
	436, 437, 280, 520, 294, 440, 439, 314, 315, 0,
	191, 212, 349, 0, 426, 276, 549, 524, 519, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 291, 295, 301, 302,
	305, 311, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 427, 432, 446, 447, 448, 449,
	450, 453, 454, 459, 460, 461, 462, 463, 471, 472,
	476, 499, 501, 513, 531, 536, 452, 287, 508, 537,
	0, 358, 0, 0, 360, 269, 290, 303, 0, 523,
	473, 218, 438, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 307, 370, 378, 407, 412, 284, 259,
	235, 431, 232, 456, 479, 480, 481, 483, 374, 254,
	411, 0, 375, 356, 489, 490, 299, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 1939, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 347, 255, 0, 0, 408, 0, 197,
	0, 458, 242, 357, 354, 496, 270, 261, 257, 240,
	300, 364, 406, 478, 400, 0, 351, 0, 0, 468,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 238, 308, 196,
	391, 469, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 332, 341, 340, 321, 322, 324, 326,
	331, 338, 344, 0, 0, 0, 0, 0, 253, 304,
	260, 252, 493, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 380, 245,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 313, 192, 216, 0, 0, 390,
	433, 445, 0, 0, 0, 243, 0, 443, 404, 512,
	224, 272, 430, 410, 441, 417, 275, 0, 1937, 442,
	352, 498, 424, 509, 534, 535, 251, 384, 521, 482,
	529, 548, 217, 248, 398, 475, 515, 465, 376, 494,
	495, 312, 464, 283, 195, 350, 540, 215, 451, 233,
	222, 500, 518, 277, 428, 204, 477, 507, 230, 455,
	0, 0, 550, 206, 505, 474, 372, 309, 310, 205,
	0, 429, 256, 281, 246, 393, 502, 503, 244, 551,
	219, 528, 211, 0, 527, 386, 497, 506, 373, 362,
	210, 504, 371, 361, 317, 336, 337, 268, 292, 422,
	355, 423, 293, 382, 381, 383, 199, 516, 0, 200,
	0, 470, 517, 552, 225, 226, 228, 0, 267, 271,
	279, 282, 288, 289, 298, 348, 397, 421, 419, 425,
	0, 492, 510, 522, 532, 538, 539, 541, 542, 543,
	544, 545, 547, 546, 385, 296, 466, 316, 353, 0,
	0, 403, 444, 231, 514, 467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 363, 457, 511, 318, 330,
	333, 323, 342, 0, 343, 319, 320, 325, 327, 328,
	329, 334, 335, 339, 345, 239, 202, 369, 377, 491,
	297, 207, 208, 209, 484, 485, 486, 487, 525, 526,
	530, 434, 435, 436, 437, 280, 520, 294, 440, 439,
	314, 315, 0, 191, 212, 349, 0, 426, 276, 549,
	524, 519, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 291,
	295, 301, 302, 305, 311, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 427, 432, 446,
	447, 448, 449, 450, 453, 454, 459, 460, 461, 462,
	463, 471, 472, 476, 499, 501, 513, 531, 536, 452,
	287, 508, 537, 0, 358, 0, 0, 360, 269, 290,
	303, 0, 523, 473, 218, 438, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 307, 370, 378, 407,
	412, 284, 259, 235, 431, 232, 456, 479, 480, 481,
	483, 374, 254, 411, 0, 375, 356, 489, 490, 299,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 347, 255, 0, 0,
	408, 0, 197, 0, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 0, 351,
	0, 0, 468, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	238, 308, 196, 391, 469, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 332, 341, 340, 321,
	322, 324, 326, 331, 338, 344, 0, 0, 0, 0,
	0, 253, 304, 260, 252, 493, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 1040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 380, 245, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 346, 1046, 313, 192, 216,
	1044, 0, 390, 433, 445, 0, 0, 0, 243, 0,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	0, 0, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 0, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 336, 337,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	0, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 0, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 385, 296, 466,
	316, 353, 0, 0, 403, 444, 231, 514, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 363, 457,
	511, 318, 330, 333, 323, 342, 0, 343, 319, 320,
	325, 327, 328, 329, 334, 335, 339, 345, 239, 202,
	369, 377, 491, 297, 207, 208, 209, 484, 485, 486,
	487, 525, 526, 530, 434, 435, 436, 437, 280, 520,
	294, 440, 439, 314, 315, 0, 191, 212, 349, 0,
	426, 276, 549, 524, 519, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 0, 0,
	360, 269, 290, 303, 0, 523, 473, 218, 438, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 0, 375, 356,
	489, 490, 299, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 1939,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 347,
	255, 0, 0, 408, 0, 197, 0, 458, 242, 357,
	354, 496, 270, 261, 257, 240, 300, 364, 406, 478,
	400, 0, 351, 0, 0, 468, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 238, 308, 196, 391, 469, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 332,
	341, 340, 321, 322, 324, 326, 331, 338, 344, 0,
	0, 0, 0, 0, 253, 304, 260, 252, 493, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 380, 245, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	313, 192, 216, 0, 0, 390, 433, 445, 0, 0,
	0, 243, 0, 443, 404, 512, 224, 272, 430, 410,
	441, 417, 275, 0, 0, 442, 352, 498, 424, 509,
	534, 535, 251, 384, 521, 482, 529, 548, 217, 248,
	398, 475, 515, 465, 376, 494, 495, 312, 464, 283,
	195, 350, 540, 215, 451, 233, 222, 500, 518, 277,
	428, 204, 477, 507, 230, 455, 0, 0, 550, 206,
	505, 474, 372, 309, 310, 205, 0, 429, 256, 281,
	246, 393, 502, 503, 244, 551, 219, 528, 211, 0,
	527, 386, 497, 506, 373, 362, 210, 504, 371, 361,
	317, 336, 337, 268, 292, 422, 355, 423, 293, 382,
	381, 383, 199, 516, 0, 200, 0, 470, 517, 552,
	225, 226, 228, 0, 267, 271, 279, 282, 288, 289,
	298, 348, 397, 421, 419, 425, 0, 492, 510, 522,
	532, 538, 539, 541, 542, 543, 544, 545, 547, 546,
	385, 296, 466, 316, 353, 0, 0, 403, 444, 231,
	514, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 363, 457, 511, 318, 330, 333, 323, 342, 0,
	343, 319, 320, 325, 327, 328, 329, 334, 335, 339,
	345, 239, 202, 369, 377, 491, 297, 207, 208, 209,
	484, 485, 486, 487, 525, 526, 530, 434, 435, 436,
	437, 280, 520, 294, 440, 439, 314, 315, 0, 191,
	212, 349, 0, 426, 276, 549, 524, 519, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 291, 295, 301, 302, 305,
	311, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 427, 432, 446, 447, 448, 449, 450,
	453, 454, 459, 460, 461, 462, 463, 471, 472, 476,
	499, 501, 513, 531, 536, 452, 287, 508, 537, 0,
	358, 0, 0, 360, 269, 290, 303, 0, 523, 473,
	218, 438, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 307, 370, 378, 407, 412, 284, 259, 235,
	431, 232, 456, 479, 480, 481, 483, 374, 254, 411,
	0, 375, 356, 489, 490, 299, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 347, 255, 0, 0, 408, 0, 197, 0,
	458, 242, 357, 354, 496, 270, 261, 257, 240, 300,
	364, 406, 478, 400, 0, 351, 0, 0, 468, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 238, 308, 196, 391,
	469, 274, 0, 0, 0, 1443, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 332, 341, 340, 321, 322, 324, 326, 331,
	338, 344, 0, 0, 0, 0, 0, 253, 304, 260,
	252, 493, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 380, 245, 0,
	0, 0, 0, 533, 0, 0, 0, 3161, 0, 0,
	0, 346, 0, 313, 192, 216, 0, 0, 390, 433,
	445, 0, 0, 0, 243, 0, 443, 404, 512, 224,
	272, 430, 410, 441, 417, 275, 0, 0, 442, 352,
	498, 424, 509, 534, 535, 251, 384, 521, 482, 529,
	548, 217, 248, 398, 475, 515, 465, 376, 494, 495,
	312, 464, 283, 195, 350, 540, 215, 451, 233, 222,
	500, 518, 277, 428, 204, 477, 507, 230, 455, 0,
	0, 550, 206, 505, 474, 372, 309, 310, 205, 0,
	429, 256, 281, 246, 393, 502, 503, 244, 551, 219,
	528, 211, 0, 527, 386, 497, 506, 373, 362, 210,
	504, 371, 361, 317, 336, 337, 268, 292, 422, 355,
	423, 293, 382, 381, 383, 199, 516, 0, 200, 0,
	470, 517, 552, 225, 226, 228, 0, 267, 271, 279,
	282, 288, 289, 298, 348, 397, 421, 419, 425, 0,
	492, 510, 522, 532, 538, 539, 541, 542, 543, 544,
	545, 547, 546, 385, 296, 466, 316, 353, 0, 0,
	403, 444, 231, 514, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 363, 457, 511, 318, 330, 333,
	323, 342, 0, 343, 319, 320, 325, 327, 328, 329,
	334, 335, 339, 345, 239, 202, 369, 377, 491, 297,
	207, 208, 209, 484, 485, 486, 487, 525, 526, 530,
	434, 435, 436, 437, 280, 520, 294, 440, 439, 314,
	315, 0, 191, 212, 349, 0, 426, 276, 549, 524,
	519, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 291, 295,
	301, 302, 305, 311, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 427, 432, 446, 447,
	448, 449, 450, 453, 454, 459, 460, 461, 462, 463,
	471, 472, 476, 499, 501, 513, 531, 536, 452, 287,
	508, 537, 0, 358, 0, 0, 360, 269, 290, 303,
	0, 523, 473, 218, 438, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 307, 370, 378, 407, 412,
	284, 259, 235, 431, 232, 456, 479, 480, 481, 483,
	374, 254, 411, 0, 375, 356, 489, 490, 299, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 347, 255, 0, 0, 408,
	0, 197, 0, 458, 242, 357, 354, 496, 270, 261,
	257, 240, 300, 364, 406, 478, 400, 0, 351, 0,
	0, 468, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 238,
	308, 196, 391, 469, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 1787, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 332, 341, 340, 321, 322,
	324, 326, 331, 338, 344, 0, 0, 0, 0, 0,
	253, 304, 260, 252, 493, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	380, 245, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 313, 192, 216, 0,
	0, 390, 433, 445, 0, 0, 0, 243, 0, 443,
	404, 512, 224, 272, 430, 410, 441, 417, 275, 0,
	0, 442, 352, 498, 424, 509, 534, 535, 251, 384,
	521, 482, 529, 548, 217, 248, 398, 475, 515, 465,
	376, 494, 495, 312, 464, 283, 195, 350, 540, 215,
	451, 233, 222, 500, 518, 277, 428, 204, 477, 507,
	230, 455, 0, 0, 550, 206, 505, 474, 372, 309,
	310, 205, 0, 429, 256, 281, 246, 393, 502, 503,
	244, 551, 219, 528, 211, 0, 527, 386, 497, 506,
	373, 362, 210, 504, 371, 361, 317, 336, 337, 268,
	292, 422, 355, 423, 293, 382, 381, 383, 199, 516,
	0, 200, 0, 470, 517, 552, 225, 226, 228, 0,
	267, 271, 279, 282, 288, 289, 298, 348, 397, 421,
	419, 425, 0, 492, 510, 522, 532, 538, 539, 541,
	542, 543, 544, 545, 547, 546, 385, 296, 466, 316,
	353, 0, 0, 403, 444, 231, 514, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 363, 457, 511,
	318, 330, 333, 323, 342, 0, 343, 319, 320, 325,
	327, 328, 329, 334, 335, 339, 345, 239, 202, 369,
	377, 491, 297, 207, 208, 209, 484, 485, 486, 487,
	525, 526, 530, 434, 435, 436, 437, 280, 520, 294,
	440, 439, 314, 315, 0, 191, 212, 349, 0, 426,
	276, 549, 524, 519, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 291, 295, 301, 302, 305, 311, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 427,
	432, 446, 447, 448, 449, 450, 453, 454, 459, 460,
	461, 462, 463, 471, 472, 476, 499, 501, 513, 531,
	536, 452, 287, 508, 537, 0, 358, 0, 0, 360,
	269, 290, 303, 0, 523, 473, 218, 438, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 307, 370,
	378, 407, 412, 284, 259, 235, 431, 232, 456, 479,
	480, 481, 483, 374, 254, 411, 0, 375, 356, 489,
	490, 299, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 347, 255,
	0, 0, 408, 0, 197, 0, 458, 242, 357, 354,
	496, 270, 261, 257, 240, 300, 364, 406, 478, 400,
	0, 351, 0, 0, 468, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 238, 308, 196, 391, 469, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 2315, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 332, 341,
	340, 321, 322, 324, 326, 331, 338, 344, 0, 0,
	0, 0, 0, 253, 304, 260, 252, 493, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 380, 245, 0, 0, 0, 0, 533,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 313,
	192, 216, 0, 0, 390, 433, 445, 0, 0, 0,
	243, 0, 443, 404, 512, 224, 272, 430, 410, 441,
	417, 275, 0, 0, 442, 352, 498, 424, 509, 534,
	535, 251, 384, 521, 482, 529, 548, 217, 248, 398,
	475, 515, 465, 376, 494, 495, 312, 464, 283, 195,
	350, 540, 215, 451, 233, 222, 500, 518, 277, 428,
	204, 477, 507, 230, 455, 0, 0, 550, 206, 505,
	474, 372, 309, 310, 205, 0, 429, 256, 281, 246,
	393, 502, 503, 244, 551, 219, 528, 211, 0, 527,
	386, 497, 506, 373, 362, 210, 504, 371, 361, 317,
	336, 337, 268, 292, 422, 355, 423, 293, 382, 381,
	383, 199, 516, 0, 200, 0, 470, 517, 552, 225,
	226, 228, 0, 267, 271, 279, 282, 288, 289, 298,
	348, 397, 421, 419, 425, 0, 492, 510, 522, 532,
	538, 539, 541, 542, 543, 544, 545, 547, 546, 385,
	296, 466, 316, 353, 0, 0, 403, 444, 231, 514,
	467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	363, 457, 511, 318, 330, 333, 323, 342, 0, 343,
	319, 320, 325, 327, 328, 329, 334, 335, 339, 345,
	239, 202, 369, 377, 491, 297, 207, 208, 209, 484,
	485, 486, 487, 525, 526, 530, 434, 435, 436, 437,
	280, 520, 294, 440, 439, 314, 315, 0, 191, 212,
	349, 0, 426, 276, 549, 524, 519, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 291, 295, 301, 302, 305, 311,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 427, 432, 446, 447, 448, 449, 450, 453,
	454, 459, 460, 461, 462, 463, 471, 472, 476, 499,
	501, 513, 531, 536, 452, 287, 508, 537, 0, 358,
	0, 0, 360, 269, 290, 303, 0, 523, 473, 218,
	438, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 307, 370, 378, 407, 412, 284, 259, 235, 431,
	232, 456, 479, 480, 481, 483, 374, 254, 411, 0,
	375, 356, 489, 490, 299, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 347, 255, 0, 0, 408, 0, 197, 0, 458,
	242, 357, 354, 496, 270, 261, 257, 240, 300, 364,
	406, 478, 400, 0, 351, 0, 0, 468, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 238, 308, 196, 391, 469,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 2300, 0, 0, 0, 2301, 0, 0, 229, 0,
	236, 332, 341, 340, 321, 322, 324, 326, 331, 338,
	344, 0, 0, 0, 0, 0, 253, 304, 260, 252,
	493, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 380, 245, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 313, 192, 216, 0, 0, 390, 433, 445,
	0, 0, 0, 243, 0, 443, 404, 512, 224, 272,
	430, 410, 441, 417, 275, 0, 0, 442, 352, 498,
	424, 509, 534, 535, 251, 384, 521, 482, 529, 548,
	217, 248, 398, 475, 515, 465, 376, 494, 495, 312,
	464, 283, 195, 350, 540, 215, 451, 233, 222, 500,
	518, 277, 428, 204, 477, 507, 230, 455, 0, 0,
	550, 206, 505, 474, 372, 309, 310, 205, 0, 429,
	256, 281, 246, 393, 502, 503, 244, 551, 219, 528,
	211, 0, 527, 386, 497, 506, 373, 362, 210, 504,
	371, 361, 317, 336, 337, 268, 292, 422, 355, 423,
	293, 382, 381, 383, 199, 516, 0, 200, 0, 470,
	517, 552, 225, 226, 228, 0, 267, 271, 279, 282,
	288, 289, 298, 348, 397, 421, 419, 425, 0, 492,
	510, 522, 532, 538, 539, 541, 542, 543, 544, 545,
	547, 546, 385, 296, 466, 316, 353, 0, 0, 403,
	444, 231, 514, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 363, 457, 511, 318, 330, 333, 323,
	342, 0, 343, 319, 320, 325, 327, 328, 329, 334,
	335, 339, 345, 239, 202, 369, 377, 491, 297, 207,
	208, 209, 484, 485, 486, 487, 525, 526, 530, 434,
	435, 436, 437, 280, 520, 294, 440, 439, 314, 315,
	0, 191, 212, 349, 0, 426, 276, 549, 524, 519,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 291, 295, 301,
	302, 305, 311, 359, 365, 366, 367, 368, 387, 388,
	389, 392, 395, 396, 399, 401, 402, 405, 409, 413,
	414, 415, 416, 418, 420, 427, 432, 446, 447, 448,
	449, 450, 453, 454, 459, 460, 461, 462, 463, 471,
	472, 476, 499, 501, 513, 531, 536, 452, 287, 508,
	537, 0, 358, 0, 0, 360, 269, 290, 303, 0,
	523, 473, 218, 438, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 307, 370, 378, 407, 412, 284,
	259, 235, 431, 232, 456, 479, 480, 481, 483, 374,
	254, 411, 0, 375, 356, 489, 490, 299, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	1487, 0, 0, 0, 347, 255, 0, 0, 408, 0,
	197, 0, 458, 242, 357, 354, 496, 270, 261, 257,
	240, 300, 364, 406, 478, 400, 0, 351, 0, 0,
	468, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 238, 308,
	196, 391, 469, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 1486, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 332, 341, 340, 321, 322, 324,
	326, 331, 338, 344, 0, 0, 0, 0, 0, 253,
	304, 260, 252, 493, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 380,
	245, 0, 0, 0, 0, 533, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 313, 192, 216, 0, 0,
	390, 433, 445, 0, 0, 0, 243, 0, 443, 404,
	512, 224, 272, 430, 410, 441, 417, 275, 0, 0,
	442, 352, 498, 424, 509, 534, 535, 251, 384, 521,
	482, 529, 548, 217, 248, 398, 475, 515, 465, 376,
	494, 495, 312, 464, 283, 195, 350, 540, 215, 451,
	233, 222, 500, 518, 277, 428, 204, 477, 507, 230,
	455, 0, 0, 550, 206, 505, 474, 372, 309, 310,
	205, 0, 429, 256, 281, 246, 393, 502, 503, 244,
	551, 219, 528, 211, 0, 527, 386, 497, 506, 373,
	362, 210, 504, 371, 361, 317, 336, 337, 268, 292,
	422, 355, 423, 293, 382, 381, 383, 199, 516, 0,
	200, 0, 470, 517, 552, 225, 226, 228, 0, 267,
	271, 279, 282, 288, 289, 298, 348, 397, 421, 419,
	425, 0, 492, 510, 522, 532, 538, 539, 541, 542,
	543, 544, 545, 547, 546, 385, 296, 466, 316, 353,
	0, 0, 403, 444, 231, 514, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 363, 457, 511, 318,
	330, 333, 323, 342, 0, 343, 319, 320, 325, 327,
	328, 329, 334, 335, 339, 345, 239, 202, 369, 377,
	491, 297, 207, 208, 209, 484, 485, 486, 487, 525,
	526, 530, 434, 435, 436, 437, 280, 520, 294, 440,
	439, 314, 315, 0, 191, 212, 349, 0, 426, 276,
	549, 524, 519, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	291, 295, 301, 302, 305, 311, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 427, 432,
	446, 447, 448, 449, 450, 453, 454, 459, 460, 461,
	462, 463, 471, 472, 476, 499, 501, 513, 531, 536,
	452, 287, 508, 537, 0, 358, 0, 0, 360, 269,
	290, 303, 0, 523, 473, 218, 438, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 307, 370, 378,
	407, 412, 284, 259, 235, 431, 232, 456, 479, 480,
	481, 483, 374, 254, 411, 0, 375, 356, 489, 490,
	299, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 347, 255, 0,
	0, 408, 0, 197, 0, 458, 242, 357, 354, 496,
	270, 261, 257, 240, 300, 364, 406, 478, 400, 0,
	351, 0, 0, 468, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 238, 308, 196, 391, 469, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 332, 341, 340,
	321, 322, 324, 326, 331, 338, 344, 0, 0, 0,
	0, 0, 253, 304, 260, 252, 493, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 380, 245, 0, 0, 0, 0, 533, 0,
	0, 0, 3287, 0, 0, 0, 346, 0, 313, 192,
	216, 0, 0, 390, 433, 445, 0, 0, 0, 243,
	0, 443, 404, 512, 224, 272, 430, 410, 441, 417,
	275, 0, 0, 442, 352, 498, 424, 509, 534, 535,
	251, 384, 521, 482, 529, 548, 217, 248, 398, 475,
	515, 465, 376, 494, 495, 312, 464, 283, 195, 350,
	540, 215, 451, 233, 222, 500, 518, 277, 428, 204,
	477, 507, 230, 455, 0, 0, 550, 206, 505, 474,
	372, 309, 310, 205, 0, 429, 256, 281, 246, 393,
	502, 503, 244, 551, 219, 528, 211, 0, 527, 386,
	497, 506, 373, 362, 210, 504, 371, 361, 317, 336,
	337, 268, 292, 422, 355, 423, 293, 382, 381, 383,
	199, 516, 0, 200, 0, 470, 517, 552, 225, 226,
	228, 0, 267, 271, 279, 282, 288, 289, 298, 348,
	397, 421, 419, 425, 0, 492, 510, 522, 532, 538,
	539, 541, 542, 543, 544, 545, 547, 546, 385, 296,
	466, 316, 353, 0, 0, 403, 444, 231, 514, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 363,
	457, 511, 318, 330, 333, 323, 342, 0, 343, 319,
	320, 325, 327, 328, 329, 334, 335, 339, 345, 239,
	202, 369, 377, 491, 297, 207, 208, 209, 484, 485,
	486, 487, 525, 526, 530, 434, 435, 436, 437, 280,
	520, 294, 440, 439, 314, 315, 0, 191, 212, 349,
	0, 426, 276, 549, 524, 519, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 291, 295, 301, 302, 305, 311, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 427, 432, 446, 447, 448, 449, 450, 453, 454,
	459, 460, 461, 462, 463, 471, 472, 476, 499, 501,
	513, 531, 536, 452, 287, 508, 537, 0, 358, 0,
	0, 360, 269, 290, 303, 0, 523, 473, 218, 438,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	307, 370, 378, 407, 412, 284, 259, 235, 431, 232,
	456, 479, 480, 481, 483, 374, 254, 411, 0, 375,
	356, 489, 490, 299, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	347, 255, 0, 0, 408, 0, 197, 0, 458, 242,
	357, 354, 496, 270, 261, 257, 240, 300, 364, 406,
	478, 400, 0, 351, 0, 0, 468, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 238, 308, 196, 391, 469, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	332, 341, 340, 321, 322, 324, 326, 331, 338, 344,
	0, 0, 0, 0, 0, 253, 304, 260, 252, 493,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 380, 245, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 313, 192, 216, 0, 0, 390, 433, 445, 0,
	0, 0, 243, 0, 443, 404, 512, 224, 272, 430,
	410, 441, 417, 275, 0, 0, 442, 352, 498, 424,
	509, 534, 535, 251, 384, 521, 482, 529, 548, 217,
	248, 398, 475, 515, 465, 376, 494, 495, 312, 464,
	283, 195, 350, 540, 215, 451, 233, 222, 500, 518,
	277, 428, 204, 477, 507, 230, 455, 0, 0, 550,
	206, 505, 474, 372, 309, 310, 205, 0, 429, 256,
	281, 246, 393, 502, 503, 244, 551, 219, 528, 211,
	0, 527, 386, 497, 506, 373, 362, 210, 504, 371,
	361, 317, 336, 337, 268, 292, 422, 355, 423, 293,
	382, 381, 383, 199, 516, 0, 200, 0, 470, 517,
	552, 225, 226, 228, 0, 267, 271, 279, 282, 288,
	289, 298, 348, 397, 421, 419, 425, 0, 492, 510,
	522, 532, 538, 539, 541, 542, 543, 544, 545, 547,
	546, 385, 296, 466, 316, 353, 0, 0, 403, 444,
	231, 514, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 571, 363, 457, 511, 318, 330, 333, 323, 342,
	0, 343, 319, 320, 325, 327, 328, 329, 334, 335,
	339, 345, 239, 202, 369, 377, 491, 297, 207, 208,
	209, 484, 485, 486, 487, 525, 526, 530, 434, 435,
	436, 437, 280, 520, 294, 440, 439, 314, 315, 0,
	191, 212, 349, 0, 426, 276, 549, 524, 519, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 291, 295, 301, 302,
	305, 311, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 427, 432, 446, 447, 448, 449,
	450, 453, 454, 459, 460, 461, 462, 463, 471, 472,
	476, 499, 501, 513, 531, 536, 452, 287, 508, 537,
	0, 358, 0, 0, 360, 269, 290, 303, 0, 523,
	473, 218, 438, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 307, 370, 378, 407, 412, 284, 259,
	235, 431, 232, 456, 479, 480, 481, 483, 374, 254,
	411, 0, 375, 356, 489, 490, 299, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 347, 255, 0, 0, 408, 0, 197,
	0, 458, 242, 357, 354, 496, 270, 261, 257, 240,
	300, 364, 406, 478, 400, 0, 351, 0, 0, 468,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 238, 308, 196,
	391, 469, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 332, 341, 340, 321, 322, 324, 326,
	331, 338, 344, 0, 0, 0, 0, 0, 253, 304,
	260, 252, 493, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 380, 245,
	0, 0, 0, 0, 533, 0, 0, 0, 3161, 0,
	0, 0, 346, 0, 313, 192, 216, 0, 0, 390,
	433, 445, 0, 0, 0, 243, 0, 443, 404, 512,
	224, 272, 430, 410, 441, 417, 275, 0, 0, 442,
	352, 498, 424, 509, 534, 535, 251, 384, 521, 482,
	529, 548, 217, 248, 398, 475, 515, 465, 376, 494,
	495, 312, 464, 283, 195, 350, 540, 215, 451, 233,
	222, 500, 518, 277, 428, 204, 477, 507, 230, 455,
	0, 0, 550, 206, 505, 474, 372, 309, 310, 205,
	0, 429, 256, 281, 246, 393, 502, 503, 244, 551,
	219, 528, 211, 0, 527, 386, 497, 506, 373, 362,
	210, 504, 371, 361, 317, 336, 337, 268, 292, 422,
	355, 423, 293, 382, 381, 383, 199, 516, 0, 200,
	0, 470, 517, 552, 225, 226, 228, 0, 267, 271,
	279, 282, 288, 289, 298, 348, 397, 421, 419, 425,
	0, 492, 510, 522, 532, 538, 539, 541, 542, 543,
	544, 545, 547, 546, 385, 296, 466, 316, 353, 0,
	0, 403, 444, 231, 514, 467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 363, 457, 511, 318, 330,
	333, 323, 342, 0, 343, 319, 320, 325, 327, 328,
	329, 334, 335, 339, 345, 239, 202, 369, 377, 491,
	297, 207, 208, 209, 484, 485, 486, 487, 525, 526,
	530, 434, 435, 436, 437, 280, 520, 294, 440, 439,
	314, 315, 0, 191, 212, 349, 0, 426, 276, 549,
	524, 519, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 291,
	295, 301, 302, 305, 311, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 427, 432, 446,
	447, 448, 449, 450, 453, 454, 459, 460, 461, 462,
	463, 471, 472, 476, 499, 501, 513, 531, 536, 452,
	287, 508, 537, 0, 358, 0, 0, 360, 269, 290,
	303, 0, 523, 473, 218, 438, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 307, 370, 378, 407,
	412, 284, 259, 235, 431, 232, 456, 479, 480, 481,
	483, 374, 254, 411, 0, 375, 356, 489, 490, 299,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 347, 255, 0, 0,
	408, 0, 197, 0, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 0, 351,
	0, 0, 468, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	238, 308, 196, 391, 469, 274, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 332, 341, 340, 321,
	322, 324, 326, 331, 338, 344, 0, 0, 0, 0,
	0, 253, 304, 260, 252, 493, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 380, 245, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 313, 192, 216,
	0, 0, 390, 433, 445, 0, 0, 0, 243, 0,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	0, 0, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 0, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 336, 337,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	0, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 0, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 385, 296, 466,
	316, 353, 0, 0, 403, 444, 231, 514, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 363, 457,
	511, 318, 330, 333, 323, 342, 0, 343, 319, 320,
	325, 327, 328, 329, 334, 335, 339, 345, 239, 202,
	369, 377, 491, 297, 207, 208, 209, 484, 485, 486,
	487, 525, 526, 530, 434, 435, 436, 437, 280, 520,
	294, 440, 439, 314, 315, 0, 191, 212, 349, 0,
	426, 276, 549, 524, 519, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 0, 0,
	360, 269, 290, 303, 0, 523, 473, 218, 438, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 0, 375, 356,
	489, 490, 299, 488, 0, 0, 0, 0, 1989, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 347,
	255, 0, 0, 408, 0, 197, 0, 458, 242, 357,
	354, 496, 270, 261, 257, 240, 300, 364, 406, 478,
	400, 0, 351, 0, 0, 468, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 238, 308, 196, 391, 469, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 332,
	341, 340, 321, 322, 324, 326, 331, 338, 344, 0,
	0, 0, 0, 0, 253, 304, 260, 252, 493, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 380, 245, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	313, 192, 216, 0, 0, 390, 433, 445, 0, 0,
	0, 243, 0, 443, 404, 512, 224, 272, 430, 410,
	441, 417, 275, 0, 0, 442, 352, 498, 424, 509,
	534, 535, 251, 384, 521, 482, 529, 548, 217, 248,
	398, 475, 515, 465, 376, 494, 495, 312, 464, 283,
	195, 350, 540, 215, 451, 233, 222, 500, 518, 277,
	428, 204, 477, 507, 230, 455, 0, 0, 550, 206,
	505, 474, 372, 309, 310, 205, 0, 429, 256, 281,
	246, 393, 502, 503, 244, 551, 219, 528, 211, 0,
	527, 386, 497, 506, 373, 362, 210, 504, 371, 361,
	317, 336, 337, 268, 292, 422, 355, 423, 293, 382,
	381, 383, 199, 516, 0, 200, 0, 470, 517, 552,
	225, 226, 228, 0, 267, 271, 279, 282, 288, 289,
	298, 348, 397, 421, 419, 425, 0, 492, 510, 522,
	532, 538, 539, 541, 542, 543, 544, 545, 547, 546,
	385, 296, 466, 316, 353, 0, 0, 403, 444, 231,
	514, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 363, 457, 511, 318, 330, 333, 323, 342, 0,
	343, 319, 320, 325, 327, 328, 329, 334, 335, 339,
	345, 239, 202, 369, 377, 491, 297, 207, 208, 209,
	484, 485, 486, 487, 525, 526, 530, 434, 435, 436,
	437, 280, 520, 294, 440, 439, 314, 315, 0, 191,
	212, 349, 0, 426, 276, 549, 524, 519, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 291, 295, 301, 302, 305,
	311, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 427, 432, 446, 447, 448, 449, 450,
	453, 454, 459, 460, 461, 462, 463, 471, 472, 476,
	499, 501, 513, 531, 536, 452, 287, 508, 537, 0,
	358, 0, 0, 360, 269, 290, 303, 0, 523, 473,
	218, 438, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 307, 370, 378, 407, 412, 284, 259, 235,
	431, 232, 456, 479, 480, 481, 483, 374, 254, 411,
	0, 375, 356, 489, 490, 299, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 347, 255, 0, 0, 408, 0, 197, 0,
	458, 242, 357, 354, 496, 270, 261, 257, 240, 300,
	364, 406, 478, 400, 0, 351, 0, 0, 468, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 238, 308, 196, 391,
	469, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	1466, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 332, 341, 340, 321, 322, 324, 326, 331,
	338, 344, 0, 0, 0, 0, 0, 253, 304, 260,
	252, 493, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 380, 245, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 313, 192, 216, 0, 0, 390, 433,
	445, 0, 0, 0, 243, 0, 443, 404, 512, 224,
	272, 430, 410, 441, 417, 275, 0, 0, 442, 352,
	498, 424, 509, 534, 535, 251, 384, 521, 482, 529,
	548, 217, 248, 398, 475, 515, 465, 376, 494, 495,
	312, 464, 283, 195, 350, 540, 215, 451, 233, 222,
	500, 518, 277, 428, 204, 477, 507, 230, 455, 0,
	0, 550, 206, 505, 474, 372, 309, 310, 205, 0,
	429, 256, 281, 246, 393, 502, 503, 244, 551, 219,
	528, 211, 0, 527, 386, 497, 506, 373, 362, 210,
	504, 371, 361, 317, 336, 337, 268, 292, 422, 355,
	423, 293, 382, 381, 383, 199, 516, 0, 200, 0,
	470, 517, 552, 225, 226, 228, 0, 267, 271, 279,
	282, 288, 289, 298, 348, 397, 421, 419, 425, 0,
	492, 510, 522, 532, 538, 539, 541, 542, 543, 544,
	545, 547, 546, 385, 296, 466, 316, 353, 0, 0,
	403, 444, 231, 514, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 363, 457, 511, 318, 330, 333,
	323, 342, 0, 343, 319, 320, 325, 327, 328, 329,
	334, 335, 339, 345, 239, 202, 369, 377, 491, 297,
	207, 208, 209, 484, 485, 486, 487, 525, 526, 530,
	434, 435, 436, 437, 280, 520, 294, 440, 439, 314,
	315, 0, 191, 212, 349, 0, 426, 276, 549, 524,
	519, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 291, 295,
	301, 302, 305, 311, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 427, 432, 446, 447,
	448, 449, 450, 453, 454, 459, 460, 461, 462, 463,
	471, 472, 476, 499, 501, 513, 531, 536, 452, 287,
	508, 537, 0, 358, 0, 0, 360, 269, 290, 303,
	0, 523, 473, 218, 438, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 307, 370, 378, 407, 412,
	284, 259, 235, 431, 232, 456, 479, 480, 481, 483,
	374, 254, 411, 0, 375, 356, 489, 490, 299, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 347, 255, 0, 0, 408,
	0, 197, 0, 458, 242, 357, 354, 496, 270, 261,
	257, 240, 300, 364, 406, 478, 400, 0, 351, 0,
	0, 468, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 238,
	308, 196, 391, 469, 274, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 332, 341, 340, 321, 322,
	324, 326, 331, 338, 344, 0, 0, 0, 0, 0,
	253, 304, 260, 252, 493, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	380, 245, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 313, 192, 216, 0,
	0, 390, 433, 445, 0, 0, 0, 243, 0, 443,
	404, 512, 224, 272, 430, 410, 441, 417, 275, 0,
	0, 442, 352, 498, 424, 509, 534, 535, 251, 384,
	521, 482, 529, 548, 217, 248, 398, 475, 515, 465,
	376, 494, 495, 312, 464, 283, 195, 350, 540, 215,
	451, 233, 222, 500, 518, 277, 428, 204, 477, 507,
	230, 455, 0, 0, 550, 206, 505, 474, 372, 309,
	310, 205, 0, 429, 256, 281, 246, 393, 502, 503,
	244, 551, 219, 528, 211, 0, 527, 386, 497, 506,
	373, 362, 210, 504, 371, 361, 317, 336, 337, 268,
	292, 422, 355, 423, 293, 382, 381, 383, 199, 516,
	0, 200, 0, 470, 517, 552, 225, 226, 228, 0,
	267, 271, 279, 282, 288, 289, 298, 348, 397, 421,
	419, 425, 0, 492, 510, 522, 532, 538, 539, 541,
	542, 543, 544, 545, 547, 546, 385, 296, 466, 316,
	353, 0, 0, 403, 444, 231, 514, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 363, 457, 511,
	318, 330, 333, 323, 342, 0, 343, 319, 320, 325,
	327, 328, 329, 334, 335, 339, 345, 239, 202, 369,
	377, 491, 297, 207, 208, 209, 484, 485, 486, 487,
	525, 526, 530, 434, 435, 436, 437, 280, 520, 294,
	440, 439, 314, 315, 0, 191, 212, 349, 0, 426,
	276, 549, 524, 519, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 291, 295, 301, 302, 305, 311, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 427,
	432, 446, 447, 448, 449, 450, 453, 454, 459, 460,
	461, 462, 463, 471, 472, 476, 499, 501, 513, 531,
	536, 452, 287, 508, 537, 0, 358, 0, 0, 360,
	269, 290, 303, 0, 523, 473, 218, 438, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 307, 370,
	378, 407, 412, 284, 259, 235, 431, 232, 456, 479,
	480, 481, 483, 374, 254, 411, 0, 375, 356, 489,
	490, 299, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 347, 255,
	0, 0, 408, 0, 197, 0, 458, 242, 357, 354,
	496, 270, 261, 257, 240, 300, 364, 406, 478, 400,
	0, 351, 0, 0, 468, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 238, 308, 196, 391, 469, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 332, 341,
	340, 321, 322, 324, 326, 331, 338, 344, 0, 0,
	0, 0, 0, 253, 304, 260, 252, 493, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 380, 245, 0, 0, 0, 0, 533,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 313,
	192, 216, 0, 0, 390, 433, 445, 0, 0, 0,
	243, 0, 443, 404, 512, 224, 272, 430, 410, 441,
	417, 275, 0, 0, 442, 352, 498, 424, 509, 534,
	535, 251, 384, 521, 482, 529, 548, 217, 248, 398,
	475, 515, 465, 376, 494, 495, 312, 464, 283, 195,
	350, 540, 215, 451, 233, 222, 500, 518, 277, 428,
	204, 477, 507, 230, 455, 0, 0, 550, 206, 505,
	474, 372, 309, 310, 205, 0, 429, 256, 281, 246,
	393, 502, 503, 244, 551, 219, 528, 211, 0, 527,
	386, 497, 506, 373, 362, 210, 504, 371, 361, 317,
	336, 337, 268, 292, 422, 355, 423, 293, 382, 381,
	383, 199, 516, 0, 200, 0, 470, 517, 552, 225,
	226, 228, 0, 267, 271, 279, 282, 288, 289, 298,
	348, 397, 421, 419, 425, 0, 492, 510, 522, 532,
	538, 539, 541, 542, 543, 544, 545, 547, 546, 385,
	296, 466, 316, 353, 0, 0, 403, 444, 231, 514,
	467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	363, 457, 511, 318, 330, 333, 323, 342, 0, 343,
	319, 320, 325, 327, 328, 329, 334, 335, 339, 345,
	239, 202, 369, 377, 491, 297, 207, 208, 209, 484,
	485, 486, 487, 525, 526, 530, 434, 435, 436, 437,
	280, 520, 294, 440, 439, 314, 315, 0, 191, 212,
	349, 1742, 426, 276, 549, 524, 519, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 291, 295, 301, 302, 305, 311,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 427, 432, 446, 447, 448, 449, 450, 453,
	454, 459, 460, 461, 462, 463, 471, 472, 476, 499,
	501, 513, 531, 536, 452, 287, 508, 537, 0, 358,
	0, 0, 360, 269, 290, 303, 0, 523, 473, 218,
	438, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 307, 370, 378, 407, 412, 284, 259, 235, 431,
	232, 456, 479, 480, 481, 483, 374, 254, 411, 0,
	375, 356, 489, 490, 299, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 1612,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 347, 255, 0, 0, 408, 0, 197, 0, 458,
	242, 357, 354, 496, 270, 261, 257, 240, 300, 364,
	406, 478, 400, 0, 351, 0, 0, 468, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 238, 308, 196, 391, 469,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 332, 341, 340, 321, 322, 324, 326, 331, 338,
	344, 0, 0, 0, 0, 0, 253, 304, 260, 252,
	493, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 380, 245, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 313, 192, 216, 0, 0, 390, 433, 445,
	0, 0, 0, 243, 0, 443, 404, 512, 224, 272,
	430, 410, 441, 417, 275, 0, 0, 442, 352, 498,
	424, 509, 534, 535, 251, 384, 521, 482, 529, 548,
	217, 248, 398, 475, 515, 465, 376, 494, 495, 312,
	464, 283, 195, 350, 540, 215, 451, 233, 222, 500,
	518, 277, 428, 204, 477, 507, 230, 455, 0, 0,
	550, 206, 505, 474, 372, 309, 310, 205, 0, 429,
	256, 281, 246, 393, 502, 503, 244, 551, 219, 528,
	211, 0, 527, 386, 497, 506, 373, 362, 210, 504,
	371, 361, 317, 336, 337, 268, 292, 422, 355, 423,
	293, 382, 381, 383, 199, 516, 0, 200, 0, 470,
	517, 552, 225, 226, 228, 0, 267, 271, 279, 282,
	288, 289, 298, 348, 397, 421, 419, 425, 0, 492,
	510, 522, 532, 538, 539, 541, 542, 543, 544, 545,
	547, 546, 385, 296, 466, 316, 353, 0, 0, 403,
	444, 231, 514, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 363, 457, 511, 318, 330, 333, 323,
	342, 0, 343, 319, 320, 325, 327, 328, 329, 334,
	335, 339, 345, 239, 202, 369, 377, 491, 297, 207,
	208, 209, 484, 485, 486, 487, 525, 526, 530, 434,
	435, 436, 437, 280, 520, 294, 440, 439, 314, 315,
	0, 191, 212, 349, 0, 426, 276, 549, 524, 519,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 291, 295, 301,
	302, 305, 311, 359, 365, 366, 367, 368, 387, 388,
	389, 392, 395, 396, 399, 401, 402, 405, 409, 413,
	414, 415, 416, 418, 420, 427, 432, 446, 447, 448,
	449, 450, 453, 454, 459, 460, 461, 462, 463, 471,
	472, 476, 499, 501, 513, 531, 536, 452, 287, 508,
	537, 0, 358, 0, 0, 360, 269, 290, 303, 0,
	523, 473, 218, 438, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 307, 370, 378, 407, 412, 284,
	259, 235, 431, 232, 456, 479, 480, 481, 483, 374,
	254, 411, 0, 375, 356, 489, 490, 299, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 1610, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 347, 255, 0, 0, 408, 0,
	197, 0, 458, 242, 357, 354, 496, 270, 261, 257,
	240, 300, 364, 406, 478, 400, 0, 351, 0, 0,
	468, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 238, 308,
	196, 391, 469, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 332, 341, 340, 321, 322, 324,
	326, 331, 338, 344, 0, 0, 0, 0, 0, 253,
	304, 260, 252, 493, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 380,
	245, 0, 0, 0, 0, 533, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 313, 192, 216, 0, 0,
	390, 433, 445, 0, 0, 0, 243, 0, 443, 404,
	512, 224, 272, 430, 410, 441, 417, 275, 0, 0,
	442, 352, 498, 424, 509, 534, 535, 251, 384, 521,
	482, 529, 548, 217, 248, 398, 475, 515, 465, 376,
	494, 495, 312, 464, 283, 195, 350, 540, 215, 451,
	233, 222, 500, 518, 277, 428, 204, 477, 507, 230,
	455, 0, 0, 550, 206, 505, 474, 372, 309, 310,
	205, 0, 429, 256, 281, 246, 393, 502, 503, 244,
	551, 219, 528, 211, 0, 527, 386, 497, 506, 373,
	362, 210, 504, 371, 361, 317, 336, 337, 268, 292,
	422, 355, 423, 293, 382, 381, 383, 199, 516, 0,
	200, 0, 470, 517, 552, 225, 226, 228, 0, 267,
	271, 279, 282, 288, 289, 298, 348, 397, 421, 419,
	425, 0, 492, 510, 522, 532, 538, 539, 541, 542,
	543, 544, 545, 547, 546, 385, 296, 466, 316, 353,
	0, 0, 403, 444, 231, 514, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 363, 457, 511, 318,
	330, 333, 323, 342, 0, 343, 319, 320, 325, 327,
	328, 329, 334, 335, 339, 345, 239, 202, 369, 377,
	491, 297, 207, 208, 209, 484, 485, 486, 487, 525,
	526, 530, 434, 435, 436, 437, 280, 520, 294, 440,
	439, 314, 315, 0, 191, 212, 349, 0, 426, 276,
	549, 524, 519, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	291, 295, 301, 302, 305, 311, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 427, 432,
	446, 447, 448, 449, 450, 453, 454, 459, 460, 461,
	462, 463, 471, 472, 476, 499, 501, 513, 531, 536,
	452, 287, 508, 537, 0, 358, 0, 0, 360, 269,
	290, 303, 0, 523, 473, 218, 438, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 307, 370, 378,
	407, 412, 284, 259, 235, 431, 232, 456, 479, 480,
	481, 483, 374, 254, 411, 0, 375, 356, 489, 490,
	299, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 1608, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 347, 255, 0,
	0, 408, 0, 197, 0, 458, 242, 357, 354, 496,
	270, 261, 257, 240, 300, 364, 406, 478, 400, 0,
	351, 0, 0, 468, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 238, 308, 196, 391, 469, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 332, 341, 340,
	321, 322, 324, 326, 331, 338, 344, 0, 0, 0,
	0, 0, 253, 304, 260, 252, 493, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 380, 245, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 313, 192,
	216, 0, 0, 390, 433, 445, 0, 0, 0, 243,
	0, 443, 404, 512, 224, 272, 430, 410, 441, 417,
	275, 0, 0, 442, 352, 498, 424, 509, 534, 535,
	251, 384, 521, 482, 529, 548, 217, 248, 398, 475,
	515, 465, 376, 494, 495, 312, 464, 283, 195, 350,
	540, 215, 451, 233, 222, 500, 518, 277, 428, 204,
	477, 507, 230, 455, 0, 0, 550, 206, 505, 474,
	372, 309, 310, 205, 0, 429, 256, 281, 246, 393,
	502, 503, 244, 551, 219, 528, 211, 0, 527, 386,
	497, 506, 373, 362, 210, 504, 371, 361, 317, 336,
	337, 268, 292, 422, 355, 423, 293, 382, 381, 383,
	199, 516, 0, 200, 0, 470, 517, 552, 225, 226,
	228, 0, 267, 271, 279, 282, 288, 289, 298, 348,
	397, 421, 419, 425, 0, 492, 510, 522, 532, 538,
	539, 541, 542, 543, 544, 545, 547, 546, 385, 296,
	466, 316, 353, 0, 0, 403, 444, 231, 514, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 363,
	457, 511, 318, 330, 333, 323, 342, 0, 343, 319,
	320, 325, 327, 328, 329, 334, 335, 339, 345, 239,
	202, 369, 377, 491, 297, 207, 208, 209, 484, 485,
	486, 487, 525, 526, 530, 434, 435, 436, 437, 280,
	520, 294, 440, 439, 314, 315, 0, 191, 212, 349,
	0, 426, 276, 549, 524, 519, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 291, 295, 301, 302, 305, 311, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 427, 432, 446, 447, 448, 449, 450, 453, 454,
	459, 460, 461, 462, 463, 471, 472, 476, 499, 501,
	513, 531, 536, 452, 287, 508, 537, 0, 358, 0,
	0, 360, 269, 290, 303, 0, 523, 473, 218, 438,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	307, 370, 378, 407, 412, 284, 259, 235, 431, 232,
	456, 479, 480, 481, 483, 374, 254, 411, 0, 375,
	356, 489, 490, 299, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 1606, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	347, 255, 0, 0, 408, 0, 197, 0, 458, 242,
	357, 354, 496, 270, 261, 257, 240, 300, 364, 406,
	478, 400, 0, 351, 0, 0, 468, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 238, 308, 196, 391, 469, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	332, 341, 340, 321, 322, 324, 326, 331, 338, 344,
	0, 0, 0, 0, 0, 253, 304, 260, 252, 493,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 380, 245, 0, 0, 0,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 313, 192, 216, 0, 0, 390, 433, 445, 0,
	0, 0, 243, 0, 443, 404, 512, 224, 272, 430,
	410, 441, 417, 275, 0, 0, 442, 352, 498, 424,
	509, 534, 535, 251, 384, 521, 482, 529, 548, 217,
	248, 398, 475, 515, 465, 376, 494, 495, 312, 464,
	283, 195, 350, 540, 215, 451, 233, 222, 500, 518,
	277, 428, 204, 477, 507, 230, 455, 0, 0, 550,
	206, 505, 474, 372, 309, 310, 205, 0, 429, 256,
	281, 246, 393, 502, 503, 244, 551, 219, 528, 211,
	0, 527, 386, 497, 506, 373, 362, 210, 504, 371,
	361, 317, 336, 337, 268, 292, 422, 355, 423, 293,
	382, 381, 383, 199, 516, 0, 200, 0, 470, 517,
	552, 225, 226, 228, 0, 267, 271, 279, 282, 288,
	289, 298, 348, 397, 421, 419, 425, 0, 492, 510,
	522, 532, 538, 539, 541, 542, 543, 544, 545, 547,
	546, 385, 296, 466, 316, 353, 0, 0, 403, 444,
	231, 514, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 571, 363, 457, 511, 318, 330, 333, 323, 342,
	0, 343, 319, 320, 325, 327, 328, 329, 334, 335,
	339, 345, 239, 202, 369, 377, 491, 297, 207, 208,
	209, 484, 485, 486, 487, 525, 526, 530, 434, 435,
	436, 437, 280, 520, 294, 440, 439, 314, 315, 0,
	191, 212, 349, 0, 426, 276, 549, 524, 519, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 291, 295, 301, 302,
	305, 311, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 427, 432, 446, 447, 448, 449,
	450, 453, 454, 459, 460, 461, 462, 463, 471, 472,
	476, 499, 501, 513, 531, 536, 452, 287, 508, 537,
	0, 358, 0, 0, 360, 269, 290, 303, 0, 523,
	473, 218, 438, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 307, 370, 378, 407, 412, 284, 259,
	235, 431, 232, 456, 479, 480, 481, 483, 374, 254,
	411, 0, 375, 356, 489, 490, 299, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 1604, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 347, 255, 0, 0, 408, 0, 197,
	0, 458, 242, 357, 354, 496, 270, 261, 257, 240,
	300, 364, 406, 478, 400, 0, 351, 0, 0, 468,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 238, 308, 196,
	391, 469, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 332, 341, 340, 321, 322, 324, 326,
	331, 338, 344, 0, 0, 0, 0, 0, 253, 304,
	260, 252, 493, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 380, 245,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 313, 192, 216, 0, 0, 390,
	433, 445, 0, 0, 0, 243, 0, 443, 404, 512,
	224, 272, 430, 410, 441, 417, 275, 0, 0, 442,
	352, 498, 424, 509, 534, 535, 251, 384, 521, 482,
	529, 548, 217, 248, 398, 475, 515, 465, 376, 494,
	495, 312, 464, 283, 195, 350, 540, 215, 451, 233,
	222, 500, 518, 277, 428, 204, 477, 507, 230, 455,
	0, 0, 550, 206, 505, 474, 372, 309, 310, 205,
	0, 429, 256, 281, 246, 393, 502, 503, 244, 551,
	219, 528, 211, 0, 527, 386, 497, 506, 373, 362,
	210, 504, 371, 361, 317, 336, 337, 268, 292, 422,
	355, 423, 293, 382, 381, 383, 199, 516, 0, 200,
	0, 470, 517, 552, 225, 226, 228, 0, 267, 271,
	279, 282, 288, 289, 298, 348, 397, 421, 419, 425,
	0, 492, 510, 522, 532, 538, 539, 541, 542, 543,
	544, 545, 547, 546, 385, 296, 466, 316, 353, 0,
	0, 403, 444, 231, 514, 467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 363, 457, 511, 318, 330,
	333, 323, 342, 0, 343, 319, 320, 325, 327, 328,
	329, 334, 335, 339, 345, 239, 202, 369, 377, 491,
	297, 207, 208, 209, 484, 485, 486, 487, 525, 526,
	530, 434, 435, 436, 437, 280, 520, 294, 440, 439,
	314, 315, 0, 191, 212, 349, 0, 426, 276, 549,
	524, 519, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 291,
	295, 301, 302, 305, 311, 359, 365, 366, 367, 368,
	387, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 427, 432, 446,
	447, 448, 449, 450, 453, 454, 459, 460, 461, 462,
	463, 471, 472, 476, 499, 501, 513, 531, 536, 452,
	287, 508, 537, 0, 358, 0, 0, 360, 269, 290,
	303, 0, 523, 473, 218, 438, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 307, 370, 378, 407,
	412, 284, 259, 235, 431, 232, 456, 479, 480, 481,
	483, 374, 254, 411, 0, 375, 356, 489, 490, 299,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 1600, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 347, 255, 0, 0,
	408, 0, 197, 0, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 0, 351,
	0, 0, 468, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	238, 308, 196, 391, 469, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 332, 341, 340, 321,
	322, 324, 326, 331, 338, 344, 0, 0, 0, 0,
	0, 253, 304, 260, 252, 493, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 380, 245, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 313, 192, 216,
	0, 0, 390, 433, 445, 0, 0, 0, 243, 0,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	0, 0, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 0, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 336, 337,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	0, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 0, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 385, 296, 466,
	316, 353, 0, 0, 403, 444, 231, 514, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 363, 457,
	511, 318, 330, 333, 323, 342, 0, 343, 319, 320,
	325, 327, 328, 329, 334, 335, 339, 345, 239, 202,
	369, 377, 491, 297, 207, 208, 209, 484, 485, 486,
	487, 525, 526, 530, 434, 435, 436, 437, 280, 520,
	294, 440, 439, 314, 315, 0, 191, 212, 349, 0,
	426, 276, 549, 524, 519, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 0, 0,
	360, 269, 290, 303, 0, 523, 473, 218, 438, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 0, 375, 356,
	489, 490, 299, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 1598, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 347,
	255, 0, 0, 408, 0, 197, 0, 458, 242, 357,
	354, 496, 270, 261, 257, 240, 300, 364, 406, 478,
	400, 0, 351, 0, 0, 468, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 238, 308, 196, 391, 469, 274, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 332,
	341, 340, 321, 322, 324, 326, 331, 338, 344, 0,
	0, 0, 0, 0, 253, 304, 260, 252, 493, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 380, 245, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	313, 192, 216, 0, 0, 390, 433, 445, 0, 0,
	0, 243, 0, 443, 404, 512, 224, 272, 430, 410,
	441, 417, 275, 0, 0, 442, 352, 498, 424, 509,
	534, 535, 251, 384, 521, 482, 529, 548, 217, 248,
	398, 475, 515, 465, 376, 494, 495, 312, 464, 283,
	195, 350, 540, 215, 451, 233, 222, 500, 518, 277,
	428, 204, 477, 507, 230, 455, 0, 0, 550, 206,
	505, 474, 372, 309, 310, 205, 0, 429, 256, 281,
	246, 393, 502, 503, 244, 551, 219, 528, 211, 0,
	527, 386, 497, 506, 373, 362, 210, 504, 371, 361,
	317, 336, 337, 268, 292, 422, 355, 423, 293, 382,
	381, 383, 199, 516, 0, 200, 0, 470, 517, 552,
	225, 226, 228, 0, 267, 271, 279, 282, 288, 289,
	298, 348, 397, 421, 419, 425, 0, 492, 510, 522,
	532, 538, 539, 541, 542, 543, 544, 545, 547, 546,
	385, 296, 466, 316, 353, 0, 0, 403, 444, 231,
	514, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 363, 457, 511, 318, 330, 333, 323, 342, 0,
	343, 319, 320, 325, 327, 328, 329, 334, 335, 339,
	345, 239, 202, 369, 377, 491, 297, 207, 208, 209,
	484, 485, 486, 487, 525, 526, 530, 434, 435, 436,
	437, 280, 520, 294, 440, 439, 314, 315, 0, 191,
	212, 349, 0, 426, 276, 549, 524, 519, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 291, 295, 301, 302, 305,
	311, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 427, 432, 446, 447, 448, 449, 450,
	453, 454, 459, 460, 461, 462, 463, 471, 472, 476,
	499, 501, 513, 531, 536, 452, 287, 508, 537, 0,
	358, 0, 0, 360, 269, 290, 303, 0, 523, 473,
	218, 438, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 307, 370, 378, 407, 412, 284, 259, 235,
	431, 232, 456, 479, 480, 481, 483, 374, 254, 411,
	0, 375, 356, 489, 490, 299, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	1596, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 347, 255, 0, 0, 408, 0, 197, 0,
	458, 242, 357, 354, 496, 270, 261, 257, 240, 300,
	364, 406, 478, 400, 0, 351, 0, 0, 468, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 238, 308, 196, 391,
	469, 274, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 332, 341, 340, 321, 322, 324, 326, 331,
	338, 344, 0, 0, 0, 0, 0, 253, 304, 260,
	252, 493, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 380, 245, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 313, 192, 216, 0, 0, 390, 433,
	445, 0, 0, 0, 243, 0, 443, 404, 512, 224,
	272, 430, 410, 441, 417, 275, 0, 0, 442, 352,
	498, 424, 509, 534, 535, 251, 384, 521, 482, 529,
	548, 217, 248, 398, 475, 515, 465, 376, 494, 495,
	312, 464, 283, 195, 350, 540, 215, 451, 233, 222,
	500, 518, 277, 428, 204, 477, 507, 230, 455, 0,
	0, 550, 206, 505, 474, 372, 309, 310, 205, 0,
	429, 256, 281, 246, 393, 502, 503, 244, 551, 219,
	528, 211, 0, 527, 386, 497, 506, 373, 362, 210,
	504, 371, 361, 317, 336, 337, 268, 292, 422, 355,
	423, 293, 382, 381, 383, 199, 516, 0, 200, 0,
	470, 517, 552, 225, 226, 228, 0, 267, 271, 279,
	282, 288, 289, 298, 348, 397, 421, 419, 425, 0,
	492, 510, 522, 532, 538, 539, 541, 542, 543, 544,
	545, 547, 546, 385, 296, 466, 316, 353, 0, 0,
	403, 444, 231, 514, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 363, 457, 511, 318, 330, 333,
	323, 342, 0, 343, 319, 320, 325, 327, 328, 329,
	334, 335, 339, 345, 239, 202, 369, 377, 491, 297,
	207, 208, 209, 484, 485, 486, 487, 525, 526, 530,
	434, 435, 436, 437, 280, 520, 294, 440, 439, 314,
	315, 0, 191, 212, 349, 0, 426, 276, 549, 524,
	519, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 291, 295,
	301, 302, 305, 311, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 427, 432, 446, 447,
	448, 449, 450, 453, 454, 459, 460, 461, 462, 463,
	471, 472, 476, 499, 501, 513, 531, 536, 452, 287,
	508, 537, 0, 358, 0, 0, 360, 269, 290, 303,
	0, 523, 473, 218, 438, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 307, 370, 378, 407, 412,
	284, 259, 235, 431, 232, 456, 479, 480, 481, 483,
	374, 254, 411, 0, 375, 356, 489, 490, 299, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 347, 255, 0, 0, 408,
	0, 197, 0, 458, 242, 357, 354, 496, 270, 261,
	257, 240, 300, 364, 406, 478, 400, 0, 351, 0,
	0, 468, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 238,
	308, 196, 391, 469, 274, 0, 1571, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 236, 332, 341, 340, 321, 322,
	324, 326, 331, 338, 344, 0, 0, 0, 0, 0,
	253, 304, 260, 252, 493, 0, 0, 0, 0, 0,
	0, 0, 220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	380, 245, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 313, 192, 216, 0,
	0, 390, 433, 445, 0, 0, 0, 243, 0, 443,
	404, 512, 224, 272, 430, 410, 441, 417, 275, 0,
	0, 442, 352, 498, 424, 509, 534, 535, 251, 384,
	521, 482, 529, 548, 217, 248, 398, 475, 515, 465,
	376, 494, 495, 312, 464, 283, 195, 350, 540, 215,
	451, 233, 222, 500, 518, 277, 428, 204, 477, 507,
	230, 455, 0, 0, 550, 206, 505, 474, 372, 309,
	310, 205, 0, 429, 256, 281, 246, 393, 502, 503,
	244, 551, 219, 528, 211, 0, 527, 386, 497, 506,
	373, 362, 210, 504, 371, 361, 317, 336, 337, 268,
	292, 422, 355, 423, 293, 382, 381, 383, 199, 516,
	0, 200, 0, 470, 517, 552, 225, 226, 228, 0,
	267, 271, 279, 282, 288, 289, 298, 348, 397, 421,
	419, 425, 0, 492, 510, 522, 532, 538, 539, 541,
	542, 543, 544, 545, 547, 546, 385, 296, 466, 316,
	353, 0, 0, 403, 444, 231, 514, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 363, 457, 511,
	318, 330, 333, 323, 342, 0, 343, 319, 320, 325,
	327, 328, 329, 334, 335, 339, 345, 239, 202, 369,
	377, 491, 297, 207, 208, 209, 484, 485, 486, 487,
	525, 526, 530, 434, 435, 436, 437, 280, 520, 294,
	440, 439, 314, 315, 0, 191, 212, 349, 0, 426,
	276, 549, 524, 519, 198, 214, 0, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 213, 223, 227, 234, 249, 264, 266, 273,
	286, 291, 295, 301, 302, 305, 311, 359, 365, 366,
	367, 368, 387, 388, 389, 392, 395, 396, 399, 401,
	402, 405, 409, 413, 414, 415, 416, 418, 420, 427,
	432, 446, 447, 448, 449, 450, 453, 454, 459, 460,
	461, 462, 463, 471, 472, 476, 499, 501, 513, 531,
	536, 452, 287, 508, 537, 0, 358, 0, 0, 360,
	269, 290, 303, 0, 523, 473, 218, 438, 278, 241,
	0, 0, 203, 237, 221, 247, 262, 265, 307, 370,
	378, 407, 412, 284, 259, 235, 431, 232, 456, 479,
	480, 481, 483, 374, 254, 411, 0, 375, 356, 489,
	490, 299, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	0, 0, 1471, 258, 0, 0, 0, 0, 347, 255,
	0, 0, 408, 0, 197, 0, 458, 242, 357, 354,
	496, 270, 261, 257, 240, 300, 364, 406, 478, 400,
	0, 351, 0, 0, 468, 379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 238, 308, 196, 391, 469, 274, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 236, 332, 341,
	340, 321, 322, 324, 326, 331, 338, 344, 0, 0,
	0, 0, 0, 253, 304, 260, 252, 493, 0, 0,
	0, 0, 0, 0, 0, 220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 380, 245, 0, 0, 0, 0, 533,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 313,
	192, 216, 0, 0, 390, 433, 445, 0, 0, 0,
	243, 0, 443, 404, 512, 224, 272, 430, 410, 441,
	417, 275, 0, 0, 442, 352, 498, 424, 509, 534,
	535, 251, 384, 521, 482, 529, 548, 217, 248, 398,
	475, 515, 465, 376, 494, 495, 312, 464, 283, 195,
	350, 540, 215, 451, 233, 222, 500, 518, 277, 428,
	204, 477, 507, 230, 455, 0, 0, 550, 206, 505,
	474, 372, 309, 310, 205, 0, 429, 256, 281, 246,
	393, 502, 503, 244, 551, 219, 528, 211, 0, 527,
	386, 497, 506, 373, 362, 210, 504, 371, 361, 317,
	336, 337, 268, 292, 422, 355, 423, 293, 382, 381,
	383, 199, 516, 0, 200, 0, 470, 517, 552, 225,
	226, 228, 0, 267, 271, 279, 282, 288, 289, 298,
	348, 397, 421, 419, 425, 0, 492, 510, 522, 532,
	538, 539, 541, 542, 543, 544, 545, 547, 546, 385,
	296, 466, 316, 353, 0, 0, 403, 444, 231, 514,
	467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	363, 457, 511, 318, 330, 333, 323, 342, 0, 343,
	319, 320, 325, 327, 328, 329, 334, 335, 339, 345,
	239, 202, 369, 377, 491, 297, 207, 208, 209, 484,
	485, 486, 487, 525, 526, 530, 434, 435, 436, 437,
	280, 520, 294, 440, 439, 314, 315, 0, 191, 212,
	349, 0, 426, 276, 549, 524, 519, 198, 214, 0,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 213, 223, 227, 234, 249,
	264, 266, 273, 286, 291, 295, 301, 302, 305, 311,
	359, 365, 366, 367, 368, 387, 388, 389, 392, 395,
	396, 399, 401, 402, 405, 409, 413, 414, 415, 416,
	418, 420, 427, 432, 446, 447, 448, 449, 450, 453,
	454, 459, 460, 461, 462, 463, 471, 472, 476, 499,
	501, 513, 531, 536, 452, 287, 508, 537, 0, 358,
	0, 0, 360, 269, 290, 303, 0, 523, 473, 218,
	438, 278, 241, 0, 0, 203, 237, 221, 247, 262,
	265, 307, 370, 378, 407, 412, 284, 259, 235, 431,
	232, 456, 479, 480, 481, 483, 374, 254, 411, 0,
	375, 356, 489, 490, 299, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 347, 255, 0, 0, 408, 0, 197, 0, 458,
	242, 357, 354, 496, 270, 261, 257, 240, 300, 364,
	406, 478, 400, 0, 351, 0, 0, 468, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 238, 308, 196, 391, 469,
	274, 0, 0, 0, 0, 188, 189, 190, 0, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	236, 332, 341, 340, 321, 322, 324, 326, 331, 338,
	344, 0, 0, 0, 0, 0, 253, 304, 260, 252,
	493, 0, 0, 0, 0, 0, 0, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 380, 245, 0, 0,
	0, 0, 533, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 313, 192, 216, 0, 0, 390, 433, 445,
	0, 0, 0, 243, 0, 443, 404, 512, 224, 272,
	430, 410, 441, 417, 275, 0, 0, 442, 352, 498,
	424, 509, 534, 535, 251, 384, 521, 482, 529, 548,
	217, 248, 398, 475, 515, 465, 376, 494, 495, 312,
	464, 283, 195, 350, 540, 215, 451, 233, 222, 500,
	518, 277, 428, 204, 477, 507, 230, 455, 0, 0,
	550, 206, 505, 474, 372, 309, 310, 205, 0, 429,
	256, 281, 246, 393, 502, 503, 244, 551, 219, 528,
	211, 0, 527, 386, 497, 506, 373, 362, 210, 504,
	371, 361, 317, 336, 337, 268, 292, 422, 355, 423,
	293, 382, 381, 383, 199, 516, 0, 200, 0, 470,
	517, 552, 225, 226, 228, 0, 267, 271, 279, 282,
	288, 289, 298, 348, 397, 421, 419, 425, 0, 492,
	510, 522, 532, 538, 539, 541, 542, 543, 544, 545,
	547, 546, 385, 296, 466, 316, 353, 0, 0, 403,
	444, 231, 514, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 571, 363, 457, 511, 318, 330, 333, 323,
	342, 0, 343, 319, 320, 325, 327, 328, 329, 334,
	335, 339, 345, 239, 202, 369, 377, 491, 297, 207,
	208, 209, 484, 485, 486, 487, 525, 526, 530, 434,
	435, 436, 437, 280, 520, 294, 440, 439, 314, 315,
	0, 191, 212, 349, 0, 426, 276, 549, 524, 519,
	198, 214, 0, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 213, 223,
	227, 234, 249, 264, 266, 273, 286, 291, 295, 301,
	302, 305, 311, 359, 365, 366, 367, 368, 387, 388,
	389, 392, 395, 396, 399, 401, 402, 405, 409, 413,
	414, 415, 416, 418, 420, 427, 432, 446, 447, 448,
	449, 450, 453, 454, 459, 460, 461, 462, 463, 471,
	472, 476, 499, 501, 513, 531, 536, 452, 287, 508,
	537, 0, 358, 0, 0, 360, 269, 290, 303, 0,
	523, 473, 218, 438, 278, 241, 0, 0, 203, 237,
	221, 247, 262, 265, 307, 370, 378, 407, 412, 284,
	259, 235, 431, 232, 456, 479, 480, 481, 483, 374,
	254, 411, 0, 375, 356, 489, 490, 299, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 347, 255, 0, 0, 408, 0,
	197, 0, 458, 242, 357, 354, 496, 270, 261, 257,
	240, 300, 364, 406, 478, 400, 0, 351, 0, 0,
	468, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 238, 308,
	196, 391, 469, 274, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 236, 332, 341, 340, 321, 322, 324,
	326, 331, 338, 344, 0, 0, 0, 0, 0, 253,
	304, 260, 252, 493, 0, 0, 0, 0, 0, 0,
	0, 220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 380,
	245, 0, 0, 0, 0, 533, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 313, 192, 216, 0, 0,
	390, 433, 445, 0, 0, 0, 243, 0, 443, 404,
	512, 224, 272, 430, 410, 441, 417, 275, 0, 0,
	442, 352, 498, 424, 509, 534, 535, 251, 384, 521,
	482, 529, 548, 217, 248, 398, 475, 515, 465, 376,
	494, 495, 312, 464, 283, 195, 350, 540, 215, 451,
	233, 222, 500, 518, 277, 428, 204, 477, 507, 230,
	455, 0, 0, 550, 206, 505, 474, 372, 309, 310,
	205, 0, 429, 256, 281, 246, 393, 502, 503, 244,
	551, 219, 528, 211, 0, 527, 386, 497, 506, 373,
	362, 210, 504, 371, 361, 317, 336, 337, 268, 292,
	422, 355, 423, 293, 382, 381, 383, 199, 516, 0,
	200, 0, 470, 517, 552, 225, 226, 228, 0, 267,
	271, 279, 282, 288, 289, 298, 348, 397, 421, 419,
	425, 0, 492, 510, 522, 532, 538, 539, 541, 542,
	543, 544, 545, 547, 546, 385, 296, 466, 316, 353,
	0, 0, 403, 444, 231, 514, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 571, 363, 457, 511, 318,
	330, 333, 323, 342, 0, 343, 319, 320, 325, 327,
	328, 329, 334, 335, 339, 345, 239, 202, 369, 377,
	491, 297, 207, 208, 209, 484, 485, 486, 487, 525,
	526, 530, 434, 435, 436, 437, 280, 520, 294, 440,
	439, 314, 315, 0, 191, 212, 349, 0, 426, 276,
	549, 524, 519, 198, 214, 0, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 850, 0, 0, 0, 193, 194,
	201, 213, 223, 227, 234, 249, 264, 266, 273, 286,
	291, 295, 301, 302, 305, 311, 359, 365, 366, 367,
	368, 387, 388, 389, 392, 395, 396, 399, 401, 402,
	405, 409, 413, 414, 415, 416, 418, 420, 427, 432,
	446, 447, 448, 449, 450, 453, 454, 459, 460, 461,
	462, 463, 471, 472, 476, 499, 501, 513, 531, 536,
	452, 287, 508, 537, 0, 358, 0, 0, 360, 269,
	290, 303, 0, 523, 473, 218, 438, 278, 241, 0,
	0, 203, 237, 221, 247, 262, 265, 307, 370, 378,
	407, 412, 284, 259, 235, 431, 232, 456, 479, 480,
	481, 483, 374, 254, 411, 0, 375, 356, 489, 490,
	299, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 347, 255, 0,
	0, 408, 0, 197, 0, 458, 242, 357, 354, 496,
	270, 261, 257, 240, 300, 364, 406, 478, 400, 0,
	351, 0, 0, 468, 379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 238, 308, 196, 391, 469, 274, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 236, 332, 341, 340,
	321, 322, 324, 326, 331, 338, 344, 0, 0, 0,
	0, 0, 253, 304, 260, 252, 493, 0, 0, 0,
	0, 0, 0, 0, 220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 0,
	285, 0, 380, 245, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 313, 192,
	216, 0, 0, 390, 433, 445, 0, 0, 0, 243,
	0, 443, 404, 512, 224, 272, 430, 410, 441, 417,
	275, 0, 0, 442, 352, 498, 424, 509, 534, 535,
	251, 384, 521, 482, 529, 548, 217, 248, 398, 475,
	515, 465, 376, 494, 495, 312, 464, 283, 195, 350,
	540, 215, 451, 233, 222, 500, 518, 277, 428, 204,
	477, 507, 230, 455, 0, 0, 550, 206, 505, 474,
	372, 309, 310, 205, 0, 429, 256, 281, 246, 393,
	502, 503, 244, 551, 219, 528, 211, 0, 527, 386,
	497, 506, 373, 362, 210, 504, 371, 361, 317, 336,
	337, 268, 292, 422, 355, 423, 293, 382, 381, 383,
	199, 516, 0, 200, 0, 470, 517, 552, 225, 226,
	228, 0, 267, 271, 279, 282, 288, 289, 298, 348,
	397, 421, 419, 425, 0, 492, 510, 522, 532, 538,
	539, 541, 542, 543, 544, 545, 547, 546, 385, 296,
	466, 316, 353, 0, 0, 403, 444, 231, 514, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 571, 363,
	457, 511, 318, 330, 333, 323, 342, 0, 343, 319,
	320, 325, 327, 328, 329, 334, 335, 339, 345, 239,
	202, 369, 377, 491, 297, 207, 208, 209, 484, 485,
	486, 487, 525, 526, 530, 434, 435, 436, 437, 280,
	520, 294, 440, 439, 314, 315, 0, 191, 212, 349,
	0, 426, 276, 549, 524, 519, 198, 214, 0, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 213, 223, 227, 234, 249, 264,
	266, 273, 286, 291, 295, 301, 302, 305, 311, 359,
	365, 366, 367, 368, 387, 388, 389, 392, 395, 396,
	399, 401, 402, 405, 409, 413, 414, 415, 416, 418,
	420, 427, 432, 446, 447, 448, 449, 450, 453, 454,
	459, 460, 461, 462, 463, 471, 472, 476, 499, 501,
	513, 531, 536, 452, 627, 508, 537, 0, 358, 0,
	0, 360, 269, 290, 303, 0, 523, 473, 218, 438,
	278, 241, 0, 0, 203, 237, 221, 247, 262, 265,
	307, 370, 378, 407, 412, 284, 259, 235, 431, 232,
	456, 479, 480, 481, 483, 374, 254, 411, 0, 375,
	356, 489, 490, 299, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	347, 255, 0, 0, 408, 0, 197, 0, 458, 242,
	357, 354, 496, 270, 261, 257, 240, 300, 364, 406,
	478, 400, 0, 351, 0, 0, 468, 379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 238, 308, 196, 391, 469, 274,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 236,
	332, 341, 340, 321, 322, 324, 326, 331, 338, 344,
	0, 0, 0, 0, 0, 253, 304, 260, 252, 493,
	0, 0, 0, 0, 0, 0, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 380, 245, 0, 0, 574,
	0, 533, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 313, 192, 216, 0, 0, 390, 433, 445, 0,
	0, 0, 243, 0, 443, 404, 512, 224, 272, 430,
	410, 441, 417, 275, 0, 0, 442, 352, 498, 424,
	509, 534, 535, 251, 384, 521, 482, 529, 548, 217,
	248, 398, 475, 515, 465, 376, 494, 495, 312, 464,
	283, 195, 350, 540, 215, 451, 233, 222, 500, 518,
	277, 428, 204, 477, 507, 230, 455, 0, 0, 550,
	206, 505, 474, 372, 309, 310, 205, 0, 429, 256,
	281, 246, 393, 502, 503, 244, 551, 219, 528, 211,
	0, 527, 386, 497, 506, 373, 362, 210, 504, 371,
	361, 317, 336, 337, 268, 292, 422, 355, 423, 293,
	382, 381, 383, 199, 516, 0, 200, 0, 470, 517,
	552, 225, 226, 228, 0, 267, 271, 279, 282, 288,
	289, 298, 348, 397, 421, 419, 425, 0, 492, 510,
	522, 532, 538, 539, 541, 542, 543, 544, 545, 547,
	546, 385, 296, 466, 316, 353, 0, 0, 403, 444,
	231, 514, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 571, 363, 457, 511, 318, 330, 333, 323, 342,
	0, 343, 319, 320, 325, 327, 328, 329, 334, 335,
	339, 345, 239, 202, 369, 377, 491, 297, 207, 208,
	209, 484, 485, 486, 487, 525, 526, 530, 434, 435,
	436, 437, 280, 520, 294, 440, 439, 314, 315, 0,
	191, 212, 349, 0, 426, 276, 549, 524, 519, 198,
	214, 0, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 213, 223, 227,
	234, 249, 264, 266, 273, 286, 291, 295, 301, 302,
	305, 311, 359, 365, 366, 367, 368, 387, 388, 389,
	392, 395, 396, 399, 401, 402, 405, 409, 413, 414,
	415, 416, 418, 420, 427, 432, 446, 447, 448, 449,
	450, 453, 454, 459, 460, 461, 462, 463, 471, 472,
	476, 499, 501, 513, 531, 536, 452, 287, 508, 537,
	0, 358, 0, 0, 360, 269, 290, 303, 0, 523,
	473, 218, 438, 278, 241, 0, 0, 203, 237, 221,
	247, 262, 265, 307, 370, 378, 407, 412, 284, 259,
	235, 431, 232, 456, 479, 480, 481, 483, 374, 254,
	411, 0, 375, 356, 489, 490, 299, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 347, 255, 0, 0, 408, 0, 197,
	0, 458, 242, 357, 354, 496, 270, 261, 257, 240,
	300, 364, 406, 478, 400, 0, 351, 0, 0, 468,
	379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 238, 308, 196,
	391, 469, 274, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 236, 332, 341, 340, 321, 322, 324, 326,
	331, 338, 344, 0, 0, 0, 0, 0, 253, 304,
	260, 252, 493, 0, 0, 0, 0, 0, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 380, 245,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 313, 192, 216, 0, 0, 390,
	433, 445, 0, 0, 0, 243, 0, 443, 404, 512,
	224, 272, 430, 410, 441, 417, 275, 0, 0, 442,
	352, 498, 424, 509, 534, 535, 251, 384, 521, 482,
	529, 548, 217, 248, 398, 475, 515, 465, 376, 494,
	495, 312, 464, 283, 195, 350, 540, 215, 451, 233,
	222, 500, 518, 277, 428, 204, 477, 507, 230, 455,
	0, 0, 550, 206, 505, 474, 372, 309, 310, 205,
	0, 429, 256, 281, 246, 393, 502, 503, 244, 551,
	219, 528, 211, 0, 527, 386, 497, 506, 373, 362,
	210, 504, 371, 361, 317, 336, 337, 268, 292, 422,
	355, 423, 293, 382, 381, 383, 199, 516, 0, 200,
	0, 470, 517, 552, 225, 226, 228, 0, 267, 271,
	279, 282, 288, 289, 298, 348, 397, 421, 419, 425,
	0, 492, 510, 522, 532, 538, 539, 541, 542, 543,
	544, 545, 547, 546, 385, 296, 466, 316, 353, 0,
	0, 403, 444, 231, 514, 467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 363, 457, 511, 318, 330,
	333, 323, 342, 0, 343, 319, 320, 325, 327, 328,
	329, 334, 335, 339, 345, 239, 202, 369, 377, 491,
	297, 207, 208, 209, 484, 485, 486, 487, 525, 526,
	530, 434, 435, 436, 437, 280, 520, 294, 440, 439,
	314, 315, 0, 191, 212, 349, 0, 426, 276, 549,
	524, 519, 198, 214, 0, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	213, 223, 227, 234, 249, 264, 266, 273, 286, 291,
	295, 301, 302, 305, 311, 359, 365, 366, 367, 368,
	3295, 388, 389, 392, 395, 396, 399, 401, 402, 405,
	409, 413, 414, 415, 416, 418, 420, 427, 432, 446,
	447, 448, 449, 450, 453, 454, 459, 460, 461, 462,
	463, 471, 472, 476, 499, 501, 513, 531, 536, 452,
	287, 508, 537, 0, 358, 0, 0, 360, 269, 290,
	303, 0, 523, 473, 218, 438, 278, 241, 0, 0,
	203, 237, 221, 247, 262, 265, 307, 370, 378, 407,
	412, 284, 259, 235, 431, 232, 456, 479, 480, 481,
	483, 374, 254, 411, 0, 375, 356, 489, 490, 299,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 347, 255, 0, 0,
	408, 0, 197, 0, 458, 242, 357, 354, 496, 270,
	261, 257, 240, 300, 364, 406, 478, 400, 0, 351,
	0, 0, 468, 379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	238, 308, 196, 391, 469, 274, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 236, 332, 341, 340, 321,
	322, 324, 326, 331, 338, 344, 0, 0, 0, 0,
	0, 253, 304, 260, 252, 493, 0, 0, 0, 0,
	0, 0, 0, 220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 380, 245, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 313, 192, 216,
	0, 0, 390, 433, 445, 0, 0, 0, 243, 0,
	443, 404, 512, 224, 272, 430, 410, 441, 417, 275,
	0, 0, 442, 352, 498, 424, 509, 534, 535, 251,
	384, 521, 482, 529, 548, 217, 248, 398, 475, 515,
	465, 376, 494, 495, 312, 464, 283, 195, 350, 540,
	215, 451, 233, 222, 500, 518, 277, 428, 204, 477,
	507, 230, 455, 0, 0, 550, 206, 505, 474, 372,
	309, 310, 205, 0, 429, 256, 281, 246, 393, 502,
	503, 244, 551, 219, 528, 211, 0, 527, 386, 497,
	506, 373, 362, 210, 504, 371, 361, 317, 336, 337,
	268, 292, 422, 355, 423, 293, 382, 381, 383, 199,
	516, 0, 200, 0, 470, 517, 552, 225, 226, 228,
	0, 267, 271, 279, 282, 288, 289, 298, 348, 397,
	421, 419, 425, 0, 492, 510, 522, 532, 538, 539,
	541, 542, 543, 544, 545, 547, 546, 385, 296, 466,
	316, 353, 0, 0, 403, 444, 231, 514, 467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 571, 363, 457,
	511, 318, 330, 333, 323, 342, 0, 343, 319, 320,
	325, 327, 328, 329, 334, 335, 339, 345, 239, 202,
	369, 377, 491, 297, 207, 208, 209, 484, 485, 486,
	487, 525, 526, 530, 434, 435, 436, 437, 280, 520,
	294, 440, 439, 314, 315, 0, 191, 212, 349, 0,
	426, 276, 549, 524, 519, 198, 214, 0, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 213, 223, 227, 234, 249, 264, 266,
	273, 286, 291, 295, 301, 302, 305, 311, 359, 365,
	366, 367, 368, 387, 388, 389, 392, 395, 396, 399,
	401, 402, 405, 409, 413, 414, 415, 416, 418, 420,
	427, 432, 446, 447, 448, 449, 450, 453, 454, 459,
	460, 461, 462, 463, 471, 472, 476, 499, 501, 513,
	531, 536, 452, 287, 508, 537, 0, 358, 0, 0,
	360, 269, 290, 303, 0, 523, 473, 218, 438, 278,
	241, 0, 0, 203, 237, 221, 247, 262, 265, 307,
	370, 378, 407, 412, 284, 259, 235, 431, 232, 456,
	479, 480, 481, 483, 374, 254, 411, 0, 375, 356,
	489, 490, 299, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 347,
	255, 0, 0, 408, 0, 197, 0, 458, 242, 357,
	354, 496, 270, 261, 257, 240, 300, 364, 406, 478,
	400, 0, 351, 0, 0, 468, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 238, 308, 196, 391, 469, 274, 0,
	0, 0, 0, 188, 2826, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 236, 332,
	341, 340, 321, 322, 324, 326, 331, 338, 344, 0,
	0, 0, 0, 0, 253, 304, 260, 252, 493, 0,
	0, 0, 0, 0, 0, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 380, 245, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	313, 192, 216, 0, 0, 390, 433, 445, 0, 0,
	0, 243, 0, 443, 404, 512, 224, 272, 430, 410,
	441, 417, 275, 0, 0, 442, 352, 498, 424, 509,
	534, 535, 251, 384, 521, 482, 529, 548, 217, 248,
	398, 475, 515, 465, 376, 494, 495, 312, 464, 283,
	195, 350, 540, 215, 451, 233, 222, 500, 518, 277,
	428, 204, 477, 507, 230, 455, 0, 0, 550, 206,
	505, 474, 372, 309, 310, 205, 0, 429, 256, 281,
	246, 393, 502, 503, 244, 551, 219, 528, 211, 0,
	527, 386, 497, 506, 373, 362, 210, 504, 371, 361,
	317, 336, 337, 268, 292, 422, 355, 423, 293, 382,
	381, 383, 199, 516, 0, 200, 0, 470, 517, 552,
	225, 226, 228, 0, 267, 271, 279, 282, 288, 289,
	298, 348, 397, 421, 419, 425, 0, 492, 510, 522,
	532, 538, 539, 541, 542, 543, 544, 545, 547, 546,
	385, 296, 466, 316, 353, 0, 0, 403, 444, 231,
	514, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	571, 363, 457, 511, 318, 330, 333, 323, 342, 0,
	343, 319, 320, 325, 327, 328, 329, 334, 335, 339,
	345, 239, 202, 369, 377, 491, 297, 207, 208, 209,
	484, 485, 486, 487, 525, 526, 530, 434, 435, 436,
	437, 280, 520, 294, 440, 439, 314, 315, 0, 191,
	212, 349, 0, 426, 276, 549, 524, 519, 198, 214,
	0, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 213, 223, 227, 234,
	249, 264, 266, 273, 286, 291, 295, 301, 302, 305,
	311, 359, 365, 366, 367, 368, 387, 388, 389, 392,
	395, 396, 399, 401, 402, 405, 409, 413, 414, 415,
	416, 418, 420, 427, 432, 446, 447, 448, 449, 450,
	453, 454, 459, 460, 461, 462, 463, 471, 472, 476,
	499, 501, 513, 531, 536, 452, 287, 508, 537, 0,
	358, 0, 0, 360, 269, 290, 303, 0, 523, 473,
	218, 438, 278, 241, 0, 0, 203, 237, 221, 247,
	262, 265, 307, 370, 378, 407, 412, 284, 259, 235,
	431, 232, 456, 479, 480, 481, 483, 374, 254, 411,
	0, 375, 356, 489, 490, 299, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 347, 255, 0, 0, 408, 0, 197, 0,
	458, 242, 357, 354, 496, 270, 261, 257, 240, 300,
	364, 406, 478, 400, 0, 351, 0, 0, 468, 379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 238, 308, 196, 391,
	469, 274, 0, 0, 0, 0, 188, 2296, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 236, 332, 341, 340, 321, 322, 324, 326, 331,
	338, 344, 0, 0, 0, 0, 0, 253, 304, 260,
	252, 493, 0, 0, 0, 0, 0, 0, 0, 220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 380, 245, 0,
	0, 0, 0, 533, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 313, 192, 216, 0, 0, 390, 433,
	445, 0, 0, 0, 243, 0, 443, 404, 512, 224,
	272, 430, 410, 441, 417, 275, 0, 0, 442, 352,
	498, 424, 509, 534, 535, 251, 384, 521, 482, 529,
	548, 217, 248, 398, 475, 515, 465, 376, 494, 495,
	312, 464, 283, 195, 350, 540, 215, 451, 233, 222,
	500, 518, 277, 428, 204, 477, 507, 230, 455, 0,
	0, 550, 206, 505, 474, 372, 309, 310, 205, 0,
	429, 256, 281, 246, 393, 502, 503, 244, 551, 219,
	528, 211, 0, 527, 386, 497, 506, 373, 362, 210,
	504, 371, 361, 317, 336, 337, 268, 292, 422, 355,
	423, 293, 382, 381, 383, 199, 516, 0, 200, 0,
	470, 517, 552, 225, 226, 228, 0, 267, 271, 279,
	282, 288, 289, 298, 348, 397, 421, 419, 425, 0,
	492, 510, 522, 532, 538, 539, 541, 542, 543, 544,
	545, 547, 546, 385, 296, 466, 316, 353, 0, 0,
	403, 444, 231, 514, 467, 3046, 3048, 3047, 3062, 3063,
	3064, 3065, 3066, 3067, 3068, 689, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 571, 363, 457, 511, 318, 330, 333,
	323, 342, 0, 343, 319, 320, 325, 327, 328, 329,
	334, 335, 339, 345, 239, 202, 369, 377, 491, 297,
	207, 208, 209, 484, 485, 486, 487, 525, 526, 530,
	434, 435, 436, 437, 280, 520, 294, 440, 439, 314,
	315, 0, 191, 212, 349, 0, 426, 276, 549, 524,
	519, 198, 214, 0, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 213,
	223, 227, 234, 249, 264, 266, 273, 286, 291, 295,
	301, 302, 305, 311, 359, 365, 366, 367, 368, 387,
	388, 389, 392, 395, 396, 399, 401, 402, 405, 409,
	413, 414, 415, 416, 418, 420, 427, 432, 446, 447,
	448, 449, 450, 453, 454, 459, 460, 461, 462, 463,
	471, 472, 476, 499, 501, 513, 531, 536, 452, 287,
	508, 537, 0, 358, 0, 0, 360, 269, 290, 303,
	0, 523, 473, 218, 438, 278, 241, 0, 0, 203,
	237, 221, 247, 262, 265, 307, 370, 378, 407, 412,
	284, 259, 235, 431, 232, 456, 479, 480, 481, 483,
	374, 254, 411, 0, 0, 356, 489, 490, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 3057, 3058, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	668, 751, 670, 748, 749, 0, 666, 669, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 687, 688, 3045, 3049, 3050, 3051,
	3059, 3060, 3061, 3069, 3071, 717, 3070, 3072, 3073, 3074,
	3077, 3078, 3079, 3080, 3075, 3076, 3081, 3029, 3033, 3030,
	3031, 3032, 3044, 3034, 3035, 3036, 3037, 3038, 3039, 3040,
	3041, 3042, 3043, 3082, 3083, 3084, 3085, 3086, 3087, 3052,
	3056, 3055, 3053, 3054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 753, 0,
	0, 757, 0, 0, 0, 759, 758, 0, 760, 731,
	730, 0, 0, 754, 755, 0, 756,
}

var yyPact = [...]int{
	3537, -1000, -439, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2137, 2147, -1000, -1000,
	-1000, -1000, 2274, -1000, 732, 1814, -1000, 2092, 4038, -1000,
	44441, 515, -1000, 43175, 514, 284, 44441, -1000, 212, -1000,
	206, 44441, 211, 42542, -1000, -1000, -311, 19111, 2029, 92,
	90, 44441, -1000, -1000, -1000, -1000, 2249, 1816, -1000, 386,
	-1000, -1000, -1000, -1000, -1000, -1000, 41909, -1000, -1000, -1000,
	2100, 2082, 2280, 658, 2025, -1000, 2173, 1816, -1000, 19111,
	2220, 2155, 18478, -1000, 18478, 456, -1000, -1000, 14037, -1000,
	-1000, 25451, 44441, 31781, 327, -1000, 2092, -1000, -1000, -1000,
	113, -1000, 350, 1641, -1000, 1638, -1000, 797, 623, 371,
	493, 476, 367, 366, 365, 364, 362, 361, 358, 354,
	378, -1000, 689, 689, -124, -132, 3120, 483, 419, 419,
	478, 2063, 2049, -1000, 687, -1000, 689, 689, 689, 384,
	689, 689, 689, 689, 321, 312, 689, 689, 689, 689,
	689, 689, 689, 689, 689, 689, 689, 689, 689, 689,
	689, 689, 689, 504, 2092, 281, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 44441, 231, 44441, -1000, 583, 44441, 826, 826,
	128, 826, 826, 826, 826, 222, 669, 79, -1000, 199,
	274, 188, 278, 800, 332, -1000, -1000, 271, 800, 1236,
	-1000, 664, 180, -1000, 826, 826, -1000, 11485, 235, 11485,
	11485, -1000, 2086, -1000, -1000, -1000, -1000, 1243, -1000, 468,
	-1000, -1000, -1000, -1000, 44441, 41276, 385, 721, -1000, -1000,
	-1000, 85, -1000, -1000, 1341, 985, 19111, 997, -1000, 1119,
	636, -1000, -1000, -1000, -1000, -1000, 560, 19744, 19744, 19744,
	19744, -1000, -1000, 1463, 1463, 1463, 1463, 19744, 1463, -1000,
	1463, 1463, 1463, 19111, 1463, 1463, 1463, -1000, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, -1000, -1000, 1463, 582, 1463, 1463, 1463,
	1463, 1463, -1000, -1000, -1000, -1000, 19744, 1463, 1463, 1463,
	1463, 1463, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1463, 1463, 1463, 1463, 1463, 1463, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 22914, -1000, 16579, 1463,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	44441, -1000, 1463, 236, 44441, 44441, 348, 2173, 1816, -1000,
	2249, 2205, 386, -1000, 2585, 1462, 1421, 1249, 1816, 1562,
	44441, -1000, 1658, -1000, -1000, -1000, 1948, 1151, 1235, -1000,
	-1000, -1000, -1000, 1544, 19111, -1000, -1000, 2268, -1000, 22281,
	580, 860, 2261, 40643, -1000, 456, 456, 1613, 13399, 50,
	-1000, -1000, -1000, 719, 29249, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2086, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1647,
	44441, -1000, -1000, 5053, 1163, -1000, 1803, -1000, 1632, -1000,
	1763, 19111, 1765, 513, 1163, 499, 492, 490, -1000, -28,
	-1000, -1000, -1000, -1000, -1000, -1000, 689, 689, 689, -1000,
	377, 2216, 4038, 4706, -1000, -1000, -1000, 40010, 1795, 1163,
	-1000, 1794, -1000, 796, 547, 611, 611, 1163, -1000, -1000,
	44441, 1163, 795, 794, 1163, 1163, 44441, 44441, -1000, 39377,
	-1000, 38744, 38111, 1059, 44441, 37478, 36845, 36212, 35579, 34946,
	-1000, 1971, -1000, 1847, -1000, -1000, -1000, 44441, 1163, 1163,
	44441, 44441, 381, -1000, -1000, 44441, 1163, -1000, -1000, 1047,
	1045, 1039, 689, 689, 1034, 1224, 1214, 1213, 689, 689,
	1033, 1211, 30515, 1205, 289, 1030, 1009, 1004, 1062, 1200,
	203, 1198, 1060, 1006, 999, 44441, 1793, 44441, -1000, 265,
	713, 436, 717, 2092, 2026, 1608, 464, 510, 1163, 428,
	428, 44441, -1000, 12123, -1000, -1000, 1197, 19111, -1000, 805,
	800, 800, -1000, -1000, -1000, -1000, -1000, -1000, 826, 44441,
	805, -1000, -1000, -1000, 800, 826, 44441, 826, 826, 826,
	826, 800, 800, 800, 826, 44441, 44441, 44441, 44441, 44441,
	44441, 44441, 44441, 44441, 11485, 664, 826, -323, -1000, 1179,
	-1000, 1902, -1000, -1000, -1000, -1000, -1000, -1000, 11485, 11485,
	-1000, -1000, -1000, -1000, 205, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -69, 1601, 34313, -1000, -328, -329,
	-333, -334, -1000, -1000, -1000, -336, -339, -1000, -1000, -1000,
	19111, 19111, 19111, 19111, -164, -1000, 825, 19744, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 169, 835, 19744, 19744, 19744,
	19744, 19744, 19744, 19744, 19744, 19744, 19744, 19744, 19744, 19744,
	19744, 19744, -1000, -1000, 27350, 7768, 7768, 636, 636, 636,
	636, -1000, 18478, 19111, 19111, 636, -1000, 1163, 18478, 18478,
	19111, 737, 985, 44441, -1000, 1249, -1000, -1000, -1000, 885,
	-1000, 853, 2062, 2062, 2062, 2062, 19111, 19111, 19111, 19111,
	19111, 19111, 19111, 19111, 19111, 19111, 2062, 44441, 44441, 1350,
	19111, 19111, 19111, 19111, 19111, 19111, 15308, 19111, 19111, 19111,
	1249, 19111, 19111, 19111, 19111, 19111, 19111, 19111, 19111, 19111,
	19111, 19111, 19111, 19111, 19111, 19111, 19111, 19111, 19111, 19111,
	19111, 19111, 19111, 19111, 19111, 19111, 19111, 19111, 1249, 19111,
	1823, 19111, 19111, 14675, 12123, 18478, 18478, 18478, 18478, 18478,
	33680, -1000, -1000, -1000, -1000, -1000, 19111, 19111, 19111, 19111,
	19111, 19111, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 578,
	1476, 1396, 1560, 19111, -1000, 1597, -1000, -145, 24818, 19111,
	1167, 2259, 1832, 44441, -1000, -1000, -1000, 2173, -1000, 2173,
	1476, 2552, 1964, 18478, -1000, -1000, 2552, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1329, -1000, 44441, 1562, 2149,
	44441, 1946, 1162, 363, -1000, 19111, 19111, 1555, -1000, 1502,
	44441, -1000, -164, -1000, 33047, -1000, -1000, 10847, -1000, 44441,
	352, 44441, -1000, 24185, 32414, 12761, 50, -1000, 12761, 1496,
	-1000, 53, 29, 15941, 633, -1000, -1000, -1000, 3120, 21010,
	1323, 633, 115, -1000, -1000, -1000, 1763, -1000, 1763, 1763,
	1763, 1763, 363, 363, 363, 363, -1000, -1000, -1000, -1000,
	-1000, 1790, 1789, -1000, 1763, 1763, 1763, 1763, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1784, 1784, 1784, 1768, 1768,
	410, -1000, 19111, 307, 31781, 2109, 994, 1591, 265, 431,
	1830, 1163, 1163, 1163, 431, -1000, 1332, 1266, 1212, -1000,
	-426, 1550, -1000, -1000, 2214, -1000, -1000, 755, 822, 821,
	816, 44441, 232, 344, -1000, 402, -1000, 31781, 1163, 793,
	611, 1163, -1000, 1163, -1000, -1000, -1000, -1000, -1000, 1163,
	-1000, -1000, 1542, -1000, 1509, 861, 815, 847, 814, 1542,
	-1000, -1000, -100, 1542, -1000, 1542, -1000, 1542, -1000, 1542,
	-1000, 1542, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 723, 221, -225, 44441, 232, 27350, -1000, 463, -1000,
	-1000, -1000, 27350, 27350, -1000, -1000, -1000, -1000, 1157, 1155,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -405,
	44441, -1000, 261, 708, 329, 357, 313, 44441, 294, 2171,
	2164, 2158, 291, 309, 44441, 44441, 428, 1907, 44441, 2117,
	44441, -1000, -1000, -1000, -1000, -1000, 985, 44441, -1000, -1000,
	826, 826, -1000, -1000, 44441, 826, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 826, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	44441, -1000, -1000, -1000, -1000, 44441, -1000, -1000, -1000, -1000,
	-1000, 166, 49, 346, -1000, -1000, -1000, -1000, -1000, 2178,
	-1000, 985, 761, 766, -1000, 1463, -1000, -1000, 851, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 169, 19744, 19744, 19744,
	1271, 475, 1628, 1652, 1056, 948, 948, 907, 907, 641,
	641, 641, 641, 641, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1145, -1000, 1605, -1000, 1538, 1752, 1249, 1605,
	1605, 1049, 779, -1000, 19111, 1249, -1000, -1000, 1249, 1249,
	1249, 19111, -1000, -1000, 19111, 19111, 19111, 19111, 1591, 1591,
	1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591, 19111, 1533,
	1521, 2258, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1065, 1591, 1591, 1591, 1591, 1591, 19111,
	1822, -1000, -1000, -1000, 2414, 1591, 1591, -1000, 1591, 2364,
	2346, 1249, 1341, 1249, 1519, -1000, 2324, 1591, 2318, 2276,
	2238, 1438, 2108, 2102, 2098, 1591, 1591, 1591, 1747, 2081,
	2077, 2060, 2052, 2033, 2024, 2014, 1978, 1938, 1591, -166,
	1591, 1249, -1000, -1000, -1000, -1000, 1933, 1720, 1249, 18478,
	18478, 1517, 1463, 572, -1000, 1605, 1249, 1249, 1605, 1605,
	-1000, 1924, 1919, 1904, 1897, 1893, 1883, 12123, 1249, -1000,
	1560, 44441, -1000, -312, -1000, 13, 622, 1463, -1000, 30515,
	1249, -1000, 8026, -1000, 45707, -1000, -1000, -1000, -1000, -1000,
	28616, 1646, 2552, -1000, -1000, 1463, 1626, -1000, -1000, 363,
	108, 27983, 629, 629, 149, 985, 985, 19111, -1000, -1000,
	-1000, -1000, -1000, -1000, 570, 2233, 368, 1463, -1000, 1420,
	2445, -1000, -1000, -1000, 2148, 21648, -1000, 1463, 1463, 44441,
	1753, 1655, -1000, 568, -1000, 1496, 50, 36, -1000, -1000,
	-1000, -1000, 985, -1000, 1087, 353, 395, -1000, 420, -1000,
	-1000, -1000, -1000, 2038, 112, -1000, -1000, -1000, 245, 363,
	-1000, -1000, -1000, -1000, -1000, -1000, 1141, 1141, -1000, -1000,
	-1000, -1000, -1000, 992, -1000, -1000, -1000, 989, -1000, -1000,
	1878, 1894, 307, -1000, -1000, 689, 1139, -1000, -1000, 2040,
	689, 689, 44441, -1000, -1000, 1318, 2109, 261, 44441, 746,
	1903, -1000, 1830, 1830, 1830, 44441, -1000, -1000, -1000, -1000,
	-1000, -1000, -414, 73, 416, -1000, -1000, -1000, 3713, 44441,
	1622, -1000, 247, -1000, 1304, -1000, 44441, -1000, 1619, 1782,
	1163, 1163, -1000, -1000, -1000, 44441, 1463, -1000, -1000, -1000,
	-1000, 508, 2088, 292, -1000, -1000, -183, -1000, -1000, 232,
	247, 633, 1163, -1000, -1000, -1000, -1000, -1000, -408, 1616,
	487, 251, 345, 44441, 44441, 44441, 44441, 44441, 548, -1000,
	-1000, -1000, -1000, 223, -1000, -1000, 223, -1000, -1000, -1000,
	-1000, 293, 462, -1000, 44441, 44441, 562, -1000, -1000, -1000,
	800, -1000, -1000, 800, -1000, -1000, -1000, -1000, -1000, 2072,
	44441, 43, -365, -1000, -360, 19111, -1000, -1000, -1000, -1000,
	1184, 472, 1628, 19744, 19744, 18478, -94, 807, 807, 27350,
	-1000, -1000, -1000, 19111, 19111, 714, -1000, 19111, 891, -1000,
	-1000, -1000, -1000, 1560, 1591, 1591, 1591, 1591, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1376, 19111,
	19111, 19111, 1249, 359, -1000, -1000, -1000, -1000, -1000, 2255,
	-1000, 19111, 19111, -1000, -1000, -1000, 19111, 19111, -1000, -1000,
	19111, 19111, -1000, 19111, 19111, 20377, 1249, 20377, 19111, 19111,
	20377, -1000, -1000, -1000, -1000, 20377, 19111, 19111, 19111, 19111,
	19111, 19111, 19111, 19111, 19111, -1000, -1000, 31781, 110, -166,
	1823, 110, 1823, -1000, 1605, 1605, 18478, 12123, -1000, -1000,
	-1000, -1000, -1000, 19111, 19111, 19111, 19111, 19111, 19111, -1000,
	-1000, -1000, -1000, -1000, -1000, 622, -1000, 611, 611, 611,
	44441, -1000, -1000, -1000, -1000, -1000, -1000, 1488, 2170, -1000,
	1970, 1969, 2246, 2233, -1000, 24185, 2552, -1000, -1000, 44441,
	-273, -1000, 2015, 2093, 629, 629, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 10209, 2173, 19111, 1888, 44441, 167, -1000,
	23552, 44441, 44441, 24185, 24185, 24185, 24185, 24185, -1000, 1934,
	1931, -1000, 1922, 1921, 1944, 44441, -1000, 1585, 1249, 2205,
	21648, 386, 19111, 26084, 1415, 24185, -1000, -1000, 24185, 44441,
	9571, -1000, -1000, 40, 18, -1000, -1000, -1000, -1000, 3120,
	-1000, -1000, 398, 2132, 2027, -1000, -1000, -1000, -1000, -1000,
	1580, -1000, 1576, 1486, 1568, 221, -1000, 1725, 2066, 689,
	689, -1000, 987, -1000, 1163, 1135, 1112, -1000, -1000, -1000,
	484, -1000, 2112, 44441, 1874, 1873, 1872, -1000, -422, 986,
	1781, 1671, 19111, 1780, 2213, 1426, 44441, -1000, -1000, 44441,
	-1000, 172, -1000, 307, 44441, -1000, -1000, -1000, 344, 44441,
	-1000, 7899, -1000, -1000, -1000, 247, -1000, -1000, -1000, -1000,
	-1000, -1000, 44441, 259, -1000, 1771, 1240, -1000, -1000, 1761,
	-1000, -1000, -1000, -1000, 228, 325, 229, 1109, 229, -1000,
	44441, 559, 1894, 44441, -1000, -1000, -1000, 826, 826, -1000,
	-1000, 2064, -1000, 1163, 1591, 19744, 19744, -1000, 636, -1000,
	1463, -144, 1763, 1763, -1000, 1763, 1768, -1000, 1763, 190,
	1763, 185, 1763, -1000, -1000, -144, 1249, 1712, 1385, -1000,
	985, 19111, -1000, -1000, -1000, -1000, -1000, -35, 1865, 1860,
	1591, -1000, 1759, 1757, 19111, 1591, 1591, 1591, 1591, -1000,
	985, 1438, 1838, 1447, -1000, -1000, -1000, -1000, 1459, 1591,
	1833, -271, 1249, 1565, 1565, 1565, 1565, 1565, 1560, 1560,
	1560, 1560, 44441, -1000, -166, -1000, -1000, -202, -203, -1000,
	1249, -166, 1435, -1000, -1000, 1249, -1000, 1666, 1563, 1797,
	1558, 1591, 1760, -1000, 2175, 2175, 2175, 1536, 45074, 44441,
	-1000, -1000, -1000, -1000, 2233, 2229, 1433, -1000, -1000, 108,
	461, -1000, 1983, 2093, -1000, 2210, 2003, 2209, -1000, -1000,
	-1000, -1000, -1000, 985, -1000, 2065, 1373, -1000, 706, 1358,
	-1000, -1000, 17845, 1548, 1967, 567, 1536, 1394, 2445, 1827,
	1862, 2530, -1000, -1000, -1000, -1000, 1929, -1000, 1928, -1000,
	-1000, 1658, -1000, -1000, 1396, 1249, 1449, 352, 24185, 1384,
	1384, -1000, 564, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	841, 5607, 2278, -1000, 1103, -1000, 1070, 209, 973, -1000,
	-1000, 689, 689, -1000, 785, 784, -1000, 44441, 1745, -1000,
	363, 1102, 363, 959, -1000, 953, -1000, -1000, -1000, -1000,
	1779, 1875, -1000, -1000, -1000, -1000, 44441, -1000, -1000, 44441,
	44441, 44441, 1739, 2208, -1000, 19111, 1677, 701, 1829, 44441,
	44441, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 454, 689, -381, 299, 298, 689, 689, 689,
	-424, -1000, -1000, 1493, 1481, -1000, -134, -1000, 19111, -1000,
	-1000, -1000, 924, 924, -1000, 1658, -1000, -1000, -1000, 1302,
	-1000, -1000, -103, 44441, 44441, 44441, 44441, -1000, 965, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 636, 19744, 1249, -1000, -1000, 363, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1249, -1000, 19111, -1000, 19111, -1000,
	985, 2173, 1098, 19111, 19111, -1000, 949, 938, 1591, -1000,
	-1000, -1000, -1000, 1249, 20377, -1000, 20377, -1000, 19111, 242,
	807, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1249, 351, -1000, -1000, -1000, -1000, 2243, -1000, 1249,
	19111, -1000, -1000, 19111, -1000, 19111, 19111, -1000, 19111, -1000,
	19111, 1463, 2023, 1463, 1463, 26084, -1000, -1000, 2229, 2226,
	2207, 1991, 1995, 1995, 1983, -1000, 2195, 2192, -1000, 1096,
	2191, 1093, 772, -1000, 44441, 19111, 167, -1000, 373, 44441,
	167, 44441, -1000, 2206, -1000, -1000, 19111, 1673, -1000, 19111,
	-1000, -1000, -1000, -1000, -1000, -1000, 7768, 2233, 1384, -1000,
	-1000, 648, -1000, 19111, -1000, -1000, -1000, 46010, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1090, 1088, -1000, -1000,
	1662, 19111, -1000, -1000, -1000, 1299, 1274, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1658, -1000, -1000, -1000, -1000,
	344, -423, 1805, 44441, 933, -1000, 1468, 1426, 339, 167,
	1082, 689, 689, 689, 911, 904, 30515, 1456, -1000, 44441,
	375, -1000, 344, -1000, -139, -140, 1591, -1000, -1000, 2130,
	-1000, -1000, 12123, -1000, -1000, 1651, 1788, -1000, -1000, -1000,
	324, -1000, -1000, -1000, 1591, 1591, 1249, -1000, 1591, 1591,
	1272, 1254, -1000, -1000, 1447, -1000, 1523, -1000, 242, 1249,
	1858, -1000, -1000, 7768, -1000, -1000, 2206, 2189, 110, -1000,
	-1000, 244, 110, 985, 1483, 1591, 1401, 1328, 1591, 26717,
	-1000, 2188, 2183, 31148, 31148, 622, 2226, -173, 19111, 19111,
	1980, 903, -1000, -1000, -1000, -1000, 1080, 1074, -1000, 1073,
	-1000, 2277, -1000, 985, -1000, 167, -1000, 558, 1358, -1000,
	2173, 985, 44441, 985, 88, 2206, -1000, 1591, -1000, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463,
	1463, 1463, 1463, 1463, 1463, 1463, 1463, 1463, -1000, -1000,
	44441, 1756, -1000, -1000, 2126, 1431, 72, -1000, 1413, -1000,
	-1000, 152, -1000, 19111, -1000, 30515, 1071, 909, -1000, -1000,
	-1000, -1000, -424, -1000, -1000, -1000, -1000, -1000, -1000, 386,
	1417, -1000, 677, 44441, 44441, 1249, 347, -109, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19111, -1000, 1249,
	1848, -1000, -255, -1000, -393, 19111, -166, -1000, -1000, -166,
	-1000, 19111, -1000, -1000, 19111, -1000, 19111, -1000, 1411, -1000,
	-1000, -1000, -1000, -1000, 1411, 1411, -1000, -173, -1000, 1370,
	-1000, 44441, 985, 1341, -1000, 882, -1000, -1000, -1000, -1000,
	-1000, 44441, 1358, 44441, -1000, 1398, 1249, 1463, 2173, -1000,
	1390, -1000, 386, -1000, 1629, 1671, -1000, -1000, -1000, 17212,
	-1000, -1000, -1000, -1000, -1000, 220, -101, 12123, 8933, 1368,
	-1000, -1000, 1923, -98, -113, 1438, -1000, -351, -1000, -1000,
	-1000, -1000, 186, -1000, -1000, 1341, -1000, -1000, 1308, 1180,
	1175, 29882, -1000, -1000, -1000, -1000, -173, -1000, -1000, 2110,
	-1000, -1000, 1333, -1000, -1000, 26084, 43808, -1000, -88, 302,
	-101, 19111, 1503, 1249, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -4, -1000, -1000, -1000, -1000, -1000, 1761, -1000,
	1911, -1000, 1249, -1000, 155, -373, -197, -207, -1000, -1000,
	-1000, 19111, -1000, 19111, -1000, 19111, -1000, -1000, -1000, 44441,
	1463, -1000, 1339, -1000, 4112, -213, 1843, -1000, -47, -1000,
	-1000, -1000, 833, 893, -1000, -1000, -1000, -1000, -1000, -1000,
	1735, 44441, -1000, 399, -1000, -1000, -103, -106, -1000, 751,
	-1000, -1000, -1000, -1000, -1000, 1158, 947, 1591, -1000, 44441,
	-1000, 43808, -208, 633, 7768, -1000, 1839, 1835, 2252, -1000,
	-1000, -1000, -1000, -1000, -1000, -432, 1253, 263, -1000, -110,
	155, -1000, 19111, -1000, 19111, -1000, 1249, -1000, -1000, 2105,
	88, -1000, 2254, -1000, 2239, 661, 661, -1000, 900, -432,
	-1000, -114, -1000, 1591, 1591, -1000, -214, -1000, -1000, -1000,
	-1000, -1000, 382, 943, -1000, -1000, -1000, -1000, -1000, -1000,
	7768, -1000, -1000, -1000, 216, 216, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2744, 2743, 31, 4, 46, 43, 2742, 68, 117,
	200, 30, 219, 110, 2739, 2738, 2718, 2717, 2716, 2714,
	2707, 235, 232, 228, 2706, 2700, 2699, 2698, 2696, 2694,
	2692, 2689, 2688, 2686, 230, 180, 199, 2685, 2684, 2683,
	142, 184, 102, 104, 193, 2678, 2676, 94, 2675, 2674,
	2673, 224, 222, 214, 778, 2672, 220, 140, 61, 2671,
	2670, 2669, 2668, 2666, 2665, 2663, 2662, 2661, 2657, 2656,
	2655, 2653, 2651, 2646, 2645, 2644, 338, 2643, 2642, 21,
	2641, 97, 2640, 2639, 2638, 2637, 9, 2636, 2635, 15,
	36, 2634, 2633, 67, 2632, 2631, 2630, 2628, 2627, 20,
	2626, 27, 2625, 34, 2624, 2622, 150, 2621, 2620, 2618,
	40, 2614, 2613, 2612, 2611, 2610, 2605, 2604, 163, 2601,
	2592, 2585, 191, 202, 2582, 2578, 223, 124, 136, 2577,
	2574, 129, 196, 2573, 145, 2571, 2568, 2567, 173, 2566,
	3676, 2565, 2564, 90, 78, 2563, 85, 2562, 2561, 11,
	103, 77, 17, 38, 3, 2560, 2558, 89, 96, 2556,
	135, 123, 86, 2555, 121, 111, 2551, 2549, 12, 6,
	2547, 1, 7, 2, 81, 2542, 2540, 132, 2539, 2538,
	2537, 108, 2536, 2535, 5177, 2533, 106, 156, 122, 93,
	2531, 55, 79, 2530, 2529, 2528, 2527, 2526, 59, 2524,
	2520, 2516, 159, 48, 178, 2508, 45, 44, 66, 154,
	2507, 47, 98, 2506, 160, 155, 2505, 2499, 74, 41,
	53, 2498, 130, 153, 144, 65, 120, 157, 2497, 2490,
	60, 84, 2488, 2487, 2481, 2478, 181, 2473, 2472, 83,
	2471, 71, 2459, 205, 2452, 14, 2444, 73, 50, 2440,
	105, 133, 82, 32, 2438, 262, 2437, 70, 182, 151,
	177, 2431, 2429, 2428, 2427, 194, 329, 2423, 2422, 126,
	188, 165, 171, 107, 2421, 347, 2416, 2413, 118, 2432,
	5606, 2410, 29, 179, 2409, 2407, 5202, 162, 49, 25,
	2406, 198, 2403, 2402, 2401, 201, 183, 128, 970, 76,
	2400, 2397, 91, 19, 2394, 2393, 2389, 2382, 2381, 2378,
	100, 42, 39, 37, 204, 88, 18, 119, 174, 92,
	2372, 2371, 2370, 147, 115, 2369, 176, 175, 149, 187,
	2367, 192, 164, 139, 2366, 131, 35, 2364, 2362, 2357,
	2355, 125, 2347, 2345, 2344, 2343, 172, 169, 143, 99,
	2342, 101, 141, 170, 167, 63, 2340, 52, 2333, 2330,
	33, 185, 28, 2327, 16, 75, 80, 26, 127, 137,
	2326, 0, 2323, 22, 189, 346, 186, 2320, 2319, 5,
	8, 10, 2317, 2313, 2311, 2309, 161, 2307, 2305, 2304,
	2299, 24, 58, 23, 13, 134, 95, 2298, 2295, 5431,
	902, 152, 2294, 209,
}

//line sql.y:7659
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 397, 398, 398, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 371, 371,
	371, 374, 374, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	401, 401, 179, 179, 177, 177, 178, 178, 250, 250,
	24, 25, 25, 260, 260, 259, 259, 259, 261, 261,
	261, 261, 298, 298, 26, 26, 26, 26, 26, 124,
	124, 373, 373, 372, 364, 364, 363, 363, 362, 370,
	370, 369, 369, 368, 38, 39, 48, 48, 48, 48,
	49, 50, 375, 375, 337, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 339, 339, 325, 325, 338, 338, 338, 338, 338,
	338, 338, 324, 324, 135, 135, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 390, 390, 390, 389, 389, 229, 229,
	229, 229, 229, 229, 229, 229, 145, 145, 157, 157,
	157, 157, 157, 143, 143, 144, 142, 142, 142, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 156, 156, 152, 152, 152, 153, 153,
	153, 154, 154, 391, 391, 391, 391, 303, 303, 303,
	303, 306, 306, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 305, 305, 305, 305, 305, 307, 307, 307,
	307, 307, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 309, 309,
	309, 309, 309, 309, 309, 309, 323, 323, 310, 310,
	318, 318, 319, 319, 319, 320, 320, 320, 321, 321,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 317,
	317, 316, 316, 316, 326, 351, 351, 350, 350, 348,
	348, 348, 348, 348, 348, 348, 348, 335, 335, 345,
	345, 345, 345, 345, 334, 334, 330, 330, 330, 331,
	331, 332, 332, 329, 329, 333, 333, 347, 347, 346,
	346, 327, 327, 328, 328, 353, 392, 392, 392, 392,
	392, 393, 393, 354, 382, 384, 384, 384, 383, 383,
	380, 381, 379, 379, 379, 379, 379, 81, 81, 81,
	273, 273, 274, 274, 343, 343, 342, 342, 342, 344,
	344, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 268, 268, 268, 378, 378, 378, 378, 378,
	378, 377, 377, 377, 340, 340, 340, 376, 376, 57,
	57, 212, 212, 395, 395, 396, 396, 396, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 106, 106, 107, 107, 107, 107, 109,
	109, 109, 356, 356, 58, 58, 3, 3, 167, 169,
	170, 170, 168, 168, 168, 168, 168, 168, 60, 60,
	59, 59, 172, 171, 173, 173, 173, 1, 1, 2,
	2, 4, 4, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 322, 322, 322, 355, 355,
	357, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 112, 111, 111, 110, 113, 113, 113, 113, 113,
	113, 113, 113, 359, 359, 359, 61, 61, 360, 311,
	312, 313, 5, 6, 336, 358, 120, 120, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 267,
	267, 276, 276, 266, 266, 291, 291, 291, 269, 269,
	269, 270, 270, 388, 388, 388, 263, 263, 64, 64,
	64, 66, 66, 67, 68, 68, 293, 293, 294, 294,
	69, 70, 82, 82, 82, 82, 82, 82, 105, 105,
	105, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 385, 385, 386, 387, 387, 387, 387,
	73, 75, 31, 31, 31, 31, 31, 31, 130, 130,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 125, 125, 125, 119, 119, 402, 76, 77,
	77, 123, 123, 123, 116, 116, 116, 122, 122, 122,
	16, 16, 17, 249, 249, 18, 18, 127, 127, 129,
	129, 129, 129, 129, 131, 131, 131, 131, 131, 131,
	131, 126, 126, 128, 128, 128, 128, 284, 284, 284,
	283, 283, 161, 161, 163, 162, 162, 164, 164, 165,
	165, 165, 165, 210, 210, 187, 187, 247, 247, 245,
	245, 246, 246, 248, 248, 248, 248, 251, 251, 166,
	166, 166, 166, 174, 174, 175, 175, 176, 176, 292,
	292, 289, 289, 289, 288, 288, 180, 180, 180, 182,
	181, 181, 181, 181, 183, 183, 185, 185, 184, 184,
	186, 191, 191, 190, 190, 188, 188, 188, 188, 189,
	189, 189, 189, 192, 192, 140, 140, 140, 140, 140,
	140, 140, 155, 155, 155, 155, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 236, 236, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 149, 83, 83, 83, 84,
	84, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	86, 141, 141, 88, 88, 87, 87, 205, 205, 281,
	281, 89, 90, 90, 93, 93, 92, 91, 91, 97,
	97, 94, 94, 96, 96, 95, 98, 98, 99, 100,
	100, 264, 264, 193, 193, 201, 201, 201, 201, 194,
	194, 194, 194, 194, 194, 194, 202, 202, 202, 209,
	203, 203, 199, 199, 199, 199, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 160, 160, 160, 160, 217, 217, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 148, 148, 300, 300, 367, 367,
	366, 366, 365, 365, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 403, 403, 314, 314, 314,
	314, 200, 200, 200, 200, 200, 121, 121, 121, 121,
	121, 297, 297, 297, 301, 301, 301, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 302, 302, 215, 215, 117, 117, 213, 213,
	214, 216, 216, 211, 211, 211, 196, 196, 196, 218,
	218, 219, 219, 101, 102, 102, 103, 103, 220, 220,
	222, 221, 221, 223, 224, 224, 224, 225, 225, 226,
	226, 226, 47, 47, 47, 47, 47, 42, 42, 42,
	42, 43, 43, 43, 43, 132, 132, 132, 132, 134,
	134, 133, 133, 79, 79, 80, 80, 80, 138, 138,
	139, 139, 139, 136, 136, 137, 137, 243, 243, 227,
	227, 227, 234, 234, 234, 230, 230, 232, 232, 232,
	233, 233, 233, 231, 240, 240, 242, 242, 241, 241,
	237, 237, 238, 238, 239, 239, 239, 235, 235, 195,
	195, 195, 195, 195, 244, 244, 244, 244, 252, 252,
	206, 206, 208, 208, 207, 207, 159, 253, 253, 257,
	254, 254, 258, 258, 258, 258, 258, 255, 255, 256,
	256, 285, 285, 285, 262, 262, 275, 275, 271, 271,
	272, 272, 265, 265, 277, 277, 277, 74, 204, 204,
	352, 352, 349, 280, 280, 282, 282, 286, 286, 290,
	290, 287, 287, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 399, 400, 295, 296, 296, 296,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 7, 7, 6,
	2, 2, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 5, 4, 2, 2, 1, 2, 2, 2,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 8, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 4, 7,
	8, 6, 5, 6, 8, 11, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 4, 6, 5, 9, 6,
	9, 1, 1, 1, 1, 1, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 6, 8, 0, 2, 0, 2,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 2, 1, 3, 0, 1, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 4, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -397, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -399,
	11, 438, 256, 255, 28, -12, 498, 86, -398, 642,
	-243, -227, 22, 33, 29, -226, -222, -123, -227, 20,
	18, 7, -76, -402, -76, -76, 12, 13, -76, -337,
	-339, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -361, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 498, 501, -344, 223, 229, 230,
	439, 123, 122, 75, 225, -341, 361, 531, 612, -56,
	614, 102, 104, 613, 44, 235, 615, 616, 617, 538,
	618, 244, 619, 620, 621, 622, 628, 580, 629, 630,
	631, 124, 7, -76, -290, -286, -371, -279, 89, 90,
	91, 495, 247, 529, 530, 296, 81, 41, 504, 358,
	361, 531, 468, 612, 307, 321, 315, 473, 474, 475,
	342, 334, 496, 532, 505, 299, 248, 284, 606, 332,
	132, 614, 302, 533, 262, 366, 367, 534, 368, 102,
	310, 405, 627, 301, 535, 625, 104, 613, 79, 467,
	51, 609, 44, 257, 330, 231, 326, 615, 285, 536,
	507, 278, 123, 120, 634, 36, 324, 50, 30, 624,
	122, 49, 616, 147, 537, 617, 538, 370, 349, 600,
	48, 371, 263, 539, 84, 268, 500, 305, 608, 372,
	487, 325, 373, 295, 623, 228, 540, 592, 374, 375,
	601, 541, 350, 354, 489, 542, 397, 472, 376, 641,
	52, 543, 544, 602, 121, 545, 78, 618, 80, 319,
	320, 546, 293, 246, 492, 493, 399, 346, 450, 457,
	458, 108, 109, 453, 110, 459, 111, 460, 461, 462,
	451, 112, 105, 452, 463, 464, 347, 348, 113, 465,
	107, 106, 454, 456, 114, 466, 244, 35, 377, 497,
	297, 58, 272, 400, 46, 352, 638, 45, 596, 547,
	599, 345, 341, 447, 53, 548, 549, 550, 551, 469,
	619, 344, 318, 340, 633, 4, 290, 470, 620, 62,
	230, 356, 355, 357, 279, 396, 337, 552, 553, 554,
	251, 82, 555, 327, 21, 556, 557, 378, 286, 558,
	56, 559, 560, 403, 260, 561, 54, 621, 39, 562,
	265, 635, 622, 563, 564, 565, 566, 267, 567, 380,
	568, 379, 351, 353, 274, 381, 499, 569, 306, 323,
	264, 626, 570, 252, 483, 484, 485, 486, 607, 491,
	490, 266, 271, 259, 404, 253, 571, 572, 573, 574,
	575, 300, 591, 576, 577, 311, 628, 448, 43, 578,
	579, 580, 581, 582, 294, 289, 398, 407, 61, 83,
	363, 583, 584, 605, 317, 287, 585, 308, 55, 629,
	630, 631, 281, 632, 476, 477, 478, 479, 9, 639,
	640, 471, 383, 124, 291, 292, 47, 338, 273, 586,
	303, 587, 328, 329, 343, 316, 339, 309, 593, 275,
	384, 449, 261, 588, 406, 288, 359, 364, 304, 503,
	488, 280, 385, 604, 502, 480, 481, 336, 333, 282,
	482, 589, 386, 236, 276, 277, 590, 594, 387, 388,
	298, 389, 390, 391, 392, 393, 395, 394, 283, 501,
	314, 331, 365, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 430, 431, 432, 433, 434, 435,
	436, 446, 234, -76, 234, -184, -286, 234, -255, 367,
	-276, 369, 382, 377, 387, 375, -267, 378, 380, 274,
	-388, 397, 234, 384, 222, 370, 379, 388, 389, 298,
	395, 390, 394, 283, 391, 392, 393, -371, 174, 617,
	632, 132, 335, 374, 372, 398, 596, -286, 309, -293,
	314, -280, -371, -279, 312, -184, -82, 592, 226, -295,
	-295, -125, 596, 598, -203, -140, 140, -155, -158, -146,
	-150, -197, -198, -199, -200, -156, -211, 163, 164, 171,
	141, -209, -159, 26, 494, 440, 439, 174, 31, -149,
	68, 69, 442, 143, 57, 415, 416, -157, 410, 417,
	412, 467, 469, 470, 471, 468, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 472, 444, 445, 115,
	446, 105, 107, 106, 447, 448, 449, 489, 492, 493,
	491, 490, 347, 348, 450, 451, 452, 108, 109, 110,
	111, 112, 113, 114, 453, 456, 454, 455, 457, 458,
	459, 464, 465, 460, 461, 462, 463, 466, -85, -97,
	520, 519, -98, -147, -148, -280, -286, 239, 409, 233,
	169, 438, -151, -144, -8, -207, 217, 408, 413, 414,
	418, 411, 506, 508, 523, 524, 526, 511, 516, 515,
	518, 483, 484, 485, 486, 487, 488, -371, -279, -153,
	-152, -193, 92, 98, 103, 99, -394, 116, -399, 610,
	93, 94, 95, 96, 97, 117, 118, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 44,
	383, 383, -184, -76, -76, -76, -76, -220, -123, -222,
	-10, -8, -399, 8, -76, -8, -9, -13, -34, -36,
	525, -35, -286, -227, -243, 12, 159, 42, 50, -225,
	-226, -12, -8, -140, 19, 23, 24, -128, 165, -140,
	-286, -77, -128, -265, 238, -76, -76, -254, -298, 309,
	-258, 398, 397, -282, -256, -280, -278, -255, 396, 227,
	23, 139, 25, 27, 142, 174, 127, 19, 143, 37,
	229, 335, 245, 173, 241, 439, 222, 72, 506, 410,
	412, 408, 415, 441, 442, 409, 369, 31, 13, 508,
	28, 255, 24, 38, 167, 224, 146, 509, 258, 26,
	256, 115, 118, 511, 22, 75, 250, 14, 243, 40,
	16, 512, 513, 17, 239, 238, 159, 235, 70, 11,
	217, 29, 155, 66, 514, 134, 515, 516, 517, 518,
	128, 68, 156, 20, 636, 413, 414, 33, 597, 494,
	269, 169, 73, 59, 598, 140, 411, 519, 520, 116,
	521, 119, 76, 603, 136, 18, 71, 42, 522, 270,
	523, 240, 637, 524, 401, 525, 157, 225, 438, 69,
	158, 610, 526, 611, 233, 382, 8, 443, 32, 254,
	242, 126, 67, 527, 234, 145, 444, 445, 237, 129,
	117, 7, 133, 34, 12, 74, 77, 416, 417, 418,
	57, 125, 498, 144, 15, 528, 402, 138, 132, -338,
	156, -324, -328, -280, 249, -354, 245, -184, -347, -346,
	-280, -399, -124, -275, 235, 243, 242, 133, -375, 136,
	291, 409, 233, -51, -52, -53, -255, 173, 616, -106,
	266, 270, 87, 87, -328, -327, -326, -376, 270, 249,
	-353, -345, 241, 250, -334, 242, 243, -329, 235, 134,
	-376, -329, 240, 250, 245, 249, 270, 270, 124, 270,
	124, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	265, -335, 148, -335, 502, 502, -341, -376, 245, 235,
	-376, -376, 237, 35, 35, -277, -329, 237, 25, -335,
	-335, -335, -255, 173, -335, -335, -335, -335, 278, 278,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, 234, -375, -132,
	394, 298, 81, -54, 280, -37, -184, -275, 235, 236,
	-375, 267, -184, 218, -184, -269, 156, 15, -269, -266,
	383, 381, 368, 373, -269, -269, -269, -269, 281, 366,
	-330, 235, 35, 246, 383, 281, 366, 281, 282, 281,
	282, 376, 386, 281, -291, 14, 159, 409, 371, 375,
	274, 234, 275, 236, 385, 282, -291, 93, -270, 156,
	383, 277, -269, -269, -296, -399, -282, 335, -371, 599,
	-296, -296, 32, 90, 237, -280, -78, -280, 93, -15,
	-11, -22, -21, -23, 148, -130, 383, -118, 174, 617,
	600, 601, 602, 599, 380, 607, 605, 603, 281, 604,
	87, 136, 138, 139, 4, -140, 155, -194, 148, 149,
	150, 151, 152, 153, 154, 159, 140, 142, 156, -236,
	137, 160, 161, 162, 163, 164, 165, 166, 168, 167,
	169, 170, 157, 158, 173, 220, 221, -150, -150, -150,
	-150, -209, -399, -399, -399, -150, -264, -399, -399, -399,
	-399, -215, -140, -399, -403, -399, -403, -403, -314, -399,
	-314, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, 218, -399, -399, -399, -399, -399,
	-150, -314, -314, -314, -314, -314, -399, -399, -399, -399,
	-399, -399, 103, 98, 92, -211, 99, 93, -280, -286,
	-8, -9, -203, -399, -295, -385, -386, -187, -184, -399,
	298, -280, -280, 267, -225, -12, -8, -220, -226, -222,
	-8, -76, -116, -129, 63, 64, -131, 24, 38, 67,
	65, 23, -400, 88, -400, -243, -400, 87, -36, -247,
	86, 61, 43, 93, 93, 87, 21, -221, -223, -140,
	14, -284, 4, -283, 25, -280, 93, 218, 101, 14,
	-185, 29, -184, -265, -265, 87, 309, -258, -298, -260,
	-259, 399, 401, 148, -285, -280, 93, 31, 88, 87,
	-184, -303, -306, -308, -307, -309, -304, -305, 332, 333,
	174, 336, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 349, 32, 257, 328, 329, 330, 331, 350, 351,
	352, 353, 354, 355, 356, 357, 315, 334, 496, 316,
	317, 318, 319, 320, 321, 323, 324, 325, 326, 327,
	-374, -371, 86, 88, 87, -310, 86, -140, -132, 234,
	-371, 235, 235, 235, -76, 438, -335, -335, -335, 265,
	19, -44, -41, -361, 18, -40, -41, 227, 120, 121,
	224, 86, -324, 86, -333, -374, -371, 86, 134, 240,
	133, -332, -329, -332, -333, -371, -211, -371, 134, 134,
	-371, -371, -251, -280, -251, -251, 23, -251, 23, -251,
	23, 95, -280, -251, 23, -251, 23, -251, 23, -251,
	23, -251, 23, 31, 78, 79, 80, 31, 82, 83,
	84, -211, -371, -371, -211, -324, -255, -184, -371, 95,
	95, 95, -335, -335, 95, 93, 93, 93, -335, -335,
	95, 93, -288, -286, 93, 93, -377, 251, 295, 297,
	95, 95, 95, 95, 31, 93, -378, 31, 624, 623,
	625, 626, 627, 93, 95, 31, 95, 31, 95, -280,
	86, -184, -138, 285, 222, 224, 227, 76, 93, 299,
	303, 304, 148, 44, 87, 237, 234, -371, -271, 239,
	-271, -280, -287, -286, -278, 93, -140, -331, 14, 159,
	-291, -291, -269, -184, -331, -291, -269, -184, -269, -269,
	-269, -269, -291, -291, -291, -269, -286, -286, -184, -184,
	-184, -184, -184, -184, -184, -296, -270, -269, 599, 93,
	-263, 14, 76, -296, -296, -294, 312, 346, 593, 594,
	595, 87, 498, -177, -184, 599, 599, 599, 599, 599,
	599, -140, -140, -140, -140, 521, -201, 116, 140, 117,
	118, -158, -202, -207, -209, 100, 159, 142, 156, -236,
	-146, -150, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -297, -280, 93, 174, -154,
	-153, 99, -394, -154, -126, -128, -140, -140, -371, -126,
	-126, -140, -213, -214, 144, -211, -400, -400, 95, 99,
	165, -122, 24, 38, -122, -122, -122, -122, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -122, -280,
	-280, -115, -114, 420, 421, 422, 423, 425, 426, 427,
	430, 431, 435, 436, 419, 437, 424, 429, 432, 433,
	434, 428, 331, -140, -140, -140, -140, -140, -140, -83,
	-140, 127, 128, 129, -140, -140, -140, -400, -140, -140,
	-140, -204, -203, -370, -369, -368, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -400,
	-140, -160, -144, 95, -371, 99, -140, -140, -127, 24,
	38, -126, -282, -287, -278, -126, -127, -127, -126, -126,
	-280, -140, -140, -140, -140, -140, -140, 218, -243, -400,
	-203, 87, -387, 401, 402, 597, -289, 270, -288, 25,
	-204, 93, 14, -249, 77, -280, -225, -225, 63, 64,
	59, -126, -131, -400, -35, 25, -245, -280, 62, 93,
	-315, -255, 358, 359, 174, -140, -140, 87, -224, 27,
	28, -184, -283, 165, -287, -184, -250, 270, -184, -162,
	-164, -165, -166, -187, -210, -399, -167, 517, 514, 14,
	-177, -178, -186, -286, -258, -260, 87, 400, 402, 403,
	76, 119, -140, -316, 173, -343, -342, -341, -324, -326,
	-327, -328, 88, -316, -320, 364, 363, -310, -310, -310,
	-310, -310, -315, -315, -315, -315, 86, 86, -310, -310,
	-310, -310, -318, 86, -318, -318, -319, 86, -319, -354,
	-140, -351, -350, -348, -349, 244, 102, 590, 546, 498,
	538, 580, 77, -346, -224, 95, -400, -138, -272, 239,
	-352, -349, -371, -371, -371, -272, -371, 93, -371, 93,
	-371, 93, -107, -58, -1, 636, 637, 638, 87, 19,
	-325, -324, -57, 295, -357, -358, 270, -353, -347, -333,
	134, -332, -333, -333, -371, 87, 29, 124, 124, 124,
	124, 498, 224, 32, -273, 537, 140, 590, 546, -324,
	-57, -297, 237, -297, -297, 93, 93, -268, 632, -177,
	-134, 287, 148, 276, 276, 234, 234, 289, -184, 300,
	302, 301, 299, 303, 304, 23, 23, 23, 288, 290,
	292, 278, -184, -184, -271, 76, -179, -184, 26, -286,
	-184, -269, -269, -184, -269, -269, -184, -280, -118, 401,
	87, 498, 22, -119, 22, -399, 116, 117, 118, -202,
	-146, -150, -146, 139, 258, 87, -400, 25, 87, 77,
	-400, -400, -400, 87, 14, -216, -214, 146, -140, -400,
	-400, -400, -400, -203, -140, -140, -140, -140, -400, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -203, 87,
	87, 14, -301, 25, -400, -400, -400, -400, -400, -215,
	-400, 14, 87, -400, -400, -400, 87, 87, -400, -400,
	87, 87, -400, 87, 87, 87, -367, 87, 87, 87,
	87, -400, -400, -400, -400, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, -400, -90, 522, -400, -400,
	87, -400, 87, -400, -126, -126, -399, 218, -400, -400,
	-400, -400, -400, 87, 87, 87, 87, 87, 87, -282,
	-400, -386, 596, 402, -191, -190, -188, 74, 238, 75,
	-399, -288, -400, -154, 90, -246, 90, -245, -196, -280,
	95, 99, -227, -161, -163, 14, -131, -209, 88, 87,
	-315, -231, -237, -266, -280, 93, 174, -317, 174, -317,
	358, 359, -223, 218, -192, 15, -195, 32, 57, -11,
	-399, -399, 32, 87, -180, -182, -181, -183, 66, 70,
	72, 67, 68, 69, 73, -292, 25, -162, -9, -8,
	-399, -399, -399, -184, -177, -401, 14, 77, -401, 87,
	218, -259, -261, 404, 401, 407, -371, 93, -106, 87,
	-341, -328, -228, -135, 40, -321, 365, -315, 505, -315,
	-323, 93, -323, 95, 95, 88, -47, -42, -43, 33,
	81, -348, -335, 93, 39, -335, -335, -280, 88, -224,
	-134, -184, 140, 76, -352, -352, -352, -286, -2, 635,
	641, 134, 86, 368, 18, -245, 87, 88, -212, 296,
	88, -108, -280, 88, 86, -333, -333, -280, -399, 234,
	31, 31, 590, 546, 537, -57, -212, -316, -371, 634,
	633, 88, 236, 294, -139, 415, -136, 93, 89, -184,
	-184, -184, -184, -184, 227, 224, -395, 305, -395, 279,
	237, -177, -184, 87, -81, 253, 248, -291, -291, 33,
	-184, 401, 608, 606, -140, 139, 258, -158, -150, -128,
	495, -299, 174, 332, 257, 330, 326, 346, 337, 363,
	328, 364, 325, 324, 323, -299, -297, -140, -140, 147,
	-140, 145, -400, -400, -400, -400, -400, -220, -140, -140,
	-140, -400, 174, 332, 14, -140, -140, -140, -140, -368,
	-140, -140, -140, -366, -365, -154, -211, -400, -366, -140,
	-140, -365, -365, -369, -369, -369, -369, -369, -203, -203,
	-203, -203, -399, -280, -93, -92, -91, 573, 238, -90,
	-160, -93, -160, -400, -400, -127, -282, -140, -140, -140,
	-140, -140, -140, -188, -329, -329, -329, -251, 87, -262,
	22, 14, 57, 57, -161, -192, -162, -131, -280, -234,
	592, -240, 46, -238, -239, 47, -235, 48, 56, -317,
	-317, 165, -225, -140, -252, 76, -253, -257, -211, -206,
	-208, -207, -399, -244, -400, -280, -251, -253, -164, -165,
	-165, -164, -165, 66, 66, 66, 71, 66, 71, 66,
	-181, -286, -400, -400, -9, -9, -140, -289, 77, -162,
	-162, -186, -286, 165, 401, 405, 406, -341, -393, 116,
	140, 31, 76, 361, 102, -391, 173, 534, 585, 590,
	546, 538, 580, -392, 240, 133, 134, 252, 25, 41,
	88, 87, 88, 87, 88, 87, -274, -273, -43, -42,
	-335, -335, 95, -371, 93, 93, 236, 26, -184, 76,
	76, 76, -109, 639, 95, 86, -3, 81, -140, 86,
	19, -324, -211, -359, -311, -360, -312, -313, -5, -6,
	-336, -112, 57, 102, -61, 44, 235, 619, 620, 124,
	-399, 632, -351, -245, -355, -357, -184, -143, -399, -142,
	-144, -151, 163, 164, -212, -184, -133, 285, 293, 86,
	-137, 90, -373, 77, 276, 361, 276, -396, 306, 93,
	-396, -184, -81, -47, -184, -269, -269, 33, -371, -400,
	-158, -150, -399, -302, 504, -310, -310, -310, -319, -310,
	320, -310, 320, -310, -302, -400, 87, -400, 22, -400,
	-140, -117, 443, 87, 87, -400, 86, 86, -140, -400,
	-400, -400, -400, -367, 87, -400, 87, -400, 87, -300,
	591, -400, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -89, -281, -280, -90, 555, 555, -400, -90, -217,
	87, -400, -400, 87, -400, 87, 87, -400, 87, -400,
	87, -189, 22, -189, -189, -400, 90, -184, -192, -218,
	16, -231, 51, 338, -242, -241, 55, 47, -239, 19,
	49, 19, 30, -252, 87, 148, 87, -400, -400, 87,
	57, 218, -400, -192, -175, -174, 76, 77, -176, 76,
	-174, 66, 66, -247, -400, -400, 87, -250, -162, -192,
	-192, 218, 116, -399, -145, -157, -143, 12, 93, 93,
	-371, -390, 623, 624, 31, 95, -335, -335, 134, 134,
	-184, 86, -315, 93, -315, 95, 95, 31, 82, 83,
	84, 31, 78, 79, 80, -184, -184, -184, -184, -356,
	86, 19, -140, 86, 148, 88, -245, -245, 272, 159,
	-335, 617, 278, 278, -335, -335, -335, -111, -110, 639,
	88, -400, 87, -322, 498, 501, -140, -152, -152, -247,
	88, -364, 498, -372, -280, -280, -280, -280, 95, 97,
	-146, -400, -315, -400, -140, -140, -225, 93, -140, -140,
	95, 95, -400, -400, -366, -365, -140, -400, -172, -171,
	-173, 600, 116, 31, -299, -400, -205, 270, -96, -95,
	-94, 14, -400, -140, -140, -140, -140, -140, -140, -399,
	66, 18, 16, -399, -399, -289, -218, -219, 17, 19,
	-232, 53, -230, 52, -230, -241, 19, 19, 93, 19,
	93, 134, -257, -140, -208, 57, -11, -280, -206, -280,
	-220, -140, 86, -140, -154, -192, -192, -140, -198, 467,
	469, 470, 471, 468, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 472, 446, 105, 107, 106, 447,
	448, 449, 489, 492, 493, 491, 490, 347, 348, 450,
	451, 452, 108, 109, 110, 111, 112, 113, 114, 453,
	456, 454, 457, 458, 459, 464, 465, 460, 461, 462,
	463, 466, 483, 484, 485, 486, 487, 488, 93, 93,
	86, -140, 88, 88, -247, -355, -58, 88, -245, 95,
	88, 273, -207, -399, 93, -335, -335, -335, 95, 95,
	-288, -400, 87, -280, -392, -357, 502, 502, -400, 25,
	-363, -362, -282, 86, 77, -121, 159, 498, -400, -400,
	-400, -400, -400, 88, 88, -400, -400, 87, -400, -171,
	-173, -400, 76, -154, -220, 19, -93, 295, 297, -93,
	-400, 87, -400, -400, 87, -400, 87, -400, -248, -400,
	-280, 240, 19, 19, -248, -248, -191, -219, -103, -102,
	-101, 528, -140, -203, -233, 54, 76, 119, 93, 93,
	93, 12, -206, 218, -225, -245, -169, 368, -220, -400,
	-245, 88, 25, 88, 641, 134, 88, -207, -120, -399,
	269, -288, 93, 93, -110, -113, -11, 87, 148, -245,
	-184, -400, 496, 73, 499, -140, -400, 76, 509, 600,
	-88, -87, -84, 611, 637, -203, -90, -90, -140, -140,
	-140, 87, -400, -400, -400, -103, 87, -100, -99, -280,
	76, 119, -253, -280, 88, -400, -399, -225, 88, -229,
	-11, 86, -3, 269, -311, -360, -312, -313, -5, -6,
	-336, -79, 498, -362, -340, -282, 93, 95, 88, 62,
	497, 500, -367, -86, 142, 609, 588, -141, -152, -149,
	-400, 87, -400, 87, -400, 87, -280, 240, -101, 87,
	25, -289, -170, -168, -280, 552, -383, -382, 494, -393,
	-389, 116, 140, 102, -391, 590, 546, 125, 126, -79,
	-140, 86, -400, -80, 284, 596, -373, 62, -400, -86,
	610, 566, 540, 566, 540, -140, -140, -140, -99, -399,
	-400, 87, 22, -303, -60, 563, -380, -381, 76, -384,
	374, 562, 583, 116, 93, 88, -245, 245, -364, 498,
	139, -400, 87, -400, 87, -400, -89, -168, 559, -316,
	-154, -381, 76, -380, 76, 13, 12, -4, 640, 88,
	286, 499, -86, -140, -140, -400, -59, 26, -169, -379,
	253, 248, 251, 32, -379, 95, -4, 500, -400, -400,
	563, 247, 31, 116, -154, -172, -171, -171,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1419, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1955, 1955, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1278, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1953, 1, 3,
	69, 73, 0, 0, 0, 56, 1287, 0, 76, 0,
	0, 831, 0, 829, 0, 1402, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1404, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1305, 153, 1420, 1417, 1418, 38, 39,
	40, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780,
	1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790,
	1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800,
	1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810,
	1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880,
	1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,
	1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930,
	1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 1952, 0, 1396, 0, 686, 928, 0, 748, 748,
	0, 748, 748, 748, 748, 0, 0, 0, 698, 0,
	0, 0, 0, 745, 0, 714, 715, 0, 745, 0,
	721, 751, 0, 726, 748, 748, 729, 1956, 0, 1956,
	1956, 1387, 0, 742, 740, 754, 755, 758, 762, 0,
	767, 770, 1413, 1414, 0, 785, 47, 1668, 777, 790,
	791, 0, 823, 824, 43, 1070, 0, 950, 955, 966,
	981, 982, 983, 984, 985, 987, 988, 0, 0, 0,
	0, 993, 994, 0, 0, 0, 0, 0, 1051, 1002,
	0, 0, 0, 1254, 0, 1215, 1215, 1086, 1215, 1217,
	1217, 1620, 1750, 1758, 1872, 1583, 1588, 1589, 1590, 1865,
	1866, 1867, 1868, 1906, 1907, 1911, 1678, 0, 0, 0,
	1952, 1713, 1721, 1722, 1744, 1838, 1892, 1675, 1695, 1696,
	1820, 1821, 1717, 1718, 1699, 1711, 1714, 1702, 1703, 1705,
	1707, 1712, 1719, 1725, 1704, 1724, 1723, 0, 1700, 1701,
	1706, 1716, 1720, 1708, 1709, 1710, 1715, 1726, 0, 0,
	0, 0, 0, 1161, 1162, 1263, 0, 0, 0, 0,
	0, 0, 273, 274, 1069, 1376, 0, 1217, 1217, 1217,
	1217, 1217, 1011, 1012, 1013, 1014, 1015, 1039, 1040, 1046,
	1047, 1815, 1816, 1817, 1818, 1661, 1901, -2, -2, 219,
	220, 221, 222, 223, 224, 225, 0, 215, 0, 0,
	278, 279, 275, 276, 277, 1053, 1054, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 1955,
	0, 800, 0, 0, 0, 0, 0, 1287, 0, 1279,
	1278, 61, 0, 827, -2, 0, 0, 0, 0, 45,
	0, 50, 887, 75, 74, 1327, 0, 0, 0, 57,
	1288, 65, 67, 1289, 0, 832, 833, 0, 863, 867,
	0, 828, 0, 0, 1403, 1402, 1402, 100, 0, 1888,
	1380, -2, -2, 0, 0, 1415, 1416, 1389, -2, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, -2, 0,
	0, 165, 166, 0, 41, 404, 0, 161, 0, 397,
	338, 0, 1305, 0, 0, 0, 0, 0, 827, 0,
	1397, 142, 143, 150, 151, 152, 377, 377, 377, 549,
	0, 0, 153, 153, 508, 509, 510, 0, 0, -2,
	402, 0, 488, 0, 0, 391, 391, 395, 393, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 0, 378, 0, 547, 548, 440, 0, 0, 0,
	0, 0, 0, 524, 525, 0, 0, 1405, 1406, 0,
	0, 0, 377, 377, 0, 0, 0, 0, 377, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 1318,
	0, 0, 0, -2, 0, 678, 0, 0, 0, 1398,
	1398, 0, 685, 0, 687, 688, 0, 0, 689, 0,
	745, 745, 743, 744, 691, 692, 693, 694, 748, 0,
	0, 386, 387, 388, 745, 748, 0, 748, 748, 748,
	748, 745, 745, 745, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 751, 748, 0, 722, 0,
	723, 724, 727, 728, 730, 1957, 1958, 1435, 1956, 1956,
	734, 738, 1388, 760, 768, 771, 788, 786, 787, 789,
	781, 782, 783, 784, 0, 802, 803, 808, 0, 0,
	0, 0, 814, 815, 816, 0, 0, 819, 820, 821,
	0, 0, 0, 0, 0, 948, 0, 0, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 967, 968, 0, 0, 0, 989, 990, 991,
	992, 995, 0, 0, 0, 1000, 1001, 0, 0, 0,
	0, 0, 1255, 0, 1084, 0, 1085, 1087, 1088, 0,
	1089, 837, 837, 837, 837, 837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 0, 0, 847, 847, 0, 0,
	0, 208, 209, 210, 211, 212, 0, 0, 0, 0,
	0, 0, 226, 227, 228, 229, 230, 280, 1263, 0,
	1069, 0, 0, 0, 44, 792, 793, 0, 911, 1408,
	0, 0, 843, 0, 55, 64, 66, 1287, 59, 1287,
	0, 849, 0, 0, -2, -2, 850, 856, 857, 858,
	859, 860, 52, 1954, 53, 0, 72, 0, 46, 0,
	0, 0, 0, 350, 1330, 0, 0, 1280, 1281, 1284,
	0, 864, 1756, 868, 0, 870, 871, 0, 830, 0,
	98, 0, 927, 0, 0, 0, 1888, 1386, 0, 102,
	103, 0, 0, 0, 361, 1391, 1392, 1393, -2, 384,
	0, 361, 345, 288, 289, 290, 338, 292, 338, 338,
	338, 338, 350, 350, 350, 350, 321, 322, 323, 324,
	325, 0, 0, 307, 338, 338, 338, 338, 328, 329,
	330, 331, 332, 333, 334, 335, 293, 294, 295, 296,
	297, 298, 299, 300, 301, 340, 340, 340, 342, 342,
	0, 42, 0, 365, 0, 1284, 0, 0, 1318, 1400,
	1410, 0, 0, 0, 1400, 120, 0, 0, 0, 550,
	584, 502, 538, 551, 0, 505, 506, -2, 0, 0,
	487, 0, 489, 0, 385, 0, -2, 0, 395, 0,
	391, 395, 392, 395, 383, 396, 528, 529, 530, 0,
	532, 533, 614, 897, 0, 0, 0, 0, 0, 620,
	621, 622, 0, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 539, 540, 541, 542, 543, 544, 545,
	546, 0, 0, 0, 0, 489, 0, 535, 0, 441,
	442, 443, 0, 0, 446, 447, 448, 449, 0, 0,
	452, 453, 454, 914, 915, 455, 456, 481, 482, 483,
	457, 458, 459, 460, 461, 462, 463, 475, 476, 477,
	478, 479, 480, 464, 465, 466, 467, 468, 469, 472,
	0, 135, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1398, 0, 0, 0,
	0, 846, 929, 1421, 1422, 749, 750, 0, 389, 390,
	748, 748, 695, 735, 0, 748, 699, 736, 700, 702,
	701, 703, 716, 717, 748, 706, 746, 747, 707, 708,
	709, 710, 711, 712, 713, 731, 718, 719, 720, 752,
	0, 756, 757, 732, 733, 0, 769, 773, 774, 775,
	776, 0, 0, 805, 94, 810, 811, 812, 813, 825,
	818, 1071, 945, 946, 947, 0, 949, 952, 0, 1055,
	1057, 954, 956, 1066, 1067, 1068, 0, 0, 0, 0,
	0, 960, 964, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 986, 1231, 1232, 1233, 1003,
	281, 282, 0, 1004, 0, 861, 0, 0, 0, 0,
	0, 0, 1261, 1258, 0, 0, 1216, 1218, 0, 0,
	0, 0, 838, 839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1234, 0, 0, 0, 0, 0, 1254,
	0, 1006, 1007, 1008, 0, 0, 0, 1122, 0, 0,
	0, 0, 1409, 0, 130, 131, 0, 0, 0, 0,
	0, 1188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 1164, 1165, 1166, 0, 0, 0, 0,
	0, 848, 1264, 0, -2, 0, 0, 0, 0, 0,
	1005, 0, 0, 0, 0, 0, 0, 0, 0, 1374,
	0, 0, 795, 796, 798, 0, 931, 0, 912, 0,
	0, 801, 0, 842, 0, 845, 58, 60, 854, 855,
	0, 872, 851, 54, 49, 0, 0, 889, 1328, 350,
	1350, 0, 359, 359, 356, 1290, 1291, 0, 1283, 1285,
	1286, 77, 869, 865, 0, 943, 0, 0, 926, 0,
	875, 877, 878, 879, 909, 0, 882, 0, 0, 0,
	0, 0, 96, 928, 1381, 101, 0, 0, 106, 107,
	1382, 1383, 1384, 1385, 0, 573, -2, 436, 167, 169,
	170, 171, 162, -2, 348, 346, 347, 291, 350, 350,
	315, 316, 317, 318, 319, 320, 0, 0, 308, 309,
	310, 311, 302, 0, 303, 304, 305, 0, 306, 403,
	0, 1292, 366, 367, 369, 377, 0, 372, 373, 0,
	377, 377, 0, 398, 399, 0, 1284, 1309, 0, 0,
	0, 1411, 1410, 1410, 1410, 0, 155, 156, 157, 158,
	159, 160, 609, 0, 0, 585, 607, 608, 153, 0,
	0, 163, 491, 490, 0, 641, 0, 401, 0, 0,
	395, 395, 380, 381, 531, 0, 0, 616, 617, 618,
	619, 0, 0, 0, 518, 430, 0, 519, 520, 489,
	491, 361, 0, 444, 445, 450, 451, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	565, 566, 567, 493, 571, 568, 493, 572, 1306, 1307,
	1308, 0, 0, 679, 0, 0, 427, 92, 1399, 684,
	745, 705, 737, 745, 697, 704, 725, 765, 809, 0,
	0, 0, 0, 817, 0, 0, 953, 1056, 1058, 957,
	0, 961, 965, 0, 0, 0, 0, 0, 0, 0,
	1052, 1076, 1077, 0, 0, 0, 1259, 0, 0, 1083,
	1219, 1220, 1090, 0, 0, 0, 0, 0, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1278, 0,
	0, 0, 0, 0, 1111, 1112, 1113, 1114, 1115, 0,
	1117, 0, 0, 1120, 1121, 1123, 0, 0, 1126, 1127,
	0, 0, 1128, 0, 0, 0, 0, 0, 0, 0,
	0, 1140, 1141, 1142, 1143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1154, 1155, 0, 1034, 0,
	0, 1034, 0, 1072, 0, 0, 847, 0, 1221, 1222,
	1223, 1224, 1225, 0, 0, 0, 0, 0, 0, 1264,
	1375, 794, 797, 799, 885, 932, 933, 0, 0, 0,
	0, 913, 1407, 840, 841, 844, -2, 0, 0, 1266,
	0, 0, 872, 943, 873, 0, 852, 51, 888, 0,
	1332, 1331, 1344, 1357, 359, 359, 353, 354, 360, 355,
	357, 358, 1282, 0, 1287, 0, 1368, 0, 0, 1360,
	0, 0, 0, 0, 0, 0, 0, 0, 916, 0,
	0, 919, 0, 0, 0, 0, 910, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 90, 91, 0, 0,
	0, 104, 105, 0, 0, 111, 362, 363, 144, 153,
	438, 168, 411, 0, 0, 287, 349, 312, 313, 314,
	0, 336, 0, 0, 0, 432, 116, 1296, 1295, 377,
	377, 368, 0, 371, 0, 0, 0, 1412, 339, 400,
	0, 134, 0, 0, 0, 0, 0, 140, 579, 0,
	0, 586, 0, 0, 0, 500, 0, 511, 512, 0,
	613, -2, 675, 365, 0, 379, 382, 898, 0, 0,
	513, 0, 516, 517, 431, 491, 522, 523, 536, 473,
	474, 471, 0, 0, 1319, 1320, 1325, 1323, 1324, 121,
	557, 559, 558, 562, 0, 0, 495, 0, 495, 555,
	0, 427, 1292, 0, 683, 428, 429, 748, 748, 804,
	95, 0, 807, 0, 0, 0, 0, 958, 962, 862,
	0, 1252, 338, 338, 1239, 338, 342, 1242, 338, 1244,
	338, 1247, 338, 1250, 1251, 1252, 0, 0, 0, 1082,
	1262, 0, 1091, 1092, 1093, 1094, 1095, 1256, 0, 0,
	0, 1110, 0, 0, 0, 0, 0, 0, 0, 132,
	133, 1188, 0, 0, 1190, 1192, 1193, 1132, 1189, 0,
	0, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1029, 1033, 0, 1035, 1036, 0, 0, 1157,
	0, 0, 1167, 1073, 1074, 0, 1265, 0, 0, 0,
	0, 0, 0, 934, 939, 939, 939, 0, 0, 0,
	1394, 1395, 1267, 1268, 943, 1269, 874, 853, 890, 1350,
	0, 1343, 0, -2, 1352, 0, 0, 0, 1358, 351,
	352, 866, 78, 944, 81, 0, 1368, 1377, 0, 1359,
	1370, 1372, 0, 0, 0, 1364, 0, 943, 876, 905,
	907, 0, 902, 917, 918, 920, 0, 922, 0, 924,
	925, 887, 881, 883, 0, 0, 0, 98, 0, 943,
	943, 97, 0, 930, 108, 109, 110, 437, 172, 177,
	0, 0, 0, 182, 0, 184, 0, 0, 0, 189,
	190, 377, 377, 412, 0, 284, 286, 0, 0, 175,
	350, 0, 350, 0, 343, 0, 413, 433, 1293, 1294,
	0, 0, 370, 374, 375, 376, 0, 1401, 136, 0,
	0, 0, 582, 0, 610, 0, 0, 0, 0, 0,
	0, 164, 492, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 0, 377, 0, 0, 0, 377, 377, 377,
	0, 667, 364, 0, 0, 638, 635, 514, 0, 213,
	214, 216, 0, 0, 521, 887, 1310, 1311, 1312, 0,
	1322, 1326, 124, 0, 0, 0, 0, 569, 0, 494,
	570, 680, 681, 682, 93, 690, 696, 806, 826, 951,
	959, 963, 0, 0, 1253, 1237, 350, 1240, 1241, 1243,
	1245, 1246, 1248, 1249, 0, 999, 0, 1079, 0, 1081,
	1260, 1287, 0, 0, 0, 1109, 0, 0, 0, 1118,
	1119, 1124, 1125, 0, 0, 1131, 0, 1133, 0, 0,
	0, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 0, 1027, 1030, 1156, 1037, 1038, 1043, 1159, 0,
	0, 1075, 1169, 0, 1174, 0, 0, 1180, 0, 1184,
	0, 0, 0, 0, 0, 911, -2, 62, 1269, 1271,
	0, 1337, 1335, 1335, 1345, 1346, 0, 0, 1353, 0,
	0, 0, 0, 82, 0, 0, 0, 1373, 0, 0,
	0, 0, 99, 1278, 899, 906, 0, 0, 900, 0,
	901, 921, 923, 880, -2, 884, 0, 943, 943, 88,
	89, 0, 178, 0, 180, 206, 207, 0, 183, 185,
	186, 187, 193, 194, 195, 188, 0, 0, 283, 285,
	0, 0, 326, 337, 327, 0, 0, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 887, 137, 138, 139, 574,
	0, 584, 0, 0, 0, 577, 0, 503, 0, 0,
	0, 377, 377, 377, 0, 0, 0, 0, 652, 0,
	0, 615, 0, 623, 0, 0, 0, 217, 218, 0,
	1321, 556, 0, 122, 123, 0, 0, 561, 496, 497,
	1226, 997, 1238, 998, 0, 0, 0, 1257, 0, 0,
	0, 0, 1116, 1129, 0, 1191, 0, 1136, 0, 0,
	0, 604, 605, 0, 1187, 1032, 1278, 0, 1034, 1044,
	1045, 0, 1034, 1168, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 931, 1271, 1276, 0, 0,
	1340, 0, 1333, 1336, 1334, 1347, 0, 0, 1354, 0,
	1356, 0, 1378, 1379, 1371, 0, 1363, 1366, 1362, 1365,
	1287, 903, 0, 908, 0, 1278, 87, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 192,
	0, 0, 341, 344, 0, 0, 0, 575, 0, 587,
	578, 0, 665, 0, 669, 0, 0, 0, 672, 673,
	674, 651, 0, 655, 405, 639, 636, 637, 515, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 1078, 1080,
	1106, 1107, 1108, 1235, 1236, 1130, 1134, 0, 1137, 0,
	0, 1138, 0, 606, 1023, 0, 0, 1041, 1042, 0,
	1170, 0, 1175, 1176, 0, 1181, 0, 1185, 0, 936,
	893, 894, 941, 942, 0, 0, 886, 1276, 80, 1277,
	1274, 0, 1272, 1270, 1329, 0, 1338, 1339, 1348, 1349,
	1355, 0, 1361, 0, 85, 0, 0, 0, 1287, 179,
	0, 198, 0, 583, 0, 586, 576, 663, 664, 0,
	676, 668, 670, 671, 653, -2, 1313, 0, 0, 0,
	563, 996, 0, 0, 0, 1188, 1139, 0, 602, 603,
	1031, 1024, 0, 1009, 1010, 1028, 1158, 1160, 0, 0,
	0, 0, 935, 937, 938, 79, 0, 1273, 1049, 0,
	1341, 1342, 1369, 1367, 904, 911, 0, 86, 418, 411,
	1313, 0, 0, 0, 656, 657, 658, 659, 660, 661,
	662, 553, 1315, 127, 128, 484, 485, 486, 121, 1227,
	0, 1230, 0, 1025, 0, 0, 0, 0, 1021, 1022,
	1171, 0, 1177, 0, 1182, 0, 895, 896, 1275, 0,
	0, 588, 0, 590, 0, -2, 406, 419, 0, 173,
	199, 200, 0, 0, 203, 204, 205, 196, 197, 117,
	0, 0, 677, 0, 1316, 1317, 124, 1228, 1135, 0,
	1016, 1017, 1018, 1019, 1020, 0, 0, 0, 1050, 1029,
	589, 0, 0, 361, 0, 599, 407, 408, 0, 414,
	415, 416, 417, 201, 202, 611, 0, 0, 560, 0,
	0, 1172, 0, 1178, 0, 1183, 0, 591, 592, 600,
	0, 409, 0, 410, 0, 0, 0, 580, 0, 611,
	1314, 0, 1026, 0, 0, 1048, 0, 601, 597, 420,
	422, 423, 0, 0, 421, 612, 581, 1229, 1173, 1179,
	0, 424, 425, 426, 593, 594, 595, 596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 642,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:576
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:581
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:586
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:622
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:628
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:632
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:641
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:651
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:657
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:663
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:667
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:676
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:686
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:692
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:766
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:776
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:784
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:817
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:821
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:851
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:893
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:897
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:927
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:931
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:935
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:941
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:951
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:964
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:976
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:980
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:986
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:990
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:996
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1000
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1004
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1010
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1014
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1018
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1022
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1028
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1032
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1038
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1044
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1051
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1060
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1064
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1071
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1075
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1080
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1095
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1100
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1106
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1126
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1132
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1148
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1155
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1162
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1167
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1172
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1177
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1184
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1191
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1202
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1213
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1219
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1223
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1227
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1245
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1249
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1255
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1259
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1265
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1269
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1275
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1279
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1285
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1289
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1295
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1305
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1310
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1315
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1319
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1343
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1352
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1361
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1390
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1395
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1400
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1405
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1424
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1433
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1438
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1444
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1450
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1454
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1460
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1464
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1468
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1474
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1478
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1487
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1492
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1551
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1561
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1568
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1572
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1578
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1582
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1586
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1590
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1594
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1598
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1607
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1611
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1804
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1808
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1812
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1818
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1822
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1826
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1832
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1836
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1843
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1847
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1851
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1855
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2083
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2092
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2101
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2119
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2127
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2131
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2135
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2140
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2144
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2149
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2153
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2170
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2214
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2223
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2229
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2239
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2243
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2248
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2252
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2256
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2260
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2264
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2268
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2284
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2288
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2292
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2296
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2300
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2305
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2338
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2367
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2377
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2381
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2387
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2391
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2397
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2401
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2407
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2413
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2417
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2421
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2425
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2429
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2438
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2444
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2450
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2456
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2460
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2464
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2469
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2473
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2479
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2485
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2491
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2495
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2499
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2503
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2507
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2526
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2530
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2539
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2548
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2554
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2558
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2568
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2572
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2578
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2622
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2626
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2630
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2634
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2638
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2642
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2646
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2650
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2654
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2658
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2662
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2666
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2670
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2674
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2678
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2682
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2686
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2690
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2694
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2698
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2703
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2749
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2753
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2762
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2767
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2771
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2780
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2784
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2793
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2797
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2801
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2809
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2815
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2829
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2861
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2870
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2875
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2879
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2887
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2899
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2935
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2939
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2943
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2947
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2953
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2963
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2967
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2971
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3005
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3012
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3032
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3042
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3056
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3068
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3109
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3113
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3124
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3152
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3193
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3202
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3210
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3219
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3226
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3238
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3247
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3262
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3267
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3276
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3280
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3286
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3292
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3298
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3308
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3312
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3318
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3324
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3330
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3336
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3350
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3360
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3366
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3372
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3376
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3380
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3386
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3390
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3395
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3399
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3404
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3408
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3414
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3418
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3422
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3426
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3430
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3434
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3438
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3442
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3446
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3450
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3454
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3458
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3462
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3466
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3470
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3474
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3478
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3482
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3486
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3490
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3494
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3498
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3503
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3517
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3532
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3536
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3541
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3546
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3551
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3556
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3561
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3567
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3573
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3578
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3584
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3590
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3600
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3605
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3609
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3614
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3619
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3624
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3629
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3635
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3641
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3648
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3655
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3662
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3680
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3686
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3692
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3698
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3704
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3710
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3722
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3744
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3748
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3889
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3964
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3968
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3980
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4002
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4012
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4016
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4032
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4050
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4054
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4064
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4094
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4098
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4102
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4133
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4138
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4155
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4159
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4163
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4167
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4171
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4175
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4252
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4256
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4262
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4268
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4272
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4276
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4280
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4292
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4391
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4405
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4415
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4429
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4451
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4459
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4490
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4500
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4509
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4522
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4530
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4566
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4570
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4576
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4580
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4584
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4588
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4593
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4613
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4617
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4623
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4629
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4633
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4643
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4647
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4651
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4655
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4661
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4665
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4671
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4675
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4684
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4690
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4694
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4700
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4704
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4710
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4714
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4728
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4732
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4745
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4749
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4753
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4757
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4763
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4765
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4769
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4775
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4777
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4780
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4785
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4806
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4810
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4814
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4820
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4826
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4830
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4834
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4838
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4844
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4848
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4858
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4887
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4893
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4897
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4903
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4907
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4911
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4915
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4920
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4924
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4928
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4932
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5214
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5218
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5222
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5228
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5232
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5239
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5243
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5247
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5251
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5255
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5261
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5265
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5269
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5273
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5277
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5296
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5302
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5306
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5315
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5320
		{
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5329
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5335
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5339
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5351
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5357
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5361
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5367
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5371
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5377
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5381
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5393
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5399
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5403
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5409
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5415
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5419
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5435
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5439
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5446
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5450
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5454
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5458
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5464
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5468
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5472
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5476
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5480
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5484
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5488
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5494
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5498
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5502
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5509
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5515
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5583
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5594
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5613
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5617
		{
			yyLOCAL = &CountStar{Name: yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5621
		{
			yyLOCAL = &Count{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			yyLOCAL = &Max{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5629
		{
			yyLOCAL = &Min{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5633
		{
			yyLOCAL = &Sum{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5637
		{
			yyLOCAL = &Avg{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = &BitAnd{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = &BitOr{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = &BitXor{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = &Std{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = &StdDev{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = &StdPop{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = &StdSamp{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5669
		{
			yyLOCAL = &VarPop{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5673
		{
			yyLOCAL = &VarSamp{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = &Variance{Name: yyDollar[1].str, Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
		{
			yyLOCAL = &GroupConcatExpr{Name: yyDollar[1].str, Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5693
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5725
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5733
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5797
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5801
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5805
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5809
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5829
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5841
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5857
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5865
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6009
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6013
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6022
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6028
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6032
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6038
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6048
		{
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6050
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6054
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6058
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6062
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6066
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6070
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6074
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6078
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6082
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6086
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6090
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6096
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6100
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6104
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6108
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6112
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6116
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6120
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6124
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6128
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6183
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6187
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6191
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6195
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6199
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6205
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6209
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6213
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6223
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6227
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6233
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6237
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6241
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6245
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6249
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6255
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6259
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6263
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6267
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6271
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6275
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6279
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6283
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6287
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6291
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6301
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6315
		{
			yyVAL.str = string("")
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6319
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6325
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6329
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6335
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6350
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6354
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6358
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6383
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6387
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6402
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6408
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6412
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6421
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6430
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6436
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6442
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6446
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6452
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6457
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6461
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6465
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6474
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6480
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6484
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6488
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6497
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6501
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6505
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6509
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6516
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6520
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6524
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6528
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6534
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6538
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6542
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6546
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6551
		{
			yyVAL.str = ""
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6555
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6559
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6563
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6568
		{
			yyVAL.str = ""
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6572
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6578
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6582
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6587
		{
			yyVAL.str = ""
		}
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6591
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = "cascaded"
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6600
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6604
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6613
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6619
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6625
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6631
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6640
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6644
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6649
		{
			yyVAL.str = ""
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6659
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6663
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6669
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6673
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6677
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6682
		{
			yyVAL.str = ""
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6686
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6690
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6695
		{
			yyVAL.str = ""
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6699
		{
			yyVAL.str = " header"
		}
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6704
		{
			yyVAL.str = ""
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6708
		{
			yyVAL.str = " manifest on"
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6712
		{
			yyVAL.str = " manifest off"
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6717
		{
			yyVAL.str = ""
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6721
		{
			yyVAL.str = " overwrite on"
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6725
		{
			yyVAL.str = " overwrite off"
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6731
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6736
		{
			yyVAL.str = ""
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6740
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6746
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6750
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6756
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6760
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6765
		{
			yyVAL.str = ""
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6769
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6775
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6779
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6785
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6789
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6793
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6798
		{
			yyVAL.str = ""
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6802
		{
			yyVAL.str = " optionally"
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6815
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6819
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6823
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6827
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6831
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6837
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6841
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6845
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6849
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6858
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6864
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6868
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6874
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6878
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6884
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6888
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6903
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6907
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6913
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6919
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6923
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6929
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6933
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6937
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6941
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6945
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6953
		{
			yyVAL.str = "charset"
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6963
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6967
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6971
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6980
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6982
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6985
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6987
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6990
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6992
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6997
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7000
		{
			yyVAL.empty = struct{}{}
		}
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7002
		{
			yyVAL.empty = struct{}{}
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7004
		{
			yyVAL.empty = struct{}{}
		}
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7008
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7017
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7024
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7028
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7034
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7038
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7045
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7051
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7055
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7061
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7065
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7072
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7629
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7638
		{
			decNesting(yylex)
		}
	case 1955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7643
		{
			skipToEnd(yylex)
		}
	case 1956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7648
		{
			skipToEnd(yylex)
		}
	case 1957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7652
		{
			skipToEnd(yylex)
		}
	case 1958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7656
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
