// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"

	"vitess.io/vitess/go/ptr"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const MULTIPLE_TEXT_LITERAL = 57347
const FUNCTION_CALL_NON_KEYWORD = 57348
const STRING_TYPE_PREFIX_NON_KEYWORD = 57349
const ANY_SOME = 57350
const LEX_ERROR = 57351
const UNION = 57352
const SELECT = 57353
const STREAM = 57354
const VSTREAM = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const ORDER = 57363
const BY = 57364
const LIMIT = 57365
const OFFSET = 57366
const FOR = 57367
const DISTINCT = 57368
const AS = 57369
const EXISTS = 57370
const ASC = 57371
const DESC = 57372
const INTO = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const DO = 57380
const CALL = 57381
const ALL = 57382
const ANY = 57383
const SOME = 57384
const DISTINCTROW = 57385
const PARSER = 57386
const GENERATED = 57387
const ALWAYS = 57388
const OUTFILE = 57389
const S3 = 57390
const DATA = 57391
const LOAD = 57392
const LINES = 57393
const TERMINATED = 57394
const ESCAPED = 57395
const ENCLOSED = 57396
const DUMPFILE = 57397
const CSV = 57398
const HEADER = 57399
const MANIFEST = 57400
const OVERWRITE = 57401
const STARTING = 57402
const OPTIONALLY = 57403
const VALUES = 57404
const LAST_INSERT_ID = 57405
const NEXT = 57406
const VALUE = 57407
const SHARE = 57408
const MODE = 57409
const SQL_NO_CACHE = 57410
const SQL_CACHE = 57411
const SQL_CALC_FOUND_ROWS = 57412
const JOIN = 57413
const STRAIGHT_JOIN = 57414
const LEFT = 57415
const RIGHT = 57416
const INNER = 57417
const OUTER = 57418
const CROSS = 57419
const NATURAL = 57420
const USE = 57421
const FORCE = 57422
const ON = 57423
const USING = 57424
const INPLACE = 57425
const COPY = 57426
const INSTANT = 57427
const ALGORITHM = 57428
const NONE = 57429
const SHARED = 57430
const EXCLUSIVE = 57431
const SUBQUERY_AS_EXPR = 57432
const STRING = 57433
const ID = 57434
const AT_ID = 57435
const AT_AT_ID = 57436
const HEX = 57437
const NCHAR_STRING = 57438
const INTEGRAL = 57439
const FLOAT = 57440
const DECIMAL = 57441
const HEXNUM = 57442
const COMMENT = 57443
const COMMENT_KEYWORD = 57444
const BITNUM = 57445
const BIT_LITERAL = 57446
const COMPRESSION = 57447
const VALUE_ARG = 57448
const LIST_ARG = 57449
const OFFSET_ARG = 57450
const JSON_PRETTY = 57451
const JSON_STORAGE_SIZE = 57452
const JSON_STORAGE_FREE = 57453
const JSON_CONTAINS = 57454
const JSON_CONTAINS_PATH = 57455
const JSON_EXTRACT = 57456
const JSON_KEYS = 57457
const JSON_OVERLAPS = 57458
const JSON_SEARCH = 57459
const JSON_VALUE = 57460
const EXTRACT = 57461
const NULL = 57462
const UNKNOWN = 57463
const TRUE = 57464
const FALSE = 57465
const OFF = 57466
const DISCARD = 57467
const IMPORT = 57468
const ENABLE = 57469
const DISABLE = 57470
const TABLESPACE = 57471
const VIRTUAL = 57472
const STORED = 57473
const BOTH = 57474
const LEADING = 57475
const TRAILING = 57476
const KILL = 57477
const EMPTY_FROM_CLAUSE = 57478
const LOWER_THAN_CHARSET = 57479
const CHARSET = 57480
const UNIQUE = 57481
const KEY = 57482
const EXPRESSION_PREC_SETTER = 57483
const OR = 57484
const XOR = 57485
const AND = 57486
const NOT = 57487
const BETWEEN = 57488
const CASE = 57489
const WHEN = 57490
const THEN = 57491
const ELSE = 57492
const END = 57493
const LE = 57494
const GE = 57495
const NE = 57496
const NULL_SAFE_EQUAL = 57497
const IS = 57498
const LIKE = 57499
const REGEXP = 57500
const RLIKE = 57501
const IN = 57502
const ASSIGNMENT_OPT = 57503
const SHIFT_LEFT = 57504
const SHIFT_RIGHT = 57505
const DIV = 57506
const MOD = 57507
const UNARY = 57508
const COLLATE = 57509
const BINARY = 57510
const UNDERSCORE_ARMSCII8 = 57511
const UNDERSCORE_ASCII = 57512
const UNDERSCORE_BIG5 = 57513
const UNDERSCORE_BINARY = 57514
const UNDERSCORE_CP1250 = 57515
const UNDERSCORE_CP1251 = 57516
const UNDERSCORE_CP1256 = 57517
const UNDERSCORE_CP1257 = 57518
const UNDERSCORE_CP850 = 57519
const UNDERSCORE_CP852 = 57520
const UNDERSCORE_CP866 = 57521
const UNDERSCORE_CP932 = 57522
const UNDERSCORE_DEC8 = 57523
const UNDERSCORE_EUCJPMS = 57524
const UNDERSCORE_EUCKR = 57525
const UNDERSCORE_GB18030 = 57526
const UNDERSCORE_GB2312 = 57527
const UNDERSCORE_GBK = 57528
const UNDERSCORE_GEOSTD8 = 57529
const UNDERSCORE_GREEK = 57530
const UNDERSCORE_HEBREW = 57531
const UNDERSCORE_HP8 = 57532
const UNDERSCORE_KEYBCS2 = 57533
const UNDERSCORE_KOI8R = 57534
const UNDERSCORE_KOI8U = 57535
const UNDERSCORE_LATIN1 = 57536
const UNDERSCORE_LATIN2 = 57537
const UNDERSCORE_LATIN5 = 57538
const UNDERSCORE_LATIN7 = 57539
const UNDERSCORE_MACCE = 57540
const UNDERSCORE_MACROMAN = 57541
const UNDERSCORE_SJIS = 57542
const UNDERSCORE_SWE7 = 57543
const UNDERSCORE_TIS620 = 57544
const UNDERSCORE_UCS2 = 57545
const UNDERSCORE_UJIS = 57546
const UNDERSCORE_UTF16 = 57547
const UNDERSCORE_UTF16LE = 57548
const UNDERSCORE_UTF32 = 57549
const UNDERSCORE_UTF8 = 57550
const UNDERSCORE_UTF8MB4 = 57551
const UNDERSCORE_UTF8MB3 = 57552
const INTERVAL = 57553
const WINDOW_EXPR = 57554
const JSON_EXTRACT_OP = 57555
const JSON_UNQUOTE_EXTRACT_OP = 57556
const CREATE = 57557
const ALTER = 57558
const DROP = 57559
const RENAME = 57560
const ANALYZE = 57561
const ADD = 57562
const FLUSH = 57563
const CHANGE = 57564
const MODIFY = 57565
const DEALLOCATE = 57566
const REVERT = 57567
const QUERIES = 57568
const SCHEMA = 57569
const TABLE = 57570
const INDEX = 57571
const VIEW = 57572
const TO = 57573
const IGNORE = 57574
const IF = 57575
const PRIMARY = 57576
const COLUMN = 57577
const SPATIAL = 57578
const FULLTEXT = 57579
const KEY_BLOCK_SIZE = 57580
const CHECK = 57581
const INDEXES = 57582
const ACTION = 57583
const CASCADE = 57584
const CONSTRAINT = 57585
const FOREIGN = 57586
const NO = 57587
const REFERENCES = 57588
const RESTRICT = 57589
const SHOW = 57590
const DESCRIBE = 57591
const EXPLAIN = 57592
const DATE = 57593
const ESCAPE = 57594
const REPAIR = 57595
const OPTIMIZE = 57596
const TRUNCATE = 57597
const COALESCE = 57598
const EXCHANGE = 57599
const REBUILD = 57600
const PARTITIONING = 57601
const REMOVE = 57602
const PREPARE = 57603
const EXECUTE = 57604
const MAXVALUE = 57605
const PARTITION = 57606
const REORGANIZE = 57607
const LESS = 57608
const THAN = 57609
const PROCEDURE = 57610
const TRIGGER = 57611
const VINDEX = 57612
const VINDEXES = 57613
const DIRECTORY = 57614
const NAME = 57615
const UPGRADE = 57616
const STATUS = 57617
const VARIABLES = 57618
const WARNINGS = 57619
const CASCADED = 57620
const DEFINER = 57621
const OPTION = 57622
const SQL = 57623
const UNDEFINED = 57624
const SEQUENCE = 57625
const MERGE = 57626
const TEMPORARY = 57627
const TEMPTABLE = 57628
const INVOKER = 57629
const SECURITY = 57630
const FIRST = 57631
const AFTER = 57632
const LAST = 57633
const VITESS_MIGRATION = 57634
const CANCEL = 57635
const RETRY = 57636
const LAUNCH = 57637
const COMPLETE = 57638
const CLEANUP = 57639
const THROTTLE = 57640
const UNTHROTTLE = 57641
const FORCE_CUTOVER = 57642
const EXPIRE = 57643
const RATIO = 57644
const VITESS_THROTTLER = 57645
const BEGIN = 57646
const START = 57647
const TRANSACTION = 57648
const COMMIT = 57649
const ROLLBACK = 57650
const SAVEPOINT = 57651
const RELEASE = 57652
const WORK = 57653
const CONSISTENT = 57654
const SNAPSHOT = 57655
const BIT = 57656
const TINYINT = 57657
const SMALLINT = 57658
const MEDIUMINT = 57659
const INT = 57660
const INTEGER = 57661
const BIGINT = 57662
const INTNUM = 57663
const REAL = 57664
const DOUBLE = 57665
const FLOAT_TYPE = 57666
const FLOAT4_TYPE = 57667
const FLOAT8_TYPE = 57668
const DECIMAL_TYPE = 57669
const NUMERIC = 57670
const TIME = 57671
const TIMESTAMP = 57672
const DATETIME = 57673
const YEAR = 57674
const CHAR = 57675
const VARCHAR = 57676
const BOOL = 57677
const CHARACTER = 57678
const VARBINARY = 57679
const NCHAR = 57680
const TEXT = 57681
const TINYTEXT = 57682
const MEDIUMTEXT = 57683
const LONGTEXT = 57684
const BLOB = 57685
const TINYBLOB = 57686
const MEDIUMBLOB = 57687
const LONGBLOB = 57688
const JSON = 57689
const JSON_SCHEMA_VALID = 57690
const JSON_SCHEMA_VALIDATION_REPORT = 57691
const ENUM = 57692
const GEOMETRY = 57693
const POINT = 57694
const LINESTRING = 57695
const POLYGON = 57696
const GEOMCOLLECTION = 57697
const GEOMETRYCOLLECTION = 57698
const MULTIPOINT = 57699
const MULTILINESTRING = 57700
const MULTIPOLYGON = 57701
const ASCII = 57702
const UNICODE = 57703
const NULLX = 57704
const AUTO_INCREMENT = 57705
const APPROXNUM = 57706
const SIGNED = 57707
const UNSIGNED = 57708
const ZEROFILL = 57709
const PURGE = 57710
const BEFORE = 57711
const CODE = 57712
const COLLATION = 57713
const COLUMNS = 57714
const DATABASES = 57715
const ENGINES = 57716
const EVENT = 57717
const EXTENDED = 57718
const FIELDS = 57719
const FULL = 57720
const FUNCTION = 57721
const GTID_EXECUTED = 57722
const KEYSPACES = 57723
const OPEN = 57724
const PLUGINS = 57725
const PRIVILEGES = 57726
const PROCESSLIST = 57727
const SCHEMAS = 57728
const TABLES = 57729
const TRIGGERS = 57730
const USER = 57731
const VGTID_EXECUTED = 57732
const VITESS_KEYSPACES = 57733
const VITESS_METADATA = 57734
const VITESS_MIGRATIONS = 57735
const VITESS_REPLICATION_STATUS = 57736
const VITESS_SHARDS = 57737
const VITESS_TABLETS = 57738
const VITESS_TARGET = 57739
const VSCHEMA = 57740
const VITESS_THROTTLED_APPS = 57741
const NAMES = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ADDDATE = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURDATE = 57758
const DATE_ADD = 57759
const DATE_SUB = 57760
const NOW = 57761
const SUBDATE = 57762
const CURTIME = 57763
const CURRENT_TIME = 57764
const LOCALTIME = 57765
const LOCALTIMESTAMP = 57766
const CURRENT_USER = 57767
const UTC_DATE = 57768
const UTC_TIME = 57769
const UTC_TIMESTAMP = 57770
const SYSDATE = 57771
const DAY = 57772
const DAY_HOUR = 57773
const DAY_MICROSECOND = 57774
const DAY_MINUTE = 57775
const DAY_SECOND = 57776
const HOUR = 57777
const HOUR_MICROSECOND = 57778
const HOUR_MINUTE = 57779
const HOUR_SECOND = 57780
const MICROSECOND = 57781
const MINUTE = 57782
const MINUTE_MICROSECOND = 57783
const MINUTE_SECOND = 57784
const MONTH = 57785
const QUARTER = 57786
const SECOND = 57787
const SECOND_MICROSECOND = 57788
const YEAR_MONTH = 57789
const WEEK = 57790
const SQL_TSI_DAY = 57791
const SQL_TSI_WEEK = 57792
const SQL_TSI_HOUR = 57793
const SQL_TSI_MINUTE = 57794
const SQL_TSI_MONTH = 57795
const SQL_TSI_QUARTER = 57796
const SQL_TSI_SECOND = 57797
const SQL_TSI_MICROSECOND = 57798
const SQL_TSI_YEAR = 57799
const REPLACE = 57800
const CONVERT = 57801
const CAST = 57802
const SUBSTR = 57803
const SUBSTRING = 57804
const MID = 57805
const SEPARATOR = 57806
const TIMESTAMPADD = 57807
const TIMESTAMPDIFF = 57808
const WEIGHT_STRING = 57809
const LTRIM = 57810
const RTRIM = 57811
const TRIM = 57812
const JSON_ARRAY = 57813
const JSON_OBJECT = 57814
const JSON_QUOTE = 57815
const JSON_DEPTH = 57816
const JSON_TYPE = 57817
const JSON_LENGTH = 57818
const JSON_VALID = 57819
const JSON_ARRAY_APPEND = 57820
const JSON_ARRAY_INSERT = 57821
const JSON_INSERT = 57822
const JSON_MERGE = 57823
const JSON_MERGE_PATCH = 57824
const JSON_MERGE_PRESERVE = 57825
const JSON_REMOVE = 57826
const JSON_REPLACE = 57827
const JSON_SET = 57828
const JSON_UNQUOTE = 57829
const COUNT = 57830
const AVG = 57831
const MAX = 57832
const MIN = 57833
const SUM = 57834
const GROUP_CONCAT = 57835
const BIT_AND = 57836
const BIT_OR = 57837
const BIT_XOR = 57838
const STD = 57839
const STDDEV = 57840
const STDDEV_POP = 57841
const STDDEV_SAMP = 57842
const VAR_POP = 57843
const VAR_SAMP = 57844
const VARIANCE = 57845
const ANY_VALUE = 57846
const REGEXP_INSTR = 57847
const REGEXP_LIKE = 57848
const REGEXP_REPLACE = 57849
const REGEXP_SUBSTR = 57850
const ExtractValue = 57851
const UpdateXML = 57852
const GET_LOCK = 57853
const RELEASE_LOCK = 57854
const RELEASE_ALL_LOCKS = 57855
const IS_FREE_LOCK = 57856
const IS_USED_LOCK = 57857
const LOCATE = 57858
const POSITION = 57859
const ST_GeometryCollectionFromText = 57860
const ST_GeometryFromText = 57861
const ST_LineStringFromText = 57862
const ST_MultiLineStringFromText = 57863
const ST_MultiPointFromText = 57864
const ST_MultiPolygonFromText = 57865
const ST_PointFromText = 57866
const ST_PolygonFromText = 57867
const ST_GeometryCollectionFromWKB = 57868
const ST_GeometryFromWKB = 57869
const ST_LineStringFromWKB = 57870
const ST_MultiLineStringFromWKB = 57871
const ST_MultiPointFromWKB = 57872
const ST_MultiPolygonFromWKB = 57873
const ST_PointFromWKB = 57874
const ST_PolygonFromWKB = 57875
const ST_AsBinary = 57876
const ST_AsText = 57877
const ST_Dimension = 57878
const ST_Envelope = 57879
const ST_IsSimple = 57880
const ST_IsEmpty = 57881
const ST_GeometryType = 57882
const ST_X = 57883
const ST_Y = 57884
const ST_Latitude = 57885
const ST_Longitude = 57886
const ST_EndPoint = 57887
const ST_IsClosed = 57888
const ST_Length = 57889
const ST_NumPoints = 57890
const ST_StartPoint = 57891
const ST_PointN = 57892
const ST_Area = 57893
const ST_Centroid = 57894
const ST_ExteriorRing = 57895
const ST_InteriorRingN = 57896
const ST_NumInteriorRings = 57897
const ST_NumGeometries = 57898
const ST_GeometryN = 57899
const ST_LongFromGeoHash = 57900
const ST_PointFromGeoHash = 57901
const ST_LatFromGeoHash = 57902
const ST_GeoHash = 57903
const ST_AsGeoJSON = 57904
const ST_GeomFromGeoJSON = 57905
const MATCH = 57906
const AGAINST = 57907
const BOOLEAN = 57908
const LANGUAGE = 57909
const WITH = 57910
const QUERY = 57911
const EXPANSION = 57912
const WITHOUT = 57913
const VALIDATION = 57914
const ROLLUP = 57915
const UNUSED = 57916
const ARRAY = 57917
const BYTE = 57918
const CUME_DIST = 57919
const DESCRIPTION = 57920
const DENSE_RANK = 57921
const EMPTY = 57922
const EXCEPT = 57923
const FIRST_VALUE = 57924
const GROUPING = 57925
const GROUPS = 57926
const JSON_TABLE = 57927
const LAG = 57928
const LAST_VALUE = 57929
const LATERAL = 57930
const LEAD = 57931
const NTH_VALUE = 57932
const NTILE = 57933
const OF = 57934
const OVER = 57935
const PERCENT_RANK = 57936
const RANK = 57937
const RECURSIVE = 57938
const ROW_NUMBER = 57939
const SYSTEM = 57940
const WINDOW = 57941
const ACTIVE = 57942
const ADMIN = 57943
const AUTOEXTEND_SIZE = 57944
const BUCKETS = 57945
const CLONE = 57946
const COLUMN_FORMAT = 57947
const COMPONENT = 57948
const DEFINITION = 57949
const ENFORCED = 57950
const ENGINE_ATTRIBUTE = 57951
const EXCLUDE = 57952
const FOLLOWING = 57953
const GET_MASTER_PUBLIC_KEY = 57954
const HISTOGRAM = 57955
const HISTORY = 57956
const INACTIVE = 57957
const INVISIBLE = 57958
const LOCKED = 57959
const MASTER_COMPRESSION_ALGORITHMS = 57960
const MASTER_PUBLIC_KEY_PATH = 57961
const MASTER_TLS_CIPHERSUITES = 57962
const MASTER_ZSTD_COMPRESSION_LEVEL = 57963
const NESTED = 57964
const NETWORK_NAMESPACE = 57965
const NOWAIT = 57966
const NULLS = 57967
const OJ = 57968
const OLD = 57969
const OPTIONAL = 57970
const ORDINALITY = 57971
const ORGANIZATION = 57972
const OTHERS = 57973
const PARTIAL = 57974
const PATH = 57975
const PERSIST = 57976
const PERSIST_ONLY = 57977
const PRECEDING = 57978
const PRIVILEGE_CHECKS_USER = 57979
const PROCESS = 57980
const RANDOM = 57981
const REFERENCE = 57982
const REQUIRE_ROW_FORMAT = 57983
const RESOURCE = 57984
const RESPECT = 57985
const RESTART = 57986
const RETAIN = 57987
const REUSE = 57988
const ROLE = 57989
const SECONDARY = 57990
const SECONDARY_ENGINE = 57991
const SECONDARY_ENGINE_ATTRIBUTE = 57992
const SECONDARY_LOAD = 57993
const SECONDARY_UNLOAD = 57994
const SIMPLE = 57995
const SKIP = 57996
const SRID = 57997
const THREAD_PRIORITY = 57998
const TIES = 57999
const UNBOUNDED = 58000
const VCPU = 58001
const VISIBLE = 58002
const RETURNING = 58003
const FORMAT_BYTES = 58004
const FORMAT_PICO_TIME = 58005
const PS_CURRENT_THREAD_ID = 58006
const PS_THREAD_ID = 58007
const GTID_SUBSET = 58008
const GTID_SUBTRACT = 58009
const WAIT_FOR_EXECUTED_GTID_SET = 58010
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58011
const FORMAT = 58012
const TREE = 58013
const VITESS = 58014
const TRADITIONAL = 58015
const VTEXPLAIN = 58016
const VEXPLAIN = 58017
const PLAN = 58018
const LOCAL = 58019
const LOW_PRIORITY = 58020
const NO_WRITE_TO_BINLOG = 58021
const LOGS = 58022
const ERROR = 58023
const GENERAL = 58024
const HOSTS = 58025
const OPTIMIZER_COSTS = 58026
const USER_RESOURCES = 58027
const SLOW = 58028
const CHANNEL = 58029
const RELAY = 58030
const EXPORT = 58031
const CURRENT = 58032
const ROW = 58033
const ROWS = 58034
const AVG_ROW_LENGTH = 58035
const CONNECTION = 58036
const CHECKSUM = 58037
const DELAY_KEY_WRITE = 58038
const ENCRYPTION = 58039
const ENGINE = 58040
const INSERT_METHOD = 58041
const MAX_ROWS = 58042
const MIN_ROWS = 58043
const PACK_KEYS = 58044
const PASSWORD = 58045
const FIXED = 58046
const DYNAMIC = 58047
const COMPRESSED = 58048
const REDUNDANT = 58049
const COMPACT = 58050
const ROW_FORMAT = 58051
const STATS_AUTO_RECALC = 58052
const STATS_PERSISTENT = 58053
const STATS_SAMPLE_PAGES = 58054
const STORAGE = 58055
const MEMORY = 58056
const DISK = 58057
const PARTITIONS = 58058
const LINEAR = 58059
const RANGE = 58060
const LIST = 58061
const SUBPARTITION = 58062
const SUBPARTITIONS = 58063
const HASH = 58064

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	15, 49,
	16, 49,
	-2, 40,
	-1, 52,
	1, 157,
	740, 157,
	-2, 165,
	-1, 53,
	141, 165,
	183, 165,
	353, 165,
	-2, 523,
	-1, 61,
	37, 777,
	246, 777,
	257, 777,
	292, 791,
	293, 791,
	-2, 779,
	-1, 66,
	248, 815,
	-2, 813,
	-1, 122,
	245, 1608,
	-2, 131,
	-1, 124,
	1, 158,
	740, 158,
	-2, 165,
	-1, 135,
	142, 408,
	251, 408,
	-2, 512,
	-1, 154,
	141, 165,
	183, 165,
	353, 165,
	-2, 532,
	-1, 739,
	169, 41,
	-2, 43,
	-1, 946,
	91, 1625,
	-2, 1469,
	-1, 947,
	91, 1626,
	228, 1630,
	-2, 1470,
	-1, 948,
	228, 1629,
	-2, 42,
	-1, 1032,
	64, 887,
	-2, 900,
	-1, 1120,
	256, 1098,
	261, 1098,
	-2, 419,
	-1, 1205,
	1, 580,
	740, 580,
	-2, 165,
	-1, 1509,
	228, 1630,
	-2, 1470,
	-1, 1720,
	64, 888,
	-2, 904,
	-1, 1721,
	64, 889,
	-2, 905,
	-1, 1777,
	141, 165,
	183, 165,
	353, 165,
	-2, 458,
	-1, 1858,
	142, 408,
	251, 408,
	-2, 512,
	-1, 1867,
	256, 1099,
	261, 1099,
	-2, 420,
	-1, 2310,
	228, 1634,
	-2, 1628,
	-1, 2311,
	228, 1630,
	-2, 1626,
	-1, 2414,
	141, 165,
	183, 165,
	353, 165,
	-2, 459,
	-1, 2421,
	27, 186,
	-2, 188,
	-1, 2879,
	82, 96,
	92, 96,
	-2, 965,
	-1, 2948,
	715, 700,
	-2, 674,
	-1, 3171,
	54, 1573,
	-2, 1567,
	-1, 4007,
	715, 700,
	-2, 688,
	-1, 4099,
	94, 632,
	99, 632,
	109, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	224, 632,
	225, 632,
	226, 632,
	-2, 2000,
}

const yyPrivate = 57344

const yyLast = 56583

var yyAct = [...]int{
	962, 3659, 957, 87, 3660, 4174, 3658, 3988, 950, 4078,
	2411, 4187, 3323, 3458, 2117, 3223, 3970, 3893, 4066, 3609,
	4141, 949, 2105, 3230, 2339, 4142, 1271, 4097, 3272, 3968,
	3281, 3286, 3283, 3282, 3280, 3285, 3284, 3184, 3038, 2043,
	3121, 3301, 5, 3596, 3238, 2341, 2485, 1273, 3300, 1987,
	743, 3188, 3185, 3702, 2355, 3498, 915, 3505, 3012, 42,
	2366, 3172, 3182, 2839, 1057, 737, 3488, 3037, 738, 2448,
	911, 1836, 1780, 771, 2913, 3330, 2994, 910, 3303, 2945,
	4039, 2914, 2473, 1736, 1082, 2516, 1030, 2453, 87, 2915,
	163, 2399, 1050, 1027, 2864, 1883, 2382, 1152, 2387, 41,
	2845, 2386, 2830, 2814, 2263, 2295, 43, 1030, 2385, 2262,
	3527, 2101, 2986, 2494, 2139, 2051, 149, 2472, 2374, 1865,
	2533, 2455, 1092, 2906, 1115, 1110, 1769, 2881, 1749, 2389,
	1701, 100, 2145, 1522, 1128, 104, 105, 2076, 2065, 1447,
	1432, 1872, 1029, 1089, 1033, 1983, 3187, 1086, 1121, 2470,
	1964, 1090, 2444, 1116, 1118, 753, 1117, 2445, 1768, 1067,
	1754, 1069, 1039, 1052, 2852, 3696, 1723, 1481, 2172, 2812,
	2042, 1261, 2367, 748, 107, 2153, 1036, 1061, 1995, 85,
	167, 1505, 127, 3688, 125, 3459, 1857, 1034, 1049, 126,
	740, 99, 912, 1025, 1035, 132, 133, 1201, 1037, 1062,
	747, 93, 1526, 98, 1269, 741, 3516, 1247, 4175, 3597,
	3269, 106, 84, 1531, 2487, 2488, 2489, 4023, 2487, 2968,
	2967, 2531, 2936, 1448, 3589, 1024, 730, 4124, 3002, 3003,
	4019, 1042, 4018, 128, 675, 2058, 3552, 2336, 2337, 2057,
	134, 2056, 2055, 4024, 1083, 1157, 2054, 3291, 2053, 1154,
	2026, 1217, 3663, 672, 4118, 673, 2810, 2581, 3168, 4145,
	3125, 3663, 1171, 1172, 1173, 4197, 1176, 1177, 1178, 1179,
	4140, 1132, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1077,
	1076, 1131, 1043, 1165, 1949, 2520, 1026, 95, 1028, 731,
	2, 1107, 2841, 3289, 3997, 128, 2938, 1106, 1051, 1105,
	1158, 1161, 1162, 95, 1104, 95, 1443, 4165, 1740, 1099,
	1094, 1730, 3462, 3291, 1738, 2363, 3461, 2362, 715, 715,
	3295, 1458, 2079, 4019, 4180, 4128, 3288, 4126, 1464, 2519,
	1174, 2961, 3662, 2360, 916, 111, 112, 113, 1741, 116,
	1023, 3662, 122, 1218, 1739, 191, 709, 3971, 667, 4179,
	4127, 2958, 4125, 190, 2775, 95, 2063, 1075, 1079, 914,
	728, 729, 3349, 128, 709, 4093, 3889, 3888, 1156, 3289,
	1018, 1019, 1020, 1021, 1155, 3602, 129, 1032, 3603, 4155,
	3899, 4122, 3621, 3610, 4067, 965, 966, 967, 1108, 965,
	966, 967, 172, 86, 86, 4075, 3295, 1434, 1075, 1079,
	914, 2513, 3898, 709, 2110, 1064, 1065, 706, 4102, 3375,
	1846, 2588, 3220, 3221, 2975, 2976, 86, 2855, 1770, 2518,
	1771, 4107, 1103, 1098, 1210, 1211, 1100, 2406, 2407, 2811,
	1454, 3219, 3620, 1446, 3292, 2895, 4079, 2890, 3001, 4105,
	2889, 2035, 2036, 2891, 709, 2856, 2585, 2405, 169, 4111,
	4112, 170, 2985, 1266, 2464, 691, 1213, 1460, 3240, 3241,
	1242, 1243, 1237, 1016, 1015, 4106, 3989, 3716, 689, 1461,
	1448, 1462, 1463, 95, 95, 189, 4002, 2458, 2586, 1225,
	1101, 2902, 1991, 2181, 1226, 2424, 2423, 1238, 709, 1231,
	2848, 2849, 709, 3013, 86, 3327, 95, 88, 709, 709,
	2338, 1200, 3357, 4146, 3325, 3059, 3355, 2579, 686, 1444,
	3292, 2034, 4083, 1225, 723, 2038, 4083, 701, 1226, 3331,
	727, 1254, 1482, 1256, 4147, 1103, 1224, 1095, 1223, 1766,
	721, 2370, 696, 2987, 1097, 1096, 3941, 1705, 3942, 2946,
	1175, 2495, 2370, 699, 3346, 2971, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1491, 1490, 1492, 1493, 2534, 710, 1965,
	1433, 1253, 1255, 1265, 3318, 1244, 1939, 3239, 4177, 1264,
	2540, 2582, 3319, 2583, 95, 1245, 710, 3015, 1458, 3242,
	1258, 2173, 1239, 1101, 1232, 1068, 2175, 1263, 3328, 173,
	2180, 2176, 1246, 2939, 2177, 2178, 2179, 3326, 179, 2174,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 1102,
	1940, 676, 1941, 678, 692, 710, 712, 1206, 711, 682,
	1992, 680, 684, 693, 685, 2541, 679, 2457, 690, 1240,
	1241, 681, 694, 695, 698, 702, 703, 704, 700, 697,
	2989, 688, 713, 4119, 3591, 3590, 2538, 2536, 3025, 3024,
	3023, 2560, 3502, 3017, 3873, 3021, 710, 3016, 2557, 3014,
	2558, 3124, 2559, 1181, 3019, 1111, 1180, 1850, 1251, 1112,
	2498, 3060, 1252, 3018, 3667, 2383, 1112, 1150, 1149, 1078,
	1072, 1070, 1257, 1148, 1147, 1146, 1151, 1454, 2537, 1145,
	1144, 3020, 3022, 1143, 1138, 1708, 1270, 4152, 1270, 1270,
	710, 2539, 3242, 1087, 710, 1087, 4198, 1250, 1124, 1085,
	710, 710, 1102, 1087, 1123, 1984, 2471, 1063, 2990, 2524,
	1078, 1072, 1070, 164, 2368, 2369, 1453, 1450, 1451, 1452,
	1457, 1459, 1456, 1160, 1455, 2368, 2369, 2523, 1980, 1123,
	1435, 1168, 3262, 1159, 1449, 2970, 1030, 1506, 1511, 1512,
	1844, 1515, 1517, 1518, 1519, 1520, 1521, 1767, 1524, 1525,
	1527, 1527, 2973, 1527, 1527, 1532, 1532, 1532, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	3996, 2940, 2937, 1259, 1657, 2517, 1659, 1660, 1661, 1662,
	1663, 1503, 1426, 1427, 963, 3293, 3294, 3661, 1532, 1532,
	1532, 1532, 1532, 1532, 3550, 3551, 3661, 714, 3297, 1109,
	963, 1425, 963, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 3619, 707, 1507,
	2904, 1130, 1516, 1496, 1204, 1499, 1500, 1501, 1502, 4110,
	4042, 2960, 3503, 708, 1698, 1513, 1071, 2461, 89, 1442,
	4081, 3347, 165, 1528, 4081, 1529, 1530, 94, 94, 177,
	1222, 2587, 1951, 1950, 1952, 1953, 1954, 1212, 1209, 1533,
	1534, 3293, 3294, 1453, 1450, 1451, 1452, 1457, 1459, 1456,
	94, 1455, 4080, 4109, 3297, 2959, 4080, 1071, 2462, 3587,
	1141, 1449, 3446, 1130, 1139, 2460, 2586, 1130, 1704, 1695,
	185, 1843, 1842, 1496, 2993, 2956, 4191, 1030, 1871, 1981,
	1221, 1030, 1227, 1228, 1229, 1230, 3133, 1030, 1840, 3006,
	1216, 1729, 666, 1130, 1497, 1498, 1235, 2815, 2817, 2463,
	2984, 4120, 2515, 2983, 1129, 3984, 1267, 1268, 3541, 2459,
	3523, 1130, 1696, 166, 171, 168, 174, 175, 176, 178,
	180, 181, 182, 183, 2886, 2851, 1969, 2787, 94, 184,
	186, 187, 188, 1712, 1130, 2113, 1758, 1716, 1658, 1215,
	3132, 124, 2846, 1029, 674, 3152, 2412, 1496, 1970, 1493,
	3226, 2547, 2543, 2545, 2546, 2544, 2548, 2549, 2550, 2603,
	3218, 2154, 1103, 1199, 1476, 2614, 1129, 1046, 1730, 1167,
	1129, 1262, 1714, 1715, 3586, 1248, 104, 105, 2155, 4010,
	1696, 1664, 1665, 1666, 1667, 1668, 1669, 1870, 1488, 1489,
	1491, 1490, 1492, 1493, 1996, 1702, 1129, 1220, 3227, 119,
	1153, 3582, 1123, 1126, 1127, 3515, 1087, 3150, 1689, 1142,
	1120, 1124, 2535, 1140, 1129, 107, 2146, 2047, 1977, 1133,
	1123, 1772, 3229, 3033, 1135, 2929, 4156, 1203, 1136, 1134,
	2146, 1119, 2623, 2996, 1130, 1464, 1463, 1129, 2995, 3711,
	3224, 2996, 3557, 1123, 1126, 1127, 2995, 1087, 2614, 1137,
	3556, 1120, 1124, 1863, 2081, 1847, 1848, 1849, 2650, 3240,
	3241, 1462, 1463, 2502, 1710, 1880, 3225, 2816, 2082, 1494,
	1495, 2080, 1713, 120, 1879, 1869, 1732, 1966, 1711, 1967,
	1934, 1856, 1968, 2512, 1885, 1130, 1886, 1735, 1888, 1890,
	1026, 1699, 1894, 1896, 1898, 1900, 1902, 1916, 1875, 1028,
	3231, 4189, 2514, 1464, 4190, 1234, 4188, 190, 1270, 4199,
	2152, 1873, 1873, 1989, 1763, 1764, 1236, 2507, 2941, 1874,
	2510, 1831, 1924, 1925, 3364, 2507, 1249, 1141, 1930, 1931,
	129, 1139, 151, 1202, 1205, 4043, 4148, 1129, 3976, 3542,
	1041, 1839, 1133, 1123, 1219, 1997, 172, 1135, 4193, 1102,
	1853, 1136, 1134, 1959, 715, 1464, 1866, 2511, 3881, 1854,
	1852, 965, 966, 967, 1973, 2509, 1971, 1972, 3239, 1974,
	1975, 1976, 3880, 3616, 1877, 3617, 1461, 162, 1462, 1463,
	3242, 4044, 1717, 150, 3977, 1482, 2140, 3005, 1129, 1730,
	1166, 1920, 1730, 3514, 1163, 3871, 2151, 1464, 2300, 4200,
	3633, 1912, 169, 1464, 1915, 170, 1917, 3632, 1985, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1491, 1490, 1492, 1493,
	1958, 2069, 2070, 2593, 2594, 1859, 1860, 161, 160, 189,
	3564, 3563, 3553, 1957, 3270, 3258, 128, 2911, 1106, 1482,
	1105, 2602, 2910, 2909, 1461, 1104, 1462, 1463, 2467, 1960,
	1845, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1490, 1492,
	1493, 733, 2002, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1491, 1490, 1492, 1493, 2300, 1270, 1270, 1944, 2297, 1464,
	2024, 1998, 1999, 3547, 715, 4161, 1730, 2299, 1943, 87,
	2137, 1482, 87, 3322, 1942, 2003, 1461, 3228, 1462, 1463,
	1956, 961, 2010, 2011, 2012, 3035, 1932, 2069, 2070, 2067,
	2068, 1926, 2023, 2662, 1923, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1491, 1490, 1492, 1493, 1922, 1921, 1892, 1482,
	155, 1861, 158, 2066, 1858, 1709, 156, 157, 1461, 1429,
	1462, 1463, 1946, 173, 1461, 42, 1462, 1463, 42, 1766,
	2108, 2108, 179, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1491, 1490, 1492, 1493, 1460, 2893, 715, 4159, 1730, 2106,
	2106, 2109, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491,
	1490, 1492, 1493, 2483, 2482, 4149, 2071, 190, 2129, 2118,
	2119, 2120, 2121, 2131, 2122, 2123, 2124, 2136, 2132, 2125,
	2126, 2133, 2134, 2135, 2127, 2128, 2130, 2481, 2480, 1945,
	129, 1486, 1487, 1488, 1489, 1491, 1490, 1492, 1493, 2192,
	1461, 1730, 1462, 1463, 1695, 110, 172, 1470, 1471, 1472,
	1473, 1474, 1475, 1469, 1466, 2000, 109, 4005, 108, 2479,
	2478, 1743, 2004, 101, 2006, 2007, 2008, 2009, 2660, 103,
	101, 2013, 1464, 102, 2837, 4176, 1464, 4004, 1460, 1730,
	102, 3980, 2048, 2025, 3979, 85, 1464, 1696, 85, 3978,
	4136, 1730, 1464, 1482, 2837, 1730, 1478, 164, 1479, 2031,
	2032, 3876, 169, 2078, 2141, 170, 1464, 1744, 1460, 1730,
	1464, 3860, 1480, 1494, 1495, 1477, 2083, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1491, 1490, 1492, 1493, 1730, 189,
	1464, 1730, 2837, 4074, 2837, 4053, 2837, 4049, 1730, 3998,
	2084, 1464, 2086, 2087, 2088, 2089, 2090, 2091, 2093, 2095,
	2096, 2097, 2098, 2099, 2100, 2308, 2085, 2214, 2112, 3232,
	4089, 1730, 3908, 3236, 4087, 1730, 2375, 2376, 1464, 1507,
	3235, 3961, 1730, 1464, 4085, 1730, 2310, 1464, 2309, 3859,
	3954, 1730, 2156, 2157, 2158, 2159, 2298, 2147, 3600, 3995,
	3907, 2296, 2191, 159, 3952, 1730, 2170, 3710, 3949, 1730,
	3884, 1730, 2837, 3872, 3237, 3708, 3629, 1694, 1464, 3233,
	110, 1693, 1464, 1461, 3234, 1462, 1463, 1461, 3903, 1462,
	1463, 109, 1692, 108, 3561, 2206, 3546, 1461, 3332, 1462,
	1463, 103, 3329, 1461, 2391, 1462, 1463, 1464, 3600, 1730,
	2837, 3598, 2307, 173, 3261, 2313, 2314, 1461, 3260, 1462,
	1463, 1461, 179, 1462, 1463, 2308, 3931, 1730, 104, 105,
	1464, 2421, 1730, 2507, 1730, 3487, 1730, 3521, 1730, 2742,
	1730, 1461, 1464, 1462, 1463, 2920, 2310, 1464, 2380, 104,
	105, 2907, 1461, 2610, 1462, 1463, 3251, 3250, 3864, 2343,
	2393, 1691, 2077, 1730, 3248, 3249, 3480, 1730, 3246, 3247,
	3477, 1730, 152, 3246, 3245, 153, 1092, 2861, 1730, 1461,
	2882, 1462, 1463, 1684, 1461, 2570, 1462, 1463, 1461, 2569,
	1462, 1463, 2430, 2431, 2432, 2433, 4150, 2425, 2529, 2426,
	2427, 2428, 2429, 2416, 1042, 2528, 165, 2365, 2415, 1092,
	2586, 2969, 3518, 177, 103, 2436, 2437, 2438, 2439, 1461,
	2397, 1462, 1463, 1461, 2344, 1462, 1463, 2027, 2331, 2356,
	3475, 1730, 1835, 2950, 3863, 3438, 1730, 2358, 2943, 2944,
	2450, 1993, 2349, 2419, 2350, 2883, 2496, 164, 1461, 1464,
	1462, 1463, 1955, 1464, 185, 2885, 2378, 2456, 1947, 1464,
	2837, 2836, 2111, 1730, 3608, 2402, 2403, 2401, 1464, 1937,
	1933, 1461, 2418, 1462, 1463, 2417, 1730, 3517, 1077, 1076,
	1464, 2658, 1929, 1461, 1464, 1462, 1463, 2493, 1461, 1928,
	1462, 1463, 1927, 1464, 1745, 2466, 1260, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 1835, 1834,
	2882, 2833, 109, 184, 186, 187, 188, 1464, 2947, 2451,
	2925, 2447, 2440, 2442, 2443, 103, 2860, 2465, 3183, 2501,
	2469, 1464, 2504, 2853, 2505, 2477, 1132, 3436, 1730, 3514,
	2521, 3432, 1730, 1778, 1777, 2420, 1873, 3429, 1730, 3213,
	4037, 1464, 2500, 2503, 2451, 2499, 1131, 1730, 2853, 2586,
	4009, 1464, 2837, 2861, 3466, 1464, 3248, 3155, 3427, 1730,
	2522, 2404, 2525, 3993, 1464, 2883, 2526, 2527, 2742, 2647,
	1464, 3425, 1730, 1460, 2861, 2586, 2831, 3565, 2646, 1464,
	1461, 2508, 1462, 1463, 1461, 1464, 1462, 1463, 2507, 1464,
	1461, 2490, 1462, 1463, 2591, 3423, 1730, 2861, 1464, 1461,
	2373, 1462, 1463, 1030, 1030, 1030, 1731, 1733, 2532, 3421,
	1730, 1461, 1464, 1462, 1463, 1461, 1734, 1462, 1463, 2334,
	2111, 1464, 3514, 1517, 1461, 1517, 1462, 1463, 2049, 3419,
	1730, 3566, 3567, 3568, 2033, 1979, 1031, 1765, 1464, 3417,
	1730, 2606, 2507, 3415, 1730, 1114, 1113, 95, 1461, 1464,
	1462, 1463, 3413, 1730, 4115, 1464, 4056, 2563, 3411, 1730,
	3895, 1737, 1461, 3861, 1462, 1463, 3534, 3409, 1730, 3723,
	2609, 3581, 3273, 3407, 1730, 3578, 165, 3405, 1730, 3559,
	3380, 3379, 1461, 177, 1462, 1463, 3403, 1730, 1837, 2449,
	3320, 2310, 1461, 2309, 1462, 1463, 1461, 3275, 1462, 1463,
	3401, 1730, 3271, 2951, 2578, 1461, 1464, 1462, 1463, 3399,
	1730, 1461, 1464, 1462, 1463, 2446, 95, 1464, 2441, 2584,
	1461, 2435, 1462, 1463, 185, 2917, 1461, 3868, 1462, 1463,
	1461, 2434, 1462, 1463, 1962, 2592, 1464, 3385, 1730, 1461,
	1868, 1462, 1463, 3362, 1730, 1464, 1864, 1833, 2598, 121,
	1204, 3528, 3529, 1461, 1908, 1462, 1463, 3324, 2595, 2596,
	2597, 2916, 1461, 3896, 1462, 1463, 2078, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 2464, 1461,
	1464, 1462, 1463, 184, 186, 187, 188, 2347, 2029, 3533,
	1461, 4171, 1462, 1463, 2807, 1730, 1461, 4169, 1462, 1463,
	2805, 1730, 2599, 1464, 2601, 2780, 1730, 2622, 1909, 1910,
	1911, 4143, 2917, 2604, 4017, 2605, 3936, 3531, 2600, 3267,
	3266, 3265, 1464, 2612, 2757, 1730, 3183, 1464, 2930, 1697,
	2564, 1464, 3205, 2611, 2607, 3203, 3202, 3206, 671, 2786,
	3204, 1464, 4013, 3569, 3201, 1464, 3897, 1461, 2364, 1462,
	1463, 1742, 2030, 1461, 2353, 1462, 1463, 3522, 1461, 3160,
	1462, 1463, 2774, 2656, 3207, 1464, 2870, 2871, 2749, 1730,
	1464, 2818, 3173, 3175, 3159, 1482, 3975, 1461, 2108, 1462,
	1463, 3176, 2572, 2573, 1044, 3703, 1461, 2575, 1462, 1463,
	1030, 2740, 1730, 3570, 3571, 3572, 2576, 2106, 2821, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1491, 1490, 1492, 1493,
	2738, 1730, 732, 2858, 2859, 2725, 1730, 3701, 2819, 2723,
	1730, 1461, 2391, 1462, 1463, 1030, 2878, 3510, 3170, 2721,
	1730, 1464, 1978, 2719, 1730, 1045, 1464, 3507, 1014, 3244,
	1464, 2822, 2900, 2824, 1461, 3506, 1462, 1463, 2921, 2556,
	2834, 1904, 2857, 2717, 1730, 2077, 2838, 1464, 2715, 1730,
	3687, 2555, 3686, 1461, 1464, 1462, 1463, 1170, 1461, 42,
	1462, 1463, 1461, 2154, 1462, 1463, 1428, 2554, 2875, 2553,
	2552, 2877, 1461, 1056, 1462, 1463, 1461, 1464, 1462, 1463,
	2155, 1047, 2551, 1169, 1702, 2809, 3340, 1055, 1464, 1048,
	2847, 1905, 1906, 1907, 1464, 101, 1461, 2916, 1462, 1463,
	2999, 1461, 3685, 1462, 1463, 102, 2829, 2903, 2905, 2713,
	1730, 1696, 2957, 1464, 2711, 1730, 129, 1464, 2709, 1730,
	2876, 3512, 2850, 103, 101, 2896, 2074, 2072, 2073, 2955,
	103, 4185, 2880, 3263, 102, 2835, 3583, 110, 4092, 2375,
	2376, 3994, 2707, 1730, 2567, 1464, 2884, 3891, 109, 3243,
	108, 2887, 2874, 2359, 3489, 3158, 2966, 2456, 103, 2894,
	1464, 2897, 1461, 3157, 1462, 1463, 2912, 1461, 2137, 1462,
	1463, 1461, 2590, 1462, 1463, 2919, 2705, 1730, 108, 2908,
	2922, 2923, 2703, 1730, 3960, 3959, 3939, 3709, 1461, 2149,
	1462, 1463, 3707, 3706, 2150, 1461, 2918, 1462, 1463, 3698,
	3579, 2701, 1730, 3511, 1464, 2699, 1730, 2926, 1464, 3509,
	2927, 3276, 2931, 2932, 2933, 2491, 1851, 1054, 1461, 1464,
	1462, 1463, 2963, 1464, 109, 3697, 3499, 1856, 1464, 1461,
	2210, 1462, 1463, 2697, 1730, 1461, 110, 1462, 1463, 3009,
	3010, 2853, 2952, 2953, 1464, 4173, 4172, 109, 2695, 1730,
	3671, 110, 2833, 3061, 1461, 2962, 1462, 1463, 1461, 2648,
	1462, 1463, 109, 2345, 108, 1464, 2129, 2118, 2119, 2120,
	2121, 2131, 2122, 2123, 2124, 2136, 2132, 2125, 2126, 2133,
	2134, 2135, 2127, 2128, 2130, 1759, 1461, 2988, 1462, 1463,
	3026, 3007, 2693, 1730, 1464, 1751, 2691, 1730, 1464, 2991,
	4172, 1461, 1464, 1462, 1463, 3, 4173, 2686, 1730, 1464,
	2293, 2682, 1730, 97, 1747, 2619, 2680, 1730, 1, 1464,
	1022, 3981, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051,
	3052, 3053, 2673, 1730, 114, 115, 2964, 3545, 2046, 2044,
	2325, 10, 9, 2045, 3027, 1461, 8, 1462, 1463, 1461,
	1431, 1462, 1463, 2671, 1730, 1430, 3549, 4104, 1731, 2332,
	1461, 687, 1462, 1463, 1461, 2335, 1462, 1463, 1700, 1461,
	4144, 1462, 1463, 1464, 2866, 2869, 2870, 2871, 2867, 4100,
	2868, 2872, 1746, 4101, 1464, 1461, 3536, 1462, 1463, 1948,
	2618, 1938, 3063, 3611, 2357, 2261, 3119, 3482, 3892, 2997,
	3279, 2497, 2998, 3577, 2454, 1464, 1461, 3478, 1462, 1463,
	1122, 154, 2866, 2869, 2870, 2871, 2867, 3011, 2868, 2872,
	2413, 2414, 3528, 3529, 1464, 3028, 4069, 118, 1080, 3008,
	117, 1125, 1233, 2492, 3137, 1461, 3126, 1462, 1463, 1461,
	3128, 1462, 1463, 1461, 3601, 1462, 1463, 2901, 2422, 1784,
	1461, 1782, 1462, 1463, 2391, 2942, 1783, 1781, 3054, 1786,
	1461, 3444, 1462, 1463, 2298, 1785, 2298, 3099, 1464, 2296,
	4041, 2296, 3440, 3348, 1697, 2649, 3445, 3190, 2037, 87,
	722, 2873, 2391, 2391, 2391, 2391, 2391, 716, 3109, 3110,
	3111, 3112, 3113, 3377, 192, 1773, 1752, 3163, 3137, 1164,
	2468, 677, 2391, 1464, 3127, 2391, 3129, 3252, 2530, 3165,
	2393, 683, 3376, 1514, 1461, 2028, 1462, 1463, 3195, 2204,
	3156, 3136, 2888, 1074, 3212, 1461, 1464, 1462, 1463, 1066,
	2346, 2823, 1073, 1464, 3154, 1033, 3869, 3148, 2393, 2393,
	2393, 2393, 2393, 3191, 3504, 3169, 1461, 3171, 1462, 1463,
	2840, 3174, 3161, 3167, 1989, 1464, 3368, 3974, 2393, 3700,
	4054, 2393, 3164, 3177, 3178, 1461, 2898, 1462, 1463, 3296,
	3149, 3151, 3153, 1748, 3465, 3194, 1464, 2621, 1034, 3304,
	2144, 3197, 3198, 3196, 3200, 1035, 3199, 3208, 104, 105,
	1504, 3366, 1464, 2390, 3666, 2064, 745, 3216, 1464, 2287,
	2288, 2289, 2290, 2291, 1464, 744, 3222, 742, 2825, 1461,
	3214, 1462, 1463, 3215, 2803, 3162, 2312, 3255, 3253, 2315,
	2316, 2802, 1464, 2854, 3254, 1468, 1464, 1467, 951, 2813,
	1760, 2865, 2863, 2862, 3256, 3257, 2565, 2398, 1464, 3530,
	3526, 4096, 2392, 2798, 1461, 2388, 1462, 1463, 3277, 3308,
	1464, 2832, 3305, 2456, 902, 2333, 3309, 901, 3298, 754,
	746, 3180, 3315, 736, 2797, 964, 900, 1461, 3186, 1462,
	1463, 899, 3306, 3186, 1461, 3307, 1462, 1463, 2972, 3321,
	2796, 2974, 2899, 3317, 3333, 1445, 2795, 3336, 3335, 1719,
	1722, 2354, 2794, 1093, 3343, 3345, 1461, 4000, 1462, 1463,
	2589, 1464, 3374, 1718, 4007, 3350, 3351, 3353, 3352, 3287,
	2793, 3354, 3595, 3356, 2784, 3358, 3268, 1461, 2948, 1462,
	1463, 2484, 69, 46, 3969, 4038, 2783, 3369, 3370, 3371,
	3372, 3373, 894, 1461, 891, 1462, 1463, 3668, 2782, 1461,
	3669, 1462, 1463, 3670, 3122, 1461, 3123, 1462, 1463, 4020,
	4021, 1517, 890, 4022, 2199, 1517, 1441, 1438, 4117, 3278,
	2039, 96, 36, 1461, 35, 1462, 1463, 1461, 34, 1462,
	1463, 3490, 33, 3492, 2608, 32, 26, 25, 2613, 1461,
	3460, 1462, 1463, 24, 23, 22, 29, 3464, 19, 2781,
	21, 1461, 20, 1462, 1463, 18, 3290, 4139, 4184, 123,
	55, 2616, 52, 2617, 50, 131, 130, 53, 49, 2625,
	1207, 47, 31, 2627, 2628, 30, 17, 16, 15, 14,
	13, 3189, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 3344, 2645, 2391, 12, 11, 7, 3491, 6,
	3493, 3495, 1461, 39, 1462, 1463, 1464, 3543, 3500, 38,
	37, 3501, 28, 3508, 27, 40, 2651, 2652, 2653, 2654,
	2655, 4, 2657, 2935, 2486, 0, 2659, 3513, 0, 0,
	2664, 2665, 0, 2666, 1464, 0, 2669, 2670, 2672, 2674,
	2675, 2676, 2677, 2678, 2679, 2681, 2683, 2684, 2685, 2687,
	2393, 2689, 2690, 2692, 2694, 2696, 2698, 2700, 2702, 2704,
	2706, 2708, 2710, 2712, 2714, 2716, 2718, 2720, 2722, 2724,
	2726, 2727, 2728, 3535, 2730, 3299, 2732, 3308, 2734, 2735,
	3305, 2737, 2739, 2741, 3309, 3544, 3560, 2744, 3562, 3537,
	3532, 2748, 734, 0, 2778, 2753, 2754, 2755, 2756, 3605,
	3606, 3467, 3538, 3469, 3470, 3471, 3497, 0, 2767, 2768,
	2769, 2770, 2771, 2772, 3554, 3555, 2776, 2777, 1012, 0,
	2300, 0, 2773, 1013, 2779, 0, 0, 0, 0, 2785,
	0, 3338, 3339, 2107, 2788, 2789, 2790, 2791, 2792, 0,
	3525, 0, 0, 0, 0, 2799, 2800, 1461, 2801, 1462,
	1463, 2804, 2806, 2357, 0, 2808, 0, 0, 0, 3539,
	3540, 0, 0, 1464, 0, 2820, 0, 3588, 1464, 0,
	0, 3592, 3593, 3594, 0, 1461, 0, 1462, 1463, 1464,
	3607, 0, 0, 1464, 0, 0, 0, 1464, 0, 0,
	0, 0, 3623, 0, 0, 0, 0, 0, 0, 0,
	0, 1053, 0, 0, 1059, 1059, 0, 1464, 0, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 2766, 0, 1464, 0, 0, 2765, 0, 0, 0,
	0, 0, 3674, 0, 3675, 3676, 3677, 2764, 1464, 3684,
	2629, 2763, 3691, 0, 3693, 2762, 0, 0, 0, 0,
	0, 0, 0, 1464, 0, 3664, 0, 2644, 0, 1464,
	0, 0, 0, 0, 0, 2761, 0, 0, 3190, 3694,
	0, 87, 0, 3190, 1461, 0, 1462, 1463, 0, 1461,
	0, 1462, 1463, 0, 0, 0, 1464, 0, 0, 2108,
	1461, 0, 1462, 1463, 1461, 0, 1462, 1463, 1461, 0,
	1462, 1463, 0, 3695, 0, 3699, 0, 3704, 2106, 3725,
	3717, 2760, 3705, 3628, 3715, 0, 1724, 3712, 1461, 3714,
	1462, 1463, 0, 0, 0, 0, 2759, 42, 0, 1464,
	1728, 0, 0, 1725, 0, 0, 0, 0, 3875, 0,
	0, 2758, 0, 0, 0, 0, 3729, 2752, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2351, 2352,
	1727, 0, 1726, 0, 1461, 0, 1462, 1463, 0, 3584,
	3585, 0, 0, 0, 2751, 0, 3867, 3866, 0, 1461,
	0, 1462, 1463, 0, 0, 0, 0, 3894, 0, 0,
	3882, 0, 3887, 3886, 1461, 0, 1462, 1463, 0, 0,
	1461, 1724, 1462, 1463, 0, 0, 0, 3865, 0, 0,
	3933, 0, 0, 3934, 0, 1728, 2108, 2750, 1725, 3719,
	0, 3039, 3040, 3041, 3042, 3043, 3692, 1461, 0, 1462,
	1463, 0, 0, 0, 0, 2106, 3937, 3877, 3878, 3879,
	0, 3058, 0, 1720, 1721, 1727, 0, 1726, 0, 0,
	0, 0, 3726, 3727, 0, 0, 0, 3186, 0, 3940,
	0, 0, 0, 3943, 0, 0, 3982, 3190, 0, 3721,
	1461, 0, 1462, 1463, 0, 0, 0, 0, 0, 0,
	0, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1653, 1654, 1655, 1656, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683,
	3938, 3967, 3189, 3983, 3966, 1464, 0, 3189, 3957, 1464,
	0, 0, 0, 1464, 4001, 3963, 0, 3965, 0, 1464,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1464,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	3192, 0, 0, 0, 0, 0, 1464, 0, 0, 0,
	3986, 0, 1464, 0, 0, 0, 1464, 0, 3210, 0,
	3990, 0, 0, 4003, 0, 3870, 3985, 0, 4006, 0,
	0, 4008, 3874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 3029, 2747, 0, 0, 0, 2746, 0, 0,
	0, 2745, 0, 0, 0, 0, 0, 2743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2736, 0, 4026,
	0, 0, 4027, 0, 0, 0, 0, 0, 0, 0,
	4051, 0, 0, 0, 2733, 87, 0, 4036, 0, 0,
	2731, 0, 0, 0, 2729, 0, 1461, 0, 1462, 1463,
	1461, 0, 1462, 1463, 1461, 0, 1462, 1463, 0, 4045,
	1461, 0, 1462, 1463, 0, 0, 4057, 4068, 0, 0,
	1461, 4082, 1462, 1463, 4055, 0, 3894, 4071, 4060, 4065,
	4062, 4061, 4059, 4064, 4063, 0, 3342, 1461, 1465, 1462,
	1463, 42, 0, 1461, 4090, 1462, 1463, 1461, 0, 1462,
	1463, 3189, 0, 0, 0, 0, 0, 3987, 3359, 3360,
	4103, 3361, 3363, 3365, 4113, 4095, 0, 0, 4108, 1523,
	0, 0, 3101, 0, 3103, 0, 0, 4121, 4082, 4123,
	0, 0, 0, 4134, 0, 0, 0, 0, 0, 3378,
	3114, 3115, 3116, 3117, 3382, 3383, 3384, 3386, 3387, 3388,
	3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398,
	3400, 3402, 3404, 3406, 3408, 3410, 3412, 3414, 3416, 3418,
	3420, 3422, 3424, 3426, 3428, 3430, 3431, 3433, 3434, 3435,
	3437, 4154, 2108, 3439, 4157, 3441, 3442, 3443, 4163, 4166,
	3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456,
	3457, 2106, 4167, 4170, 4164, 4082, 4178, 4168, 1989, 3463,
	4153, 4138, 4133, 3468, 3186, 4186, 0, 3472, 3473, 4052,
	3474, 3476, 4194, 3479, 3481, 4192, 3483, 3484, 3485, 3486,
	4047, 1464, 0, 0, 0, 1464, 3494, 0, 0, 0,
	2108, 0, 0, 4203, 4204, 3992, 1464, 3934, 4202, 0,
	1464, 0, 0, 0, 0, 1464, 0, 0, 3999, 2106,
	4201, 1464, 0, 0, 0, 0, 0, 1464, 0, 0,
	0, 1464, 3519, 3520, 0, 0, 3524, 0, 0, 4011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4129, 0, 0, 0, 0, 2688,
	0, 0, 0, 2668, 0, 0, 0, 0, 0, 86,
	44, 45, 88, 0, 2667, 0, 0, 0, 2663, 0,
	0, 0, 0, 2661, 0, 0, 0, 0, 92, 2626,
	0, 0, 48, 76, 77, 2620, 74, 78, 0, 2615,
	0, 0, 0, 0, 0, 0, 4046, 0, 75, 0,
	0, 0, 1461, 0, 1462, 1463, 1461, 0, 1462, 1463,
	0, 0, 3599, 0, 0, 0, 0, 1461, 0, 1462,
	1463, 1461, 0, 1462, 1463, 0, 1461, 62, 1462, 1463,
	0, 0, 1461, 0, 1462, 1463, 0, 1750, 1461, 95,
	1462, 1463, 1461, 0, 1462, 1463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3618, 0, 0,
	3622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 83, 0, 0, 0,
	0, 0, 0, 3634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3665, 0, 0, 0, 0, 0, 0, 3672, 0, 0,
	51, 54, 57, 56, 59, 0, 73, 0, 0, 82,
	79, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 61, 91, 90, 0, 0, 71, 72,
	58, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	64, 0, 65, 66, 67, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3883, 0, 0,
	0, 0, 0, 0, 0, 0, 3890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 3900, 3901, 3902, 0,
	3904, 0, 3905, 3906, 0, 0, 0, 3909, 3910, 3911,
	3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921,
	3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 0,
	3932, 3935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3944, 3945, 3946, 3947,
	3948, 3950, 3951, 3953, 3955, 3956, 3958, 0, 0, 0,
	3962, 0, 0, 0, 3964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3991, 0, 0, 2059, 2060, 2061, 2062, 3655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2075,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2114, 2115, 0, 0, 0, 0,
	2138, 0, 0, 2142, 2143, 0, 0, 0, 2148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 94, 2171, 0, 0, 0, 2193, 2194,
	2195, 2196, 2197, 2198, 2200, 0, 2205, 0, 2207, 2208,
	2209, 0, 2211, 2212, 2213, 0, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248,
	2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258,
	2259, 2260, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 0, 0, 0, 0, 0,
	2292, 0, 2294, 4137, 2301, 2302, 2303, 2304, 2305, 2306,
	70, 0, 1801, 0, 0, 4016, 0, 0, 0, 0,
	0, 0, 0, 2317, 2318, 2319, 2320, 2321, 2322, 2323,
	2324, 0, 2326, 2327, 2328, 2329, 2330, 0, 0, 4031,
	0, 0, 0, 0, 0, 4034, 0, 4035, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4050, 0, 0, 0, 0, 3973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4076, 4077, 0, 2371,
	2372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4084, 4086, 4088, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2410, 0, 0, 4094, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 0, 0, 0, 0, 0, 0, 0,
	947, 0, 0, 0, 0, 0, 0, 0, 4135, 0,
	0, 0, 0, 0, 0, 0, 2452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3750, 3752, 3751, 3815, 3816, 3817, 3818, 3819, 3820,
	3821, 796, 4158, 4160, 4162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 195,
	0, 0, 0, 720, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 4183, 1802, 0, 0, 195,
	0, 0, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4195, 4196, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1012, 0,
	726, 195, 726, 1013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2107, 0, 0, 0, 0, 4015, 1815,
	1818, 1819, 1820, 1821, 1822, 1823, 4025, 1824, 1825, 1827,
	1828, 1826, 1829, 1830, 1803, 1804, 1805, 1806, 1787, 1788,
	1816, 0, 1790, 0, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 0, 0, 1800, 1807, 1808, 1809, 1810,
	0, 1811, 1812, 1813, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3764, 3765, 0, 0, 3840, 3839,
	3838, 0, 0, 3836, 3837, 3835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2630,
	2631, 2632, 2633, 0, 0, 0, 0, 0, 3841, 917,
	0, 772, 773, 3842, 3843, 921, 3844, 775, 776, 918,
	919, 0, 770, 774, 920, 922, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3747, 3748, 3749, 3753, 3754, 3755, 3766, 3813, 3814,
	3822, 3824, 873, 3823, 3825, 3826, 3827, 3830, 3831, 3832,
	3833, 3828, 3829, 3834, 3730, 3734, 3731, 3732, 3733, 3745,
	3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744,
	3746, 3845, 3846, 3847, 3848, 3849, 3850, 3759, 3763, 3762,
	3760, 3761, 3757, 3758, 3785, 3784, 3786, 3787, 3788, 3789,
	3790, 3791, 3793, 3792, 3794, 3795, 3796, 3797, 3798, 3799,
	3767, 3768, 3771, 3772, 3770, 3769, 3773, 3782, 3783, 3774,
	3775, 3776, 3777, 3778, 3779, 3781, 3780, 3800, 3801, 3802,
	3803, 3804, 3806, 3805, 3809, 3810, 3808, 3807, 3812, 3811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 923, 0, 924, 0, 1703, 928, 0,
	0, 0, 930, 929, 0, 931, 893, 892, 0, 0,
	925, 926, 0, 927, 0, 0, 0, 0, 1059, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1017, 0, 3851, 3852,
	3853, 3854, 3855, 3856, 3857, 3858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 726, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3030, 3031, 3032, 0, 0, 3034, 0, 0, 3036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3055,
	3056, 3057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3062, 0, 0, 3064, 3065, 3066, 0, 0, 0,
	3067, 3068, 0, 0, 3069, 0, 3070, 0, 0, 0,
	0, 0, 0, 3071, 0, 3072, 0, 0, 0, 3073,
	0, 3074, 0, 0, 3075, 0, 3076, 0, 3077, 0,
	3078, 0, 3079, 0, 3080, 0, 3081, 0, 3082, 0,
	3083, 0, 3084, 0, 3085, 0, 3086, 0, 3087, 0,
	3088, 0, 3089, 0, 3090, 0, 3091, 0, 3092, 0,
	0, 0, 3093, 0, 3094, 0, 3095, 0, 0, 3096,
	0, 3097, 0, 3098, 0, 2264, 3100, 0, 0, 3102,
	0, 0, 3104, 3105, 3106, 3107, 0, 0, 0, 0,
	3108, 2264, 2264, 2264, 2264, 2264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3118, 0, 1509, 0,
	0, 0, 0, 0, 3131, 0, 0, 3135, 0, 0,
	0, 0, 0, 0, 0, 0, 3138, 3139, 3140, 3141,
	3142, 3143, 0, 0, 0, 3144, 3145, 0, 3146, 0,
	3147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	726, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3181, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 3211, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 1801, 0, 0, 0, 726, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 726,
	0, 726, 3274, 0, 0, 0, 0, 0, 0, 726,
	0, 0, 1509, 726, 0, 0, 726, 726, 726, 726,
	0, 726, 0, 726, 726, 0, 726, 726, 726, 726,
	726, 726, 0, 0, 0, 0, 0, 0, 0, 1509,
	726, 726, 1509, 726, 1509, 195, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 195, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 726, 0, 195, 195, 3367, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 190,
	195, 0, 0, 0, 3381, 0, 1437, 0, 0, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 726, 0,
	0, 0, 129, 0, 151, 0, 0, 0, 0, 0,
	946, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 169, 0, 0, 170, 725, 0,
	0, 0, 0, 0, 0, 0, 1059, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 139, 161,
	160, 189, 0, 0, 0, 0, 0, 0, 1815, 1818,
	1819, 1820, 1821, 1822, 1823, 0, 1824, 1825, 1827, 1828,
	1826, 1829, 1830, 1803, 1804, 1805, 1806, 1787, 1788, 1816,
	725, 1790, 725, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 0, 0, 1800, 1807, 1808, 1809, 1810, 0,
	1811, 1812, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 3580, 0, 0, 0, 0, 0,
	0, 0, 155, 136, 158, 143, 135, 0, 156, 157,
	0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 144, 0, 3604, 0, 0,
	0, 0, 0, 0, 0, 0, 903, 726, 0, 147,
	145, 140, 141, 142, 146, 0, 0, 1509, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3624, 0, 3625, 0, 3626,
	0, 3627, 0, 0, 0, 0, 0, 0, 0, 3630,
	3631, 0, 0, 0, 724, 0, 0, 0, 3635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1762, 0, 3636, 0, 3637, 0, 3638, 0, 3639, 0,
	3640, 0, 3641, 0, 3642, 0, 3643, 0, 3644, 1779,
	3645, 0, 3646, 0, 3647, 0, 3648, 0, 3649, 164,
	3650, 0, 3651, 0, 0, 3652, 1084, 0, 1091, 3653,
	1817, 3654, 0, 0, 0, 0, 0, 3656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3673,
	0, 0, 0, 0, 0, 0, 0, 0, 3678, 2311,
	3679, 3680, 0, 3681, 0, 3682, 0, 0, 0, 0,
	3683, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1918, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3713, 0,
	0, 0, 0, 0, 195, 159, 0, 0, 0, 726,
	0, 3722, 0, 0, 3724, 0, 0, 1963, 0, 0,
	0, 0, 0, 0, 0, 0, 3728, 0, 0, 0,
	0, 0, 0, 0, 1990, 195, 0, 0, 726, 0,
	0, 0, 3862, 0, 0, 0, 0, 0, 0, 0,
	2001, 0, 195, 0, 0, 0, 726, 2005, 0, 2311,
	195, 0, 195, 0, 195, 195, 0, 0, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 0, 0,
	0, 0, 0, 726, 726, 726, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 726, 0, 0, 0, 0, 0, 726,
	726, 0, 0, 726, 0, 726, 0, 0, 0, 0,
	3972, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 0, 0, 0,
	0, 726, 0, 0, 0, 726, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	171, 168, 174, 175, 176, 178, 180, 181, 182, 183,
	0, 0, 0, 0, 0, 184, 186, 187, 188, 0,
	0, 0, 0, 195, 2052, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 725, 1424, 725, 725,
	195, 195, 0, 0, 195, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 725, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 2311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4028, 0, 0, 4029, 0, 4030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1272, 0, 1272, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1436, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4130, 2377,
	4131, 0, 4132, 0, 0, 0, 0, 2381, 0, 2384,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	725, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 4181, 195, 4182, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 725, 195, 0, 0, 0, 0, 195, 0, 725,
	0, 0, 1508, 725, 0, 0, 725, 725, 725, 725,
	0, 725, 0, 725, 725, 0, 725, 725, 725, 725,
	725, 725, 0, 0, 0, 0, 0, 0, 0, 1508,
	725, 725, 1508, 725, 1508, 0, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 0, 0, 725, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 195, 0,
	2052, 725, 0, 0, 725, 0, 0, 2542, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 2561, 2562, 726,
	0, 2566, 0, 726, 726, 0, 0, 0, 726, 0,
	0, 0, 0, 2571, 0, 0, 1706, 1707, 0, 0,
	2574, 0, 0, 0, 1509, 726, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 195, 195,
	195, 195, 195, 0, 0, 0, 2577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 195, 195, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 190, 0, 0, 195, 0, 0,
	0, 0, 1841, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 151,
	0, 0, 0, 726, 0, 1084, 0, 1867, 0, 0,
	0, 0, 0, 172, 0, 1876, 0, 0, 0, 1878,
	0, 0, 1881, 1882, 1884, 1884, 0, 1884, 0, 1884,
	1884, 0, 1893, 1884, 1884, 1884, 1884, 1884, 0, 0,
	0, 0, 0, 0, 162, 0, 1913, 1914, 0, 1084,
	150, 726, 1919, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1961, 725, 725, 0, 0, 0,
	0, 0, 1859, 1860, 161, 160, 189, 1982, 725, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 725, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 2116, 0, 726, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 1861, 158,
	0, 1858, 0, 156, 157, 0, 0, 0, 0, 726,
	173, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 195, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 1509, 0, 0, 726,
	726, 1509, 195, 195, 195, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	195, 0, 195, 0, 0, 195, 195, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2879, 0, 0, 0, 0, 0,
	0, 1272, 1272, 0, 0, 0, 0, 0, 0, 725,
	0, 195, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 1509, 0, 0,
	0, 0, 726, 904, 164, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 2928, 0,
	0, 195, 0, 2102, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 725, 193,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 725,
	0, 0, 670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1040, 725,
	159, 0, 0, 0, 2977, 2978, 2979, 2980, 2981, 2982,
	0, 0, 0, 0, 0, 1060, 1060, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 2052, 2992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3000, 0, 725, 0, 0, 0,
	0, 0, 0, 725, 725, 725, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 725,
	725, 0, 0, 725, 0, 725, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 1272, 0, 195, 0, 152,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	0, 725, 0, 165, 0, 725, 725, 0, 0, 0,
	177, 0, 0, 0, 0, 2348, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2361, 0, 0, 0, 0, 0,
	0, 185, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 1272, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 195, 195, 195, 0,
	0, 0, 0, 0, 0, 1084, 726, 726, 0, 0,
	0, 0, 0, 0, 166, 171, 168, 174, 175, 176,
	178, 180, 181, 182, 183, 0, 0, 0, 0, 0,
	184, 186, 187, 188, 0, 0, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 726, 726, 726, 0,
	0, 0, 1091, 0, 0, 0, 0, 0, 0, 2474,
	2475, 2476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 0, 0, 0, 0, 1091, 1876, 0, 0, 1876,
	0, 1876, 0, 0, 0, 0, 0, 2506, 0, 0,
	0, 0, 1508, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1084, 0, 0, 0, 0, 2102, 0, 0,
	0, 2102, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3316, 0,
	0, 726, 0, 726, 0, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3334, 0,
	0, 3337, 0, 0, 0, 1509, 0, 0, 0, 195,
	0, 0, 726, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 670, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3496, 0, 0, 0, 0, 0,
	0, 0, 670, 2892, 0, 726, 0, 0, 0, 0,
	0, 0, 726, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3558, 0, 725, 0, 0, 0, 0, 0, 0, 725,
	0, 0, 0, 725, 725, 0, 0, 0, 725, 0,
	3573, 0, 0, 3574, 3575, 3576, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 2842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	0, 0, 0, 725, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 726, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2924, 726, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 726, 0, 726, 0, 0, 2361, 0,
	0, 0, 1040, 0, 0, 2949, 0, 0, 0, 1876,
	1876, 0, 0, 0, 2954, 0, 0, 0, 0, 0,
	726, 2311, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 2965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	0, 195, 726, 0, 0, 0, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 725,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 725, 2102,
	0, 0, 1510, 0, 0, 1510, 726, 1510, 670, 0,
	0, 195, 725, 0, 0, 0, 1508, 0, 0, 725,
	725, 1508, 0, 0, 0, 726, 0, 726, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 3259, 670, 0, 0, 0, 0, 0, 0,
	0, 0, 2014, 2015, 670, 670, 670, 670, 670, 670,
	670, 0, 0, 0, 725, 0, 0, 1508, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3120, 0, 3341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1272, 0,
	0, 0, 0, 0, 0, 3193, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 1012, 4012, 0, 0, 952, 1013, 965,
	966, 967, 953, 0, 0, 954, 955, 0, 956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 961, 0, 968, 969, 0, 0, 2361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3310, 3311, 0, 0, 0, 0, 0, 0,
	0, 0, 3548, 0, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 725, 725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3312, 0, 0,
	0, 0, 0, 0, 0, 725, 725, 725, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 0, 0, 0, 3313, 3314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	0, 0, 1988, 670, 0, 670, 0, 670, 2400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 917,
	0, 0, 0, 0, 0, 921, 0, 0, 0, 918,
	919, 725, 0, 725, 920, 922, 0, 0, 0, 0,
	0, 0, 2361, 2361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 0, 0,
	0, 0, 725, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3612, 3613, 3614, 3615, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 670, 670, 0, 0, 670, 0, 2568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 0, 0, 725, 670, 0, 0, 0,
	0, 0, 725, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 670, 0, 0, 0, 0, 3689, 0, 3689,
	0, 0, 0, 0, 725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3718, 0,
	3720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3689, 0, 0, 0, 0, 0, 0, 3689, 0,
	3689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 725, 0, 725, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	725, 725, 0, 0, 0, 0, 0, 0, 670, 0,
	0, 0, 0, 0, 0, 0, 1935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 670, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 2361, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 0, 0, 0,
	0, 0, 2361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 725, 0, 725, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 2934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4040, 0,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 2361,
	0, 4048, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 670, 670, 670, 670, 670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1272, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 670, 670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 4098, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4040, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 4098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	0, 0, 0, 0, 1510, 670, 670, 670, 670, 670,
	0, 0, 0, 0, 0, 0, 0, 3209, 0, 0,
	0, 0, 0, 1935, 0, 670, 0, 0, 670, 3217,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 670, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 1060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 670, 0, 0, 670,
	670, 670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 1935, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 1407, 1393, 525, 0, 1335,
	1410, 1304, 1323, 1420, 1326, 1329, 1372, 1282, 1350, 414,
	1320, 1308, 1277, 1315, 1278, 1306, 1337, 270, 1303, 1395,
	1354, 1409, 364, 267, 1284, 1275, 204, 503, 1309, 428,
	1325, 203, 1374, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 1416, 368, 1360,
	0, 495, 399, 0, 0, 1510, 1339, 1399, 1348, 1386,
	1334, 1373, 1292, 1359, 1411, 1321, 1369, 1412, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 4072,
	948, 0, 0, 0, 4070, 4073, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1317, 1366, 604,
	1406, 1318, 1368, 265, 321, 272, 264, 577, 1417, 1398,
	1281, 1347, 1405, 1342, 1935, 0, 229, 1408, 1341, 0,
	1371, 0, 1423, 1276, 1362, 0, 1279, 1283, 1419, 1403,
	1312, 275, 0, 0, 0, 0, 0, 0, 0, 1338,
	1349, 1383, 1387, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 1358, 0, 0, 0, 1288, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 1291, 0, 1311,
	1384, 0, 1274, 297, 1285, 400, 257, 0, 451, 1391,
	1402, 1333, 622, 1404, 1331, 1330, 1378, 1289, 1397, 1324,
	363, 1287, 330, 197, 225, 0, 1322, 410, 459, 471,
	1396, 1307, 1316, 253, 1314, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 1357, 1376, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 1286, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 1302, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 1392, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 1381, 1422, 423,
	470, 240, 601, 494, 199, 1296, 1301, 1294, 0, 254,
	255, 1363, 572, 1297, 1295, 1352, 1353, 1298, 1413, 1414,
	1415, 1400, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	1385, 1290, 0, 1299, 1300, 396, 1394, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 1356, 196, 221, 366,
	1418, 452, 288, 643, 612, 482, 607, 206, 223, 1293,
	262, 1305, 1313, 0, 1319, 1327, 1328, 1340, 1343, 1344,
	1345, 1346, 1364, 1365, 1367, 1375, 1377, 1380, 1382, 1389,
	1401, 1421, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	1355, 1361, 379, 281, 305, 320, 1370, 611, 500, 227,
	464, 290, 251, 1388, 1390, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 1351,
	1379, 374, 573, 574, 316, 394, 0, 0, 0, 0,
	0, 1407, 1393, 525, 0, 1335, 1410, 1304, 1323, 1420,
	1326, 1329, 1372, 1282, 1350, 414, 1320, 1308, 1277, 1315,
	1278, 1306, 1337, 270, 1303, 1395, 1354, 1409, 364, 267,
	1284, 1275, 204, 503, 1309, 428, 1325, 203, 1374, 485,
	252, 375, 372, 580, 282, 273, 269, 250, 317, 383,
	426, 515, 420, 1416, 368, 1360, 0, 495, 399, 0,
	0, 0, 1339, 1399, 1348, 1386, 1334, 1373, 1292, 1359,
	1411, 1321, 1369, 1412, 323, 248, 325, 202, 411, 496,
	286, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 1317, 1366, 604, 1406, 1318, 1368, 265,
	321, 272, 264, 577, 1417, 1398, 1281, 1347, 1405, 1342,
	0, 0, 229, 1408, 1341, 0, 1371, 0, 1423, 1276,
	1362, 0, 1279, 1283, 1419, 1403, 1312, 275, 0, 0,
	0, 0, 0, 0, 0, 1338, 1349, 1383, 1387, 1332,
	0, 0, 0, 0, 0, 0, 3218, 0, 1310, 0,
	1358, 0, 0, 0, 1288, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 1291, 0, 1311, 1384, 0, 1274, 297,
	1285, 400, 257, 0, 451, 1391, 1402, 1333, 622, 1404,
	1331, 1330, 1378, 1289, 1397, 1324, 363, 1287, 330, 197,
	225, 0, 1322, 410, 459, 471, 1396, 1307, 1316, 253,
	1314, 469, 424, 599, 233, 284, 456, 430, 467, 438,
	287, 1357, 1376, 468, 370, 582, 448, 596, 623, 624,
	263, 404, 609, 519, 617, 641, 226, 260, 418, 504,
	602, 492, 395, 578, 579, 329, 491, 295, 201, 367,
	629, 224, 477, 369, 242, 231, 584, 606, 299, 289,
	454, 636, 213, 514, 594, 239, 481, 0, 0, 644,
	247, 502, 215, 591, 501, 391, 326, 327, 214, 0,
	455, 268, 293, 0, 0, 258, 413, 586, 587, 256,
	645, 228, 616, 220, 1286, 615, 406, 581, 592, 392,
	381, 219, 590, 390, 380, 334, 353, 354, 280, 307,
	445, 373, 446, 306, 308, 402, 401, 403, 207, 603,
	0, 208, 0, 497, 605, 646, 450, 212, 234, 235,
	237, 1302, 279, 283, 291, 294, 303, 304, 313, 365,
	417, 444, 440, 449, 1392, 576, 597, 610, 621, 627,
	628, 630, 631, 632, 633, 634, 637, 635, 405, 311,
	493, 333, 371, 1381, 1422, 423, 470, 240, 601, 494,
	199, 1296, 1301, 1294, 0, 254, 255, 1363, 572, 1297,
	1295, 1352, 1353, 1298, 1413, 1414, 1415, 1400, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 642, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 1385, 1290, 0, 1299,
	1300, 396, 1394, 588, 589, 665, 382, 484, 598, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 249, 210, 388, 397,
	575, 312, 216, 217, 218, 521, 522, 523, 524, 613,
	614, 618, 205, 460, 461, 462, 463, 292, 608, 309,
	466, 465, 331, 332, 377, 447, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 1356, 196, 221, 366, 1418, 452, 288, 643,
	612, 482, 607, 206, 223, 1293, 262, 1305, 1313, 0,
	1319, 1327, 1328, 1340, 1343, 1344, 1345, 1346, 1364, 1365,
	1367, 1375, 1377, 1380, 1382, 1389, 1401, 1421, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	407, 408, 409, 412, 415, 416, 419, 421, 422, 425,
	429, 433, 434, 435, 437, 439, 441, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 486, 487, 488, 489,
	490, 498, 499, 513, 583, 585, 600, 619, 625, 478,
	301, 302, 442, 443, 314, 315, 639, 640, 300, 595,
	626, 593, 638, 620, 436, 376, 1355, 1361, 379, 281,
	305, 320, 1370, 611, 500, 227, 464, 290, 251, 1388,
	1390, 211, 246, 230, 259, 274, 277, 324, 389, 398,
	427, 432, 296, 271, 244, 457, 241, 483, 516, 517,
	518, 520, 393, 266, 431, 1351, 1379, 374, 573, 574,
	316, 394, 0, 0, 0, 0, 0, 1407, 1393, 525,
	0, 1335, 1410, 1304, 1323, 1420, 1326, 1329, 1372, 1282,
	1350, 414, 1320, 1308, 1277, 1315, 1278, 1306, 1337, 270,
	1303, 1395, 1354, 1409, 364, 267, 1284, 1275, 204, 503,
	1309, 428, 1325, 203, 1374, 485, 252, 375, 372, 580,
	282, 273, 269, 250, 317, 383, 426, 515, 420, 1416,
	368, 1360, 0, 495, 399, 0, 0, 0, 1339, 1399,
	1348, 1386, 1334, 1373, 1292, 1359, 1411, 1321, 1369, 1412,
	323, 248, 325, 202, 411, 496, 286, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 1317,
	1366, 604, 1406, 1318, 1368, 265, 321, 272, 264, 577,
	1417, 1398, 1281, 1347, 1405, 1342, 0, 0, 229, 1408,
	1341, 0, 1371, 0, 1423, 1276, 1362, 0, 1279, 1283,
	1419, 1403, 1312, 275, 0, 0, 0, 0, 0, 0,
	0, 1338, 1349, 1383, 1387, 1332, 0, 0, 0, 0,
	0, 0, 3179, 0, 1310, 0, 1358, 0, 0, 0,
	1288, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 0, 0, 0, 0, 1291,
	0, 1311, 1384, 0, 1274, 297, 1285, 400, 257, 0,
	451, 1391, 1402, 1333, 622, 1404, 1331, 1330, 1378, 1289,
	1397, 1324, 363, 1287, 330, 197, 225, 0, 1322, 410,
	459, 471, 1396, 1307, 1316, 253, 1314, 469, 424, 599,
	233, 284, 456, 430, 467, 438, 287, 1357, 1376, 468,
	370, 582, 448, 596, 623, 624, 263, 404, 609, 519,
	617, 641, 226, 260, 418, 504, 602, 492, 395, 578,
	579, 329, 491, 295, 201, 367, 629, 224, 477, 369,
	242, 231, 584, 606, 299, 289, 454, 636, 213, 514,
	594, 239, 481, 0, 0, 644, 247, 502, 215, 591,
	501, 391, 326, 327, 214, 0, 455, 268, 293, 0,
	0, 258, 413, 586, 587, 256, 645, 228, 616, 220,
	1286, 615, 406, 581, 592, 392, 381, 219, 590, 390,
	380, 334, 353, 354, 280, 307, 445, 373, 446, 306,
	308, 402, 401, 403, 207, 603, 0, 208, 0, 497,
	605, 646, 450, 212, 234, 235, 237, 1302, 279, 283,
	291, 294, 303, 304, 313, 365, 417, 444, 440, 449,
	1392, 576, 597, 610, 621, 627, 628, 630, 631, 632,
	633, 634, 637, 635, 405, 311, 493, 333, 371, 1381,
	1422, 423, 470, 240, 601, 494, 199, 1296, 1301, 1294,
	0, 254, 255, 1363, 572, 1297, 1295, 1352, 1353, 1298,
	1413, 1414, 1415, 1400, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 642, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 1385, 1290, 0, 1299, 1300, 396, 1394, 588,
	589, 665, 382, 484, 598, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 249, 210, 388, 397, 575, 312, 216, 217,
	218, 521, 522, 523, 524, 613, 614, 618, 205, 460,
	461, 462, 463, 292, 608, 309, 466, 465, 331, 332,
	377, 447, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 1356, 196,
	221, 366, 1418, 452, 288, 643, 612, 482, 607, 206,
	223, 1293, 262, 1305, 1313, 0, 1319, 1327, 1328, 1340,
	1343, 1344, 1345, 1346, 1364, 1365, 1367, 1375, 1377, 1380,
	1382, 1389, 1401, 1421, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 407, 408, 409, 412,
	415, 416, 419, 421, 422, 425, 429, 433, 434, 435,
	437, 439, 441, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 486, 487, 488, 489, 490, 498, 499, 513,
	583, 585, 600, 619, 625, 478, 301, 302, 442, 443,
	314, 315, 639, 640, 300, 595, 626, 593, 638, 620,
	436, 376, 1355, 1361, 379, 281, 305, 320, 1370, 611,
	500, 227, 464, 290, 251, 1388, 1390, 211, 246, 230,
	259, 274, 277, 324, 389, 398, 427, 432, 296, 271,
	244, 457, 241, 483, 516, 517, 518, 520, 393, 266,
	431, 1351, 1379, 374, 573, 574, 316, 394, 0, 0,
	0, 0, 0, 1407, 1393, 525, 0, 1335, 1410, 1304,
	1323, 1420, 1326, 1329, 1372, 1282, 1350, 414, 1320, 1308,
	1277, 1315, 1278, 1306, 1337, 270, 1303, 1395, 1354, 1409,
	364, 267, 1284, 1275, 204, 503, 1309, 428, 1325, 203,
	1374, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 1416, 368, 1360, 0, 495,
	399, 0, 0, 0, 1339, 1399, 1348, 1386, 1334, 1373,
	1292, 1359, 1411, 1321, 1369, 1412, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 1317, 1366, 604, 1406, 1318,
	1368, 265, 321, 272, 264, 577, 1417, 1398, 1281, 1347,
	1405, 1342, 0, 0, 229, 1408, 1341, 0, 1371, 0,
	1423, 1276, 1362, 0, 1279, 1283, 1419, 1403, 1312, 275,
	0, 0, 0, 0, 0, 0, 0, 1338, 1349, 1383,
	1387, 1332, 0, 0, 0, 0, 0, 0, 2379, 0,
	1310, 0, 1358, 0, 0, 0, 1288, 1280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 1291, 0, 1311, 1384, 0,
	1274, 297, 1285, 400, 257, 0, 451, 1391, 1402, 1333,
	622, 1404, 1331, 1330, 1378, 1289, 1397, 1324, 363, 1287,
	330, 197, 225, 0, 1322, 410, 459, 471, 1396, 1307,
	1316, 253, 1314, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 1357, 1376, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 1286, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 1302, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 1392, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 1381, 1422, 423, 470, 240,
	601, 494, 199, 1296, 1301, 1294, 0, 254, 255, 1363,
	572, 1297, 1295, 1352, 1353, 1298, 1413, 1414, 1415, 1400,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 1385, 1290,
	0, 1299, 1300, 396, 1394, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 1356, 196, 221, 366, 1418, 452,
	288, 643, 612, 482, 607, 206, 223, 1293, 262, 1305,
	1313, 0, 1319, 1327, 1328, 1340, 1343, 1344, 1345, 1346,
	1364, 1365, 1367, 1375, 1377, 1380, 1382, 1389, 1401, 1421,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 1355, 1361,
	379, 281, 305, 320, 1370, 611, 500, 227, 464, 290,
	251, 1388, 1390, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 1351, 1379, 374,
	573, 574, 316, 394, 0, 0, 0, 0, 0, 1407,
	1393, 525, 0, 1335, 1410, 1304, 1323, 1420, 1326, 1329,
	1372, 1282, 1350, 414, 1320, 1308, 1277, 1315, 1278, 1306,
	1337, 270, 1303, 1395, 1354, 1409, 364, 267, 1284, 1275,
	204, 503, 1309, 428, 1325, 203, 1374, 485, 252, 375,
	372, 580, 282, 273, 269, 250, 317, 383, 426, 515,
	420, 1416, 368, 1360, 0, 495, 399, 0, 0, 0,
	1339, 1399, 1348, 1386, 1334, 1373, 1292, 1359, 1411, 1321,
	1369, 1412, 323, 248, 325, 202, 411, 496, 286, 0,
	95, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 245, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 1317, 1366, 604, 1406, 1318, 1368, 265, 321, 272,
	264, 577, 1417, 1398, 1281, 1347, 1405, 1342, 0, 0,
	229, 1408, 1341, 0, 1371, 0, 1423, 1276, 1362, 0,
	1279, 1283, 1419, 1403, 1312, 275, 0, 0, 0, 0,
	0, 0, 0, 1338, 1349, 1383, 1387, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 1310, 0, 1358, 0,
	0, 0, 1288, 1280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1336, 0, 0, 0,
	0, 1291, 0, 1311, 1384, 0, 1274, 297, 1285, 400,
	257, 0, 451, 1391, 1402, 1333, 622, 1404, 1331, 1330,
	1378, 1289, 1397, 1324, 363, 1287, 330, 197, 225, 0,
	1322, 410, 459, 471, 1396, 1307, 1316, 253, 1314, 469,
	424, 599, 233, 284, 456, 430, 467, 438, 287, 1357,
	1376, 468, 370, 582, 448, 596, 623, 624, 263, 404,
	609, 519, 617, 641, 226, 260, 418, 504, 602, 492,
	395, 578, 579, 329, 491, 295, 201, 367, 629, 224,
	477, 369, 242, 231, 584, 606, 299, 289, 454, 636,
	213, 514, 594, 239, 481, 0, 0, 644, 247, 502,
	215, 591, 501, 391, 326, 327, 214, 0, 455, 268,
	293, 0, 0, 258, 413, 586, 587, 256, 645, 228,
	616, 220, 1286, 615, 406, 581, 592, 392, 381, 219,
	590, 390, 380, 334, 353, 354, 280, 307, 445, 373,
	446, 306, 308, 402, 401, 403, 207, 603, 0, 208,
	0, 497, 605, 646, 450, 212, 234, 235, 237, 1302,
	279, 283, 291, 294, 303, 304, 313, 365, 417, 444,
	440, 449, 1392, 576, 597, 610, 621, 627, 628, 630,
	631, 632, 633, 634, 637, 635, 405, 311, 493, 333,
	371, 1381, 1422, 423, 470, 240, 601, 494, 199, 1296,
	1301, 1294, 0, 254, 255, 1363, 572, 1297, 1295, 1352,
	1353, 1298, 1413, 1414, 1415, 1400, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 642, 505, 511, 506, 507, 508,
	509, 510, 0, 512, 1385, 1290, 0, 1299, 1300, 396,
	1394, 588, 589, 665, 382, 484, 598, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 249, 210, 388, 397, 575, 312,
	216, 217, 218, 521, 522, 523, 524, 613, 614, 618,
	205, 460, 461, 462, 463, 292, 608, 309, 466, 465,
	331, 332, 377, 447, 537, 539, 550, 554, 556, 558,
	564, 567, 538, 540, 551, 555, 557, 559, 565, 568,
	527, 529, 531, 533, 546, 545, 542, 570, 571, 548,
	553, 532, 544, 549, 562, 569, 566, 526, 530, 534,
	543, 561, 560, 541, 552, 563, 547, 535, 528, 536,
	1356, 196, 221, 366, 1418, 452, 288, 643, 612, 482,
	607, 206, 223, 1293, 262, 1305, 1313, 0, 1319, 1327,
	1328, 1340, 1343, 1344, 1345, 1346, 1364, 1365, 1367, 1375,
	1377, 1380, 1382, 1389, 1401, 1421, 198, 200, 209, 222,
	232, 236, 243, 261, 276, 278, 285, 298, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 407, 408,
	409, 412, 415, 416, 419, 421, 422, 425, 429, 433,
	434, 435, 437, 439, 441, 453, 458, 472, 473, 474,
	475, 476, 479, 480, 486, 487, 488, 489, 490, 498,
	499, 513, 583, 585, 600, 619, 625, 478, 301, 302,
	442, 443, 314, 315, 639, 640, 300, 595, 626, 593,
	638, 620, 436, 376, 1355, 1361, 379, 281, 305, 320,
	1370, 611, 500, 227, 464, 290, 251, 1388, 1390, 211,
	246, 230, 259, 274, 277, 324, 389, 398, 427, 432,
	296, 271, 244, 457, 241, 483, 516, 517, 518, 520,
	393, 266, 431, 1351, 1379, 374, 573, 574, 316, 394,
	0, 0, 0, 0, 0, 1407, 1393, 525, 0, 1335,
	1410, 1304, 1323, 1420, 1326, 1329, 1372, 1282, 1350, 414,
	1320, 1308, 1277, 1315, 1278, 1306, 1337, 270, 1303, 1395,
	1354, 1409, 364, 267, 1284, 1275, 204, 503, 1309, 428,
	1325, 203, 1374, 485, 252, 375, 372, 580, 282, 273,
	269, 250, 317, 383, 426, 515, 420, 1416, 368, 1360,
	0, 495, 399, 0, 0, 0, 1339, 1399, 1348, 1386,
	1334, 1373, 1292, 1359, 1411, 1321, 1369, 1412, 323, 248,
	325, 202, 411, 496, 286, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 245, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1317, 1366, 604,
	1406, 1318, 1368, 265, 321, 272, 264, 577, 1417, 1398,
	1281, 1347, 1405, 1342, 0, 0, 229, 1408, 1341, 0,
	1371, 0, 1423, 1276, 1362, 0, 1279, 1283, 1419, 1403,
	1312, 275, 0, 0, 0, 0, 0, 0, 0, 1338,
	1349, 1383, 1387, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 1310, 0, 1358, 0, 0, 0, 1288, 1280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1336, 0, 0, 0, 0, 1291, 0, 1311,
	1384, 0, 1274, 297, 1285, 400, 257, 0, 451, 1391,
	1402, 1333, 622, 1404, 1331, 1330, 1378, 1289, 1397, 1324,
	363, 1287, 330, 197, 225, 0, 1322, 410, 459, 471,
	1396, 1307, 1316, 253, 1314, 469, 424, 599, 233, 284,
	456, 430, 467, 438, 287, 1357, 1376, 468, 370, 582,
	448, 596, 623, 624, 263, 404, 609, 519, 617, 641,
	226, 260, 418, 504, 602, 492, 395, 578, 579, 329,
	491, 295, 201, 367, 629, 224, 477, 369, 242, 231,
	584, 606, 299, 289, 454, 636, 213, 514, 594, 239,
	481, 0, 0, 644, 247, 502, 215, 591, 501, 391,
	326, 327, 214, 0, 455, 268, 293, 0, 0, 258,
	413, 586, 587, 256, 645, 228, 616, 220, 1286, 615,
	406, 581, 592, 392, 381, 219, 590, 390, 380, 334,
	353, 354, 280, 307, 445, 373, 446, 306, 308, 402,
	401, 403, 207, 603, 0, 208, 0, 497, 605, 646,
	450, 212, 234, 235, 237, 1302, 279, 283, 291, 294,
	303, 304, 313, 365, 417, 444, 440, 449, 1392, 576,
	597, 610, 621, 627, 628, 630, 631, 632, 633, 634,
	637, 635, 405, 311, 493, 333, 371, 1381, 1422, 423,
	470, 240, 601, 494, 199, 1296, 1301, 1294, 0, 254,
	255, 1363, 572, 1297, 1295, 1352, 1353, 1298, 1413, 1414,
	1415, 1400, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	642, 505, 511, 506, 507, 508, 509, 510, 0, 512,
	1385, 1290, 0, 1299, 1300, 396, 1394, 588, 589, 665,
	382, 484, 598, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	249, 210, 388, 397, 575, 312, 216, 217, 218, 521,
	522, 523, 524, 613, 614, 618, 205, 460, 461, 462,
	463, 292, 608, 309, 466, 465, 331, 332, 377, 447,
	537, 539, 550, 554, 556, 558, 564, 567, 538, 540,
	551, 555, 557, 559, 565, 568, 527, 529, 531, 533,
	546, 545, 542, 570, 571, 548, 553, 532, 544, 549,
	562, 569, 566, 526, 530, 534, 543, 561, 560, 541,
	552, 563, 547, 535, 528, 536, 1356, 196, 221, 366,
	1418, 452, 288, 643, 612, 482, 607, 206, 223, 1293,
	262, 1305, 1313, 0, 1319, 1327, 1328, 1340, 1343, 1344,
	1345, 1346, 1364, 1365, 1367, 1375, 1377, 1380, 1382, 1389,
	1401, 1421, 198, 200, 209, 222, 232, 236, 243, 261,
	276, 278, 285, 298, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 407, 408, 409, 412, 415, 416,
	419, 421, 422, 425, 429, 433, 434, 435, 437, 439,
	441, 453, 458, 472, 473, 474, 475, 476, 479, 480,
	486, 487, 488, 489, 490, 498, 499, 513, 583, 585,
	600, 619, 625, 478, 301, 302, 442, 443, 314, 315,
	639, 640, 300, 595, 626, 593, 638, 620, 436, 376,
	1355, 1361, 379, 281, 305, 320, 1370, 611, 500, 227,
	464, 290, 251, 1388, 1390, 211, 246, 230, 259, 274,
	277, 324, 389, 398, 427, 432, 296, 271, 244, 457,
	241, 483, 516, 517, 518, 520, 393, 266, 431, 1351,
	1379, 374, 573, 574, 316, 394, 0, 0, 0, 0,
	0, 1407, 1393, 525, 0, 1335, 1410, 1304, 1323, 1420,
	1326, 1329, 1372, 1282, 1350, 414, 1320, 1308, 1277, 1315,
	1278, 1306, 1337, 270, 1303, 1395, 1354, 1409, 364, 267,
	1284, 1275, 204, 503, 1309, 428, 1325, 203, 1374, 485,
	252, 375, 372, 580, 282, 273, 269, 250, 317, 383,
	426, 515, 420, 1416, 368, 1360, 0, 495, 399, 0,
	0, 0, 1339, 1399, 1348, 1386, 1334, 1373, 1292, 1359,
	1411, 1321, 1369, 1412, 323, 248, 325, 202, 411, 496,
	286, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 245,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 1317, 1366, 604, 1406, 1318, 1368, 265,
	321, 272, 264, 577, 1417, 1398, 1281, 1347, 1405, 1342,
	0, 0, 229, 1408, 1341, 0, 1371, 0, 1423, 1276,
	1362, 0, 1279, 1283, 1419, 1403, 1312, 275, 0, 0,
	0, 0, 0, 0, 0, 1338, 1349, 1383, 1387, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 1310, 0,
	1358, 0, 0, 0, 1288, 1280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 1291, 0, 1311, 1384, 0, 1274, 297,
	1285, 400, 257, 0, 451, 1391, 1402, 1333, 622, 1404,
	1331, 1330, 1378, 1289, 1397, 1324, 363, 1287, 330, 197,
	225, 0, 1322, 410, 459, 471, 1396, 1307, 1316, 253,
	1314, 469, 424, 599, 233, 284, 456, 430, 467, 438,
	287, 1357, 1376, 468, 370, 582, 448, 596, 623, 624,
	263, 404, 609, 519, 617, 641, 226, 260, 418, 504,
	602, 492, 395, 578, 579, 329, 491, 295, 201, 367,
	629, 224, 477, 369, 242, 231, 584, 606, 299, 289,
	454, 636, 213, 514, 594, 239, 481, 0, 0, 644,
	247, 502, 215, 591, 501, 391, 326, 327, 214, 0,
	455, 268, 293, 0, 0, 258, 413, 586, 587, 256,
	645, 228, 616, 220, 1286, 615, 406, 581, 592, 392,
	381, 219, 590, 390, 380, 334, 353, 354, 280, 307,
	445, 373, 446, 306, 308, 402, 401, 403, 207, 603,
	0, 208, 0, 497, 605, 646, 450, 212, 234, 235,
	237, 1302, 279, 283, 291, 294, 303, 304, 313, 365,
	417, 444, 440, 449, 1392, 576, 597, 610, 621, 627,
	628, 630, 631, 632, 633, 634, 637, 635, 405, 311,
	493, 333, 371, 1381, 1422, 423, 470, 240, 601, 494,
	199, 1296, 1301, 1294, 0, 254, 255, 1363, 572, 1297,
	1295, 1352, 1353, 1298, 1413, 1414, 1415, 1400, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 642, 505, 511, 506,
	507, 508, 509, 510, 0, 512, 1385, 1290, 0, 1299,
	1300, 396, 1394, 588, 589, 665, 382, 484, 598, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 249, 210, 388, 397,
	575, 312, 216, 217, 218, 521, 522, 523, 524, 613,
	614, 618, 205, 460, 461, 462, 463, 292, 608, 309,
	466, 465, 331, 332, 377, 447, 537, 539, 550, 554,
	556, 558, 564, 567, 538, 540, 551, 555, 557, 559,
	565, 568, 527, 529, 531, 533, 546, 545, 542, 570,
	571, 548, 553, 532, 544, 549, 562, 569, 566, 526,
	530, 534, 543, 561, 560, 541, 552, 563, 547, 535,
	528, 536, 1356, 196, 221, 366, 1418, 452, 288, 643,
	612, 482, 607, 206, 223, 1293, 262, 1305, 1313, 0,
	1319, 1327, 1328, 1340, 1343, 1344, 1345, 1346, 1364, 1365,
	1367, 1375, 1377, 1380, 1382, 1389, 1401, 1421, 198, 200,
	209, 222, 232, 236, 243, 261, 276, 278, 285, 298,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	407, 408, 409, 412, 415, 416, 419, 421, 422, 425,
	429, 433, 434, 435, 437, 439, 441, 453, 458, 472,
	473, 474, 475, 476, 479, 480, 486, 487, 488, 489,
	490, 498, 499, 513, 583, 585, 600, 619, 625, 478,
	301, 302, 442, 443, 314, 315, 639, 640, 300, 595,
	626, 593, 638, 620, 436, 376, 1355, 1361, 379, 281,
	305, 320, 1370, 611, 500, 227, 464, 290, 251, 1388,
	1390, 211, 246, 230, 259, 274, 277, 324, 389, 398,
	427, 432, 296, 271, 244, 457, 241, 483, 516, 517,
	518, 520, 393, 266, 431, 1351, 1379, 374, 573, 574,
	316, 394, 0, 0, 0, 0, 0, 1407, 1393, 525,
	0, 1335, 1410, 1304, 1323, 1420, 1326, 1329, 1372, 1282,
	1350, 414, 1320, 1308, 1277, 1315, 1278, 1306, 1337, 270,
	1303, 1395, 1354, 1409, 364, 267, 1284, 1275, 204, 503,
	1309, 428, 1325, 203, 1374, 485, 252, 375, 372, 580,
	282, 273, 269, 250, 317, 383, 426, 515, 420, 1416,
	368, 1360, 0, 495, 399, 0, 0, 0, 1339, 1399,
	1348, 1386, 1334, 1373, 1292, 1359, 1411, 1321, 1369, 1412,
	323, 248, 325, 202, 411, 496, 286, 0, 0, 0,
	0, 0, 948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 245, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 1317,
	1366, 604, 1406, 1318, 1368, 265, 321, 272, 264, 577,
	1417, 1398, 1281, 1347, 1405, 1342, 0, 0, 229, 1408,
	1341, 0, 1371, 0, 1423, 1276, 1362, 0, 1279, 1283,
	1419, 1403, 1312, 275, 0, 0, 0, 0, 0, 0,
	0, 1338, 1349, 1383, 1387, 1332, 0, 0, 0, 0,
	0, 0, 0, 0, 1310, 0, 1358, 0, 0, 0,
	1288, 1280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1336, 0, 0, 0, 0, 1291,
	0, 1311, 1384, 0, 1274, 297, 1285, 400, 257, 0,
	451, 1391, 1402, 1333, 622, 1404, 1331, 1330, 1378, 1289,
	1397, 1324, 363, 1287, 330, 197, 225, 0, 1322, 410,
	459, 471, 1396, 1307, 1316, 253, 1314, 469, 424, 599,
	233, 284, 456, 430, 467, 438, 287, 1357, 1376, 468,
	370, 582, 448, 596, 623, 624, 263, 404, 609, 519,
	617, 641, 226, 260, 418, 504, 602, 492, 395, 578,
	579, 329, 491, 295, 201, 367, 629, 224, 477, 369,
	242, 231, 584, 606, 299, 289, 454, 636, 213, 514,
	594, 239, 481, 0, 0, 644, 247, 502, 215, 591,
	501, 391, 326, 327, 214, 0, 455, 268, 293, 0,
	0, 258, 413, 586, 587, 256, 645, 228, 616, 220,
	1286, 615, 406, 581, 592, 392, 381, 219, 590, 390,
	380, 334, 353, 354, 280, 307, 445, 373, 446, 306,
	308, 402, 401, 403, 207, 603, 0, 208, 0, 497,
	605, 646, 450, 212, 234, 235, 237, 1302, 279, 283,
	291, 294, 303, 304, 313, 365, 417, 444, 440, 449,
	1392, 576, 597, 610, 621, 627, 628, 630, 631, 632,
	633, 634, 637, 635, 405, 311, 493, 333, 371, 1381,
	1422, 423, 470, 240, 601, 494, 199, 1296, 1301, 1294,
	0, 254, 255, 1363, 572, 1297, 1295, 1352, 1353, 1298,
	1413, 1414, 1415, 1400, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 642, 505, 511, 506, 507, 508, 509, 510,
	0, 512, 1385, 1290, 0, 1299, 1300, 396, 1394, 588,
	589, 665, 382, 484, 598, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 249, 210, 388, 397, 575, 312, 216, 217,
	218, 521, 522, 523, 524, 613, 614, 618, 205, 460,
	461, 462, 463, 292, 608, 309, 466, 465, 331, 332,
	377, 447, 537, 539, 550, 554, 556, 558, 564, 567,
	538, 540, 551, 555, 557, 559, 565, 568, 527, 529,
	531, 533, 546, 545, 542, 570, 571, 548, 553, 532,
	544, 549, 562, 569, 566, 526, 530, 534, 543, 561,
	560, 541, 552, 563, 547, 535, 528, 536, 1356, 196,
	221, 366, 1418, 452, 288, 643, 612, 482, 607, 206,
	223, 1293, 262, 1305, 1313, 0, 1319, 1327, 1328, 1340,
	1343, 1344, 1345, 1346, 1364, 1365, 1367, 1375, 1377, 1380,
	1382, 1389, 1401, 1421, 198, 200, 209, 222, 232, 236,
	243, 261, 276, 278, 285, 298, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 407, 408, 409, 412,
	415, 416, 419, 421, 422, 425, 429, 433, 434, 435,
	437, 439, 441, 453, 458, 472, 473, 474, 475, 476,
	479, 480, 486, 487, 488, 489, 490, 498, 499, 513,
	583, 585, 600, 619, 625, 478, 301, 302, 442, 443,
	314, 315, 639, 640, 300, 595, 626, 593, 638, 620,
	436, 376, 1355, 1361, 379, 281, 305, 320, 1370, 611,
	500, 227, 464, 290, 251, 1388, 1390, 211, 246, 230,
	259, 274, 277, 324, 389, 398, 427, 432, 296, 271,
	244, 457, 241, 483, 516, 517, 518, 520, 393, 266,
	431, 1351, 1379, 374, 573, 574, 316, 394, 0, 0,
	0, 0, 0, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 2201, 2202,
	2203, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 2408, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	2409, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 86, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 94, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 4058, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 1730, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 1058, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	3134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 739,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 735, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	3130, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 1079,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 1079,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	2094, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 755, 0, 0, 0, 270, 760, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 767, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 1012, 948, 1079,
	914, 952, 1013, 965, 966, 967, 953, 0, 238, 954,
	955, 245, 956, 0, 913, 798, 800, 799, 863, 864,
	865, 866, 867, 868, 869, 796, 961, 604, 968, 969,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 766, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 908, 0, 751, 0, 0, 759, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	2092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 907, 0, 0,
	622, 0, 0, 905, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 958, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 959,
	960, 256, 645, 804, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 812, 813,
	280, 307, 889, 888, 887, 306, 308, 885, 886, 884,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 895, 917, 906, 772, 773, 896, 897, 921,
	898, 775, 776, 918, 919, 769, 770, 774, 920, 922,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 909, 758,
	757, 0, 764, 765, 0, 794, 795, 797, 801, 802,
	803, 814, 861, 862, 870, 872, 873, 871, 874, 875,
	876, 879, 880, 881, 882, 877, 878, 883, 777, 781,
	778, 779, 780, 792, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 793, 932, 933, 934, 935, 936,
	937, 807, 811, 810, 808, 809, 805, 806, 833, 832,
	834, 835, 836, 837, 838, 839, 841, 840, 842, 843,
	844, 845, 846, 847, 815, 816, 819, 820, 818, 817,
	821, 830, 831, 822, 823, 824, 825, 826, 827, 829,
	828, 848, 849, 850, 851, 852, 854, 853, 857, 858,
	856, 855, 860, 859, 756, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 923, 262, 924,
	0, 0, 928, 0, 0, 0, 930, 929, 0, 931,
	893, 892, 0, 0, 925, 926, 0, 927, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 938, 939, 940, 941, 942, 943, 944, 945,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 963, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 1129,
	622, 0, 0, 0, 0, 0, 1126, 1127, 363, 1087,
	330, 197, 225, 1120, 1124, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 1691, 948, 0,
	0, 1688, 0, 0, 0, 0, 1686, 0, 238, 1687,
	1685, 245, 1690, 0, 913, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 86, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 94, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 2395, 0, 0, 2394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 1753, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	1755, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 1757, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 1461, 0,
	1462, 1463, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 86, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 1730, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 94, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 2395, 0, 0, 2394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	2342, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 1936, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 2340, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 1087,
	330, 197, 225, 1085, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	2342, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 1936, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 1730, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 3690, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 2103, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 2843, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 2827, 0, 0, 0, 0, 238, 0,
	0, 245, 2828, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 1776, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 1775, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 717, 718,
	719, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 4033, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 1936, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 3690, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	2396, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 1757, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 2050, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 2041, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 1903, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 1901, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 1899, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 1897, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 1895, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 1891, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 1889, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 1887, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 1862, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 1761, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 95, 0, 0, 0, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1440,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	1439, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1038, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 668, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 4099, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 394, 0, 374,
	573, 574, 316, 0, 0, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	364, 267, 0, 0, 204, 503, 0, 428, 0, 203,
	0, 485, 252, 375, 372, 580, 282, 273, 269, 250,
	317, 383, 426, 515, 420, 0, 368, 0, 0, 495,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 248, 325, 202,
	411, 496, 286, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 245, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 604, 0, 0,
	0, 265, 321, 272, 264, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 0, 400, 257, 0, 451, 0, 0, 0,
	622, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 197, 225, 0, 0, 410, 459, 471, 0, 0,
	0, 253, 0, 469, 424, 599, 233, 284, 456, 430,
	467, 438, 287, 0, 0, 468, 370, 582, 448, 596,
	623, 624, 263, 404, 609, 519, 617, 641, 226, 260,
	418, 504, 602, 492, 395, 578, 579, 329, 491, 295,
	201, 367, 629, 224, 477, 369, 242, 231, 584, 606,
	299, 289, 454, 636, 213, 514, 594, 239, 481, 0,
	0, 644, 247, 502, 215, 591, 501, 391, 326, 327,
	214, 0, 455, 268, 293, 0, 0, 258, 413, 586,
	587, 256, 645, 228, 616, 220, 0, 615, 406, 581,
	592, 392, 381, 219, 590, 390, 380, 334, 353, 354,
	280, 307, 445, 373, 446, 306, 308, 402, 401, 403,
	207, 603, 0, 208, 0, 497, 605, 646, 450, 212,
	234, 235, 237, 0, 279, 283, 291, 294, 303, 304,
	313, 365, 417, 444, 440, 449, 0, 576, 597, 610,
	621, 627, 628, 630, 631, 632, 633, 634, 637, 635,
	405, 311, 493, 333, 371, 0, 0, 423, 470, 240,
	601, 494, 199, 0, 0, 0, 0, 254, 255, 0,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 642, 505,
	511, 506, 507, 508, 509, 510, 0, 512, 0, 0,
	0, 0, 0, 396, 0, 588, 589, 665, 382, 484,
	598, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 249, 210,
	388, 397, 575, 312, 216, 217, 218, 521, 522, 523,
	524, 613, 614, 618, 205, 460, 461, 462, 463, 292,
	608, 309, 466, 465, 331, 332, 377, 447, 537, 539,
	550, 554, 556, 558, 564, 567, 538, 540, 551, 555,
	557, 559, 565, 568, 527, 529, 531, 533, 546, 545,
	542, 570, 571, 548, 553, 532, 544, 549, 562, 569,
	566, 526, 530, 534, 543, 561, 560, 541, 552, 563,
	547, 535, 528, 536, 0, 196, 221, 366, 0, 452,
	288, 643, 612, 482, 607, 206, 223, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 209, 222, 232, 236, 243, 261, 276, 278,
	285, 298, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 407, 408, 409, 412, 415, 416, 419, 421,
	422, 425, 429, 433, 434, 435, 437, 439, 441, 453,
	458, 472, 473, 474, 475, 476, 479, 480, 486, 487,
	488, 489, 490, 498, 499, 513, 583, 585, 600, 619,
	625, 478, 301, 302, 442, 443, 314, 315, 639, 640,
	300, 595, 626, 593, 638, 620, 436, 376, 0, 0,
	379, 281, 305, 320, 0, 611, 500, 227, 464, 290,
	251, 0, 0, 211, 246, 230, 259, 274, 277, 324,
	389, 398, 427, 432, 296, 271, 244, 457, 241, 483,
	516, 517, 518, 520, 393, 266, 431, 0, 0, 374,
	573, 574, 316,
}

var yyPact = [...]int{
	-1000, -1000, 4278, -1000, -537, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2479, 2507, -1000, -1000, -1000, -1000, 2699, -1000, 1058,
	2128, -1000, 2463, 6359, -1000, 55843, 797, -1000, 52923, -441,
	910, 233, 36863, -1000, 217, -1000, 196, 54383, 204, -1000,
	-1000, -1000, -1000, -441, 22263, 2359, 70, 69, 55843, -1000,
	-1000, -1000, -1000, -361, 2606, 2095, -1000, 392, -1000, -1000,
	-1000, -1000, -1000, -1000, 52193, -1000, 1186, -1000, -1000, 2472,
	2450, 2339, 949, 2414, -1000, 2535, 2095, -1000, 22263, 2575,
	2427, 21533, 21533, 478, -1000, -1000, 272, -1000, -1000, 31753,
	55843, 39783, 291, -1000, 2463, -1000, -1000, -1000, 215, -1000,
	398, 2024, -1000, 2023, -1000, 900, 918, 423, 882, 878,
	422, 419, 418, 414, 413, 412, 407, 406, 420, -1000,
	993, 993, -205, -211, 1527, 497, 472, 472, 1092, 503,
	2426, 2400, -1000, -1000, 993, 993, 993, 367, 993, 993,
	993, 993, 387, 384, 993, 993, 993, 993, 993, 993,
	993, 993, 993, 993, 993, 993, 993, 993, 993, 993,
	993, 868, 2463, 336, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 55843, 188, 55843, -1000,
	861, 795, -1000, -1000, -446, 1129, 1129, 134, 1129, 1129,
	1129, 1129, 207, 1009, 68, -1000, 205, 347, 178, 310,
	1108, 286, -1000, -1000, 297, 1108, 1862, -1000, 956, 305,
	175, -1000, 1129, 1129, -1000, 14939, 234, 14939, 14939, -1000,
	2412, -1000, -1000, -1000, -1000, -1000, 1393, -1000, -1000, -1000,
	-1000, -15, 502, -1000, -1000, -1000, -1000, 54383, 51463, 276,
	-1000, -1000, 39, 1422, 1349, 22263, 1420, 945, -1000, -1000,
	1477, 914, -1000, -1000, -1000, -1000, -1000, 814, -1000, 24453,
	24453, 24453, 24453, -1000, -1000, 2026, 50733, 2026, 2026, 24453,
	2026, 24453, 2026, 2026, 2026, 2026, 22263, 2026, 2026, 2026,
	2026, -1000, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, -1000,
	-1000, -1000, -1000, 2026, 860, 2026, 2026, 2026, 2026, 2026,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2026, 2026, 2026,
	2026, 2026, 2026, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, -1000, -1000, -1000, 1749,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27373, 1658, 1647,
	1643, -1000, 19343, 2026, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 55843, -1000, 2026, 238, 54383,
	54383, 427, 1385, -1000, -1000, 2535, 2095, -1000, 2606, 2621,
	392, -1000, 3625, 1730, 1568, 1478, 2095, 1994, 55843, -1000,
	2040, -1000, -1000, -1000, -317, -323, 2255, 1543, 1860, -1000,
	-1000, -1000, -1000, 2670, 22263, -1000, -1000, 2658, -1000, 28833,
	858, 2648, 50003, -1000, 478, 478, 2015, 444, 8, -1000,
	-1000, -1000, -1000, 1014, 36133, -1000, -1000, -1000, -1000, -1000,
	1911, 55843, -1000, -1000, 6167, 54383, -1000, 2126, -1000, 1876,
	-1000, 2067, 22263, 2134, 793, 54383, 776, 775, 514, -1000,
	-55, -1000, -1000, -1000, -1000, -1000, -1000, 993, 993, 993,
	-1000, 401, 2574, 6359, 7704, -1000, -1000, -1000, 49273, 2125,
	54383, -1000, 2119, -1000, 1082, 886, 874, 874, 54383, -1000,
	-1000, 55113, 54383, 1081, 1072, 54383, 54383, 54383, 54383, -1000,
	48543, -1000, 47813, 47083, 1378, 54383, 46353, 45623, 44893, 44163,
	43433, -1000, 2388, -1000, 2191, -1000, -1000, -1000, 55113, 54383,
	54383, 55113, 54383, 55113, 55843, 54383, -1000, -1000, 361, -1000,
	-1000, 1377, 1376, 1364, 993, 993, 1361, 1858, 1855, 1848,
	993, 993, 1356, 1836, 38323, 1835, 314, 1344, 1338, 1327,
	1459, 1824, 261, 1818, 1350, 1270, 1299, 54383, 2113, 55843,
	-1000, 273, 995, 1004, 1011, 2463, 2353, 2013, 500, 784,
	54383, 475, 475, 54383, -1000, 15675, 55843, 244, -1000, 1807,
	22263, -1000, 1127, 1108, 1108, -1000, -1000, -1000, -1000, -1000,
	-1000, 1129, 55843, 1127, -1000, -1000, -1000, 1108, 1129, 55843,
	1129, 1129, 1129, 1129, 1108, 1108, 1108, 1129, 55843, 55843,
	55843, 55843, 55843, 55843, 55843, 55843, 55843, 14939, 956, 1129,
	-447, -1000, 1793, -1000, -1000, -1000, 2241, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14939, 14939, -1000, -1000, -1000, -1000,
	-1000, 2012, -1000, 192, 28, 199, -1000, 42703, 493, 1010,
	-1000, 493, -1000, -1000, -1000, 2006, 41973, -1000, -449, -451,
	-455, -456, -1000, -1000, -1000, -458, -462, -1000, -1000, -1000,
	22263, 22263, 22263, 22263, -243, -1000, 1334, 24453, 2466, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 22263, 222, 1053, 24453,
	24453, 24453, 24453, 24453, 24453, 24453, 25913, 25183, 24453, 24453,
	24453, 24453, 24453, 24453, -1000, -1000, 33943, 5154, 5154, 914,
	914, 914, 914, -1000, -168, 1998, 55113, -1000, -1000, -1000,
	857, 22263, 22263, 914, -1000, 1209, 2199, 19343, 22263, 22263,
	22263, 22263, 1013, 1349, 55113, 22263, -1000, 1478, -1000, -1000,
	-1000, -1000, 1246, -1000, -1000, 1085, 2417, 2417, 2417, 2417,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
	2417, 22263, 144, 144, 1091, 22263, 22263, 22263, 22263, 22263,
	22263, 17883, 22263, 22263, 24453, 22263, 22263, 22263, 1478, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 1478, 22263,
	1328, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 17147, 22263,
	22263, 22263, 22263, 22263, -1000, -1000, -1000, -1000, -1000, -1000,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, 22263, 1478, 22263,
	22263, 22263, 22263, 22263, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1565, 1575, 1546, 22263, -1000,
	1997, -1000, -185, 31023, 22263, 1790, 2626, 2175, 54383, -1000,
	-1000, -1000, -1000, 2535, -1000, 2535, 1565, 3540, 2260, -1000,
	-1000, -1000, 3540, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1843, -1000, 55843, 1994, 2506, 54383, -1000, -307,
	-1000, -309, 2251, 1773, 368, -1000, 22263, 22263, 1978, -1000,
	1667, 55843, -1000, -243, -1000, 41243, -1000, -1000, 14203, 55843,
	404, 55843, -1000, 30293, 40513, 313, -1000, 8, 1939, -1000,
	36, 14, 18613, 913, -1000, -1000, -1000, 1527, 26643, 1912,
	913, 113, -1000, -1000, -1000, 2067, -1000, 2067, 2067, 2067,
	2067, 368, 368, 368, 368, -1000, -1000, -1000, -1000, -1000,
	2110, 2100, -1000, 2067, 2067, 2067, 2067, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2097, 2097, 2097, 2094, 2094, 2068,
	2068, 467, -1000, 22263, 382, 39783, 2490, 1298, 1699, 273,
	476, 2166, 54383, 54383, 54383, 476, -1000, 1495, 1463, 1439,
	-1000, -520, 1969, -1000, -1000, 2573, -1000, -1000, 941, 1149,
	1145, 1041, 54383, 245, 399, -1000, 457, -1000, 39783, 54383,
	1070, 874, 54383, -1000, 54383, -1000, -1000, -1000, -1000, -1000,
	54383, -1000, -1000, 1966, -1000, 2020, 1183, 1138, 1175, 1101,
	1966, -1000, -1000, -174, 1966, -1000, 1966, -1000, 1966, -1000,
	1966, -1000, 1966, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1018, 280, -338, 54383, 245, 499, -1000, 481,
	33943, -1000, -1000, -1000, 33943, 33943, -1000, -1000, -1000, -1000,
	1771, 1764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -509, 55843, -1000, 269, 1005, 370, 411, 335, 55843,
	791, 2422, 2410, 2409, 2407, 2391, 2379, 369, 372, 55843,
	55843, 475, 2219, 55843, 2496, 55843, -1000, -1000, -1000, -1000,
	-1000, 1755, 1751, -1000, 1349, 55843, -1000, -1000, 1129, 1129,
	-1000, -1000, 55843, 1129, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1129, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55843, -1000,
	-1000, -1000, -1000, -15, 187, -1000, -1000, 54383, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -107, -1000, 296,
	34, 396, -1000, -1000, -1000, -1000, -1000, 2527, -1000, 1349,
	1064, 1038, -1000, 2026, -1000, -1000, 1248, -1000, -1000, -1000,
	-1000, -1000, 2026, 2026, 2026, -1000, -1000, -1000, -1000, -1000,
	222, 24453, 24453, 24453, 1243, 840, 1333, 1352, 1230, 1388,
	1388, 963, 24453, 963, 24453, 919, 919, 919, 919, 919,
	-1000, -1000, -1000, -1000, -1000, -1000, 1749, -1000, 1727, -1000,
	2026, 55113, 1830, 17147, 1786, 2211, 1478, 942, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4227, 1478,
	1422, 1478, 2678, 4223, 1027, -1000, 22263, 1478, 4217, -1000,
	-1000, 1478, 1478, 22263, -1000, -1000, 22263, 22263, 22263, 22263,
	1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699,
	22263, 1699, 1956, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1947, 2622, 1181, 1699, 1699, 1699, 1699, 1699, 22263,
	1924, -1000, -1000, -1000, 1516, 4211, 1295, 4206, 1699, 1699,
	-1000, 1699, 4202, 4191, 1478, 2641, 2620, 1699, 1699, 1699,
	1699, 1699, 2604, 2599, 1699, 1699, 2595, 1699, 4187, 1699,
	2584, 2580, 2536, 2521, 2493, 2489, 2470, 2464, 2430, 2406,
	2402, 2397, 2336, 2331, 2311, 2307, 2297, 2293, 1699, 1699,
	1699, 3912, 1699, 3908, 1699, 3902, 1699, 1699, 3885, 2288,
	2269, 1478, 1946, -1000, 3875, 1699, 3869, 3865, 3861, 2246,
	3575, 3532, 3505, 1699, 1699, 1699, 2202, 3499, 3484, 3469,
	3423, 3403, 3399, 3395, 3384, 3379, 1699, 1546, 1546, 1546,
	1546, 1546, 3250, -246, 1699, 1478, -1000, -1000, -1000, -1000,
	-1000, 3222, 2183, 3077, 3026, 3014, 3002, 1478, 2026, 849,
	-1000, -1000, 1546, 1478, 1478, 1546, 1546, 2998, 2980, 2974,
	2968, 2952, 2931, 1699, 1699, -1000, 1699, 2909, 2902, 2178,
	2172, 1478, -1000, 1546, 55843, -1000, -438, -1000, 16, 968,
	2026, -1000, 38323, 1478, -1000, 3244, -1000, 1252, -1000, -1000,
	-1000, -1000, -1000, 35403, 1954, 21533, -1000, -1000, -1000, 2026,
	1828, -1000, -1000, -1000, -1000, 368, 100, 34673, 908, 908,
	123, 1349, 1349, 22263, -1000, -1000, -1000, -1000, -1000, -1000,
	847, 2603, 393, 2026, -1000, 1952, 2683, -1000, -1000, -1000,
	2505, 28103, -1000, -1000, 2026, 2026, 55843, 1953, 1823, -1000,
	846, -1000, 1404, 1939, 8, 25, -1000, -1000, -1000, -1000,
	1349, -1000, 1421, 405, 353, -1000, 459, -1000, -1000, -1000,
	-1000, 2367, 107, -1000, -1000, -1000, 357, 368, -1000, -1000,
	-1000, -1000, -1000, -1000, 1717, 1717, -1000, -1000, -1000, -1000,
	-1000, 1293, -1000, -1000, -1000, -1000, 1292, -1000, -1000, 1287,
	-1000, -1000, 2453, 2196, 382, -1000, -1000, 993, 1711, -1000,
	-1000, 2374, 993, 993, 54383, -1000, -1000, 1887, 2490, 269,
	55843, 1026, 2217, -1000, 2166, 2166, 2166, 55843, -1000, -1000,
	-1000, -1000, -1000, -1000, -511, 163, 512, -1000, -1000, -1000,
	1247, 54383, 1806, -1000, 242, -1000, 1885, -1000, 54383, -1000,
	1800, 2082, 54383, 54383, -1000, -1000, -1000, 54383, 2026, -1000,
	-1000, -1000, -1000, 780, 2459, 328, -1000, -1000, -284, -1000,
	-1000, 245, 242, 55113, 54383, 913, -1000, -1000, -1000, -1000,
	-1000, -512, 1778, 508, 250, 330, 55843, 55843, 55843, 55843,
	55843, 55843, 816, -1000, -1000, 50, -1000, -1000, 225, -1000,
	-1000, -1000, -1000, -1000, 225, -1000, -1000, -1000, -1000, -1000,
	360, 480, -1000, 55843, 55843, 932, -1000, -1000, -1000, -1000,
	-1000, 1108, -1000, -1000, 1108, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2445, 55843, 26, -478, -1000,
	-475, 22263, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1189,
	770, 1333, 24453, 24453, 2199, 2199, 24453, -1000, -1000, -1000,
	319, 319, 33943, -1000, 24453, 22263, -1000, -1000, 22263, 22263,
	22263, 1017, -1000, 22263, 1301, -1000, 22263, -1000, -246, 1546,
	1699, 1699, 1699, 1699, -246, -246, -246, -246, -246, -246,
	-246, -246, -246, -246, 1951, -1000, 22263, 22263, 22263, 1478,
	331, -1000, -1000, -1000, -1000, -1000, 2616, -1000, 22263, -1000,
	33943, 22263, 22263, 22263, -1000, -1000, -1000, 22263, 22263, -1000,
	-1000, 22263, -1000, 22263, -1000, -1000, -1000, -1000, -1000, -1000,
	22263, -1000, 22263, -1000, -1000, -1000, 22263, -1000, 22263, -1000,
	-1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263,
	-1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263,
	-1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263,
	-1000, 22263, -1000, 22263, -1000, 22263, -1000, -1000, -1000, 22263,
	-1000, 22263, -1000, 22263, -1000, -1000, 22263, -1000, 22263, -1000,
	22263, -1000, 22263, 22263, -1000, 22263, 22263, 22263, -1000, 22263,
	22263, 22263, 22263, -1000, -1000, -1000, -1000, 22263, 22263, 22263,
	22263, 22263, 22263, 22263, 22263, 22263, 22263, -1000, -1000, -1000,
	-1000, -1000, -1000, 22263, -1000, 39783, 11, -246, 1328, 11,
	1328, 23723, 863, 809, 22993, -1000, 22263, 16411, -1000, -1000,
	-1000, -1000, -1000, 22263, 22263, 22263, 22263, 22263, 22263, -1000,
	-1000, -1000, 22263, 22263, -1000, 22263, -1000, 22263, -1000, -1000,
	-1000, -1000, -1000, 968, -1000, 870, 808, 874, 54383, -1000,
	-1000, -1000, -1000, 1935, -1000, 2518, -1000, 2282, 2267, 2615,
	2603, -1000, -1000, 30293, -1000, -1000, -1000, 54383, -429, -1000,
	2347, 2290, 908, 908, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 13467, 2535, 22263, 2215, 55113, 224, -1000, 29563, 54383,
	55113, 30293, 30293, 30293, 30293, 30293, -1000, 2243, 2235, -1000,
	2234, 2231, 2263, 55843, -1000, 1565, 1745, -1000, 22263, 32483,
	1927, 30293, -1000, -1000, 30293, 55843, 12731, -1000, -1000, 19,
	-4, -1000, -1000, -1000, -1000, 1527, -1000, -1000, 1067, 2502,
	2363, -1000, -1000, -1000, -1000, -1000, 1741, -1000, 1736, 1934,
	1732, 1724, 280, -1000, 2109, 2442, 993, 993, -1000, 1285,
	-1000, 1209, 1684, 1680, -1000, -1000, -1000, 505, -1000, 2485,
	55843, 2210, 2209, 2208, -1000, -527, 1284, 2081, 2056, 22263,
	2076, 2569, 1930, 54383, -1000, -1000, 55113, -1000, 274, -1000,
	382, 54383, -1000, -1000, -1000, 399, 55843, -1000, 9449, -1000,
	-1000, -1000, 242, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	55843, 278, -1000, 2069, 1347, -1000, -1000, 2145, -1000, -1000,
	-1000, -1000, -1000, 227, 218, 1668, 210, 1664, 210, -1000,
	55843, 924, 2196, 55843, -1000, -1000, -1000, 1129, 1129, -1000,
	-1000, 2431, -1000, 1209, 1699, 24453, 24453, -1000, 914, -1000,
	-1000, 386, -220, 2067, 2067, -1000, 2067, 2068, -1000, 2067,
	180, 2067, 176, 2067, -1000, -1000, 1478, 1478, -1000, 1546,
	2121, 1249, 2879, -1000, 1349, 22263, 2844, -1000, -1000, -246,
	-246, -246, -246, -246, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -62, 2800, 2781, 1699, -1000, 2060,
	2059, 22263, 1699, 1478, 2115, 1699, 1699, 1699, 1699, 1699,
	1699, 1699, 1699, 1699, 1699, 1699, 1699, 2087, 2078, 2064,
	2055, 2051, 2045, 2036, 2030, 2021, 2017, 2007, 1987, 1973,
	1949, 1936, 1915, 1699, 1699, 1909, 1699, 1905, 1803, -1000,
	1349, 1546, 2760, 1546, 1699, 1699, 2749, 334, 1699, 1707,
	1707, 1707, 1707, 1707, 1546, 1546, 1546, 1546, 1699, 54383,
	-1000, -246, -1000, -1000, -316, -320, -1000, 1478, -246, 1932,
	24453, 1699, 24453, 24453, 24453, 1699, 1478, -1000, 1798, 1738,
	2695, 1734, 1699, 2685, 1699, 1699, 1699, 1703, -1000, 2509,
	2026, 2509, 2026, 2509, 1701, 1252, 55843, -1000, -1000, -1000,
	-1000, 2603, 2587, 21533, 1931, -1000, -1000, 100, 606, -1000,
	2355, 2290, -1000, 2567, 2343, 2561, -1000, -1000, -1000, -1000,
	-1000, 1349, -1000, 2469, 1907, -1000, 998, 1845, -1000, -1000,
	20803, 1705, 2265, 832, 1701, 2000, 2683, 2140, 2206, 2721,
	-1000, -1000, -1000, -1000, 2188, -1000, 2065, -1000, -1000, 2040,
	-1000, 2674, 404, 30293, 1975, 1975, -1000, 830, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1166, 9449, 2702, -1000, 1662,
	-1000, 1339, 203, 1282, -1000, -1000, 993, 993, -1000, 1057,
	1049, -1000, 55843, 2058, -1000, 368, 1660, 368, 1281, -1000,
	-1000, 1280, -1000, -1000, -1000, -1000, 2014, 2280, -1000, -1000,
	-1000, -1000, 55843, -1000, -1000, 55843, 55843, 55843, 2054, 2558,
	-1000, 22263, 2050, 994, 2423, 54383, 54383, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 841, 993,
	-491, 366, 365, 993, 993, 993, -528, -1000, -1000, 1678,
	1676, -1000, -200, -1000, 22263, -1000, -1000, -1000, -1000, -1000,
	1211, 1211, 1658, 1647, 1643, -1000, 2040, -1000, -1000, -1000,
	1831, -1000, -1000, -192, 54383, 54383, 54383, 54383, -1000, -1000,
	-1000, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 914, 1478, 364, -194, 1478, -1000,
	-1000, 368, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22263, -1000, 22263, -1000, 22263, 1349, 22263, -1000,
	-1000, -1000, -1000, -1000, 2535, 1642, 22263, 22263, -1000, 1257,
	1250, 1699, -1000, -1000, -1000, 22263, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22263,
	-1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263,
	-1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263,
	-1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263, -1000, 22263,
	-1000, -1000, 22263, -1000, -1000, -1000, 22263, -1000, 22263, -1000,
	22263, -1000, -1000, -1000, 22263, 228, 319, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1478, 403,
	-1000, -1000, -1000, 2613, -1000, 1478, 22263, 2199, -1000, 2199,
	2199, 2199, -1000, -1000, -1000, 22263, -1000, 22263, 22263, -1000,
	22263, -1000, 22263, -1000, -1000, -1000, -1000, 22263, 2026, 2411,
	39053, 2026, 39053, 2026, 32483, -1000, -1000, 2587, 2585, 2557,
	-1000, 2329, 2298, 2298, 2355, -1000, 2551, 2550, -1000, 1641,
	2545, 1633, 1046, -1000, 55113, 22263, -1000, 224, 38323, -1000,
	415, 54383, 224, 54383, -1000, 2583, -1000, -1000, 22263, 2048,
	-1000, 22263, -1000, -1000, -1000, -1000, 5154, 2603, 1975, -1000,
	-1000, 935, -1000, 22263, -1000, 5049, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1615, 1547, -1000, -1000, 2042, 22263,
	-1000, -1000, -1000, 1801, 1725, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2040, -1000, -1000, -1000, -1000, 399, -516,
	2104, 54383, 1245, -1000, 1640, 1930, 380, 224, 1537, 993,
	993, 993, 1222, 1208, 38323, 1638, -1000, 54383, 449, -1000,
	399, -1000, -212, -213, 1699, -1000, -1000, 2500, -1000, -1000,
	16411, -1000, -1000, 2039, 2151, -1000, -1000, -1000, -1000, 2249,
	-172, -197, -1000, -1000, 1699, 1699, 1699, 1656, 1478, -1000,
	1699, 1699, 1627, 1599, -1000, 1699, 1699, 1699, 1699, 1699,
	1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699, 1699,
	1699, 1699, 1699, 1699, 1699, 1546, 1694, -1000, 228, 1478,
	2205, -1000, -1000, 5154, -1000, -1000, 2583, 2544, 11, -1000,
	-1000, 240, 11, 1349, 1025, 1478, 1478, 1025, 1636, 1699,
	1632, 1618, 1699, 1699, 33213, -1000, 2543, 2542, 1609, -1000,
	-1000, 39053, 1609, 39053, 968, 2585, -259, 22263, 22263, -1000,
	2287, 1207, -1000, -1000, -1000, -1000, 1525, 1520, -1000, 1517,
	-1000, 2686, -1000, 1349, -1000, 2026, 224, -1000, 827, 1845,
	-1000, 2535, 1349, 54383, 1349, 87, 2583, -1000, 1699, -1000,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026,
	2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, 2026, -1000,
	-1000, 54383, 1940, -1000, -1000, 2494, 1626, 161, -1000, 1576,
	1930, -1000, -1000, 206, -1000, 22263, -1000, 38323, 1513, 1493,
	-1000, -1000, -1000, -1000, -528, -1000, -1000, -1000, -1000, -1000,
	-1000, 392, 1928, -1000, 972, 54383, 55843, -1000, 2245, -1000,
	-1000, -1000, -1000, 22263, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22263, -1000, 1478, 2203, -1000, -365, -1000, -492, 22263,
	-246, -1000, -1000, -246, -1000, -1000, -1000, -1000, -1000, 22263,
	-1000, -1000, 22263, -1000, 22263, -1000, -1000, 1609, -1000, -1000,
	-1000, 37593, -1000, 1609, -1000, 1609, -1000, -259, -1000, 1918,
	-1000, 54383, 1349, 375, -1000, 1204, -1000, -1000, -1000, -1000,
	-1000, 55113, 54383, 1845, 54383, -1000, -1000, 1574, 1478, 2026,
	2535, -1000, 1572, -1000, 392, -1000, 2035, 2056, -1000, -1000,
	-1000, 20073, -1000, -1000, -1000, -1000, -1000, 198, -191, 16411,
	11995, 1570, -1000, -180, 1699, 1546, -1000, -468, -1000, -1000,
	-1000, -1000, 295, -1000, -1000, 1422, -1000, -1000, 1612, 1602,
	1598, -1000, -1000, -1000, -1000, -1000, -1000, -259, -1000, -1000,
	2491, -1000, -215, -1000, -1000, 1251, 1532, -1000, -1000, -1000,
	32483, 53653, -1000, -163, 326, -191, 22263, 2033, 1478, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -41, -1000, -1000,
	823, -1000, -1000, -1000, 2145, -195, -1000, -1000, -1000, 299,
	-481, -291, -293, 24453, -1000, 22263, -1000, 22263, -1000, 22263,
	-1000, 54383, 2026, -1000, -1000, -1000, 1528, -1000, 4938, -380,
	2200, -1000, -136, -1000, -1000, -1000, 1163, 1441, -1000, -1000,
	-1000, -1000, -1000, -1000, 1763, 54383, -1000, 451, -1000, -1000,
	15675, -192, -198, 1028, -1000, -1000, -1000, -1000, -1000, 2199,
	1425, 1343, 1699, -1000, 54383, -1000, 53653, -329, 913, 5154,
	-1000, 2186, 2180, 2610, -1000, -1000, -1000, -1000, -1000, -1000,
	-530, 1512, 281, -1000, -1000, -1000, 299, -294, -1000, 22263,
	-1000, 22263, -1000, 1478, -1000, -1000, 2483, 87, -1000, 2671,
	-1000, 2664, 992, 992, -1000, 1198, -530, -1000, -1000, -1000,
	-1000, 1699, 1699, -1000, -385, -1000, -1000, -1000, -1000, -1000,
	458, 1226, -1000, -1000, -1000, -1000, -1000, 5154, -1000, -1000,
	-1000, 219, 219, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3244, 3243, 28, 5, 36, 35, 3241, 3235, 3234,
	170, 3232, 3230, 3229, 3223, 3219, 3217, 2723, 2719, 2718,
	3216, 3215, 3200, 3199, 3198, 3197, 3196, 3195, 3192, 39,
	106, 56, 99, 212, 201, 3191, 176, 162, 198, 3190,
	3188, 3187, 116, 186, 81, 89, 196, 3186, 3185, 74,
	3184, 3182, 3180, 189, 184, 182, 1091, 3179, 180, 113,
	46, 3178, 3177, 3176, 3175, 3172, 3170, 3168, 3166, 3165,
	3164, 3163, 3157, 3156, 3155, 3152, 3148, 3144, 3142, 300,
	3141, 3140, 18, 3138, 76, 3137, 3136, 3134, 3133, 3132,
	9, 3130, 3129, 13, 38, 67, 3126, 3124, 40, 3123,
	3120, 3117, 3114, 3112, 80, 3105, 16, 3104, 29, 3103,
	3102, 125, 3101, 3098, 3096, 43, 3092, 3089, 3084, 14,
	168, 3083, 3082, 139, 3080, 3077, 3075, 175, 211, 3073,
	2308, 3071, 64, 3070, 3069, 3065, 166, 197, 3063, 120,
	3062, 3061, 3059, 150, 3058, 3312, 3055, 3052, 70, 78,
	190, 3051, 3046, 205, 77, 8, 3045, 21, 22, 3043,
	3040, 73, 68, 3039, 105, 3037, 3034, 102, 108, 3031,
	101, 98, 3025, 3022, 27, 7, 3021, 1, 6, 4,
	110, 3020, 3019, 115, 3017, 3016, 3013, 94, 3012, 3011,
	5647, 3010, 91, 129, 103, 66, 3009, 169, 164, 3008,
	3007, 3005, 3003, 2988, 2987, 50, 2985, 2976, 2975, 137,
	1336, 114, 2974, 146, 344, 51, 155, 2973, 192, 79,
	200, 181, 2970, 2960, 132, 133, 2957, 2954, 55, 165,
	193, 2953, 93, 128, 118, 188, 92, 131, 2946, 2940,
	53, 63, 2939, 2937, 2933, 2931, 167, 2930, 2927, 61,
	2925, 57, 2924, 191, 2923, 343, 83, 2916, 183, 173,
	2912, 65, 2911, 2910, 96, 95, 62, 37, 2909, 158,
	161, 126, 172, 2903, 2902, 52, 2900, 2895, 2893, 199,
	302, 2891, 2888, 353, 171, 145, 149, 85, 2887, 320,
	2881, 2879, 47, 5130, 2877, 54, 6626, 185, 26, 160,
	2876, 2875, 8083, 49, 45, 24, 2874, 207, 2867, 206,
	2861, 2860, 2858, 226, 204, 111, 159, 58, 2856, 2855,
	2853, 2850, 72, 2845, 2839, 2837, 2836, 2831, 2829, 34,
	33, 32, 71, 213, 60, 10, 100, 157, 152, 69,
	2828, 2827, 2824, 123, 84, 2813, 156, 153, 124, 134,
	2812, 178, 141, 119, 2811, 97, 31, 2810, 2808, 2807,
	2806, 90, 2801, 2800, 2791, 2790, 151, 143, 121, 82,
	2784, 87, 117, 148, 147, 48, 2783, 41, 2781, 2780,
	30, 195, 17, 2778, 19, 104, 109, 2775, 6400, 2773,
	12, 319, 154, 2771, 2769, 11, 20, 25, 2763, 2759,
	2750, 2748, 130, 2745, 2741, 2737, 2736, 23, 44, 15,
	2, 112, 138, 75, 2735, 2730, 140, 2700, 2698, 2693,
	0, 1041, 127, 2685, 202,
}

//line sql.y:8693
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) groupByUnion() *GroupBy {
	v, _ := st.union.(*GroupBy)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intPtrUnion() *int {
	v, _ := st.union.(*int)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) rowAliasUnion() *RowAlias {
	v, _ := st.union.(*RowAlias)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 418, 419, 419, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 261, 388, 259, 259, 28, 74, 36, 36, 35,
	35, 38, 38, 37, 31, 31, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	29, 29, 29, 29, 30, 30, 30, 30, 30, 15,
	16, 34, 34, 17, 17, 109, 109, 18, 19, 19,
	19, 19, 422, 422, 185, 185, 183, 183, 184, 184,
	264, 264, 20, 268, 268, 270, 270, 270, 270, 260,
	260, 260, 21, 21, 269, 269, 271, 271, 271, 274,
	274, 274, 274, 316, 316, 316, 22, 22, 22, 22,
	22, 129, 129, 390, 390, 389, 384, 384, 383, 383,
	382, 387, 387, 386, 386, 385, 40, 41, 50, 50,
	50, 50, 51, 52, 391, 391, 357, 57, 57, 56,
	56, 56, 56, 56, 56, 58, 58, 54, 54, 53,
	53, 55, 55, 359, 359, 345, 345, 358, 358, 358,
	358, 358, 358, 358, 344, 344, 140, 140, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 406, 406, 406, 405, 405,
	239, 239, 239, 239, 239, 239, 239, 239, 149, 149,
	161, 161, 161, 161, 161, 161, 147, 147, 148, 146,
	146, 146, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 410, 410, 410, 410, 410, 410, 410, 410, 410,
	410, 160, 160, 155, 155, 155, 157, 157, 156, 156,
	156, 158, 158, 407, 407, 407, 407, 322, 322, 322,
	322, 325, 325, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 324, 324, 324, 324, 324, 324, 324, 326,
	326, 326, 326, 326, 327, 327, 327, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	328, 328, 328, 328, 328, 328, 328, 328, 343, 343,
	332, 332, 337, 337, 338, 338, 339, 339, 339, 340,
	340, 340, 341, 341, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 336, 336, 335, 335, 335, 346, 371,
	371, 370, 370, 368, 368, 368, 368, 368, 368, 368,
	368, 355, 355, 365, 365, 365, 365, 365, 354, 354,
	350, 350, 350, 351, 351, 352, 352, 349, 349, 353,
	353, 367, 367, 366, 366, 347, 347, 348, 348, 373,
	408, 408, 408, 408, 408, 409, 409, 374, 398, 400,
	400, 400, 399, 399, 396, 397, 395, 395, 395, 395,
	395, 84, 84, 84, 287, 287, 288, 288, 363, 363,
	362, 362, 362, 364, 364, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 282, 282, 282, 394,
	394, 394, 394, 394, 394, 393, 393, 393, 360, 360,
	360, 360, 392, 392, 59, 59, 219, 219, 411, 411,
	413, 413, 413, 47, 47, 47, 47, 47, 47, 46,
	46, 46, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 48, 48, 43, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 111, 111, 112,
	112, 112, 112, 114, 114, 114, 376, 376, 60, 60,
	3, 3, 173, 175, 176, 176, 174, 174, 174, 174,
	174, 174, 62, 62, 61, 61, 178, 177, 179, 179,
	179, 1, 1, 2, 2, 4, 4, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 342,
	342, 342, 375, 375, 377, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 117, 116, 116, 115, 118,
	118, 118, 118, 118, 118, 118, 118, 379, 379, 379,
	63, 63, 380, 329, 330, 331, 5, 6, 356, 378,
	125, 125, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 281, 281, 290,
	290, 280, 280, 307, 307, 307, 283, 283, 283, 284,
	284, 404, 404, 404, 277, 277, 66, 66, 66, 308,
	308, 308, 308, 69, 69, 414, 414, 415, 415, 416,
	416, 416, 70, 71, 71, 311, 311, 312, 312, 72,
	73, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	110, 110, 110, 10, 10, 10, 10, 81, 81, 81,
	9, 9, 11, 68, 68, 75, 401, 401, 402, 403,
	403, 403, 403, 76, 78, 27, 27, 27, 27, 27,
	27, 135, 135, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 130, 130, 130, 124, 124,
	423, 79, 80, 80, 128, 128, 128, 121, 121, 121,
	127, 127, 127, 12, 12, 13, 263, 263, 14, 14,
	134, 134, 133, 133, 136, 136, 136, 136, 136, 136,
	136, 131, 131, 295, 294, 132, 132, 132, 132, 300,
	300, 300, 299, 299, 167, 167, 169, 168, 168, 170,
	170, 171, 171, 171, 171, 217, 217, 193, 193, 256,
	256, 257, 257, 255, 255, 262, 262, 258, 258, 258,
	258, 265, 265, 172, 172, 172, 172, 180, 180, 181,
	181, 182, 182, 310, 310, 305, 305, 305, 304, 304,
	186, 186, 186, 188, 187, 187, 187, 187, 189, 189,
	191, 191, 190, 190, 192, 197, 197, 196, 196, 194,
	194, 194, 194, 194, 194, 195, 195, 195, 195, 198,
	198, 145, 145, 145, 145, 145, 145, 145, 145, 412,
	412, 159, 159, 159, 159, 159, 159, 159, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 246,
	246, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 222, 222, 221, 221, 87, 87, 87, 88, 88,
	89, 89, 89, 89, 89, 90, 90, 90, 90, 90,
	90, 90, 92, 92, 91, 91, 212, 212, 297, 297,
	93, 94, 94, 95, 95, 98, 98, 97, 96, 96,
	102, 102, 99, 99, 101, 101, 100, 103, 103, 104,
	105, 105, 278, 278, 199, 199, 208, 208, 208, 208,
	200, 200, 201, 201, 201, 201, 201, 201, 209, 209,
	209, 216, 210, 210, 206, 206, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 164, 164,
	164, 164, 227, 227, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 152,
	152, 165, 165, 165, 165, 166, 166, 166, 166, 166,
	166, 166, 318, 318, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 424, 424, 333, 333, 333, 207, 207, 207,
	207, 207, 126, 126, 126, 126, 126, 315, 315, 315,
	319, 319, 319, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 320, 320,
	225, 225, 122, 122, 223, 223, 224, 226, 226, 218,
	218, 218, 218, 220, 220, 203, 203, 203, 228, 228,
	321, 321, 229, 229, 106, 107, 107, 108, 108, 230,
	230, 232, 231, 231, 233, 234, 234, 234, 235, 235,
	236, 236, 236, 49, 49, 49, 49, 49, 44, 44,
	44, 44, 45, 45, 45, 45, 137, 137, 137, 137,
	139, 139, 138, 138, 82, 82, 83, 83, 83, 143,
	143, 144, 144, 144, 141, 141, 142, 142, 253, 253,
	253, 253, 253, 253, 253, 237, 237, 237, 244, 244,
	244, 240, 240, 242, 242, 242, 243, 243, 243, 241,
	250, 250, 252, 252, 251, 251, 247, 247, 248, 248,
	249, 249, 249, 245, 245, 202, 202, 202, 202, 202,
	254, 254, 254, 254, 309, 309, 309, 266, 266, 213,
	213, 215, 215, 214, 214, 163, 267, 267, 275, 272,
	272, 273, 273, 301, 301, 301, 276, 276, 289, 289,
	285, 285, 286, 286, 279, 279, 291, 291, 291, 77,
	211, 211, 372, 372, 369, 296, 296, 298, 298, 302,
	302, 306, 306, 303, 303, 8, 417, 417, 417, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 420,
	421, 313, 314, 314, 314,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 3, 0,
	1, 3, 1, 4, 3, 3, 4, 3, 2, 3,
	4, 3, 4, 2, 7, 1, 3, 3, 3, 3,
	1, 2, 1, 1, 3, 2, 3, 3, 2, 5,
	7, 10, 9, 7, 8, 1, 1, 10, 11, 9,
	8, 8, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 7, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 4, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 5, 2, 3, 3, 2, 3, 4,
	4, 4, 3, 4, 4, 5, 3, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	4, 4, 4, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 0, 0, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 1, 2, 3, 7, 0,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 5, 5, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 3, 6, 1,
	1, 3, 4, 3, 4, 4, 4, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 5, 5, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 2, 2, 2, 1, 1,
	2, 7, 7, 6, 6, 2, 2, 5, 6, 3,
	3, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 4,
	2, 4, 0, 1, 2, 5, 0, 3, 0, 1,
	4, 4, 2, 1, 0, 0, 1, 1, 2, 2,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 5,
	1, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 8,
	6, 8, 6, 5, 4, 10, 2, 2, 1, 2,
	2, 2, 2, 2, 5, 6, 6, 6, 6, 6,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	8, 4, 8, 8, 6, 5, 4, 4, 4, 4,
	4, 7, 4, 4, 6, 6, 6, 8, 6, 6,
	4, 4, 3, 4, 6, 6, 4, 4, 6, 4,
	6, 4, 4, 4, 4, 4, 4, 6, 4, 6,
	4, 4, 4, 6, 4, 6, 4, 4, 6, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	4, 4, 6, 4, 6, 4, 8, 6, 4, 4,
	6, 4, 6, 8, 4, 6, 8, 4, 4, 6,
	8, 6, 4, 6, 6, 8, 10, 7, 8, 8,
	9, 4, 4, 4, 4, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 5, 9, 6, 9, 8, 6,
	8, 8, 8, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 6, 6, 4, 6, 4,
	6, 8, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 5, 1, 1, 1, 2, 2, 0, 4,
	0, 2, 0, 2, 2, 1, 3, 0, 1, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 3,
	4, 2, 3, 4, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 3, 1, 6, 5, 4,
	1, 3, 3, 5, 0, 2, 5, 0, 5, 1,
	3, 1, 2, 3, 4, 1, 1, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -418, -79, -423, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 12, 13, -109, -35, 34, -40,
	-50, 232, -51, -41, 233, -52, 235, 234, 272, 236,
	385, 265, 79, 321, 322, 324, 325, 326, 327, -110,
	692, 270, 271, 238, 38, 50, 35, 36, 39, 242,
	278, 279, 241, 138, -33, -36, 11, -420, 14, 475,
	267, 266, 30, -34, 585, 91, -80, -419, 740, -253,
	-237, 25, 35, 31, -236, -232, -128, -237, 23, 21,
	10, -79, -79, -79, 15, 16, -79, -357, -359, 91,
	165, 91, -79, -57, -56, -54, -53, -55, -58, 33,
	-47, -48, -381, -46, -43, 237, 234, 282, 128, 129,
	272, 273, 274, 236, 256, 271, 275, 270, 291, -42,
	86, 35, 585, 588, -364, 233, 239, 240, 235, 476,
	131, 130, 80, -361, 380, 619, 710, -58, 712, 105,
	108, 711, 49, 246, 713, 714, 715, 626, 716, 255,
	717, 718, 719, 720, 726, 667, 727, 728, 729, 132,
	10, -79, -306, -302, 95, -293, 582, 258, 617, 429,
	618, 307, 86, 46, 41, 521, 592, 377, 380, 619,
	506, 710, 386, 321, 337, 331, 511, 512, 513, 360,
	352, 583, 620, 593, 310, 259, 295, 704, 350, 141,
	712, 314, 621, 273, 387, 388, 622, 389, 105, 324,
	426, 725, 313, 623, 723, 108, 711, 329, 84, 505,
	56, 707, 49, 268, 434, 435, 348, 241, 344, 713,
	296, 624, 595, 289, 131, 128, 732, 38, 340, 55,
	32, 722, 130, 54, 714, 156, 625, 715, 626, 391,
	367, 698, 53, 392, 274, 627, 89, 279, 587, 318,
	706, 393, 526, 341, 394, 306, 721, 238, 628, 317,
	687, 679, 680, 395, 396, 699, 372, 368, 373, 528,
	629, 418, 510, 397, 683, 684, 739, 57, 630, 631,
	700, 129, 632, 83, 716, 85, 335, 336, 633, 304,
	257, 531, 532, 420, 364, 488, 495, 496, 115, 116,
	491, 117, 497, 118, 498, 499, 500, 489, 119, 112,
	490, 501, 502, 365, 366, 120, 503, 114, 113, 492,
	494, 121, 504, 255, 37, 398, 584, 308, 63, 312,
	283, 421, 51, 370, 736, 50, 694, 533, 634, 697,
	363, 359, 485, 58, 635, 636, 637, 638, 507, 717,
	362, 334, 358, 731, 4, 301, 480, 508, 718, 67,
	240, 375, 374, 376, 290, 417, 355, 639, 640, 641,
	262, 87, 642, 345, 24, 643, 644, 399, 297, 645,
	61, 646, 647, 424, 271, 648, 59, 719, 44, 649,
	276, 733, 720, 650, 651, 652, 693, 653, 278, 654,
	401, 655, 681, 682, 400, 369, 371, 534, 285, 402,
	385, 243, 586, 656, 319, 339, 275, 724, 657, 263,
	522, 523, 524, 525, 705, 530, 529, 277, 282, 270,
	425, 264, 658, 659, 660, 661, 662, 311, 678, 663,
	664, 325, 590, 726, 486, 48, 665, 666, 667, 668,
	669, 305, 300, 419, 428, 66, 88, 382, 670, 671,
	703, 333, 330, 42, 298, 466, 468, 469, 470, 471,
	472, 467, 474, 672, 322, 60, 727, 728, 729, 292,
	730, 514, 515, 516, 517, 12, 568, 551, 579, 552,
	569, 553, 562, 554, 570, 578, 580, 535, 543, 536,
	544, 574, 557, 571, 563, 556, 555, 577, 560, 564,
	537, 545, 575, 561, 538, 546, 539, 547, 540, 548,
	573, 572, 565, 576, 541, 549, 567, 542, 550, 566,
	558, 559, 437, 737, 738, 509, 404, 132, 302, 303,
	52, 356, 284, 673, 315, 674, 346, 347, 482, 483,
	361, 332, 357, 690, 323, 688, 286, 405, 487, 272,
	675, 427, 299, 378, 124, 383, 316, 591, 527, 291,
	406, 702, 589, 518, 519, 354, 351, 293, 520, 676,
	692, 407, 247, 287, 288, 677, 689, 408, 409, 309,
	410, 411, 412, 413, 414, 416, 320, 415, 691, 685,
	686, 294, 465, 588, 328, 349, 384, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 484, 245, -79, 245, -190,
	-302, -130, 694, 696, 184, -272, 388, -290, 390, 403,
	398, 408, 396, -281, 399, 401, 285, -404, 418, 245,
	405, 232, 391, 400, 409, 410, 309, 416, 411, 320,
	415, 294, 412, 413, 414, -388, 184, 715, 730, 141,
	353, 395, 393, 419, 694, 95, -308, 95, 96, 97,
	-293, 323, -311, 328, -296, -388, -293, 326, -79, -79,
	-313, -313, -130, -210, -145, 149, -159, -261, -162, 96,
	-150, -153, -204, -205, -206, -207, -160, -220, -259, 173,
	174, 181, 150, -216, -163, 28, 581, 477, 476, 184,
	33, 227, 73, 74, 479, 480, 152, 62, 14, 442,
	443, -161, 432, 433, 444, 438, 439, 505, 507, 508,
	509, 506, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 510, 521, 482, 483, 122, 484, 112, 114,
	113, 485, 486, 487, 350, 533, 534, 528, 531, 532,
	530, 529, 365, 366, 488, 551, 552, 556, 555, 553,
	554, 557, 560, 561, 562, 563, 564, 565, 567, 566,
	558, 559, 536, 535, 537, 538, 539, 540, 541, 542,
	544, 543, 545, 546, 547, 548, 549, 550, 568, 569,
	570, 571, 572, 574, 573, 578, 577, 575, 576, 580,
	579, 489, 490, 115, 116, 117, 118, 119, 120, 121,
	491, 494, 492, 493, 495, 496, 497, 502, 503, 498,
	499, 500, 501, 504, 376, 374, 375, 371, 370, 369,
	-89, -102, 608, 607, -103, 429, 434, 435, 437, -151,
	-152, -165, -166, -296, -302, 250, 431, 244, 179, 475,
	-154, -148, -218, 111, 97, -31, -214, 430, 440, 441,
	445, 436, 446, 594, 596, 611, 612, 614, 599, 604,
	603, 606, 522, 523, 524, 525, 526, 527, 679, 680,
	681, 682, 683, 684, 685, 686, -388, -293, 95, -157,
	-155, -199, 98, 103, 106, 107, 109, -410, 268, 346,
	347, 123, -420, 708, -156, 100, 101, 102, 125, 126,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 94, 99, 49, 404, 404, -190, -79, -79,
	-79, -79, -417, 711, 586, -230, -128, -232, -33, -31,
	-420, 11, -79, -31, -32, -30, -36, -38, 613, -37,
	-302, 104, -237, -253, 15, 66, 168, 47, 55, -235,
	-236, -34, -31, -145, 22, 40, 26, -132, 175, -145,
	-302, -132, -279, 249, -79, -79, -268, -316, 323, -270,
	419, 694, 418, -260, -273, 95, -259, -272, 417, 96,
	-358, 165, -344, -348, -296, 260, -374, 256, -190, -367,
	-366, -296, -420, -129, -289, 246, 254, 253, 142, -391,
	145, 302, 431, 244, -53, -54, -55, -272, 183, 714,
	-111, 277, 281, 92, 92, -348, -347, -346, -392, 281,
	260, -373, -365, 252, 261, -354, 253, 254, -349, 246,
	143, -392, -349, 251, 261, 256, 260, 281, 281, 132,
	281, 132, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 276, -355, 157, -355, 589, 589, -361, -392, 256,
	246, -392, -392, 252, -291, -349, 248, 27, 248, 37,
	37, -355, -355, -355, -272, 183, -355, -355, -355, -355,
	289, 289, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, 245,
	-391, -137, 415, 309, 86, -56, 291, -39, -190, -289,
	246, 247, -391, 278, -190, 228, 245, 697, -283, 165,
	18, -283, -280, 404, 402, 389, 394, -283, -283, -283,
	-283, 292, 387, -350, 246, 37, 257, 404, 292, 387,
	292, 293, 292, 293, 397, 407, 292, -307, 17, 168,
	431, 392, 396, 285, 245, 286, 247, 406, 293, -307,
	94, -284, 165, 292, 404, 398, 288, -283, -283, -314,
	-420, -298, -296, -292, 237, 40, 148, 27, 29, 151,
	184, 135, 22, 152, 39, 239, 353, 256, 183, 252,
	476, 232, 77, 594, 432, 439, 430, 438, 442, 478,
	479, 431, 390, 33, 16, 596, 30, 266, 26, 43,
	177, 234, 155, 597, 269, 28, 267, 122, 126, 599,
	25, 80, 261, 17, 254, 45, 19, 600, 601, 20,
	250, 249, 168, 246, 75, 14, 227, 31, 164, 71,
	602, 143, 138, 603, 604, 605, 606, 136, 73, 165,
	23, 734, 440, 441, 35, 695, 581, 280, 179, 78,
	64, 696, 149, 436, 607, 608, 123, 609, 127, 81,
	701, 145, 21, 76, 47, 610, 281, 611, 251, 735,
	612, 422, 613, 166, 235, 475, 74, 167, 708, 614,
	709, 244, 403, 11, 481, 34, 265, 253, 134, 72,
	446, 615, 245, 154, 248, 137, 125, 10, 142, 36,
	15, 79, 82, 443, 444, 445, 62, 133, 585, 153,
	18, 616, 423, 147, -388, 697, -314, -314, 34, 96,
	-414, -415, -416, 585, 422, 248, -296, -190, -85, 687,
	236, -86, 693, 40, 243, -135, 404, -123, 184, 715,
	698, 699, 700, 697, 401, 705, 703, 701, 292, 702,
	92, 145, 147, 148, 4, -145, 164, -200, -201, 163,
	157, 158, 159, 160, 161, 162, 169, 168, 149, 151,
	165, -246, 146, 170, 171, 172, 173, 174, 175, 176,
	178, 177, 179, 180, 166, 167, 183, 230, 231, -153,
	-153, -153, -153, -216, -222, -221, -420, -218, -388, -293,
	-302, -420, -420, -153, -278, -420, -150, -420, -420, -420,
	-420, -420, -225, -145, -420, -420, -424, -420, -424, -424,
	-424, -333, -420, -333, -333, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, -420, -420, -420, -420, 228, -420,
	-420, -420, -420, -420, -333, -333, -333, -333, -333, -333,
	-420, -420, -420, -420, -420, -420, -420, -420, -420, -420,
	-420, -420, -420, -420, 94, 107, 103, 106, 98, -220,
	109, 94, 94, 94, 94, -31, -32, -210, -420, -313,
	-401, -402, -193, -190, -420, 309, -296, -296, 278, 100,
	-235, -34, -31, -230, -236, -232, -31, -79, -121, -134,
	68, 69, -133, -136, 26, 43, 72, 70, 40, -421,
	93, -421, -253, -421, 92, -38, -256, 91, 641, 671,
	641, 671, 66, 48, 94, 94, 92, 24, -231, -233,
	-145, 17, -300, 4, -299, 27, -296, 94, 228, 17,
	-191, 31, -190, -279, -279, 92, 95, 323, -269, -271,
	420, 422, 157, -301, -296, 94, 33, 93, 92, -190,
	-322, -325, -327, -326, -328, -323, -324, 350, 351, 184,
	354, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	367, 34, 268, 346, 347, 348, 349, 368, 369, 370,
	371, 373, 374, 375, 376, 331, 352, 583, 332, 333,
	334, 335, 336, 337, 339, 340, 343, 341, 342, 344,
	345, -297, -296, 91, 93, 92, -332, 91, -145, -137,
	245, -296, 246, 246, 246, -79, 475, -355, -355, -355,
	276, 22, -46, -43, -381, 21, -42, -43, 237, 128,
	129, 234, 91, -344, 91, -353, -297, -296, 91, 143,
	251, 142, -352, -349, -352, -353, -296, -218, -296, 143,
	143, -296, -296, -265, -296, -265, -265, 40, -265, 40,
	-265, 40, 100, -296, -265, 40, -265, 40, -265, 40,
	-265, 40, -265, 40, 33, 83, 84, 85, 33, 87,
	88, 89, -218, -296, -296, -218, -344, -218, -190, -296,
	-272, 100, 100, 100, -355, -355, 100, 94, 94, 94,
	-355, -355, 100, 94, -304, -302, 94, 94, -393, 262,
	306, 308, 100, 100, 100, 100, 33, 94, -394, 33,
	722, 721, 723, 724, 725, 94, 100, 33, 100, 33,
	100, -296, 91, -190, -143, 296, 232, 234, 237, 81,
	94, 312, 313, 310, 315, 316, 317, 157, 49, 92,
	248, 245, -296, -285, 250, -285, -296, -303, -302, -292,
	-190, 248, 386, 94, -145, -351, 17, 168, -307, -307,
	-283, -190, -351, -307, -283, -190, -283, -283, -283, -283,
	-307, -307, -307, -283, -302, -302, -190, -190, -190, -190,
	-190, -190, -190, -314, -284, -283, 697, 94, -277, 17,
	81, -314, -314, 92, 329, 423, 424, -312, 326, -81,
	-296, 94, -10, -29, -18, -17, -19, 157, -10, 92,
	585, -183, -190, 697, 697, 697, 697, 697, 697, -145,
	-145, -145, -145, 609, -208, -412, 149, 125, 126, 123,
	124, -162, 41, 42, 40, -145, -209, -214, -216, 110,
	168, 151, 165, -246, -150, -153, -150, -150, -150, -150,
	-150, -150, 227, -150, 227, -150, -150, -150, -150, -150,
	-150, -315, -296, 94, 184, -158, -157, 109, -410, -158,
	582, 92, -221, 228, -145, -145, -388, -119, 448, 449,
	450, 451, 453, 454, 455, 458, 459, 463, 464, 447,
	465, 452, 457, 460, 461, 462, 456, 349, -145, -211,
	-210, -211, -145, -145, -223, -224, 153, -218, -145, -421,
	-421, 100, 175, -127, 26, 43, -127, -127, -127, -127,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-127, -145, -120, 447, 465, 452, 457, 460, 461, 462,
	456, 349, 466, 467, 468, 469, 470, 471, 472, 473,
	474, -120, -119, -145, -145, -145, -145, -145, -145, -87,
	-145, 135, 136, 137, -210, -145, -150, -145, -145, -145,
	-421, -145, -145, -145, -211, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -387, -386, -385, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -210, -210, -210,
	-210, -210, -145, -421, -145, -164, -148, 100, -261, 109,
	96, -145, -145, -145, -145, -145, -145, -211, -298, -303,
	-292, -293, -210, -211, -211, -210, -210, -145, -145, -145,
	-145, -145, -145, -145, -145, -421, -145, -145, -145, -145,
	-145, -253, -421, -210, 92, -403, 422, 423, 695, -305,
	281, -304, 27, -211, 94, 17, -263, 82, -296, -235,
	-235, 68, 69, 64, -131, -295, -136, -421, -37, 27,
	-255, -296, 634, 634, 67, 94, -334, -272, 377, 378,
	184, -145, -145, 92, -234, 29, 30, -190, -299, 175,
	-303, -190, -264, 281, -190, -168, -170, -171, -172, -193,
	-217, -420, -173, -31, 605, 602, 17, -183, -184, -192,
	-302, -270, -316, -269, 92, 421, 423, 424, 81, 127,
	-145, -335, 183, -363, -362, -361, -344, -346, -347, -348,
	93, -335, -340, 383, 382, -332, -332, -332, -332, -332,
	-334, -334, -334, -334, 91, 91, -332, -332, -332, -332,
	-337, 91, -337, -337, -338, -337, 91, -338, -339, 91,
	-339, -374, -145, -371, -370, -368, -369, 255, 105, 677,
	633, 585, 626, 667, 82, -366, -234, 100, -421, -143,
	-286, 250, -372, -369, -296, -296, -296, -286, 95, 94,
	95, 94, 95, 94, -112, -60, -1, 734, 735, 736,
	92, 22, -345, -344, -59, 306, -377, -378, 281, -373,
	-367, -353, 143, -352, -353, -353, -296, 92, 31, 132,
	132, 132, 132, 585, 234, 34, -287, 625, 149, 677,
	633, -344, -59, 248, 248, -315, -315, -315, 94, 94,
	-282, 730, -183, -139, 298, 157, 287, 287, 245, 300,
	245, 300, -190, 311, 314, 312, 313, 310, 315, 316,
	317, 40, 40, 40, 40, 40, 40, 299, 301, 303,
	289, -190, -190, -285, 81, -185, -190, 28, -302, 94,
	94, -190, -283, -283, -190, -283, -283, -190, -416, 330,
	-296, 364, 688, 690, -123, 422, 92, 585, 25, -124,
	25, -420, -412, 125, 126, -216, -216, -216, -209, -150,
	-153, -150, 148, 269, -150, -150, -420, -218, -421, -298,
	27, 92, 82, -421, 173, 92, -421, -421, 92, 17,
	92, -226, -224, 155, -145, -421, 92, -421, -421, -210,
	-145, -145, -145, -145, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -210, -421, 92, 92, 17, -319,
	27, -421, -421, -421, -421, -421, -225, -421, 17, -421,
	82, 92, 168, 92, -421, -421, -421, 92, 92, -421,
	-421, 92, -421, 92, -421, -421, -421, -421, -421, -421,
	92, -421, 92, -421, -421, -421, 92, -421, 92, -421,
	-421, 92, -421, 92, -421, 92, -421, 92, -421, 92,
	-421, 92, -421, 92, -421, 92, -421, 92, -421, 92,
	-421, 92, -421, 92, -421, 92, -421, 92, -421, 92,
	-421, 92, -421, 92, -421, 92, -421, -421, -421, 92,
	-421, 92, -421, 92, -421, -421, 92, -421, 92, -421,
	92, -421, 92, 92, -421, 92, 92, 92, -421, 92,
	92, 92, 92, -421, -421, -421, -421, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, -421, -421, -421,
	-421, -421, -421, 92, -94, 610, -421, -421, 92, -421,
	92, 92, 92, 92, 92, -421, -420, 228, -421, -421,
	-421, -421, -421, 92, 92, 92, 92, 92, 92, -421,
	-421, -421, 92, 92, -421, 92, -421, 92, -421, -402,
	694, 423, -197, -196, -194, 79, 249, 80, -420, -304,
	-421, -158, -261, -262, -261, -203, -296, 100, 109, -237,
	-167, 92, -169, 17, -132, -216, 93, 92, -334, -241,
	-247, -280, -296, 94, 184, -336, 184, -336, 377, 378,
	-233, 228, -198, 18, -202, 34, 62, -29, -420, -420,
	34, 92, -186, -188, -187, -189, 71, 75, 77, 72,
	73, 74, 78, -310, 27, -31, -168, -31, -420, -190,
	-183, -422, 17, 82, -422, 92, 228, -271, -274, 425,
	422, 428, -388, 94, -111, 92, -361, -348, -238, -140,
	45, -341, 384, -334, 593, -334, -343, 94, -343, 100,
	100, 100, 93, -49, -44, -45, 35, 86, -368, -355,
	94, 44, -355, -355, -296, 93, -234, -139, -190, 149,
	81, -372, -372, -372, -302, -2, 733, 739, 143, 91,
	389, 21, -255, 92, 93, -219, 307, 93, -113, -296,
	93, 91, -353, -353, -296, -420, 245, 33, 33, 677,
	633, 625, -59, -219, -218, -296, -335, 732, 731, 93,
	247, 305, -144, 442, -141, 94, 95, -190, -190, -190,
	-190, -190, -190, 237, 234, 412, -411, 318, -411, 290,
	248, -183, -190, 92, -84, 264, 259, -307, -307, 35,
	-190, 422, 706, 704, -145, 148, 269, -162, -153, -119,
	-119, -150, -317, 184, 350, 268, 348, 344, 364, 355,
	382, 346, 383, 341, 340, 339, -317, -315, -150, -210,
	-145, -145, -145, 156, -145, 154, -145, -95, -94, -421,
	-421, -421, -421, -421, -95, -95, -95, -95, -95, -95,
	-95, -95, -95, -95, -230, -145, -145, -145, -421, 184,
	350, 17, -145, -315, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -385,
	-145, -210, -145, -210, -145, -145, -145, -145, -145, -386,
	-386, -386, -386, -386, -210, -210, -210, -210, -145, -420,
	-296, -98, -97, -96, 660, 249, -94, -164, -98, -164,
	227, -145, 227, 227, 227, -145, -211, -298, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -194, -349,
	287, -349, 287, -349, -265, 92, -276, 25, 17, 62,
	62, -167, -198, -294, -168, -295, -296, -244, 687, -250,
	51, -248, -249, 52, -245, 53, 61, -336, -336, 175,
	-235, -145, -266, 81, -267, -275, -218, -213, -215, -214,
	-420, -254, -421, -296, -265, -267, -170, -171, -171, -170,
	-171, 71, 71, 71, 76, 71, 76, 71, -187, -302,
	-421, -145, -305, 82, -168, -168, -192, -302, 175, 422,
	426, 427, -361, -409, 123, 149, 33, 81, 380, 105,
	-407, 183, 622, 672, 677, 633, 626, 667, -408, 251,
	142, 143, 263, 27, 46, 93, 92, 93, 92, 93,
	93, 92, -288, -287, -45, -44, -355, -355, 100, -388,
	94, 94, 247, 28, -190, 81, 81, 81, -114, 737,
	100, 91, -3, 86, -145, 91, 22, -344, -218, -379,
	-329, -380, -330, -331, -5, -6, -356, -117, 62, 105,
	-63, 49, 246, 717, 718, 132, -420, 730, -371, -255,
	-375, -377, -190, -149, -420, -161, -147, -146, -148, -154,
	173, 174, 268, 346, 347, -219, -190, -138, 296, 304,
	91, -142, 96, -390, 82, 287, 380, 287, 380, 94,
	-413, 319, 94, -413, -190, -84, -49, -190, -283, -283,
	35, -388, -421, -162, -153, -126, 168, 585, -320, 592,
	-332, -332, -332, -339, -332, 336, -332, 336, -332, -421,
	-421, -421, 92, -421, 25, -421, 92, -145, 92, -95,
	-95, -95, -95, -95, -122, 481, 92, 92, -421, 91,
	91, -145, -421, -421, -421, 92, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, 92,
	-421, 92, -421, 92, -421, 92, -421, 92, -421, 92,
	-421, 92, -421, 92, -421, 92, -421, 92, -421, 92,
	-421, 92, -421, 92, -421, 92, -421, 92, -421, 92,
	-421, -421, 92, -421, -421, -421, 92, -421, 92, -421,
	92, -421, -421, -421, 92, -318, 678, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -93, -297,
	-94, 642, 642, -421, -94, -227, 92, -150, -421, -150,
	-150, -150, -421, -421, -421, 92, -421, 92, 92, -421,
	92, -421, 92, -421, -421, -421, -421, 92, -195, 25,
	-420, -195, -420, -195, -421, -261, -190, -198, -228, 19,
	-132, -241, 56, 356, -252, -251, 60, 52, -249, 22,
	54, 22, 32, -266, 92, 157, -309, 92, 27, -421,
	-421, 92, 62, 228, -421, -198, -181, -180, 81, 82,
	-182, 81, -180, 71, 71, -256, 92, -264, -168, -198,
	-198, 228, 123, -420, -149, 15, 94, 94, -388, -406,
	721, 722, 33, 100, -355, -355, 143, 143, -190, 91,
	-334, 94, -334, 100, 100, 33, 87, 88, 89, 33,
	83, 84, 85, -190, -190, -190, -190, -376, 91, 22,
	-145, 91, 157, 93, -255, -255, 283, 168, -355, 715,
	289, 289, -355, -355, -355, -116, -115, 737, 93, -421,
	92, -342, 585, 588, -145, -155, -155, -256, 93, -384,
	585, -389, -296, -296, -296, -296, 100, 102, -421, 583,
	78, 586, -421, -334, -145, -145, -145, -145, -235, 94,
	-145, -145, 100, 100, -421, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -210, -145, -421, -178, -177,
	-179, 698, 123, 33, -317, -421, -212, 281, -101, -100,
	-99, 17, -421, -145, -119, -119, -119, -119, -145, -145,
	-145, -145, -145, -145, -420, 71, 21, 19, -258, -296,
	251, -420, -258, -420, -305, -228, -229, 20, 22, -295,
	-242, 58, -240, 57, -240, -251, 22, 22, 94, 22,
	94, 143, -275, -145, -215, -304, 62, -29, -296, -213,
	-296, -230, -145, 91, -145, -158, -198, -198, -145, -205,
	505, 507, 508, 509, 506, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 510, 521, 482, 483, 484,
	112, 114, 113, 485, 486, 487, 350, 533, 534, 528,
	531, 532, 530, 529, 365, 366, 488, 551, 552, 556,
	555, 553, 554, 557, 560, 561, 562, 563, 564, 565,
	567, 566, 558, 559, 536, 535, 537, 538, 539, 540,
	541, 542, 544, 543, 545, 546, 547, 548, 549, 550,
	568, 569, 570, 571, 572, 574, 573, 578, 577, 575,
	576, 580, 579, 489, 490, 115, 116, 117, 118, 119,
	120, 121, 491, 494, 492, 495, 496, 497, 502, 503,
	498, 499, 500, 501, 504, 376, 374, 375, 371, 370,
	369, 429, 434, 435, 437, 522, 523, 524, 525, 526,
	527, 679, 680, 681, 682, 683, 684, 685, 686, 94,
	94, 91, -145, 93, 93, -256, -375, -60, 93, -257,
	-255, 100, 93, 284, -214, -420, 94, -355, -355, -355,
	100, 100, -304, -421, 92, -296, -408, -377, 589, 589,
	-421, 27, -383, -382, -298, 91, 82, 67, 584, 587,
	-421, -421, -421, 92, -421, -421, -421, 93, 93, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, 92, -421, -177, -179, -421, 81, -158, -230, 22,
	-98, 306, 308, -98, -421, -421, -421, -421, -421, 92,
	-421, -421, 92, -421, 92, -421, -421, -258, -421, 22,
	22, 92, -421, -258, -421, -258, -197, -229, -108, -107,
	-106, 616, -145, -210, -243, 59, 81, 127, 94, 94,
	94, 15, -420, -213, 228, -309, -235, -255, -175, 389,
	-230, -421, -255, 93, 27, 93, 739, 143, 93, -214,
	-125, -420, 280, -304, 94, 94, -115, -118, -29, 92,
	157, -255, -190, 67, -145, -210, -421, 81, 597, 698,
	-92, -91, -88, 709, 735, -210, -94, -94, -145, -145,
	-145, -421, -296, 251, -421, -421, -108, 92, -105, -104,
	-296, -321, 585, 81, 127, -267, -255, -309, -296, 93,
	-421, -420, -235, 93, -239, -29, 91, -3, 280, -329,
	-380, -330, -331, -5, -6, -356, -82, 585, -382, -360,
	-302, -298, 94, 100, 93, 585, -421, -421, -90, 151,
	707, 675, -155, 227, -421, 92, -421, 92, -421, 92,
	-106, 92, 27, 590, -421, -305, -176, -174, -296, 639,
	-399, -398, 581, -409, -405, 123, 149, 105, -407, 677,
	633, 133, 134, -82, -145, 91, -421, -83, 295, 694,
	228, -390, 586, -90, 708, 653, 628, 653, 628, -150,
	-145, -145, -145, -104, -420, -421, 92, 25, -322, -62,
	650, -396, -397, 81, -400, 395, 649, 670, 123, 94,
	93, -255, 256, -303, -384, 587, 148, -119, -421, 92,
	-421, 92, -421, -93, -174, 646, -335, -158, -397, 81,
	-396, 81, 16, 15, -4, 738, 93, 297, -90, 653,
	628, -145, -145, -421, -61, 28, -175, -395, 264, 259,
	262, 34, -395, 100, -4, -421, -421, 650, 258, 33,
	123, -158, -178, -177, -177,
}

var yyDef = [...]int{
	880, -2, -2, 882, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 70, 72, 73, 880, 880, 880, 0, 880, 0,
	0, 880, -2, -2, 880, 1631, 0, 880, 0, 875,
	0, -2, 797, 803, 0, 812, -2, 0, 0, 880,
	880, 2261, 2261, 875, 0, 0, 0, 0, 0, 880,
	880, 880, 880, 1636, 1489, 50, 880, 0, 85, 86,
	830, 831, 832, 65, 0, 2259, 881, 1, 3, 71,
	75, 0, 0, 0, 58, 1498, 0, 78, 0, 0,
	884, 0, 0, 1614, 880, 880, 0, 126, 127, 0,
	0, 0, -2, 130, -2, 159, 160, 161, 0, 166,
	607, 526, 578, 524, 563, -2, 512, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 529,
	401, 401, 0, 0, -2, 512, 512, 512, 1616, 0,
	0, 0, 560, 463, 401, 401, 401, 0, 401, 401,
	401, 401, 0, 0, 401, 401, 401, 401, 401, 401,
	401, 401, 401, 401, 401, 401, 401, 401, 401, 401,
	401, 1516, 165, 1632, 1629, 1630, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 0, 1608, 0, 720,
	982, 0, 876, 877, 0, 786, 786, 0, 786, 786,
	786, 786, 0, 0, 0, 734, 0, 0, 0, 0,
	783, 0, 750, 751, 0, 783, 0, 757, 789, 0,
	0, 764, 786, 786, 767, 2262, 0, 2262, 2262, 1599,
	0, 780, 778, 792, 793, 42, 796, 799, 800, 801,
	802, 805, 0, 816, 819, 1625, 1626, 0, 821, 826,
	843, 844, 0, 45, 1142, 0, 1006, 0, 1017, -2,
	1028, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 0,
	0, 0, 0, 1058, 1059, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 0, 1989, 1460, 0, 0, 1422,
	1422, 1158, 1422, 1422, 1424, 1424, 1424, 1842, 1981, 1990,
	2168, 1803, 1809, 1810, 1811, 2114, 2115, 2116, 2117, 2206,
	2207, 2211, 1905, 1798, 2181, 2182, 0, 2258, 1942, 1950,
	1951, 1975, 2077, 2191, 1821, 1970, 2040, 1902, 1924, 1925,
	2058, 2059, 1946, 1947, 1928, 2120, 2122, 2138, 2139, 2124,
	2126, 2135, 2141, 2146, 2125, 2137, 2142, 2155, 2159, 2162,
	2163, 2164, 2132, 2130, 2143, 2147, 2149, 2151, 2157, 2160,
	2133, 2131, 2144, 2148, 2150, 2152, 2158, 2161, 2119, 2123,
	2127, 2136, 2154, 2134, 2153, 2128, 2140, 2145, 2156, 2129,
	2121, 1940, 1943, 1931, 1932, 1934, 1936, 1941, 1948, 1954,
	1933, 1953, 1952, 0, 1929, 1930, 1935, 1945, 1949, 1937,
	1938, 1939, 1944, 1955, 1996, 1995, 1994, 2039, 1966, 2038,
	0, 0, 0, 0, 0, 1792, 1847, 1848, 2165, 1344,
	1345, 1346, 1347, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 1473, 1474, 44, 1141, 1595, 1424, 1424, 1424,
	1424, 1424, 1424, 1080, 1081, 1082, 1083, 1084, 1110, 1111,
	1117, 1118, 2053, 2054, 2055, 2056, 1885, 2201, 1894, 1895,
	2035, 2036, 1907, 1908, 2232, 2233, -2, -2, -2, 232,
	233, 234, 235, 236, 237, 238, 239, 0, 1846, 2179,
	2180, 228, 0, 0, 296, 293, 294, 295, 1124, 1125,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 298, 299, 2261, 0, 853, 0, 0, 0,
	0, 0, 0, 1637, 1638, 1498, 0, 1490, 1489, 63,
	0, 880, -2, 0, 0, 0, 0, 47, 0, 52,
	939, 883, 77, 76, 1538, 1541, 0, 0, 0, 59,
	1499, 67, 69, 1500, 0, 885, 886, 0, 915, 919,
	0, 0, 0, 1615, 1614, 1614, 102, 0, 0, 103,
	123, 124, 125, 0, 0, 109, 110, 1601, 1602, 43,
	0, 0, 177, 178, 0, 1098, 428, 0, 173, 0,
	421, 360, 0, 1516, 0, 0, 0, 0, 0, 880,
	0, 1609, 154, 155, 162, 163, 164, 401, 401, 401,
	575, 0, 0, 165, 165, 533, 534, 535, 0, 0,
	-2, 426, 0, 513, 0, 0, 415, 415, 419, 417,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 668, 0, 402, 0, 573, 574, 464, 0, 0,
	0, 0, 0, 0, 0, 0, 1617, 1618, 0, 550,
	551, 0, 0, 0, 401, 401, 0, 0, 0, 0,
	401, 401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 1529, 0, 0, 0, -2, 0, 712, 0, 0,
	0, 1610, 1610, 0, 719, 0, 0, 0, 724, 0,
	0, 725, 0, 783, 783, 781, 782, 727, 728, 729,
	730, 786, 0, 0, 410, 411, 412, 783, 786, 0,
	786, 786, 786, 786, 783, 783, 783, 786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2262, 789, 786,
	0, 758, 0, 759, 760, 761, 762, 765, 766, 768,
	2263, 2264, 1627, 1628, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 2262, 2262, 772, 776, 1600, 798,
	804, 806, 807, 0, 0, 817, 820, 837, 49, 1893,
	825, 49, 827, 828, 829, 855, 856, 861, 0, 0,
	0, 0, 867, 868, 869, 0, 0, 872, 873, 874,
	0, 0, 0, 0, 0, 1004, 0, 0, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1029, 1030, 0, 0, 0, 1054,
	1055, 1056, 1057, 1060, 0, 1071, 0, 1073, 1469, -2,
	0, 0, 0, 1065, 1066, 0, 0, 0, 1620, 1620,
	0, 0, 0, 1461, 0, 0, 1156, 0, 1157, 1159,
	1160, 1161, 0, 1162, 1163, 890, 890, 890, 890, 890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	890, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1620, 0, 0,
	1620, 1620, 0, 0, 220, 221, 222, 223, 224, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 240, 241, 242, 243, 244,
	245, 300, 246, 247, 248, 1141, 0, 0, 0, 46,
	845, 846, 0, 965, 1620, 0, 0, 896, 0, 1635,
	57, 66, 68, 1498, 61, 1498, 0, 900, 0, 913,
	-2, -2, 901, 902, 906, 907, 908, 909, 910, 54,
	2260, 55, 0, 74, 0, 48, 0, 0, 1539, 0,
	1542, 0, 0, 0, 374, 1546, 0, 0, 1491, 1492,
	1495, 0, 916, 1987, 920, 0, 922, 923, 0, 0,
	100, 0, 981, 0, 0, 0, 111, 0, 113, 114,
	0, 0, 0, 385, 1603, 1604, 1605, -2, 408, 0,
	385, 369, 308, 309, 310, 360, 312, 360, 360, 360,
	360, 374, 374, 374, 374, 343, 344, 345, 346, 347,
	0, 0, 329, 360, 360, 360, 360, 350, 351, 352,
	353, 354, 355, 356, 357, 313, 314, 315, 316, 317,
	318, 319, 320, 321, 362, 362, 362, 362, 362, 366,
	366, 0, 1099, 0, 389, 0, 1495, 0, 0, 1529,
	1612, 1622, 0, 0, 0, 1612, 132, 0, 0, 0,
	576, 618, 527, 564, 577, 0, 530, 531, -2, 0,
	0, 512, 0, 514, 0, 409, 0, -2, 0, 419,
	0, 415, 419, 416, 419, 407, 420, 554, 555, 556,
	0, 558, 559, 648, 951, 0, 0, 0, 0, 0,
	654, 655, 656, 0, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 565, 566, 567, 568, 569, 570,
	571, 572, 0, 0, 0, 0, 514, 0, 561, 0,
	0, 465, 466, 467, 0, 0, 470, 471, 472, 473,
	0, 0, 476, 477, 478, 968, 969, 479, 480, 505,
	506, 507, 481, 482, 483, 484, 485, 486, 487, 499,
	500, 501, 502, 503, 504, 488, 489, 490, 491, 492,
	493, 496, 0, 147, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1610, 0, 0, 0, 0, 899, 983, 1633, 1634,
	721, 0, 0, 787, 788, 0, 413, 414, 786, 786,
	731, 773, 0, 786, 735, 774, 736, 738, 737, 739,
	752, 753, 786, 742, 784, 785, 743, 744, 745, 746,
	747, 748, 749, 769, 754, 755, 756, 790, 0, 794,
	795, 770, 771, 0, 0, 810, 811, 0, 818, 840,
	838, 839, 841, 833, 834, 835, 836, 0, 842, 0,
	0, 858, 96, 863, 864, 865, 866, 878, 871, 1143,
	1001, 1002, 1003, 0, 1005, 1011, 0, 1126, 1128, 1009,
	1010, 1013, 0, 0, 0, 1007, 1018, 1138, 1139, 1140,
	0, 0, 0, 0, 0, 1022, 1026, 1031, 1032, 1033,
	1034, 1035, 0, 1036, 0, 1039, 1040, 1041, 1042, 1043,
	1044, 1050, 1437, 1438, 1439, 1069, 301, 302, 0, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1142, 0,
	1621, 0, 0, 0, 1467, 1464, 0, 0, 0, 1423,
	1425, 0, 0, 0, 891, 892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 0, 0, 1440, 0, 0, 0, 0, 0, 1460,
	0, 1075, 1076, 1077, 0, 0, 0, 0, 0, 0,
	1202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1348, 1349, 1350, 1351,
	41, 0, 0, 0, 0, 0, 0, 0, 1471, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1373, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 848, 849, 851, 0, 985,
	0, 966, 0, 0, 854, 0, 895, 0, 898, 60,
	62, 904, 905, 0, 924, 0, 903, 56, 51, 0,
	0, 943, 1540, 1543, 1544, 374, 1566, 0, 383, 383,
	380, 1501, 1502, 0, 1494, 1496, 1497, 79, 921, 917,
	0, 999, 0, 0, 980, 0, 927, 929, 930, 931,
	963, 0, 934, 935, 0, 0, 0, 0, 0, 98,
	982, 104, 0, 112, 0, 0, 117, 118, 105, 106,
	107, 108, 0, 607, -2, 460, 179, 181, 182, 183,
	174, -2, 372, 370, 371, 311, 374, 374, 337, 338,
	339, 340, 341, 342, 0, 0, 330, 331, 332, 333,
	322, 0, 323, 324, 325, 364, 0, 326, 327, 0,
	328, 427, 0, 1503, 390, 391, 393, 401, 0, 396,
	397, 0, 401, 401, 0, 422, 423, 0, 1495, 1520,
	0, 0, 0, 1623, 1622, 1622, 1622, 0, 167, 168,
	169, 170, 171, 172, 643, 0, 0, 619, 641, 642,
	165, 0, 0, 175, 516, 515, 0, 675, 0, 425,
	0, 0, 419, 419, 404, 405, 557, 0, 0, 650,
	651, 652, 653, 0, 0, 0, 543, 454, 0, 544,
	545, 514, 516, 0, 0, 385, 468, 469, 474, 475,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 592, 593, 594, 597, 599, 518, 603,
	605, 596, 598, 600, 518, 604, 606, 1517, 1518, 1519,
	0, 0, 713, 0, 0, 451, 94, 1611, 718, 722,
	723, 783, 741, 775, 783, 733, 740, 763, 808, 809,
	814, 822, 823, 824, 862, 0, 0, 0, 0, 870,
	0, 0, 1012, 1127, 1129, 1014, 1015, 1016, 1019, 0,
	1023, 1027, 0, 0, 0, 0, 0, 1074, 1072, 1471,
	0, 0, 0, 1123, 0, 0, 1146, 1147, 0, 0,
	0, 0, 1465, 0, 0, 1154, 0, 1426, 1104, 0,
	0, 0, 0, 0, 1104, 1104, 1104, 1104, 1104, 1104,
	1104, 1104, 1104, 1104, 1489, 1181, 0, 0, 0, 0,
	0, 1186, 1187, 1188, 1189, 1190, 0, 1192, 0, 1193,
	0, 0, 0, 0, 1200, 1201, 1203, 0, 0, 1206,
	1207, 0, 1209, 0, 1211, 1212, 1213, 1214, 1215, 1216,
	0, 1218, 0, 1220, 1221, 1222, 0, 1224, 0, 1226,
	1227, 0, 1229, 0, 1231, 0, 1234, 0, 1237, 0,
	1240, 0, 1243, 0, 1246, 0, 1249, 0, 1252, 0,
	1255, 0, 1258, 0, 1261, 0, 1264, 0, 1267, 0,
	1270, 0, 1273, 0, 1276, 0, 1279, 1280, 1281, 0,
	1283, 0, 1285, 0, 1288, 1289, 0, 1291, 0, 1294,
	0, 1297, 0, 0, 1298, 0, 0, 0, 1302, 0,
	0, 0, 0, 1311, 1312, 1313, 1314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 1326, 1327,
	1328, 1329, 1330, 0, 1332, 0, 1105, 0, 0, 1105,
	0, 0, 0, 0, 0, 1144, 1620, 0, 1427, 1428,
	1429, 1430, 1431, 0, 0, 0, 0, 0, 0, 1371,
	1372, 1374, 0, 0, 1377, 0, 1379, 0, 1594, 847,
	850, 852, 937, 986, 987, 0, 0, 0, 0, 967,
	1619, 893, 894, 897, 945, 0, 1475, 0, 0, 924,
	999, 914, 925, 0, 913, 53, 940, 0, 1548, 1547,
	1560, 1573, 383, 383, 377, 378, 384, 379, 381, 382,
	1493, 0, 1498, 0, 1587, 0, 0, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 970, 0, 0, 973,
	0, 0, 0, 0, 964, 935, 0, 936, 0, -2,
	0, 0, 92, 93, 0, 0, 0, 115, 116, 0,
	0, 122, 386, 387, 156, 165, 462, 180, 435, 0,
	0, 307, 373, 334, 335, 336, 0, 358, 0, 0,
	0, 0, 456, 128, 1507, 1506, 401, 401, 392, 0,
	395, 0, 0, 0, 1624, 361, 424, 0, 146, 0,
	0, 0, 0, 0, 152, 613, 0, 0, 620, 0,
	0, 0, 525, 0, 536, 537, 0, 647, -2, 709,
	389, 0, 403, 406, 952, 0, 0, 538, 0, 541,
	542, 455, 516, 547, 548, 562, 549, 497, 498, 495,
	0, 0, 1530, 1531, 1536, 1534, 1535, 133, 583, 585,
	589, 584, 588, 0, 0, 0, 520, 0, 520, 581,
	0, 451, 1503, 0, 717, 452, 453, 786, 786, 857,
	97, 0, 860, 0, 0, 0, 0, 1020, 1024, 1037,
	1038, 1432, 1458, 360, 360, 1445, 360, 366, 1448, 360,
	1450, 360, 1453, 360, 1456, 1457, 0, 0, 1067, 0,
	0, 0, 0, 1153, 1468, 0, 0, 1164, 1103, 1104,
	1104, 1104, 1104, 1104, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1462, 0, 0, 0, 1185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	145, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1098,
	1102, 0, 1106, 1107, 0, 0, 1334, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 1472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 988, 995,
	0, 995, 0, 995, 0, 0, 0, 1606, 1607, 1476,
	1477, 999, 1478, 0, 926, 911, 944, 1566, 0, 1559,
	0, -2, 1568, 0, 0, 0, 1574, 375, 376, 918,
	80, 1000, 83, 0, 1587, 1596, 0, 1584, 1589, 1591,
	0, 0, 0, 1580, 0, 999, 928, 959, 961, 0,
	956, 971, 972, 974, 0, 976, 0, 978, 979, 939,
	933, 0, 100, 0, 999, 999, 99, 0, 984, 119,
	120, 121, 461, 184, 189, 0, 0, 0, 194, 0,
	196, 0, 0, 0, 201, 202, 401, 401, 436, 0,
	304, 306, 0, 0, 187, 374, 0, 374, 0, 365,
	367, 0, 437, 457, 1504, 1505, 0, 0, 394, 398,
	399, 400, 0, 1613, 148, 0, 0, 0, 616, 0,
	644, 0, 0, 0, 0, 0, 0, 176, 517, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 0, 401,
	0, 0, 0, 401, 401, 401, 0, 701, 388, 0,
	0, 672, 669, 539, 0, 218, 219, 226, 227, 229,
	0, 0, 0, 0, 0, 546, 939, 1521, 1522, 1523,
	0, 1533, 1537, 136, 0, 0, 0, 0, 591, 595,
	601, 0, 519, 602, 714, 715, 716, 95, 726, 732,
	859, 879, 1008, 1021, 1025, 0, 0, 0, 0, 1459,
	1443, 374, 1446, 1447, 1449, 1451, 1452, 1454, 1455, 1063,
	1064, 1068, 0, 1150, 0, 1152, 0, 1466, 0, 1165,
	1166, 1167, 1168, 1169, 1498, 0, 0, 0, 1184, 0,
	0, 0, 1195, 1194, 1196, 0, 1198, 1199, 1204, 1205,
	1208, 1210, 1217, 1219, 1223, 1225, 1228, 1230, 1232, 0,
	1235, 0, 1238, 0, 1241, 0, 1244, 0, 1247, 0,
	1250, 0, 1253, 0, 1256, 0, 1259, 0, 1262, 0,
	1265, 0, 1268, 0, 1271, 0, 1274, 0, 1277, 0,
	1282, 1284, 0, 1287, 1290, 1292, 0, 1295, 0, 1299,
	0, 1301, 1303, 1304, 0, 0, 0, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1331, 0, 1096,
	1333, 1108, 1109, 1114, 1336, 0, 0, 0, 1339, 0,
	0, 0, 1343, 1145, 1354, 0, 1359, 0, 0, 1365,
	0, 1369, 0, 1375, 1376, 1378, 1380, 0, 0, 0,
	0, 0, 0, 0, 965, 946, 64, 1478, 1482, 0,
	913, 1553, 1551, 1551, 1561, 1562, 0, 0, 1569, 0,
	0, 0, 0, 84, 0, 0, 1575, 0, 0, 1592,
	0, 0, 0, 0, 101, 1489, 953, 960, 0, 0,
	954, 0, 955, 975, 977, 932, 0, 999, 999, 90,
	91, 0, 190, 0, 192, 0, 195, 197, 198, 199,
	205, 206, 207, 200, 0, 0, 303, 305, 0, 0,
	348, 359, 349, 0, 0, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 939, 149, 150, 151, 608, 0, 618,
	0, 941, 0, 611, 0, 528, 0, 0, 0, 401,
	401, 401, 0, 0, 0, 0, 686, 0, 0, 649,
	0, 657, 0, 0, 0, 230, 231, 0, 1532, 582,
	0, 134, 135, 0, 0, 587, 521, 522, 1061, 0,
	0, 0, 1062, 1444, 0, 0, 0, 0, 0, 1463,
	0, 0, 0, 0, 1191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1307, 0, 0,
	0, 638, 639, 0, 1383, 1101, 1489, 0, 1105, 1115,
	1116, 0, 1105, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 996, 0, 0, 0, 947,
	948, 0, 0, 0, 985, 1482, 1487, 0, 0, 912,
	1556, 0, 1549, 1552, 1550, 1563, 0, 0, 1570, 0,
	1572, 0, 1597, 1598, 1590, 1585, 0, 1579, 1582, 1584,
	1581, 1498, 957, 0, 962, 0, 1489, 89, 0, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	204, 0, 0, 363, 368, 0, 0, 0, 609, 0,
	942, 621, 612, 0, 699, 0, 703, 0, 0, 0,
	706, 707, 708, 685, 0, 689, 429, 673, 670, 671,
	540, 0, 137, 138, 0, 0, 0, 1433, 0, 1436,
	1148, 1151, 1149, 0, 1180, 1182, 1183, 1441, 1442, 1197,
	1233, 1236, 1239, 1242, 1245, 1248, 1251, 1254, 1257, 1260,
	1263, 1266, 1269, 1272, 1275, 1278, 1286, 1293, 1296, 1300,
	1305, 0, 1308, 0, 0, 1309, 0, 640, 1092, 0,
	0, 1112, 1113, 0, 1338, 1340, 1341, 1342, 1355, 0,
	1360, 1361, 0, 1366, 0, 1370, 1381, 0, 990, 997,
	998, 0, 993, 0, 994, 0, 938, 1487, 82, 1488,
	1485, 0, 1483, 1480, 1545, 0, 1554, 1555, 1564, 1565,
	1571, 0, 0, 1584, 0, 1578, 87, 0, 0, 0,
	1498, 191, 0, 210, 0, 617, 0, 620, 610, 697,
	698, 0, 710, 702, 704, 705, 687, -2, 1524, 0,
	0, 0, 590, 1434, 0, 0, 1310, 0, 636, 637,
	1100, 1093, 0, 1078, 1079, 1097, 1335, 1337, 0, 0,
	0, 989, 949, 950, 991, 992, 81, 0, 1484, 1120,
	0, 1479, 0, 1557, 1558, 1588, 0, 1577, 1583, 958,
	965, 0, 88, 442, 435, 1524, 0, 0, 0, 690,
	691, 692, 693, 694, 695, 696, 579, 1526, 139, 140,
	0, 509, 510, 511, 133, 0, 1155, 1306, 1094, 0,
	0, 0, 0, 0, 1356, 0, 1362, 0, 1367, 0,
	1486, 0, 0, 1481, 1586, 622, 0, 624, 0, -2,
	430, 443, 0, 185, 211, 212, 0, 0, 215, 216,
	217, 208, 209, 129, 0, 0, 711, 0, 1527, 1528,
	0, 136, 0, 0, 1085, 1086, 1087, 1088, 1090, 0,
	0, 0, 0, 1121, 1098, 623, 0, 0, 385, 0,
	633, 431, 432, 0, 438, 439, 440, 441, 213, 214,
	645, 0, 0, 508, 586, 1435, 0, 0, 1357, 0,
	1363, 0, 1368, 0, 625, 626, 634, 0, 433, 0,
	434, 0, 0, 0, 614, 0, 645, 1525, 1095, 1089,
	1091, 0, 0, 1119, 0, 635, 631, 444, 446, 447,
	0, 0, 445, 646, 615, 1358, 1364, 0, 448, 449,
	450, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 150, 3, 3, 3, 178, 170, 3,
	91, 93, 175, 173, 92, 174, 228, 176, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 740,
	158, 157, 159, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 180, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 181,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 147, 148, 149, 151, 152, 153, 154, 155, 156,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	171, 172, 177, 179, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:622
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:635
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:640
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:685
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:697
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:701
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:707
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:713
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:719
		{
			yyLOCAL = &With{CTEs: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:723
		{
			yyLOCAL = &With{CTEs: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:732
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:738
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:742
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:748
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:802
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:822
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:840
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:854
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:873
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:877
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:882
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:888
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:894
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:915
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), yyDollar[8].groupByUnion(), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:919
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), yyDollar[7].groupByUnion(), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:937
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:949
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:953
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:973
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:983
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:987
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:997
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1007
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1016
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1020
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1026
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1032
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1042
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1046
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1050
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1054
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1060
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1064
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1068
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1074
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1078
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1084
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1088
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1094
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1098
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1102
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.str = RepeatableReadStr
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.str = ReadCommittedStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = SerializableStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1126
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1130
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1134
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1140
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1146
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1153
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1162
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1166
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1173
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1177
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1182
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1192
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1197
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1202
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1208
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1228
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1234
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1250
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1264
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1269
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1274
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1279
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1286
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1293
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1304
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1321
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1325
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1329
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1347
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1351
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1377
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1381
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1387
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1391
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1397
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1407
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1412
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1421
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1434
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1445
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1454
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = ""
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1501
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1506
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1511
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1544
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1553
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1559
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1563
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1567
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1573
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1577
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1582
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1586
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1591
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1596
		{
			yyDollar[1].columnTypeOptionsUnion().Null = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1601
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1606
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1611
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(false)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1616
		{
			yyDollar[1].columnTypeOptionsUnion().Invisible = ptr.Of(true)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1630
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1634
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1638
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1685
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1689
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1693
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1697
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1701
		{
			yyLOCAL = NewBitLiteral("0b" + yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1705
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1709
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1713
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1717
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1721
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1725
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1729
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = Armscii8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = ASCIIStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = Big5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = UBinaryStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Cp1250Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Cp1251Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = Cp1256Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Cp1257Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Cp850Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Cp852Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Cp866Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Cp932Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Dec8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = EucjpmsStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = EuckrStr
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = Gb18030Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = Gb2312Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = GbkStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = Geostd8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = GreekStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = HebrewStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = Hp8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = Keybcs2Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = Koi8rStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = Koi8uStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = Latin1Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = Latin2Str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = Latin5Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = Latin7Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = MacceStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = MacromanStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.str = SjisStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.str = Swe7Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.str = Tis620Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = Ucs2Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = UjisStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = Utf16Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.str = Utf16leStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = Utf32Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = Utf8mb3Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.str = Utf8mb4Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = Utf8mb3Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1922
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1926
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1930
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1940
		{
			yyLOCAL = AppendString(yyDollar[1].exprUnion(), yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1964
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1970
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1974
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1978
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1982
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtrUnion()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtrUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *int
//line sql.y:2227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *int
//line sql.y:2231
		{
			yyLOCAL = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2240
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2270
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2365
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2370
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2374
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2380
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2394
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2419
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2439
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2443
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2451
		{
			yyLOCAL = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = yyDollar[2].str
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = yyDollar[1].str
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2518
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2528
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtrUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2532
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2538
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2542
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2548
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2552
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2558
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2572
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2589
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2595
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2601
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2611
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2615
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2620
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2646
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2650
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2658
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2690
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2699
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2705
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2719
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2723
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2917
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2935
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2939
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2948
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2952
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2964
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2970
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(false)}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3024
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: ptr.Of(true)}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3032
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3036
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3040
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3044
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3048
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3052
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3056
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3060
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3064
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3068
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3072
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3076
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3080
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3084
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3088
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3092
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3096
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3100
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3104
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3110
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3120
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3124
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3128
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3132
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3136
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3140
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3144
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3148
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3152
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3156
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3362
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3370
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3390
		{
			yyLOCAL = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3401
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3410
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3418
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3427
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3434
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3442
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3446
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3455
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3466
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3470
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3475
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3479
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3484
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3488
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3494
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3500
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3506
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3516
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3520
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3526
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3532
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3538
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3544
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3558
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3562
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3568
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3574
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3580
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3584
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3588
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3594
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3598
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3603
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3607
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3612
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3616
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3622
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3626
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3630
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3634
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3638
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3642
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3646
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3650
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3654
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3658
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3662
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3666
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3670
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3674
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3678
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3682
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3686
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3690
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3694
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3698
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3702
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3706
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3725
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3735
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3744
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3749
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3754
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3759
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3764
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3769
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3774
		{
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3779
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3784
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3790
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3796
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3806
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3811
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3815
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3820
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3825
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3830
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3835
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3840
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = ptr.Of(yyDollar[2].integerUnion())
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3845
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3852
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3859
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3866
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3878
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3884
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3890
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3896
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3902
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3908
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3914
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3926
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3948
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3952
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3962
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Analyze{IsLocal: yyDollar[2].booleanUnion(), Table: yyDollar[4].tableName}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4047
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4051
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4055
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4059
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4071
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4083
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4087
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4091
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4099
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4115
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4119
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4131
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4139
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4143
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4186
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4190
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4194
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4198
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4202
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4206
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4210
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = "extended "
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4234
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4238
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4258
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4262
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4268
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4272
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4276
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4286
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4324
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4339
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4354
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4363
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4369
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4379
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4383
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4387
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4394
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4400
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4409
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4414
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4420
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4426
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4431
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4435
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4439
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4443
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4447
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4452
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4456
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4460
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4464
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4484
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4488
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4492
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4519
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4531
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4535
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4541
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4547
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4551
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4557
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4563
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4567
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4571
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4575
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4581
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4593
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4597
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4601
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4605
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4609
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4613
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4657
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			setAllowComments(yylex, true)
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4710
		{
			yyVAL.strs = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			yyVAL.str = SQLCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4746
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4764
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4774
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4783
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4789
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4793
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4798
		{
			yyVAL.strs = nil
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4812
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = SQLCacheStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = DistinctStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = DistinctStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = StraightJoinHint
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4848
		{
			createAliasForEmpty(yyDollar[2].selectExprUnion(), yylex.(*Tokenizer).buf[yyDollar[1].integerUnion():yyDollar[3].integerUnion()])
			yyLOCAL = SelectExprs{yyDollar[2].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4853
		{
			createAliasForEmpty(yyDollar[4].selectExprUnion(), yylex.(*Tokenizer).buf[yyDollar[3].integerUnion():yyDollar[5].integerUnion()])
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[4].selectExprUnion())
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4859
		{
			yyLOCAL = yylex.(*Tokenizer).PrevPos
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4864
		{
			yyLOCAL = yylex.(*Tokenizer).Pos
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4870
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4874
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4878
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4882
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4887
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4902
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4907
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4911
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4917
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4923
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4937
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4941
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4945
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4949
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4955
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4959
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4965
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4969
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4978
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4987
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4993
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4997
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:5003
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5007
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5013
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5017
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5021
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5025
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5031
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5035
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5048
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5052
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5056
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5060
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5066
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5068
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5072
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5078
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5080
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5083
		{
			yyVAL.empty = struct{}{}
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5085
		{
			yyVAL.empty = struct{}{}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5088
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5096
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5109
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5113
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5123
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5129
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5133
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5137
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5141
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5147
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5151
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5161
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5165
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5171
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5175
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5181
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5190
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5196
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5200
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5206
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5210
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5214
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5218
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5222
		{
			yyLOCAL = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5226
		{
			yyLOCAL = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5231
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5235
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5239
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5243
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5272
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5276
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5280
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5284
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5288
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5294
		{
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5302
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5306
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5310
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5314
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5318
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: Any, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5322
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Modifier: All, Right: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5326
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5340
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5344
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5356
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5360
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5372
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5378
		{
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5431
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5435
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5439
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5513
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5521
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5525
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5545
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5555
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5559
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5565
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5569
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5575
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5579
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5583
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5589
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5593
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5600
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5604
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5608
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5612
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5616
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5622
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5626
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5630
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5634
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5638
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5642
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5646
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5655
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5661
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5665
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5674
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5679
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5683
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5689
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5695
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5699
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5705
		{
			yyLOCAL = yyDollar[1].overClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5721
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5727
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5731
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5737
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5741
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5747
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5751
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5763
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5769
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5773
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5779
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5785
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5789
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5795
		{
			yyVAL.str = ""
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5799
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5805
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5809
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5816
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5820
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5824
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5828
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5834
		{
			yyLOCAL = yyDollar[1].comparisonExprOperatorUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5838
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5844
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5848
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5852
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5856
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5860
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5864
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5870
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5874
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5878
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5885
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5891
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5895
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5931
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5935
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5939
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5943
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5947
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5959
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &CountStar{OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6078
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6082
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6086
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6110
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6114
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6118
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6122
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6126
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6130
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6134
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6138
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6142
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6146
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6150
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6154
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6190
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6194
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6198
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6202
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6206
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6210
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6214
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6218
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6222
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6226
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6230
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6234
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6238
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6242
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6246
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6250
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6254
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6282
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6290
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6294
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6298
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6302
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6306
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6310
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6322
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6326
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6330
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6350
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6354
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6358
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6362
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6366
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6370
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6374
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6378
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6390
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6394
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6398
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6402
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6406
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6410
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6414
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6418
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6422
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6426
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6430
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6434
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6438
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6442
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6446
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6450
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6454
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6458
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6462
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6466
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6470
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6474
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6478
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6482
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6486
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6490
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6494
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6498
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6510
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6514
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6518
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6522
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6526
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6530
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6534
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6538
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6542
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6546
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6550
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6554
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6558
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6562
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6566
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6570
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6578
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6582
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6586
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6590
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6594
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6598
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6610
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6614
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6618
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6622
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6626
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6630
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6634
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6638
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6642
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6646
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6650
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6654
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6686
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6728
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6732
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6736
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6740
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6755
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6776
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6780
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6784
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6788
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6801
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6805
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6809
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6813
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6820
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6824
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6830
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6834
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6838
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6842
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6848
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6852
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6856
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6860
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6864
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6868
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6872
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6877
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6881
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6887
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6891
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6895
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6899
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6903
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6915
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6951
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6955
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6959
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6963
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6969
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6973
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6977
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6981
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6985
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6989
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6993
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6997
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7001
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7005
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7009
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7013
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7017
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7021
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7025
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7029
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7033
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:7037
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7047
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7051
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7055
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7065
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7069
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7073
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7077
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7081
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7087
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7091
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7095
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7099
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7103
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7109
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7113
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7117
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7127
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7131
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7137
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7141
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7145
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7149
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7153
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7159
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7163
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7167
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7175
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7179
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7183
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7187
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7191
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7195
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7201
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7205
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7214
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7219
		{
			yyVAL.str = string("")
		}
	case 1463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7223
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7229
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7233
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7239
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7248
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7254
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7258
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7262
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7266
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7272
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7276
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7282
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7291
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7295
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *GroupBy
//line sql.y:7304
		{
			yyLOCAL = &GroupBy{Exprs: yyDollar[3].exprsUnion(), WithRollup: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7309
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7313
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7319
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7323
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7329
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7335
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7339
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7348
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7357
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7363
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7369
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7373
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7379
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7384
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7388
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7392
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7401
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7407
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7411
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7415
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7424
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7428
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7432
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7436
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7443
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7447
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7451
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7455
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7461
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7465
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7469
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7473
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7478
		{
			yyVAL.str = ""
		}
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7482
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7486
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7490
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7495
		{
			yyVAL.str = ""
		}
	case 1521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7499
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7505
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7509
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7514
		{
			yyVAL.str = ""
		}
	case 1525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7518
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = "cascaded"
		}
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7527
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7531
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7540
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7546
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7552
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7558
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7567
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7571
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7576
		{
			yyVAL.str = ""
		}
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7580
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7586
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7590
		{
			yyLOCAL = ForUpdateLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7594
		{
			yyLOCAL = ForUpdateLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7598
		{
			yyLOCAL = ForShareLock
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7602
		{
			yyLOCAL = ForShareLockNoWait
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7606
		{
			yyLOCAL = ForShareLockSkipLocked
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7610
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7616
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7620
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7624
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7629
		{
			yyVAL.str = ""
		}
	case 1549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7633
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7637
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7642
		{
			yyVAL.str = ""
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7646
		{
			yyVAL.str = " header"
		}
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7651
		{
			yyVAL.str = ""
		}
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7655
		{
			yyVAL.str = " manifest on"
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7659
		{
			yyVAL.str = " manifest off"
		}
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7664
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7668
		{
			yyVAL.str = " overwrite on"
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7672
		{
			yyVAL.str = " overwrite off"
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7678
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7683
		{
			yyVAL.str = ""
		}
	case 1561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7687
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7693
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7697
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7703
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7707
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7712
		{
			yyVAL.str = ""
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7716
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7722
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7726
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7732
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7736
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7740
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7745
		{
			yyVAL.str = ""
		}
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7749
		{
			yyVAL.str = " optionally"
		}
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7762
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion(), RowAlias: yyDollar[3].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7766
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7770
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion(), RowAlias: yyDollar[6].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7774
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion(), RowAlias: yyDollar[5].rowAliasUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7778
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7784
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7788
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7792
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7796
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7805
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *RowAlias
//line sql.y:7809
		{
			yyLOCAL = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7814
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7818
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7824
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7828
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7834
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7838
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7844
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7848
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7853
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7863
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7867
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7873
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7880
		{
			yyVAL.str = "charset"
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7890
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7894
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7898
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7909
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7919
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7924
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7927
		{
			yyVAL.empty = struct{}{}
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7929
		{
			yyVAL.empty = struct{}{}
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7931
		{
			yyVAL.empty = struct{}{}
		}
	case 1619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7935
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7944
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7951
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7955
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7961
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7965
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7972
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7978
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7982
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7988
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7992
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7999
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:8005
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8011
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8015
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:8019
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8668
		{
		}
	case 2260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8673
		{
		}
	case 2261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8677
		{
			skipToEnd(yylex)
		}
	case 2262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8682
		{
			skipToEnd(yylex)
		}
	case 2263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8686
		{
			skipToEnd(yylex)
		}
	case 2264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8690
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
