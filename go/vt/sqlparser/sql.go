// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const GROUP_CONCAT = 57768
const SEPARATOR = 57769
const TIMESTAMPADD = 57770
const TIMESTAMPDIFF = 57771
const WEIGHT_STRING = 57772
const LTRIM = 57773
const RTRIM = 57774
const TRIM = 57775
const JSON_ARRAY = 57776
const JSON_OBJECT = 57777
const JSON_QUOTE = 57778
const JSON_DEPTH = 57779
const JSON_TYPE = 57780
const JSON_LENGTH = 57781
const JSON_VALID = 57782
const JSON_ARRAY_APPEND = 57783
const JSON_ARRAY_INSERT = 57784
const JSON_INSERT = 57785
const JSON_MERGE = 57786
const JSON_MERGE_PATCH = 57787
const JSON_MERGE_PRESERVE = 57788
const JSON_REMOVE = 57789
const JSON_REPLACE = 57790
const JSON_SET = 57791
const JSON_UNQUOTE = 57792
const REGEXP_INSTR = 57793
const REGEXP_LIKE = 57794
const REGEXP_REPLACE = 57795
const REGEXP_SUBSTR = 57796
const ExtractValue = 57797
const UpdateXML = 57798
const GET_LOCK = 57799
const RELEASE_LOCK = 57800
const RELEASE_ALL_LOCKS = 57801
const IS_FREE_LOCK = 57802
const IS_USED_LOCK = 57803
const MATCH = 57804
const AGAINST = 57805
const BOOLEAN = 57806
const LANGUAGE = 57807
const WITH = 57808
const QUERY = 57809
const EXPANSION = 57810
const WITHOUT = 57811
const VALIDATION = 57812
const UNUSED = 57813
const ARRAY = 57814
const BYTE = 57815
const CUME_DIST = 57816
const DESCRIPTION = 57817
const DENSE_RANK = 57818
const EMPTY = 57819
const EXCEPT = 57820
const FIRST_VALUE = 57821
const GROUPING = 57822
const GROUPS = 57823
const JSON_TABLE = 57824
const LAG = 57825
const LAST_VALUE = 57826
const LATERAL = 57827
const LEAD = 57828
const NTH_VALUE = 57829
const NTILE = 57830
const OF = 57831
const OVER = 57832
const PERCENT_RANK = 57833
const RANK = 57834
const RECURSIVE = 57835
const ROW_NUMBER = 57836
const SYSTEM = 57837
const WINDOW = 57838
const ACTIVE = 57839
const ADMIN = 57840
const AUTOEXTEND_SIZE = 57841
const BUCKETS = 57842
const CLONE = 57843
const COLUMN_FORMAT = 57844
const COMPONENT = 57845
const DEFINITION = 57846
const ENFORCED = 57847
const ENGINE_ATTRIBUTE = 57848
const EXCLUDE = 57849
const FOLLOWING = 57850
const GEOMCOLLECTION = 57851
const GET_MASTER_PUBLIC_KEY = 57852
const HISTOGRAM = 57853
const HISTORY = 57854
const INACTIVE = 57855
const INVISIBLE = 57856
const LOCKED = 57857
const MASTER_COMPRESSION_ALGORITHMS = 57858
const MASTER_PUBLIC_KEY_PATH = 57859
const MASTER_TLS_CIPHERSUITES = 57860
const MASTER_ZSTD_COMPRESSION_LEVEL = 57861
const NESTED = 57862
const NETWORK_NAMESPACE = 57863
const NOWAIT = 57864
const NULLS = 57865
const OJ = 57866
const OLD = 57867
const OPTIONAL = 57868
const ORDINALITY = 57869
const ORGANIZATION = 57870
const OTHERS = 57871
const PARTIAL = 57872
const PATH = 57873
const PERSIST = 57874
const PERSIST_ONLY = 57875
const PRECEDING = 57876
const PRIVILEGE_CHECKS_USER = 57877
const PROCESS = 57878
const RANDOM = 57879
const REFERENCE = 57880
const REQUIRE_ROW_FORMAT = 57881
const RESOURCE = 57882
const RESPECT = 57883
const RESTART = 57884
const RETAIN = 57885
const REUSE = 57886
const ROLE = 57887
const SECONDARY = 57888
const SECONDARY_ENGINE = 57889
const SECONDARY_ENGINE_ATTRIBUTE = 57890
const SECONDARY_LOAD = 57891
const SECONDARY_UNLOAD = 57892
const SIMPLE = 57893
const SKIP = 57894
const SRID = 57895
const THREAD_PRIORITY = 57896
const TIES = 57897
const UNBOUNDED = 57898
const VCPU = 57899
const VISIBLE = 57900
const RETURNING = 57901
const FORMAT = 57902
const TREE = 57903
const VITESS = 57904
const TRADITIONAL = 57905
const LOCAL = 57906
const LOW_PRIORITY = 57907
const NO_WRITE_TO_BINLOG = 57908
const LOGS = 57909
const ERROR = 57910
const GENERAL = 57911
const HOSTS = 57912
const OPTIMIZER_COSTS = 57913
const USER_RESOURCES = 57914
const SLOW = 57915
const CHANNEL = 57916
const RELAY = 57917
const EXPORT = 57918
const CURRENT = 57919
const ROW = 57920
const ROWS = 57921
const AVG_ROW_LENGTH = 57922
const CONNECTION = 57923
const CHECKSUM = 57924
const DELAY_KEY_WRITE = 57925
const ENCRYPTION = 57926
const ENGINE = 57927
const INSERT_METHOD = 57928
const MAX_ROWS = 57929
const MIN_ROWS = 57930
const PACK_KEYS = 57931
const PASSWORD = 57932
const FIXED = 57933
const DYNAMIC = 57934
const COMPRESSED = 57935
const REDUNDANT = 57936
const COMPACT = 57937
const ROW_FORMAT = 57938
const STATS_AUTO_RECALC = 57939
const STATS_PERSISTENT = 57940
const STATS_SAMPLE_PAGES = 57941
const STORAGE = 57942
const MEMORY = 57943
const DISK = 57944
const PARTITIONS = 57945
const LINEAR = 57946
const RANGE = 57947
const LIST = 57948
const SUBPARTITION = 57949
const SUBPARTITIONS = 57950
const HASH = 57951

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	627, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 739,
	235, 739,
	246, 739,
	281, 753,
	282, 753,
	-2, 741,
	-1, 60,
	237, 766,
	-2, 764,
	-1, 114,
	234, 1375,
	-2, 119,
	-1, 116,
	1, 146,
	627, 146,
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 736,
	218, 1396,
	-2, 1392,
	-1, 737,
	218, 1397,
	-2, 1393,
	-1, 813,
	59, 834,
	-2, 849,
	-1, 850,
	148, 1818,
	-2, 112,
	-1, 851,
	148, 1651,
	-2, 113,
	-1, 857,
	148, 1737,
	-2, 1369,
	-1, 1007,
	148, 1576,
	-2, 1366,
	-1, 1048,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1132,
	1, 554,
	627, 554,
	-2, 153,
	-1, 1388,
	59, 835,
	-2, 854,
	-1, 1389,
	59, 836,
	-2, 855,
	-1, 1442,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1521,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1530,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1852,
	218, 1401,
	-2, 1395,
	-1, 1944,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 1951,
	25, 174,
	-2, 176,
	-1, 2218,
	87, 39,
	-2, 891,
	-1, 2275,
	77, 94,
	87, 94,
	-2, 911,
	-1, 2343,
	602, 666,
	-2, 640,
	-1, 2496,
	49, 1336,
	-2, 1330,
	-1, 2739,
	87, 39,
	-2, 892,
	-1, 2777,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 883,
	-1, 3099,
	602, 666,
	-2, 654,
	-1, 3189,
	22, 1739,
	32, 1739,
	174, 1739,
	257, 1739,
	315, 1739,
	316, 1739,
	317, 1739,
	318, 1739,
	319, 1739,
	320, 1739,
	321, 1739,
	323, 1739,
	324, 1739,
	325, 1739,
	326, 1739,
	327, 1739,
	328, 1739,
	329, 1739,
	330, 1739,
	331, 1739,
	332, 1739,
	333, 1739,
	334, 1739,
	336, 1739,
	338, 1739,
	339, 1739,
	340, 1739,
	341, 1739,
	342, 1739,
	343, 1739,
	344, 1739,
	345, 1739,
	346, 1739,
	349, 1739,
	350, 1739,
	351, 1739,
	352, 1739,
	353, 1739,
	354, 1739,
	355, 1739,
	356, 1739,
	357, 1739,
	481, 1739,
	-2, 598,
}

const yyPrivate = 57344

const yyLast = 45352

var yyAct = [...]int{
	736, 2878, 2880, 3260, 3272, 2879, 3080, 739, 643, 3167,
	3230, 1941, 3187, 745, 1743, 2854, 2714, 738, 3229, 1445,
	3132, 3155, 1894, 2645, 2551, 1874, 2558, 3064, 3015, 2608,
	3, 1195, 2599, 2509, 3062, 1366, 2613, 2610, 2609, 2607,
	2178, 2841, 2512, 2612, 2611, 713, 37, 3052, 2628, 1876,
	806, 186, 2907, 2457, 186, 2206, 591, 186, 714, 2566,
	2011, 626, 606, 1403, 186, 828, 2627, 2510, 2748, 2513,
	630, 623, 186, 2912, 711, 2403, 2246, 2742, 712, 652,
	1914, 2630, 2768, 2497, 1144, 2233, 2507, 186, 1898, 2734,
	1974, 624, 2308, 2340, 2386, 2650, 2269, 1999, 1979, 2309,
	2042, 2310, 1930, 618, 622, 2258, 829, 155, 36, 606,
	1919, 1390, 606, 186, 606, 1010, 2225, 855, 808, 2239,
	1918, 2208, 38, 810, 1846, 814, 1813, 1739, 1749, 2020,
	2378, 1697, 1056, 1546, 1812, 1173, 1528, 1906, 1499, 2058,
	852, 1981, 141, 831, 95, 1998, 2302, 1038, 1839, 2277,
	1434, 1412, 91, 635, 1080, 1281, 96, 1921, 1370, 1043,
	1760, 1716, 1216, 1535, 1642, 1017, 1014, 1996, 1626, 1049,
	1044, 1018, 1970, 1045, 1431, 820, 1248, 1646, 1193, 1417,
	1433, 1809, 1899, 1187, 159, 1494, 1651, 1520, 815, 124,
	98, 1046, 1128, 125, 842, 818, 85, 613, 1284, 76,
	102, 97, 816, 1866, 3089, 1288, 2333, 89, 3261, 2618,
	2013, 2014, 2015, 3117, 188, 189, 190, 2842, 2596, 2013,
	2362, 2361, 2615, 2331, 2056, 2797, 119, 117, 118, 817,
	77, 836, 120, 841, 2618, 8, 126, 2834, 562, 3118,
	90, 104, 105, 822, 108, 1611, 87, 114, 1217, 3213,
	183, 87, 595, 557, 1085, 7, 6, 595, 751, 752,
	753, 1060, 1849, 614, 2394, 87, 2395, 2616, 3113, 1217,
	3112, 1011, 87, 802, 803, 804, 805, 809, 807, 813,
	751, 752, 753, 849, 1871, 1872, 1719, 1095, 2883, 2622,
	1704, 856, 2616, 1036, 830, 823, 1703, 2883, 1082, 592,
	1702, 120, 1701, 1035, 1700, 3168, 1699, 844, 845, 1682,
	1691, 1098, 1099, 1100, 2622, 1103, 1104, 1105, 1106, 3208,
	1059, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 2204, 1086,
	1089, 1090, 1101, 1034, 1033, 1032, 616, 578, 617, 188,
	189, 190, 2493, 182, 1397, 1227, 1233, 2046, 2353, 576,
	3197, 3113, 3233, 3217, 2336, 2235, 2461, 3215, 3283, 120,
	3228, 3251, 2719, 2882, 3195, 2718, 1227, 121, 1022, 143,
	715, 1027, 2882, 3201, 3202, 2044, 2356, 3065, 2179, 3216,
	164, 2568, 2569, 3214, 1709, 595, 2667, 3011, 3196, 573,
	2619, 2045, 715, 3010, 2847, 1084, 1083, 2848, 587, 78,
	3280, 78, 3165, 2100, 80, 78, 3264, 3108, 3242, 2855,
	3156, 153, 2039, 583, 3164, 2619, 3107, 142, 78, 3094,
	2402, 3192, 1509, 2249, 2684, 2286, 2370, 1902, 2285, 1990,
	2369, 2287, 2548, 2549, 1435, 1180, 1436, 1182, 161, 2205,
	162, 2547, 1131, 2393, 1223, 596, 2097, 1215, 2250, 1163,
	596, 1936, 1937, 1935, 1984, 1873, 1522, 1523, 152, 151,
	181, 800, 799, 1168, 1169, 1223, 1151, 2925, 2098, 2334,
	3081, 1152, 2554, 1190, 2298, 1179, 1181, 87, 1230, 87,
	1231, 1232, 563, 87, 565, 579, 2745, 598, 2567, 597,
	569, 595, 567, 571, 580, 572, 87, 566, 595, 577,
	2570, 595, 568, 581, 582, 585, 588, 589, 590, 586,
	584, 1151, 575, 599, 1954, 1953, 1152, 2555, 1164, 1031,
	1026, 1137, 1138, 1028, 1150, 3234, 1149, 2429, 2647, 2675,
	1157, 2673, 1692, 1693, 1694, 2242, 2243, 604, 1690, 608,
	1902, 602, 1102, 2557, 2651, 2379, 3235, 186, 2059, 186,
	2341, 2365, 186, 1140, 3041, 1127, 3042, 2552, 1170, 147,
	1524, 154, 1374, 1521, 2021, 148, 149, 3263, 1171, 1627,
	2640, 165, 1177, 1601, 2568, 2569, 1178, 1029, 2641, 1189,
	171, 2553, 606, 1197, 606, 606, 1183, 2076, 596, 2077,
	2064, 2078, 1184, 1632, 1031, 1126, 1983, 1166, 1167, 606,
	606, 1172, 2381, 1165, 2836, 1133, 3209, 2835, 2079, 1108,
	1176, 1900, 1901, 2648, 2559, 1158, 1107, 1602, 2063, 1603,
	1031, 2649, 1023, 2070, 2067, 2069, 2068, 2071, 2072, 1025,
	1024, 1209, 1069, 2061, 1067, 2995, 2832, 2024, 1147, 1377,
	1153, 1154, 1155, 1156, 2887, 2065, 37, 1915, 1222, 1219,
	1220, 1221, 1226, 1228, 1225, 1040, 1224, 1263, 1039, 1130,
	2062, 1513, 1040, 1191, 1192, 1078, 1218, 1079, 1077, 1222,
	1219, 1220, 1221, 1226, 1228, 1225, 2460, 1224, 1029, 1076,
	1263, 2567, 1075, 1074, 1073, 2430, 3088, 1218, 2332, 1072,
	1071, 1066, 2570, 2570, 596, 1030, 600, 156, 1015, 2098,
	2385, 596, 1015, 1052, 596, 3284, 1013, 3240, 1185, 3276,
	1015, 1037, 1051, 1266, 1267, 1268, 1269, 593, 1534, 1643,
	1997, 1161, 2382, 1274, 1900, 1901, 3170, 1088, 843, 2589,
	2209, 2211, 594, 1051, 2050, 1639, 1097, 1087, 1203, 1091,
	2364, 1507, 2398, 2300, 1506, 748, 1505, 3169, 3170, 2831,
	2351, 2335, 2367, 1640, 1058, 1129, 1503, 2043, 561, 2620,
	2621, 556, 1199, 1200, 748, 2112, 1058, 1264, 1265, 3169,
	1030, 748, 2624, 2746, 2041, 150, 3077, 1344, 1070, 3200,
	1068, 1270, 2784, 1364, 2620, 2621, 2377, 2764, 1058, 2376,
	186, 2282, 2795, 2796, 606, 606, 1030, 2624, 2245, 1633,
	2189, 1865, 2556, 1634, 1635, 1421, 1359, 1338, 1631, 1142,
	186, 116, 1613, 1612, 1614, 1615, 1616, 2240, 1942, 144,
	1263, 1260, 145, 3199, 3106, 1533, 2546, 825, 1188, 606,
	77, 81, 2881, 186, 1198, 1987, 1212, 3102, 606, 111,
	1286, 2881, 1287, 1380, 606, 1058, 1365, 1384, 2355, 1081,
	1381, 1290, 157, 810, 1058, 1057, 1210, 1211, 1146, 169,
	2388, 2388, 1378, 1174, 2099, 2387, 2387, 1057, 1652, 852,
	1721, 2827, 1061, 1051, 86, 1988, 86, 1063, 2758, 2060,
	86, 1064, 1062, 1986, 1722, 1261, 1262, 1720, 1636, 1057,
	1761, 1437, 2354, 86, 2210, 1051, 1054, 1055, 1213, 1015,
	1233, 177, 1065, 1048, 1052, 2422, 1761, 1382, 2126, 112,
	1365, 95, 1345, 1346, 1347, 1348, 1349, 1989, 2703, 1383,
	1148, 1160, 2324, 96, 1047, 3274, 1136, 1985, 3275, 1139,
	3273, 3243, 1162, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 1231, 1232, 1057, 1371, 1096, 176,
	178, 179, 180, 2038, 1628, 1057, 1629, 98, 1232, 1630,
	2560, 1051, 1054, 1055, 2564, 1015, 2040, 2921, 2802, 1048,
	1052, 1233, 2563, 2801, 2028, 1233, 1058, 1253, 1254, 1255,
	1256, 1258, 1257, 1259, 1260, 2122, 1368, 1255, 1256, 1258,
	1257, 1259, 1260, 1543, 1379, 1233, 1132, 1542, 1532, 1145,
	186, 807, 2036, 1385, 1495, 1402, 2565, 809, 1175, 1399,
	1069, 2561, 1067, 1653, 1504, 2033, 2562, 3134, 1907, 1908,
	856, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1235, 1427,
	1428, 3070, 1230, 2033, 1231, 1232, 3285, 606, 3236, 1530,
	2785, 2424, 2104, 2105, 2106, 1432, 1422, 1539, 1711, 1713,
	1714, 1541, 2037, 3278, 1544, 1545, 606, 606, 2121, 606,
	3135, 606, 606, 3003, 606, 606, 606, 606, 606, 606,
	2035, 2861, 1712, 2862, 3071, 3002, 1233, 1057, 1576, 1577,
	1233, 606, 1061, 1051, 1621, 186, 1582, 1063, 751, 752,
	753, 1064, 1062, 1619, 1608, 1233, 2993, 2873, 188, 189,
	190, 1233, 186, 1230, 1841, 1231, 1232, 1230, 1843, 1231,
	1232, 1397, 1249, 2681, 2872, 606, 2809, 186, 1765, 2808,
	1540, 3286, 1766, 2798, 2597, 746, 2585, 1230, 1641, 1231,
	1232, 606, 2306, 186, 3020, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1258, 1257, 1259, 1260, 2305, 1575, 1620, 186,
	1578, 1596, 1526, 1233, 847, 1993, 186, 1618, 1607, 3247,
	1397, 1622, 1606, 3245, 1397, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 606, 1519, 1605, 1536, 1536, 1397,
	1510, 1511, 1512, 1538, 3179, 1397, 3237, 1604, 606, 606,
	1548, 1594, 1549, 1588, 1551, 1553, 1579, 1585, 1557, 1559,
	1561, 1563, 1565, 1584, 1502, 1583, 186, 1233, 1230, 1537,
	1231, 1232, 1230, 1555, 1231, 1232, 1406, 3097, 1508, 1516,
	3096, 1517, 1233, 3074, 1529, 1515, 3073, 1230, 3072, 1231,
	1232, 2998, 1656, 1230, 2983, 1231, 1232, 1397, 2982, 1660,
	2920, 1662, 1663, 1664, 1665, 2918, 1586, 1587, 1669, 2869,
	1648, 2806, 1592, 1593, 606, 188, 189, 190, 2791, 2792,
	1681, 2652, 1233, 2588, 1580, 2587, 1407, 1752, 1746, 1746,
	1747, 2315, 1744, 1744, 2303, 1654, 1655, 188, 189, 190,
	1361, 1790, 606, 606, 2054, 1230, 2053, 1231, 1232, 1659,
	3177, 1397, 1897, 1717, 1644, 1879, 1666, 1667, 1668, 188,
	189, 190, 1683, 2289, 1649, 3175, 1397, 120, 1724, 1617,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1609, 1599, 1842, 1595, 1591, 1233, 1725,
	1590, 1715, 1589, 1233, 1810, 606, 1658, 1408, 1186, 1230,
	1233, 1231, 1232, 2143, 1762, 3050, 1397, 2644, 1397, 1034,
	1033, 1032, 1679, 1233, 1230, 1202, 1231, 1232, 1680, 3028,
	1850, 2135, 3027, 186, 2231, 3262, 1687, 1688, 606, 1782,
	1771, 1772, 1773, 1774, 1784, 1775, 1776, 1777, 1789, 1785,
	1778, 1779, 1786, 1787, 1788, 1780, 1781, 1783, 1718, 3224,
	1397, 2987, 186, 1868, 1230, 606, 1231, 1232, 94, 1810,
	2986, 2117, 101, 1840, 2853, 186, 188, 189, 190, 606,
	2009, 2116, 1723, 100, 186, 99, 186, 1397, 186, 186,
	606, 1233, 2342, 606, 1251, 1252, 1253, 1254, 1255, 1256,
	1258, 1257, 1259, 1260, 606, 2320, 2779, 1884, 1950, 1885,
	2757, 1233, 92, 1850, 1229, 1397, 1852, 1951, 188, 189,
	190, 852, 2007, 93, 852, 1854, 1855, 1397, 3021, 1229,
	1230, 95, 1231, 1232, 2254, 1230, 2508, 1231, 1232, 2247,
	1396, 2759, 1230, 96, 1231, 1232, 1233, 2757, 188, 189,
	190, 95, 2005, 1397, 3130, 1230, 1233, 1231, 1232, 606,
	2034, 1233, 1890, 96, 2231, 3162, 2000, 2001, 2002, 3101,
	737, 2004, 2006, 2008, 3048, 1397, 1851, 87, 1397, 2231,
	3142, 2541, 2115, 2231, 1917, 2255, 606, 2231, 3138, 2255,
	2404, 2098, 606, 1539, 1748, 3238, 1539, 2723, 1539, 1852,
	1753, 1754, 2576, 1233, 2032, 1960, 1961, 1962, 1963, 2481,
	1945, 2255, 822, 3125, 1397, 1878, 2231, 3090, 2033, 1946,
	1928, 187, 1934, 1230, 187, 1231, 1232, 187, 2113, 3045,
	1397, 2278, 607, 100, 187, 2152, 2022, 1892, 1233, 606,
	3085, 606, 187, 1230, 1976, 1231, 1232, 606, 606, 1955,
	2132, 1956, 1957, 1958, 1959, 1982, 2247, 187, 1910, 1912,
	2845, 3087, 1853, 1949, 1932, 1856, 1857, 1966, 1967, 1968,
	1969, 1933, 856, 2406, 1948, 856, 2131, 1947, 1230, 607,
	1231, 1232, 607, 187, 607, 186, 3031, 1397, 1230, 2033,
	1231, 1232, 186, 1230, 2279, 1231, 1232, 1992, 2016, 186,
	186, 2019, 2113, 186, 2281, 186, 3006, 1397, 2231, 2994,
	1889, 3205, 186, 2845, 1397, 2231, 2843, 1060, 1905, 186,
	1401, 1977, 2991, 1972, 1973, 1233, 1869, 1536, 2757, 2027,
	1991, 1995, 2030, 1695, 2031, 1230, 2003, 1231, 1232, 2416,
	2415, 2414, 2408, 1638, 2412, 186, 2407, 1429, 2405, 1042,
	606, 2033, 1397, 2410, 2047, 1041, 1977, 2026, 2029, 2025,
	3145, 1249, 2409, 2397, 2762, 1397, 2152, 1397, 2049, 2048,
	1230, 3017, 1231, 1232, 2051, 2052, 1059, 1404, 1233, 2411,
	2413, 2578, 2577, 2984, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1258, 1257, 1259, 1260, 2574, 2575, 2227, 1249, 2089,
	2090, 1245, 2932, 1246, 2092, 2574, 2573, 2646, 2731, 1397,
	2255, 1397, 94, 2093, 2113, 1397, 2057, 1247, 1261, 1262,
	1244, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1257,
	1259, 1260, 1233, 2098, 2363, 2826, 1233, 1498, 2345, 1717,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1257, 1259,
	1260, 812, 1249, 2108, 2111, 2110, 2823, 1230, 1233, 1231,
	1232, 2728, 1397, 1249, 1233, 2082, 2338, 2339, 2231, 2230,
	2113, 2804, 1233, 2690, 2109, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1258, 1257, 1259, 1260, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1258, 1257, 1259, 1260, 92, 1233, 2278,
	1498, 1497, 1233, 2689, 94, 1500, 1233, 1975, 93, 2642,
	1230, 2602, 1231, 1232, 101, 2726, 1397, 2598, 2096, 2679,
	1397, 1443, 1442, 1410, 2810, 100, 1233, 99, 2346, 87,
	186, 1233, 1971, 1965, 1718, 1233, 94, 1964, 186, 1233,
	3018, 2733, 2107, 606, 1624, 1531, 2311, 2184, 1397, 606,
	1527, 1496, 113, 2600, 1746, 2215, 2828, 2201, 1744, 1571,
	606, 1233, 2279, 1397, 1230, 2219, 1231, 1232, 1230, 2312,
	1231, 1232, 2098, 1131, 1990, 2811, 2812, 2813, 1882, 3257,
	2125, 2167, 1397, 2775, 186, 2159, 1397, 2213, 186, 1409,
	1230, 1685, 1231, 1232, 2312, 1397, 1230, 3255, 1231, 1232,
	2814, 3231, 1233, 2288, 1230, 2251, 1231, 1232, 3111, 2729,
	1572, 1573, 1574, 2141, 2701, 1233, 2769, 2770, 2697, 3036,
	37, 1233, 2687, 2772, 2594, 2593, 1233, 2592, 1567, 2271,
	1230, 2508, 1231, 1232, 1230, 2325, 1231, 1232, 1230, 2083,
	1231, 1232, 2774, 1852, 2686, 2530, 2232, 2815, 2816, 2817,
	2531, 606, 1233, 1686, 2527, 2526, 3211, 186, 1230, 1233,
	1231, 1232, 2228, 1230, 186, 1231, 1232, 1230, 3163, 1231,
	1232, 1230, 1896, 1231, 1232, 1568, 1569, 1570, 606, 2123,
	1233, 2241, 1405, 1888, 2763, 606, 2307, 1371, 2203, 1539,
	1539, 2486, 2270, 1230, 606, 1231, 1232, 2485, 2200, 3069,
	2337, 2913, 2224, 1851, 2199, 2299, 2301, 2229, 2528, 2198,
	2911, 2360, 2292, 2529, 1233, 2753, 2495, 2244, 2902, 2276,
	2901, 2359, 186, 186, 186, 186, 186, 187, 1233, 187,
	2572, 1637, 187, 2750, 1230, 2197, 1231, 1232, 1982, 2280,
	826, 2749, 2196, 186, 186, 2283, 2296, 1230, 827, 1231,
	1232, 2290, 1093, 1230, 2316, 1231, 1232, 798, 1230, 186,
	1231, 1232, 607, 2195, 607, 607, 2293, 1757, 2900, 1092,
	2186, 2187, 2304, 2660, 2532, 1233, 2264, 2265, 606, 607,
	607, 1758, 2313, 2311, 1230, 2391, 1231, 1232, 92, 1201,
	2352, 1230, 2321, 1231, 1232, 2322, 121, 2182, 2314, 93,
	1233, 94, 2358, 2317, 2318, 2755, 2326, 2327, 2328, 2498,
	2500, 2176, 1230, 92, 1231, 1232, 3270, 1233, 2501, 1519,
	94, 1907, 1908, 2590, 93, 2347, 2348, 2086, 3184, 2260,
	2263, 2264, 2265, 2261, 2421, 2262, 2266, 2357, 2075, 3086,
	606, 3013, 2571, 1842, 101, 1842, 1230, 2268, 1231, 1232,
	606, 2438, 2417, 2440, 1893, 100, 2074, 99, 2175, 2073,
	1230, 2735, 1231, 1232, 2400, 2380, 94, 834, 835, 2451,
	2452, 2453, 2454, 606, 2383, 2102, 2399, 2484, 101, 99,
	3057, 2469, 2462, 2174, 2389, 2483, 3056, 2390, 186, 100,
	100, 99, 606, 3039, 2919, 2917, 2916, 2464, 2909, 2824,
	2173, 2754, 2401, 2752, 2603, 2418, 606, 1230, 2017, 1231,
	1232, 1514, 833, 606, 606, 101, 186, 186, 186, 186,
	186, 1840, 2908, 1840, 2891, 2743, 100, 2247, 186, 3259,
	3258, 1233, 1230, 186, 1231, 1232, 186, 2469, 186, 2436,
	2227, 186, 186, 186, 2431, 2133, 1880, 1423, 2520, 1230,
	1233, 1231, 1232, 1414, 106, 107, 1398, 1400, 814, 103,
	3258, 2540, 2488, 2446, 2447, 2448, 2449, 2450, 3259, 2514,
	187, 3075, 2505, 2468, 607, 607, 2790, 2586, 1384, 2271,
	2511, 824, 88, 1, 2489, 2511, 186, 2794, 3194, 2476,
	187, 2463, 574, 2465, 1870, 1369, 1233, 3232, 3190, 606,
	2490, 2487, 2477, 2478, 2479, 3191, 2480, 606, 1610, 607,
	1600, 2856, 186, 187, 2172, 1811, 2502, 2503, 607, 1233,
	3014, 815, 2606, 2023, 607, 186, 2822, 2522, 2523, 2626,
	2525, 1980, 2533, 2171, 2542, 816, 2521, 2543, 95, 2524,
	1233, 2537, 2538, 186, 2544, 1050, 186, 2519, 146, 1233,
	96, 1943, 1944, 3158, 1395, 1391, 2661, 1233, 110, 2550,
	1648, 1233, 1008, 1230, 109, 1231, 1232, 1053, 2580, 1392,
	2582, 2581, 2605, 1233, 1159, 2018, 2846, 2297, 1952, 2170,
	1233, 1449, 1230, 1447, 1231, 1232, 1448, 1233, 2634, 1446,
	1451, 1450, 2633, 2666, 1886, 1887, 1394, 2134, 1393, 2702,
	1689, 603, 2169, 1982, 2625, 1395, 1391, 2267, 184, 1438,
	1415, 2637, 2715, 1094, 2604, 564, 606, 2579, 2055, 570,
	1392, 1275, 1684, 2168, 2482, 2284, 2583, 2584, 1230, 853,
	1231, 1232, 2162, 846, 2658, 2659, 2653, 2656, 2655, 1881,
	2161, 2217, 606, 186, 2160, 1388, 1389, 1394, 2516, 1393,
	2664, 1230, 2747, 1231, 1232, 2494, 2157, 2496, 2717, 2671,
	2234, 2499, 2663, 2156, 2492, 2721, 3068, 2910, 3143, 2294,
	2155, 1411, 1230, 2722, 1231, 1232, 2124, 1759, 1922, 2886,
	187, 1230, 1710, 1231, 1232, 1233, 628, 627, 625, 1230,
	2220, 1231, 1232, 1230, 2248, 1231, 1232, 1236, 740, 2207,
	1233, 1424, 186, 2668, 2669, 1230, 2670, 1231, 1232, 2672,
	2259, 2674, 1230, 2676, 1231, 1232, 2257, 607, 2256, 1230,
	2793, 1231, 1232, 1233, 2741, 2084, 1929, 2771, 2736, 2737,
	2767, 186, 1233, 3186, 1924, 1920, 607, 607, 2744, 607,
	2751, 607, 607, 2226, 607, 607, 607, 607, 607, 607,
	186, 636, 629, 186, 186, 186, 2756, 2766, 2776, 621,
	703, 607, 702, 606, 606, 187, 2787, 2773, 2153, 2632,
	3171, 2366, 2643, 2368, 2295, 2639, 1214, 1387, 615, 2782,
	2783, 2780, 187, 2149, 1021, 2829, 2830, 1756, 3019, 2634,
	3092, 2101, 2683, 2633, 2788, 607, 2789, 187, 2781, 1386,
	1769, 1770, 3099, 2850, 2851, 2614, 2148, 606, 606, 606,
	606, 607, 2840, 187, 2595, 2144, 2343, 1230, 2010, 1231,
	1232, 63, 2805, 41, 2807, 3063, 3131, 701, 698, 187,
	2888, 2889, 1230, 2890, 1231, 1232, 187, 2458, 2459, 3114,
	3115, 697, 3116, 1797, 610, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 607, 1230, 3207, 1231, 1232, 1205,
	840, 32, 2852, 31, 1230, 30, 1231, 1232, 607, 607,
	29, 2260, 2263, 2264, 2265, 2261, 28, 2262, 2266, 2799,
	2800, 2769, 2770, 23, 22, 21, 187, 20, 19, 25,
	18, 17, 16, 2875, 2617, 3227, 3269, 2863, 115, 186,
	50, 47, 45, 123, 122, 48, 44, 1134, 42, 2868,
	27, 26, 15, 14, 13, 12, 11, 10, 2865, 9,
	5, 4, 35, 606, 2905, 606, 1763, 34, 33, 1208,
	1764, 2833, 24, 2, 607, 2837, 2838, 2839, 2330, 2884,
	2012, 0, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 2926, 1746, 2934, 0, 0, 1744, 0, 0,
	0, 0, 607, 607, 0, 0, 2928, 37, 0, 0,
	0, 0, 0, 1837, 0, 0, 2915, 2930, 2514, 2906,
	2914, 0, 2514, 0, 0, 2922, 0, 606, 2511, 2924,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 606, 0, 0, 1398, 1867, 0, 2992,
	0, 0, 2938, 0, 0, 607, 606, 2935, 2936, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1891, 3034, 2988, 187, 3033, 2990, 0, 3016, 607, 3004,
	2989, 2996, 0, 0, 3009, 0, 0, 1746, 3037, 0,
	606, 1744, 0, 3008, 606, 606, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 607,
	0, 0, 0, 606, 187, 0, 187, 3038, 187, 187,
	607, 0, 3040, 607, 0, 3067, 3043, 0, 0, 0,
	0, 3058, 3059, 0, 607, 3079, 0, 0, 0, 3061,
	0, 3060, 0, 0, 0, 0, 0, 0, 3076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1994, 0, 2514, 606, 3082, 0, 0, 2999,
	3000, 3001, 0, 0, 0, 0, 3078, 0, 0, 0,
	186, 0, 0, 0, 0, 0, 0, 3084, 0, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 606, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 0, 0, 0,
	3103, 0, 607, 0, 3100, 0, 0, 0, 3098, 3095,
	0, 0, 0, 0, 3091, 0, 0, 0, 0, 37,
	0, 0, 0, 0, 0, 0, 606, 3109, 0, 0,
	0, 0, 0, 0, 0, 3119, 0, 0, 606, 0,
	0, 3120, 0, 0, 3121, 0, 0, 0, 0, 607,
	0, 607, 0, 0, 0, 0, 3129, 607, 607, 0,
	0, 0, 606, 606, 0, 0, 0, 0, 0, 3136,
	0, 0, 0, 0, 0, 0, 0, 3144, 0, 0,
	0, 0, 3146, 0, 3172, 3173, 606, 0, 0, 3149,
	3157, 0, 37, 3016, 3159, 187, 3154, 3151, 3150, 3148,
	186, 606, 187, 3153, 3152, 0, 2511, 0, 3141, 187,
	187, 0, 0, 187, 0, 187, 0, 0, 3182, 0,
	0, 0, 187, 0, 0, 3185, 3203, 0, 3193, 187,
	3198, 0, 0, 0, 0, 0, 3172, 3173, 3212, 0,
	0, 0, 0, 0, 606, 0, 3210, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	607, 0, 0, 0, 3221, 0, 606, 0, 3226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 606, 3241, 0, 3239, 2114,
	0, 0, 0, 2118, 2119, 2120, 0, 3250, 3252, 3249,
	3254, 1746, 3253, 2128, 0, 1744, 2129, 2130, 0, 3256,
	0, 3172, 3173, 3265, 0, 0, 0, 0, 0, 0,
	3271, 0, 0, 0, 3277, 0, 3279, 0, 0, 0,
	0, 0, 0, 2136, 2137, 2138, 2139, 2140, 0, 2142,
	0, 0, 0, 0, 2145, 2146, 0, 2147, 0, 3288,
	2150, 3034, 2151, 3289, 3290, 0, 2154, 1746, 3287, 0,
	2158, 1744, 0, 0, 2163, 2164, 2165, 2166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2177, 0, 2180,
	2181, 0, 0, 0, 0, 0, 2183, 2185, 0, 0,
	0, 0, 0, 0, 2190, 2191, 2192, 2193, 2194, 0,
	0, 0, 0, 0, 0, 0, 0, 1891, 0, 2202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 607, 0, 0, 0, 0, 0, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 619, 0, 1372,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 121, 0, 143, 0, 0,
	0, 607, 0, 0, 0, 0, 0, 187, 164, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 0, 559, 0, 607, 0, 0, 0, 153,
	0, 0, 0, 609, 607, 142, 0, 0, 0, 0,
	0, 801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 161, 0, 162, 0,
	0, 0, 187, 187, 187, 187, 187, 832, 0, 0,
	838, 0, 838, 0, 1522, 1523, 152, 151, 181, 0,
	0, 0, 1016, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 2428, 0, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2466, 2467, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 1524, 154,
	607, 1521, 0, 148, 149, 0, 0, 0, 2291, 165,
	607, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 161, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2517, 0, 181, 0, 0, 187, 0,
	0, 0, 607, 0, 0, 0, 0, 0, 0, 0,
	2535, 2536, 0, 0, 0, 0, 607, 0, 0, 0,
	0, 0, 0, 607, 607, 0, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 187, 0, 0, 187, 0, 187, 0,
	0, 187, 187, 187, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 607,
	0, 0, 0, 0, 0, 171, 0, 607, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 2662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 161, 187, 162, 2677, 2678,
	2680, 2682, 0, 150, 0, 0, 0, 0, 2688, 0,
	0, 0, 0, 2692, 2693, 2694, 2695, 181, 0, 2696,
	0, 2698, 2699, 2700, 0, 0, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 0, 0, 0, 0,
	0, 0, 0, 0, 2720, 0, 0, 144, 0, 2724,
	145, 2725, 2727, 0, 2730, 2732, 0, 0, 0, 0,
	0, 2738, 0, 0, 0, 0, 607, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 607, 187, 0, 0, 2760, 2761, 0, 0,
	2765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2777, 2778,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 177,
	0, 0, 0, 0, 0, 0, 1135, 171, 1141, 0,
	0, 1143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 0, 176, 178, 179,
	180, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 0,
	187, 0, 0, 187, 187, 187, 0, 0, 2844, 0,
	0, 0, 0, 607, 607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1282, 157, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2864, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 607, 607, 607,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2874, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 2877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2885, 0, 0, 0, 0,
	0, 0, 0, 2892, 0, 0, 0, 0, 158, 163,
	160, 166, 167, 168, 170, 172, 173, 174, 175, 0,
	0, 0, 0, 0, 176, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 607, 0, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 1413, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 3005, 1426, 0, 0, 0, 0, 0, 0, 0,
	3012, 0, 0, 0, 0, 0, 0, 607, 0, 747,
	79, 0, 0, 0, 0, 0, 0, 3022, 3023, 3024,
	187, 3025, 3026, 607, 0, 0, 3029, 3030, 177, 3032,
	3035, 0, 0, 0, 0, 0, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 3044, 3046, 3047, 3049, 3051,
	3053, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 0, 0, 0, 176, 178, 179, 180,
	607, 0, 0, 0, 607, 607, 0, 811, 3083, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 811, 0, 0,
	0, 0, 0, 607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1444,
	0, 0, 0, 0, 0, 607, 0, 0, 1501, 0,
	3105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 3110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 187,
	0, 0, 0, 3126, 0, 0, 0, 0, 0, 3127,
	3128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1581, 0, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	3166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3174, 3176, 3178, 1625, 0, 0, 0,
	0, 0, 607, 607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 3206, 0,
	0, 0, 0, 0, 0, 0, 607, 0, 1657, 0,
	0, 0, 0, 0, 0, 1661, 0, 0, 0, 0,
	187, 607, 0, 0, 0, 0, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 0, 0, 0, 0, 3223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 607, 1698, 0, 0, 0, 3244,
	3246, 3248, 0, 0, 0, 0, 0, 1705, 1706, 1707,
	1708, 0, 0, 0, 0, 0, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3268, 0, 0, 607, 0, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3281, 3282, 838,
	1750, 1751, 0, 0, 0, 838, 838, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1802,
	1803, 1804, 0, 1806, 1807, 1808, 0, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	0, 1838, 0, 1844, 1845, 838, 0, 838, 838, 838,
	838, 838, 0, 0, 0, 0, 0, 0, 1859, 1860,
	1861, 1862, 1863, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1903, 1904, 0,
	0, 0, 0, 0, 1909, 0, 0, 0, 0, 0,
	0, 0, 0, 1913, 0, 1916, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1194, 0, 1194, 1194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1978, 0, 0, 811, 1271, 1272,
	1273, 0, 1276, 0, 1277, 1278, 1279, 1280, 0, 1283,
	1285, 1285, 0, 1285, 1289, 1289, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 0, 0, 1337, 0, 1339, 1340, 1341, 1342,
	1343, 0, 0, 0, 0, 0, 1289, 1289, 1289, 1289,
	1289, 0, 0, 0, 0, 0, 0, 1466, 0, 0,
	1350, 1351, 1352, 1353, 1354, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 2066, 0, 0, 0, 0, 0, 0, 2080, 2081,
	0, 0, 2085, 0, 0, 0, 0, 0, 0, 0,
	0, 2088, 0, 0, 0, 0, 0, 0, 2091, 0,
	0, 1373, 0, 0, 0, 0, 0, 811, 0, 0,
	0, 811, 0, 0, 0, 0, 0, 811, 0, 0,
	0, 0, 0, 0, 2094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3225, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 1466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 143, 1454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 704, 0, 838, 0, 0, 0, 0, 2127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 0, 161, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1467, 0, 605, 130, 131, 152, 151, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 838, 838, 0, 1454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 854, 0, 0, 1012, 0, 1019, 0, 0, 0,
	1480, 1483, 1484, 1485, 1486, 1487, 1488, 0, 1489, 1490,
	1491, 1492, 1493, 1468, 1469, 1470, 1471, 1452, 1453, 1481,
	0, 1455, 0, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 0, 1413, 1465, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 0, 0, 0, 0, 0, 147, 128,
	154, 135, 127, 0, 148, 149, 0, 2275, 0, 0,
	165, 1467, 0, 0, 0, 0, 0, 0, 0, 171,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 139, 137, 132, 133, 134, 138,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1480,
	1483, 1484, 1485, 1486, 1487, 1488, 2323, 1489, 1490, 1491,
	1492, 1493, 1468, 1469, 1470, 1471, 1452, 1453, 1481, 0,
	1455, 0, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 0, 0, 1465, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 0, 0, 0, 0, 1482, 0, 0, 0,
	0, 0, 0, 1194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 1194, 1194, 0,
	0, 2371, 2372, 2373, 2374, 2375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 2384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2392, 0,
	0, 2396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 838, 0, 0, 0, 0, 0, 0, 0, 2419,
	2420, 0, 0, 0, 2423, 0, 0, 0, 0, 2425,
	2426, 2427, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 2432, 2433, 0, 0, 0, 2434, 2435, 0, 0,
	1814, 2437, 0, 0, 2439, 1482, 0, 2441, 2442, 2443,
	2444, 0, 0, 0, 0, 2445, 1814, 1814, 1814, 1814,
	1814, 0, 0, 0, 0, 0, 0, 0, 144, 0,
	0, 145, 0, 0, 0, 0, 838, 0, 78, 39,
	40, 80, 0, 2470, 2471, 2472, 2473, 2474, 2475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 157, 43, 69, 70, 0, 67, 71, 169, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2506, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 2539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1923, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 0, 0, 0, 0, 176, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2591, 0, 0, 0, 0,
	0, 0, 2601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 854, 0, 854, 854, 0, 0,
	0, 2629, 0, 0, 0, 0, 0, 0, 1020, 0,
	0, 1204, 1206, 0, 2638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2654, 0, 0, 2657, 0, 0, 0, 0,
	0, 1020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 0, 2216, 0, 0, 749, 750, 0,
	0, 0, 2685, 1745, 0, 0, 0, 0, 0, 2691,
	0, 0, 0, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 0, 0, 73, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2740, 0, 0, 0, 0, 57, 58, 0,
	59, 60, 61, 62, 0, 0, 0, 0, 1362, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1375, 1376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2103,
	2803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2818,
	0, 1419, 2819, 2820, 2821, 0, 2825, 0, 0, 0,
	854, 0, 0, 0, 0, 0, 1439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2866, 0, 2867,
	0, 0, 0, 0, 2870, 2871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2893, 0, 0, 2894, 0, 2895, 2896, 0, 2897,
	0, 2898, 0, 0, 0, 2212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 811, 0, 0, 2923, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2931, 0, 0,
	2933, 0, 0, 0, 2252, 2253, 0, 0, 0, 0,
	0, 0, 0, 2272, 2937, 2273, 2274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1012,
	0, 0, 2985, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 1547, 1547,
	0, 1547, 0, 1547, 1547, 0, 1556, 1547, 1547, 1547,
	1547, 1547, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 1362, 1012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 2350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3066, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 854, 0, 560, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 560, 0,
	854, 854, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 821, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 0, 839,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	0, 0, 0, 0, 2940, 2942, 2941, 2956, 2957, 2958,
	2959, 2960, 2961, 2962, 658, 0, 1740, 0, 3104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 2455,
	0, 0, 0, 3122, 1767, 1768, 3123, 0, 3124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1923, 0, 0,
	0, 854, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2515, 0, 79, 0, 0, 1923, 1923, 1923, 1923, 1923,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1883, 0, 2272, 811, 0, 0, 0, 1923, 0, 0,
	1923, 0, 0, 3204, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1419, 0, 3218, 854, 3219, 0, 3220, 0, 0,
	0, 0, 854, 0, 0, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1012, 0, 0, 0,
	0, 0, 0, 2623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3266, 0, 3267, 2951, 2952, 0, 0,
	0, 1019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1012, 0,
	0, 0, 0, 0, 1019, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 653,
	720, 655, 717, 718, 0, 651, 654, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012, 0, 1740, 0, 0, 0, 0, 0, 1740,
	1740, 0, 0, 0, 656, 657, 2939, 2943, 2944, 2945,
	2953, 2954, 2955, 2963, 2965, 686, 2964, 2966, 2967, 2968,
	2971, 2972, 2973, 2974, 2969, 2970, 2975, 2976, 2977, 2978,
	2979, 2980, 2981, 2946, 2950, 2949, 2947, 2948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 0, 722, 0, 0, 726, 0, 0, 0, 728,
	727, 1923, 729, 700, 699, 0, 0, 723, 724, 0,
	725, 0, 0, 0, 2786, 0, 0, 87, 0, 0,
	0, 0, 0, 741, 749, 750, 751, 752, 753, 742,
	744, 0, 0, 0, 743, 0, 0, 0, 0, 0,
	0, 560, 2095, 560, 0, 0, 560, 746, 754, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 749, 750, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2635, 2636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	0, 0, 0, 0, 2899, 0, 2903, 2904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 2515,
	0, 79, 0, 2515, 0, 0, 0, 0, 0, 0,
	1363, 0, 0, 0, 0, 1895, 0, 0, 0, 0,
	0, 2221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 2997, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	0, 0, 720, 2319, 717, 718, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1895, 0, 0, 0, 0, 0, 0, 2344, 0, 0,
	0, 0, 0, 0, 0, 2515, 2349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1350, 1351, 1352, 1353,
	1354, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2456, 0, 0, 0, 0, 0, 0, 0,
	0, 3140, 854, 0, 1363, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 1363, 0, 0, 1363, 0, 0, 0, 0, 560,
	0, 0, 0, 0, 2491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1597, 0, 854, 0,
	0, 0, 1362, 0, 0, 2518, 1547, 1362, 0, 0,
	0, 560, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 1647, 0, 0,
	741, 749, 750, 751, 752, 753, 742, 744, 0, 0,
	0, 743, 0, 560, 3222, 0, 0, 0, 0, 0,
	560, 0, 0, 0, 746, 754, 755, 0, 0, 1670,
	1671, 560, 560, 560, 560, 560, 560, 560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1012, 0, 0, 1362, 0, 0, 0, 0, 1895,
	560, 2635, 2636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 797, 0, 839, 0, 0, 0,
	0, 0, 839, 839, 0, 0, 0, 0, 1363, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 1647, 839, 839, 839, 839, 839, 0,
	0, 0, 0, 0, 2491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 0, 0, 0, 0, 1647, 0, 560, 0,
	560, 0, 560, 1931, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1895, 1895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2857,
	2858, 2859, 2860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	1362, 0, 0, 0, 0, 2927, 560, 2929, 0, 0,
	0, 0, 0, 560, 560, 0, 0, 560, 0, 2087,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 0, 0, 560, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3054, 0, 0, 0, 3054, 3054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1895, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 839, 839, 0, 0, 0, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1647, 0, 0, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	1895, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 560, 0, 0, 0, 0, 0, 3133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	3137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 854, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3180, 0,
	0, 560, 0, 0, 0, 0, 0, 0, 2329, 0,
	0, 0, 0, 3188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 560, 560, 560,
	560, 0, 0, 0, 0, 0, 0, 0, 1895, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 560, 0,
	0, 0, 0, 0, 0, 2716, 0, 3188, 0, 0,
	0, 0, 0, 560, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 839, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 0, 0, 0, 0, 1363,
	560, 560, 560, 560, 560, 0, 0, 0, 0, 0,
	0, 0, 2534, 0, 0, 0, 0, 560, 0, 0,
	1597, 0, 560, 0, 0, 560, 2545, 1647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 560, 560, 560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1363, 0, 0, 368, 0, 0, 990, 975, 476, 0,
	918, 993, 887, 906, 1003, 909, 912, 954, 866, 932,
	386, 903, 859, 891, 861, 898, 862, 889, 920, 253,
	886, 977, 936, 992, 341, 250, 868, 892, 400, 908,
	197, 956, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 999, 345, 942, 0,
	460, 371, 0, 0, 1597, 922, 981, 930, 968, 917,
	955, 876, 941, 994, 904, 951, 995, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 3160, 0, 3161, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 900, 948, 989, 901, 950, 248,
	298, 255, 247, 480, 1000, 980, 865, 929, 988, 0,
	0, 216, 991, 924, 0, 953, 0, 1006, 860, 944,
	0, 863, 867, 1002, 984, 895, 258, 0, 0, 0,
	0, 0, 0, 0, 921, 931, 965, 969, 915, 0,
	0, 0, 0, 0, 0, 0, 893, 0, 940, 0,
	0, 0, 872, 864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 919, 0, 0, 0,
	0, 875, 0, 894, 966, 0, 858, 280, 869, 372,
	240, 0, 973, 983, 916, 517, 987, 914, 913, 960,
	873, 979, 907, 340, 871, 307, 192, 212, 0, 905,
	382, 425, 437, 978, 890, 899, 238, 897, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 939, 958,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 1196, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 885, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 974, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	963, 1005, 395, 436, 227, 501, 459, 880, 884, 878,
	945, 879, 934, 935, 881, 996, 997, 998, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 967, 874, 0,
	882, 883, 0, 976, 985, 986, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 938, 191,
	208, 343, 1001, 418, 271, 533, 511, 506, 198, 210,
	877, 245, 888, 896, 0, 902, 910, 911, 923, 925,
	926, 927, 928, 946, 947, 949, 957, 959, 962, 964,
	971, 982, 1004, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 937, 943, 354, 264, 285, 297, 952, 510, 465,
	214, 430, 273, 236, 970, 972, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	933, 961, 350, 477, 478, 293, 368, 0, 0, 990,
	975, 476, 0, 918, 993, 887, 906, 1003, 909, 912,
	954, 866, 932, 386, 903, 859, 891, 861, 898, 862,
	889, 920, 253, 886, 977, 936, 992, 341, 250, 868,
	892, 400, 908, 197, 956, 450, 237, 351, 348, 483,
	265, 256, 252, 235, 294, 358, 398, 470, 392, 999,
	345, 942, 0, 460, 371, 0, 0, 0, 922, 981,
	930, 968, 917, 955, 876, 941, 994, 904, 951, 995,
	300, 234, 302, 196, 383, 461, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 326, 335, 334,
	315, 316, 318, 320, 325, 332, 338, 900, 948, 989,
	901, 950, 248, 298, 255, 247, 480, 1000, 980, 865,
	929, 988, 0, 0, 216, 991, 924, 0, 953, 0,
	1006, 860, 944, 0, 863, 867, 1002, 984, 895, 258,
	0, 0, 0, 0, 0, 0, 0, 921, 931, 965,
	969, 915, 0, 0, 0, 0, 0, 2546, 0, 893,
	0, 940, 0, 0, 0, 872, 864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 919,
	0, 0, 0, 0, 875, 0, 894, 966, 0, 858,
	280, 869, 372, 240, 0, 973, 983, 916, 517, 987,
	914, 913, 960, 873, 979, 907, 340, 871, 307, 192,
	212, 0, 905, 382, 425, 437, 978, 890, 899, 238,
	897, 435, 396, 499, 220, 267, 422, 402, 433, 409,
	270, 939, 958, 434, 346, 485, 416, 496, 518, 519,
	246, 376, 508, 474, 514, 532, 213, 243, 390, 467,
	502, 457, 369, 481, 482, 306, 456, 278, 195, 344,
	524, 211, 443, 229, 218, 487, 505, 272, 420, 203,
	469, 494, 226, 447, 0, 0, 534, 205, 492, 466,
	365, 303, 304, 204, 0, 421, 251, 276, 241, 385,
	489, 490, 239, 535, 215, 513, 207, 1196, 512, 378,
	484, 493, 366, 356, 206, 491, 364, 355, 311, 330,
	331, 263, 287, 414, 349, 415, 288, 374, 373, 375,
	199, 503, 0, 200, 0, 462, 504, 536, 221, 222,
	224, 885, 262, 266, 274, 277, 283, 284, 292, 342,
	389, 413, 411, 417, 974, 479, 497, 509, 516, 522,
	523, 525, 526, 527, 528, 529, 531, 530, 377, 291,
	458, 310, 347, 963, 1005, 395, 436, 227, 501, 459,
	880, 884, 878, 945, 879, 934, 935, 881, 996, 997,
	998, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 0,
	967, 874, 0, 882, 883, 0, 976, 985, 986, 555,
	357, 449, 498, 312, 324, 327, 317, 336, 0, 337,
	313, 314, 319, 321, 322, 323, 328, 329, 333, 339,
	426, 427, 428, 429, 275, 507, 289, 432, 431, 308,
	309, 938, 191, 208, 343, 1001, 418, 271, 533, 511,
	506, 198, 210, 877, 245, 888, 896, 0, 902, 910,
	911, 923, 925, 926, 927, 928, 946, 947, 949, 957,
	959, 962, 964, 971, 982, 1004, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 290,
	295, 296, 299, 305, 353, 359, 360, 361, 362, 379,
	380, 381, 384, 387, 388, 391, 393, 394, 397, 401,
	405, 406, 407, 408, 410, 412, 419, 424, 438, 439,
	440, 441, 442, 445, 446, 451, 452, 453, 454, 455,
	463, 464, 468, 486, 488, 500, 515, 520, 444, 282,
	495, 521, 0, 352, 937, 943, 354, 264, 285, 297,
	952, 510, 465, 214, 430, 273, 236, 970, 972, 202,
	233, 217, 242, 257, 260, 301, 363, 370, 399, 404,
	279, 254, 231, 423, 228, 448, 471, 472, 473, 475,
	367, 249, 403, 933, 961, 350, 477, 478, 293, 368,
	0, 0, 990, 975, 476, 0, 918, 993, 887, 906,
	1003, 909, 912, 954, 866, 932, 386, 903, 859, 891,
	861, 898, 862, 889, 920, 253, 886, 977, 936, 992,
	341, 250, 868, 892, 400, 908, 197, 956, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 999, 345, 942, 0, 460, 371, 0, 0,
	0, 922, 981, 930, 968, 917, 955, 876, 941, 994,
	904, 951, 995, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	900, 948, 989, 901, 950, 248, 298, 255, 247, 480,
	1000, 980, 865, 929, 988, 0, 0, 216, 991, 924,
	0, 953, 0, 1006, 860, 944, 0, 863, 867, 1002,
	984, 895, 258, 0, 0, 0, 0, 0, 0, 0,
	921, 931, 965, 969, 915, 0, 0, 0, 0, 0,
	2504, 0, 893, 0, 940, 0, 0, 0, 872, 864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 919, 0, 0, 0, 0, 875, 0, 894,
	966, 0, 858, 280, 869, 372, 240, 0, 973, 983,
	916, 517, 987, 914, 913, 960, 873, 979, 907, 340,
	871, 307, 192, 212, 0, 905, 382, 425, 437, 978,
	890, 899, 238, 897, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 939, 958, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	1196, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 885, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 974, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 963, 1005, 395, 436,
	227, 501, 459, 880, 884, 878, 945, 879, 934, 935,
	881, 996, 997, 998, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 967, 874, 0, 882, 883, 0, 976,
	985, 986, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 938, 191, 208, 343, 1001, 418,
	271, 533, 511, 506, 198, 210, 877, 245, 888, 896,
	0, 902, 910, 911, 923, 925, 926, 927, 928, 946,
	947, 949, 957, 959, 962, 964, 971, 982, 1004, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 937, 943, 354,
	264, 285, 297, 952, 510, 465, 214, 430, 273, 236,
	970, 972, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 933, 961, 350, 477,
	478, 293, 368, 0, 0, 990, 975, 476, 0, 918,
	993, 887, 906, 1003, 909, 912, 954, 866, 932, 386,
	903, 859, 891, 861, 898, 862, 889, 920, 253, 886,
	977, 936, 992, 341, 250, 868, 892, 400, 908, 197,
	956, 450, 237, 351, 348, 483, 265, 256, 252, 235,
	294, 358, 398, 470, 392, 999, 345, 942, 0, 460,
	371, 0, 0, 0, 922, 981, 930, 968, 917, 955,
	876, 941, 994, 904, 951, 995, 300, 234, 302, 196,
	383, 461, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 326, 335, 334, 315, 316, 318, 320,
	325, 332, 338, 900, 948, 989, 901, 950, 248, 298,
	255, 247, 480, 1000, 980, 865, 929, 988, 0, 0,
	216, 991, 924, 0, 953, 0, 1006, 860, 944, 0,
	863, 867, 1002, 984, 895, 258, 0, 0, 0, 0,
	0, 0, 0, 921, 931, 965, 969, 915, 0, 0,
	0, 0, 0, 1911, 0, 893, 0, 940, 0, 0,
	0, 872, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 919, 0, 0, 0, 0,
	875, 0, 894, 966, 0, 858, 280, 869, 372, 240,
	0, 973, 983, 916, 517, 987, 914, 913, 960, 873,
	979, 907, 340, 871, 307, 192, 212, 0, 905, 382,
	425, 437, 978, 890, 899, 238, 897, 435, 396, 499,
	220, 267, 422, 402, 433, 409, 270, 939, 958, 434,
	346, 485, 416, 496, 518, 519, 246, 376, 508, 474,
	514, 532, 213, 243, 390, 467, 502, 457, 369, 481,
	482, 306, 456, 278, 195, 344, 524, 211, 443, 229,
	218, 487, 505, 272, 420, 203, 469, 494, 226, 447,
	0, 0, 534, 205, 492, 466, 365, 303, 304, 204,
	0, 421, 251, 276, 241, 385, 489, 490, 239, 535,
	215, 513, 207, 1196, 512, 378, 484, 493, 366, 356,
	206, 491, 364, 355, 311, 330, 331, 263, 287, 414,
	349, 415, 288, 374, 373, 375, 199, 503, 0, 200,
	0, 462, 504, 536, 221, 222, 224, 885, 262, 266,
	274, 277, 283, 284, 292, 342, 389, 413, 411, 417,
	974, 479, 497, 509, 516, 522, 523, 525, 526, 527,
	528, 529, 531, 530, 377, 291, 458, 310, 347, 963,
	1005, 395, 436, 227, 501, 459, 880, 884, 878, 945,
	879, 934, 935, 881, 996, 997, 998, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 0, 967, 874, 0, 882,
	883, 0, 976, 985, 986, 555, 357, 449, 498, 312,
	324, 327, 317, 336, 0, 337, 313, 314, 319, 321,
	322, 323, 328, 329, 333, 339, 426, 427, 428, 429,
	275, 507, 289, 432, 431, 308, 309, 938, 191, 208,
	343, 1001, 418, 271, 533, 511, 506, 198, 210, 877,
	245, 888, 896, 0, 902, 910, 911, 923, 925, 926,
	927, 928, 946, 947, 949, 957, 959, 962, 964, 971,
	982, 1004, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 290, 295, 296, 299, 305,
	353, 359, 360, 361, 362, 379, 380, 381, 384, 387,
	388, 391, 393, 394, 397, 401, 405, 406, 407, 408,
	410, 412, 419, 424, 438, 439, 440, 441, 442, 445,
	446, 451, 452, 453, 454, 455, 463, 464, 468, 486,
	488, 500, 515, 520, 444, 282, 495, 521, 0, 352,
	937, 943, 354, 264, 285, 297, 952, 510, 465, 214,
	430, 273, 236, 970, 972, 202, 233, 217, 242, 257,
	260, 301, 363, 370, 399, 404, 279, 254, 231, 423,
	228, 448, 471, 472, 473, 475, 367, 249, 403, 933,
	961, 350, 477, 478, 293, 368, 0, 0, 990, 975,
	476, 0, 918, 993, 887, 906, 1003, 909, 912, 954,
	866, 932, 386, 903, 859, 891, 861, 898, 862, 889,
	920, 253, 886, 977, 936, 992, 341, 250, 868, 892,
	400, 908, 197, 956, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 999, 345,
	942, 0, 460, 371, 0, 0, 0, 922, 981, 930,
	968, 917, 955, 876, 941, 994, 904, 951, 995, 300,
	234, 302, 196, 383, 461, 269, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 900, 948, 989, 901,
	950, 248, 298, 255, 247, 480, 1000, 980, 865, 929,
	988, 0, 0, 216, 991, 924, 0, 953, 0, 1006,
	860, 944, 0, 863, 867, 1002, 984, 895, 258, 0,
	0, 0, 0, 0, 0, 0, 921, 931, 965, 969,
	915, 0, 0, 0, 0, 0, 0, 0, 893, 0,
	940, 0, 0, 0, 872, 864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 919, 0,
	0, 0, 0, 875, 0, 894, 966, 0, 858, 280,
	869, 372, 240, 0, 973, 983, 916, 517, 987, 914,
	913, 960, 873, 979, 907, 340, 871, 307, 192, 212,
	0, 905, 382, 425, 437, 978, 890, 899, 238, 897,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	939, 958, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 1196, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	885, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 974, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 963, 1005, 395, 436, 227, 501, 459, 880,
	884, 878, 945, 879, 934, 935, 881, 996, 997, 998,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 967,
	874, 0, 882, 883, 0, 976, 985, 986, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	938, 191, 208, 343, 1001, 418, 271, 533, 511, 506,
	198, 210, 877, 245, 888, 896, 0, 902, 910, 911,
	923, 925, 926, 927, 928, 946, 947, 949, 957, 959,
	962, 964, 971, 982, 1004, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 937, 943, 354, 264, 285, 297, 952,
	510, 465, 214, 430, 273, 236, 970, 972, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 933, 961, 350, 477, 478, 293, 368, 0,
	0, 990, 975, 476, 0, 918, 993, 887, 906, 1003,
	909, 912, 954, 866, 932, 386, 903, 859, 891, 861,
	898, 862, 889, 920, 253, 886, 977, 936, 992, 341,
	250, 868, 892, 400, 908, 197, 956, 450, 237, 351,
	348, 483, 265, 256, 252, 235, 294, 358, 398, 470,
	392, 999, 345, 942, 0, 460, 371, 0, 0, 0,
	922, 981, 930, 968, 917, 955, 876, 941, 994, 904,
	951, 995, 300, 234, 302, 196, 383, 461, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 326,
	335, 334, 315, 316, 318, 320, 325, 332, 338, 900,
	948, 989, 901, 950, 248, 298, 255, 247, 480, 1000,
	980, 865, 929, 988, 0, 0, 216, 991, 924, 0,
	953, 0, 1006, 860, 944, 0, 863, 867, 1002, 984,
	895, 258, 0, 0, 0, 0, 0, 0, 0, 921,
	931, 965, 969, 915, 0, 0, 0, 0, 0, 0,
	0, 893, 0, 940, 0, 0, 0, 872, 864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 919, 0, 0, 0, 0, 875, 0, 894, 966,
	0, 858, 280, 869, 372, 240, 0, 973, 983, 916,
	517, 987, 914, 913, 960, 873, 979, 907, 340, 871,
	307, 192, 212, 0, 905, 382, 425, 437, 978, 890,
	899, 238, 897, 435, 396, 499, 220, 267, 422, 402,
	433, 409, 270, 939, 958, 434, 346, 485, 416, 496,
	518, 519, 246, 376, 508, 474, 514, 532, 213, 243,
	390, 467, 502, 457, 369, 481, 482, 306, 456, 278,
	195, 344, 524, 211, 443, 229, 218, 487, 505, 272,
	420, 203, 469, 494, 226, 447, 0, 0, 534, 205,
	492, 466, 365, 303, 304, 204, 0, 421, 251, 276,
	241, 385, 489, 490, 239, 535, 215, 513, 207, 1196,
	512, 378, 484, 493, 366, 356, 206, 491, 364, 355,
	311, 330, 331, 263, 287, 414, 349, 415, 288, 374,
	373, 375, 199, 503, 0, 200, 0, 462, 504, 536,
	221, 222, 224, 885, 262, 266, 274, 277, 283, 284,
	292, 342, 389, 413, 411, 417, 974, 479, 497, 509,
	516, 522, 523, 525, 526, 527, 528, 529, 531, 530,
	377, 291, 458, 310, 347, 963, 1005, 395, 436, 227,
	501, 459, 880, 884, 878, 945, 879, 934, 935, 881,
	996, 997, 998, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 0, 967, 874, 0, 882, 883, 0, 976, 985,
	986, 555, 357, 449, 498, 312, 324, 327, 317, 336,
	0, 337, 313, 314, 319, 321, 322, 323, 328, 329,
	333, 339, 426, 427, 428, 429, 275, 507, 289, 432,
	431, 308, 309, 938, 191, 208, 343, 1001, 418, 271,
	533, 511, 506, 198, 210, 877, 245, 888, 896, 0,
	902, 910, 911, 923, 925, 926, 927, 928, 946, 947,
	949, 957, 959, 962, 964, 971, 982, 1004, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 290, 295, 296, 299, 305, 353, 359, 360, 361,
	362, 379, 380, 381, 384, 387, 388, 391, 393, 394,
	397, 401, 405, 406, 407, 408, 410, 412, 419, 424,
	438, 439, 440, 441, 442, 445, 446, 451, 452, 453,
	454, 455, 463, 464, 468, 486, 488, 500, 515, 520,
	444, 282, 495, 521, 0, 352, 937, 943, 354, 264,
	285, 297, 952, 510, 465, 214, 430, 273, 236, 970,
	972, 202, 233, 217, 242, 257, 260, 301, 363, 370,
	399, 404, 279, 254, 231, 423, 228, 448, 471, 472,
	473, 475, 367, 249, 403, 933, 961, 350, 477, 478,
	293, 368, 0, 0, 990, 975, 476, 0, 918, 993,
	887, 906, 1003, 909, 912, 954, 866, 932, 386, 903,
	859, 891, 861, 898, 862, 889, 920, 253, 886, 977,
	936, 992, 341, 250, 868, 892, 400, 908, 197, 956,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 999, 345, 942, 0, 460, 371,
	0, 0, 0, 922, 981, 930, 968, 917, 955, 876,
	941, 994, 904, 951, 995, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 900, 948, 989, 901, 950, 248, 298, 255,
	247, 480, 1000, 980, 865, 929, 988, 0, 0, 1007,
	991, 924, 0, 953, 0, 1006, 860, 944, 0, 863,
	867, 1002, 984, 895, 258, 0, 0, 0, 0, 0,
	0, 0, 921, 931, 965, 969, 915, 0, 0, 0,
	0, 0, 0, 0, 893, 0, 940, 0, 0, 0,
	872, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 919, 0, 0, 0, 0, 875,
	0, 894, 966, 0, 858, 280, 869, 372, 240, 0,
	973, 983, 916, 517, 987, 914, 913, 960, 873, 979,
	907, 340, 871, 307, 192, 212, 0, 905, 382, 425,
	437, 978, 890, 899, 238, 897, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 939, 958, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 870, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 885, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 974,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 857, 851, 850, 310, 347, 963, 1005,
	395, 436, 227, 501, 459, 880, 884, 878, 945, 879,
	934, 935, 881, 996, 997, 998, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 967, 874, 0, 882, 883,
	0, 976, 985, 986, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 938, 191, 208, 343,
	1001, 418, 271, 533, 511, 506, 198, 210, 877, 245,
	888, 896, 0, 902, 910, 911, 923, 925, 926, 927,
	928, 946, 947, 949, 957, 959, 962, 964, 971, 982,
	1004, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 937,
	943, 354, 264, 285, 297, 952, 510, 465, 214, 430,
	273, 236, 970, 972, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 933, 961,
	350, 477, 478, 293, 368, 0, 0, 990, 975, 476,
	0, 918, 993, 887, 906, 1003, 909, 912, 954, 866,
	932, 386, 903, 859, 891, 861, 898, 862, 889, 920,
	253, 886, 977, 936, 992, 341, 250, 868, 892, 400,
	908, 197, 956, 450, 237, 351, 348, 483, 265, 256,
	252, 235, 294, 358, 398, 470, 392, 999, 345, 942,
	0, 460, 371, 0, 0, 0, 922, 981, 930, 968,
	917, 955, 876, 941, 994, 904, 951, 995, 300, 234,
	302, 196, 383, 461, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 326, 335, 334, 315, 316,
	318, 320, 325, 332, 338, 900, 948, 989, 901, 950,
	248, 298, 255, 247, 480, 1000, 980, 865, 929, 988,
	0, 0, 1007, 991, 924, 0, 953, 0, 1006, 860,
	944, 0, 863, 867, 1002, 984, 895, 258, 0, 0,
	0, 0, 0, 0, 0, 921, 931, 965, 969, 915,
	0, 0, 0, 0, 0, 0, 0, 893, 0, 940,
	0, 0, 0, 872, 864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 919, 0, 0,
	0, 0, 875, 0, 894, 966, 0, 858, 280, 869,
	372, 240, 0, 973, 983, 916, 517, 987, 914, 913,
	960, 873, 979, 907, 340, 871, 307, 192, 212, 0,
	905, 382, 425, 437, 978, 890, 899, 238, 897, 435,
	396, 499, 220, 267, 422, 402, 433, 409, 270, 939,
	958, 434, 346, 485, 416, 496, 518, 519, 246, 376,
	508, 474, 514, 532, 213, 243, 390, 467, 502, 457,
	369, 481, 482, 306, 456, 278, 195, 344, 524, 211,
	443, 229, 218, 487, 505, 272, 420, 203, 469, 1430,
	226, 447, 0, 0, 534, 205, 492, 466, 365, 303,
	304, 204, 0, 421, 251, 276, 241, 385, 489, 490,
	239, 535, 215, 513, 207, 870, 512, 378, 484, 493,
	366, 356, 206, 491, 364, 355, 311, 330, 331, 263,
	287, 414, 349, 415, 288, 374, 373, 375, 199, 503,
	0, 200, 0, 462, 504, 536, 221, 222, 224, 885,
	262, 266, 274, 277, 283, 284, 292, 342, 389, 413,
	411, 417, 974, 479, 497, 509, 516, 522, 523, 525,
	526, 527, 528, 529, 531, 530, 857, 851, 850, 310,
	347, 963, 1005, 395, 436, 227, 501, 459, 880, 884,
	878, 945, 879, 934, 935, 881, 996, 997, 998, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 0, 967, 874,
	0, 882, 883, 0, 976, 985, 986, 555, 357, 449,
	498, 312, 324, 327, 317, 336, 0, 337, 313, 314,
	319, 321, 322, 323, 328, 329, 333, 339, 426, 427,
	428, 429, 275, 507, 289, 432, 431, 308, 309, 938,
	191, 208, 343, 1001, 418, 271, 533, 511, 506, 198,
	210, 877, 245, 888, 896, 0, 902, 910, 911, 923,
	925, 926, 927, 928, 946, 947, 949, 957, 959, 962,
	964, 971, 982, 1004, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 290, 295, 296,
	299, 305, 353, 359, 360, 361, 362, 379, 380, 381,
	384, 387, 388, 391, 393, 394, 397, 401, 405, 406,
	407, 408, 410, 412, 419, 424, 438, 439, 440, 441,
	442, 445, 446, 451, 452, 453, 454, 455, 463, 464,
	468, 486, 488, 500, 515, 520, 444, 282, 495, 521,
	0, 352, 937, 943, 354, 264, 285, 297, 952, 510,
	465, 214, 430, 273, 236, 970, 972, 202, 233, 217,
	242, 257, 260, 301, 363, 370, 399, 404, 279, 254,
	231, 423, 228, 448, 471, 472, 473, 475, 367, 249,
	403, 933, 961, 350, 477, 478, 293, 368, 0, 0,
	990, 975, 476, 0, 918, 993, 887, 906, 1003, 909,
	912, 954, 866, 932, 386, 903, 859, 891, 861, 898,
	862, 889, 920, 253, 886, 977, 936, 992, 341, 250,
	868, 892, 400, 908, 197, 956, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	999, 345, 942, 0, 460, 371, 0, 0, 0, 922,
	981, 930, 968, 917, 955, 876, 941, 994, 904, 951,
	995, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 900, 948,
	989, 901, 950, 248, 298, 255, 247, 480, 1000, 980,
	865, 929, 988, 0, 0, 1007, 991, 924, 0, 953,
	0, 1006, 860, 944, 0, 863, 867, 1002, 984, 895,
	258, 0, 0, 0, 0, 0, 0, 0, 921, 931,
	965, 969, 915, 0, 0, 0, 0, 0, 0, 0,
	893, 0, 940, 0, 0, 0, 872, 864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	919, 0, 0, 0, 0, 875, 0, 894, 966, 0,
	858, 280, 869, 372, 240, 0, 973, 983, 916, 517,
	987, 914, 913, 960, 873, 979, 907, 340, 871, 307,
	192, 212, 0, 905, 382, 425, 437, 978, 890, 899,
	238, 897, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 939, 958, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 848, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 870, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 885, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 974, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 857,
	851, 850, 310, 347, 963, 1005, 395, 436, 227, 501,
	459, 880, 884, 878, 945, 879, 934, 935, 881, 996,
	997, 998, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 967, 874, 0, 882, 883, 0, 976, 985, 986,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 938, 191, 208, 343, 1001, 418, 271, 533,
	511, 506, 198, 210, 877, 245, 888, 896, 0, 902,
	910, 911, 923, 925, 926, 927, 928, 946, 947, 949,
	957, 959, 962, 964, 971, 982, 1004, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 937, 943, 354, 264, 285,
	297, 952, 510, 465, 214, 430, 273, 236, 970, 972,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 933, 961, 350, 477, 478, 293,
	368, 0, 0, 0, 0, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	1847, 0, 637, 0, 0, 0, 253, 642, 0, 0,
	0, 341, 250, 0, 1848, 400, 0, 197, 0, 450,
	237, 351, 348, 483, 265, 256, 252, 235, 294, 358,
	398, 470, 392, 649, 345, 0, 0, 460, 371, 0,
	0, 0, 0, 0, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 234, 302, 196, 383, 461,
	269, 0, 87, 0, 0, 188, 189, 190, 741, 749,
	750, 751, 752, 753, 742, 744, 0, 0, 225, 743,
	232, 660, 662, 661, 676, 677, 678, 679, 680, 681,
	682, 658, 746, 754, 755, 0, 248, 298, 255, 247,
	480, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 620, 634, 0, 648,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 631,
	632, 837, 0, 0, 0, 709, 0, 633, 0, 0,
	641, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 372, 240, 0, 708,
	0, 0, 517, 0, 0, 706, 0, 0, 0, 0,
	340, 0, 307, 192, 212, 0, 0, 382, 425, 437,
	0, 0, 0, 238, 0, 435, 396, 499, 220, 267,
	422, 402, 433, 409, 270, 0, 0, 434, 346, 485,
	416, 496, 518, 519, 246, 376, 508, 474, 514, 532,
	213, 243, 390, 467, 502, 457, 369, 481, 482, 306,
	456, 278, 195, 344, 524, 211, 443, 229, 218, 487,
	505, 272, 420, 203, 469, 494, 226, 447, 0, 0,
	534, 205, 492, 466, 365, 303, 304, 204, 0, 421,
	251, 276, 241, 385, 489, 490, 239, 535, 215, 513,
	207, 0, 512, 378, 484, 493, 366, 356, 206, 491,
	364, 355, 311, 671, 672, 263, 287, 414, 349, 415,
	288, 374, 373, 375, 199, 503, 0, 200, 0, 462,
	504, 536, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 292, 342, 389, 413, 411, 417, 0, 479,
	497, 509, 516, 522, 523, 525, 526, 527, 528, 529,
	531, 530, 377, 291, 458, 310, 347, 0, 0, 395,
	436, 227, 501, 459, 716, 707, 653, 720, 655, 717,
	718, 650, 651, 654, 719, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 0, 710, 640, 639, 0, 646, 647,
	0, 656, 657, 659, 663, 664, 665, 673, 674, 675,
	683, 685, 686, 684, 687, 688, 689, 692, 693, 694,
	695, 690, 691, 696, 730, 731, 732, 733, 734, 735,
	666, 670, 669, 667, 668, 638, 191, 208, 343, 0,
	418, 271, 533, 511, 506, 198, 210, 721, 245, 722,
	0, 0, 726, 0, 0, 0, 728, 727, 0, 729,
	700, 699, 0, 0, 723, 724, 0, 725, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 290, 295, 296, 299, 305, 353, 359,
	360, 361, 362, 379, 380, 381, 384, 387, 388, 391,
	393, 394, 397, 401, 405, 406, 407, 408, 410, 412,
	419, 424, 438, 439, 440, 441, 442, 445, 446, 451,
	452, 453, 454, 455, 463, 464, 468, 486, 488, 500,
	515, 520, 444, 282, 495, 521, 0, 352, 0, 0,
	354, 264, 285, 297, 0, 510, 465, 214, 430, 273,
	236, 748, 0, 202, 233, 217, 242, 257, 260, 301,
	363, 370, 399, 404, 279, 254, 231, 423, 228, 448,
	471, 472, 473, 475, 367, 249, 403, 0, 368, 350,
	477, 478, 293, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	637, 0, 0, 0, 253, 642, 0, 0, 0, 341,
	250, 0, 0, 400, 0, 197, 0, 450, 237, 351,
	348, 483, 265, 256, 252, 235, 294, 358, 398, 470,
	392, 649, 345, 0, 0, 460, 371, 0, 0, 0,
	0, 0, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 234, 302, 196, 383, 461, 269, 0,
	87, 0, 0, 188, 189, 190, 741, 749, 750, 751,
	752, 753, 742, 744, 0, 0, 225, 743, 232, 660,
	662, 661, 676, 677, 678, 679, 680, 681, 682, 658,
	746, 754, 755, 0, 248, 298, 255, 247, 480, 0,
	0, 1799, 1800, 1801, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 620, 634, 0, 648, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 631, 632, 0,
	0, 0, 0, 709, 0, 633, 0, 0, 641, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 372, 240, 0, 708, 0, 0,
	517, 0, 0, 706, 0, 0, 0, 0, 340, 0,
	307, 192, 212, 0, 0, 382, 425, 437, 0, 0,
	0, 238, 0, 435, 396, 499, 220, 267, 422, 402,
	433, 409, 270, 0, 0, 434, 346, 485, 416, 496,
	518, 519, 246, 376, 508, 474, 514, 532, 213, 243,
	390, 467, 502, 457, 369, 481, 482, 306, 456, 278,
	195, 344, 524, 211, 443, 229, 218, 487, 505, 272,
	420, 203, 469, 494, 226, 447, 0, 0, 534, 205,
	492, 466, 365, 303, 304, 204, 0, 421, 251, 276,
	241, 385, 489, 490, 239, 535, 215, 513, 207, 0,
	512, 378, 484, 493, 366, 356, 206, 491, 364, 355,
	311, 671, 672, 263, 287, 414, 349, 415, 288, 374,
	373, 375, 199, 503, 0, 200, 0, 462, 504, 536,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	292, 342, 389, 413, 411, 417, 0, 479, 497, 509,
	516, 522, 523, 525, 526, 527, 528, 529, 531, 530,
	377, 291, 458, 310, 347, 0, 0, 395, 436, 227,
	501, 459, 716, 707, 653, 720, 655, 717, 718, 650,
	651, 654, 719, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 0, 710, 640, 639, 0, 646, 647, 0, 656,
	657, 659, 663, 664, 665, 673, 674, 675, 683, 685,
	686, 684, 687, 688, 689, 692, 693, 694, 695, 690,
	691, 696, 730, 731, 732, 733, 734, 735, 666, 670,
	669, 667, 668, 638, 191, 208, 343, 0, 418, 271,
	533, 511, 506, 198, 210, 721, 245, 722, 0, 0,
	726, 0, 0, 0, 728, 727, 0, 729, 700, 699,
	0, 0, 723, 724, 0, 725, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 290, 295, 296, 299, 305, 353, 359, 360, 361,
	362, 379, 380, 381, 384, 387, 388, 391, 393, 394,
	397, 401, 405, 406, 407, 408, 410, 412, 419, 424,
	438, 439, 440, 441, 442, 445, 446, 451, 452, 453,
	454, 455, 463, 464, 468, 486, 488, 500, 515, 520,
	444, 282, 495, 521, 0, 352, 0, 0, 354, 264,
	285, 297, 0, 510, 465, 214, 430, 273, 236, 748,
	0, 202, 233, 217, 242, 257, 260, 301, 363, 370,
	399, 404, 279, 254, 231, 423, 228, 448, 471, 472,
	473, 475, 367, 249, 403, 0, 368, 350, 477, 478,
	293, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 637, 0,
	0, 0, 253, 642, 0, 0, 0, 341, 250, 0,
	0, 400, 0, 197, 0, 450, 237, 351, 348, 483,
	265, 256, 252, 235, 294, 358, 398, 470, 392, 649,
	345, 0, 0, 460, 371, 0, 0, 0, 0, 0,
	644, 645, 0, 0, 0, 0, 0, 0, 1938, 0,
	300, 234, 302, 196, 383, 461, 269, 0, 87, 0,
	0, 188, 189, 190, 741, 749, 750, 751, 752, 753,
	742, 744, 0, 0, 225, 743, 232, 660, 662, 661,
	676, 677, 678, 679, 680, 681, 682, 658, 746, 754,
	755, 1939, 248, 298, 255, 247, 480, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 620, 634, 0, 648, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 631, 632, 0, 0, 0,
	0, 709, 0, 633, 0, 0, 641, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 372, 240, 0, 708, 0, 0, 517, 0,
	0, 706, 0, 0, 0, 0, 340, 0, 307, 192,
	212, 0, 0, 382, 425, 437, 0, 0, 0, 238,
	0, 435, 396, 499, 220, 267, 422, 402, 433, 409,
	270, 0, 0, 434, 346, 485, 416, 496, 518, 519,
	246, 376, 508, 474, 514, 532, 213, 243, 390, 467,
	502, 457, 369, 481, 482, 306, 456, 278, 195, 344,
	524, 211, 443, 229, 218, 487, 505, 272, 420, 203,
	469, 494, 226, 447, 0, 0, 534, 205, 492, 466,
	365, 303, 304, 204, 0, 421, 251, 276, 241, 385,
	489, 490, 239, 535, 215, 513, 207, 0, 512, 378,
	484, 493, 366, 356, 206, 491, 364, 355, 311, 671,
	672, 263, 287, 414, 349, 415, 288, 374, 373, 375,
	199, 503, 0, 200, 0, 462, 504, 536, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 292, 342,
	389, 413, 411, 417, 0, 479, 497, 509, 516, 522,
	523, 525, 526, 527, 528, 529, 531, 530, 377, 291,
	458, 310, 347, 0, 0, 395, 436, 227, 501, 459,
	716, 707, 653, 720, 655, 717, 718, 650, 651, 654,
	719, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 0,
	710, 640, 639, 0, 646, 647, 0, 656, 657, 659,
	663, 664, 665, 673, 674, 675, 683, 685, 686, 684,
	687, 688, 689, 692, 693, 694, 695, 690, 691, 696,
	730, 731, 732, 733, 734, 735, 666, 670, 669, 667,
	668, 638, 191, 208, 343, 0, 418, 271, 533, 511,
	506, 198, 210, 721, 245, 722, 0, 0, 726, 0,
	0, 0, 728, 727, 0, 729, 700, 699, 0, 0,
	723, 724, 0, 725, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 290,
	295, 296, 299, 305, 353, 359, 360, 361, 362, 379,
	380, 381, 384, 387, 388, 391, 393, 394, 397, 401,
	405, 406, 407, 408, 410, 412, 419, 424, 438, 439,
	440, 441, 442, 445, 446, 451, 452, 453, 454, 455,
	463, 464, 468, 486, 488, 500, 515, 520, 444, 282,
	495, 521, 0, 352, 0, 0, 354, 264, 285, 297,
	0, 510, 465, 214, 430, 273, 236, 748, 0, 202,
	233, 217, 242, 257, 260, 301, 363, 370, 399, 404,
	279, 254, 231, 423, 228, 448, 471, 472, 473, 475,
	367, 249, 403, 0, 0, 350, 477, 478, 293, 368,
	0, 0, 0, 78, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 637, 0, 0, 0, 253, 642, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 649, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 87, 0, 0, 188, 189, 190, 741, 749, 750,
	751, 752, 753, 742, 744, 0, 0, 225, 743, 232,
	660, 662, 661, 676, 677, 678, 679, 680, 681, 682,
	658, 746, 754, 755, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 620, 634, 0, 648, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 631, 632,
	0, 0, 0, 0, 709, 0, 633, 0, 0, 641,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 708, 0,
	0, 517, 0, 0, 706, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 671, 672, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 716, 707, 653, 720, 655, 717, 718,
	650, 651, 654, 719, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 710, 640, 639, 0, 646, 647, 0,
	656, 657, 659, 663, 664, 665, 673, 674, 675, 683,
	685, 686, 684, 687, 688, 689, 692, 693, 694, 695,
	690, 691, 696, 730, 731, 732, 733, 734, 735, 666,
	670, 669, 667, 668, 638, 191, 208, 343, 86, 418,
	271, 533, 511, 506, 198, 210, 721, 245, 722, 0,
	0, 726, 0, 0, 0, 728, 727, 0, 729, 700,
	699, 0, 0, 723, 724, 0, 725, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	748, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 637,
	0, 0, 0, 253, 642, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	649, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 87,
	0, 0, 188, 189, 190, 741, 749, 750, 751, 752,
	753, 742, 744, 0, 0, 225, 743, 232, 660, 662,
	661, 676, 677, 678, 679, 680, 681, 682, 658, 746,
	754, 755, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 620, 634, 0, 648, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 631, 632, 0, 0,
	0, 0, 709, 0, 633, 0, 0, 641, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 708, 0, 0, 517,
	0, 0, 706, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 3147, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	671, 672, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 716, 707, 653, 720, 655, 717, 718, 650, 651,
	654, 719, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 710, 640, 639, 0, 646, 647, 0, 656, 657,
	659, 663, 664, 665, 673, 674, 675, 683, 685, 686,
	684, 687, 688, 689, 692, 693, 694, 695, 690, 691,
	696, 730, 731, 732, 733, 734, 735, 666, 670, 669,
	667, 668, 638, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 721, 245, 722, 0, 0, 726,
	0, 0, 0, 728, 727, 0, 729, 700, 699, 0,
	0, 723, 724, 0, 725, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 748, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 637, 0, 0,
	0, 253, 642, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 649, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 87, 0, 1397,
	188, 189, 190, 741, 749, 750, 751, 752, 753, 742,
	744, 0, 0, 225, 743, 232, 660, 662, 661, 676,
	677, 678, 679, 680, 681, 682, 658, 746, 754, 755,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 620, 634, 0, 648, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 631, 632, 0, 0, 0, 0,
	709, 0, 633, 0, 0, 641, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 708, 0, 0, 517, 0, 0,
	706, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 671, 672,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 716,
	707, 653, 720, 655, 717, 718, 650, 651, 654, 719,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 710,
	640, 639, 0, 646, 647, 0, 656, 657, 659, 663,
	664, 665, 673, 674, 675, 683, 685, 686, 684, 687,
	688, 689, 692, 693, 694, 695, 690, 691, 696, 730,
	731, 732, 733, 734, 735, 666, 670, 669, 667, 668,
	638, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 721, 245, 722, 0, 0, 726, 0, 0,
	0, 728, 727, 0, 729, 700, 699, 0, 0, 723,
	724, 0, 725, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 748, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 637, 0, 0, 0, 253,
	642, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 649, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 87, 0, 0, 188, 189,
	190, 741, 749, 750, 751, 752, 753, 742, 744, 0,
	0, 225, 743, 232, 660, 662, 661, 676, 677, 678,
	679, 680, 681, 682, 658, 746, 754, 755, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 620,
	634, 0, 648, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 631, 632, 837, 0, 0, 0, 709, 0,
	633, 0, 0, 641, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 708, 0, 0, 517, 0, 0, 706, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 671, 672, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 716, 707, 653,
	720, 655, 717, 718, 650, 651, 654, 719, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 710, 640, 639,
	0, 646, 647, 0, 656, 657, 659, 663, 664, 665,
	673, 674, 675, 683, 685, 686, 684, 687, 688, 689,
	692, 693, 694, 695, 690, 691, 696, 730, 731, 732,
	733, 734, 735, 666, 670, 669, 667, 668, 638, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	721, 245, 722, 0, 0, 726, 0, 0, 0, 728,
	727, 0, 729, 700, 699, 0, 0, 723, 724, 0,
	725, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 748, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 637, 0, 0, 0, 253, 642, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 649, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 87, 0, 0, 188, 189, 190, 741,
	749, 750, 751, 752, 753, 742, 744, 0, 0, 225,
	743, 232, 660, 662, 661, 676, 677, 678, 679, 680,
	681, 682, 658, 746, 754, 755, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 620, 634, 0,
	648, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	631, 632, 0, 0, 0, 0, 709, 0, 633, 0,
	0, 641, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	708, 0, 0, 517, 0, 0, 706, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 671, 672, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 716, 707, 653, 720, 655,
	717, 718, 650, 651, 654, 719, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 710, 640, 639, 0, 646,
	647, 0, 656, 657, 659, 663, 664, 665, 673, 674,
	675, 683, 685, 686, 684, 687, 688, 689, 692, 693,
	694, 695, 690, 691, 696, 730, 731, 732, 733, 734,
	735, 666, 670, 669, 667, 668, 638, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 721, 245,
	722, 0, 0, 726, 0, 0, 0, 728, 727, 0,
	729, 700, 699, 0, 0, 723, 724, 0, 725, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 748, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 637, 0, 0, 0, 253, 642, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 649, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 87, 0, 0, 188, 189, 190, 741, 749, 750,
	751, 752, 753, 742, 744, 0, 0, 225, 743, 232,
	660, 662, 661, 676, 677, 678, 679, 680, 681, 682,
	658, 746, 754, 755, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 634, 0, 648, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 631, 632,
	0, 0, 0, 0, 709, 0, 633, 0, 0, 641,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 708, 0,
	0, 517, 0, 0, 706, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 671, 672, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 716, 707, 653, 720, 655, 717, 718,
	650, 651, 654, 719, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 710, 640, 639, 0, 646, 647, 0,
	656, 657, 659, 663, 664, 665, 673, 674, 675, 683,
	685, 686, 684, 687, 688, 689, 692, 693, 694, 695,
	690, 691, 696, 730, 731, 732, 733, 734, 735, 666,
	670, 669, 667, 668, 638, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 721, 245, 722, 0,
	0, 726, 0, 0, 0, 728, 727, 0, 729, 700,
	699, 0, 0, 723, 724, 0, 725, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	748, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1258, 1257, 1259, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 1058, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 1057, 517, 0, 0,
	0, 0, 0, 1054, 1055, 340, 1015, 307, 192, 212,
	1048, 1052, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 0, 350, 477, 478, 293, 368, 0,
	0, 0, 78, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 341,
	250, 0, 0, 400, 0, 197, 0, 450, 237, 351,
	348, 483, 265, 256, 252, 235, 294, 358, 398, 470,
	392, 0, 345, 0, 0, 460, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 234, 302, 196, 383, 461, 269, 0,
	87, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 326,
	335, 334, 315, 316, 318, 320, 325, 332, 338, 0,
	0, 0, 0, 0, 248, 298, 255, 247, 480, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 372, 240, 0, 0, 0, 0,
	517, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	307, 192, 212, 0, 0, 382, 425, 437, 0, 0,
	0, 238, 0, 435, 396, 499, 220, 267, 422, 402,
	433, 409, 270, 0, 0, 434, 346, 485, 416, 496,
	518, 519, 246, 376, 508, 474, 514, 532, 213, 243,
	390, 467, 502, 457, 369, 481, 482, 306, 456, 278,
	195, 344, 524, 211, 443, 229, 218, 487, 505, 272,
	420, 203, 469, 494, 226, 447, 0, 0, 534, 205,
	492, 466, 365, 303, 304, 204, 0, 421, 251, 276,
	241, 385, 489, 490, 239, 535, 215, 513, 207, 0,
	512, 378, 484, 493, 366, 356, 206, 491, 364, 355,
	311, 330, 331, 263, 287, 414, 349, 415, 288, 374,
	373, 375, 199, 503, 0, 200, 0, 462, 504, 536,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	292, 342, 389, 413, 411, 417, 0, 479, 497, 509,
	516, 522, 523, 525, 526, 527, 528, 529, 531, 530,
	377, 291, 458, 310, 347, 0, 0, 395, 436, 227,
	501, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 357, 449, 498, 312, 324, 327, 317, 336,
	0, 337, 313, 314, 319, 321, 322, 323, 328, 329,
	333, 339, 426, 427, 428, 429, 275, 507, 289, 432,
	431, 308, 309, 0, 191, 208, 343, 86, 418, 271,
	533, 511, 506, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 1926, 0, 0, 1925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 290, 295, 296, 299, 305, 353, 359, 360, 361,
	362, 379, 380, 381, 384, 387, 388, 391, 393, 394,
	397, 401, 405, 406, 407, 408, 410, 412, 419, 424,
	438, 439, 440, 441, 442, 445, 446, 451, 452, 453,
	454, 455, 463, 464, 468, 486, 488, 500, 515, 520,
	444, 282, 495, 521, 0, 352, 0, 0, 354, 264,
	285, 297, 0, 510, 465, 214, 430, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 301, 363, 370,
	399, 404, 279, 254, 231, 423, 228, 448, 471, 472,
	473, 475, 367, 249, 403, 0, 1416, 350, 477, 478,
	293, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 1418, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 341, 250, 0,
	0, 400, 0, 197, 0, 450, 237, 351, 348, 483,
	265, 256, 252, 235, 294, 358, 398, 470, 392, 0,
	345, 0, 0, 460, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 234, 302, 196, 383, 461, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1420, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 326, 335, 334,
	315, 316, 318, 320, 325, 332, 338, 0, 0, 0,
	0, 0, 248, 298, 255, 247, 480, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 1230, 0,
	1231, 1232, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 372, 240, 0, 0, 0, 0, 517, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 307, 192,
	212, 0, 0, 382, 425, 437, 0, 0, 0, 238,
	0, 435, 396, 499, 220, 267, 422, 402, 433, 409,
	270, 0, 0, 434, 346, 485, 416, 496, 518, 519,
	246, 376, 508, 474, 514, 532, 213, 243, 390, 467,
	502, 457, 369, 481, 482, 306, 456, 278, 195, 344,
	524, 211, 443, 229, 218, 487, 505, 272, 420, 203,
	469, 494, 226, 447, 0, 0, 534, 205, 492, 466,
	365, 303, 304, 204, 0, 421, 251, 276, 241, 385,
	489, 490, 239, 535, 215, 513, 207, 0, 512, 378,
	484, 493, 366, 356, 206, 491, 364, 355, 311, 330,
	331, 263, 287, 414, 349, 415, 288, 374, 373, 375,
	199, 503, 0, 200, 0, 462, 504, 536, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 292, 342,
	389, 413, 411, 417, 0, 479, 497, 509, 516, 522,
	523, 525, 526, 527, 528, 529, 531, 530, 377, 291,
	458, 310, 347, 0, 0, 395, 436, 227, 501, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 555,
	357, 449, 498, 312, 324, 327, 317, 336, 0, 337,
	313, 314, 319, 321, 322, 323, 328, 329, 333, 339,
	426, 427, 428, 429, 275, 507, 289, 432, 431, 308,
	309, 0, 191, 208, 343, 0, 418, 271, 533, 511,
	506, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 290,
	295, 296, 299, 305, 353, 359, 360, 361, 362, 379,
	380, 381, 384, 387, 388, 391, 393, 394, 397, 401,
	405, 406, 407, 408, 410, 412, 419, 424, 438, 439,
	440, 441, 442, 445, 446, 451, 452, 453, 454, 455,
	463, 464, 468, 486, 488, 500, 515, 520, 444, 282,
	495, 521, 0, 352, 0, 0, 354, 264, 285, 297,
	0, 510, 465, 214, 430, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 301, 363, 370, 399, 404,
	279, 254, 231, 423, 228, 448, 471, 472, 473, 475,
	367, 249, 403, 0, 368, 350, 477, 478, 293, 476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 341, 250, 0, 0, 400,
	0, 197, 0, 450, 237, 351, 348, 483, 265, 256,
	252, 235, 294, 358, 398, 470, 392, 0, 345, 0,
	0, 460, 371, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 234,
	302, 196, 383, 461, 269, 0, 0, 0, 0, 188,
	189, 190, 1358, 1361, 0, 0, 0, 0, 1357, 1360,
	0, 0, 225, 1356, 232, 326, 335, 334, 315, 316,
	318, 320, 325, 332, 338, 0, 0, 0, 0, 0,
	248, 298, 255, 247, 480, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	372, 240, 0, 0, 0, 0, 517, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 307, 192, 212, 0,
	0, 382, 425, 437, 0, 0, 0, 238, 0, 435,
	396, 499, 220, 267, 422, 402, 433, 409, 270, 0,
	0, 434, 346, 485, 416, 496, 518, 519, 246, 376,
	508, 474, 514, 532, 213, 243, 390, 467, 502, 457,
	369, 481, 482, 306, 456, 278, 195, 344, 524, 211,
	443, 229, 218, 487, 505, 272, 420, 203, 469, 494,
	226, 447, 0, 0, 534, 205, 492, 466, 365, 303,
	304, 204, 0, 421, 251, 276, 241, 385, 489, 490,
	239, 535, 215, 513, 207, 0, 512, 378, 484, 493,
	366, 356, 206, 491, 364, 355, 311, 330, 331, 263,
	287, 414, 349, 415, 288, 374, 373, 375, 199, 503,
	0, 200, 0, 462, 504, 536, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 292, 342, 389, 413,
	411, 417, 0, 479, 497, 509, 516, 522, 523, 525,
	526, 527, 528, 529, 531, 530, 377, 291, 458, 310,
	347, 0, 0, 395, 436, 227, 501, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 555, 357, 449,
	498, 312, 324, 327, 317, 336, 0, 337, 313, 314,
	319, 321, 322, 323, 328, 329, 333, 339, 426, 427,
	428, 429, 275, 507, 289, 432, 431, 308, 309, 0,
	191, 208, 343, 0, 418, 271, 533, 511, 506, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 290, 295, 296,
	299, 305, 353, 359, 360, 361, 362, 379, 380, 381,
	384, 387, 388, 391, 393, 394, 397, 401, 405, 406,
	407, 408, 410, 412, 419, 424, 438, 439, 440, 441,
	442, 445, 446, 451, 452, 453, 454, 455, 463, 464,
	468, 486, 488, 500, 515, 520, 444, 282, 495, 521,
	0, 352, 0, 0, 354, 264, 285, 297, 0, 510,
	465, 214, 430, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 301, 363, 370, 399, 404, 279, 254,
	231, 423, 228, 448, 471, 472, 473, 475, 367, 249,
	403, 0, 0, 350, 477, 478, 293, 368, 0, 0,
	0, 78, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 87,
	0, 1397, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 86, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 87, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	1926, 0, 0, 1925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 1877, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 1875,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 1009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 1015, 307, 192, 212, 1013, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	1877, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 1397, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 3055, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1741, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 2237, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 2222, 0, 0, 0, 2223, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 1441, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1440, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 3181, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1598, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 3055,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 1927,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1420, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 1696, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 1566, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	1564, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 1562, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 1560, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 1558, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 1554, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	1552, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 1550, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 1525,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	1425, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1207, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 819, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 612, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 611, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 558, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 3189, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 2739, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 2218, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 0, 350, 477,
	478, 293,
}

var yyPact = [...]int{
	5660, -1000, -420, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2131, 2177, -1000, -1000,
	-1000, -1000, 2282, -1000, 763, 1806, -1000, 2105, 5175, -1000,
	43489, 537, -1000, 42253, 534, 125, 43489, -1000, 242, -1000,
	233, 43489, 237, 41635, -1000, -1000, -235, 19377, 2053, 89,
	88, 43489, -1000, -1000, -1000, -1000, 2248, 1783, -1000, 407,
	-1000, -1000, -1000, -1000, -1000, -1000, 41017, -1000, -1000, -1000,
	2112, 2106, 2309, 678, 2038, -1000, 2199, 1783, -1000, 19377,
	2233, 2184, 18759, -1000, 18759, 500, -1000, -1000, 14423, -1000,
	-1000, 25567, 43489, 31747, 397, -1000, 2105, -1000, -1000, -1000,
	120, -1000, 402, 1608, -1000, 1602, -1000, 664, 642, 431,
	520, 518, 430, 429, 424, 423, 422, 419, 408, 405,
	412, -1000, 711, 711, -81, -82, 3793, 502, 481, 481,
	512, 2074, 2057, -1000, 721, -1000, 711, 711, 711, 379,
	711, 711, 711, 711, 348, 341, 711, 711, 711, 711,
	711, 711, 711, 711, 711, 711, 711, 711, 711, 711,
	711, 711, 711, 371, 2105, 335, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 43489, 296, 43489, -1000,
	601, 43489, 853, 853, 153, 853, 853, 853, 853, 259,
	696, 76, -1000, 247, 326, 192, 330, 859, 211, -1000,
	-1000, 320, 859, 1255, -1000, 682, 206, -1000, 853, 853,
	-1000, 11931, 260, 11931, 11931, -1000, 2097, -1000, -1000, -1000,
	-1000, 1275, -1000, 511, -1000, -1000, -1000, -1000, 43489, 40399,
	403, 760, -1000, -1000, -1000, 74, -1000, -1000, 1382, 977,
	19377, 883, -1000, 1601, 657, -1000, -1000, -1000, -1000, -1000,
	557, 19995, 19995, 19995, 19995, -1000, -1000, 1431, 1431, 1431,
	1431, 19995, 1431, -1000, 1431, 1431, 1431, 1431, 19377, 1431,
	1431, 1431, -1000, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, -1000, -1000, 1431, 599, 1431, 1431, 1431, 1431,
	1431, -1000, -1000, -1000, -1000, 19995, 1431, 1431, 1431, 1431,
	1431, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1431, 1431, 1431, 1431, 1431, 1431, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 23090, -1000, 16905, 1431, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 43489,
	-1000, 1431, 274, 43489, 43489, 382, 2199, 1783, -1000, 2248,
	2211, 407, -1000, 2422, 1847, 1815, 1270, 1783, 1573, 43489,
	-1000, 1631, -1000, -1000, -1000, 1961, 1183, 1254, -1000, -1000,
	-1000, -1000, 1842, 19377, -1000, -1000, 2279, -1000, 22472, 597,
	955, 2273, 39781, -1000, 500, 500, 1600, 13800, 45, -1000,
	-1000, -1000, 753, 29275, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2097, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1774, 43489,
	-1000, -1000, 5035, 1198, -1000, 1805, -1000, 1753, -1000, 1759,
	19377, 1832, 532, 1198, 521, 519, 516, -1000, -6, -1000,
	-1000, -1000, -1000, -1000, -1000, 711, 711, 711, -1000, 406,
	2232, 5175, 3464, -1000, -1000, -1000, 39163, 1804, 1198, -1000,
	1799, -1000, 874, 595, 630, 630, 1198, -1000, -1000, 43489,
	1198, 873, 869, 1198, 1198, 43489, 43489, -1000, 38545, -1000,
	37927, 37309, 1128, 43489, 36691, 36073, 35455, 34837, 34219, -1000,
	1937, -1000, 1868, -1000, -1000, -1000, 43489, 1198, 1198, 43489,
	43489, 369, -1000, -1000, 43489, 1198, -1000, -1000, 1120, 1118,
	1112, 711, 711, 1108, 1249, 1247, 1244, 711, 711, 1106,
	1243, 30511, 1241, 332, 1102, 1091, 1077, 1073, 1240, 214,
	1226, 1072, 1063, 1076, 43489, 1798, 43489, -1000, 294, 742,
	510, 750, 2105, 2027, 1596, 508, 529, 1198, 490, 490,
	43489, -1000, 12554, -1000, -1000, 1221, 19377, -1000, 864, 859,
	859, -1000, -1000, -1000, -1000, -1000, -1000, 853, 43489, 864,
	-1000, -1000, -1000, 859, 853, 43489, 853, 853, 853, 853,
	859, 859, 859, 853, 43489, 43489, 43489, 43489, 43489, 43489,
	43489, 43489, 43489, 11931, 682, 853, -275, -1000, 1219, -1000,
	1917, -1000, -1000, -1000, -1000, -1000, -1000, 11931, 11931, -1000,
	-1000, -1000, -1000, 236, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -36, 1586, 33601, -1000, -278, -280, -282,
	-284, -1000, -1000, -1000, -288, -294, -1000, -1000, -1000, 19377,
	19377, 19377, 19377, -112, -1000, 942, 19995, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 186, 738, 19995, 19995, 19995, 19995,
	19995, 19995, 19995, 19995, 19995, 19995, 19995, 19995, 19995, 19995,
	19995, -1000, -1000, 27421, 6853, 6853, 657, 657, 657, 657,
	-1000, 18759, 19377, 19377, 657, -1000, 1198, 18759, 18759, 19377,
	2083, 756, 977, 43489, -1000, 1270, -1000, -1000, -1000, 1033,
	-1000, 43489, 43489, 960, 19377, 19377, 19377, 19377, 19377, 19377,
	15664, 19377, 19377, 19377, 1270, 19377, 19377, 19377, 19377, 19377,
	19377, 19377, 19377, 19377, 19377, 19377, 19377, 19377, 19377, 19377,
	19377, 19377, 19377, 19377, 19377, 19377, 19377, 19377, 19377, 19377,
	19377, 19377, 1270, 19377, 1019, 19377, 19377, 15046, 12554, 18759,
	18759, 18759, 18759, 18759, 20613, -1000, -1000, -1000, -1000, -1000,
	19377, 19377, 19377, 19377, 19377, 19377, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 593, 1405, 1430, 1367, 19377, -1000, 1579,
	-1000, -117, 24949, 19377, 1212, 2272, 1841, 43489, -1000, -1000,
	-1000, 2199, -1000, 2199, 1405, 2371, 1964, 18759, -1000, -1000,
	2371, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1379,
	-1000, 43489, 1573, 2169, 43489, 1950, 1209, 376, -1000, 19377,
	19377, 1571, -1000, 1001, 43489, -1000, -112, -1000, 32983, -1000,
	-1000, 11308, -1000, 43489, 387, 43489, -1000, 24331, 32365, 13177,
	45, -1000, 13177, 1475, -1000, 63, 59, 16282, 655, -1000,
	-1000, -1000, 3793, 21231, 1360, 655, 161, -1000, -1000, -1000,
	1759, -1000, 1759, 1759, 1759, 1759, 376, 376, 376, 376,
	-1000, -1000, -1000, -1000, -1000, 1791, 1787, -1000, 1759, 1759,
	1759, 1759, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1786,
	1786, 1786, 1761, 1761, 475, -1000, 19377, 362, 31747, 2134,
	1070, 1159, 294, 491, 1837, 1198, 1198, 1198, 491, -1000,
	1399, 1369, 1327, -1000, -411, 1551, -1000, -1000, 2229, -1000,
	-1000, 730, 898, 896, 852, 43489, 279, 377, -1000, 463,
	-1000, 31747, 1198, 850, 630, 1198, -1000, 1198, -1000, -1000,
	-1000, -1000, -1000, 1198, -1000, -1000, 1542, -1000, 1471, 956,
	888, 938, 839, 1542, -1000, -1000, -61, 1542, -1000, 1542,
	-1000, 1542, -1000, 1542, -1000, 1542, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 752, 245, -174, 43489, 279,
	27421, -1000, 507, -1000, -1000, -1000, 27421, 27421, -1000, -1000,
	-1000, -1000, 1203, 1201, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -393, 43489, -1000, 271, 741, 367, 394,
	366, 43489, 334, 2176, 2173, 2155, 309, 340, 43489, 43489,
	490, 1903, 43489, 2141, 43489, -1000, -1000, -1000, -1000, -1000,
	977, 43489, -1000, -1000, 853, 853, -1000, -1000, 43489, 853,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 853, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 43489, -1000, -1000, -1000, -1000, 43489,
	-1000, -1000, -1000, -1000, -1000, 95, 55, 391, -1000, -1000,
	-1000, -1000, -1000, 2193, -1000, 977, 816, 829, -1000, 1431,
	-1000, -1000, 936, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	186, 19995, 19995, 19995, 1655, 517, 1666, 1620, 1273, 824,
	824, 832, 832, 661, 661, 661, 661, 661, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1197, -1000, 1667, -1000,
	1497, 1334, 1270, 1667, 1667, 981, 18759, -1000, -1000, 772,
	-1000, 19377, 1270, -1000, -1000, 1270, 1270, 1529, 1503, 2271,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1346, 1159, 1159, 1159, 1159, 1159, 19377, 1339, -1000,
	-1000, -1000, 2568, 1159, 1159, -1000, 1159, 2559, 2536, 1270,
	1382, 1270, 1488, -1000, 2521, 1159, 2423, 2416, 2409, 1838,
	2397, 2393, 2385, 1159, 1159, 1159, 1834, 2376, 2355, 2332,
	2286, 2267, 2153, 2136, 2111, 2064, 1159, -119, 1159, 1270,
	-1000, -1000, -1000, -1000, 2050, 1800, 1270, 18759, 18759, 1481,
	1431, 592, -1000, 1667, 1270, 1270, 1667, 1667, -1000, 2016,
	1995, 1988, 1962, 1957, 1951, 12554, 1270, -1000, 1367, 43489,
	-1000, -243, -1000, 47, 666, 1431, -1000, 30511, 1270, -1000,
	5804, -1000, 44725, -1000, -1000, -1000, -1000, -1000, 28657, 1723,
	2371, -1000, -1000, 1431, 1721, -1000, -1000, 376, 108, 28039,
	653, 653, 187, 977, 977, 19377, -1000, -1000, -1000, -1000,
	-1000, -1000, 590, 2252, 401, 1431, -1000, 1442, 2103, -1000,
	-1000, -1000, 2162, 21854, -1000, 1431, 1431, 43489, 1825, 1557,
	-1000, 583, -1000, 1475, 45, 34, -1000, -1000, -1000, -1000,
	977, -1000, 1220, 395, 3611, -1000, 467, -1000, -1000, -1000,
	-1000, 2046, 119, -1000, -1000, -1000, 263, 376, -1000, -1000,
	-1000, -1000, -1000, -1000, 1191, 1191, -1000, -1000, -1000, -1000,
	-1000, 1061, -1000, -1000, -1000, 1047, -1000, -1000, 1938, 1853,
	362, -1000, -1000, 711, 1188, -1000, -1000, 2055, 711, 711,
	43489, -1000, -1000, 1357, 2134, 271, 43489, 792, 1899, -1000,
	1837, 1837, 1837, 43489, -1000, -1000, -1000, -1000, -1000, -1000,
	-397, 72, 393, -1000, -1000, -1000, 346, 43489, 1719, -1000,
	264, -1000, 1344, -1000, 43489, -1000, 1690, 1782, 1198, 1198,
	-1000, -1000, -1000, 43489, 1431, -1000, -1000, -1000, -1000, 526,
	2099, 327, -1000, -1000, -136, -1000, -1000, 279, 264, 655,
	1198, -1000, -1000, -1000, -1000, -1000, -398, 1686, 514, 267,
	347, 43489, 43489, 43489, 43489, 43489, 572, -1000, -1000, -1000,
	-1000, 250, -1000, -1000, 250, -1000, -1000, -1000, -1000, 333,
	495, -1000, 43489, 43489, 623, -1000, -1000, -1000, 859, -1000,
	-1000, 859, -1000, -1000, -1000, -1000, -1000, 2092, 43489, 52,
	-329, -1000, -325, 19377, -1000, -1000, -1000, -1000, 1564, 494,
	1666, 19995, 19995, 18759, -50, 1356, 1356, 27421, -1000, -1000,
	-1000, 19377, 19377, 1555, 768, -1000, 19377, 906, -1000, -1000,
	-1000, 19377, 19377, 19377, 1270, 363, -1000, -1000, -1000, -1000,
	-1000, 2270, -1000, 19377, 19377, -1000, -1000, -1000, 19377, 19377,
	-1000, -1000, 19377, 19377, -1000, 19377, 19377, 19377, -1000, 19377,
	19377, 19377, 19377, -1000, -1000, -1000, -1000, 19377, 19377, 19377,
	19377, 19377, 19377, 19377, 19377, 19377, 19377, -1000, -1000, 31747,
	128, -119, 1019, 128, 1019, -1000, 1667, 1667, 18759, 12554,
	-1000, -1000, -1000, -1000, -1000, 19377, 19377, 19377, 19377, 19377,
	19377, -1000, -1000, -1000, -1000, -1000, -1000, 666, -1000, 630,
	630, 630, 43489, -1000, -1000, -1000, -1000, -1000, -1000, 1462,
	2203, -1000, 1980, 1974, 2266, 2252, -1000, 24331, 2371, -1000,
	-1000, 43489, -225, -1000, 2010, 2102, 653, 653, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10685, 2199, 19377, 1895, 43489,
	179, -1000, 23713, 43489, 43489, 24331, 24331, 24331, 24331, 24331,
	-1000, 1929, 1928, -1000, 1982, 1919, 2048, 43489, -1000, 1663,
	1270, 2211, 21854, 407, 19377, 26185, 1444, 24331, -1000, -1000,
	24331, 43489, 10062, -1000, -1000, 50, 37, -1000, -1000, -1000,
	-1000, 3793, -1000, -1000, 451, 2157, 2029, -1000, -1000, -1000,
	-1000, -1000, 1658, -1000, 1648, 1455, 1634, 245, -1000, 1828,
	2090, 711, 711, -1000, 1041, -1000, 1198, 1182, 1180, -1000,
	-1000, -1000, 503, -1000, 2137, 43489, 1891, 1889, 1888, -1000,
	-406, 1039, 1771, 1812, 19377, 1765, 2225, 1436, 43489, -1000,
	-1000, 43489, -1000, 165, -1000, 362, 43489, -1000, -1000, -1000,
	377, 43489, -1000, 7418, -1000, -1000, -1000, 264, -1000, -1000,
	-1000, -1000, -1000, -1000, 43489, 295, -1000, 1763, 1267, -1000,
	-1000, 1670, -1000, -1000, -1000, -1000, 262, 355, 248, 1178,
	248, -1000, 43489, 622, 1853, 43489, -1000, -1000, -1000, 853,
	853, -1000, -1000, 2080, -1000, 1198, 1159, 19995, 19995, -1000,
	657, -1000, 1431, -93, 1759, 1759, -1000, 1759, 1761, -1000,
	1759, 221, 1759, 219, 1759, -1000, -1000, 1270, 1270, 1772,
	1101, -10, -1000, 977, 19377, 1897, 1875, 1159, -1000, 1757,
	1727, 19377, 1159, 1159, 1159, 1159, -1000, 977, 1367, 1871,
	1367, 1159, 1159, 1867, 352, 1159, 1619, 1619, 1619, 1619,
	1619, 1367, 1367, 1367, 1367, 43489, -1000, -119, -1000, -1000,
	-165, -168, -1000, 1270, -119, 1450, -1000, -1000, 1270, -1000,
	1768, 1714, 1862, 1661, 1159, 1794, -1000, 2179, 2179, 2179,
	1604, 44107, 43489, -1000, -1000, -1000, -1000, 2252, 2249, 1438,
	-1000, -1000, 108, 445, -1000, 2026, 2102, -1000, 2224, 2006,
	2222, -1000, -1000, -1000, -1000, -1000, 977, -1000, 2115, 1400,
	-1000, 740, 1394, -1000, -1000, 18141, 1617, 1967, 579, 1604,
	1581, 2103, 1880, 1887, 2645, -1000, -1000, -1000, -1000, 1916,
	-1000, 1857, -1000, -1000, 1631, -1000, -1000, 1430, 1270, 1359,
	387, 24331, 1464, 1464, -1000, 574, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 934, 6811, 2304, -1000, 1175, -1000, 1176,
	194, 1038, -1000, -1000, 711, 711, -1000, 849, 844, -1000,
	43489, 1725, -1000, 376, 1168, 376, 1034, -1000, 1031, -1000,
	-1000, -1000, -1000, 1833, 1909, -1000, -1000, -1000, -1000, 43489,
	-1000, -1000, 43489, 43489, 43489, 1710, 2220, -1000, 19377, 1689,
	733, 1808, 43489, 43489, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 487, 711, -365, 339, 336,
	711, 711, 711, -407, -1000, -1000, 1568, 1566, -1000, -79,
	-1000, 19377, -1000, -1000, -1000, 1003, 1003, -1000, 1631, -1000,
	-1000, -1000, 1326, -1000, -1000, -64, 43489, 43489, 43489, 43489,
	-1000, 986, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 657, 19995, 1270, -1000, -1000, 376,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19377,
	-1000, 19377, -1000, 2199, 1166, 977, 19377, 19377, -1000, 1029,
	1012, 1159, -1000, -1000, -1000, -1000, -1000, 19377, -1000, -1000,
	-1000, 19377, 266, 1356, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1270, 384, -1000, -1000, -1000, -1000,
	2250, -1000, 1270, 19377, -1000, -1000, 19377, -1000, 19377, 19377,
	-1000, 19377, -1000, 19377, 1431, 2042, 1431, 1431, 26185, -1000,
	-1000, 2249, 2245, 2219, 1997, 1989, 1989, 2026, -1000, 2217,
	2216, -1000, 1162, 2215, 1157, 843, -1000, 43489, 19377, 179,
	-1000, 420, 43489, 179, 43489, -1000, 2212, -1000, -1000, 19377,
	1656, -1000, 19377, -1000, -1000, -1000, -1000, -1000, -1000, 6853,
	2252, 1464, -1000, -1000, 671, -1000, 19377, -1000, -1000, -1000,
	6379, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1155,
	1151, -1000, -1000, 1637, 19377, -1000, -1000, -1000, 1322, 1313,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1631, -1000,
	-1000, -1000, -1000, 377, -402, 1574, 43489, 1011, -1000, 1561,
	1436, 372, 179, 1148, 711, 711, 711, 990, 978, 30511,
	1559, -1000, 43489, 450, -1000, 377, -1000, -84, -90, 1159,
	-1000, -1000, 2156, -1000, -1000, 12554, -1000, -1000, 1625, 1803,
	-1000, -1000, -1000, 985, -1000, -1000, 1159, 1159, 1270, -1000,
	1159, 1159, 1284, 1281, -1000, 1367, 1539, -1000, 266, 1270,
	1883, -1000, -1000, 6853, -1000, -1000, 2212, 2214, 128, -1000,
	-1000, 269, 128, 977, 1482, 1159, 1427, 1268, 1159, 26803,
	-1000, 2207, 2201, 31129, 31129, 666, 2245, -126, 19377, 19377,
	1985, 965, -1000, -1000, -1000, -1000, 1145, 1143, -1000, 1140,
	-1000, 2299, -1000, 977, -1000, 179, -1000, 568, 1394, -1000,
	2199, 977, 43489, 977, 112, 2212, -1000, 1159, -1000, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431, 1431,
	1431, 1431, -1000, -1000, 43489, 1492, -1000, -1000, 2154, 1513,
	70, -1000, 1469, -1000, -1000, 160, -1000, 19377, -1000, 30511,
	1137, 1134, -1000, -1000, -1000, -1000, -407, -1000, -1000, -1000,
	-1000, -1000, -1000, 407, 1422, -1000, 699, 43489, 43489, 1270,
	353, -67, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19377, -1000, 1270, 1872, -1000, -224, -1000, -383, 19377,
	-119, -1000, -1000, -119, -1000, 19377, -1000, -1000, 19377, -1000,
	19377, -1000, 1466, -1000, -1000, -1000, -1000, -1000, 1466, 1466,
	-1000, -126, -1000, 1407, -1000, 43489, 977, 1382, -1000, 951,
	-1000, -1000, -1000, -1000, -1000, 43489, 1394, 43489, -1000, 1440,
	1270, 1431, 2199, -1000, 1432, -1000, 407, -1000, 1614, 1812,
	-1000, -1000, -1000, 17523, -1000, -1000, -1000, -1000, -1000, 190,
	-63, 12554, 9439, 1417, -1000, -1000, 1946, -58, -73, 1367,
	-1000, -317, -1000, -1000, -1000, -1000, 163, -1000, -1000, 1382,
	-1000, -1000, 1228, 1213, 1107, 29893, -1000, -1000, -1000, -1000,
	-126, -1000, -1000, 2143, -1000, -1000, 1363, -1000, -1000, 26185,
	42871, -1000, -48, 258, -63, 19377, 1565, 1270, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35, -1000, -1000, -1000,
	-1000, -1000, 1670, -1000, 1934, -1000, -1000, -1000, 185, -346,
	-158, -162, -1000, -1000, -1000, 19377, -1000, 19377, -1000, 19377,
	-1000, -1000, -1000, 43489, 1431, -1000, 1312, -1000, 5154, -178,
	1865, -1000, -12, -1000, -1000, -1000, 932, 1103, -1000, -1000,
	-1000, -1000, -1000, -1000, 1447, 43489, -1000, 472, -1000, -1000,
	-64, -65, 802, -1000, -1000, -1000, -1000, -1000, 1086, 1082,
	1159, -1000, 43489, -1000, 42871, -173, 655, 6853, -1000, 1861,
	1843, 2257, -1000, -1000, -1000, -1000, -1000, -1000, -417, 1287,
	291, -1000, -68, 185, -1000, 19377, -1000, 19377, -1000, 1270,
	-1000, -1000, 2130, 112, -1000, 2296, -1000, 2287, 687, 687,
	-1000, 968, -417, -1000, -75, -1000, 1159, 1159, -1000, -180,
	-1000, -1000, -1000, -1000, -1000, 468, 1015, -1000, -1000, -1000,
	-1000, -1000, -1000, 6853, -1000, -1000, -1000, 257, 257, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 2780, 2778, 32, 3, 44, 43, 2773, 45, 108,
	199, 30, 196, 122, 2772, 2769, 2768, 2767, 2762, 2761,
	2760, 256, 255, 235, 2759, 2757, 2756, 2755, 2754, 2753,
	2752, 2751, 2750, 2748, 229, 175, 195, 2747, 2746, 2745,
	142, 187, 99, 101, 193, 2744, 2743, 92, 2742, 2741,
	2740, 228, 227, 226, 821, 2738, 184, 129, 60, 2736,
	2735, 2734, 2732, 2731, 2730, 2729, 2728, 2727, 2725, 2724,
	2723, 2716, 2710, 2705, 2703, 2701, 200, 2700, 2699, 21,
	2696, 94, 2684, 2683, 2682, 2681, 9, 2680, 2679, 16,
	40, 2678, 2677, 53, 2673, 2671, 2670, 2668, 2667, 20,
	2666, 27, 2665, 34, 2663, 2661, 147, 2658, 2656, 2654,
	41, 2652, 2645, 2642, 2641, 2640, 2639, 2632, 162, 2631,
	2630, 2628, 2627, 201, 2624, 2618, 262, 124, 128, 2617,
	2616, 111, 192, 2615, 139, 2614, 2613, 2612, 168, 2611,
	3477, 2610, 2609, 81, 78, 2606, 71, 2602, 2600, 8,
	91, 74, 7, 17, 14, 2599, 2592, 79, 104, 2591,
	148, 116, 96, 2583, 120, 110, 2575, 2574, 12, 6,
	2573, 5, 1, 2, 82, 2570, 2567, 131, 2566, 2565,
	2558, 105, 2556, 2550, 3479, 2541, 102, 157, 121, 89,
	2539, 55, 76, 2538, 2537, 2534, 2530, 2528, 61, 2527,
	2526, 2522, 161, 35, 181, 2519, 42, 58, 69, 153,
	2518, 70, 93, 2517, 160, 155, 2516, 2513, 77, 52,
	50, 2511, 118, 151, 137, 65, 106, 152, 2509, 2508,
	73, 85, 2507, 2506, 2504, 2501, 176, 2500, 2497, 83,
	2495, 68, 2492, 203, 2488, 22, 2481, 63, 47, 2479,
	80, 133, 86, 33, 2473, 182, 2469, 67, 174, 150,
	180, 2465, 2464, 2462, 2461, 194, 365, 2459, 2458, 84,
	183, 164, 167, 100, 2457, 378, 2455, 2453, 117, 1510,
	5232, 2452, 31, 179, 2450, 2449, 6364, 177, 49, 25,
	2448, 135, 2447, 2441, 2440, 197, 178, 127, 1055, 75,
	2439, 2437, 2433, 19, 2431, 2430, 2429, 2426, 2423, 2421,
	138, 39, 38, 37, 205, 88, 11, 119, 172, 90,
	2418, 2417, 2416, 146, 115, 2415, 173, 170, 159, 132,
	2414, 186, 163, 136, 2407, 154, 36, 2404, 2402, 2398,
	2393, 107, 2392, 2391, 2388, 2385, 171, 165, 141, 97,
	2371, 98, 145, 169, 166, 66, 2366, 48, 2363, 2362,
	29, 189, 28, 2360, 15, 126, 134, 2355, 0, 2351,
	23, 185, 381, 191, 2350, 2348, 4, 18, 10, 2345,
	2338, 2337, 2335, 158, 2334, 2332, 2328, 2327, 26, 59,
	24, 13, 130, 95, 2323, 2322, 4339, 1480, 149, 2299,
	198,
}

//line sql.y:7552
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 394, 395, 395, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 368, 368,
	368, 371, 371, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	398, 398, 179, 179, 177, 177, 178, 178, 250, 250,
	24, 25, 25, 260, 260, 259, 259, 259, 261, 261,
	261, 261, 298, 298, 26, 26, 26, 26, 26, 124,
	124, 370, 370, 369, 364, 364, 363, 363, 362, 367,
	367, 366, 366, 365, 38, 39, 48, 48, 48, 48,
	49, 50, 372, 372, 337, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 339, 339, 325, 325, 338, 338, 338, 338, 338,
	338, 338, 324, 324, 135, 135, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 387, 387, 387, 386, 386, 229, 229,
	229, 229, 229, 229, 229, 229, 145, 145, 157, 157,
	157, 157, 157, 143, 143, 144, 142, 142, 142, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 156, 156, 152, 152, 152, 153, 153,
	153, 154, 154, 388, 388, 388, 388, 303, 303, 303,
	303, 306, 306, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 305, 305, 305, 305, 305, 307, 307, 307,
	307, 307, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 309, 309,
	309, 309, 309, 309, 309, 309, 323, 323, 310, 310,
	318, 318, 319, 319, 319, 320, 320, 320, 321, 321,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 317,
	317, 316, 316, 316, 326, 351, 351, 350, 350, 348,
	348, 348, 348, 348, 348, 348, 348, 335, 335, 345,
	345, 345, 345, 345, 334, 334, 330, 330, 330, 331,
	331, 332, 332, 329, 329, 333, 333, 347, 347, 346,
	346, 327, 327, 328, 328, 353, 389, 389, 389, 389,
	389, 390, 390, 354, 379, 381, 381, 381, 380, 380,
	377, 378, 376, 376, 376, 376, 376, 81, 81, 81,
	273, 273, 274, 274, 343, 343, 342, 342, 342, 344,
	344, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 268, 268, 268, 375, 375, 375, 375, 375,
	375, 374, 374, 374, 340, 340, 340, 373, 373, 57,
	57, 212, 212, 392, 392, 393, 393, 393, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 46, 46, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 106, 106, 107, 107, 107, 107, 109,
	109, 109, 356, 356, 58, 58, 3, 3, 167, 169,
	170, 170, 168, 168, 168, 168, 168, 168, 60, 60,
	59, 59, 172, 171, 173, 173, 173, 1, 1, 2,
	2, 4, 4, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 322, 322, 322, 355, 355,
	357, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 112, 111, 111, 110, 113, 113, 113, 113, 113,
	113, 113, 113, 359, 359, 359, 61, 61, 360, 311,
	312, 313, 5, 6, 336, 358, 120, 120, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 267,
	267, 276, 276, 266, 266, 291, 291, 291, 269, 269,
	269, 270, 270, 385, 385, 385, 263, 263, 64, 64,
	64, 66, 66, 67, 68, 68, 293, 293, 294, 294,
	69, 70, 82, 82, 82, 82, 82, 82, 105, 105,
	105, 15, 15, 15, 15, 78, 78, 78, 14, 14,
	65, 65, 72, 382, 382, 383, 384, 384, 384, 384,
	73, 75, 31, 31, 31, 31, 31, 31, 130, 130,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 125, 125, 125, 119, 119, 399, 76, 77,
	77, 123, 123, 123, 116, 116, 116, 122, 122, 122,
	16, 16, 17, 249, 249, 18, 18, 127, 127, 129,
	129, 129, 129, 129, 131, 131, 131, 131, 131, 131,
	131, 126, 126, 128, 128, 128, 128, 284, 284, 284,
	283, 283, 161, 161, 163, 162, 162, 164, 164, 165,
	165, 165, 165, 210, 210, 187, 187, 247, 247, 245,
	245, 246, 246, 248, 248, 248, 248, 251, 251, 166,
	166, 166, 166, 174, 174, 175, 175, 176, 176, 292,
	292, 289, 289, 289, 288, 288, 180, 180, 180, 182,
	181, 181, 181, 181, 183, 183, 185, 185, 184, 184,
	186, 191, 191, 190, 190, 188, 188, 188, 188, 189,
	189, 189, 189, 192, 192, 140, 140, 140, 140, 140,
	140, 140, 155, 155, 155, 155, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 236, 236, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 149, 83, 83, 83, 84,
	84, 85, 85, 85, 85, 85, 86, 86, 86, 86,
	86, 141, 141, 88, 88, 87, 87, 205, 205, 281,
	281, 89, 90, 90, 93, 93, 92, 91, 91, 97,
	97, 94, 94, 96, 96, 95, 98, 98, 99, 100,
	100, 264, 264, 193, 193, 201, 201, 201, 201, 194,
	194, 194, 194, 194, 194, 194, 202, 202, 202, 209,
	203, 203, 199, 199, 199, 199, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 160, 160,
	160, 160, 217, 217, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 148,
	148, 300, 300, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 400, 400, 314, 314, 314, 314,
	200, 200, 200, 200, 200, 121, 121, 121, 121, 121,
	297, 297, 297, 301, 301, 301, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 302, 302, 215, 215, 117, 117, 213, 213, 214,
	216, 216, 211, 211, 211, 196, 196, 196, 218, 218,
	219, 219, 101, 102, 102, 103, 103, 220, 220, 222,
	221, 221, 223, 224, 224, 224, 225, 225, 226, 226,
	226, 47, 47, 47, 47, 47, 42, 42, 42, 42,
	43, 43, 43, 43, 132, 132, 132, 132, 134, 134,
	133, 133, 79, 79, 80, 80, 80, 138, 138, 139,
	139, 139, 136, 136, 137, 137, 243, 243, 227, 227,
	227, 234, 234, 234, 230, 230, 232, 232, 232, 233,
	233, 233, 231, 240, 240, 242, 242, 241, 241, 237,
	237, 238, 238, 239, 239, 239, 235, 235, 195, 195,
	195, 195, 195, 244, 244, 244, 244, 252, 252, 206,
	206, 208, 208, 207, 207, 159, 253, 253, 257, 254,
	254, 258, 258, 258, 258, 258, 255, 255, 256, 256,
	285, 285, 285, 262, 262, 275, 275, 271, 271, 272,
	272, 265, 265, 277, 277, 277, 74, 204, 204, 352,
	352, 349, 280, 280, 282, 282, 286, 286, 290, 290,
	287, 287, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 396, 397, 295, 296,
	296, 296,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 7,
	7, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 2, 3, 3, 3, 5, 2, 3, 3, 2,
	3, 4, 4, 4, 3, 4, 4, 5, 3, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 1, 1, 2, 1,
	3, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 4, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	5, 5, 4, 0, 2, 4, 4, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 4, 3, 7, 0, 3, 1,
	3, 1, 3, 1, 1, 3, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 1, 1, 2, 6, 5, 6, 6, 0,
	2, 3, 3, 0, 2, 3, 3, 3, 2, 3,
	1, 6, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 9, 7, 6, 6,
	2, 2, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 8, 5, 4, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 6, 5, 9, 6, 9, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 2, 2, 0, 3,
	0, 2, 2, 1, 3, 0, 1, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 1, 0, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 4, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -394, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -396,
	11, 438, 256, 255, 28, -12, 483, 86, -395, 627,
	-243, -227, 22, 33, 29, -226, -222, -123, -227, 20,
	18, 7, -76, -399, -76, -76, 12, 13, -76, -337,
	-339, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -361, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 483, 486, -344, 223, 229, 230,
	439, 123, 122, 75, 225, -341, 361, 516, 597, -56,
	599, 102, 104, 598, 44, 235, 600, 601, 602, 523,
	603, 244, 604, 605, 606, 607, 613, 565, 614, 615,
	616, 124, 7, -76, -290, -286, -368, -279, 89, 90,
	91, 480, 247, 514, 515, 296, 81, 41, 489, 358,
	361, 516, 597, 307, 321, 315, 342, 334, 481, 517,
	490, 299, 248, 284, 591, 332, 132, 599, 302, 518,
	262, 366, 367, 519, 368, 102, 310, 405, 612, 301,
	520, 610, 104, 598, 79, 51, 594, 44, 257, 330,
	231, 326, 600, 285, 521, 492, 278, 123, 120, 619,
	36, 324, 50, 30, 609, 122, 49, 601, 147, 522,
	602, 523, 370, 349, 585, 48, 371, 263, 524, 84,
	268, 485, 305, 593, 372, 472, 325, 373, 295, 608,
	228, 525, 577, 374, 375, 586, 526, 350, 354, 474,
	527, 397, 376, 626, 52, 528, 529, 587, 121, 530,
	78, 603, 80, 319, 320, 531, 293, 246, 477, 478,
	399, 346, 451, 458, 459, 108, 109, 454, 110, 460,
	111, 461, 462, 463, 452, 112, 105, 453, 464, 465,
	347, 348, 113, 466, 107, 106, 455, 457, 114, 467,
	244, 35, 377, 482, 297, 58, 272, 400, 46, 352,
	623, 45, 581, 532, 584, 345, 341, 448, 53, 533,
	534, 535, 536, 604, 344, 318, 340, 618, 4, 290,
	605, 62, 230, 356, 355, 357, 279, 396, 337, 537,
	538, 539, 251, 82, 540, 327, 21, 541, 542, 378,
	286, 543, 56, 544, 545, 403, 260, 546, 54, 606,
	39, 547, 265, 620, 607, 548, 549, 550, 551, 267,
	552, 380, 553, 379, 351, 353, 274, 381, 484, 554,
	306, 323, 264, 611, 555, 252, 468, 469, 470, 471,
	592, 476, 475, 266, 271, 259, 404, 253, 556, 557,
	558, 559, 560, 300, 576, 561, 562, 311, 613, 449,
	43, 563, 564, 565, 566, 567, 294, 289, 398, 407,
	61, 83, 363, 568, 569, 590, 317, 287, 570, 308,
	55, 614, 615, 616, 281, 617, 9, 624, 625, 383,
	124, 291, 292, 47, 338, 273, 571, 303, 572, 328,
	329, 343, 316, 339, 309, 578, 275, 384, 450, 261,
	573, 406, 288, 359, 364, 304, 488, 473, 280, 385,
	589, 487, 336, 333, 282, 574, 386, 236, 276, 277,
	575, 579, 387, 388, 298, 389, 390, 391, 392, 393,
	395, 394, 283, 486, 314, 331, 365, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 447, 234, -76, 234, -184,
	-286, 234, -255, 367, -276, 369, 382, 377, 387, 375,
	-267, 378, 380, 274, -385, 397, 234, 384, 222, 370,
	379, 388, 389, 298, 395, 390, 394, 283, 391, 392,
	393, -368, 174, 602, 617, 132, 335, 374, 372, 398,
	581, -286, 309, -293, 314, -280, -368, -279, 312, -184,
	-82, 577, 226, -295, -295, -125, 581, 583, -203, -140,
	140, -155, -158, -146, -150, -197, -198, -199, -200, -156,
	-211, 163, 164, 171, 141, -209, -159, 26, 479, 440,
	439, 174, 31, -149, 68, 69, 442, 443, 143, 57,
	415, 416, -157, 410, 417, 412, 445, 446, 115, 447,
	105, 107, 106, 448, 449, 450, 474, 477, 478, 476,
	475, 347, 348, 451, 452, 453, 108, 109, 110, 111,
	112, 113, 114, 454, 457, 455, 456, 458, 459, 460,
	465, 466, 461, 462, 463, 464, 467, -85, -97, 505,
	504, -98, -147, -148, -280, -286, 239, 409, 233, 169,
	438, -151, -144, -8, -207, 217, 408, 413, 414, 418,
	411, 491, 493, 508, 509, 511, 496, 501, 500, 503,
	468, 469, 470, 471, 472, 473, -368, -279, -153, -152,
	-193, 92, 98, 103, 99, -391, 116, -396, 595, 93,
	94, 95, 96, 97, 117, 118, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 44, 383,
	383, -184, -76, -76, -76, -76, -220, -123, -222, -10,
	-8, -396, 8, -76, -8, -9, -13, -34, -36, 510,
	-35, -286, -227, -243, 12, 159, 42, 50, -225, -226,
	-12, -8, -140, 19, 23, 24, -128, 165, -140, -286,
	-77, -128, -265, 238, -76, -76, -254, -298, 309, -258,
	398, 397, -282, -256, -280, -278, -255, 396, 227, 23,
	139, 25, 27, 142, 174, 127, 19, 143, 37, 229,
	335, 245, 173, 241, 439, 222, 72, 491, 410, 412,
	408, 415, 441, 442, 409, 369, 31, 13, 493, 28,
	255, 24, 38, 167, 224, 146, 494, 258, 26, 256,
	115, 118, 496, 22, 75, 250, 14, 243, 40, 16,
	497, 498, 17, 239, 238, 159, 235, 70, 11, 217,
	29, 155, 66, 499, 134, 500, 501, 502, 503, 128,
	68, 156, 20, 621, 413, 414, 33, 582, 479, 269,
	169, 73, 59, 583, 140, 411, 504, 505, 116, 506,
	119, 76, 588, 136, 18, 71, 42, 507, 270, 508,
	240, 622, 509, 401, 510, 157, 225, 438, 69, 158,
	595, 511, 596, 233, 382, 8, 444, 32, 254, 242,
	126, 67, 512, 234, 145, 445, 446, 237, 129, 117,
	7, 133, 34, 12, 74, 77, 416, 417, 418, 57,
	125, 483, 144, 15, 513, 402, 138, 132, -338, 156,
	-324, -328, -280, 249, -354, 245, -184, -347, -346, -280,
	-396, -124, -275, 235, 243, 242, 133, -372, 136, 291,
	409, 233, -51, -52, -53, -255, 173, 601, -106, 266,
	270, 87, 87, -328, -327, -326, -373, 270, 249, -353,
	-345, 241, 250, -334, 242, 243, -329, 235, 134, -373,
	-329, 240, 250, 245, 249, 270, 270, 124, 270, 124,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 265,
	-335, 148, -335, 487, 487, -341, -373, 245, 235, -373,
	-373, 237, 35, 35, -277, -329, 237, 25, -335, -335,
	-335, -255, 173, -335, -335, -335, -335, 278, 278, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, 234, -372, -132, 394,
	298, 81, -54, 280, -37, -184, -275, 235, 236, -372,
	267, -184, 218, -184, -269, 156, 15, -269, -266, 383,
	381, 368, 373, -269, -269, -269, -269, 281, 366, -330,
	235, 35, 246, 383, 281, 366, 281, 282, 281, 282,
	376, 386, 281, -291, 14, 159, 409, 371, 375, 274,
	234, 275, 236, 385, 282, -291, 93, -270, 156, 383,
	277, -269, -269, -296, -396, -282, 335, -368, 584, -296,
	-296, 32, 90, 237, -280, -78, -280, 93, -15, -11,
	-22, -21, -23, 148, -130, 383, -118, 174, 602, 585,
	586, 587, 584, 380, 592, 590, 588, 281, 589, 87,
	136, 138, 139, 4, -140, 155, -194, 148, 149, 150,
	151, 152, 153, 154, 159, 140, 142, 156, -236, 137,
	160, 161, 162, 163, 164, 165, 166, 168, 167, 169,
	170, 157, 158, 173, 220, 221, -150, -150, -150, -150,
	-209, -396, -396, -396, -150, -264, -396, -396, -396, -396,
	-396, -215, -140, -396, -400, -396, -400, -400, -314, -396,
	-314, -396, -396, -396, -396, -396, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, -396, -396,
	-396, -396, -396, -396, -396, -396, -396, -396, 218, -396,
	-396, -396, -396, -396, -146, -314, -314, -314, -314, -314,
	-396, -396, -396, -396, -396, -396, 103, 98, 92, -211,
	99, 93, -280, -286, -8, -9, -203, -396, -295, -382,
	-383, -187, -184, -396, 298, -280, -280, 267, -225, -12,
	-8, -220, -226, -222, -8, -76, -116, -129, 63, 64,
	-131, 24, 38, 67, 65, 23, -397, 88, -397, -243,
	-397, 87, -36, -247, 86, 61, 43, 93, 93, 87,
	21, -221, -223, -140, 14, -284, 4, -283, 25, -280,
	93, 218, 101, 14, -185, 29, -184, -265, -265, 87,
	309, -258, -298, -260, -259, 399, 401, 148, -285, -280,
	93, 31, 88, 87, -184, -303, -306, -308, -307, -309,
	-304, -305, 332, 333, 174, 336, 338, 339, 340, 341,
	342, 343, 344, 345, 346, 349, 32, 257, 328, 329,
	330, 331, 350, 351, 352, 353, 354, 355, 356, 357,
	315, 334, 481, 316, 317, 318, 319, 320, 321, 323,
	324, 325, 326, 327, -371, -368, 86, 88, 87, -310,
	86, -140, -132, 234, -368, 235, 235, 235, -76, 438,
	-335, -335, -335, 265, 19, -44, -41, -361, 18, -40,
	-41, 227, 120, 121, 224, 86, -324, 86, -333, -371,
	-368, 86, 134, 240, 133, -332, -329, -332, -333, -368,
	-211, -368, 134, 134, -368, -368, -251, -280, -251, -251,
	23, -251, 23, -251, 23, 95, -280, -251, 23, -251,
	23, -251, 23, -251, 23, -251, 23, 31, 78, 79,
	80, 31, 82, 83, 84, -211, -368, -368, -211, -324,
	-255, -184, -368, 95, 95, 95, -335, -335, 95, 93,
	93, 93, -335, -335, 95, 93, -288, -286, 93, 93,
	-374, 251, 295, 297, 95, 95, 95, 95, 31, 93,
	-375, 31, 609, 608, 610, 611, 612, 93, 95, 31,
	95, 31, 95, -280, 86, -184, -138, 285, 222, 224,
	227, 76, 93, 299, 303, 304, 148, 44, 87, 237,
	234, -368, -271, 239, -271, -280, -287, -286, -278, 93,
	-140, -331, 14, 159, -291, -291, -269, -184, -331, -291,
	-269, -184, -269, -269, -269, -269, -291, -291, -291, -269,
	-286, -286, -184, -184, -184, -184, -184, -184, -184, -296,
	-270, -269, 584, 93, -263, 14, 76, -296, -296, -294,
	312, 346, 578, 579, 580, 87, 483, -177, -184, 584,
	584, 584, 584, 584, 584, -140, -140, -140, -140, 506,
	-201, 116, 140, 117, 118, -158, -202, -207, -209, 100,
	159, 142, 156, -236, -146, -150, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -297,
	-280, 93, 174, -154, -153, 99, -391, -154, -126, -128,
	-140, -140, -368, -126, -126, -140, -122, 24, 38, -213,
	-214, 144, -211, -397, -397, 95, 99, -280, -280, -115,
	-114, 420, 421, 422, 423, 425, 426, 427, 430, 431,
	435, 436, 419, 437, 424, 429, 432, 433, 434, 428,
	331, -140, -140, -140, -140, -140, -140, -83, -140, 127,
	128, 129, -140, -140, -140, -397, -140, -140, -140, -204,
	-203, -367, -366, -365, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -397, -140, -160,
	-144, 95, -368, 99, -140, -140, -127, 24, 38, -126,
	-282, -287, -278, -126, -127, -127, -126, -126, -280, -140,
	-140, -140, -140, -140, -140, 218, -243, -397, -203, 87,
	-384, 401, 402, 582, -289, 270, -288, 25, -204, 93,
	14, -249, 77, -280, -225, -225, 63, 64, 59, -126,
	-131, -397, -35, 25, -245, -280, 62, 93, -315, -255,
	358, 359, 174, -140, -140, 87, -224, 27, 28, -184,
	-283, 165, -287, -184, -250, 270, -184, -162, -164, -165,
	-166, -187, -210, -396, -167, 502, 499, 14, -177, -178,
	-186, -286, -258, -260, 87, 400, 402, 403, 76, 119,
	-140, -316, 173, -343, -342, -341, -324, -326, -327, -328,
	88, -316, -320, 364, 363, -310, -310, -310, -310, -310,
	-315, -315, -315, -315, 86, 86, -310, -310, -310, -310,
	-318, 86, -318, -318, -319, 86, -319, -354, -140, -351,
	-350, -348, -349, 244, 102, 575, 531, 483, 523, 565,
	77, -346, -224, 95, -397, -138, -272, 239, -352, -349,
	-368, -368, -368, -272, -368, 93, -368, 93, -368, 93,
	-107, -58, -1, 621, 622, 623, 87, 19, -325, -324,
	-57, 295, -357, -358, 270, -353, -347, -333, 134, -332,
	-333, -333, -368, 87, 29, 124, 124, 124, 124, 483,
	224, 32, -273, 522, 140, 575, 531, -324, -57, -297,
	237, -297, -297, 93, 93, -268, 617, -177, -134, 287,
	148, 276, 276, 234, 234, 289, -184, 300, 302, 301,
	299, 303, 304, 23, 23, 23, 288, 290, 292, 278,
	-184, -184, -271, 76, -179, -184, 26, -286, -184, -269,
	-269, -184, -269, -269, -184, -280, -118, 401, 87, 483,
	22, -119, 22, -396, 116, 117, 118, -202, -146, -150,
	-146, 139, 258, 87, -397, 25, 87, 77, -397, -397,
	-397, 87, 14, -126, -216, -214, 146, -140, -397, -397,
	-397, 87, 87, 14, -301, 25, -397, -397, -397, -397,
	-397, -215, -397, 14, 87, -397, -397, -397, 87, 87,
	-397, -397, 87, 87, -397, 87, 87, 87, -397, 87,
	87, 87, 87, -397, -397, -397, -397, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, -397, -90, 507,
	-397, -397, 87, -397, 87, -397, -126, -126, -396, 218,
	-397, -397, -397, -397, -397, 87, 87, 87, 87, 87,
	87, -282, -397, -383, 581, 402, -191, -190, -188, 74,
	238, 75, -396, -288, -397, -154, 90, -246, 90, -245,
	-196, -280, 95, 99, -227, -161, -163, 14, -131, -209,
	88, 87, -315, -231, -237, -266, -280, 93, 174, -317,
	174, -317, 358, 359, -223, 218, -192, 15, -195, 32,
	57, -11, -396, -396, 32, 87, -180, -182, -181, -183,
	66, 70, 72, 67, 68, 69, 73, -292, 25, -162,
	-9, -8, -396, -396, -396, -184, -177, -398, 14, 77,
	-398, 87, 218, -259, -261, 404, 401, 407, -368, 93,
	-106, 87, -341, -328, -228, -135, 40, -321, 365, -315,
	490, -315, -323, 93, -323, 95, 95, 88, -47, -42,
	-43, 33, 81, -348, -335, 93, 39, -335, -335, -280,
	88, -224, -134, -184, 140, 76, -352, -352, -352, -286,
	-2, 620, 626, 134, 86, 368, 18, -245, 87, 88,
	-212, 296, 88, -108, -280, 88, 86, -333, -333, -280,
	-396, 234, 31, 31, 575, 531, 522, -57, -212, -316,
	-368, 619, 618, 88, 236, 294, -139, 415, -136, 93,
	89, -184, -184, -184, -184, -184, 227, 224, -392, 305,
	-392, 279, 237, -177, -184, 87, -81, 253, 248, -291,
	-291, 33, -184, 401, 593, 591, -140, 139, 258, -158,
	-150, -128, 480, -299, 174, 332, 257, 330, 326, 346,
	337, 363, 328, 364, 325, 324, 323, -299, -297, -140,
	-140, -220, 147, -140, 145, -140, -140, -140, -397, 174,
	332, 14, -140, -140, -140, -140, -365, -140, -203, -140,
	-203, -140, -140, -140, -140, -140, -366, -366, -366, -366,
	-366, -203, -203, -203, -203, -396, -280, -93, -92, -91,
	558, 238, -90, -160, -93, -160, -397, -397, -127, -282,
	-140, -140, -140, -140, -140, -140, -188, -329, -329, -329,
	-251, 87, -262, 22, 14, 57, 57, -161, -192, -162,
	-131, -280, -234, 577, -240, 46, -238, -239, 47, -235,
	48, 56, -317, -317, 165, -225, -140, -252, 76, -253,
	-257, -211, -206, -208, -207, -396, -244, -397, -280, -251,
	-253, -164, -165, -165, -164, -165, 66, 66, 66, 71,
	66, 71, 66, -181, -286, -397, -397, -9, -9, -140,
	-289, 77, -162, -162, -186, -286, 165, 401, 405, 406,
	-341, -390, 116, 140, 31, 76, 361, 102, -388, 173,
	519, 570, 575, 531, 523, 565, -389, 240, 133, 134,
	252, 25, 41, 88, 87, 88, 87, 88, 87, -274,
	-273, -43, -42, -335, -335, 95, -368, 93, 93, 236,
	26, -184, 76, 76, 76, -109, 624, 95, 86, -3,
	81, -140, 86, 19, -324, -211, -359, -311, -360, -312,
	-313, -5, -6, -336, -112, 57, 102, -61, 44, 235,
	604, 605, 124, -396, 617, -351, -245, -355, -357, -184,
	-143, -396, -142, -144, -151, 163, 164, -212, -184, -133,
	285, 293, 86, -137, 90, -370, 77, 276, 361, 276,
	-393, 306, 93, -393, -184, -81, -47, -184, -269, -269,
	33, -368, -397, -158, -150, -396, -302, 489, -310, -310,
	-310, -319, -310, 320, -310, 320, -310, -397, -397, 87,
	-397, 22, -397, -117, 444, -140, 87, 87, -397, 86,
	86, -140, -397, -397, -397, -397, -397, 87, -397, -397,
	-397, 87, -300, 576, -397, -397, -397, -397, -397, -397,
	-397, -397, -397, -397, -89, -281, -280, -90, 540, 540,
	-397, -90, -217, 87, -397, -397, 87, -397, 87, 87,
	-397, 87, -397, 87, -189, 22, -189, -189, -397, 90,
	-184, -192, -218, 16, -231, 51, 338, -242, -241, 55,
	47, -239, 19, 49, 19, 30, -252, 87, 148, 87,
	-397, -397, 87, 57, 218, -397, -192, -175, -174, 76,
	77, -176, 76, -174, 66, 66, -247, -397, -397, 87,
	-250, -162, -192, -192, 218, 116, -396, -145, -157, -143,
	12, 93, 93, -368, -387, 608, 609, 31, 95, -335,
	-335, 134, 134, -184, 86, -315, 93, -315, 95, 95,
	31, 82, 83, 84, 31, 78, 79, 80, -184, -184,
	-184, -184, -356, 86, 19, -140, 86, 148, 88, -245,
	-245, 272, 159, -335, 602, 278, 278, -335, -335, -335,
	-111, -110, 624, 88, -397, 87, -322, 483, 486, -140,
	-152, -152, -247, 88, -364, 483, -369, -280, -280, -280,
	-280, 95, 97, -146, -397, -315, -140, -140, -225, 93,
	-140, -140, 95, 95, -397, -203, -140, -397, -172, -171,
	-173, 585, 116, 31, -299, -397, -205, 270, -96, -95,
	-94, 14, -397, -140, -140, -140, -140, -140, -140, -396,
	66, 18, 16, -396, -396, -289, -218, -219, 17, 19,
	-232, 53, -230, 52, -230, -241, 19, 19, 93, 19,
	93, 134, -257, -140, -208, 57, -11, -280, -206, -280,
	-220, -140, 86, -140, -154, -192, -192, -140, -198, 447,
	105, 107, 106, 448, 449, 450, 474, 477, 478, 476,
	475, 347, 348, 451, 452, 453, 108, 109, 110, 111,
	112, 113, 114, 454, 457, 455, 458, 459, 460, 465,
	466, 461, 462, 463, 464, 467, 468, 469, 470, 471,
	472, 473, 93, 93, 86, -140, 88, 88, -247, -355,
	-58, 88, -245, 95, 88, 273, -207, -396, 93, -335,
	-335, -335, 95, 95, -288, -397, 87, -280, -389, -357,
	487, 487, -397, 25, -363, -362, -282, 86, 77, -121,
	159, 483, -397, -397, -397, -397, -397, 88, 88, -397,
	-397, 87, -397, -171, -173, -397, 76, -154, -220, 19,
	-93, 295, 297, -93, -397, 87, -397, -397, 87, -397,
	87, -397, -248, -397, -280, 240, 19, 19, -248, -248,
	-191, -219, -103, -102, -101, 513, -140, -203, -233, 54,
	76, 119, 93, 93, 93, 12, -206, 218, -225, -245,
	-169, 368, -220, -397, -245, 88, 25, 88, 626, 134,
	88, -207, -120, -396, 269, -288, 93, 93, -110, -113,
	-11, 87, 148, -245, -184, -397, 481, 73, 484, -203,
	-397, 76, 494, 585, -88, -87, -84, 596, 622, -203,
	-90, -90, -140, -140, -140, 87, -397, -397, -397, -103,
	87, -100, -99, -280, 76, 119, -253, -280, 88, -397,
	-396, -225, 88, -229, -11, 86, -3, 269, -311, -360,
	-312, -313, -5, -6, -336, -79, 483, -362, -340, -282,
	93, 95, 88, 62, 482, 485, -397, -86, 142, 594,
	573, -141, -152, -149, -397, 87, -397, 87, -397, 87,
	-280, 240, -101, 87, 25, -289, -170, -168, -280, 537,
	-380, -379, 479, -390, -386, 116, 140, 102, -388, 575,
	531, 125, 126, -79, -140, 86, -397, -80, 284, 581,
	-370, 62, -86, 595, 551, 525, 551, 525, -140, -140,
	-140, -99, -396, -397, 87, 22, -303, -60, 548, -377,
	-378, 76, -381, 374, 547, 568, 116, 93, 88, -245,
	245, -364, 483, 139, -397, 87, -397, 87, -397, -89,
	-168, 544, -316, -154, -378, 76, -377, 76, 13, 12,
	-4, 625, 88, 286, 484, -86, -140, -140, -397, -59,
	26, -169, -376, 253, 248, 251, 32, -376, 95, -4,
	485, -397, -397, 548, 247, 31, 116, -154, -172, -171,
	-171,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 827,
	827, 827, 0, 827, 0, 0, 827, -2, -2, 827,
	1398, 0, 827, 0, 0, -2, 759, 761, 0, 763,
	-2, 0, 0, 772, 1918, 1918, 822, 0, 0, 0,
	0, 0, 827, 827, 827, 827, 1257, 48, 827, 0,
	83, 84, 778, 779, 780, 63, 0, 1916, 1, 3,
	69, 73, 0, 0, 0, 56, 1266, 0, 76, 0,
	0, 831, 0, 829, 0, 1381, 827, 827, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 573, 501, 552, 499, 537, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	0, 0, 0, 534, 1383, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1284, 153, 1399, 1396, 1397, 38, 39,
	40, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639,
	1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659,
	1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679,
	1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699,
	1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739,
	1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 0, 1375, 0, 686,
	928, 0, 748, 748, 0, 748, 748, 748, 748, 0,
	0, 0, 698, 0, 0, 0, 0, 745, 0, 714,
	715, 0, 745, 0, 721, 751, 0, 726, 748, 748,
	729, 1919, 0, 1919, 1919, 1366, 0, 742, 740, 754,
	755, 758, 762, 0, 767, 770, 1392, 1393, 0, 785,
	47, 1642, 777, 790, 791, 0, 823, 824, 43, 1070,
	0, 950, 955, 966, 981, 982, 983, 984, 985, 987,
	988, 0, 0, 0, 0, 993, 994, 0, 0, 0,
	0, 0, 1051, 1002, 0, 0, 0, 0, 1233, 0,
	1194, 1194, 1087, 1194, 1196, 1196, 0, 0, 0, 1915,
	1686, 1694, 1695, 1717, 1809, 1858, 1649, 1668, 1669, 1791,
	1792, 1690, 1691, 1672, 1684, 1687, 1675, 1676, 1678, 1680,
	1685, 1692, 1698, 1677, 1697, 1696, 0, 1673, 1674, 1679,
	1689, 1693, 1681, 1682, 1683, 1688, 1699, 0, 0, 0,
	0, 0, 1146, 1147, 1242, 0, 0, 0, 0, 0,
	0, 273, 274, 1069, 1355, 0, 1196, 1196, 1196, 1196,
	1196, 1011, 1012, 1013, 1014, 1015, 1039, 1040, 1046, 1047,
	1786, 1787, 1788, 1789, 1635, 1867, -2, -2, 219, 220,
	221, 222, 223, 224, 225, 0, 215, 0, 0, 278,
	279, 275, 276, 277, 1053, 1054, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 1918, 0,
	800, 0, 0, 0, 0, 0, 1266, 0, 1258, 1257,
	61, 0, 827, -2, 0, 0, 0, 0, 45, 0,
	50, 887, 75, 74, 1306, 0, 0, 0, 57, 1267,
	65, 67, 1268, 0, 832, 833, 0, 863, 867, 0,
	828, 0, 0, 1382, 1381, 1381, 100, 0, 1854, 1359,
	-2, -2, 0, 0, 1394, 1395, 1368, -2, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, -2, 0, 0,
	165, 166, 0, 41, 404, 0, 161, 0, 397, 338,
	0, 1284, 0, 0, 0, 0, 0, 827, 0, 1376,
	142, 143, 150, 151, 152, 377, 377, 377, 549, 0,
	0, 153, 153, 508, 509, 510, 0, 0, -2, 402,
	0, 488, 0, 0, 391, 391, 395, 393, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 526, 0, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 634,
	0, 378, 0, 547, 548, 440, 0, 0, 0, 0,
	0, 0, 524, 525, 0, 0, 1384, 1385, 0, 0,
	0, 377, 377, 0, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1297, 0,
	0, 0, -2, 0, 678, 0, 0, 0, 1377, 1377,
	0, 685, 0, 687, 688, 0, 0, 689, 0, 745,
	745, 743, 744, 691, 692, 693, 694, 748, 0, 0,
	386, 387, 388, 745, 748, 0, 748, 748, 748, 748,
	745, 745, 745, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1919, 751, 748, 0, 722, 0, 723,
	724, 727, 728, 730, 1920, 1921, 1414, 1919, 1919, 734,
	738, 1367, 760, 768, 771, 788, 786, 787, 789, 781,
	782, 783, 784, 0, 802, 803, 808, 0, 0, 0,
	0, 814, 815, 816, 0, 0, 819, 820, 821, 0,
	0, 0, 0, 0, 948, 0, 0, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 967, 968, 0, 0, 0, 989, 990, 991, 992,
	995, 0, 0, 0, 1000, 1001, 0, 0, 0, 0,
	837, 0, 1234, 0, 1085, 0, 1086, 1088, 1089, 0,
	1090, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1387, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 847, 0, 0,
	847, 847, 0, 0, 0, 208, 209, 210, 211, 212,
	0, 0, 0, 0, 0, 0, 226, 227, 228, 229,
	230, 280, 1242, 0, 1069, 0, 0, 0, 44, 792,
	793, 0, 911, 1387, 0, 0, 843, 0, 55, 64,
	66, 1266, 59, 1266, 0, 849, 0, 0, -2, -2,
	850, 856, 857, 858, 859, 860, 52, 1917, 53, 0,
	72, 0, 46, 0, 0, 0, 0, 350, 1309, 0,
	0, 1259, 1260, 1263, 0, 864, 1728, 868, 0, 870,
	871, 0, 830, 0, 98, 0, 927, 0, 0, 0,
	1854, 1365, 0, 102, 103, 0, 0, 0, 361, 1370,
	1371, 1372, -2, 384, 0, 361, 345, 288, 289, 290,
	338, 292, 338, 338, 338, 338, 350, 350, 350, 350,
	321, 322, 323, 324, 325, 0, 0, 307, 338, 338,
	338, 338, 328, 329, 330, 331, 332, 333, 334, 335,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 340,
	340, 340, 342, 342, 0, 42, 0, 365, 0, 1263,
	0, 0, 1297, 1379, 1389, 0, 0, 0, 1379, 120,
	0, 0, 0, 550, 584, 502, 538, 551, 0, 505,
	506, -2, 0, 0, 487, 0, 489, 0, 385, 0,
	-2, 0, 395, 0, 391, 395, 392, 395, 383, 396,
	528, 529, 530, 0, 532, 533, 614, 897, 0, 0,
	0, 0, 0, 620, 621, 622, 0, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 539, 540, 541,
	542, 543, 544, 545, 546, 0, 0, 0, 0, 489,
	0, 535, 0, 441, 442, 443, 0, 0, 446, 447,
	448, 449, 0, 0, 452, 453, 454, 914, 915, 455,
	456, 481, 482, 483, 457, 458, 459, 460, 461, 462,
	463, 475, 476, 477, 478, 479, 480, 464, 465, 466,
	467, 468, 469, 472, 0, 135, 1288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1377, 0, 0, 0, 0, 846, 929, 1400, 1401, 749,
	750, 0, 389, 390, 748, 748, 695, 735, 0, 748,
	699, 736, 700, 702, 701, 703, 716, 717, 748, 706,
	746, 747, 707, 708, 709, 710, 711, 712, 713, 731,
	718, 719, 720, 752, 0, 756, 757, 732, 733, 0,
	769, 773, 774, 775, 776, 0, 0, 805, 94, 810,
	811, 812, 813, 825, 818, 1071, 945, 946, 947, 0,
	949, 952, 0, 1055, 1057, 954, 956, 1066, 1067, 1068,
	0, 0, 0, 0, 0, 960, 964, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 986,
	1210, 1211, 1212, 1003, 281, 282, 0, 1004, 0, 861,
	0, 0, 0, 0, 0, 0, 0, 838, 839, 1240,
	1237, 0, 0, 1195, 1197, 0, 0, 0, 0, 0,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1213, 0, 0, 0, 0, 0, 1233, 0, 1006,
	1007, 1008, 0, 0, 0, 1106, 0, 0, 0, 0,
	1388, 0, 130, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1148, 1149, 1150, 1151, 0, 0, 0, 0, 0, 848,
	1243, 0, -2, 0, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 0,
	795, 796, 798, 0, 931, 0, 912, 0, 0, 801,
	0, 842, 0, 845, 58, 60, 854, 855, 0, 872,
	851, 54, 49, 0, 0, 889, 1307, 350, 1329, 0,
	359, 359, 356, 1269, 1270, 0, 1262, 1264, 1265, 77,
	869, 865, 0, 943, 0, 0, 926, 0, 875, 877,
	878, 879, 909, 0, 882, 0, 0, 0, 0, 0,
	96, 928, 1360, 101, 0, 0, 106, 107, 1361, 1362,
	1363, 1364, 0, 573, -2, 436, 167, 169, 170, 171,
	162, -2, 348, 346, 347, 291, 350, 350, 315, 316,
	317, 318, 319, 320, 0, 0, 308, 309, 310, 311,
	302, 0, 303, 304, 305, 0, 306, 403, 0, 1271,
	366, 367, 369, 377, 0, 372, 373, 0, 377, 377,
	0, 398, 399, 0, 1263, 1288, 0, 0, 0, 1390,
	1389, 1389, 1389, 0, 155, 156, 157, 158, 159, 160,
	609, 0, 0, 585, 607, 608, 153, 0, 0, 163,
	491, 490, 0, 641, 0, 401, 0, 0, 395, 395,
	380, 381, 531, 0, 0, 616, 617, 618, 619, 0,
	0, 0, 518, 430, 0, 519, 520, 489, 491, 361,
	0, 444, 445, 450, 451, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 565, 566,
	567, 493, 571, 568, 493, 572, 1285, 1286, 1287, 0,
	0, 679, 0, 0, 427, 92, 1378, 684, 745, 705,
	737, 745, 697, 704, 725, 765, 809, 0, 0, 0,
	0, 817, 0, 0, 953, 1056, 1058, 957, 0, 961,
	965, 0, 0, 0, 0, 0, 0, 0, 1052, 1076,
	1077, 0, 0, 1257, 0, 1238, 0, 0, 1084, 1198,
	1199, 0, 0, 0, 0, 0, 1095, 1096, 1097, 1098,
	1099, 0, 1101, 0, 0, 1104, 1105, 1107, 0, 0,
	1110, 1111, 0, 0, 1112, 0, 0, 0, 1116, 0,
	0, 0, 0, 1125, 1126, 1127, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1139, 1140, 0,
	1034, 0, 0, 1034, 0, 1072, 0, 0, 847, 0,
	1200, 1201, 1202, 1203, 1204, 0, 0, 0, 0, 0,
	0, 1243, 1354, 794, 797, 799, 885, 932, 933, 0,
	0, 0, 0, 913, 1386, 840, 841, 844, -2, 0,
	0, 1245, 0, 0, 872, 943, 873, 0, 852, 51,
	888, 0, 1311, 1310, 1323, 1336, 359, 359, 353, 354,
	360, 355, 357, 358, 1261, 0, 1266, 0, 1347, 0,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	916, 0, 0, 919, 0, 0, 0, 0, 910, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 90, 91,
	0, 0, 0, 104, 105, 0, 0, 111, 362, 363,
	144, 153, 438, 168, 411, 0, 0, 287, 349, 312,
	313, 314, 0, 336, 0, 0, 0, 432, 116, 1275,
	1274, 377, 377, 368, 0, 371, 0, 0, 0, 1391,
	339, 400, 0, 134, 0, 0, 0, 0, 0, 140,
	579, 0, 0, 586, 0, 0, 0, 500, 0, 511,
	512, 0, 613, -2, 675, 365, 0, 379, 382, 898,
	0, 0, 513, 0, 516, 517, 431, 491, 522, 523,
	536, 473, 474, 471, 0, 0, 1298, 1299, 1304, 1302,
	1303, 121, 557, 559, 558, 562, 0, 0, 495, 0,
	495, 555, 0, 427, 1271, 0, 683, 428, 429, 748,
	748, 804, 95, 0, 807, 0, 0, 0, 0, 958,
	962, 862, 0, 1231, 338, 338, 1218, 338, 342, 1221,
	338, 1223, 338, 1226, 338, 1229, 1230, 0, 0, 0,
	0, 1235, 1083, 1241, 0, 0, 0, 0, 1094, 0,
	0, 0, 0, 0, 0, 0, 132, 133, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1029, 1033, 0, 1035, 1036,
	0, 0, 1142, 0, 0, 1152, 1073, 1074, 0, 1244,
	0, 0, 0, 0, 0, 0, 934, 939, 939, 939,
	0, 0, 0, 1373, 1374, 1246, 1247, 943, 1248, 874,
	853, 890, 1329, 0, 1322, 0, -2, 1331, 0, 0,
	0, 1337, 351, 352, 866, 78, 944, 81, 0, 1347,
	1356, 0, 1338, 1349, 1351, 0, 0, 0, 1343, 0,
	943, 876, 905, 907, 0, 902, 917, 918, 920, 0,
	922, 0, 924, 925, 887, 881, 883, 0, 0, 0,
	98, 0, 943, 943, 97, 0, 930, 108, 109, 110,
	437, 172, 177, 0, 0, 0, 182, 0, 184, 0,
	0, 0, 189, 190, 377, 377, 412, 0, 284, 286,
	0, 0, 175, 350, 0, 350, 0, 343, 0, 413,
	433, 1272, 1273, 0, 0, 370, 374, 375, 376, 0,
	1380, 136, 0, 0, 0, 582, 0, 610, 0, 0,
	0, 0, 0, 0, 164, 492, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 0, 377, 0, 0, 0,
	377, 377, 377, 0, 667, 364, 0, 0, 638, 635,
	514, 0, 213, 214, 216, 0, 0, 521, 887, 1289,
	1290, 1291, 0, 1301, 1305, 124, 0, 0, 0, 0,
	569, 0, 494, 570, 680, 681, 682, 93, 690, 696,
	806, 826, 951, 959, 963, 0, 0, 1232, 1216, 350,
	1219, 1220, 1222, 1224, 1225, 1227, 1228, 998, 999, 0,
	1079, 0, 1081, 1266, 0, 1239, 0, 0, 1093, 0,
	0, 0, 1102, 1103, 1108, 1109, 1113, 0, 1115, 1117,
	1118, 0, 0, 0, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 0, 1027, 1030, 1141, 1037, 1038,
	1043, 1144, 0, 0, 1075, 1154, 0, 1159, 0, 0,
	1165, 0, 1169, 0, 0, 0, 0, 0, 911, -2,
	62, 1248, 1250, 0, 1316, 1314, 1314, 1324, 1325, 0,
	0, 1332, 0, 0, 0, 0, 82, 0, 0, 0,
	1352, 0, 0, 0, 0, 99, 1257, 899, 906, 0,
	0, 900, 0, 901, 921, 923, 880, -2, 884, 0,
	943, 943, 88, 89, 0, 178, 0, 180, 206, 207,
	0, 183, 185, 186, 187, 193, 194, 195, 188, 0,
	0, 283, 285, 0, 0, 326, 337, 327, 0, 0,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 887, 137,
	138, 139, 574, 0, 584, 0, 0, 0, 577, 0,
	503, 0, 0, 0, 377, 377, 377, 0, 0, 0,
	0, 652, 0, 0, 615, 0, 623, 0, 0, 0,
	217, 218, 0, 1300, 556, 0, 122, 123, 0, 0,
	561, 496, 497, 1205, 997, 1217, 0, 0, 0, 1236,
	0, 0, 0, 0, 1100, 0, 0, 1121, 0, 0,
	0, 604, 605, 0, 1172, 1032, 1257, 0, 1034, 1044,
	1045, 0, 1034, 1153, 0, 0, 0, 0, 0, 0,
	940, 0, 0, 0, 0, 931, 1250, 1255, 0, 0,
	1319, 0, 1312, 1315, 1313, 1326, 0, 0, 1333, 0,
	1335, 0, 1357, 1358, 1350, 0, 1342, 1345, 1341, 1344,
	1266, 903, 0, 908, 0, 1257, 87, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 0, 0, 341, 344, 0, 0,
	0, 575, 0, 587, 578, 0, 665, 0, 669, 0,
	0, 0, 672, 673, 674, 651, 0, 655, 405, 639,
	636, 637, 515, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 1078, 1080, 1082, 1091, 1092, 1214, 1215, 1114,
	1119, 0, 1122, 0, 0, 1123, 0, 606, 1023, 0,
	0, 1041, 1042, 0, 1155, 0, 1160, 1161, 0, 1166,
	0, 1170, 0, 936, 893, 894, 941, 942, 0, 0,
	886, 1255, 80, 1256, 1253, 0, 1251, 1249, 1308, 0,
	1317, 1318, 1327, 1328, 1334, 0, 1340, 0, 85, 0,
	0, 0, 1266, 179, 0, 198, 0, 583, 0, 586,
	576, 663, 664, 0, 676, 668, 670, 671, 653, -2,
	1292, 0, 0, 0, 563, 996, 0, 0, 0, 0,
	1124, 0, 602, 603, 1031, 1024, 0, 1009, 1010, 1028,
	1143, 1145, 0, 0, 0, 0, 935, 937, 938, 79,
	0, 1252, 1049, 0, 1320, 1321, 1348, 1346, 904, 911,
	0, 86, 418, 411, 1292, 0, 0, 0, 656, 657,
	658, 659, 660, 661, 662, 553, 1294, 127, 128, 484,
	485, 486, 121, 1206, 0, 1209, 1120, 1025, 0, 0,
	0, 0, 1021, 1022, 1156, 0, 1162, 0, 1167, 0,
	895, 896, 1254, 0, 0, 588, 0, 590, 0, -2,
	406, 419, 0, 173, 199, 200, 0, 0, 203, 204,
	205, 196, 197, 117, 0, 0, 677, 0, 1295, 1296,
	124, 1207, 0, 1016, 1017, 1018, 1019, 1020, 0, 0,
	0, 1050, 1029, 589, 0, 0, 361, 0, 599, 407,
	408, 0, 414, 415, 416, 417, 201, 202, 611, 0,
	0, 560, 0, 0, 1157, 0, 1163, 0, 1168, 0,
	591, 592, 600, 0, 409, 0, 410, 0, 0, 0,
	580, 0, 611, 1293, 0, 1026, 0, 0, 1048, 0,
	601, 597, 420, 422, 423, 0, 0, 421, 612, 581,
	1208, 1158, 1164, 0, 424, 425, 426, 593, 594, 595,
	596,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 627,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:570
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:575
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:576
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:580
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:616
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:635
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:645
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:651
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:657
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:661
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:666
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:670
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:680
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:686
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:723
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:764
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:770
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:832
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:839
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:889
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:893
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:899
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:905
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:927
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:931
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:937
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:947
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:951
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:960
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:966
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:972
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:976
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:982
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:992
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:996
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1000
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1006
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1010
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1014
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1018
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1024
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1028
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1040
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1047
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1056
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1060
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1067
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1071
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1076
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1086
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1091
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1096
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1102
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1107
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1122
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1128
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1144
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1151
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1158
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1163
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1168
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1173
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1180
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1187
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1198
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1209
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1215
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1219
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1223
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1241
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1245
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1251
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1255
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1261
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1265
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1271
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1275
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1281
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1285
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1291
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1301
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1306
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1315
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1339
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1348
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1357
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1380
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1386
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1391
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1396
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1401
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1411
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1420
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1425
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1429
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1434
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1440
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1446
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1450
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1456
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1460
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1464
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1470
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1474
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1479
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1516
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1524
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1531
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1565
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1575
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1583
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1587
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1591
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1595
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1599
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1604
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1608
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1612
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1616
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1801
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1805
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1809
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1815
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1819
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1823
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1829
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1833
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1840
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1844
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1848
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1852
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2080
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2089
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2094
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2098
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2106
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2116
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2124
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2128
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2132
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2141
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2162
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2182
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2197
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2205
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2212
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2221
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2227
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2237
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2241
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2246
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2250
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2254
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2258
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2262
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2266
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2282
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2286
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2290
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2294
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2298
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2366
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2376
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2380
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2386
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2390
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2396
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2400
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2406
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2412
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2416
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2420
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2424
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2428
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2437
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2443
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2449
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2455
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2459
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2463
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2468
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2472
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2478
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2484
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2490
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2494
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2498
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2502
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2506
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2525
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2529
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2534
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2538
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2547
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2553
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2557
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2561
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2567
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2571
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2577
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2581
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2585
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2589
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2665
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2669
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2673
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2677
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2702
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2748
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2752
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2757
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2761
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2779
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2783
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2792
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2796
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2800
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2804
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2808
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2814
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2818
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2828
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2836
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2840
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2869
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2914
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2918
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2922
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3004
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3011
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3018
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3025
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3041
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3055
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3077
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3098
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3108
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3123
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3144
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3192
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3201
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3209
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3218
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3225
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3237
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3246
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3261
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3266
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3270
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3275
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3279
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3285
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3291
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3297
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3301
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3307
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3311
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3317
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3323
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3329
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3335
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3359
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3365
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3371
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3375
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3379
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3385
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3389
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3394
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3398
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3403
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3407
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3413
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3417
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3421
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3425
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3429
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3433
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3437
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3441
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3445
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3449
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3453
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3457
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3465
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3469
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3473
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3477
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3481
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3506
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3510
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3517
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3532
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3536
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3541
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3546
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3551
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3556
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3561
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3567
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3573
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3578
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3584
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3590
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3600
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3605
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3609
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3614
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3619
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3624
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3629
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3635
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3641
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3648
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3655
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3662
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3670
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3680
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3686
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3692
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3698
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3704
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3710
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3722
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = ""
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3744
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3748
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 681:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3771
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3948
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3952
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4001
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.str = "extended "
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4031
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4049
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4053
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4063
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4069
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4073
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4123
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4132
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4137
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4139
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4150
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4155
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4159
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4163
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4167
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4171
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4175
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4203
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4207
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4226
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4252
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4256
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4262
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4268
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4272
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4276
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4280
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4292
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4306
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4310
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4328
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4383
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4387
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4391
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4405
		{
			setAllowComments(yylex, true)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4415
		{
			yyVAL.strs = nil
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4429
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = SQLCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4451
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4459
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4465
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4469
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4486
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4490
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4496
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4500
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4509
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			yyVAL.strs = nil
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4522
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4526
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4530
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = SQLCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.str = StraightJoinHint
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4566
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4570
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4576
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4580
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4584
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4588
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4593
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4597
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4601
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4613
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4617
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4623
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4629
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4633
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4643
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4647
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4651
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4655
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4661
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4665
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4671
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4675
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4684
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4690
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4694
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4700
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4704
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4710
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4714
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4722
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4728
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4732
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4745
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4749
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4753
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4757
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4763
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4765
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4769
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4775
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4777
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4780
		{
			yyVAL.empty = struct{}{}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4782
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4785
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4806
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4810
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4814
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4820
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4826
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4830
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4834
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4838
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4844
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4848
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4858
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4862
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4887
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4893
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4897
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4903
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4907
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4911
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4915
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4920
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4924
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4928
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4932
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5013
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5017
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5029
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5033
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5037
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5052
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5056
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5060
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5064
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5068
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5072
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5076
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5080
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5084
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5088
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5092
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5096
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5100
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5110
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5114
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5118
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5170
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5174
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5178
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5186
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5190
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5198
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5202
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5214
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5218
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5222
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5228
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5232
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5239
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5243
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5247
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5251
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5255
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5261
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5265
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5269
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5273
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5277
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5296
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5302
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5306
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5311
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5315
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5320
		{
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5329
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5335
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5339
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5351
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5357
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5361
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5367
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5371
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5377
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5381
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5393
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5399
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5403
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5409
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5415
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5419
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5425
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5429
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5435
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5439
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5446
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5450
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5454
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5458
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5464
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5468
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5472
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5476
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5480
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5484
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5488
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5494
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5498
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5502
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5509
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5515
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5529
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5533
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5537
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5541
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5551
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5555
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5571
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5575
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5579
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5583
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5598
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5602
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5617
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5621
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5625
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5629
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5633
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5637
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5641
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5645
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5649
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5653
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5657
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5669
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5673
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5677
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5693
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5725
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5733
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5797
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5801
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5805
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5809
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5829
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5868
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5883
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5896
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5953
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5959
		{
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5961
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5965
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5969
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5973
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5977
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5981
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5985
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5989
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5993
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5997
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6001
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6007
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6011
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6015
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6019
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6023
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6027
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6031
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6035
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6039
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6094
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6098
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6102
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6106
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6110
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6116
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6120
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6134
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6138
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6144
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6148
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6152
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6156
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6160
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6166
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6170
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6174
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6178
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6182
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6186
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6190
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6194
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6198
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6202
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6208
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6212
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6226
		{
			yyVAL.str = string("")
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6236
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6240
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6246
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6251
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6255
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6261
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6265
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6269
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6275
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6298
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6307
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6313
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6319
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6323
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6332
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6341
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6347
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6353
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6357
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6363
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6368
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6372
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6376
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6381
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6385
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6391
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6395
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6399
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6408
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6412
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6416
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6420
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6427
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6431
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6435
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6439
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6445
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6449
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6453
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6457
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6462
		{
			yyVAL.str = ""
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6466
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6470
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6474
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6479
		{
			yyVAL.str = ""
		}
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6483
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6498
		{
			yyVAL.str = ""
		}
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6502
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6507
		{
			yyVAL.str = "cascaded"
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6524
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6530
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6536
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6542
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6551
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6555
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6560
		{
			yyVAL.str = ""
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6564
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6570
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6574
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6580
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6584
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6588
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6593
		{
			yyVAL.str = ""
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6597
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6601
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6606
		{
			yyVAL.str = ""
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6610
		{
			yyVAL.str = " header"
		}
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6615
		{
			yyVAL.str = ""
		}
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6619
		{
			yyVAL.str = " manifest on"
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6623
		{
			yyVAL.str = " manifest off"
		}
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6628
		{
			yyVAL.str = ""
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6632
		{
			yyVAL.str = " overwrite on"
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6636
		{
			yyVAL.str = " overwrite off"
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6642
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6647
		{
			yyVAL.str = ""
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6651
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6657
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6661
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6667
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6671
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6676
		{
			yyVAL.str = ""
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6680
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6686
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6690
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6696
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6700
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6704
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6709
		{
			yyVAL.str = ""
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6713
		{
			yyVAL.str = " optionally"
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6726
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6730
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6734
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6738
		{
			yyLOCAL = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6742
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6748
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6752
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6756
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6760
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6769
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6775
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6779
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6785
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6789
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6795
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6799
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6814
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6818
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6824
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6830
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6834
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6840
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6844
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6848
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6852
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6856
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6864
		{
			yyVAL.str = "charset"
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6874
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6878
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6882
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6891
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6893
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6898
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6901
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6906
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6911
		{
			yyVAL.empty = struct{}{}
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6913
		{
			yyVAL.empty = struct{}{}
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6915
		{
			yyVAL.empty = struct{}{}
		}
	case 1386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6919
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6924
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6928
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6935
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6939
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6945
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6949
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6956
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6962
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6966
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6972
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6976
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6983
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7522
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7531
		{
			decNesting(yylex)
		}
	case 1918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7536
		{
			skipToEnd(yylex)
		}
	case 1919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7541
		{
			skipToEnd(yylex)
		}
	case 1920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7545
		{
			skipToEnd(yylex)
		}
	case 1921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7549
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
