// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const INTERVAL = 57540
const JSON_EXTRACT_OP = 57541
const JSON_UNQUOTE_EXTRACT_OP = 57542
const CREATE = 57543
const ALTER = 57544
const DROP = 57545
const RENAME = 57546
const ANALYZE = 57547
const ADD = 57548
const FLUSH = 57549
const CHANGE = 57550
const MODIFY = 57551
const DEALLOCATE = 57552
const REVERT = 57553
const SCHEMA = 57554
const TABLE = 57555
const INDEX = 57556
const VIEW = 57557
const TO = 57558
const IGNORE = 57559
const IF = 57560
const PRIMARY = 57561
const COLUMN = 57562
const SPATIAL = 57563
const FULLTEXT = 57564
const KEY_BLOCK_SIZE = 57565
const CHECK = 57566
const INDEXES = 57567
const ACTION = 57568
const CASCADE = 57569
const CONSTRAINT = 57570
const FOREIGN = 57571
const NO = 57572
const REFERENCES = 57573
const RESTRICT = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const COALESCE = 57583
const EXCHANGE = 57584
const REBUILD = 57585
const PARTITIONING = 57586
const REMOVE = 57587
const PREPARE = 57588
const EXECUTE = 57589
const MAXVALUE = 57590
const PARTITION = 57591
const REORGANIZE = 57592
const LESS = 57593
const THAN = 57594
const PROCEDURE = 57595
const TRIGGER = 57596
const VINDEX = 57597
const VINDEXES = 57598
const DIRECTORY = 57599
const NAME = 57600
const UPGRADE = 57601
const STATUS = 57602
const VARIABLES = 57603
const WARNINGS = 57604
const CASCADED = 57605
const DEFINER = 57606
const OPTION = 57607
const SQL = 57608
const UNDEFINED = 57609
const SEQUENCE = 57610
const MERGE = 57611
const TEMPORARY = 57612
const TEMPTABLE = 57613
const INVOKER = 57614
const SECURITY = 57615
const FIRST = 57616
const AFTER = 57617
const LAST = 57618
const VITESS_MIGRATION = 57619
const CANCEL = 57620
const RETRY = 57621
const COMPLETE = 57622
const CLEANUP = 57623
const BEGIN = 57624
const START = 57625
const TRANSACTION = 57626
const COMMIT = 57627
const ROLLBACK = 57628
const SAVEPOINT = 57629
const RELEASE = 57630
const WORK = 57631
const BIT = 57632
const TINYINT = 57633
const SMALLINT = 57634
const MEDIUMINT = 57635
const INT = 57636
const INTEGER = 57637
const BIGINT = 57638
const INTNUM = 57639
const REAL = 57640
const DOUBLE = 57641
const FLOAT_TYPE = 57642
const DECIMAL_TYPE = 57643
const NUMERIC = 57644
const TIME = 57645
const TIMESTAMP = 57646
const DATETIME = 57647
const YEAR = 57648
const CHAR = 57649
const VARCHAR = 57650
const BOOL = 57651
const CHARACTER = 57652
const VARBINARY = 57653
const NCHAR = 57654
const TEXT = 57655
const TINYTEXT = 57656
const MEDIUMTEXT = 57657
const LONGTEXT = 57658
const BLOB = 57659
const TINYBLOB = 57660
const MEDIUMBLOB = 57661
const LONGBLOB = 57662
const JSON = 57663
const JSON_SCHEMA_VALID = 57664
const JSON_SCHEMA_VALIDATION_REPORT = 57665
const ENUM = 57666
const GEOMETRY = 57667
const POINT = 57668
const LINESTRING = 57669
const POLYGON = 57670
const GEOMETRYCOLLECTION = 57671
const MULTIPOINT = 57672
const MULTILINESTRING = 57673
const MULTIPOLYGON = 57674
const ASCII = 57675
const UNICODE = 57676
const NULLX = 57677
const AUTO_INCREMENT = 57678
const APPROXNUM = 57679
const SIGNED = 57680
const UNSIGNED = 57681
const ZEROFILL = 57682
const CODE = 57683
const COLLATION = 57684
const COLUMNS = 57685
const DATABASES = 57686
const ENGINES = 57687
const EVENT = 57688
const EXTENDED = 57689
const FIELDS = 57690
const FULL = 57691
const FUNCTION = 57692
const GTID_EXECUTED = 57693
const KEYSPACES = 57694
const OPEN = 57695
const PLUGINS = 57696
const PRIVILEGES = 57697
const PROCESSLIST = 57698
const SCHEMAS = 57699
const TABLES = 57700
const TRIGGERS = 57701
const USER = 57702
const VGTID_EXECUTED = 57703
const VITESS_KEYSPACES = 57704
const VITESS_METADATA = 57705
const VITESS_MIGRATIONS = 57706
const VITESS_REPLICATION_STATUS = 57707
const VITESS_SHARDS = 57708
const VITESS_TABLETS = 57709
const VITESS_TARGET = 57710
const VSCHEMA = 57711
const NAMES = 57712
const GLOBAL = 57713
const SESSION = 57714
const ISOLATION = 57715
const LEVEL = 57716
const READ = 57717
const WRITE = 57718
const ONLY = 57719
const REPEATABLE = 57720
const COMMITTED = 57721
const UNCOMMITTED = 57722
const SERIALIZABLE = 57723
const CURRENT_TIMESTAMP = 57724
const DATABASE = 57725
const CURRENT_DATE = 57726
const NOW = 57727
const CURRENT_TIME = 57728
const LOCALTIME = 57729
const LOCALTIMESTAMP = 57730
const CURRENT_USER = 57731
const UTC_DATE = 57732
const UTC_TIME = 57733
const UTC_TIMESTAMP = 57734
const DAY = 57735
const DAY_HOUR = 57736
const DAY_MICROSECOND = 57737
const DAY_MINUTE = 57738
const DAY_SECOND = 57739
const HOUR = 57740
const HOUR_MICROSECOND = 57741
const HOUR_MINUTE = 57742
const HOUR_SECOND = 57743
const MICROSECOND = 57744
const MINUTE = 57745
const MINUTE_MICROSECOND = 57746
const MINUTE_SECOND = 57747
const MONTH = 57748
const QUARTER = 57749
const SECOND = 57750
const SECOND_MICROSECOND = 57751
const YEAR_MONTH = 57752
const WEEK = 57753
const REPLACE = 57754
const CONVERT = 57755
const CAST = 57756
const SUBSTR = 57757
const SUBSTRING = 57758
const GROUP_CONCAT = 57759
const SEPARATOR = 57760
const TIMESTAMPADD = 57761
const TIMESTAMPDIFF = 57762
const WEIGHT_STRING = 57763
const LTRIM = 57764
const RTRIM = 57765
const TRIM = 57766
const JSON_ARRAY = 57767
const JSON_OBJECT = 57768
const JSON_QUOTE = 57769
const JSON_DEPTH = 57770
const JSON_TYPE = 57771
const JSON_LENGTH = 57772
const JSON_VALID = 57773
const JSON_ARRAY_APPEND = 57774
const JSON_ARRAY_INSERT = 57775
const JSON_INSERT = 57776
const JSON_MERGE = 57777
const JSON_MERGE_PATCH = 57778
const JSON_MERGE_PRESERVE = 57779
const JSON_REMOVE = 57780
const JSON_REPLACE = 57781
const JSON_SET = 57782
const JSON_UNQUOTE = 57783
const MATCH = 57784
const AGAINST = 57785
const BOOLEAN = 57786
const LANGUAGE = 57787
const WITH = 57788
const QUERY = 57789
const EXPANSION = 57790
const WITHOUT = 57791
const VALIDATION = 57792
const UNUSED = 57793
const ARRAY = 57794
const CUME_DIST = 57795
const DESCRIPTION = 57796
const DENSE_RANK = 57797
const EMPTY = 57798
const EXCEPT = 57799
const FIRST_VALUE = 57800
const GROUPING = 57801
const GROUPS = 57802
const JSON_TABLE = 57803
const LAG = 57804
const LAST_VALUE = 57805
const LATERAL = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const OF = 57810
const OVER = 57811
const PERCENT_RANK = 57812
const RANK = 57813
const RECURSIVE = 57814
const ROW_NUMBER = 57815
const SYSTEM = 57816
const WINDOW = 57817
const ACTIVE = 57818
const ADMIN = 57819
const AUTOEXTEND_SIZE = 57820
const BUCKETS = 57821
const CLONE = 57822
const COLUMN_FORMAT = 57823
const COMPONENT = 57824
const DEFINITION = 57825
const ENFORCED = 57826
const ENGINE_ATTRIBUTE = 57827
const EXCLUDE = 57828
const FOLLOWING = 57829
const GEOMCOLLECTION = 57830
const GET_MASTER_PUBLIC_KEY = 57831
const HISTOGRAM = 57832
const HISTORY = 57833
const INACTIVE = 57834
const INVISIBLE = 57835
const LOCKED = 57836
const MASTER_COMPRESSION_ALGORITHMS = 57837
const MASTER_PUBLIC_KEY_PATH = 57838
const MASTER_TLS_CIPHERSUITES = 57839
const MASTER_ZSTD_COMPRESSION_LEVEL = 57840
const NESTED = 57841
const NETWORK_NAMESPACE = 57842
const NOWAIT = 57843
const NULLS = 57844
const OJ = 57845
const OLD = 57846
const OPTIONAL = 57847
const ORDINALITY = 57848
const ORGANIZATION = 57849
const OTHERS = 57850
const PARTIAL = 57851
const PATH = 57852
const PERSIST = 57853
const PERSIST_ONLY = 57854
const PRECEDING = 57855
const PRIVILEGE_CHECKS_USER = 57856
const PROCESS = 57857
const RANDOM = 57858
const REFERENCE = 57859
const REQUIRE_ROW_FORMAT = 57860
const RESOURCE = 57861
const RESPECT = 57862
const RESTART = 57863
const RETAIN = 57864
const REUSE = 57865
const ROLE = 57866
const SECONDARY = 57867
const SECONDARY_ENGINE = 57868
const SECONDARY_ENGINE_ATTRIBUTE = 57869
const SECONDARY_LOAD = 57870
const SECONDARY_UNLOAD = 57871
const SIMPLE = 57872
const SKIP = 57873
const SRID = 57874
const THREAD_PRIORITY = 57875
const TIES = 57876
const UNBOUNDED = 57877
const VCPU = 57878
const VISIBLE = 57879
const RETURNING = 57880
const FORMAT = 57881
const TREE = 57882
const VITESS = 57883
const TRADITIONAL = 57884
const LOCAL = 57885
const LOW_PRIORITY = 57886
const NO_WRITE_TO_BINLOG = 57887
const LOGS = 57888
const ERROR = 57889
const GENERAL = 57890
const HOSTS = 57891
const OPTIMIZER_COSTS = 57892
const USER_RESOURCES = 57893
const SLOW = 57894
const CHANNEL = 57895
const RELAY = 57896
const EXPORT = 57897
const AVG_ROW_LENGTH = 57898
const CONNECTION = 57899
const CHECKSUM = 57900
const DELAY_KEY_WRITE = 57901
const ENCRYPTION = 57902
const ENGINE = 57903
const INSERT_METHOD = 57904
const MAX_ROWS = 57905
const MIN_ROWS = 57906
const PACK_KEYS = 57907
const PASSWORD = 57908
const FIXED = 57909
const DYNAMIC = 57910
const COMPRESSED = 57911
const REDUNDANT = 57912
const COMPACT = 57913
const ROW_FORMAT = 57914
const STATS_AUTO_RECALC = 57915
const STATS_PERSISTENT = 57916
const STATS_SAMPLE_PAGES = 57917
const STORAGE = 57918
const MEMORY = 57919
const DISK = 57920
const PARTITIONS = 57921
const LINEAR = 57922
const RANGE = 57923
const LIST = 57924
const SUBPARTITION = 57925
const SUBPARTITIONS = 57926
const HASH = 57927

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	603, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	327, 153,
	-2, 486,
	-1, 55,
	35, 704,
	231, 704,
	242, 704,
	277, 718,
	278, 718,
	-2, 706,
	-1, 60,
	233, 731,
	-2, 729,
	-1, 114,
	230, 1255,
	-2, 119,
	-1, 116,
	1, 146,
	603, 146,
	-2, 153,
	-1, 127,
	132, 377,
	236, 377,
	-2, 480,
	-1, 146,
	131, 153,
	171, 153,
	327, 153,
	-2, 495,
	-1, 687,
	215, 1276,
	-2, 1272,
	-1, 688,
	215, 1277,
	-2, 1273,
	-1, 762,
	59, 799,
	-2, 814,
	-1, 799,
	147, 1680,
	-2, 112,
	-1, 800,
	147, 1523,
	-2, 113,
	-1, 806,
	147, 1606,
	-2, 1249,
	-1, 954,
	147, 1452,
	-2, 1246,
	-1, 995,
	241, 41,
	246, 41,
	-2, 388,
	-1, 1078,
	1, 537,
	603, 537,
	-2, 153,
	-1, 1315,
	59, 800,
	-2, 819,
	-1, 1316,
	59, 801,
	-2, 820,
	-1, 1369,
	131, 153,
	171, 153,
	327, 153,
	-2, 427,
	-1, 1448,
	132, 377,
	236, 377,
	-2, 480,
	-1, 1457,
	241, 42,
	246, 42,
	-2, 389,
	-1, 1762,
	215, 1281,
	-2, 1275,
	-1, 1845,
	131, 153,
	171, 153,
	327, 153,
	-2, 428,
	-1, 1852,
	25, 174,
	-2, 176,
	-1, 2095,
	86, 39,
	-2, 856,
	-1, 2147,
	77, 94,
	86, 94,
	-2, 876,
	-1, 2214,
	578, 632,
	-2, 619,
	-1, 2348,
	49, 1217,
	-2, 1211,
	-1, 2562,
	86, 39,
	-2, 857,
	-1, 2600,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 848,
	-1, 2920,
	22, 1608,
	32, 1608,
	172, 1608,
	253, 1608,
	307, 1608,
	308, 1608,
	309, 1608,
	310, 1608,
	311, 1608,
	312, 1608,
	313, 1608,
	315, 1608,
	316, 1608,
	317, 1608,
	318, 1608,
	319, 1608,
	320, 1608,
	321, 1608,
	322, 1608,
	323, 1608,
	324, 1608,
	325, 1608,
	326, 1608,
	328, 1608,
	330, 1608,
	331, 1608,
	332, 1608,
	333, 1608,
	334, 1608,
	335, 1608,
	336, 1608,
	337, 1608,
	338, 1608,
	341, 1608,
	342, 1608,
	343, 1608,
	344, 1608,
	345, 1608,
	346, 1608,
	347, 1608,
	348, 1608,
	349, 1608,
	461, 1608,
	-2, 577,
}

const yyPrivate = 57344

const yyLast = 42084

var yyAct = [...]int{
	687, 2697, 2698, 696, 2696, 2974, 2982, 2852, 2950, 2307,
	1796, 2951, 2673, 2918, 1372, 2493, 2902, 1842, 2401, 2408,
	1776, 2049, 2359, 3, 689, 1141, 2449, 2805, 2711, 2476,
	1778, 1912, 2828, 2083, 2416, 2475, 2362, 605, 1330, 96,
	2571, 755, 2363, 609, 2565, 2360, 690, 680, 37, 2269,
	777, 186, 681, 2118, 186, 631, 570, 186, 2716, 2305,
	2306, 602, 585, 678, 186, 1800, 679, 2478, 1815, 1294,
	2357, 2349, 186, 2591, 2141, 2557, 1875, 2110, 2179, 2211,
	2252, 1880, 1090, 2180, 1943, 1900, 601, 186, 2181, 1831,
	36, 155, 1426, 804, 778, 38, 1317, 2102, 2130, 2085,
	1820, 1756, 1732, 1672, 1662, 957, 1921, 1003, 141, 585,
	1807, 1819, 585, 186, 585, 1899, 757, 1957, 1882, 2173,
	1361, 2149, 1620, 990, 985, 759, 1339, 763, 91, 1822,
	1297, 614, 95, 1226, 801, 1684, 1162, 597, 1569, 1639,
	1565, 1473, 996, 1731, 603, 780, 993, 1897, 964, 991,
	1462, 1551, 1759, 1871, 992, 1344, 1360, 769, 961, 965,
	1358, 1801, 159, 1728, 1133, 1455, 98, 1574, 1139, 119,
	764, 117, 118, 791, 1119, 765, 1421, 1074, 767, 1447,
	97, 124, 125, 76, 1769, 85, 592, 1229, 1233, 2861,
	2204, 89, 2975, 2446, 188, 189, 190, 1914, 102, 1914,
	1915, 1916, 2467, 2231, 2230, 1955, 785, 2202, 790, 1163,
	120, 766, 77, 2656, 574, 2464, 2260, 542, 1536, 771,
	8, 90, 7, 6, 2620, 2261, 1163, 2701, 126, 2701,
	2883, 2882, 1773, 1774, 1627, 958, 1007, 574, 1032, 104,
	105, 1626, 108, 1625, 1624, 114, 1623, 1622, 183, 1605,
	2939, 537, 593, 595, 983, 596, 2081, 756, 2345, 2465,
	2545, 758, 1041, 2991, 2112, 2949, 2965, 2954, 2225, 798,
	805, 751, 752, 753, 754, 1006, 772, 762, 571, 120,
	1614, 2471, 982, 779, 1945, 1324, 981, 1632, 980, 979,
	969, 188, 189, 190, 1033, 1035, 1036, 2801, 2800, 974,
	2666, 1031, 1030, 2667, 2990, 793, 794, 2912, 2978, 78,
	2878, 2700, 2404, 2700, 1173, 78, 2963, 2674, 2903, 1940,
	2911, 1047, 2883, 2268, 558, 2877, 78, 2928, 2923, 182,
	2527, 1173, 1436, 2082, 2239, 1995, 556, 2397, 2238, 2121,
	78, 2926, 2158, 80, 1362, 2157, 1363, 120, 2159, 2259,
	2932, 2933, 1992, 121, 2398, 2399, 1836, 2405, 2418, 2419,
	978, 1136, 1083, 1084, 2122, 2927, 164, 1837, 1838, 1109,
	1077, 749, 748, 2205, 2853, 2729, 553, 1110, 1114, 1115,
	1103, 2170, 2407, 1097, 2295, 566, 87, 2518, 1098, 2468,
	574, 1126, 87, 1128, 1086, 2568, 2402, 1855, 1854, 1993,
	563, 1775, 574, 87, 2516, 583, 1097, 1526, 2163, 1169,
	575, 1098, 1161, 2418, 2419, 2495, 1891, 87, 976, 1096,
	2403, 1095, 1613, 161, 587, 162, 1169, 2955, 574, 581,
	1557, 1125, 1127, 575, 1969, 1966, 1968, 1967, 1301, 2212,
	1885, 1922, 1048, 2234, 2977, 181, 2488, 1963, 2956, 1958,
	1552, 1527, 2409, 1528, 2489, 1971, 1130, 1972, 1111, 1973,
	1118, 1104, 2417, 1135, 1079, 543, 2247, 545, 559, 1116,
	577, 2658, 576, 549, 2420, 547, 551, 560, 552, 1117,
	546, 2657, 557, 1073, 1195, 548, 561, 562, 564, 567,
	568, 569, 565, 1974, 555, 578, 2496, 2270, 1054, 1615,
	1616, 1617, 1964, 1053, 1962, 2810, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1204, 1203, 1205, 1206, 2417, 2788, 978,
	1072, 1112, 1113, 2497, 1123, 1960, 1016, 2654, 1124, 2420,
	2940, 977, 1925, 1816, 87, 1014, 2296, 186, 1129, 186,
	986, 987, 186, 1025, 987, 1024, 1961, 2992, 1027, 1023,
	1022, 1021, 1020, 165, 2420, 1019, 1304, 1018, 1013, 1440,
	1026, 1122, 171, 998, 962, 2961, 1461, 1034, 962, 999,
	1207, 585, 1143, 585, 585, 2248, 1566, 998, 2272, 1884,
	973, 1207, 1898, 975, 1076, 792, 575, 1993, 585, 585,
	1005, 962, 1949, 1562, 1149, 960, 1037, 2439, 575, 1005,
	1168, 1165, 1166, 1167, 1172, 1174, 1171, 2233, 1170, 1802,
	1803, 1434, 1433, 1155, 2986, 1164, 1432, 1168, 1165, 1166,
	1167, 1172, 1174, 1171, 575, 1170, 1093, 2251, 1099, 1100,
	1101, 1102, 1164, 1558, 2406, 2222, 1563, 37, 2653, 1430,
	2282, 2281, 2280, 2274, 541, 2278, 1944, 2273, 2206, 2271,
	1137, 1138, 2236, 2264, 2276, 536, 1107, 1942, 2860, 2203,
	984, 2086, 2088, 2275, 2007, 2246, 579, 2849, 2245, 1017,
	1460, 1208, 1209, 2607, 2569, 156, 1075, 978, 1015, 970,
	2277, 2279, 2587, 2154, 572, 2117, 972, 971, 1004, 2073,
	977, 1768, 1029, 1348, 998, 1001, 1002, 1004, 962, 573,
	1273, 1088, 995, 999, 116, 1044, 1045, 1046, 1843, 1049,
	1050, 1051, 1052, 2876, 2866, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1207, 1206, 1005, 976, 2931, 1131, 2469, 2470,
	1287, 1145, 1146, 2396, 1556, 2254, 1292, 1120, 1214, 186,
	2253, 2472, 1005, 585, 585, 1210, 1211, 1212, 1213, 774,
	2699, 81, 2699, 1575, 86, 1218, 1144, 1221, 1134, 186,
	86, 1538, 1537, 1539, 1540, 1541, 1994, 2618, 2619, 2410,
	2930, 86, 2872, 2414, 1092, 2254, 1028, 111, 585, 1293,
	2253, 2413, 186, 2649, 2581, 86, 1959, 585, 757, 1310,
	1308, 77, 1888, 585, 1307, 1559, 1305, 1364, 1311, 1094,
	1158, 2811, 1156, 1157, 759, 1685, 1159, 157, 1231, 1005,
	1232, 2087, 801, 1235, 169, 2415, 2984, 2288, 1082, 2985,
	2411, 2983, 1004, 2195, 1685, 2412, 2021, 1085, 998, 1001,
	1002, 1889, 962, 1043, 1178, 1941, 995, 999, 977, 1887,
	1004, 1293, 1106, 2725, 1309, 1008, 998, 112, 95, 2625,
	1010, 1177, 1178, 1108, 1011, 1009, 177, 994, 2624, 1929,
	1470, 1279, 1280, 1281, 1282, 1283, 1179, 1469, 1298, 1459,
	188, 189, 190, 1890, 1664, 1714, 1553, 1939, 1554, 1078,
	1121, 1555, 98, 1886, 1644, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 1576, 1934, 1645, 1646,
	1643, 176, 178, 179, 180, 2957, 1934, 1004, 1937, 1634,
	1636, 1637, 1008, 998, 1091, 1016, 1014, 1010, 1999, 2000,
	2001, 1011, 1009, 1349, 1295, 2608, 2993, 1359, 2988, 756,
	87, 1179, 1306, 1635, 1938, 2796, 2795, 1329, 2786, 1326,
	758, 1005, 1012, 1936, 1642, 1324, 2689, 186, 805, 2959,
	1312, 1422, 1689, 2888, 1665, 2688, 1690, 1354, 1355, 2632,
	1179, 1431, 1706, 1695, 1696, 1697, 1698, 1708, 1699, 1700,
	1701, 1713, 1709, 1702, 1703, 1710, 1711, 1712, 1704, 1705,
	1707, 701, 702, 703, 585, 2631, 1457, 1201, 1202, 1204,
	1203, 1205, 1206, 2842, 1466, 2889, 2621, 1176, 1468, 1177,
	1178, 1471, 1472, 585, 585, 2447, 585, 1179, 585, 585,
	2994, 585, 585, 585, 585, 585, 585, 1199, 1200, 1201,
	1202, 1204, 1203, 1205, 1206, 1502, 2435, 585, 1195, 1546,
	2263, 186, 1507, 1544, 1179, 2843, 796, 2177, 2176, 1004,
	1467, 1042, 2821, 1324, 1894, 1533, 1547, 1179, 186, 1531,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1203, 1205,
	1206, 585, 1176, 186, 1177, 1178, 1179, 1501, 2030, 1503,
	1530, 2290, 1529, 1519, 1564, 1513, 2017, 585, 1521, 186,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1181, 1446, 1453,
	2857, 1176, 1545, 1177, 1178, 186, 1543, 2958, 1510, 1463,
	1463, 1179, 186, 188, 189, 190, 1509, 2615, 1532, 2869,
	1508, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	585, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1203,
	1205, 1206, 1504, 1482, 585, 585, 1429, 2868, 1176, 2846,
	1177, 1178, 1333, 1464, 2845, 1475, 1179, 1476, 2016, 1478,
	1480, 2844, 186, 1484, 1486, 1488, 1490, 1492, 1443, 1465,
	1444, 1442, 1456, 1435, 2524, 1176, 2791, 1177, 1178, 188,
	189, 190, 1571, 2161, 2776, 2775, 1579, 2724, 1176, 2722,
	1177, 1178, 1179, 1583, 1324, 1585, 1586, 1587, 1588, 1505,
	2685, 1334, 1592, 1179, 2629, 2614, 2438, 1176, 1663, 1177,
	1178, 2437, 1669, 1669, 1604, 1808, 1809, 2186, 1666, 1670,
	2174, 1675, 585, 188, 189, 190, 1567, 1910, 188, 189,
	190, 1289, 1179, 1667, 1667, 1953, 1952, 585, 585, 1324,
	1799, 120, 1176, 1640, 1177, 1178, 1781, 1606, 981, 1572,
	980, 979, 1542, 1534, 1647, 1524, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1638,
	1577, 1578, 1686, 1581, 1197, 1198, 1199, 1200, 1201, 1202,
	1204, 1203, 1205, 1206, 1582, 2522, 1324, 1176, 1520, 1177,
	1178, 1589, 1590, 1591, 1516, 1603, 1515, 1514, 1602, 1760,
	186, 1335, 188, 189, 190, 585, 1908, 188, 189, 190,
	1179, 1906, 1610, 1611, 2058, 1324, 1132, 101, 1729, 2492,
	101, 1148, 1641, 1176, 92, 1177, 1178, 1324, 100, 186,
	99, 100, 585, 99, 1176, 93, 1177, 1178, 1648, 94,
	2108, 2976, 186, 92, 2945, 1324, 585, 2108, 2909, 1179,
	94, 186, 2818, 186, 93, 186, 186, 585, 2817, 1786,
	585, 1787, 1179, 1176, 2780, 1177, 1178, 1762, 1671, 2779,
	1729, 585, 2038, 2672, 1760, 1677, 1678, 1764, 1765, 2108,
	2896, 2213, 801, 2012, 2358, 801, 100, 95, 2191, 1324,
	1852, 2119, 2011, 1195, 2580, 2006, 1179, 1324, 2108, 2892,
	1324, 2884, 1324, 2108, 2862, 1851, 95, 2936, 1324, 2664,
	2859, 2580, 1761, 2104, 1792, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1204, 1203, 1205, 1206, 585, 1763, 94, 1818,
	1766, 1767, 2784, 1901, 1902, 1903, 2541, 1324, 1905, 1907,
	1909, 1176, 1762, 1177, 1178, 1324, 2108, 2787, 1935, 1861,
	1862, 1863, 1864, 585, 2008, 771, 1179, 2664, 1324, 585,
	1466, 1846, 2127, 1466, 1780, 1466, 94, 1791, 2108, 2662,
	1856, 1933, 1857, 1858, 1859, 1860, 1847, 2582, 1829, 2650,
	1176, 1175, 1177, 1178, 1923, 2008, 1794, 1813, 1867, 1868,
	1869, 1870, 688, 1176, 1850, 1177, 1178, 1877, 1934, 1324,
	2391, 1811, 1179, 2871, 585, 1934, 1663, 2585, 1324, 1993,
	1883, 2126, 1663, 1663, 1834, 1175, 1324, 1833, 805, 1337,
	1849, 805, 2108, 1179, 1324, 1848, 2127, 1176, 2541, 1177,
	1178, 1437, 1438, 1439, 2043, 1324, 2426, 1893, 2050, 2428,
	2427, 2424, 2425, 187, 2010, 2333, 187, 2424, 2423, 187,
	186, 2127, 1324, 2119, 586, 1835, 187, 186, 1920, 1007,
	2008, 1324, 186, 186, 187, 2127, 186, 2008, 186, 1463,
	2043, 1873, 1874, 1993, 2232, 186, 1179, 1425, 2216, 187,
	1878, 1896, 186, 1904, 1336, 1892, 1179, 1176, 2027, 1177,
	1178, 1179, 2209, 2210, 2108, 2107, 1511, 1512, 1006, 1926,
	2026, 586, 1517, 1518, 586, 187, 586, 1927, 186, 1946,
	1948, 1947, 1930, 585, 1179, 1878, 1950, 1951, 1195, 1179,
	1934, 1191, 1917, 1192, 2580, 1928, 2150, 2150, 1931, 1179,
	1932, 1425, 1424, 1176, 1179, 1177, 1178, 1193, 1194, 1190,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1203, 1205,
	1206, 1370, 1369, 1195, 1176, 1806, 1177, 1178, 2602, 1328,
	1984, 1985, 2633, 1771, 1618, 1987, 1561, 1356, 2543, 761,
	989, 988, 1956, 2539, 1988, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1204, 1203, 1205, 1206, 1497, 1179, 2899, 2151,
	2151, 87, 2807, 1331, 2777, 2971, 1640, 2178, 2153, 1993,
	2494, 2530, 2736, 2648, 1977, 2645, 2003, 1176, 2005, 1177,
	1178, 2529, 2634, 2635, 2636, 2450, 2067, 1176, 2627, 1177,
	1178, 2533, 1176, 1179, 1177, 1178, 2532, 1179, 1427, 1876,
	2490, 2452, 2448, 1179, 2217, 1872, 1498, 1499, 1500, 671,
	1179, 1866, 1865, 1549, 1179, 1176, 87, 1177, 1178, 1179,
	1176, 1458, 1177, 1178, 1179, 1991, 1454, 1423, 113, 2182,
	1176, 2183, 1177, 1178, 1077, 1176, 2637, 1177, 1178, 2066,
	2592, 2593, 186, 2808, 1891, 1641, 1784, 2969, 1608, 2952,
	186, 2881, 2826, 2002, 2595, 585, 1669, 1494, 2444, 2443,
	2004, 585, 2092, 2442, 2079, 2096, 2358, 2196, 1978, 2380,
	2598, 584, 585, 2597, 2381, 2065, 2183, 1667, 1179, 2064,
	2090, 2942, 1179, 2638, 2639, 2063, 2910, 2377, 1176, 2020,
	1177, 1178, 2062, 2378, 1179, 186, 2061, 2376, 2379, 186,
	1798, 2060, 1332, 2018, 1495, 1496, 2059, 1790, 2586, 2123,
	1609, 2338, 2337, 1179, 2160, 2841, 2715, 2706, 803, 2705,
	1179, 959, 2717, 966, 1176, 2036, 1177, 1178, 1176, 2576,
	1177, 1178, 1762, 37, 1176, 2109, 1177, 1178, 2573, 2347,
	1560, 1176, 2143, 1177, 1178, 1176, 2572, 1177, 1178, 747,
	1176, 2422, 1177, 1178, 2168, 1176, 2187, 1177, 1178, 2105,
	2053, 1179, 585, 2382, 2052, 2136, 2137, 2704, 186, 1039,
	1038, 1298, 2080, 2350, 2352, 186, 2051, 1761, 1179, 2504,
	2070, 2071, 2353, 1179, 775, 2142, 2182, 1179, 2257, 585,
	2101, 1147, 776, 2171, 2172, 2048, 585, 2106, 2224, 2208,
	1466, 1466, 2047, 2116, 1681, 585, 92, 2164, 2223, 1176,
	94, 1177, 1178, 1176, 2858, 1177, 1178, 93, 1682, 121,
	2229, 2148, 2152, 2578, 2980, 1176, 2155, 1177, 1178, 1808,
	1809, 186, 186, 186, 186, 186, 2228, 1883, 2440, 2162,
	1981, 2165, 2803, 2046, 1176, 2421, 1177, 1178, 186, 186,
	92, 1176, 2140, 1177, 1178, 1795, 2175, 94, 783, 784,
	2044, 93, 1970, 2558, 186, 2040, 1997, 99, 2833, 2039,
	2184, 2132, 2135, 2136, 2137, 2133, 2192, 2134, 2138, 2832,
	101, 2592, 2593, 1663, 2193, 2723, 2721, 2197, 2198, 2199,
	2336, 100, 1176, 99, 1177, 1178, 1446, 2227, 2335, 187,
	2720, 187, 94, 2713, 187, 2646, 2577, 2575, 2453, 1176,
	1918, 1177, 1178, 1441, 1176, 782, 1177, 1178, 1176, 100,
	1177, 1178, 1669, 2226, 1669, 2712, 101, 1669, 757, 101,
	2287, 2283, 1669, 586, 2566, 586, 586, 100, 2119, 99,
	100, 2973, 2972, 1667, 585, 1667, 2104, 2297, 1667, 2028,
	586, 586, 1782, 1667, 1350, 1341, 106, 107, 2972, 2973,
	585, 2847, 2308, 2265, 2308, 2218, 2219, 2308, 2613, 2327,
	2249, 773, 2308, 103, 88, 186, 1, 2617, 2925, 585,
	2310, 554, 2267, 1772, 2313, 1296, 2953, 2284, 585, 2314,
	2921, 2922, 1535, 1525, 2675, 585, 585, 1730, 186, 186,
	186, 186, 186, 2804, 2320, 2321, 2322, 2323, 2458, 2456,
	186, 1924, 2644, 2327, 1881, 186, 2301, 997, 186, 2370,
	186, 146, 2266, 186, 186, 186, 2340, 1844, 2255, 1845,
	2905, 2256, 110, 955, 109, 2361, 2463, 1000, 2390, 2355,
	2361, 1105, 763, 1919, 2326, 2364, 2665, 2169, 1853, 2341,
	2460, 2459, 2457, 1376, 2328, 1374, 1375, 1373, 2436, 1378,
	1377, 2029, 1311, 2143, 2329, 2330, 2331, 186, 2544, 2339,
	1612, 582, 2342, 2315, 2316, 2317, 2318, 2319, 2139, 184,
	585, 1365, 1342, 1040, 544, 764, 2429, 1954, 585, 550,
	765, 1219, 1607, 186, 2392, 2334, 2156, 2393, 2474, 2372,
	2373, 2332, 2375, 802, 186, 2387, 2388, 2383, 95, 2371,
	795, 187, 2374, 2394, 1783, 586, 586, 2094, 1571, 186,
	2366, 2570, 186, 2346, 2348, 2400, 2455, 2111, 2351, 2344,
	2840, 187, 2505, 2430, 2714, 2432, 2897, 2369, 2166, 2431,
	2132, 2135, 2136, 2137, 2133, 1338, 2134, 2138, 1322, 1318,
	586, 2019, 1683, 1823, 187, 1633, 607, 606, 2482, 586,
	604, 2481, 2097, 1319, 2120, 586, 1182, 691, 2473, 2084,
	1351, 2131, 1883, 2129, 2128, 1979, 2485, 1830, 2594, 2590,
	803, 2917, 803, 803, 1825, 2454, 1322, 1318, 1788, 1789,
	1321, 1821, 1320, 2103, 615, 2538, 608, 1150, 1152, 2500,
	2499, 1319, 600, 2610, 585, 186, 2480, 2235, 2502, 2503,
	2491, 2237, 2167, 2487, 1160, 1314, 594, 968, 1680, 2809,
	2507, 2514, 2864, 1996, 2526, 1313, 1315, 1316, 1321, 1693,
	1320, 1694, 2445, 2511, 2512, 2214, 2513, 1911, 63, 2515,
	41, 2517, 1721, 2519, 589, 2938, 1151, 789, 32, 31,
	30, 29, 28, 23, 22, 21, 20, 19, 25, 18,
	17, 16, 186, 2564, 2466, 2948, 2979, 115, 50, 47,
	45, 123, 122, 48, 44, 1080, 2559, 2560, 42, 2508,
	2616, 27, 26, 15, 14, 13, 12, 11, 10, 9,
	2574, 186, 2567, 2599, 2589, 5, 4, 35, 34, 33,
	2579, 1154, 24, 2185, 2, 2462, 1290, 2461, 2188, 2189,
	186, 2201, 1913, 186, 186, 186, 2605, 2606, 2596, 187,
	0, 0, 0, 585, 585, 0, 0, 0, 0, 2603,
	2611, 0, 0, 2651, 2652, 0, 2604, 0, 2482, 0,
	0, 2481, 2612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 2628,
	0, 2630, 1302, 1303, 0, 585, 585, 585, 585, 0,
	0, 0, 0, 0, 0, 586, 586, 0, 586, 0,
	586, 586, 0, 586, 586, 586, 586, 586, 586, 0,
	0, 0, 0, 0, 0, 2671, 0, 1346, 0, 586,
	2669, 2670, 0, 187, 0, 0, 803, 0, 0, 0,
	0, 0, 1366, 1669, 0, 1669, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 586, 1667, 187, 1667, 0, 0, 0,
	0, 2680, 0, 0, 0, 0, 0, 2684, 2681, 586,
	0, 187, 2709, 2308, 0, 2308, 585, 0, 585, 0,
	0, 0, 0, 0, 0, 2702, 0, 187, 0, 2692,
	0, 0, 2693, 0, 187, 0, 1669, 0, 2730, 2710,
	0, 2719, 2738, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 586, 2732, 2361, 2728, 2726, 1667, 2718, 757,
	0, 2734, 37, 0, 0, 2364, 586, 586, 0, 2364,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	0, 2742, 0, 0, 187, 0, 0, 2739, 2740, 2785,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 2783, 2781,
	0, 2782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2797, 0, 2799, 0, 0, 2798, 2823, 2824,
	2806, 0, 0, 0, 585, 1669, 0, 2789, 585, 585,
	0, 2827, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 0, 586,
	586, 2433, 2434, 959, 0, 0, 0, 585, 0, 2837,
	2834, 2835, 0, 2836, 0, 0, 1290, 2851, 0, 0,
	0, 0, 1474, 1474, 0, 1474, 0, 1474, 1474, 0,
	1483, 1474, 1474, 1474, 1474, 1474, 2848, 0, 0, 0,
	0, 0, 0, 1290, 0, 1290, 959, 0, 585, 757,
	0, 2854, 2364, 2839, 0, 2850, 0, 0, 2856, 0,
	0, 0, 187, 186, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 186,
	1548, 0, 0, 0, 0, 0, 0, 0, 2873, 0,
	0, 187, 0, 2867, 586, 0, 1568, 2870, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 586, 0,
	0, 2863, 0, 187, 0, 187, 0, 187, 187, 586,
	585, 37, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 803,
	2890, 0, 585, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 2898, 803, 803, 585, 0, 0, 2900, 0,
	0, 2361, 0, 0, 186, 585, 0, 2806, 2906, 2904,
	0, 2913, 0, 0, 0, 2895, 37, 0, 0, 0,
	0, 0, 0, 0, 2916, 2934, 2924, 2929, 586, 0,
	0, 0, 0, 0, 0, 2941, 0, 0, 0, 182,
	0, 0, 0, 0, 2947, 0, 0, 585, 0, 0,
	0, 0, 0, 0, 0, 586, 585, 2960, 0, 0,
	0, 586, 1669, 121, 2962, 0, 0, 0, 2967, 2964,
	2970, 1676, 2968, 2622, 2623, 2966, 164, 0, 1290, 0,
	0, 0, 0, 1667, 0, 2981, 1691, 1692, 0, 0,
	2987, 0, 2989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 586, 2997, 2998, 2824,
	2996, 2995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 2655, 0, 1667, 0, 2659, 2660,
	2661, 0, 0, 161, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 1785, 181, 0, 0, 0, 187,
	0, 0, 0, 0, 187, 187, 0, 0, 187, 0,
	187, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 1797, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 803, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 803,
	187, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 0, 2792, 2793, 2794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 540, 0, 0, 580,
	0, 0, 0, 959, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 770,
	0, 0, 187, 0, 0, 156, 0, 586, 0, 0,
	0, 0, 0, 586, 0, 788, 0, 788, 0, 0,
	0, 0, 0, 0, 586, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 121,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 142, 0,
	0, 586, 0, 0, 0, 0, 0, 157, 586, 0,
	0, 0, 0, 0, 169, 0, 0, 586, 0, 161,
	0, 162, 0, 2744, 2746, 2745, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 637, 0, 0, 0, 130, 131, 152,
	151, 181, 0, 187, 187, 187, 187, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	187, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 803, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	2098, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2113, 0, 0, 0, 0, 0, 147, 128, 154,
	135, 127, 0, 148, 149, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 586, 0, 171, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 586, 139, 137, 132, 133, 134, 138, 0,
	0, 0, 0, 0, 0, 129, 0, 187, 0, 0,
	0, 586, 0, 0, 140, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 586, 586, 0,
	187, 187, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 2190, 187, 0, 0, 0, 0, 187, 0, 0,
	187, 0, 187, 0, 0, 187, 187, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 2215, 0, 0, 2750, 2751,
	0, 0, 0, 0, 2220, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	586, 0, 2946, 0, 0, 187, 0, 0, 0, 540,
	0, 540, 1393, 0, 540, 0, 187, 0, 682, 0,
	632, 686, 634, 683, 684, 0, 630, 633, 685, 0,
	0, 187, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 635, 636, 2743, 2747, 2748,
	2749, 2752, 2753, 2754, 2762, 2764, 660, 2763, 2765, 2766,
	2767, 2770, 2771, 2772, 2773, 2768, 2769, 2774, 1290, 0,
	1290, 144, 0, 1290, 145, 0, 0, 0, 1290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 586, 187, 0, 1474,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2343, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 1290, 1381, 0, 2368, 1474, 1290, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 187, 0, 0, 0, 1325, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 187, 0, 0, 0, 176, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 187, 0, 0, 187, 187, 187, 0, 0,
	0, 0, 0, 1394, 0, 586, 586, 0, 0, 959,
	0, 770, 1290, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 586, 586,
	586, 0, 0, 182, 0, 0, 0, 1407, 1410, 1411,
	1412, 1413, 1414, 1415, 2207, 1416, 1417, 1418, 1419, 1420,
	1395, 1396, 1397, 1398, 1379, 1380, 1408, 121, 1382, 143,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 0,
	164, 1392, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 2343, 0, 0, 0, 0, 586, 0,
	586, 0, 0, 0, 0, 0, 0, 161, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1449, 1450, 152, 151, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 1797, 1797, 0, 0, 586, 0, 0, 0,
	586, 586, 0, 0, 0, 147, 1451, 154, 0, 1448,
	0, 148, 149, 0, 0, 0, 1291, 165, 1291, 0,
	0, 0, 0, 540, 0, 0, 171, 0, 0, 586,
	0, 0, 0, 0, 2676, 2677, 2678, 2679, 0, 0,
	1522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 1570, 0, 0, 0, 0, 0, 0, 0, 1290,
	0, 1290, 0, 0, 0, 187, 0, 540, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	586, 187, 0, 1593, 1594, 540, 540, 540, 540, 540,
	540, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	1290, 0, 0, 0, 0, 2731, 0, 2733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 586, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 1393, 0, 1687, 0, 0, 0, 1688, 0,
	0, 0, 0, 0, 586, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 586, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 0,
	0, 0, 0, 0, 0, 788, 788, 698, 79, 0,
	0, 1291, 0, 0, 803, 0, 150, 1325, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	1299, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 0, 2830, 0, 0, 0, 2830, 2830, 144,
	1793, 0, 145, 0, 0, 788, 1570, 788, 788, 788,
	788, 788, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 157, 1522, 0, 539, 760, 0, 79, 169, 0,
	0, 0, 1381, 0, 588, 0, 0, 788, 0, 0,
	0, 0, 750, 0, 0, 760, 0, 0, 0, 0,
	0, 770, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 967, 0, 0, 540, 0, 0, 0, 0, 0,
	177, 1570, 0, 540, 0, 540, 0, 540, 1832, 0,
	0, 0, 0, 963, 0, 0, 0, 1797, 0, 0,
	0, 0, 1895, 0, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 1394, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 1290, 0, 2891,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2093, 0, 0, 699, 700, 0,
	0, 803, 803, 1668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2914, 0, 0, 1407, 1410, 1411,
	1412, 1413, 1414, 1415, 2919, 1416, 1417, 1418, 1419, 1420,
	1395, 1396, 1397, 1398, 1379, 1380, 1408, 0, 1382, 0,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 0,
	0, 1392, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 2919, 0, 0, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 540, 540, 0, 0, 540, 0,
	1982, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 2009, 0, 0, 0, 2013,
	0, 2014, 2015, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 2024, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 787, 0, 0,
	2031, 2032, 2033, 2034, 2035, 0, 2037, 0, 0, 0,
	0, 0, 2041, 0, 2042, 0, 0, 0, 2045, 0,
	0, 0, 0, 788, 0, 0, 2054, 2055, 2056, 2057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2068,
	2069, 0, 0, 0, 0, 0, 0, 2074, 2075, 2076,
	2077, 2078, 0, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 598, 0, 78, 39, 40,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 43, 69, 70, 0, 67, 71, 781, 0, 0,
	788, 788, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 1570, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 0, 0, 1081, 0, 1087,
	0, 0, 1089, 56, 0, 0, 0, 0, 1140, 0,
	1140, 1140, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 760, 1215, 1216, 1217, 0, 1220,
	0, 1222, 1223, 1224, 1225, 0, 1228, 1230, 1230, 0,
	1230, 1234, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	540, 1274, 1275, 1276, 1277, 1278, 0, 2200, 0, 0,
	1234, 1234, 1234, 1234, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 46, 49, 52,
	51, 54, 0, 66, 0, 0, 75, 72, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 540, 540, 540, 540, 0, 55,
	83, 82, 0, 2294, 64, 65, 53, 0, 1300, 0,
	540, 540, 73, 74, 760, 0, 0, 0, 760, 0,
	0, 0, 0, 2309, 760, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 788, 0, 0, 2324, 2325, 0, 0, 57, 58,
	0, 59, 60, 61, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 1291, 0, 1291, 0, 0, 1291, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 2367, 0,
	0, 0, 0, 0, 0, 788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2385, 2386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 1291,
	540, 540, 540, 540, 540, 0, 0, 0, 0, 0,
	0, 0, 2384, 0, 0, 0, 0, 540, 81, 0,
	1522, 0, 540, 0, 0, 540, 2395, 1570, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 2506, 1371, 0, 0,
	0, 0, 0, 2510, 0, 1291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 2520, 2521, 2523,
	2525, 0, 0, 0, 0, 0, 540, 2531, 0, 0,
	0, 0, 2535, 2536, 2537, 0, 0, 0, 0, 2540,
	0, 540, 0, 0, 540, 2542, 0, 1180, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 0, 0,
	2556, 0, 0, 0, 0, 0, 2561, 0, 0, 0,
	0, 0, 0, 0, 0, 1227, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2583,
	2584, 0, 0, 2588, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1550, 0, 0, 0, 0, 0, 0,
	0, 2600, 2601, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 598, 1140, 0, 0,
	0, 0, 1584, 0, 0, 0, 0, 0, 0, 0,
	0, 1140, 1140, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 699, 700,
	0, 0, 1621, 0, 1668, 0, 0, 0, 0, 2663,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1340, 0, 540, 0, 0, 540, 540, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2690, 0,
	0, 0, 2691, 0, 0, 0, 0, 0, 2695, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1291, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1817, 0, 0, 1621, 0, 0, 0,
	0, 0, 2802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 2812, 2813, 2814, 0,
	2815, 2816, 0, 0, 0, 0, 2819, 0, 2820, 0,
	2822, 2825, 0, 0, 0, 0, 0, 2829, 0, 0,
	0, 0, 0, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2855, 967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1573, 0, 0, 2875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2880, 0, 0,
	0, 0, 2885, 0, 0, 0, 0, 0, 2886, 2887,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 2893, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 1965, 0, 0,
	0, 540, 1975, 1976, 0, 0, 1980, 0, 0, 0,
	0, 0, 0, 0, 0, 1983, 0, 0, 0, 0,
	0, 0, 1986, 1628, 1629, 1630, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 2937, 0, 0, 0, 0,
	1291, 0, 0, 0, 0, 0, 0, 2943, 1989, 0,
	1998, 2944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 1674, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 1715, 1716, 1717,
	1718, 1719, 1720, 1722, 1726, 1727, 598, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1445, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 2072, 0,
	0, 0, 0, 0, 1804, 1805, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 2089, 692, 699, 700, 701,
	702, 703, 693, 695, 153, 0, 0, 694, 0, 142,
	0, 0, 1841, 760, 0, 0, 0, 0, 0, 0,
	697, 704, 705, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 162, 2124, 2125, 0, 0, 0, 0, 0,
	0, 0, 2144, 0, 2145, 2146, 0, 0, 1449, 1450,
	152, 151, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2483, 2484, 0, 2147,
	0, 1879, 0, 0, 0, 0, 0, 0, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 1451,
	154, 0, 1448, 2221, 148, 149, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2240, 2241, 2242, 2243, 2244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 2250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 682, 0, 0, 686, 0, 683,
	684, 0, 0, 0, 685, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 0, 0, 0, 0, 0, 0,
	2365, 0, 79, 0, 0, 1824, 1824, 1824, 1824, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 2144, 760, 0, 0, 0, 1824, 0, 1227,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 2441, 87, 0,
	0, 0, 2479, 0, 692, 699, 700, 701, 702, 703,
	693, 695, 0, 0, 1340, 694, 0, 0, 0, 0,
	0, 0, 0, 2477, 0, 0, 0, 0, 697, 704,
	705, 0, 0, 177, 2486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2509, 0, 0, 2498,
	0, 0, 2501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 0, 2483, 2484, 0, 0, 176, 178,
	179, 180, 0, 0, 0, 0, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 2563, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2609, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2626, 0, 0, 2285, 2286, 0, 0, 0, 2289,
	0, 0, 0, 0, 2291, 2292, 2293, 0, 0, 0,
	2640, 0, 0, 2641, 2642, 2643, 2298, 2299, 2300, 0,
	0, 1733, 2302, 0, 2303, 2304, 0, 0, 0, 2311,
	2312, 0, 0, 0, 0, 0, 0, 1733, 1733, 1733,
	1733, 1733, 598, 598, 598, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2356, 0, 0,
	0, 0, 0, 0, 0, 2703, 0, 2707, 2708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2389, 0, 0, 0, 0, 0,
	2365, 0, 79, 0, 2365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2528, 0,
	0, 0, 0, 0, 0, 2534, 0, 2365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2865, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2894, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2668, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2682, 0, 2683, 0, 0, 0, 0, 2686, 2687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2735, 0, 0, 2737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2778, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2838, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 0,
	937, 922, 460, 0, 868, 940, 837, 856, 950, 859,
	862, 904, 816, 882, 377, 853, 808, 841, 811, 848,
	812, 839, 870, 250, 836, 924, 886, 939, 332, 247,
	818, 842, 391, 858, 197, 906, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	946, 336, 892, 0, 444, 362, 0, 0, 598, 872,
	928, 880, 918, 867, 905, 826, 891, 941, 854, 901,
	942, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 2907, 0, 2908, 0, 2879,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 850, 898, 936,
	851, 900, 245, 292, 252, 244, 464, 947, 927, 815,
	879, 935, 0, 0, 214, 938, 874, 0, 903, 0,
	953, 810, 894, 598, 813, 817, 949, 931, 845, 255,
	0, 0, 0, 0, 0, 0, 0, 871, 881, 915,
	865, 0, 0, 0, 0, 0, 0, 0, 843, 0,
	890, 0, 0, 0, 822, 814, 0, 2935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 869, 0, 0,
	0, 825, 0, 844, 916, 0, 807, 275, 819, 363,
	237, 0, 920, 930, 866, 498, 934, 864, 863, 910,
	823, 926, 857, 331, 821, 300, 192, 210, 0, 855,
	373, 415, 421, 925, 840, 849, 235, 847, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 889, 908,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	1142, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 835, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 921, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 913, 952, 386, 420, 225,
	484, 443, 830, 834, 828, 895, 829, 884, 885, 831,
	943, 944, 945, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 917, 824, 0, 832, 833, 0, 923, 932,
	933, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 888, 191, 207, 334, 948, 409, 268, 513,
	492, 488, 809, 827, 242, 838, 846, 0, 852, 860,
	861, 873, 875, 876, 877, 878, 896, 897, 899, 907,
	909, 912, 914, 919, 929, 951, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 887, 893, 345, 261, 280, 291,
	902, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	883, 911, 341, 461, 462, 287, 359, 0, 0, 937,
	922, 460, 0, 868, 940, 837, 856, 950, 859, 862,
	904, 816, 882, 377, 853, 808, 841, 811, 848, 812,
	839, 870, 250, 836, 924, 886, 939, 332, 247, 818,
	842, 391, 858, 197, 906, 434, 234, 342, 339, 467,
	262, 253, 249, 233, 288, 349, 389, 454, 383, 946,
	336, 892, 0, 444, 362, 0, 0, 0, 872, 928,
	880, 918, 867, 905, 826, 891, 941, 854, 901, 942,
	294, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 850, 898, 936, 851,
	900, 245, 292, 252, 244, 464, 947, 927, 815, 879,
	935, 0, 0, 214, 938, 874, 0, 903, 0, 953,
	810, 894, 0, 813, 817, 949, 931, 845, 255, 0,
	0, 0, 0, 0, 0, 0, 871, 881, 915, 865,
	0, 0, 0, 0, 0, 2396, 0, 843, 0, 890,
	0, 0, 0, 822, 814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 0, 0,
	825, 0, 844, 916, 0, 807, 275, 819, 363, 237,
	0, 920, 930, 866, 498, 934, 864, 863, 910, 823,
	926, 857, 331, 821, 300, 192, 210, 0, 855, 373,
	415, 421, 925, 840, 849, 235, 847, 419, 387, 482,
	218, 264, 412, 393, 417, 400, 267, 889, 908, 418,
	337, 469, 407, 479, 499, 500, 243, 367, 489, 458,
	495, 512, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 299, 440, 273, 195, 335, 505, 209, 427, 227,
	216, 202, 453, 477, 224, 431, 0, 0, 514, 204,
	475, 450, 356, 296, 297, 203, 0, 411, 248, 271,
	238, 376, 472, 473, 236, 515, 213, 494, 206, 1142,
	493, 369, 468, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 260, 282, 405, 340, 406, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 516,
	219, 220, 222, 835, 259, 263, 270, 272, 278, 279,
	286, 333, 380, 404, 402, 408, 921, 463, 480, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 511, 368,
	285, 442, 301, 338, 913, 952, 386, 420, 225, 484,
	443, 830, 834, 828, 895, 829, 884, 885, 831, 943,
	944, 945, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 917, 824, 0, 832, 833, 0, 923, 932, 933,
	535, 348, 433, 481, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 888, 191, 207, 334, 948, 409, 268, 513, 492,
	488, 809, 827, 242, 838, 846, 0, 852, 860, 861,
	873, 875, 876, 877, 878, 896, 897, 899, 907, 909,
	912, 914, 919, 929, 951, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 414, 422, 423, 424,
	425, 426, 429, 430, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 471, 483, 496, 501, 428, 277, 478,
	502, 0, 343, 887, 893, 345, 261, 280, 291, 902,
	491, 449, 212, 416, 269, 201, 231, 215, 239, 254,
	257, 295, 354, 361, 390, 395, 274, 251, 229, 413,
	226, 432, 455, 456, 457, 459, 358, 246, 394, 883,
	911, 341, 461, 462, 287, 359, 0, 0, 937, 922,
	460, 0, 868, 940, 837, 856, 950, 859, 862, 904,
	816, 882, 377, 853, 808, 841, 811, 848, 812, 839,
	870, 250, 836, 924, 886, 939, 332, 247, 818, 842,
	391, 858, 197, 906, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 946, 336,
	892, 0, 444, 362, 0, 0, 0, 872, 928, 880,
	918, 867, 905, 826, 891, 941, 854, 901, 942, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 850, 898, 936, 851, 900,
	245, 292, 252, 244, 464, 947, 927, 815, 879, 935,
	0, 0, 214, 938, 874, 0, 903, 0, 953, 810,
	894, 0, 813, 817, 949, 931, 845, 255, 0, 0,
	0, 0, 0, 0, 0, 871, 881, 915, 865, 0,
	0, 0, 0, 0, 2354, 0, 843, 0, 890, 0,
	0, 0, 822, 814, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 869, 0, 0, 0, 825,
	0, 844, 916, 0, 807, 275, 819, 363, 237, 0,
	920, 930, 866, 498, 934, 864, 863, 910, 823, 926,
	857, 331, 821, 300, 192, 210, 0, 855, 373, 415,
	421, 925, 840, 849, 235, 847, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 889, 908, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 1142, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 835, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 921, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 913, 952, 386, 420, 225, 484, 443,
	830, 834, 828, 895, 829, 884, 885, 831, 943, 944,
	945, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	917, 824, 0, 832, 833, 0, 923, 932, 933, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	888, 191, 207, 334, 948, 409, 268, 513, 492, 488,
	809, 827, 242, 838, 846, 0, 852, 860, 861, 873,
	875, 876, 877, 878, 896, 897, 899, 907, 909, 912,
	914, 919, 929, 951, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 887, 893, 345, 261, 280, 291, 902, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 883, 911,
	341, 461, 462, 287, 359, 0, 0, 937, 922, 460,
	0, 868, 940, 837, 856, 950, 859, 862, 904, 816,
	882, 377, 853, 808, 841, 811, 848, 812, 839, 870,
	250, 836, 924, 886, 939, 332, 247, 818, 842, 391,
	858, 197, 906, 434, 234, 342, 339, 467, 262, 253,
	249, 233, 288, 349, 389, 454, 383, 946, 336, 892,
	0, 444, 362, 0, 0, 0, 872, 928, 880, 918,
	867, 905, 826, 891, 941, 854, 901, 942, 294, 232,
	196, 374, 445, 266, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 230, 317, 326, 325, 306, 307, 309,
	311, 316, 323, 329, 850, 898, 936, 851, 900, 245,
	292, 252, 244, 464, 947, 927, 815, 879, 935, 0,
	0, 214, 938, 874, 0, 903, 0, 953, 810, 894,
	0, 813, 817, 949, 931, 845, 255, 0, 0, 0,
	0, 0, 0, 0, 871, 881, 915, 865, 0, 0,
	0, 0, 0, 1812, 0, 843, 0, 890, 0, 0,
	0, 822, 814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 869, 0, 0, 0, 825, 0,
	844, 916, 0, 807, 275, 819, 363, 237, 0, 920,
	930, 866, 498, 934, 864, 863, 910, 823, 926, 857,
	331, 821, 300, 192, 210, 0, 855, 373, 415, 421,
	925, 840, 849, 235, 847, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 889, 908, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 1142, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 835, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 921, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 913, 952, 386, 420, 225, 484, 443, 830,
	834, 828, 895, 829, 884, 885, 831, 943, 944, 945,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 917,
	824, 0, 832, 833, 0, 923, 932, 933, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 888,
	191, 207, 334, 948, 409, 268, 513, 492, 488, 809,
	827, 242, 838, 846, 0, 852, 860, 861, 873, 875,
	876, 877, 878, 896, 897, 899, 907, 909, 912, 914,
	919, 929, 951, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 887, 893, 345, 261, 280, 291, 902, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 883, 911, 341,
	461, 462, 287, 359, 0, 0, 937, 922, 460, 0,
	868, 940, 837, 856, 950, 859, 862, 904, 816, 882,
	377, 853, 808, 841, 811, 848, 812, 839, 870, 250,
	836, 924, 886, 939, 332, 247, 818, 842, 391, 858,
	197, 906, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 946, 336, 892, 0,
	444, 362, 0, 0, 0, 872, 928, 880, 918, 867,
	905, 826, 891, 941, 854, 901, 942, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 850, 898, 936, 851, 900, 245, 292,
	252, 244, 464, 947, 927, 815, 879, 935, 0, 0,
	214, 938, 874, 0, 903, 0, 953, 810, 894, 0,
	813, 817, 949, 931, 845, 255, 0, 0, 0, 0,
	0, 0, 0, 871, 881, 915, 865, 0, 0, 0,
	0, 0, 0, 0, 843, 0, 890, 0, 0, 0,
	822, 814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 869, 0, 0, 0, 825, 0, 844,
	916, 0, 807, 275, 819, 363, 237, 0, 920, 930,
	866, 498, 934, 864, 863, 910, 823, 926, 857, 331,
	821, 300, 192, 210, 0, 855, 373, 415, 421, 925,
	840, 849, 235, 847, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 889, 908, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 1142, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	835, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 921, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 913, 952, 386, 420, 225, 484, 443, 830, 834,
	828, 895, 829, 884, 885, 831, 943, 944, 945, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 917, 824,
	0, 832, 833, 0, 923, 932, 933, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 888, 191,
	207, 334, 948, 409, 268, 513, 492, 488, 809, 827,
	242, 838, 846, 0, 852, 860, 861, 873, 875, 876,
	877, 878, 896, 897, 899, 907, 909, 912, 914, 919,
	929, 951, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	887, 893, 345, 261, 280, 291, 902, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 883, 911, 341, 461,
	462, 287, 359, 0, 0, 937, 922, 460, 0, 868,
	940, 837, 856, 950, 859, 862, 904, 816, 882, 377,
	853, 808, 841, 811, 848, 812, 839, 870, 250, 836,
	924, 886, 939, 332, 247, 818, 842, 391, 858, 197,
	906, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 946, 336, 892, 0, 444,
	362, 0, 0, 0, 872, 928, 880, 918, 867, 905,
	826, 891, 941, 854, 901, 942, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 850, 898, 936, 851, 900, 245, 292, 252,
	244, 464, 947, 927, 815, 879, 935, 0, 0, 214,
	938, 874, 0, 903, 0, 953, 810, 894, 0, 813,
	817, 949, 931, 845, 255, 0, 0, 0, 0, 0,
	0, 0, 871, 881, 915, 865, 0, 0, 0, 0,
	0, 0, 0, 843, 0, 890, 0, 0, 0, 822,
	814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 869, 0, 0, 0, 825, 0, 844, 916,
	0, 807, 275, 819, 363, 237, 0, 920, 930, 866,
	498, 934, 864, 863, 910, 823, 926, 857, 331, 821,
	300, 192, 210, 0, 855, 373, 415, 421, 925, 840,
	849, 235, 847, 419, 387, 482, 218, 264, 412, 393,
	417, 400, 267, 889, 908, 418, 337, 469, 407, 479,
	499, 500, 243, 367, 489, 458, 495, 512, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 299, 440, 273,
	195, 335, 505, 209, 427, 227, 216, 202, 453, 477,
	224, 431, 0, 0, 514, 204, 475, 450, 356, 296,
	297, 203, 0, 411, 248, 271, 238, 376, 472, 473,
	236, 515, 213, 494, 206, 1142, 493, 369, 468, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 260,
	282, 405, 340, 406, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 516, 219, 220, 222, 835,
	259, 263, 270, 272, 278, 279, 286, 333, 380, 404,
	402, 408, 921, 463, 480, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 511, 368, 285, 442, 301, 338,
	913, 952, 386, 420, 225, 484, 443, 830, 834, 828,
	895, 829, 884, 885, 831, 943, 944, 945, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 917, 824, 0,
	832, 833, 0, 923, 932, 933, 535, 348, 433, 481,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 888, 191, 207,
	334, 948, 409, 268, 513, 492, 488, 809, 827, 242,
	838, 846, 0, 852, 860, 861, 873, 875, 876, 877,
	878, 896, 897, 899, 907, 909, 912, 914, 919, 929,
	951, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 471,
	483, 496, 501, 428, 277, 478, 502, 0, 343, 887,
	893, 345, 261, 280, 291, 902, 491, 449, 212, 416,
	269, 201, 231, 215, 239, 254, 257, 295, 354, 361,
	390, 395, 274, 251, 229, 413, 226, 432, 455, 456,
	457, 459, 358, 246, 394, 883, 911, 341, 461, 462,
	287, 359, 0, 0, 937, 922, 460, 0, 868, 940,
	837, 856, 950, 859, 862, 904, 816, 882, 377, 853,
	808, 841, 811, 848, 812, 839, 870, 250, 836, 924,
	886, 939, 332, 247, 818, 842, 391, 858, 197, 906,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 946, 336, 892, 0, 444, 362,
	0, 0, 0, 872, 928, 880, 918, 867, 905, 826,
	891, 941, 854, 901, 942, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 850, 898, 936, 851, 900, 245, 292, 252, 244,
	464, 947, 927, 815, 879, 935, 0, 0, 954, 938,
	874, 0, 903, 0, 953, 810, 894, 0, 813, 817,
	949, 931, 845, 255, 0, 0, 0, 0, 0, 0,
	0, 871, 881, 915, 865, 0, 0, 0, 0, 0,
	0, 0, 843, 0, 890, 0, 0, 0, 822, 814,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 869, 0, 0, 0, 825, 0, 844, 916, 0,
	807, 275, 819, 363, 237, 0, 920, 930, 866, 498,
	934, 864, 863, 910, 823, 926, 857, 331, 821, 300,
	192, 210, 0, 855, 373, 415, 421, 925, 840, 849,
	235, 847, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 889, 908, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 820, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 835, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 921, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 806, 800, 799, 301, 338, 913,
	952, 386, 420, 225, 484, 443, 830, 834, 828, 895,
	829, 884, 885, 831, 943, 944, 945, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 917, 824, 0, 832,
	833, 0, 923, 932, 933, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 888, 191, 207, 334,
	948, 409, 268, 513, 492, 488, 809, 827, 242, 838,
	846, 0, 852, 860, 861, 873, 875, 876, 877, 878,
	896, 897, 899, 907, 909, 912, 914, 919, 929, 951,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 887, 893,
	345, 261, 280, 291, 902, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 883, 911, 341, 461, 462, 287,
	359, 0, 0, 937, 922, 460, 0, 868, 940, 837,
	856, 950, 859, 862, 904, 816, 882, 377, 853, 808,
	841, 811, 848, 812, 839, 870, 250, 836, 924, 886,
	939, 332, 247, 818, 842, 391, 858, 197, 906, 434,
	234, 342, 339, 467, 262, 253, 249, 233, 288, 349,
	389, 454, 383, 946, 336, 892, 0, 444, 362, 0,
	0, 0, 872, 928, 880, 918, 867, 905, 826, 891,
	941, 854, 901, 942, 294, 232, 196, 374, 445, 266,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	850, 898, 936, 851, 900, 245, 292, 252, 244, 464,
	947, 927, 815, 879, 935, 0, 0, 954, 938, 874,
	0, 903, 0, 953, 810, 894, 0, 813, 817, 949,
	931, 845, 255, 0, 0, 0, 0, 0, 0, 0,
	871, 881, 915, 865, 0, 0, 0, 0, 0, 0,
	0, 843, 0, 890, 0, 0, 0, 822, 814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	869, 0, 0, 0, 825, 0, 844, 916, 0, 807,
	275, 819, 363, 237, 0, 920, 930, 866, 498, 934,
	864, 863, 910, 823, 926, 857, 331, 821, 300, 192,
	210, 0, 855, 373, 415, 421, 925, 840, 849, 235,
	847, 419, 387, 482, 218, 264, 412, 393, 417, 400,
	267, 889, 908, 418, 337, 469, 407, 479, 499, 500,
	243, 367, 489, 458, 495, 512, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 299, 440, 273, 195, 335,
	505, 209, 427, 227, 216, 202, 453, 1357, 224, 431,
	0, 0, 514, 204, 475, 450, 356, 296, 297, 203,
	0, 411, 248, 271, 238, 376, 472, 473, 236, 515,
	213, 494, 206, 820, 493, 369, 468, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 260, 282, 405,
	340, 406, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 516, 219, 220, 222, 835, 259, 263,
	270, 272, 278, 279, 286, 333, 380, 404, 402, 408,
	921, 463, 480, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 511, 806, 800, 799, 301, 338, 913, 952,
	386, 420, 225, 484, 443, 830, 834, 828, 895, 829,
	884, 885, 831, 943, 944, 945, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 917, 824, 0, 832, 833,
	0, 923, 932, 933, 535, 348, 433, 481, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 888, 191, 207, 334, 948,
	409, 268, 513, 492, 488, 809, 827, 242, 838, 846,
	0, 852, 860, 861, 873, 875, 876, 877, 878, 896,
	897, 899, 907, 909, 912, 914, 919, 929, 951, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 392, 396, 397, 398, 399, 401, 403, 410,
	414, 422, 423, 424, 425, 426, 429, 430, 435, 436,
	437, 438, 439, 447, 448, 452, 470, 471, 483, 496,
	501, 428, 277, 478, 502, 0, 343, 887, 893, 345,
	261, 280, 291, 902, 491, 449, 212, 416, 269, 201,
	231, 215, 239, 254, 257, 295, 354, 361, 390, 395,
	274, 251, 229, 413, 226, 432, 455, 456, 457, 459,
	358, 246, 394, 883, 911, 341, 461, 462, 287, 359,
	0, 0, 937, 922, 460, 0, 868, 940, 837, 856,
	950, 859, 862, 904, 816, 882, 377, 853, 808, 841,
	811, 848, 812, 839, 870, 250, 836, 924, 886, 939,
	332, 247, 818, 842, 391, 858, 197, 906, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 946, 336, 892, 0, 444, 362, 0, 0,
	0, 872, 928, 880, 918, 867, 905, 826, 891, 941,
	854, 901, 942, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 850,
	898, 936, 851, 900, 245, 292, 252, 244, 464, 947,
	927, 815, 879, 935, 0, 0, 954, 938, 874, 0,
	903, 0, 953, 810, 894, 0, 813, 817, 949, 931,
	845, 255, 0, 0, 0, 0, 0, 0, 0, 871,
	881, 915, 865, 0, 0, 0, 0, 0, 0, 0,
	843, 0, 890, 0, 0, 0, 822, 814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 869,
	0, 0, 0, 825, 0, 844, 916, 0, 807, 275,
	819, 363, 237, 0, 920, 930, 866, 498, 934, 864,
	863, 910, 823, 926, 857, 331, 821, 300, 192, 210,
	0, 855, 373, 415, 421, 925, 840, 849, 235, 847,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	889, 908, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 797, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 820, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 835, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 921,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 806, 800, 799, 301, 338, 913, 952, 386,
	420, 225, 484, 443, 830, 834, 828, 895, 829, 884,
	885, 831, 943, 944, 945, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 917, 824, 0, 832, 833, 0,
	923, 932, 933, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 888, 191, 207, 334, 948, 409,
	268, 513, 492, 488, 809, 827, 242, 838, 846, 0,
	852, 860, 861, 873, 875, 876, 877, 878, 896, 897,
	899, 907, 909, 912, 914, 919, 929, 951, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 887, 893, 345, 261,
	280, 291, 902, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 883, 911, 341, 461, 462, 287, 359, 0,
	0, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 1757, 0,
	616, 0, 0, 0, 250, 621, 0, 0, 0, 332,
	247, 0, 1758, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 628, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 623, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 0, 188, 189, 190, 692, 699, 700, 701, 702,
	703, 693, 695, 0, 0, 223, 694, 230, 639, 641,
	640, 650, 651, 652, 653, 654, 655, 656, 637, 697,
	704, 705, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 599, 613, 0, 627, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 786, 0, 0,
	0, 676, 0, 612, 0, 0, 620, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 675, 0, 0, 498, 0, 0, 673,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 645, 646, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 682, 674, 632, 686, 634, 683, 684,
	629, 630, 633, 685, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 677, 619, 618, 0, 625, 626, 0,
	635, 636, 638, 642, 643, 644, 647, 648, 649, 657,
	659, 660, 658, 661, 662, 663, 666, 667, 668, 669,
	664, 665, 670, 617, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 616, 0, 0, 0, 250, 621,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 628, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 623, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 692,
	699, 700, 701, 702, 703, 693, 695, 0, 0, 223,
	694, 230, 639, 641, 640, 650, 651, 652, 653, 654,
	655, 656, 637, 697, 704, 705, 0, 245, 292, 252,
	244, 464, 0, 0, 1723, 1724, 1725, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 599, 613, 0,
	627, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 0, 0, 0, 0, 676, 0, 612, 0, 0,
	620, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 237, 0, 675, 0, 0,
	498, 0, 0, 673, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 235, 0, 419, 387, 482, 218, 264, 412, 393,
	417, 400, 267, 0, 0, 418, 337, 469, 407, 479,
	499, 500, 243, 367, 489, 458, 495, 512, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 299, 440, 273,
	195, 335, 505, 209, 427, 227, 216, 202, 453, 477,
	224, 431, 0, 0, 514, 204, 475, 450, 356, 296,
	297, 203, 0, 411, 248, 271, 238, 376, 472, 473,
	236, 515, 213, 494, 206, 0, 493, 369, 468, 476,
	357, 347, 205, 474, 355, 346, 302, 645, 646, 260,
	282, 405, 340, 406, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 516, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 380, 404,
	402, 408, 0, 463, 480, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 511, 368, 285, 442, 301, 338,
	0, 0, 386, 420, 225, 484, 443, 682, 674, 632,
	686, 634, 683, 684, 629, 630, 633, 685, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 677, 619, 618,
	0, 625, 626, 0, 635, 636, 638, 642, 643, 644,
	647, 648, 649, 657, 659, 660, 658, 661, 662, 663,
	666, 667, 668, 669, 664, 665, 670, 617, 191, 207,
	334, 0, 409, 268, 513, 492, 488, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 471,
	483, 496, 501, 428, 277, 478, 502, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 491, 449, 212, 416,
	269, 201, 231, 215, 239, 254, 257, 295, 354, 361,
	390, 395, 274, 251, 229, 413, 226, 432, 455, 456,
	457, 459, 358, 246, 394, 0, 359, 341, 461, 462,
	287, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 0, 616, 0,
	0, 0, 250, 621, 0, 0, 0, 332, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 342, 339, 467,
	262, 253, 249, 233, 288, 349, 389, 454, 383, 628,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	623, 624, 0, 0, 0, 0, 0, 0, 1839, 0,
	294, 232, 196, 374, 445, 266, 0, 87, 0, 0,
	188, 189, 190, 692, 699, 700, 701, 702, 703, 693,
	695, 0, 0, 223, 694, 230, 639, 641, 640, 650,
	651, 652, 653, 654, 655, 656, 637, 697, 704, 705,
	1840, 245, 292, 252, 244, 464, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 599, 613, 0, 627, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 611, 0, 0, 0, 0, 676,
	0, 612, 0, 0, 620, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 237,
	0, 675, 0, 0, 498, 0, 0, 673, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 235, 0, 419, 387, 482,
	218, 264, 412, 393, 417, 400, 267, 0, 0, 418,
	337, 469, 407, 479, 499, 500, 243, 367, 489, 458,
	495, 512, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 299, 440, 273, 195, 335, 505, 209, 427, 227,
	216, 202, 453, 477, 224, 431, 0, 0, 514, 204,
	475, 450, 356, 296, 297, 203, 0, 411, 248, 271,
	238, 376, 472, 473, 236, 515, 213, 494, 206, 0,
	493, 369, 468, 476, 357, 347, 205, 474, 355, 346,
	302, 645, 646, 260, 282, 405, 340, 406, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 516,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 380, 404, 402, 408, 0, 463, 480, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 511, 368,
	285, 442, 301, 338, 0, 0, 386, 420, 225, 484,
	443, 682, 674, 632, 686, 634, 683, 684, 629, 630,
	633, 685, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 677, 619, 618, 0, 625, 626, 0, 635, 636,
	638, 642, 643, 644, 647, 648, 649, 657, 659, 660,
	658, 661, 662, 663, 666, 667, 668, 669, 664, 665,
	670, 617, 191, 207, 334, 0, 409, 268, 513, 492,
	488, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 414, 422, 423, 424,
	425, 426, 429, 430, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 471, 483, 496, 501, 428, 277, 478,
	502, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	491, 449, 212, 416, 269, 201, 231, 215, 239, 254,
	257, 295, 354, 361, 390, 395, 274, 251, 229, 413,
	226, 432, 455, 456, 457, 459, 358, 246, 394, 0,
	0, 341, 461, 462, 287, 359, 0, 0, 0, 78,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 616, 0, 0,
	0, 250, 621, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 628, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 623,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 87, 0, 0, 188,
	189, 190, 692, 699, 700, 701, 702, 703, 693, 695,
	0, 0, 223, 694, 230, 639, 641, 640, 650, 651,
	652, 653, 654, 655, 656, 637, 697, 704, 705, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	599, 613, 0, 627, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 0, 0, 0, 0, 676, 0,
	612, 0, 0, 620, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	675, 0, 0, 498, 0, 0, 673, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	645, 646, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	682, 674, 632, 686, 634, 683, 684, 629, 630, 633,
	685, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	677, 619, 618, 0, 625, 626, 0, 635, 636, 638,
	642, 643, 644, 647, 648, 649, 657, 659, 660, 658,
	661, 662, 663, 666, 667, 668, 669, 664, 665, 670,
	617, 191, 207, 334, 86, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 616, 0, 0, 0, 250, 621, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 628, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 623, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	87, 0, 0, 188, 189, 190, 692, 699, 700, 701,
	702, 703, 693, 695, 0, 0, 223, 694, 230, 639,
	641, 640, 650, 651, 652, 653, 654, 655, 656, 637,
	697, 704, 705, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 599, 613, 0, 627, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 610, 611, 0, 0,
	0, 0, 676, 0, 612, 0, 0, 620, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 675, 0, 0, 498, 0, 0,
	673, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	2901, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 645, 646, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 682, 674, 632, 686, 634, 683,
	684, 629, 630, 633, 685, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 677, 619, 618, 0, 625, 626,
	0, 635, 636, 638, 642, 643, 644, 647, 648, 649,
	657, 659, 660, 658, 661, 662, 663, 666, 667, 668,
	669, 664, 665, 670, 617, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 616, 0, 0, 0, 250,
	621, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 628, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 1324, 188, 189, 190,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	223, 694, 230, 639, 641, 640, 650, 651, 652, 653,
	654, 655, 656, 637, 697, 704, 705, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 599, 613,
	0, 627, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 0, 0, 0, 0, 676, 0, 612, 0,
	0, 620, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 675, 0,
	0, 498, 0, 0, 673, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 645, 646,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 682, 674,
	632, 686, 634, 683, 684, 629, 630, 633, 685, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 677, 619,
	618, 0, 625, 626, 0, 635, 636, 638, 642, 643,
	644, 647, 648, 649, 657, 659, 660, 658, 661, 662,
	663, 666, 667, 668, 669, 664, 665, 670, 617, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 616,
	0, 0, 0, 250, 621, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	628, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 692, 699, 700, 701, 702, 703,
	693, 695, 0, 0, 223, 694, 230, 639, 641, 640,
	650, 651, 652, 653, 654, 655, 656, 637, 697, 704,
	705, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 599, 613, 0, 627, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 786, 0, 0, 0,
	676, 0, 612, 0, 0, 620, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 675, 0, 0, 498, 0, 0, 673, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 645, 646, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 682, 674, 632, 686, 634, 683, 684, 629,
	630, 633, 685, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 677, 619, 618, 0, 625, 626, 0, 635,
	636, 638, 642, 643, 644, 647, 648, 649, 657, 659,
	660, 658, 661, 662, 663, 666, 667, 668, 669, 664,
	665, 670, 617, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 616, 0, 0, 0, 250, 621, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 628, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 623, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 87, 0, 0, 188, 189, 190, 692, 699,
	700, 701, 702, 703, 693, 695, 0, 0, 223, 694,
	230, 639, 641, 640, 650, 651, 652, 653, 654, 655,
	656, 637, 697, 704, 705, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 599, 613, 0, 627,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 611,
	0, 0, 0, 0, 676, 0, 612, 0, 0, 620,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 675, 0, 0, 498,
	0, 0, 673, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 645, 646, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 682, 674, 632, 686,
	634, 683, 684, 629, 630, 633, 685, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 677, 619, 618, 0,
	625, 626, 0, 635, 636, 638, 642, 643, 644, 647,
	648, 649, 657, 659, 660, 658, 661, 662, 663, 666,
	667, 668, 669, 664, 665, 670, 617, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 616, 0, 0,
	0, 250, 621, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 628, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 623,
	624, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 87, 0, 0, 188,
	189, 190, 692, 699, 700, 701, 702, 703, 693, 695,
	0, 0, 223, 694, 230, 639, 641, 640, 650, 651,
	652, 653, 654, 655, 656, 637, 697, 704, 705, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 613, 0, 627, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 611, 0, 0, 0, 0, 676, 0,
	612, 0, 0, 620, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 717, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 727, 728, 729, 730, 731,
	732, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 743, 744, 745, 746, 622, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	675, 0, 0, 498, 0, 0, 673, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	645, 646, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	682, 674, 632, 686, 634, 683, 684, 629, 630, 633,
	685, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	677, 619, 618, 0, 625, 626, 0, 635, 636, 638,
	642, 643, 644, 647, 648, 649, 657, 659, 660, 658,
	661, 662, 663, 666, 667, 668, 669, 664, 665, 670,
	617, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 699, 700, 0,
	0, 0, 0, 1668, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	1004, 498, 0, 0, 0, 0, 0, 1001, 1002, 331,
	962, 300, 192, 210, 995, 999, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 0, 341, 461,
	462, 287, 359, 0, 0, 0, 78, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 363, 237, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	300, 192, 210, 0, 0, 373, 415, 421, 0, 0,
	0, 235, 0, 419, 387, 482, 218, 264, 412, 393,
	417, 400, 267, 0, 0, 418, 337, 469, 407, 479,
	499, 500, 243, 367, 489, 458, 495, 512, 211, 240,
	381, 451, 485, 441, 360, 465, 466, 299, 440, 273,
	195, 335, 505, 209, 427, 227, 216, 202, 453, 477,
	224, 431, 0, 0, 514, 204, 475, 450, 356, 296,
	297, 203, 0, 411, 248, 271, 238, 376, 472, 473,
	236, 515, 213, 494, 206, 0, 493, 369, 468, 476,
	357, 347, 205, 474, 355, 346, 302, 321, 322, 260,
	282, 405, 340, 406, 283, 365, 364, 366, 198, 486,
	0, 199, 0, 446, 487, 516, 219, 220, 222, 0,
	259, 263, 270, 272, 278, 279, 286, 333, 380, 404,
	402, 408, 0, 463, 480, 490, 497, 503, 504, 506,
	507, 508, 509, 510, 511, 368, 285, 442, 301, 338,
	0, 0, 386, 420, 225, 484, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 348, 433, 481,
	303, 315, 318, 308, 327, 0, 328, 304, 305, 310,
	312, 313, 314, 319, 320, 324, 330, 0, 191, 207,
	334, 86, 409, 268, 513, 492, 488, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 1827, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 200, 208, 217, 221, 228, 241, 256,
	258, 265, 276, 281, 284, 289, 290, 293, 298, 344,
	350, 351, 352, 353, 370, 371, 372, 375, 378, 379,
	382, 384, 385, 388, 392, 396, 397, 398, 399, 401,
	403, 410, 414, 422, 423, 424, 425, 426, 429, 430,
	435, 436, 437, 438, 439, 447, 448, 452, 470, 471,
	483, 496, 501, 428, 277, 478, 502, 0, 343, 0,
	0, 345, 261, 280, 291, 0, 491, 449, 212, 416,
	269, 201, 231, 215, 239, 254, 257, 295, 354, 361,
	390, 395, 274, 251, 229, 413, 226, 432, 455, 456,
	457, 459, 358, 246, 394, 0, 1343, 341, 461, 462,
	287, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 0, 0, 1345, 0, 0,
	0, 0, 250, 0, 0, 0, 0, 332, 247, 0,
	0, 391, 0, 197, 0, 434, 234, 342, 339, 467,
	262, 253, 249, 233, 288, 349, 389, 454, 383, 0,
	336, 0, 0, 444, 362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 232, 196, 374, 445, 266, 0, 0, 0, 0,
	188, 189, 190, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 230, 317, 326, 325, 306,
	307, 309, 311, 316, 323, 329, 0, 0, 0, 0,
	0, 245, 292, 252, 244, 464, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 1176, 0, 1177,
	1178, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 363, 237,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 300, 192, 210, 0, 0, 373,
	415, 421, 0, 0, 0, 235, 0, 419, 387, 482,
	218, 264, 412, 393, 417, 400, 267, 0, 0, 418,
	337, 469, 407, 479, 499, 500, 243, 367, 489, 458,
	495, 512, 211, 240, 381, 451, 485, 441, 360, 465,
	466, 299, 440, 273, 195, 335, 505, 209, 427, 227,
	216, 202, 453, 477, 224, 431, 0, 0, 514, 204,
	475, 450, 356, 296, 297, 203, 0, 411, 248, 271,
	238, 376, 472, 473, 236, 515, 213, 494, 206, 0,
	493, 369, 468, 476, 357, 347, 205, 474, 355, 346,
	302, 321, 322, 260, 282, 405, 340, 406, 283, 365,
	364, 366, 198, 486, 0, 199, 0, 446, 487, 516,
	219, 220, 222, 0, 259, 263, 270, 272, 278, 279,
	286, 333, 380, 404, 402, 408, 0, 463, 480, 490,
	497, 503, 504, 506, 507, 508, 509, 510, 511, 368,
	285, 442, 301, 338, 0, 0, 386, 420, 225, 484,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 518, 519, 520, 521, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 348, 433, 481, 303, 315, 318, 308, 327, 0,
	328, 304, 305, 310, 312, 313, 314, 319, 320, 324,
	330, 0, 191, 207, 334, 0, 409, 268, 513, 492,
	488, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 200, 208, 217,
	221, 228, 241, 256, 258, 265, 276, 281, 284, 289,
	290, 293, 298, 344, 350, 351, 352, 353, 370, 371,
	372, 375, 378, 379, 382, 384, 385, 388, 392, 396,
	397, 398, 399, 401, 403, 410, 414, 422, 423, 424,
	425, 426, 429, 430, 435, 436, 437, 438, 439, 447,
	448, 452, 470, 471, 483, 496, 501, 428, 277, 478,
	502, 0, 343, 0, 0, 345, 261, 280, 291, 0,
	491, 449, 212, 416, 269, 201, 231, 215, 239, 254,
	257, 295, 354, 361, 390, 395, 274, 251, 229, 413,
	226, 432, 455, 456, 457, 459, 358, 246, 394, 0,
	359, 341, 461, 462, 287, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 0,
	0, 332, 247, 0, 0, 391, 0, 197, 0, 434,
	234, 342, 339, 467, 262, 253, 249, 233, 288, 349,
	389, 454, 383, 0, 336, 0, 0, 444, 362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 232, 196, 374, 445, 266,
	0, 0, 0, 0, 188, 189, 190, 1286, 1289, 0,
	0, 0, 0, 1285, 1288, 0, 0, 223, 1284, 230,
	317, 326, 325, 306, 307, 309, 311, 316, 323, 329,
	0, 0, 0, 0, 0, 245, 292, 252, 244, 464,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 363, 237, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 300, 192,
	210, 0, 0, 373, 415, 421, 0, 0, 0, 235,
	0, 419, 387, 482, 218, 264, 412, 393, 417, 400,
	267, 0, 0, 418, 337, 469, 407, 479, 499, 500,
	243, 367, 489, 458, 495, 512, 211, 240, 381, 451,
	485, 441, 360, 465, 466, 299, 440, 273, 195, 335,
	505, 209, 427, 227, 216, 202, 453, 477, 224, 431,
	0, 0, 514, 204, 475, 450, 356, 296, 297, 203,
	0, 411, 248, 271, 238, 376, 472, 473, 236, 515,
	213, 494, 206, 0, 493, 369, 468, 476, 357, 347,
	205, 474, 355, 346, 302, 321, 322, 260, 282, 405,
	340, 406, 283, 365, 364, 366, 198, 486, 0, 199,
	0, 446, 487, 516, 219, 220, 222, 0, 259, 263,
	270, 272, 278, 279, 286, 333, 380, 404, 402, 408,
	0, 463, 480, 490, 497, 503, 504, 506, 507, 508,
	509, 510, 511, 368, 285, 442, 301, 338, 0, 0,
	386, 420, 225, 484, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 518, 519, 520,
	521, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 348, 433, 481, 303, 315,
	318, 308, 327, 0, 328, 304, 305, 310, 312, 313,
	314, 319, 320, 324, 330, 0, 191, 207, 334, 0,
	409, 268, 513, 492, 488, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 200, 208, 217, 221, 228, 241, 256, 258, 265,
	276, 281, 284, 289, 290, 293, 298, 344, 350, 351,
	352, 353, 370, 371, 372, 375, 378, 379, 382, 384,
	385, 388, 392, 396, 397, 398, 399, 401, 403, 410,
	414, 422, 423, 424, 425, 426, 429, 430, 435, 436,
	437, 438, 439, 447, 448, 452, 470, 471, 483, 496,
	501, 428, 277, 478, 502, 0, 343, 0, 0, 345,
	261, 280, 291, 0, 491, 449, 212, 416, 269, 201,
	231, 215, 239, 254, 257, 295, 354, 361, 390, 395,
	274, 251, 229, 413, 226, 432, 455, 456, 457, 459,
	358, 246, 394, 0, 0, 341, 461, 462, 287, 359,
	0, 0, 0, 78, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	87, 0, 1324, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 86, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 1827, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 1779, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1523, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 1777,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 956, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 962, 300,
	192, 210, 960, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 1779, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 1324, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 2831, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 2114, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2099, 0, 0,
	0, 2100, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 1368, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 2915, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 2831, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 1619, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1493, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	1491, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 1489, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 1487, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 1485, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1481, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	1479, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 1477, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	1452, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 1352, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1153, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 768, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 591, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 590, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 359,
	341, 461, 462, 287, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 0, 0, 0,
	332, 247, 0, 0, 391, 0, 197, 0, 434, 234,
	342, 339, 467, 262, 253, 249, 233, 288, 349, 389,
	454, 383, 0, 336, 0, 0, 444, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 232, 196, 374, 445, 266, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 230, 317,
	326, 325, 306, 307, 309, 311, 316, 323, 329, 0,
	0, 0, 0, 0, 245, 292, 252, 244, 464, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 538, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 2920, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 363,
	237, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 331, 0, 300, 192, 210, 0, 0,
	373, 415, 421, 0, 0, 0, 235, 0, 419, 387,
	482, 218, 264, 412, 393, 417, 400, 267, 0, 0,
	418, 337, 469, 407, 479, 499, 500, 243, 367, 489,
	458, 495, 512, 211, 240, 381, 451, 485, 441, 360,
	465, 466, 299, 440, 273, 195, 335, 505, 209, 427,
	227, 216, 202, 453, 477, 224, 431, 0, 0, 514,
	204, 475, 450, 356, 296, 297, 203, 0, 411, 248,
	271, 238, 376, 472, 473, 236, 515, 213, 494, 206,
	0, 493, 369, 468, 476, 357, 347, 205, 474, 355,
	346, 302, 321, 322, 260, 282, 405, 340, 406, 283,
	365, 364, 366, 198, 486, 0, 199, 0, 446, 487,
	516, 219, 220, 222, 0, 259, 263, 270, 272, 278,
	279, 286, 333, 380, 404, 402, 408, 0, 463, 480,
	490, 497, 503, 504, 506, 507, 508, 509, 510, 511,
	368, 285, 442, 301, 338, 0, 0, 386, 420, 225,
	484, 443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 348, 433, 481, 303, 315, 318, 308, 327,
	0, 328, 304, 305, 310, 312, 313, 314, 319, 320,
	324, 330, 0, 191, 207, 334, 0, 409, 268, 513,
	492, 488, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 200, 208,
	217, 221, 228, 241, 256, 258, 265, 276, 281, 284,
	289, 290, 293, 298, 344, 350, 351, 352, 353, 370,
	371, 372, 375, 378, 379, 382, 384, 385, 388, 392,
	396, 397, 398, 399, 401, 403, 410, 414, 422, 423,
	424, 425, 426, 429, 430, 435, 436, 437, 438, 439,
	447, 448, 452, 470, 471, 483, 496, 501, 428, 277,
	478, 502, 0, 343, 0, 0, 345, 261, 280, 291,
	0, 491, 449, 212, 416, 269, 201, 231, 215, 239,
	254, 257, 295, 354, 361, 390, 395, 274, 251, 229,
	413, 226, 432, 455, 456, 457, 459, 358, 246, 394,
	0, 359, 341, 461, 462, 287, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 0,
	0, 0, 332, 247, 0, 0, 391, 0, 197, 0,
	434, 234, 342, 339, 467, 262, 253, 249, 233, 288,
	349, 389, 454, 383, 0, 336, 0, 0, 444, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 232, 196, 374, 445,
	266, 0, 0, 0, 0, 188, 2562, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	230, 317, 326, 325, 306, 307, 309, 311, 316, 323,
	329, 0, 0, 0, 0, 0, 245, 292, 252, 244,
	464, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 0, 363, 237, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 331, 0, 300,
	192, 210, 0, 0, 373, 415, 421, 0, 0, 0,
	235, 0, 419, 387, 482, 218, 264, 412, 393, 417,
	400, 267, 0, 0, 418, 337, 469, 407, 479, 499,
	500, 243, 367, 489, 458, 495, 512, 211, 240, 381,
	451, 485, 441, 360, 465, 466, 299, 440, 273, 195,
	335, 505, 209, 427, 227, 216, 202, 453, 477, 224,
	431, 0, 0, 514, 204, 475, 450, 356, 296, 297,
	203, 0, 411, 248, 271, 238, 376, 472, 473, 236,
	515, 213, 494, 206, 0, 493, 369, 468, 476, 357,
	347, 205, 474, 355, 346, 302, 321, 322, 260, 282,
	405, 340, 406, 283, 365, 364, 366, 198, 486, 0,
	199, 0, 446, 487, 516, 219, 220, 222, 0, 259,
	263, 270, 272, 278, 279, 286, 333, 380, 404, 402,
	408, 0, 463, 480, 490, 497, 503, 504, 506, 507,
	508, 509, 510, 511, 368, 285, 442, 301, 338, 0,
	0, 386, 420, 225, 484, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 348, 433, 481, 303,
	315, 318, 308, 327, 0, 328, 304, 305, 310, 312,
	313, 314, 319, 320, 324, 330, 0, 191, 207, 334,
	0, 409, 268, 513, 492, 488, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 200, 208, 217, 221, 228, 241, 256, 258,
	265, 276, 281, 284, 289, 290, 293, 298, 344, 350,
	351, 352, 353, 370, 371, 372, 375, 378, 379, 382,
	384, 385, 388, 392, 396, 397, 398, 399, 401, 403,
	410, 414, 422, 423, 424, 425, 426, 429, 430, 435,
	436, 437, 438, 439, 447, 448, 452, 470, 471, 483,
	496, 501, 428, 277, 478, 502, 0, 343, 0, 0,
	345, 261, 280, 291, 0, 491, 449, 212, 416, 269,
	201, 231, 215, 239, 254, 257, 295, 354, 361, 390,
	395, 274, 251, 229, 413, 226, 432, 455, 456, 457,
	459, 358, 246, 394, 0, 359, 341, 461, 462, 287,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 0, 0, 0, 332, 247, 0, 0,
	391, 0, 197, 0, 434, 234, 342, 339, 467, 262,
	253, 249, 233, 288, 349, 389, 454, 383, 0, 336,
	0, 0, 444, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	232, 196, 374, 445, 266, 0, 0, 0, 0, 188,
	2095, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 230, 317, 326, 325, 306, 307,
	309, 311, 316, 323, 329, 0, 0, 0, 0, 0,
	245, 292, 252, 244, 464, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 363, 237, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 331, 0, 300, 192, 210, 0, 0, 373, 415,
	421, 0, 0, 0, 235, 0, 419, 387, 482, 218,
	264, 412, 393, 417, 400, 267, 0, 0, 418, 337,
	469, 407, 479, 499, 500, 243, 367, 489, 458, 495,
	512, 211, 240, 381, 451, 485, 441, 360, 465, 466,
	299, 440, 273, 195, 335, 505, 209, 427, 227, 216,
	202, 453, 477, 224, 431, 0, 0, 514, 204, 475,
	450, 356, 296, 297, 203, 0, 411, 248, 271, 238,
	376, 472, 473, 236, 515, 213, 494, 206, 0, 493,
	369, 468, 476, 357, 347, 205, 474, 355, 346, 302,
	321, 322, 260, 282, 405, 340, 406, 283, 365, 364,
	366, 198, 486, 0, 199, 0, 446, 487, 516, 219,
	220, 222, 0, 259, 263, 270, 272, 278, 279, 286,
	333, 380, 404, 402, 408, 0, 463, 480, 490, 497,
	503, 504, 506, 507, 508, 509, 510, 511, 368, 285,
	442, 301, 338, 0, 0, 386, 420, 225, 484, 443,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	348, 433, 481, 303, 315, 318, 308, 327, 0, 328,
	304, 305, 310, 312, 313, 314, 319, 320, 324, 330,
	0, 191, 207, 334, 0, 409, 268, 513, 492, 488,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 200, 208, 217, 221,
	228, 241, 256, 258, 265, 276, 281, 284, 289, 290,
	293, 298, 344, 350, 351, 352, 353, 370, 371, 372,
	375, 378, 379, 382, 384, 385, 388, 392, 396, 397,
	398, 399, 401, 403, 410, 414, 422, 423, 424, 425,
	426, 429, 430, 435, 436, 437, 438, 439, 447, 448,
	452, 470, 471, 483, 496, 501, 428, 277, 478, 502,
	0, 343, 0, 0, 345, 261, 280, 291, 0, 491,
	449, 212, 416, 269, 201, 231, 215, 239, 254, 257,
	295, 354, 361, 390, 395, 274, 251, 229, 413, 226,
	432, 455, 456, 457, 459, 358, 246, 394, 0, 0,
	341, 461, 462, 287,
}

var yyPact = [...]int{
	4899, -1000, -412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1958, 2003, -1000, -1000,
	-1000, -1000, 2074, -1000, 702, 1673, -1000, 1918, 3328, -1000,
	40293, 425, -1000, 39105, 414, 106, 40293, -1000, 128, -1000,
	99, 40293, 120, 38511, -1000, -1000, -307, 17117, 1835, -3,
	-4, 40293, -1000, -1000, -1000, -1000, 2052, 1661, -1000, 301,
	-1000, -1000, -1000, -1000, -1000, -1000, 37917, -1000, -1000, -1000,
	1911, 1914, 2089, 602, 1872, -1000, 1977, 1661, -1000, 17117,
	2026, 1965, 16523, -1000, 16523, 351, -1000, -1000, 12355, -1000,
	-1000, 23067, 40293, 28413, 448, -1000, 1918, -1000, -1000, -1000,
	83, -1000, 278, 1585, -1000, 1584, -1000, 601, 686, 292,
	412, 403, 291, 289, 286, 285, 284, 283, 279, 277,
	299, -1000, 639, 639, -165, -166, 2922, 326, 340, 340,
	363, 1865, 1864, -1000, 818, -1000, 639, 639, 639, 271,
	639, 639, 639, 639, 229, 224, 639, 639, 639, 639,
	639, 639, 639, 639, 639, 639, 639, 639, 639, 639,
	639, 639, 639, 290, 1918, 188, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 40293, 131, 40293, -1000,
	486, 40293, 769, 769, 46, 769, 769, 769, 769, 103,
	621, -6, -1000, 100, 244, 101, 183, 733, 161, -1000,
	-1000, 178, 733, 1224, 613, 88, -1000, 769, 769, -1000,
	9959, 203, 9959, 9959, -1000, 1889, -1000, -1000, -1000, -1000,
	1232, -1000, 361, -1000, -1000, -1000, -1000, 40293, 37323, 332,
	669, -1000, -1000, -1000, 37, -1000, -1000, 1395, 1040, 17117,
	943, -1000, 1482, 561, -1000, -1000, -1000, -1000, -1000, 455,
	17711, 17711, 17711, 17711, -1000, -1000, 1606, 1606, 1606, 1606,
	17711, 1606, 17711, 1606, 1606, 1606, 1606, 17117, 1606, 1606,
	1606, -1000, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606,
	1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606,
	1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606,
	1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606,
	1606, 1606, 485, 1606, 1606, 1606, 1606, 1606, -1000, -1000,
	-1000, -1000, 1606, 1606, 1606, 1606, 1606, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20686, -1000, 14741, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40293, -1000,
	1606, 144, 40293, 40293, 293, 1977, 1661, -1000, 2052, 2049,
	301, -1000, 2293, 1310, 1321, 1240, 1661, 1573, 40293, -1000,
	1608, -1000, -1000, -1000, 1771, 1109, 1209, -1000, -1000, -1000,
	-1000, 1498, 17117, -1000, -1000, 2071, -1000, 20092, 478, 833,
	2070, 36729, -1000, 351, 351, 1581, 11756, -46, -1000, -1000,
	-1000, 660, 26037, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1889, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1565, 40293, -1000, -1000, 4320,
	1140, -1000, 1672, -1000, 1545, -1000, 1643, 17117, 1684, 409,
	1140, 385, 381, 380, -1000, -97, -1000, -1000, -1000, -1000,
	-1000, -1000, 639, 639, 639, -1000, 298, 2024, 3328, 6119,
	-1000, -1000, -1000, 36135, 1671, 1140, -1000, 1666, -1000, 746,
	434, 466, 466, 1140, -1000, -1000, 40293, 1140, 744, 737,
	1140, 1140, 40293, 40293, -1000, 35541, -1000, 34947, 34353, 1049,
	40293, 33759, 33165, 32571, 31977, 31383, -1000, 1756, -1000, 1655,
	-1000, -1000, -1000, 40293, 1140, 40293, 40293, 297, -1000, -1000,
	40293, 1140, -1000, -1000, 1026, 1022, 1014, 639, 639, 991,
	1205, 1204, 1202, 639, 639, 989, 1196, 27225, 1163, 160,
	988, 986, 965, 1024, 1161, 187, 1160, 1012, 1008, 962,
	40293, 1658, 40293, -1000, 169, 668, 338, 658, 1918, 1826,
	1580, 360, 406, 1140, 341, 341, 40293, -1000, 10558, -1000,
	-1000, 1157, 17117, -1000, 749, 733, 733, -1000, -1000, -1000,
	-1000, -1000, -1000, 769, 40293, 749, -1000, -1000, -1000, 733,
	769, 40293, 769, 769, 769, 769, 733, 733, 733, 769,
	40293, 40293, 40293, 40293, 40293, 40293, 40293, 40293, 40293, 9959,
	613, 769, -314, -1000, 1155, -1000, 1764, -1000, -1000, -1000,
	-1000, -1000, -1000, 9959, 9959, -1000, -1000, -1000, -1000, 118,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -58,
	1578, 30789, -1000, -316, -317, -319, -320, -1000, -1000, -1000,
	-322, -329, -1000, -1000, -1000, 17117, 17117, 17117, 17117, -198,
	-1000, 804, 17711, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	855, 753, 17711, 17711, 17711, 17711, 17711, 17711, 17711, 17711,
	17711, 17711, 17711, 17711, 17711, 17711, 17711, 792, 5496, 5496,
	561, 561, 561, 561, -1000, 16523, 17117, 17117, 561, -1000,
	1140, 30195, 16523, 16523, 17117, 1910, 672, 1040, 40293, -1000,
	1240, -1000, -1000, -1000, 868, -1000, 40293, 40293, 562, 17117,
	17117, 17117, 17117, 17117, 17117, 13548, 17117, 17117, 17117, 17117,
	17117, 17117, 17117, 17117, 17117, 17117, 17117, 17117, 17117, 17117,
	17117, 17117, 17117, 17117, 17117, 17117, 17117, 17117, 17117, 17117,
	17117, 17117, 12954, 10558, 16523, 16523, 16523, 16523, 16523, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 476, 1313, 1302, 1429, -1000, 1577, -1000, -160, 22473,
	17117, 1154, 2068, 1699, 40293, -1000, -1000, -1000, 1977, -1000,
	1977, 1313, 2255, 1778, 16523, -1000, -1000, 2255, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1437, -1000, 40293, 1573,
	1960, 40293, 1768, 1148, 259, -1000, 17117, 17117, 1569, -1000,
	1188, 40293, -1000, -198, -1000, 29601, -1000, -1000, 9360, -1000,
	40293, 267, 40293, -1000, 21879, 29007, 11157, -46, -1000, 11157,
	1469, -1000, -35, -26, 14142, 537, -1000, -1000, -1000, 2922,
	18899, 1318, 537, 42, -1000, -1000, -1000, 1643, -1000, 1643,
	1643, 1643, 1643, 259, 259, 259, 259, -1000, -1000, -1000,
	-1000, -1000, 1657, 1656, -1000, 1643, 1643, 1643, 1643, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1650, 1650, 1650, 1644,
	1644, 327, -1000, 17117, 339, 28413, 1932, 960, 1107, 169,
	347, 1697, 1140, 1140, 1140, 347, -1000, 1219, 1214, 1135,
	-1000, -398, 1536, -1000, -1000, 2021, -1000, -1000, 457, 803,
	802, 619, 40293, 150, 266, -1000, 323, -1000, 28413, 1140,
	736, 466, 1140, -1000, 1140, -1000, -1000, -1000, -1000, -1000,
	1140, -1000, -1000, 1534, -1000, 1419, 830, 795, 821, 764,
	1534, -1000, -1000, -144, 1534, -1000, 1534, -1000, 1534, -1000,
	1534, -1000, 1534, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 625, 145, 40293, 150, 792, -1000, 359, -1000, -1000,
	-1000, 792, 792, -1000, -1000, -1000, -1000, 1144, 1143, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -388, 40293,
	-1000, 166, 649, 253, 274, 217, 40293, 139, 1969, 171,
	219, 40293, 40293, 341, 1722, 40293, 1944, 40293, -1000, -1000,
	-1000, -1000, -1000, 1040, 40293, -1000, -1000, 769, 769, -1000,
	-1000, 40293, 769, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 769, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 40293, -1000, -1000,
	-1000, -1000, 40293, -1000, -1000, -1000, -1000, -1000, 54, -40,
	313, -1000, -1000, -1000, -1000, -1000, 1974, -1000, 1040, 724,
	706, -1000, 1606, -1000, -1000, 813, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 855, 17711, 17711, 17711, 1257, 410, 1517,
	973, 1115, 866, 866, 834, 834, 565, 565, 565, 565,
	565, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1139,
	-1000, 1474, -1000, 1519, 1306, 1240, -1000, 1474, 1474, 1072,
	16523, -1000, -1000, 691, -1000, 17117, 1240, -1000, -1000, 1240,
	1240, 1514, 1502, 2065, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1053, 1107, 1107, 1107, 1107,
	1107, 17117, 1358, -1000, -1000, -1000, 1913, 1909, 1240, 1395,
	1240, 1484, -1000, 1904, 1107, 1887, 1846, 1839, 1452, 1820,
	1808, 1804, 1107, 1107, 1107, 1228, 1750, 1745, 1740, 1736,
	1729, 1723, 1719, 1683, 1630, 1107, 1240, 16523, 16523, 1481,
	1606, 474, -1000, 1474, 1240, 1240, 1474, 1474, 10558, 1240,
	-1000, 40293, -1000, -304, -1000, -60, 587, 1606, -1000, 27225,
	1240, -1000, 4515, -1000, 41481, -1000, -1000, -1000, -1000, -1000,
	25443, 1399, 2255, -1000, -1000, 1606, 1508, -1000, -1000, 259,
	23, 24849, -1000, -1000, 1040, 1040, 17117, -1000, -1000, -1000,
	-1000, -1000, -1000, 470, 2053, 307, 1606, -1000, 1479, 2204,
	-1000, -1000, -1000, 1957, 19498, -1000, 1606, 1606, 40293, 1613,
	1612, -1000, 468, -1000, 1469, -46, -50, -1000, -1000, -1000,
	-1000, 1040, -1000, 1091, 275, 322, -1000, 350, -1000, -1000,
	-1000, -1000, 1844, 24, -1000, -1000, -1000, 259, 259, -1000,
	-1000, -1000, -1000, -1000, -1000, 1128, 1128, -1000, -1000, -1000,
	-1000, -1000, 954, -1000, -1000, -1000, 953, -1000, -1000, 1610,
	1726, 339, -1000, -1000, 639, 1125, -1000, -1000, 1847, 639,
	639, 40293, -1000, -1000, 1301, 1932, 166, 40293, 694, 1721,
	-1000, 1697, 1697, 1697, 40293, -1000, -1000, -1000, -1000, -1000,
	-1000, -389, 57, 288, -1000, -1000, -1000, 3986, 40293, 1506,
	-1000, 147, -1000, 1294, -1000, 40293, -1000, 1491, 1649, 1140,
	1140, -1000, -1000, -1000, 40293, 1606, -1000, -1000, -1000, -1000,
	405, 1907, 1897, -1000, -1000, -233, 150, 147, 537, 1140,
	-1000, -1000, -1000, -1000, -1000, -391, 1487, 375, 153, 246,
	40293, 40293, 40293, 40293, 40293, 445, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 191, 342, -1000, 40293, 40293, 541,
	-1000, -1000, -1000, 733, -1000, -1000, 733, -1000, -1000, -1000,
	-1000, -1000, 1885, 40293, -43, -356, -1000, -345, 17117, -1000,
	-1000, -1000, -1000, 902, 399, 1517, 17711, 17711, 16523, -137,
	325, 325, 792, -1000, -1000, -1000, 17117, 17117, 1368, 681,
	-1000, 17117, 937, -1000, -1000, -1000, 17117, 17117, 17117, 1240,
	212, -1000, -1000, -1000, -1000, -1000, 2063, -1000, 17117, 17117,
	17117, -1000, -1000, 17117, 17117, -1000, 17117, 17117, 18305, 1240,
	18305, 17117, 17117, 18305, -1000, -1000, -1000, -1000, 18305, 17117,
	17117, 17117, 17117, 17117, 17117, 17117, 17117, 17117, -1000, -1000,
	1474, 1474, 16523, 10558, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 587, -1000, 466, 466, 466, 40293,
	-1000, -1000, -1000, -1000, -1000, -1000, 1459, 2006, -1000, 1785,
	1784, 2062, 2053, -1000, 21879, 2255, -1000, -1000, 40293, -298,
	-1000, 1823, 1856, -1000, -1000, -1000, -1000, 8761, 1977, 17117,
	1720, 40293, 1606, -1000, 21285, 40293, 40293, 21879, 21879, 21879,
	21879, 21879, -1000, 1761, 1751, -1000, 1757, 1733, 1827, 40293,
	-1000, 1465, 1240, 2049, 19498, 301, 17117, 23661, 1423, 21879,
	-1000, -1000, 21879, 40293, 8162, -1000, -1000, -55, -42, -1000,
	-1000, -1000, -1000, 2922, -1000, -1000, 281, 1950, 1840, -1000,
	-1000, -1000, -1000, 1461, -1000, 1455, 1450, 1453, 145, -1000,
	1681, 1883, 639, 639, -1000, 942, -1000, 1140, 1119, 1114,
	-1000, -1000, -1000, 365, -1000, 1942, 40293, 1717, 1713, 1712,
	-1000, -407, 921, 1647, 1635, 17117, 1646, 2019, 1436, 40293,
	-1000, -1000, 40293, -1000, 158, -1000, 339, 40293, -1000, -1000,
	-1000, 266, 40293, -1000, 6543, -1000, 147, -1000, -1000, -1000,
	-1000, -1000, -1000, 40293, 165, -1000, 1645, 1230, -1000, -1000,
	1623, -1000, -1000, -1000, -1000, 143, 251, -1000, 40293, 501,
	1726, 40293, -1000, -1000, -1000, 769, 769, -1000, -1000, 1876,
	-1000, 1140, 1107, 17711, 17711, -1000, 561, -1000, 1606, 1240,
	1643, 1643, -1000, 1643, 1644, -1000, 1643, 92, 1643, 75,
	1643, -1000, -1000, 1240, 1240, 1199, 1152, -105, -1000, 1040,
	17117, 1625, 1615, 1107, -1000, 1641, 1636, 17117, 1107, 1107,
	1107, -1000, 1040, 1452, 1587, 1350, -1000, -1000, -1000, -1000,
	1442, 1107, 1582, -295, 1240, 1448, 1448, 1448, 1448, 1448,
	1429, 1429, 1429, 1429, -1000, -1000, 1240, -1000, -1000, 1971,
	1971, 1971, 1412, 40887, 40293, -1000, -1000, -1000, -1000, 2053,
	2048, 1440, -1000, -1000, 23, 344, -1000, 1821, 1856, -1000,
	2018, 1810, 2017, -1000, -1000, -1000, 1040, -1000, 1923, 1308,
	-1000, 647, 1391, -1000, -1000, 15929, 1421, 1781, 467, 1412,
	1538, 2204, 1694, 1708, 1935, -1000, -1000, -1000, -1000, 1737,
	-1000, 1734, -1000, -1000, 1608, -1000, -1000, 1302, 1240, 1572,
	267, 21879, 1376, 1376, -1000, 458, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 820, 6095, 2086, -1000, 1113, -1000, 1025,
	193, 912, -1000, -1000, 639, 639, -1000, 735, 726, -1000,
	40293, 1633, -1000, 259, 1112, 259, 901, -1000, 875, -1000,
	-1000, -1000, -1000, 1631, 1735, -1000, -1000, -1000, -1000, 40293,
	-1000, -1000, 40293, 40293, 40293, 1620, 2016, -1000, 17117, 1618,
	646, 1392, 40293, 40293, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 370, 639, -365, 207, 197, 639,
	639, 639, -1000, -1000, 1382, 1371, -1000, -163, -1000, 17117,
	-1000, -1000, -1000, 897, 897, -1000, 1608, -1000, -1000, -1000,
	1286, -1000, -1000, -146, 40293, 40293, 40293, 40293, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 561, 17711,
	-1000, -1000, 259, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17117, -1000, 17117, -1000, 1977, 1108, 1040, 17117,
	17117, -1000, 871, 862, 1107, -1000, -1000, -1000, 1240, 18305,
	-1000, 18305, -1000, 17117, 198, 325, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1606, 1831, 1606,
	1606, 23661, -1000, -1000, 2048, 2038, 2014, 1793, 1800, 1800,
	1821, -1000, 2011, 1997, -1000, 1097, 1996, 1095, 720, -1000,
	40293, 17117, 1606, -1000, 318, 40293, 1606, 40293, -1000, 2031,
	-1000, -1000, 17117, 1617, -1000, 17117, -1000, -1000, -1000, -1000,
	-1000, -1000, 5496, 2053, 1376, -1000, -1000, 580, -1000, 17117,
	-1000, -1000, -1000, 3329, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1093, 1092, -1000, -1000, 1609, 17117, -1000, -1000,
	-1000, 1282, 1277, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1608, -1000, -1000, -1000, -1000, 266, -400, 1345, 40293, 854,
	-1000, 1360, 1436, 249, 1606, 1084, 639, 639, 639, 852,
	851, 27225, 306, -1000, 266, -1000, -169, -170, 1107, -1000,
	-1000, 1947, -1000, -1000, 10558, -1000, -1000, 1607, 1696, -1000,
	348, -1000, 1107, 1107, 1240, -1000, 1107, 1107, 1271, 1265,
	-1000, -1000, 1350, -1000, 966, -1000, 198, 1240, 1706, -1000,
	-1000, 5496, -1000, 24255, -1000, 1990, 1979, 27819, 27819, 587,
	2038, -1000, 17117, 17117, 1791, 927, -1000, -1000, -1000, -1000,
	1069, 1062, -1000, 1057, -1000, 2079, -1000, 1040, -1000, 1606,
	-1000, 452, 1391, -1000, 1977, 1040, 40293, 1040, 14, 2031,
	-1000, 1107, -1000, 1606, 1606, 1606, 1606, 1606, 1606, 1606,
	1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606,
	1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606, 1606,
	1606, 1606, 1606, 1606, 1606, -1000, -1000, 40293, 1013, -1000,
	-1000, 1919, 1323, 56, -1000, 1317, -1000, -1000, 449, -1000,
	17117, -1000, 27225, 1055, 1027, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 301, 1417, -1000, 635, 40293, 40293, 1240,
	252, -154, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17117, -1000, 1240, 1705, -1000, -242, -1000, 1315, -1000,
	-1000, -1000, -1000, -1000, 1315, 1315, -1000, -1000, 1040, 1395,
	-1000, 887, -1000, -1000, -1000, -1000, -1000, 40293, 1391, 40293,
	-1000, 1312, 1240, 1606, 1977, -1000, 1293, -1000, 301, -1000,
	1603, 1635, -1000, -1000, -1000, 15335, -1000, -1000, -1000, -1000,
	-145, 10558, 7563, 1261, -1000, -1000, 1754, -142, -158, 1452,
	-1000, -334, -1000, -1000, 26631, -1000, -1000, -1000, -1000, -1000,
	1325, -1000, -1000, 23661, 39699, -1000, -131, 226, -145, 17117,
	1322, 1240, -1000, -30, -1000, -1000, -1000, -1000, -1000, 1623,
	-1000, 1749, -1000, 1240, -1000, -1000, -1000, 1258, -1000, 3690,
	-262, 1703, -1000, -99, -1000, -1000, -1000, 800, 1015, -1000,
	-1000, -1000, -1000, -1000, -1000, 872, 40293, -1000, 324, -1000,
	-1000, -146, -147, -1000, -1000, 39699, -257, 537, 5496, -1000,
	1701, 1619, 2059, -1000, -1000, -1000, -1000, -1000, -1000, -409,
	1254, 162, -1000, -156, -1000, -1000, 1928, 14, -1000, 2077,
	-1000, 2075, 582, 582, -1000, 844, -409, -1000, -161, -264,
	-1000, -1000, -1000, -1000, -1000, 304, 905, -1000, -1000, -1000,
	-1000, 5496, -1000, -1000, -1000, 196, 196, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2442, 2441, 26, 5, 2437, 2435, 2434, 47, 90,
	183, 23, 185, 95, 2432, 2431, 2429, 2428, 2427, 2426,
	2425, 223, 222, 220, 2419, 2418, 2417, 2416, 2415, 2414,
	2413, 2412, 2411, 2408, 211, 157, 178, 2405, 2404, 2403,
	108, 179, 83, 88, 182, 2402, 2401, 78, 2400, 2399,
	2398, 172, 171, 169, 704, 2397, 162, 106, 31, 2396,
	2395, 2394, 2391, 2390, 2389, 2388, 2387, 2386, 2385, 2384,
	2383, 2382, 2381, 2380, 2379, 2378, 198, 2377, 2376, 16,
	2375, 80, 2374, 2372, 2370, 2368, 124, 2367, 2365, 2362,
	2361, 2359, 2355, 2354, 136, 2353, 2352, 2349, 2348, 180,
	2347, 2346, 152, 101, 103, 2345, 2344, 96, 177, 2343,
	117, 2342, 2341, 2340, 151, 2337, 4837, 2336, 67, 66,
	2333, 61, 144, 63, 46, 24, 9, 2332, 2326, 55,
	86, 2324, 97, 74, 2323, 111, 100, 2321, 2314, 13,
	7, 2311, 1, 4, 2, 73, 2309, 2308, 122, 2307,
	2305, 2304, 98, 2303, 2301, 4430, 2300, 89, 129, 99,
	75, 2299, 33, 53, 2297, 2296, 2294, 2292, 2290, 37,
	2287, 2286, 2285, 139, 69, 163, 36, 52, 42, 131,
	2283, 43, 79, 2282, 135, 133, 2281, 44, 28, 41,
	2275, 39, 126, 110, 50, 94, 128, 2268, 2266, 58,
	77, 2264, 2260, 2259, 2258, 2257, 2254, 71, 2253, 40,
	2251, 184, 2250, 10, 2247, 38, 32, 2244, 68, 141,
	70, 22, 2240, 161, 2233, 45, 160, 120, 156, 2226,
	2225, 2222, 2221, 173, 264, 2219, 2217, 82, 164, 140,
	147, 84, 2216, 290, 2214, 2213, 93, 1492, 1739, 25,
	155, 2212, 2211, 3182, 138, 30, 20, 2209, 174, 2208,
	2201, 2200, 186, 168, 104, 937, 49, 2198, 2191, 14,
	2190, 2189, 2187, 2186, 2185, 2183, 92, 2182, 2181, 2180,
	188, 65, 17, 153, 76, 2178, 2177, 2176, 119, 105,
	2173, 154, 149, 123, 107, 2171, 167, 150, 165, 2167,
	548, 2166, 2164, 2163, 2162, 2160, 91, 2159, 2157, 2151,
	2147, 159, 148, 118, 85, 2144, 81, 115, 142, 158,
	35, 2142, 29, 2141, 2139, 2138, 181, 27, 2133, 12,
	60, 59, 21, 102, 143, 2127, 0, 2124, 15, 176,
	299, 146, 2123, 2122, 6, 8, 11, 2121, 2120, 2116,
	2115, 130, 2113, 2111, 2108, 2107, 19, 34, 18, 3,
	2106, 2104, 4407, 3123, 121, 2103, 187,
}

//line sql.y:6922
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 360, 361, 361, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 336, 336,
	336, 339, 339, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	364, 364, 150, 150, 148, 148, 149, 149, 218, 218,
	24, 25, 25, 228, 228, 227, 227, 227, 229, 229,
	229, 229, 265, 265, 26, 26, 26, 26, 26, 100,
	100, 338, 338, 337, 329, 329, 328, 328, 327, 335,
	335, 334, 334, 333, 38, 39, 48, 48, 48, 48,
	49, 50, 340, 340, 302, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 304, 304, 290, 290, 303, 303, 303, 303, 303,
	303, 303, 289, 289, 111, 111, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 355, 355, 355, 354, 354, 198, 198,
	198, 198, 198, 198, 198, 198, 120, 120, 129, 129,
	129, 129, 129, 118, 118, 119, 117, 117, 117, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 128, 128, 124, 124, 124, 125, 125, 125,
	126, 126, 356, 356, 356, 356, 269, 269, 269, 269,
	272, 272, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 271, 271, 271, 271, 271, 273, 273, 273, 273,
	273, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 275, 275, 275, 275,
	275, 275, 275, 275, 288, 288, 276, 276, 283, 283,
	284, 284, 284, 285, 285, 285, 286, 286, 281, 281,
	281, 281, 281, 281, 282, 282, 282, 291, 316, 316,
	315, 315, 313, 313, 313, 313, 313, 313, 313, 313,
	300, 300, 310, 310, 310, 310, 310, 299, 299, 295,
	295, 295, 296, 296, 297, 297, 294, 294, 298, 298,
	312, 312, 311, 311, 292, 292, 293, 293, 318, 357,
	357, 357, 357, 357, 358, 358, 319, 347, 349, 349,
	349, 348, 348, 345, 346, 344, 344, 344, 344, 344,
	81, 81, 81, 241, 241, 242, 242, 308, 308, 307,
	307, 307, 309, 309, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 236, 236, 236, 343, 343,
	343, 343, 343, 343, 342, 342, 342, 305, 305, 305,
	341, 341, 57, 57, 182, 182, 45, 45, 45, 45,
	45, 45, 44, 44, 44, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 46, 46, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 86, 86, 87, 87, 87, 87, 89, 89,
	89, 321, 321, 58, 58, 3, 3, 138, 140, 141,
	141, 139, 139, 139, 139, 139, 139, 60, 60, 59,
	59, 143, 142, 144, 144, 144, 1, 1, 2, 2,
	4, 4, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 287, 287, 287, 320, 320, 322,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 324,
	324, 324, 61, 61, 325, 277, 278, 279, 5, 6,
	301, 323, 96, 96, 28, 37, 37, 29, 29, 29,
	29, 30, 30, 62, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 235, 235, 244, 244, 234, 234,
	258, 258, 258, 237, 237, 237, 238, 238, 353, 353,
	353, 231, 231, 64, 64, 64, 66, 66, 67, 68,
	68, 260, 260, 261, 261, 69, 70, 82, 82, 82,
	82, 82, 82, 85, 85, 85, 15, 15, 15, 15,
	78, 78, 78, 14, 14, 65, 65, 72, 350, 350,
	351, 352, 352, 352, 352, 73, 75, 31, 31, 31,
	31, 31, 31, 106, 106, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 101, 101, 101,
	95, 95, 365, 76, 77, 77, 99, 99, 99, 92,
	92, 92, 98, 98, 98, 16, 16, 17, 217, 217,
	18, 18, 103, 103, 105, 105, 105, 105, 105, 107,
	107, 107, 107, 107, 107, 107, 102, 102, 104, 104,
	104, 104, 251, 251, 251, 250, 250, 132, 132, 134,
	133, 133, 135, 135, 136, 136, 136, 136, 180, 180,
	158, 158, 215, 215, 213, 213, 214, 214, 216, 216,
	216, 216, 219, 219, 137, 137, 137, 137, 145, 145,
	146, 146, 147, 147, 259, 259, 256, 256, 256, 255,
	255, 151, 151, 151, 153, 152, 152, 152, 152, 154,
	154, 156, 156, 155, 155, 157, 162, 162, 161, 161,
	159, 159, 159, 159, 160, 160, 160, 160, 163, 163,
	116, 116, 116, 116, 116, 116, 116, 127, 127, 127,
	127, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 83, 83,
	83, 232, 232, 164, 164, 172, 172, 172, 172, 165,
	165, 165, 165, 165, 165, 165, 173, 173, 173, 179,
	174, 174, 170, 170, 170, 170, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 267, 267, 332, 332, 331, 331,
	330, 330, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 366, 366, 280, 280, 280, 280, 171,
	171, 171, 171, 171, 97, 97, 97, 97, 97, 264,
	264, 264, 268, 268, 268, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	185, 185, 93, 93, 183, 183, 184, 186, 186, 181,
	181, 181, 167, 167, 167, 187, 187, 188, 188, 189,
	189, 191, 190, 190, 192, 193, 193, 193, 194, 194,
	195, 195, 195, 47, 47, 47, 47, 47, 42, 42,
	42, 42, 43, 43, 43, 108, 108, 108, 108, 110,
	110, 109, 109, 79, 79, 80, 80, 80, 114, 114,
	115, 115, 115, 112, 112, 113, 113, 211, 211, 196,
	196, 196, 203, 203, 203, 199, 199, 201, 201, 201,
	202, 202, 202, 200, 208, 208, 210, 210, 209, 209,
	205, 205, 206, 206, 207, 207, 207, 204, 204, 166,
	166, 166, 166, 166, 212, 212, 212, 212, 220, 220,
	176, 176, 178, 178, 177, 131, 221, 221, 225, 222,
	222, 226, 226, 226, 226, 226, 223, 223, 224, 224,
	252, 252, 252, 230, 230, 243, 243, 239, 239, 240,
	240, 233, 233, 245, 245, 245, 74, 175, 175, 317,
	317, 314, 248, 248, 249, 249, 253, 253, 257, 257,
	254, 254, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 362, 363, 262, 263, 263, 263,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 3, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 5, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 2,
	2, 2, 1, 1, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 1, 1, 3, 3, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 4, 3, 1, 3, 1, 7, 6,
	7, 7, 8, 8, 0, 1, 5, 2, 1, 1,
	1, 0, 1, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 1, 2, 0, 1, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 4, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 3, 3, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 3, 4, 4, 2, 11, 3, 6, 8,
	6, 6, 6, 13, 8, 6, 10, 5, 5, 5,
	5, 5, 0, 6, 5, 6, 4, 5, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 8, 4, 1,
	3, 3, 6, 7, 7, 8, 4, 0, 1, 0,
	1, 3, 3, 1, 1, 2, 1, 1, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 2, 2, 4,
	4, 3, 0, 1, 4, 3, 4, 4, 3, 3,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 3, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 3, 3, 3,
	5, 2, 3, 3, 2, 3, 4, 4, 4, 3,
	4, 4, 5, 3, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 1, 1, 2, 1, 3, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 1, 3, 4,
	3, 7, 0, 3, 1, 3, 1, 3, 1, 1,
	3, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 1, 1, 2,
	6, 5, 6, 6, 0, 2, 3, 3, 0, 2,
	3, 3, 3, 2, 3, 1, 6, 3, 4, 3,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 3,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 9,
	6, 6, 6, 2, 2, 3, 3, 3, 1, 1,
	1, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 8, 5, 4, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 6, 6, 6, 4, 4, 4, 7, 8,
	6, 5, 6, 8, 11, 7, 8, 8, 9, 4,
	4, 4, 4, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 4, 0, 2, 0, 2, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 3, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 0, 5, 5, 2, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 2, 1, 1,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 2, 2, 0, 3, 0, 2, 0,
	1, 3, 1, 3, 2, 0, 1, 1, 0, 1,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 1, 0, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -360, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 218, -49, -39, 219,
	-50, 221, 220, 257, 222, 250, 74, 299, 300, 302,
	303, 304, 305, -85, 255, 256, 224, 36, 45, 33,
	34, 37, 228, 263, 264, 227, -10, -34, 8, -362,
	11, 429, 252, 251, 28, -12, 463, 85, -361, 603,
	-211, -196, 22, 33, 29, -195, -191, -99, -196, 20,
	18, 7, -76, -365, -76, -76, 12, 13, -76, -302,
	-304, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -326, -44, -41, 223, 220, 267,
	119, 120, 257, 258, 259, 222, 241, 256, 260, 255,
	276, -40, 80, 33, 463, 466, -309, 219, 225, 226,
	430, 122, 121, 75, 221, -306, 353, 495, 573, -56,
	575, 101, 103, 574, 44, 231, 576, 577, 578, 502,
	579, 240, 580, 581, 582, 583, 589, 544, 590, 591,
	592, 123, 7, -76, -257, -253, -336, -247, 88, 89,
	90, 460, 243, 493, 494, 292, 80, 41, 350, 353,
	495, 573, 299, 313, 307, 334, 326, 461, 496, 295,
	244, 280, 570, 324, 131, 575, 298, 497, 258, 358,
	359, 498, 360, 101, 302, 396, 588, 297, 499, 586,
	103, 574, 79, 51, 44, 253, 322, 227, 318, 576,
	281, 500, 471, 274, 122, 119, 595, 36, 316, 50,
	30, 585, 121, 49, 577, 146, 501, 578, 502, 362,
	341, 564, 48, 363, 259, 503, 83, 264, 465, 572,
	364, 317, 365, 291, 584, 224, 504, 556, 366, 367,
	565, 505, 342, 346, 506, 388, 368, 602, 52, 507,
	508, 566, 120, 509, 78, 579, 311, 312, 510, 289,
	242, 390, 338, 442, 449, 450, 107, 108, 445, 109,
	451, 110, 452, 453, 454, 443, 111, 104, 444, 455,
	456, 339, 340, 112, 457, 106, 105, 446, 448, 113,
	458, 240, 35, 369, 462, 293, 58, 268, 391, 46,
	344, 599, 45, 560, 511, 563, 337, 333, 439, 53,
	512, 513, 514, 515, 580, 336, 310, 332, 594, 4,
	286, 581, 62, 226, 348, 347, 349, 275, 387, 329,
	516, 517, 518, 247, 81, 519, 319, 21, 520, 521,
	370, 282, 522, 56, 523, 524, 394, 256, 525, 54,
	582, 39, 526, 261, 596, 583, 527, 528, 529, 530,
	263, 531, 372, 532, 371, 343, 345, 270, 373, 464,
	533, 315, 260, 587, 534, 248, 571, 262, 267, 255,
	395, 249, 535, 536, 537, 538, 539, 296, 555, 540,
	541, 303, 589, 440, 43, 542, 543, 544, 545, 546,
	290, 285, 389, 398, 61, 82, 355, 547, 548, 569,
	309, 283, 549, 300, 55, 590, 591, 592, 277, 593,
	9, 600, 601, 375, 123, 287, 288, 47, 330, 269,
	550, 551, 320, 321, 335, 308, 331, 301, 557, 271,
	376, 441, 257, 552, 397, 284, 351, 356, 468, 276,
	377, 568, 467, 328, 325, 278, 553, 378, 232, 272,
	273, 554, 558, 379, 380, 294, 381, 382, 383, 384,
	385, 386, 279, 466, 306, 323, 357, 410, 411, 412,
	413, 414, 415, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 438, 230, -76, 230, -155,
	-253, 230, -223, 359, -244, 361, 374, 369, 379, 367,
	-235, 370, 372, 270, -353, 388, 230, 376, 218, 362,
	371, 380, 381, 294, 382, 386, 279, 383, 384, 385,
	-336, 172, 578, 593, 131, 327, 366, 364, 389, 560,
	-253, 301, -260, 306, -248, -336, -247, 304, -155, -82,
	556, 222, -262, -262, -101, 560, 562, -174, -116, 139,
	-127, -130, -121, -122, -168, -169, -170, -171, -128, -181,
	161, 162, 169, 140, -179, -131, 26, 459, 431, 430,
	172, 31, 214, 68, 69, 433, 434, 142, 57, 406,
	407, -129, 401, 408, 403, 436, 437, 114, 438, 104,
	106, 105, 439, 440, 441, 339, 340, 442, 443, 444,
	107, 108, 109, 110, 111, 112, 113, 445, 448, 446,
	447, 449, 450, 451, 456, 457, 452, 453, 454, 455,
	458, -248, -253, 235, 400, 229, 167, 429, -123, -119,
	-8, -177, 399, 404, 405, 409, 402, -336, -247, -125,
	-124, -164, 91, 97, 102, 98, -359, 115, -362, 92,
	93, 94, 95, 96, 116, 117, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 44, 375, 375,
	-155, -76, -76, -76, -76, -189, -99, -191, -10, -8,
	-362, 8, -76, -8, -9, -13, -34, -36, 489, -35,
	-253, -196, -211, 12, 157, 42, 50, -194, -195, -12,
	-8, -116, 19, 23, 24, -104, 163, -116, -253, -77,
	-104, -233, 234, -76, -76, -222, -265, 301, -226, 389,
	388, -249, -224, -248, -246, -223, 387, 223, 23, 469,
	138, 25, 27, 141, 172, 126, 19, 142, 37, 225,
	327, 241, 171, 237, 430, 218, 72, 470, 401, 403,
	399, 406, 432, 433, 400, 361, 31, 13, 472, 28,
	251, 24, 38, 165, 220, 145, 473, 254, 26, 252,
	114, 117, 475, 22, 75, 246, 14, 239, 40, 16,
	476, 477, 17, 235, 234, 157, 231, 70, 11, 214,
	29, 154, 66, 478, 133, 479, 480, 481, 482, 127,
	68, 155, 20, 597, 404, 405, 33, 561, 459, 265,
	167, 73, 59, 562, 139, 402, 483, 484, 115, 485,
	118, 76, 567, 135, 18, 71, 42, 486, 266, 487,
	236, 598, 488, 392, 489, 156, 221, 429, 69, 490,
	229, 374, 8, 435, 32, 250, 238, 125, 67, 491,
	230, 144, 436, 437, 233, 128, 116, 7, 132, 34,
	12, 74, 77, 407, 408, 409, 57, 124, 463, 143,
	15, 492, 393, 137, 131, -303, 155, -289, -293, -248,
	245, -319, 241, -155, -312, -311, -248, -362, -100, -243,
	231, 239, 238, 132, -340, 135, 287, 400, 229, -51,
	-52, -53, -223, 171, 577, -86, 262, 266, 86, 86,
	-293, -292, -291, -341, 266, 245, -318, -310, 237, 246,
	-299, 238, 239, -294, 231, 133, -341, -294, 236, 246,
	241, 245, 266, 266, 123, 266, 123, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 261, -300, 147, -300,
	467, 467, -306, -341, 241, -341, -341, 233, 35, 35,
	-245, -294, 233, 25, -300, -300, -300, -223, 171, -300,
	-300, -300, -300, 274, 274, -300, -300, -300, -300, -300,
	-300, -300, -300, -300, -300, -300, -300, -300, -300, -300,
	-300, -300, 230, -340, -108, 386, 294, 80, -54, 276,
	-37, -155, -243, 231, 232, -340, 263, -155, 215, -155,
	-237, 155, 15, -237, -234, 375, 373, 360, 365, -237,
	-237, -237, -237, 277, 358, -295, 231, 35, 242, 375,
	277, 358, 277, 278, 277, 278, 368, 378, 277, -258,
	14, 157, 400, 363, 367, 270, 230, 271, 232, 377,
	278, -258, 92, -238, 155, 375, 273, -237, -237, -263,
	-362, -249, 327, -336, 563, -263, -263, 32, 89, 233,
	-248, -78, -248, 92, -15, -11, -22, -21, -23, 147,
	-106, 375, -94, 172, 578, 564, 565, 566, 563, 372,
	571, 569, 567, 277, 568, 86, 135, 137, 138, 4,
	-116, 154, -165, 147, 148, 149, 150, 151, 152, 153,
	157, 139, 141, 155, 156, 136, 158, 159, 160, 161,
	162, 163, 164, 166, 165, 167, 168, 171, 216, 217,
	-122, -122, -122, -122, -179, -362, -362, -362, -122, -232,
	-362, -122, -362, -362, -362, -362, -185, -116, -362, -366,
	-362, -366, -366, -280, -362, -280, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, 215, -362, -362, -362, -362, -362, -280,
	-280, -280, -280, -280, 102, 97, 91, -181, 98, 92,
	-248, -253, -8, -9, -174, -262, -350, -351, -158, -155,
	-362, 294, -248, -248, 263, -194, -12, -8, -189, -195,
	-191, -8, -76, -92, -105, 63, 64, -107, 24, 38,
	67, 65, 23, -363, 87, -363, -211, -363, 86, -36,
	-215, 85, 61, 43, 92, 92, 86, 21, -190, -192,
	-116, 14, -251, 4, -250, 25, -248, 92, 215, 100,
	14, -156, 29, -155, -233, -233, 86, 301, -226, -265,
	-228, -227, 390, 392, 147, -252, -248, 92, 31, 87,
	86, -155, -269, -272, -274, -273, -275, -270, -271, 324,
	325, 172, 328, 330, 331, 332, 333, 334, 335, 336,
	337, 338, 341, 32, 253, 320, 321, 322, 323, 342,
	343, 344, 345, 346, 347, 348, 349, 307, 326, 461,
	308, 309, 310, 311, 312, 313, 315, 316, 317, 318,
	319, -339, -336, 85, 87, 86, -276, 85, -116, -108,
	230, -336, 231, 231, 231, -76, 429, -300, -300, -300,
	261, 19, -44, -41, -326, 18, -40, -41, 223, 119,
	120, 220, 85, -289, 85, -298, -339, -336, 85, 133,
	236, 132, -297, -294, -297, -298, -336, -181, -336, 133,
	133, -336, -336, -219, -248, -219, -219, 23, -219, 23,
	-219, 23, 94, -248, -219, 23, -219, 23, -219, 23,
	-219, 23, -219, 23, 31, 78, 79, 31, 81, 82,
	83, -181, -336, -181, -289, -223, -155, -336, 94, 94,
	94, -300, -300, 94, 92, 92, 92, -300, -300, 94,
	92, -255, -253, 92, 92, -342, 247, 291, 293, 94,
	94, 94, 94, 31, 92, -343, 31, 585, 584, 586,
	587, 588, 92, 94, 31, 94, 31, 94, -248, 85,
	-155, -114, 281, 218, 220, 223, 76, 92, 295, 147,
	44, 86, 233, 230, -336, -239, 235, -239, -248, -254,
	-253, -246, 92, -116, -296, 14, 157, -258, -258, -237,
	-155, -296, -258, -237, -155, -237, -237, -237, -237, -258,
	-258, -258, -237, -253, -253, -155, -155, -155, -155, -155,
	-155, -155, -263, -238, -237, 563, 92, -231, 14, 76,
	-263, -263, -261, 304, 338, 557, 558, 559, 86, 463,
	-148, -155, 563, 563, 563, 563, 563, 563, -116, -116,
	-116, -116, 485, -172, 115, 139, 116, 117, -130, -173,
	-177, -179, 99, 157, 141, 155, 156, -121, -122, -121,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -264, -336, 92, 172, -126, -125, 98, -359,
	-126, -102, -104, -116, -116, -336, -248, -102, -102, -116,
	-98, 24, 38, -183, -184, 143, -181, -363, -363, 94,
	98, -248, -248, -91, -90, 411, 412, 413, 414, 416,
	417, 418, 421, 422, 426, 427, 410, 428, 415, 420,
	423, 424, 425, 419, 323, -116, -116, -116, -116, -116,
	-116, -83, -116, 126, 127, 128, -116, -116, -175, -174,
	-335, -334, -333, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -103, 24, 38, -102,
	-249, -254, -246, -102, -103, -103, -102, -102, 215, -211,
	-363, 86, -352, 392, 393, 561, -256, 266, -255, 25,
	-175, 92, 14, -217, 77, -248, -194, -194, 63, 64,
	59, -102, -107, -363, -35, 25, -213, -248, 62, 92,
	-281, -223, 350, 351, -116, -116, 86, -193, 27, 28,
	-155, -250, 163, -254, -155, -218, 266, -155, -133, -135,
	-136, -137, -158, -180, -362, -138, 481, 478, 14, -148,
	-149, -157, -253, -226, -228, 86, 391, 393, 394, 76,
	118, -116, -282, 171, -308, -307, -306, -289, -291, -292,
	-293, 87, -282, -285, 356, 355, -276, -276, -276, -276,
	-276, -281, -281, -281, -281, 85, 85, -276, -276, -276,
	-276, -283, 85, -283, -283, -284, 85, -284, -319, -116,
	-316, -315, -313, -314, 240, 101, 554, 510, 463, 502,
	544, 77, -311, -193, 94, -363, -114, -240, 235, -317,
	-314, -336, -336, -336, -240, -336, 92, -336, 92, -336,
	92, -87, -58, -1, 597, 598, 599, 86, 19, -290,
	-289, -57, 291, -322, -323, 266, -318, -312, -298, 133,
	-297, -298, -298, -336, 86, 29, 123, 123, 123, 123,
	463, 220, 32, -241, 501, 139, -289, -57, -264, 233,
	-264, -264, 92, 92, -236, 593, -148, -110, 283, 147,
	272, 272, 230, 230, 285, -155, 296, 298, 297, 295,
	23, 284, 286, 288, 274, -155, -155, -239, 76, -150,
	-155, 26, -253, -155, -237, -237, -155, -237, -237, -155,
	-248, -94, 392, 86, 463, 22, -95, 22, -362, 115,
	116, 117, -173, -121, -122, -121, 138, 254, 86, -363,
	25, 86, 77, -363, -363, -363, 86, 14, -102, -186,
	-184, 145, -116, -363, -363, -363, 86, 86, 14, -268,
	25, -363, -363, -363, -363, -363, -185, -363, 14, 86,
	86, -363, -363, 86, 86, -363, 86, 86, 86, -332,
	86, 86, 86, 86, -363, -363, -363, -363, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, -363, -363,
	-102, -102, -362, 215, -363, -363, -363, -363, -363, -249,
	-351, 560, 393, -162, -161, -159, 74, 234, 75, -362,
	-255, -363, -126, 89, -214, 89, -213, -167, -248, 94,
	98, -196, -132, -134, 14, -107, -179, 87, 86, -281,
	-200, -205, -234, -248, 92, 172, -192, 215, -163, 15,
	-166, 32, 57, -11, -362, -362, 32, 86, -151, -153,
	-152, -154, 66, 70, 72, 67, 68, 69, 73, -259,
	25, -133, -9, -8, -362, -362, -362, -155, -148, -364,
	14, 77, -364, 86, 215, -227, -229, 395, 392, 398,
	-336, 92, -86, 86, -306, -293, -197, -111, 40, -286,
	357, -281, -281, -288, 92, -288, 94, 94, 87, -47,
	-42, -43, 33, 80, -313, -300, 92, 39, -300, -300,
	-248, 87, -193, -110, -155, 139, 76, -317, -317, -317,
	-253, -2, 596, 602, 133, 85, 360, 18, -213, 86,
	87, -182, 292, 87, -88, -248, 87, 85, -298, -298,
	-248, -362, 230, 31, 31, 501, -57, -182, -282, -336,
	595, 594, 87, 232, 290, -115, 406, -112, 92, 88,
	-155, -155, -155, -155, -155, 223, 220, 275, 233, -148,
	-155, 86, -81, 249, 244, -258, -258, 33, -155, 392,
	572, 570, -116, 138, 254, -130, -122, -104, 460, -266,
	172, 324, 253, 322, 318, 338, 329, 355, 320, 356,
	317, 316, 315, -266, -264, -116, -116, -189, 146, -116,
	144, -116, -116, -116, -363, 172, 324, 14, -116, -116,
	-116, -333, -116, -116, -116, -331, -330, -126, -181, -363,
	-331, -116, -116, -330, -330, -334, -334, -334, -334, -334,
	-174, -174, -174, -174, -363, -363, -103, -249, -159, -294,
	-294, -294, -219, 86, -230, 22, 14, 57, 57, -132,
	-163, -133, -107, -248, -203, 556, -208, 46, -206, -207,
	47, -204, 48, 56, 163, -194, -116, -220, 76, -221,
	-225, -181, -176, -178, -177, -362, -212, -363, -248, -219,
	-221, -135, -136, -136, -135, -136, 66, 66, 66, 71,
	66, 71, 66, -152, -253, -363, -363, -9, -9, -116,
	-256, 77, -133, -133, -157, -253, 163, 392, 396, 397,
	-306, -358, 115, 139, 31, 76, 353, 101, -356, 171,
	498, 549, 554, 510, 502, 544, -357, 236, 132, 133,
	248, 25, 41, 87, 86, 87, 86, 87, 86, -242,
	-241, -43, -42, -300, -300, 94, -336, 92, 92, 232,
	26, -155, 76, 76, 76, -89, 600, 94, 85, -3,
	80, -116, 85, 19, -289, -181, -324, -277, -325, -278,
	-279, -5, -6, -301, 57, 101, -61, 44, 231, 580,
	581, 123, 593, -316, -213, -320, -322, -155, -118, -362,
	-117, -119, -123, 161, 162, -182, -155, -109, 281, 289,
	85, -113, 89, -338, 77, 272, 353, 272, -155, -81,
	-47, -155, -237, -237, 33, -336, -363, -130, -122, -362,
	-363, -276, -276, -276, -284, -276, 312, -276, 312, -276,
	-363, -363, 86, -363, 22, -363, -93, 435, -116, 86,
	86, -363, 85, 85, -116, -363, -363, -363, -332, 86,
	-363, 86, -363, 86, -267, 555, -363, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, -363, -160, 22, -160,
	-160, -363, 89, -155, -163, -187, 16, -200, 51, 330,
	-210, -209, 55, 47, -207, 19, 49, 19, 30, -220,
	86, 147, 86, -363, -363, 86, 57, 215, -363, -163,
	-146, -145, 76, 77, -147, 76, -145, 66, 66, -215,
	-363, -363, 86, -218, -133, -163, -163, 215, 115, -362,
	-120, -129, -118, 12, 92, 92, -336, -355, 584, 585,
	31, 94, -300, -300, 133, 133, -155, 85, -281, 92,
	-281, 94, 94, 31, 81, 82, 83, 31, 78, 79,
	-155, -155, -155, -155, -321, 85, 19, -116, 85, 147,
	87, -213, -213, 268, 157, -300, 578, 274, 274, -300,
	-300, -300, 87, -363, 86, -287, 463, 466, -116, -124,
	-124, -215, 87, -329, 463, -337, -248, -248, -248, -248,
	-121, -281, -116, -116, -194, 92, -116, -116, 94, 94,
	-363, -363, -331, -330, -116, -363, -143, -142, -144, 564,
	115, 31, -266, -362, 66, 18, 16, -362, -362, -256,
	-187, -188, 17, 19, -201, 53, -199, 52, -199, -209,
	19, 19, 92, 19, 92, 133, -225, -116, -178, 57,
	-11, -248, -176, -248, -189, -116, 85, -116, -126, -163,
	-163, -116, -169, 438, 104, 106, 105, 439, 440, 441,
	339, 340, 442, 443, 444, 107, 108, 109, 110, 111,
	112, 113, 445, 448, 446, 449, 450, 451, 456, 457,
	452, 453, 454, 455, 458, 92, 92, 85, -116, 87,
	87, -215, -320, -58, 87, -213, 94, 87, 269, -177,
	-362, 92, -300, -300, -300, 94, 94, -255, -357, -322,
	467, 467, -363, 25, -328, -327, -249, 85, 77, -97,
	157, 463, -363, -363, -363, -363, -363, 87, 87, -363,
	-363, 86, -363, -142, -144, -363, 76, -126, -216, -363,
	-248, 236, 19, 19, -216, -216, -162, -188, -116, -174,
	-202, 54, 76, 118, 92, 92, 92, 12, -176, 215,
	-194, -213, -140, 360, -189, -363, -213, 87, 25, 87,
	602, 133, 87, -177, -96, -362, 265, -255, 92, 92,
	-11, 86, 147, -213, -155, -363, 461, 73, 464, -116,
	-363, 76, 473, 564, 86, -363, -363, -363, 76, 118,
	-221, -248, 87, -363, -362, -194, 87, -198, -11, 85,
	-3, 265, -79, 463, -327, -305, -249, 92, 94, 87,
	62, 462, 465, -332, -248, 236, -256, -141, -139, -248,
	516, -348, -347, 459, -358, -354, 115, 139, 101, -356,
	554, 510, 124, 125, -79, -116, 85, -363, -80, 280,
	560, -338, 62, -363, -363, 86, 22, -269, -60, 527,
	-345, -346, 76, -349, 366, 526, 547, 115, 92, 87,
	-213, 241, -329, 463, -139, 523, -282, -126, -346, 76,
	-345, 76, 13, 12, -4, 601, 87, 282, 464, -59,
	26, -140, -344, 249, 244, 247, 32, -344, 94, -4,
	465, 527, 243, 31, 115, -126, -143, -142, -142,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 792,
	792, 792, 0, 792, 0, 0, 792, -2, -2, 792,
	1278, 0, 792, 0, 0, -2, 724, 726, 0, 728,
	-2, 0, 0, 737, 1776, 1776, 787, 0, 0, 0,
	0, 0, 792, 792, 792, 792, 1139, 48, 792, 0,
	83, 84, 743, 744, 745, 63, 0, 1774, 1, 3,
	69, 73, 0, 0, 0, 56, 1148, 0, 76, 0,
	0, 796, 0, 794, 0, 1261, 792, 792, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 552, 489, 535, 487, 521, -2, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 370, 370, 0, 0, -2, 480, 480, 480,
	0, 0, 0, 518, 1263, 432, 370, 370, 370, 0,
	370, 370, 370, 370, 0, 0, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 1165, 153, 1279, 1276, 1277, 38, 39,
	40, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 0, 1255, 0, 652,
	893, 0, 713, 713, 0, 713, 713, 713, 713, 0,
	0, 0, 664, 0, 0, 0, 0, 710, 0, 680,
	681, 0, 710, 0, 716, 0, 691, 713, 713, 694,
	1777, 0, 1777, 1777, 1246, 0, 707, 705, 719, 720,
	723, 727, 0, 732, 735, 1272, 1273, 0, 750, 47,
	1515, 742, 755, 756, 0, 788, 789, 43, 990, 0,
	915, 920, 931, 944, 945, 946, 947, 948, 950, 951,
	0, 0, 0, 0, 956, 957, 0, 0, 0, 0,
	0, 971, 0, 0, 0, 0, 0, 1120, 0, 1083,
	1083, 1007, 1083, 1085, 1085, 0, 0, 0, 1773, 1555,
	1563, 1564, 1586, 1671, 1719, 1559, 1560, 1541, 1553, 1556,
	1544, 1545, 1547, 1549, 1554, 1561, 1567, 1546, 1566, 1565,
	0, 1542, 1543, 1548, 1558, 1562, 1550, 1551, 1552, 1557,
	1568, 1129, 0, 0, 0, 0, 0, 0, 272, 273,
	989, 1235, 1085, 1085, 1085, 1085, 1085, -2, -2, 219,
	220, 221, 222, 223, 224, 225, 0, 215, 0, 277,
	278, 274, 275, 276, 973, 974, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 1776, 0, 765,
	0, 0, 0, 0, 0, 1148, 0, 1140, 1139, 61,
	0, 792, -2, 0, 0, 0, 0, 45, 0, 50,
	852, 75, 74, 1187, 0, 0, 0, 57, 1149, 65,
	67, 1150, 0, 797, 798, 0, 828, 832, 0, 793,
	0, 0, 1262, 1261, 1261, 100, 0, 1715, 1239, -2,
	-2, 0, 0, 1274, 1275, 1248, -2, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, -2, 0, 0, 165, 166, 0,
	41, 397, 0, 161, 0, 390, 336, 0, 1165, 0,
	0, 0, 0, 0, 792, 0, 1256, 142, 143, 150,
	151, 152, 370, 370, 370, 532, 0, 0, 153, 153,
	496, 497, 498, 0, 0, -2, 395, 0, 481, 0,
	0, 384, 384, 388, 386, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 0, 511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 371, 0,
	530, 531, 433, 0, 0, 0, 0, 0, 508, 509,
	0, 0, 1264, 1265, 0, 0, 0, 370, 370, 0,
	0, 0, 0, 370, 370, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1178, 0, 0, 0, -2, 0,
	644, 0, 0, 0, 1257, 1257, 0, 651, 0, 653,
	654, 0, 0, 655, 0, 710, 710, 708, 709, 657,
	658, 659, 660, 713, 0, 0, 379, 380, 381, 710,
	713, 0, 713, 713, 713, 713, 710, 710, 710, 713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	716, 713, 0, 687, 0, 688, 689, 692, 693, 695,
	1778, 1779, 1295, 1777, 1777, 699, 703, 1247, 725, 733,
	736, 753, 751, 752, 754, 746, 747, 748, 749, 0,
	767, 768, 773, 0, 0, 0, 0, 779, 780, 781,
	0, 0, 784, 785, 786, 0, 0, 0, 0, 0,
	913, 0, 0, 979, 980, 981, 982, 983, 984, 985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	952, 953, 954, 955, 958, 0, 0, 0, 963, 964,
	0, 0, 0, 0, 0, 802, 0, 1121, 0, 1005,
	0, 1006, 1008, 1009, 0, 1010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 0, 812, 812, 0, 0, 208,
	209, 210, 211, 212, 226, 227, 228, 229, 230, 279,
	1129, 0, 989, 0, 0, 44, 757, 758, 0, 876,
	1267, 0, 0, 808, 0, 55, 64, 66, 1148, 59,
	1148, 0, 814, 0, 0, -2, -2, 815, 821, 822,
	823, 824, 825, 52, 1775, 53, 0, 72, 0, 46,
	0, 0, 0, 0, 348, 1190, 0, 0, 1141, 1142,
	1145, 0, 829, 1597, 833, 0, 835, 836, 0, 795,
	0, 98, 0, 892, 0, 0, 0, 1715, 1245, 0,
	102, 103, 0, 0, 0, 354, 1250, 1251, 1252, -2,
	377, 0, 354, 343, 287, 288, 289, 336, 291, 336,
	336, 336, 336, 348, 348, 348, 348, 319, 320, 321,
	322, 323, 0, 0, 306, 336, 336, 336, 336, 326,
	327, 328, 329, 330, 331, 332, 333, 292, 293, 294,
	295, 296, 297, 298, 299, 300, 338, 338, 338, 340,
	340, 0, 42, 0, 358, 0, 1145, 0, 0, 1178,
	1259, 1269, 0, 0, 0, 1259, 120, 0, 0, 0,
	533, 563, 490, 522, 534, 0, 493, 494, -2, 0,
	0, 480, 0, 482, 0, 378, 0, -2, 0, 388,
	0, 384, 388, 385, 388, 376, 389, 512, 513, 514,
	0, 516, 517, 593, 862, 0, 0, 0, 0, 0,
	599, 600, 601, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 523, 524, 525, 526, 527, 528,
	529, 0, 0, 0, 482, 0, 519, 0, 434, 435,
	436, 0, 0, 439, 440, 441, 442, 0, 0, 445,
	446, 447, 879, 880, 448, 449, 474, 475, 476, 450,
	451, 452, 453, 454, 455, 456, 468, 469, 470, 471,
	472, 473, 457, 458, 459, 460, 461, 462, 465, 0,
	135, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1257, 0, 0, 0, 0, 811, 894,
	1280, 1281, 714, 715, 0, 382, 383, 713, 713, 661,
	700, 0, 713, 665, 701, 666, 668, 667, 669, 682,
	683, 713, 672, 711, 712, 673, 674, 675, 676, 677,
	678, 679, 696, 684, 685, 686, 717, 0, 721, 722,
	697, 698, 0, 734, 738, 739, 740, 741, 0, 0,
	770, 94, 775, 776, 777, 778, 790, 783, 991, 910,
	911, 912, 0, 914, 917, 0, 975, 977, 919, 921,
	986, 987, 988, 0, 0, 0, 0, 0, 925, 929,
	932, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 949, 1099, 1100, 1101, 966, 280, 281, 0,
	967, 0, 826, 0, 0, 0, 965, 0, 0, 0,
	0, 803, 804, 1127, 1124, 0, 0, 1084, 1086, 0,
	0, 0, 0, 0, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1102, 0, 0, 0, 0,
	0, 1120, 0, 968, 969, 970, 0, 0, 0, 1268,
	0, 130, 131, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 813,
	1130, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	1234, 0, 760, 761, 763, 0, 896, 0, 877, 0,
	0, 766, 0, 807, 0, 810, 58, 60, 819, 820,
	0, 837, 816, 54, 49, 0, 0, 854, 1188, 348,
	1210, 0, 352, 353, 1151, 1152, 0, 1144, 1146, 1147,
	77, 834, 830, 0, 908, 0, 0, 891, 0, 840,
	842, 843, 844, 874, 0, 847, 0, 0, 0, 0,
	0, 96, 893, 1240, 101, 0, 0, 106, 107, 1241,
	1242, 1243, 1244, 0, 552, -2, 429, 167, 169, 170,
	171, 162, -2, 346, 344, 345, 290, 348, 348, 313,
	314, 315, 316, 317, 318, 0, 0, 307, 308, 309,
	310, 301, 0, 302, 303, 304, 0, 305, 396, 0,
	1153, 359, 360, 362, 370, 0, 365, 366, 0, 370,
	370, 0, 391, 392, 0, 1145, 1169, 0, 0, 0,
	1270, 1269, 1269, 1269, 0, 155, 156, 157, 158, 159,
	160, 588, 0, 0, 564, 586, 587, 153, 0, 0,
	163, 484, 483, 0, 620, 0, 394, 0, 0, 388,
	388, 373, 374, 515, 0, 0, 595, 596, 597, 598,
	0, 0, 0, 504, 423, 0, 482, 484, 354, 0,
	437, 438, 443, 444, 463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 548, 549, 550,
	551, 1166, 1167, 1168, 0, 0, 645, 0, 0, 420,
	92, 1258, 650, 710, 671, 702, 710, 663, 670, 690,
	730, 774, 0, 0, 0, 0, 782, 0, 0, 918,
	976, 978, 922, 0, 926, 930, 0, 0, 0, 0,
	0, 0, 0, 972, 996, 997, 0, 0, 1139, 0,
	1125, 0, 0, 1004, 1087, 1088, 0, 0, 0, 0,
	0, 1015, 1016, 1017, 1018, 1019, 0, 1021, 0, 0,
	0, 1025, 1026, 0, 0, 1027, 0, 0, 0, 0,
	0, 0, 0, 0, 1039, 1040, 1041, 1042, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1053, 992,
	0, 0, 812, 0, 1089, 1090, 1091, 1092, 1093, 1130,
	759, 762, 764, 850, 897, 898, 0, 0, 0, 0,
	878, 1266, 805, 806, 809, -2, 0, 0, 1132, 0,
	0, 837, 908, 838, 0, 817, 51, 853, 0, 1192,
	1191, 1204, 1217, 349, 350, 351, 1143, 0, 1148, 0,
	1228, 0, 0, 1220, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 0, 884, 0, 0, 0, 0,
	875, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	90, 91, 0, 0, 0, 104, 105, 0, 0, 111,
	355, 356, 144, 153, 431, 168, 404, 0, 0, 286,
	347, 311, 312, 0, 334, 0, 0, 0, 425, 116,
	1157, 1156, 370, 370, 361, 0, 364, 0, 0, 0,
	1271, 337, 393, 0, 134, 0, 0, 0, 0, 0,
	140, 558, 0, 0, 565, 0, 0, 0, 488, 0,
	499, 500, 0, 592, -2, 641, 358, 0, 372, 375,
	863, 0, 0, 501, 0, 424, 484, 506, 507, 520,
	466, 467, 464, 0, 0, 1179, 1180, 1185, 1183, 1184,
	121, 540, 542, 541, 545, 0, 0, 538, 0, 420,
	1153, 0, 649, 421, 422, 713, 713, 769, 95, 0,
	772, 0, 0, 0, 0, 923, 927, 827, 0, 0,
	336, 336, 1107, 336, 340, 1110, 336, 1112, 336, 1115,
	336, 1118, 1119, 0, 0, 0, 0, 1122, 1003, 1128,
	0, 0, 0, 0, 1014, 0, 0, 0, 0, 0,
	0, 132, 133, 1056, 0, 0, 1058, 1060, 1061, 1031,
	1057, 0, 0, 1054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 993, 994, 0, 1131, 899, 904,
	904, 904, 0, 0, 0, 1253, 1254, 1133, 1134, 908,
	1135, 839, 818, 855, 1210, 0, 1203, 0, -2, 1212,
	0, 0, 0, 1218, 831, 78, 909, 81, 0, 1228,
	1236, 0, 1219, 1230, 1232, 0, 0, 0, 1224, 0,
	908, 841, 870, 872, 0, 867, 882, 883, 885, 0,
	887, 0, 889, 890, 852, 846, 848, 0, 0, 0,
	98, 0, 908, 908, 97, 0, 895, 108, 109, 110,
	430, 172, 177, 0, 0, 0, 182, 0, 184, 0,
	0, 0, 189, 190, 370, 370, 405, 0, 283, 285,
	0, 0, 175, 348, 0, 348, 0, 341, 0, 406,
	426, 1154, 1155, 0, 0, 363, 367, 368, 369, 0,
	1260, 136, 0, 0, 0, 561, 0, 589, 0, 0,
	0, 0, 0, 0, 164, 485, 621, 622, 623, 624,
	625, 626, 627, 628, 0, 370, 0, 0, 0, 370,
	370, 370, 633, 357, 0, 0, 617, 614, 502, 0,
	213, 214, 216, 0, 0, 505, 852, 1170, 1171, 1172,
	0, 1182, 1186, 124, 0, 0, 0, 0, 646, 647,
	648, 93, 656, 662, 771, 791, 916, 924, 928, 0,
	960, 1105, 348, 1108, 1109, 1111, 1113, 1114, 1116, 1117,
	961, 962, 0, 999, 0, 1001, 1148, 0, 1126, 0,
	0, 1013, 0, 0, 0, 1022, 1023, 1024, 0, 0,
	1030, 0, 1032, 0, 0, 0, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 995, 0, 0, 0,
	0, 876, -2, 62, 1135, 1137, 0, 1197, 1195, 1195,
	1205, 1206, 0, 0, 1213, 0, 0, 0, 0, 82,
	0, 0, 0, 1233, 0, 0, 0, 0, 99, 1139,
	864, 871, 0, 0, 865, 0, 866, 886, 888, 845,
	-2, 849, 0, 908, 908, 88, 89, 0, 178, 0,
	180, 206, 207, 0, 183, 185, 186, 187, 193, 194,
	195, 188, 0, 0, 282, 284, 0, 0, 324, 335,
	325, 0, 0, 1158, 1159, 1160, 1161, 1162, 1163, 1164,
	852, 137, 138, 139, 553, 0, 563, 0, 0, 0,
	556, 0, 491, 0, 0, 0, 370, 370, 370, 0,
	0, 0, 0, 594, 0, 602, 0, 0, 0, 217,
	218, 0, 1181, 539, 0, 122, 123, 0, 0, 544,
	1094, 1106, 0, 0, 0, 1123, 0, 0, 0, 0,
	1020, 1028, 0, 1059, 0, 1035, 0, 0, 0, 583,
	584, 0, 1055, 0, 905, 0, 0, 0, 0, 896,
	1137, 80, 0, 0, 1200, 0, 1193, 1196, 1194, 1207,
	0, 0, 1214, 0, 1216, 0, 1237, 1238, 1231, 0,
	1223, 1226, 1222, 1225, 1148, 868, 0, 873, 0, 1139,
	87, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 0, 0, 339,
	342, 0, 0, 0, 554, 0, 566, 557, 0, 631,
	0, 635, 0, 0, 0, 638, 639, 640, 398, 618,
	615, 616, 503, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 998, 1000, 1002, 1011, 1012, 1103, 1104, 1029,
	1033, 0, 1036, 0, 0, 1037, 0, 585, 0, 901,
	858, 859, 906, 907, 0, 0, 851, 79, 1138, 1136,
	1189, 0, 1198, 1199, 1208, 1209, 1215, 0, 1221, 0,
	85, 0, 0, 0, 1148, 179, 0, 198, 0, 562,
	0, 565, 555, 629, 630, 0, 642, 634, 636, 637,
	1173, 0, 0, 0, 546, 959, 0, 0, 0, 1056,
	1038, 0, 581, 582, 0, 900, 902, 903, 1201, 1202,
	1229, 1227, 869, 876, 0, 86, 411, 404, 1173, 0,
	0, 0, 536, 1175, 127, 128, 477, 478, 479, 121,
	1095, 0, 1098, 0, 860, 861, 567, 0, 569, 0,
	-2, 399, 412, 0, 173, 199, 200, 0, 0, 203,
	204, 205, 196, 197, 117, 0, 0, 643, 0, 1176,
	1177, 124, 1096, 1034, 568, 0, 0, 354, 0, 578,
	400, 401, 0, 407, 408, 409, 410, 201, 202, 590,
	0, 0, 543, 0, 570, 571, 579, 0, 402, 0,
	403, 0, 0, 0, 559, 0, 590, 1174, 0, 0,
	580, 576, 413, 415, 416, 0, 0, 414, 591, 560,
	1097, 0, 417, 418, 419, 572, 573, 574, 575,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 215, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 603,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:521
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:531
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:567
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:596
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:602
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:608
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:612
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:621
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:631
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:637
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:711
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:790
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:796
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:816
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:828
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:840
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:844
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:873
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:874
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:878
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:882
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:888
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:898
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:911
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:933
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:937
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:947
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:951
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:969
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:975
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:979
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1042
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1047
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1053
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1064
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1073
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1079
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1095
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1102
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1109
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1114
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1119
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1124
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1131
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1138
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1149
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1160
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1166
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1170
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1174
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1206
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1212
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1216
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1222
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1226
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1232
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1236
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1242
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1252
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1257
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1266
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1290
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1299
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1308
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1342
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1357
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1380
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1391
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1397
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1401
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1407
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1411
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1415
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1421
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1425
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1434
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1475
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1482
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1486
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1490
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1494
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1509
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1516
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1520
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1530
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf8mb4Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1748
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1752
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1756
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1766
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1770
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1776
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1780
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1787
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1791
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1795
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1799
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1816
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2030
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2039
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2047
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2057
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2073
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2078
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2129
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2138
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2144
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2154
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2158
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2163
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2167
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2171
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2175
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2179
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2183
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2189
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2199
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2203
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2207
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2211
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2215
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2224
		{
			yyVAL.str = yyDollar[2].str
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = "key"
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = yyDollar[1].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2283
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2293
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2297
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2303
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2307
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2313
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2317
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2323
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2329
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2333
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2337
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2341
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2345
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2354
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2360
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2366
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2372
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2376
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2380
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2385
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2389
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2395
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2401
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2407
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2411
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2415
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2419
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2423
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2442
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2446
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2451
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2455
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2460
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2464
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2470
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2484
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2494
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2498
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2502
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2506
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2510
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2514
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2518
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2522
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2526
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2530
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2534
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2538
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2542
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2546
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2550
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2554
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2558
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2562
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2566
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2570
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2574
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2578
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2619
		{
			yyVAL.str = ""
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2627
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = ""
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2665
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2669
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2674
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2678
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2687
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2691
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2695
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2699
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 491:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2703
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2709
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2723
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2727
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2731
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2735
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2739
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2743
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2747
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2751
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2755
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2759
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2763
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2767
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2771
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2775
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2779
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2783
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2787
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2791
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2795
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2799
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2803
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2807
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2811
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2815
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2819
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2823
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2829
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2833
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2839
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2871
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2877
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2884
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2891
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2898
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2904
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2914
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2921
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2928
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2940
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2950
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2954
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2958
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2971
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2981
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2985
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2996
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3003
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3010
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3017
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3024
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3035
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3044
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3052
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3061
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3068
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3076
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3080
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3089
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3104
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3109
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3113
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3118
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3122
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3128
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3134
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3140
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3144
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3150
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3154
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3160
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3166
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3172
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3178
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3184
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3188
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3202
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3208
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3214
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3218
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3222
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3228
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3232
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3237
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3241
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3246
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3250
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3256
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3260
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3264
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3268
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3272
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3276
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3280
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3284
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3288
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3292
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3296
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3300
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3304
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3308
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3312
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3316
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3320
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3324
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3328
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3332
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3336
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3340
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3345
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3360
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3370
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3375
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3379
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3384
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3389
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3394
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3399
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3404
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3410
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3416
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3423
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3430
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3437
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3449
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3455
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3461
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3467
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3473
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3479
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3485
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3497
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3503
		{
			yyVAL.str = ""
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = ""
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3513
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3519
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3523
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 647:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3529
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3533
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3583
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3587
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3595
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3603
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3615
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3619
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3667
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3671
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3683
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3687
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3691
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3695
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3699
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3719
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3723
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = "extended "
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3782
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3786
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3802
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3810
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3820
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3824
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3834
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3840
		{
			yyVAL.empty = struct{}{}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.empty = struct{}{}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.empty = struct{}{}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3878
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3894
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3903
		{
			yyVAL.empty = struct{}{}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.empty = struct{}{}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3908
		{
			yyVAL.empty = struct{}{}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3910
		{
			yyVAL.empty = struct{}{}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3926
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3930
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3934
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3938
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3942
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3946
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.str = yyDollar[1].str
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = yyDollar[1].str
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = yyDollar[1].str
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3983
		{
			yyVAL.str = ""
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4023
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4027
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4033
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4039
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4043
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4047
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4051
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4063
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4105
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4109
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4117
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4133
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4137
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4154
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4158
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4162
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4167
		{
			yyVAL.str = ""
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4171
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			setAllowComments(yylex, true)
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4186
		{
			yyVAL.strs = nil
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4190
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = SQLCacheStr
		}
	case 802:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4230
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4252
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4261
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4267
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4271
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4280
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.strs = nil
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4293
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4297
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4301
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = SQLCacheStr
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = DistinctStr
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = DistinctStr
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.str = StraightJoinHint
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4337
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4347
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4351
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4355
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4359
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4364
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4368
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4372
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4384
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4388
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4394
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4400
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4404
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4414
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4418
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4422
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4426
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4432
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4436
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4442
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4446
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4451
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4455
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4461
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4471
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4475
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4481
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4485
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4489
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4493
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4499
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4503
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4516
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4520
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4524
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4528
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4534
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4536
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4540
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4546
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4548
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4551
		{
			yyVAL.empty = struct{}{}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.empty = struct{}{}
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4556
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4560
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4564
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4577
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4581
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4585
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4591
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4597
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4601
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4605
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4609
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4615
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4619
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4629
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4643
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4649
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4658
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4664
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4668
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4674
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4678
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4682
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4686
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4691
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4695
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4699
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4703
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4720
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4732
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4736
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4751
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4755
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4769
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4773
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4777
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4781
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4785
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4789
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4793
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4797
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4801
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4815
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4819
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4823
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4839
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4843
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4869
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4881
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4885
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4889
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4893
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4897
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4971
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4975
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4979
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4985
		{
			yyVAL.str = ""
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4989
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4995
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4999
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5006
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5010
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5014
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5018
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5024
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5028
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5032
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5036
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5040
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5044
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5048
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5054
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5058
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5062
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5069
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5075
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5079
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5111
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5177
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5358
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5367
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5373
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5377
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5393
		{
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5395
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5399
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5403
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5407
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5411
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5415
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5419
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5423
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5427
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5431
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5435
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5441
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5445
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5449
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5453
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5457
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5461
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5465
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5469
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5473
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5483
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5506
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5528
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5532
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5536
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5540
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5544
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5564
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5568
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5572
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5578
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5594
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5600
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5604
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5608
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5612
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5616
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5620
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5624
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5628
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5632
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5636
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5651
		{
			yyVAL.str = string("")
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5655
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5661
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5665
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5671
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5686
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5690
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5694
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5719
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5723
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5737
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5741
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5747
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5753
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5757
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5763
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5768
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5772
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5776
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5785
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5791
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5795
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5799
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5808
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5812
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5816
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5820
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5827
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5831
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5835
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5839
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5845
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5849
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5853
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5858
		{
			yyVAL.str = ""
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5862
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5870
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5875
		{
			yyVAL.str = ""
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5889
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5894
		{
			yyVAL.str = ""
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5898
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5903
		{
			yyVAL.str = "cascaded"
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5907
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5911
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5920
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5926
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5932
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5938
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5947
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5951
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5956
		{
			yyVAL.str = ""
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5960
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5966
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5970
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5976
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5980
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5984
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5989
		{
			yyVAL.str = ""
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5993
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6002
		{
			yyVAL.str = ""
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = " header"
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = ""
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = " manifest on"
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6019
		{
			yyVAL.str = " manifest off"
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6024
		{
			yyVAL.str = ""
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6028
		{
			yyVAL.str = " overwrite on"
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6032
		{
			yyVAL.str = " overwrite off"
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6043
		{
			yyVAL.str = ""
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6047
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6053
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6057
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6072
		{
			yyVAL.str = ""
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6076
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6082
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6086
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6092
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6100
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = ""
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6109
		{
			yyVAL.str = " optionally"
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6122
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6126
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6130
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6134
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6138
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6144
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6148
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6152
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6156
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6165
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6171
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6181
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6185
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6191
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6206
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6210
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6216
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6222
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6226
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6232
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6236
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6240
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6244
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6248
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6256
		{
			yyVAL.str = "charset"
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6283
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6288
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6293
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6300
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6303
		{
			yyVAL.empty = struct{}{}
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6305
		{
			yyVAL.empty = struct{}{}
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6307
		{
			yyVAL.empty = struct{}{}
		}
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6311
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6320
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6327
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6331
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6337
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6341
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6348
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6354
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6358
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6364
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6368
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6375
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6892
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6901
		{
			decNesting(yylex)
		}
	case 1776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6906
		{
			skipToEnd(yylex)
		}
	case 1777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6911
		{
			skipToEnd(yylex)
		}
	case 1778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6915
		{
			skipToEnd(yylex)
		}
	case 1779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
